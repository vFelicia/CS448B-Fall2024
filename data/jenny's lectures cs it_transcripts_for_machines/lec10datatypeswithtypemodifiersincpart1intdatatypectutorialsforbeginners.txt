so in the series of learning c plus plus programming language in the previous video we have discussed keywords and identifiers in c plus plus the next topic is data types so in this video we'll talk about why we need a data type what is a data type and what are different data types in c plus plus we use builtin data types primary user defined all these things we'll discuss in this video with the help of a program i'll show you practical also like how to use data types in your program how to calculate size of a data type what are different data types you can use when to use these type of data types right in which situation you should use this data type so these things will discuss in this video with the help of program i'll show you now before that just want to tell you about a job opening which vx4 weeks has brought for you guys i hope you are aware about geeksforgeeks it's a computer computer science portal for geeks they provide variety of services like free tutorials live courses online courses classroom courses webinars by the experts uh they you know provide frequent according competition also internship opportunities job opportunities so here yes they have they are hiring right now they have a job opening that is for android developer as you can see on my screen they have given all the details the experience you need is zero to three years means if you are a fresher you have zero experience you can apply up to three years experience you can apply right and the salary is 6lp to 12lp it would be based on your experience and the location would be obviously knowing other companies in noda so how you can apply for this thing the link i'll put in the description box of this video you can just click to that link and this page will be redirected now there you can apply now but before applying you just it's better you should read the jd the job description like what they need about this role what should be your responsibilities what should be your roles and everything what they want like the desired skills so first of all read this thing they have provided everything so you can just you know see the list of these skills and if you think that if you are a perfect fit for this role you can apply how you will apply for this thing the link i have told you i will put in the description box of this video you can just click to that link you will be redirected to this page and you can directly apply from this thing so all the relevant links and details you will find in the description box of this video you can go and check out now let's see what is a data type and first of all why we need a data type see let's take one example in your almera we have different different size of compartments like us big one there we put our clothes a small one maybe you can put your shoes or anything else right uh small one you know a very small compartment also within a large one there we can it's you can call it a locker there you put your jewelry or your cash it's not like that in that small one you put your clothes no so according to a requirement we reserve the space same you can take example in your kitchen different different containers are there everything like for masala small containers for you know putting you can say the atta a big one for putting some or for storing you can say rice big one so for storing different different kind of things we have different different kind of containers so with reserve space we take container according to our requirement what is our requirement same thing we want to store obviously when you write program or you when you develop any software there we have to maintain the software will maintain the information the information can be in the form of numbers or any information can be there in the form of image videos audios anything so if you want to store some numbers if you want to write a program like add two numbers i want to add these two numbers five and three so obviously you need to store these two numbers in the computer memory right and how you can store that variable we declare a variable right so we declare two variable in one variable we store five in second we store three variable is nothing just a uh named memory location the name of the memory location where the data is to be stored right so now how you will tell like your system that how much memory you need if you want to store like the these are small numbers if i want to store a mobile number that would be a big one large one if you want to store salary if you want to store a floating point number your marks if you want to store account number so according to that you need some space if you want to store a single character or any symbol like hash dollar right so according to your requirement we reserve some space it's not like that we want to store this number five only and we resolve or you can say i want to store this character a and i will resolve space of because this a one character can be stored in one byte only right a memory you can think like it's a cube which is having multiple blocks and each block is of one byte right so rather than cube i am just taking this as a suppose memory this is going on like this and this one box is one by equivalent to one byte this is one byte this is one by one byte like this this is going on this is our memory so if you want to store this number this one a it will take only one byte this is character right data type although we'll discuss these things later but let me just you just have to remember like a is a character it will take only one byte so this byte it will take it's not like that it will take only one byte and will reserve space of 10 bytes no that is wastage of space only so you have to tell that type of data according to that memory would be allocated to you by the memory manager right if i tell like i want to store this file this is what ink we know and generally in take four bytes so memory manager will allocate four bytes for us right so what data type will tell how we will tell like how much memory we need or which type of data we want to store we have to tell the computer now right through our program so in our program what we will write through which we can tell we write data types so data types will tell two things first of all which type of data you want to store in the memory second thing how much memory you need the size how much space you need how many bytes two things it will tell so how to write these thing in a variable obviously we will store uh you can say the information the data so first we will write data type then uh variable name and then whatever value you want to store you can store or that's it that this is just declaration data type and variable name that's it right so it will tell two things about this thing this variable name will contain which type of data and how much memory should be allocated to this how many bytes right so now what are different data types in c plus plus data types primarily you know categorized into three uh category first is primary data type or you can say built in or you can say fundamental data type these are already defined or built in in c plus plus programming language right second is derived which we will be derived from the fundamental data types third one is user defined that we define according to our requirement three categories are there right let me just list down these things so these are three mainly categories primary or you can say built in or fundamental here we have eight float double care these are in c also what are different in this w care underscore t this is for white character bool for true and false and void means nothing these are primary data types so builtin data types one by one we will discuss these data types with an example these are derived we generally derive these things from primary data types like array array of integer array of numbers hero floats area of characters like string you can say pointers function reference user defines our class structure union enum typed so these things derived and user defined these are complete you can say i know topic so these things will discuss later one by one in detail right now our focus is on primary data types because for writing programs obviously we need builtin data types right so first thing we will discuss int and see we have some data modifiers as well so we have modifiers signed unsigned short and long four data modifiers these are known as data modifiers modifier means they can modify something so you can use these modifiers with these data types so they will modify something into these data types now what they will modify what is that something i'll show you right so first let's take example of this one into data type it will take four bytes on 32bit machine 64bit mesh machine you know it takes four bytes and on 16bit machine it takes two bytes but on my machine on my laptop it is taking four bytes generally it takes four bytes right in traditional compiler it takes two bytes but we consider it now take four bytes if you want to find out you can just write down a program you just calculate the size of the end how to calculate i will show you in my program right on your machine how much byte it is taking so it means simple numbers like 0 minus 1 23 43 1 2 3 4 these are integers negative positive or 0 simply 4 bytes it will take 4 bytes means how many bits 32 bits right so let's take these are 32 bits one byte pins eight bits so it into four thirty two bits so see let's see the range the smallest number you can store in these bits is all the bits would be filled with zero zero zero so the smallest number would be zero right i am talking about unsigned int we are not taking negative numbers so unsigned in see unsigned is data modifier if you have used this unsigned with this end means it will modify the meaning of this end modify means now it can store only positive numbers and sign in positive numbers right now maximum number what you can store just put 1 1 1 1 in all the 32 bits and that number would be what see this number would be 2 raised to the power 32 minus 1 so the range for unsigned it would be this now why this 2 raised to the power 32 minus 1 let's take we have suppose 2 bits 0 and 1 only so how many combination you can made 0 0 0 1 1 0 1 1 that's it so maximum number is this one this would be 3 in binary we write 3 something like this how you can calculate just divide this by 2 2 1 remainder would be 1 again we will you will divide zero and one so once you'll this to zero stop now just take from this side to this from bottom to up one one one one this would be three in binary so maximum number is three means two raised to power two minus one four minus one if we have we have three bits right then how many combination can be there zero zero zero i hope you can you know these combinations right so now the maximum number you can store is this is uh sorry not 8 7 it means 2 raised to power 3 minus one three bits two is equal to three minus one that eight minus one seven so same you have 32 bits so maximum number you can store is two raised to about 32 minus one right so this would be range for unsigned in if you want to store negative number also so for signed in just use the data modifier signed signed in the range would be negative also 0 also positive also so on negative side we can store see for signed one bit this bit would be used to represent the sign msb most significant bit it's whether it's positive number or negative number right so one would be bit would be reserved for the sign so remaining bits are 31 bits only so the range would be minus 2 raised to the power 31 to 2 raised to the power 31 minus 1 so for positive side 2 is about 31 minus 1 the largest number negative side the largest number is 2 raised to power 31 not minus 1 why so we can see 0 we have minus 0 and plus 0 but it doesn't make any sense we only write 0 no negative 0 right so we just remove this negative 0 rather than this negative 0 we can store one more integer negative integer negative number that is why this is 2 raised to the power 31 but for positive side from 0 we will count so 0 to 2 raised to the power 31 minus 1 i hope you got this the range the signed range right now this is unsigned it and signed in now another modifier is what it will take four bytes suppose i want to store a small number only right that suppose i want to store only like in a 5 or 10 this 10 in binary would be 1 0 1 0 so it would require only you can say four bits so maximum uh the smallest is one byte the memory one memory block could be of one byte right so we have to allocate at least one byte fine but now rather than if we define it int memory would be a located four bytes but this can be stored in one byte also so three bits are wastage of memory right so yes one more modifier we can use with it that is short small number if you want to store small number use shortened it will take two bytes in memory the minimum it can take is two bytes not one one byte will take character right so but rather than writing in here we just declare it short it rather than four it will take two bytes it will save two bytes memory space right now short end will take two bytes means 16 bits with short also we can use two thing like signed short and sorry unsigned and signed shortened so range of unsigned would be same zero two six five five three five six five five three five is nothing but two raised to power sixteen minus one right sign would be minus three two seven six eight two 3 2 7 6 7 it's nothing but 2 raised to power 15 to 2 raised to power 15 minus 1 and the logic is same as we have discussed in this i hope you got the logic why this range so this is for short and short signed and this is for unsigned shot and this for signed short the range right one more modifier we can use that as long long end long end will take four bytes same as int right now in long also we have unsigned long signed long so range would be same because the size is four four byte for indulge or four bytes so the range would be same only right if you want to store suppose a phone number right if we write this number the range of this would be so see i am writing the range for the signed end minus 2 raised to the power 31 would be would be equivalent to this number 2 raised to about 31 minus 1 would be equivalent to this number so then you don't have to remember this range you can calculate 2 is power 32 and minus 1 and you can write down this thing but if you want to store like a phone number right then we cannot use this end right because phone number would be far greater number than this range so for that you can write down two time long long long now this would be of size would be 8 bytes now in this we can store so 8 bytes means definitely the range would be much more than this this range right so let me just show you right how to use this and i hope the range is clear to you guys how to use data modifier is clear to you guys and before writing the program you must remember you know you must have the idea about the the circle the unsigned circle let me just draw the circle here sign circle and unsign circle based on that circle we will write down a program and then you will get why you are getting these kind of values the output so let me just draw that circle first here see this is circle for unsigned short from 0 to 1 2 3 4 like this and the range is 6 5 5 3 5 maximum number this is for signed short means 0 1 2 3 4 positive side up to 3 2 7 6 7 negative side minus 1 minus 2 minus 3 till minus 3 2 7 6 8. you just draw these circles i'll write down a program why you are getting that output from that program you will get if you have idea of the circ so first of all draw this thing then now just let me show you some practical part so this is a program right there is no rocket science we don't have you know we haven't written any complicated logic so that's why i have already written this program just to save the time same the header i o stream dot h we are using the name space std then main in main we are declaring some variables different different data types we are using that's it and how to write that thing i already told you like first is unsigned short the name of the variable i am taking you short underscore in that is name of the variable the value 56 then signed short you do not have to write unsigned short int if you want to write you can write that is also fine but unsigned short that is also fine right signed short if you don't write anything like int a i want to store this thing int a by default it would be considered as signed in right by default then long end time taking then long long in time taking and this thing i haven't discussed so let me just clear out this thing this thing will discuss later right so now first thing i am just printing the size of these data types right size of shortened size of wind size of long size of long long size of or let me just comment out this we will discuss this thing in next video maybe or after that right then we have size of long long we have printed two times so let me just clear out this thing also okay shortened int long and long end fine now we are printing the values unsigned short signed short long end then we have long long end then let me just clear out this line also right and then i am just printing value of a right okay now that's it with return 0 we are ending our program and let me just run this and show you the output see size of short end is two bytes it is telling the size and bytes two bytes size of int is four size of long is also four in my machine long long is eight the values it is printing unsigned short is fifty six you can see sign short minus x long end you can see the value long into value is this four five six seven eight nine long long end and the mobile number i am taking any mobile number and this int a this thing if in this int a you take mobile number see i'm taking the same mobile number that we have taken triple nine one six five four three two one it's not my mobile number right now it will print any garbage value because int a the range of int is it will be considered as signed in so signed into range is not that long so now it will print c overflow the warning is overflow and it will print a any garbage value so if you want to print the long number like a mobile number you just take long long in 8 bytes yeah you can print that number see this long long end is printing this number mobile number correctly right now see what i want to tell you unsigned short the range is zero to six five five three five but if i want to print six five five three six what it will print it will not give any error just a warning and it will print something now what it will print let me just show you see the warning is first of all you just have to see the warning okay two warning it is giving first of all let me just uh you know do this thing the number that's it now let me just run this and see it will give one warning now see large integer implicitly truncated to unsigned type this this unsigned short it is out of that range it is giving warning but what it will print the unsigned unsigned short value is zero now why zero it is printing here because see in the circle it will it will count you just refer to the circle 0 1 2 3 4 like this the last value is 6 5 5 3 5 after 6 5 5 3 5 would be 6 5 5 3 6 right but at the place of six five five three six in the circle we have zero again we reach to zero so it will print a zero that's why i have you know uh you know told you that please note down the circle if same for signed short if i print minus 3 2 7 7 3 2 7 6 9 so it is out of the range the range is minus three to seven six eight but i am printing nine so what it should print according to you let's run the sent same it will give warning overflow thing type of thing and for signed short it is printing three two seven six seven but actual value is minus three two seven six nine right same just refer to the circle minus three two seven six eight after that it would be minus three two seven six nine but rather than this thing in the circle we have three two seven six seven the same value repeating you know in the circle we are moving that is why it is printing three two seven six seven so this type of thing you can try out if you have those circles you can try out these things if you find out like if you are not getting something the output why you are getting that output you can ask me in comment box or maybe you can just take the screenshot and you can send me on my instagram account right i hope now this range and everything is clear to you guys and the data types the data modifiers how can you use with int right if you have any doubt you can tell me you can you know ask me in comment box right so that's it for this video now so i think it is clear to you the basics of data type like what is the data type why we need a data type and inter data type is clear to you guys right now i am expecting a question from you guys right if you have you know uh listen this lecture carefully then definitely this doubt would be in you guys if you are curious so first of all i'll read out the comments after uploading this this video and then definitely i'll give a shout out to those to that student who will you know ask that question that i am thinking that you will ask i think that question should be in the mind of every student if you will not ask that's that question i'll answer that question also in maybe next or after that video right later videos so now in the next video we'll see float data type so now in the next video till then bye take care