in the series of learning programming in c we are discussing arrays in C we have discussed all the basics about arrays like what is array Declaration of array initialization of array memory representation of array elements as well as how to access array elements so I have just written down all the points in brief about arrays here you can take a screenshot or you can it's like a notes for you these contains you can say these are character characteristics of arrays or you can say some here we have some advantages of array as well as drawbacks of using arrays right like I I think no need to uh explain all the points here because these are very simple I have explained clearly all the points from here only you can find out the advantages and drawbacks like advantages is what if you want to store more than one data item then you can use arrays right it's simple to use arrays but Drac is what it contains only it can store only same type of data item like if integer is array then all the data items should be of integer type if character array is of character type then all the data items can be of character type all the elements are stored in continuous memory allocation Intex should be started from zero one drawback is also there like what if size is declared you have declared the size of the then you cannot change it so it is having fixed size problem accessing of array of element is faster using index of array how we access just write down the name of the array and here in bracket index like index always start from zero so first element if you want to access then a of zero so it is faster Random Access is possible directly you can access any element of the array in constant time so this is what advantage is of array here it can store data in multidimensional form in 2D array and multidimensional array 3D array also right so this is Advantage but inserting and deleting of data items in a in an array is tough It's coly right how that we will discuss with the help of program this is you can say it's a drawback of array here the one point is what no bound checking in arrays in C now what does this mean this is what it's a drawback suppose you have declared a array of size 10 so index would be from 0 to 9 but if you want to access a of 10 then it should give error right because there is no index of 10 but it will give garbage value so no bound check checking bound boundary is what 0 to 9 but it is not checking the boundary in C it it will not give any error it will give what any garbage pin we will see practical also of this point no bound checking in see so I guess this is clear now we will discuss one or two programs on arrays so now let us discuss some problems on arrays first of all I'll discuss the logic the problem here on the Whiteboard then I'll show you on my laptop right first we will discuss a simple problem like how to read data in an array at run time although we have discussed it but next thing is how to print all the elements of array first of all how to print simply print then we will discuss how to print in reverse order and then we will see some complex problem so see so I have already discussed like how to uh initialize are at run time I guess you can already write down the header files and all I'm not writing the complete program I'm just going to start from the main function right and here what I'm declaring array simple a of size five I'm not initializing this at compile time you can also initialize it at compile time I'll take input from the user right so now for that what one for Loop you will use I is equal to 0 and I less than number of elements are five and I ++ before using this I this is what of type integer so we will take what a variable I here we will declare a variable I here and how to take input using scanf how to read data using scanf function we know percentage D address of what name of the array is a and on I location we want to store means I would be from 0 to five so all the five location in the all the five location we will store using this thing right now see uh before printing just I'm writing what when this would be compiled then an array how many bytes would be allocated if you take two bytes then 10 bytes would be allocated the size of integer if you take four bytes and some compiler it takes four bytes then 20 bytes should be allocated right so now suppose address is 100 I'm taking four bytes 104 then 8 12 and for this 16 right and index would be from 0 1 2 3 and 4 and if you we haven't initialized it then it is containing some garbage value if you print now then some garbage value would be printed right and one variable I suppose the this memory address for this is 2,000 right and this also having some garbage value right now right now when compiler will come here for I is equal to 0 I would be initialized with zero condition true enter scan F percentage D where the data would be stored address of a of I I value is zero first of all so address of a of I is what 100 right this address Base address is 100 and where it is going to be stored this a is what it will act as a internal pointer it is going to store 100 here and the address of this a also some address like you can uh take th000 any address address would be in hexadecimal form but just to make you understand I'm taking simple these addresses right and this is what you can say pointer to the first variable of the sing right address of a ofi a of i z a of z address is 100 at this address First Data will be stored whatever you will enter so that would be stored suppose I have entered 15 now I ++ now I becomes what 1 condition true again enter address of a of now I is 1 a of 1 address is what 104 right so the next data would be stored here suppose I have entered here 16 right so I hope you can continue this process now I ++ now I becomes two again condition true a of two address of a of two this index now data would be stored here and suppose I have entered minus1 0 and uh 15 again like this we have entered once I value becomes what five means I five less than five no it will exit from this four Loop and will come here now I'm going to print the S how you will print we will take another four Loop right you can take any Loop while do I again I would be 0 to I less than I less than 5 if you write I less than equal to then you should write four right from 0 to 4 and I ++ now print all the values we use what print a function for reading we use scan a function data is of type integer so percentage uh d and a of I simply you have to write this thing right now again one for Loop now I would be again initialized with what zero condition true enter print F percentage D which type of value integer value a of I a of Z right now A of z address how address would be calculated how you can fetch in the previous video I have told you the formula what Base address plus what this um index index means I we are taking I into size of data type data type is integer so size of in so now here Base address is what Base address is stored in a base address is what uh that 100 plus here I value is first 0 into size of integer is four means address would be calculated 100 100 so a of I means 100 here from here the value would be first and the the data 15 would be printed on your screen I hope you got it now I ++ 1 again condition true enter here now a of 1 this is how we access the element right now how this address a of one address would be calculated Base address is this one into uh + 1 into 4 that is 104 that is 104 from here data would be fetched accessed that is 16 so now 16 would be printed but if you write here sln then the data would be printed in next line otherwise data would be printed in same line so you will not get I know it would be very uh Clumsy type of thing so better to use slash and new line 16 now I ++ I becomes for two I guess now you can repeat the process and this is how all the data would be first right and once I value becomes what three then four once it becomes five condition not true exit from the loop and that's it end of the program right so this is how you can print simply the elements of aray now I'll show you the output also on my screen but if you want to print print in reverse order from here 15 0 1 16 15 then how you will print first of all think the logic what you want in that case directly I want to print first of all this data then this then this then this then this so now at first what kind of logic come to your mind scanf this for Loop would be same because it is for reading purpose you have to change this for Loop only this is for printing purpose right so now rather than starting the index from zero first of all you want to go to which index the last one right so directly start the index from what I is equal to here 4 if you start from four then it should be next three then 2 then 1 then zero so here should be I minus minus Simple Thing condition is what you will move this side till I becomes zero if I becomes minus one you have to stop so the condition should be what I greater than equal to 0 and simply print AI That's it now see the working of this thing first of all here this I value would be four in this variable four would be stored is this condition true four greater than equal to Z yes condition true enter into this room print F percentage d a of I a of I is 4 directly a of4 you have to access so now how Base address would be calculated sorry the address A4 would be calculated Base address is 100 plus index is 4 into size of in is 4 means 1 Z uh sorry 11 6 directly you can access this 116 and what value would be printed 15 IUS minus sorry I becomes three now right so condition true again enter here a of I a of three again address would be calculated I becomes three address would be 112 access this thing zero would be printed I minus minus I hope you got my point now once I becomes what then two then one then zero would we printed the one once I becomes minus one condition is not true exit from the loop this is how you can print in reverse order so now let me show you the output of these two programs on my screen so now let me create one more file for you I'm writing what read array okay dot C first of all header file we will write then main function and then we declare array array name is I'm taking only a as well as one variable Loop variable I right and one for Loop what to enter first of all to read the array right less than five and I ++ so for reading purpose we we will use what scanf and percentage D I hope you know the syntax address of a of I right and then for printing purpose again we will use one more full loop and I is equal to 0 till I less then five and I ++ right and for print F we use which function print F so I I'll write array element at I'm going to print index value also at index like zero index one one index second index like this percentage D is and one more percentage D for actual printing the value so first percentage D will will be replaced with I value and second how to access a of I the actual value right and that's it so I'm just writing here one more print f it will ask like uh at starting enter the array elements right and uh now let me just just run this program and it should ask you enter the array elements first of all so see it is asking AR array elements I'm entering 1 9 0 2 4 5 and see okay uh I'm I'm going to decorate this a little bit slash in for the new line right and now you will get it better like 1 4 3 5 2 oh sorry sorry sorry and uh now run this program and here I'm going to write minus1 3 4 5 6 and see okay we I have to save it first of all and I haven't enabled that auto saave option so now again I'm going to run this program and it will ask ENT elements minus 1 0 5 6 7 and see a element and index zero 0 to 4 it should be so minus 1 0 0 5 6 7 it is going to print right so it is in forward and if you want to print in reverse order then just a little bit you have to change here in this also I'm adding one more for Loop so I should be started from size minus one last index I want to first of all exess I should be 4 I greater than equal to 0 and I minus minus sorry minus minus right and here simply print print F array element at index same line percentage D is you can copy also and one more percentage D because two values we are going to print first of all I value and then a of I value right I hope we will get the answer right now I'm going to run this program and it is going to ask enter elements of 9 5 6 7 and 8 see it is first of all it is printing forward 95 6 7 right and eight last one and then in reverse order again I'm going to write what slash in here then you'll get it better so again let me just run this 1 2 2 3 4 5 see first of all from 0 to 4 1 2 3 4 5 and then 5 4 3 2 1 right so I hope you got this one so now here you can change something like this if you don't declare the size here I I have told you like if you will do something like this you don't declare the size here then it should give error right and obviously if you run this program then it will give error see it is going to give some error here you have to give some output so you can try out those different different things if you're getting the uh you know error or not right and you can initialize here then you can initialize at run time and everything you can do here I have just shown you the program fine and here you can also write down something like this 3 + 2 that is also fine right it is not uh going to give you any error okay I have to save it first of all now let me just run this and see it is asking enter number of elements so you can write down any expression also which is positive uh integer right so you can try out all the things and you can tell me in comment BX if you're getting uh the things I have told you in the program like declaration and initialization videos those are correct or not right so you have to try out all the variance here so now in the next video we'll see a more complicated problem like um we will take marks of maybe five or 10 students we will what calculate average of all the marks first of all we will sum all the marks then we'll calculate average using AR so now I'll see you in the next video till then byebye thank you