hey everyone I hope you all are safe and doing good so in the series of learning Python programming language we are discussing types of inheritance till now we have discussed singer inheritance multiple inheritance and multilevel inheritance right so the next is hierarchical inheritance this thing we'll see in this video with the help of proper exam right so what is hierarchical inheritance see in single linearities 1 pin class one child class in multi multiple inheritance we have more than one parent class one child class right in multilevel we can also derive the child class can inherit Properties or you can say attributes or methods from a derived class as well that is multilevel heritage hierarchical inherited we have one and from this class you can derive multiple child class child one child two up to n so this is hierarchical inheritance right like our father or our parent and son and daughter like this so from one parent to child like this or two or more than two child means more than one child one parent and more than one child it can be any number of child so this type of thing is known as hierarchical inheritance now let's see with the help of program okay so let's create a new file radical inheritance dot py so we will take one class okay you can write down this thing also right and because here the root class or the base class all the classes are object class right now we can use some builtin functions and properties of object like a super function in it function like this right or if you don't write any in bracket No Object class then automatically in Python three point x in Python 3.x version automatically it would it will inherit object class right okay now we are having only one class human and let's suppose no first let's take a function now let's have one more class and that class I am having male and this male is inheriting from human class right mail is child class human is base class for super class or parent class vacancy and here we have one more method so one more class I'm going to take and that is female so we know male and female both are human right so both are deriving from the same class that is women class all the properties and attributes whatever in human class or human can eat so obviously male can eat female can eat right so let's have female class and we are also deriving this class from Human class only so we have not two child class and one parent class and this also having its own property like sorry on methods and attributes so I'm just taking method here like I get code so only two classes I am going to take okay now let's create an object of first female class and I'm taking like female underscore one the object name and female sorry it's not false like the class name should be Capital like it's convention if you take small F that is also fine but we follow Pascal case convention while uh you know naming a class so the first letter of each word should be capital so let's take here from female class now with help of this object female one with the help of this object what you can access see dot we can access it from Human class work from female class and init function would be called from object class right is there any init function in female no female is inheriting from Human inhuman also who have a new function no so it will search The Base Class of every class it means the root class is object class so that is why it is driving unit from object class now it can exist with this we can access only eat sorry don't eat from Human and work from female you cannot access this sleep from male right because male and female they are not having any connection here in the form of you know right now in the form of inheritance hierarchical inheritance I am saying this because they are having no like relationship we cannot access this method or attribute of mail class using female class object but you cannot access attribute or method of female class using male class object right but both can access properties of human class so if you want to print like eat yeah that is fine now it will print I can eat see right okay Now using male class object also if if you want to create a mail class object as well and like this so with the help of this object mail one you can access see it from Human class same thing sleep from male class no work method you can access from female class and eat from object class right so I want to access sleep the number sleep will print I can sleep whole day or same thing if you want to access like heat that is also fine let me just show you see two times I can eat I can eat one for female one for male like this and if you have suppose I am having now some attribute method I guess you know methods now we have attribute and in human I am having two things every human will have their name and age so like self note attribute name I'm taking same as parameter name name you can take different as well it's up to you a is equal to h two parameter I'm going to take right and suppose let's take one more uh here like what function show details right and this function will simply print from where you can access this name obviously self load name attribute sorry and comma age also we can access self dot we have an attribute age like this two function I'm having in human show detail and eat right so using female see let's comment out these two lines we are just creating female object right now let's run this see what will happen now you will get an error in line number 15 in line number 15 when you are creating this object you are calling this Constructor in it human dot in it missing two required positional argument name and age because now which init function will be called let's if you want to check out you can just print here here calling unit from Human class so you will get to know now see get anything because still we have an error while calling this we are calling init from human class so in human class any function is having name and age so you have to pass two parameter while calling while creating this thing right and if suppose I create like maybe Gia and just a is two parameter it will not give any error see calling in it from Human class and I can eat right and with help of this female object you know we can access these attributes name and see name and H2 field if you want to print age it will print 20. sorry to print you have to write down print statements okay now it's it's fine age is 20. like this right so if there are some attributes some methods in one class and more than one in more than one classes I want to access those things so you can use this type of inertness hierarchical inheritance right and see supposing mail as well I am having this its own edit function so mail obviously male is having name and age so these both two things we can access from Human class name and age no need to Define its own right so name comma age and one more thing suppose I'm taking location right so to initialize name and age simply call this in it from Human class super class so one way is just write down the name of the class dot which function you want to call init and you have to pass cell and then the parameter name two parameter name name and age right so if C this name and age this name it's not compulsory should be same as this name if you take like M underscore name that is also fine but here you need to take M underscore me these two parameter name should be same right M underscore H you need to take M underscore H okay and one more attribute it is having suppose this is location and same name I'm taking location right so right now it will not give any error because C it's working fine although maybe you will say I have enough three parameter then it should say you have to pass three parameter but no because female is inheriting from Human class right so you know only to worry if human class you will add one more parameter then it will give error right so if you create an object of male class then let's comment out these thing and with help of male 1 it will give now error because it will create when you are creating this init function will be called and the mro is what first it will check in mail class only if you want to print the mro then also you can print like print and for mail class mail Dot mro let's print this okay first you need to figure out you need to you know correct this thing while creating this because we are calling in it from mail only so three parameter name age and location you need to pass while creating the object so male name I am taking simply may be like Ram let's take our capital and age I am taking maybe 34 and what is next thing location location is like maybe Delhi let's run this see calling in it from Human class see it is calling in it from both the classes women as well as male if you want to check out let's just print this statement here as well let's run this see male human body classes first it will check in mail class then human class and then object class which is root for all the classes so for in it it will check first in mail in mail we have in it yes so it will call init function you have to pass three parameter then it will print first line this calling it for mail class then it will call init from Human class so control will go to hearing in it in this unit function then first line it would print this then name and age it will assign right self here self means referring to the object of mail class in female as well let's have its own unit function and in here obviously it will take name and age every female is also having name and age from Human class we can inherit one more thing one more attribute we can take maybe like can dance so for this for name and age to initialize name and is just call in it from Super class or human class just call to Super function dot what you need to call the name in it no need to pass self here just you need to pass the parameter name name and age foreign now just comment out these line and let's create female object so now you need to pass node GI and 20 only it will give error C while creating this you are missing one required positional argument Can Dance so can dance means it is expecting either true or false so I'm just writing here true it will not give any Arena calling unit from Human class because it is calling in it from both female and so let's print this line as well in female class so it is calling from female class as well as from Human class I can eat and 20 right like this and if you want to show the detail of female so let's define one more function here there f okay and now it should print name age as well as can dance so no need to print like name and is again you can just call from Human class show details right and there you just need to pass self that's it and for third we can print Excel do no dancing right and using female object I don't want to fold the seat I want to call see show details you can call either for human or you can call show detail for female so let's call this thing let's run this calling in it from female as well as human then it is shown the detail name age no dancing through and age 20 for this line like this you can I like call method from Super class as well right so you can add your own functionality as well as you can call whatever in super class by just calling the superclass function either with the album super function like this or with the help of the name of that super class right so you can try this out you can create more than two classes as well from the same base class from same human class right so I hope you got what is hierarchical inheritance so one assignment for you is now see you have to create one super classes you can take a person class right you can take some attribute there to attribute and two methods and like in a university we are having student as well as faculty both are person or maybe human so from person class you are driving student class and one more is faculty class right and student classes having its own one more attribute and its method and faculty classes also having its own some attributes and methods right so you have to create like these two classes right and you have to access the super class attribute and methods the person class attributed method with the help of student object as well as faculty object so this is your assignment you have to try this out okay you can just write down that simple code in comment section so in the next video we'll see Hybrid inheritance so now I'll see you in the next video we'll never buy take ticket