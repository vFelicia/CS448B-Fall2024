in the series of learning programming in c we are talking about operators in c we are done with four type of operators arithmetic assignment increment decrement operator and relation operators in the previous videos now in this video i will be talking about logical operators in c what is logical operator uh the types of logical operators why to use these operators how to use these operators the syntax of writing logical operators and when you use these operators in a program then what output you will get everything we are going to discuss with the help of a program right and this video is brought to you by an academy because an academy has started a series of free special classes for the aspirants preparing for gate 2022 and gate 2023 these classes will give you a detailed and structured roadmap of approaching each subject in all the branches and these classes have already been started from 20th of december as you can see the calendar over here in these classes their best faculties will introduce you with the batch agenda and they'll give you that overview of the entire slavers for gate exam date 2022 and gate 2023 so you can see here the date the name of the educator and the subject they'll be talking about on that day it's like you can say intro class for that subject in in that class uh they'll discuss some important topics for the gate point of view as well as ugc net point of view or also discuss the exam structure they'll give you an overview of a syllabus of that subject and these classes are free you don't need to pay anything for these classes and if if you like these classes you can go for the paid subscription after paid subscription you will get a complete and structured course for your gate exam right and if you will use the code jkl10 you will get 10 discount on your paid subscription so if you are interested you can go for it better to start your preparation early all the details the link and the the referral code i'll put in the description box of this video you can go and check out so now let us discuss logical operators in c first of all three types of logical operators are in c one is this one one is this symbol is this and one is this one this is logical end this is logical or and this is logical not these two are binary operators this is unity operator it requires only one operand these are binary because they requires to operate now logical operators are used to test more than one condition relational operators we have discussed there we will we were checking about one condition like a less than b a greater than b or something else one condition we will check in using relation operators but logical operators are used to test more than one condition now how you use these operators c like this you can write some conditions a greater than b and logical and c less than d we are checking two conditions here right so they are used to check more than one condition now what output you will get when you use these operators the output will be either true or false true means one or force means zero now based on what you will get output based on these conditions first of all these conditions would be evaluated these expressions you can say these are expression this is relational expression relational expression right and this complete is known as logical expression the expression which is containing logical operators as well as you can say some operands and operators or some other operators this is that is known as logical operators logical expression sorry or you can say it is a compound relational expression or you can say these are used to combine two expressions right now see first of all we are talking about this logical and operator with one example now this is how we use logical and operator we have two expressions one is the side one is the side and it is not compulsory that both the side we will have expressions we can also also write like this simple variables and b you can also write constant like 10 and 5 it's up to you both side the operands can be variables constant or any expression arithmetic expression relational expression it's up to you right now see now what output you will get based on these expressions the output would be either zero or one true or false right now first of all check these conditions see or you can say like check the precedence in this expression we have one operator one and one three operators we have relational operators are having higher precedence than logical operators means higher priority so first of all these operators would be evaluated right this these conditions would be checked first of all now you can say this less than this is having higher priority than equal to so first of all check this condition b less than a b is 5 5 less than 10 no no means false so it will give you 0 now this condition a equal to equal to b is 10 equal to 5 this is equality operator no so this also will give zero now the operands for this logical end is what one is false this is also false means zero and zero now finally the output would be what zero what output you will get in and if both the operands or both the expressions are true then only it will give true value otherwise you will get false if any one is true one is true one is false then also it will give you force to give a true value for logical and operator all the operands must be true this you need to take care now they see output of this one a and b a is what 10 b is what 5 now here we are not having 0 or 1 that is fine other than 0 if you have any number it would be considered as true true means one this is true this is true then it will give you one now ten and five this is true this is true because these are not zero it will give you one if i write here ten logical and zero at this time it will give you what false zero because one operand is zero one expression is zero for getting one value true value all the operands must be true see let us take this example now suppose a value is 10 this is 5 and the expression is this one and we are printing the value result whatever the expression will give either 0 1 that would be stored in result and i am printing this result percentage d format specified because i am printing integer value either 0 or 1. now check the conditions all conditions if all the conditions are true then only it will give 1 check this condition a greater than b 10 greater than 5 yes true then it will give you 1. logical end b not equal to 10 yes b is not equal to 10 it will give you true 1 and b less than 11 yes it is true it will give you 1 and a greater than 5 yes a is greater than 5 it will give you 1. so now all the conditions are true then the result would be 1. finally output would be 1 and that would be assigned to this result if i write here like this a is less than 5. now all the conditions are true but a is less than five a is not less than five it will give zero now the final result of this logical end would be one operand one is zero so it will give zero so there is in result we will we will have 0 and the final output would be 0 so if you check here the condition then you can say for logical end if both the operands are 0 then it will give 0 output if 1 is 1 then also 0 if this is 1 this is 0 then also 0 if this is 1 this is 1 then only it will give true right now logical and operator logical sorry logical or operator and one more condition one more thing one more rule about and operator is what see if i am taking this expression for end if this is true means one then only next condition would be checked after this logical end second one right if the first condition is zero then in logical end it will not check the second condition final it will directly give output zero why so because if one is zero then ultimately it will give output zero it will uh give you false so no need to check the second one so this is only one would be check if it is 0 then it will give 0 if it is 1 the first operand then only it will check the second condition in logical end now what about logical or operator now this is logical or operator here also if see this is one operand this is another operand this is what logical expression now what is value of this one a greater than b ten greater than five yes true so it will give you one or b equal to equal to four is b equal to four no this is false so this is one this is zero means this is true this is false now logical or operator will give you output what true that is 1 so if any one operand of logical or operator is true then final result would be true when you will get 0 if both the operands or you can say all the operands are 0 then only it will give you false or it will give you 0. if suppose here i'm writing like this is less than b now is 10 b is 5 is a less than b no it is 0 it is also 0 then all then only it will give 0. so you can say that the truth table of this o is what if both the operands are 0 then output would be zero if any one is one then output is one if this is one then also one if both are one then also one let us discuss about this logical not operator this already we have discussed when we are discussing about unary operator it will take only one operand right and what it will do it will complement that value of that operand or that expression or you can say it will negate the value of that expression or the operand like if i write here negation of suppose i am writing here 5 now i am using here 5 5 is what it's not 0 it's not 1 so any value other than 0 is considered as true means 1 so if it is true then negation of true is false so it will give zero if i am taking negation of zero means it is false but i am using this complement operator logical not so final output would be 1 so it will give if the this is true the expression is true the negation of that expression would be 0 if the expression is false the negation of that or you can say the logical not of that expression is true if you are using like negation of a greater than b this expression the operand can be any constant any variable any expression here also the operands are hair expression but it can be any constant it can be any variables like in logical end so now check this condition a greater than b is a greater than b yes it is true it will give you 1 and finally logical naught of one is zero so final output would be zero now let me discuss all these operators with the help of a program and one more point about logical or operator is what see the truth table is what zero zero is zero zero 1 1 0 1 1 is 1 1 1 and 1 so greater than b or suppose b is equal to is equal to 4 a was 10 and b is equal to 5 now see the first is what a greater than b means yes it is true then in that case it will not check the second condition the final output it will give 1 why so because for true value only one operand ah must be true and we have got one operand true so no need to check another one if it is zero then also output would be one if it is one then also output would be one but if suppose this is a less than b now 10 is 10 less than 5 no here we have 0 in that case it will check the second expression b equal to equal to 4 no it is also 0 then it will give 0. so these two rows 2 rules you need to take care about logical end and logical not these are short circuit rules right in and if first one is 0 then it will not check the second one final output it will give zero in logical or if first is one then it will not check the second one final output it will give one right now let me discuss these with the help of a program now this is a program a is for 6 and i'm taking one result and in result i am taking this logical expression i'm writing here printf jenny it's ok you can also write it is not like that here you can only write that expression or any variable constant this also you can write now what should be the result see first of all a greater than b this condition would be checked is a greater than b 4 greater than 6 no it is 0 it will give false and if it is false then in logical end if first operand will give you false the first expression would give you force then it will not go to second one final output would be zero would be stored in result and final output would be zero let us change this one if i'm writing here a is less than b now is a less than b yes it is true then it will go to second one second is what printf journey here we are not having 0 other than 0 means it is true right so it is also one one and one logical end it will give one to result and it will print one and it will also print when the this condition this expression would be executed would be evaluated then it would print printf jenny so jenny would also be printed and after that you will get one if you will use here slash and then one would be next line you can check out this one if it is correct or not if i'm wrong then you can tell me in comment box and suppose if you are printing like this now i'm writing like this see this why i'm writing just to make you understand the the function of this logical end and or like if this is one in logical if this is zero in logical end it will not g it will not uh go to that second uh open operand right so now see here we have two logical uh logical operators precedence is what this is having higher precedence than logical or operator now first of all this would be executed now here we have relation that relational operator so this is having higher precedence so first of all this would be executed a greater than b is 4 greater than 6 no this will give 0 right and in logical end it will not go to this one now finally the result would be of this expression the result would be 0 now we have logical that or if it is zero then in logical or it will check second one second if we have printf uh lectures if we don't have any false value that we don't have zero so it will execute this one so here it means it is one so finally zero and one in logical or it will give one one would be stored in result and one would be printed and when this statement would be executed then first of all lectures would be printed then you will get one output now if i write like this now i have modified it a little bit up to this lectures we have same after that i have added logical and printf jk now again you need to tell me what is the output of this program and one more one you need to tell me exam out of this one and another just replace it with logical or for this also tell me what is the output what will be the output now next next example is now if you have this one if i want to print this one for logical and negation logical not zero then what should be the output see here we have two logical operators in one expression so check the associativity what the precedence is so sorry the precedence of these operatic check first of all the priority the precedence and precedence the priority of logical not is higher than logical and operator so first this would be executed logical not 0 this this will will give 1 means negation of 0 is 1 that is true now it would be executed 4 and 1 this value is other than 0 so means it is true true and true it will give 1 this one 4 and logical and 0 so it will give 0 because this is true this is false so it will give 0 right now i'm taking in this example increment operator also so so that you can revise these operators a value is 10 b value is 5 so when program when control will go to this line first line of the main function memory would be allocated to a and b 2 bytes here we have 10 here we have 5 and one as variable is what result we don't have anything in result now second one now first of all evaluate these expressions now this is what post increment so first post means that original value would be used here in this expression and then the value would be modified after the execution of this line original value of a is 10 so 10 would be used here 10 means true so this side we have to do a greater than b is a greater than b yes a is ten b is five so this is also true means one true and true it will give true that is one one would be stored here so one would be the output and finally what is the output of this a what output you will get after the completion of this line now a plus plus now a becomes 11 so now what would be printed 11 and if you take like this now here we have logical or operator now check a less than b yes this is a is less than b sorry not a is less than b no this will give force but it is logical or in logical or if first is 0 then it will check the second one means it will execute this one now a plus plus now it is post so first of all 10 would be used 10 is true so finally it will give false entry true then finally it is 1 and then after the execution after execution of this line a plus plus now value becomes 11 so now here you will get 11 and if here it is a is greater than b now in this case what would be the output check a greater than b yes it is true so if first is true in logical or it will not check the second one it will not check this one so finally in result one would be stored and no a plus plus so final value is 10. right now for these you need to tell me what should be the output a is 1 b is 6 and in result i'm taking a minus minus and logical and plus plus b second is in result i'm taking first of all tell me this output and then in result i'm saying what i'm taking the expression what minus minus a and plus plus b now what would be would be the output of these two if you are taking in same program you can write result 1 and result 2. so you can tell me in comment box so i hope you got what are logical operators how to use these operators and these are used in decision making used to test more than one condition and used when we are going to make some decisions based on the expressions like true or false so that's it for logical operators in c in next video we are going to discuss bitwise operators so now i'll see in the next video till then bye take you