so in the series of learning programming in c we are discussing some programs on strings in this video we'll talk about a program to reverse a string we'll use a standard uh like you can say predefined function builin function on string that is used to reverse a string and that is St Str R right it is already declared in the header file string. H right but without this function also we'll write down our own logic and we will uh know we are going to reverse the string both the things we'll discuss here two types of is there can be multiple ways to reverse a string when you are you know going to write your own logic when you are going to create your own function we'll discuss here two three ways right how you can reverse a string although this this is a non standard function maybe on your compiler it will not work maybe it will give some like undefined reference to this string so it's because of the compiler it is used basically in the older version of uh C so uh we'll write down the logic here first of all we'll try in the program and then I'll show you practically on my laptop so what is this reverse of a string means see if a string is something like this I'm taking this string and length is what seven having n character at last now reverse means what J should be here at the place of I and I would be here at the place of J right now this a should be here and this T should be here same y would be reversed with this n n would be here and obviously this a would be as it is here right so now see what output you will get after reversing the string this should be the output i t n a y a j this is what reverse of a string this output you want right so here can be two cases like the length of the string is what seven means o maybe the length of the string is even number right here suppose I'm writing here suppose J and I'm writing here one and at last null so here the length is eight that is even number that is also fine now output should be what one would be replaced with J then a with this I so what output you will get 1 i d n a y A J this output I want right this is what reverse of a string now how to do this reverse if you use the function like first of all we are using predefined function so just take a string suppose care S1 and 30 and here I'm taking uh J right so just use St R and pass the string S1 here right first of all see what should be the protype prototype of this this uh function means what is the prototyp Prototype of this function uh which is declared in string. h St r r v and it is going to accept only one argument the string which you want to reverse or you can say the pointer to the string so pointer to string this string you want to reverse and what it will return pointer to the same string obviously after reversing this would be reversed string right so it will you know return pointer to the modified string so it will return pointer so this the return type of this is what pointer pointer to string right that is what a prototype of hand here you can see I mean the logic whatever is written in the Declaration or the definition of this function we don't need to care about you know details here because we are directly using predefined function it is pred def function we are directly using this function and we are directly including header file string. so we are not bothering about the details here right that's you can say beauty of functions abstraction that we'll discuss because after this I'm going to start functions in C so just string reverse and pass the string and simply you can print print F the Reversed string is S1 and what output you will get if you are passing J only then reverse it will print right here because after no no we are not see some students think that if you print from here like I'm going to print from I then T then a then it is what reverse of string no you are just printing this string from here only it is not reversing of string right this logic you can also apply but that is not actually reversing actually reversing is what swapping of these characters here I should be there here J should be there this is what swapping I hope you know swapping I mean the logic you know how to swap two numbers right so actually this is swapping now let let let us write down our own logic we are not using this this predefined function so what you can do see to I know logic I'll discuss here there can be mulp multiple ways I'm not saying that whatever I'm discussing it that is the only way you can I know reverse the string in multiple ways many Logics you can apply right so now see this is what name is S1 so we are going to reverse we are going to do what S1 of zero we are going to reverse with S1 of index is 6 S1 of 6 right these are the index 0 to 6 fine now S1 of one this Index this a would be reversed with swapped with this one S1 of five I hope you're getting S1 of 2 would be with this n S1 of 4 now see S1 of 3 would be with nothing because here a would be this a would be here only this J and I this a and t this Y and N but a would be here only no need to do swapping right so no need to do swapping fine so now here what you can do if you write down the any Loop then what you can do just run the loop till here only till means how many times Loop would run one 2 three times only no need to run for this one right means length of this the string is what total length is seven if we divide length by two then the answer would be 3.5 so ultimately the answer will take integer that is three so ultimately we are we are running we are running how many times this Loop 1 2 3 three times only three times only so we will run the loop till length divide by two not till null character because that is not our need we just have to run half and that's it right reversing would be done automatically I hope you are getting the loop would be till know why the loop would be till length by two same here we are having uh the length is 7 if you have 8 then also 8 by 2 that is 4 in that case till four we have to do reversing if suppose I'm writing here J and K so now see the length is what 8 and the loop how many times we we we have to swap 1 2 and 3 and 4 4 four times 8/ 2 that is four times here also same 7/ 2 3 3.5 but three but here we want only three because this a would be at the same place only it would not be swapped with any other character right so now you can just write down a loop I'm writing down a four Loop I'm going to start from zero and I less than length of the string suppose I'm I'm taking l l by 2 so first of all we have to find out length how to find out length before using this L you just write down here here you can take the string car S1 30 and this and here just find out L is equal to St Str Ln S1 this function we have discussed this is predefined function to find length of a string so now after finding the length L now in L we have length is what 7 right 7 by 2 and I ++ now you have to do swapping here see first of all uh see that how how you can write here in general terms because obviously we cannot write s0 S1 something like this we have to write down in general right so here what you can write S1 of I I would be first zero then one then two would be replaced with S1 of here we have six six is what length is seven six you can say length minus one so l1 right okay if you write L minus one fine but see in the next case next case I would be from 0 to 1 here we have five so L minus 1 is still 6 L is 7 and minus one that is 6 but we want S5 so what you can do here we have to do again Min 1 right so it's not like that say min1 because in next case we have to do length min1 and 2 so what you can do here Min I because I value would be zero then 1 so you can do minus I 1 would be minus then 2 then l 1 2 would be subtracted so this you can what Swap this element we are going to swap SI with SI of length minus one I right but we cannot directly Swap this like you can write down here S1 of I is equal to S1 of length 1 I and S1 of length 1 I is equal to S1 of I maybe you are thinking this is swapping but no see here if you do something like this I would be zero here S1 of length is 7 1 0 that is 6 now S1 of 6 S1 of 6 is I I would be S1 of0 here okay now I would be here so now we have lost J J is no more now in this string because now J is overwritten with I now you are going to place what S1 of i z Now S1 of zero is having I only not J so now J would be sorry now I would be again placed here S1 of L minus I and at both places we will have I and I but that we don't want here I want J so directly you cannot swap something like this so what you can do first of all you can just have a you can say a backup of this J obviously we use extra hard disk to have backup of you know whatever the data important data we have in our laptop right so we can just do what keep a copy of this J as a backup in any other character type of variable because this is character right so here what we can do first we will store suppose I'm taking a variable care CH or care C or care any variable name you can take right so first of all in ch I'm storing whatever at S1 of I J has been stored in ch now we can place this I to here so now what here I can write now S1 of I is equal to S1 of length 1 I okay now I is here so we don't have J here now I is here but J we have in a variable CH so from that variable CH we can assign the J where s one of L 1 I here and that's it that is what spping and after this you can simply print print F percentage s and string is S1 that's it that is the logic right okay now see here we have string is jti fine now we have one more uh you know character type variable that is CH we have one we have have to declare one more in uh sorry length a variable L unsigned int you can say so in length we have length of S1 length is what 1 2 3 4 5 6 7 we have seven now see I value is one variable we have I that is zero before using this we have to declare I also I should be less than lus one L sorry L divid 2 length is 7 7id 2 3.5 it will take three right yeah i0 less than three condition true enter now in ch we have S1 of I i0 S1 of 0 is J so J would be stored in ch now in S1 of i0 L is what length is 7 1 0 that is 7 1 that is 6 S1 of 6 so whatever is there in S1 of 6 in S1 of at sixth index we have I see we are not reversing we are not doing anything with null obviously we don't want anything you know we don't want to reverse this null At Last of the string null would be there only right so now S1 of 6 that is I now this would be placed S1 of zero so now I would be here right and J we have in ch because we have kept a copy of this first first you know character so J is here now whatever in this CH that is J would be stored here that is S1 of L 1 I that is 6 so here now it's j now here I ++ I becomes 1 1 is less than three condition true enter here now CH is equal to now I is one right S1 of1 is a now in ch we have a now L 1 I 7 1 1 that is 5 and that's exactly you want S1 of 5 S1 of at fifth location we have t so T would be now S1 of I value is one so here we have now T so now whatever in the CH a that would be stored here only that would be stored at s 105 that is a we are going to store here right now again I ++ I becomes 2 2 less than three yes condition true again enter here again now I value is two at second index we have y now it's at CH and CH we have y now length 1 I value is 2 7 3 that is s so4 at Fourth index we have n now n n would be here at S1 of 2 right and whatever in in ch y right so now in ch we have y so y would be at 7 1 I is 2 7 3 that is 4 here fourth index here we will store y right now I becomes 3 3 less than three no condition is not true out of the loop print S1 now S1 is what i t n a y a j and that is what reverse of jnt right we haven't done anything with this index because obviously it would not be swapped with any anything right that is why Loop would be till less than L by2 not less than equal to l by2 yeah if you write less than equal to l by2 that is also fine but it would be one more iteration and that is of no use so why to increase time complexity and no this time complexity of this for Loop so I think that is reverse of the string if you don't want like l one I you are not able to find out the logic here something like this in general term so what you can do one variable I you can take to travel the string from here one variable J you can take to Traverse the string from here I + plus J minus minus and once I and J both would be same you have to stop right and you can simply write down that logic this thing I'll show you directly you know practically on my laptop right I hope if I show you the coding here then you can dry run that program at your own right so now let me show you the output of this thing so now let me create a file here string reverse. C right header files then string do H header file and we'll write down the then main function and in main I'm going to take a string S1 one and uh here I just want the user should enter right so I'm going to ask from the user enter string and we'll use get S S1 fine now find out we have to find out first length of the string right so I'm taking a variable we have to declare that variable first right so I'm taking here int L and I'm taking an again a variable I for the loop and one more character type variable that is suppose C right for swapping it's kind of temp when we take when we use to swap the numbers right temporary variable it is so now just find out the length length is equal to S Str Ln and S1 right now a loop you can use any Loop 4 while do while up to you from I I'm going to start and I should be less than L IDE by 2 and I ++ right and here we are going to write down the logic for swapping so first of all C is equal to S1 of I then S1 of I = to S1 of length 1 I right now S1 of L 1 I is equal to S1 of I right and that's it and after this uh four Loop you can simply print the string you can write down like something like this reverse the string is you know that kind of thing I'm not writing that oh S1 I think that's it now let me run this program and it should ask enter string see it asking inter string I'm entering here j e n y oh here we are getting by see see we don't have to do like this mistake see here in s i we have y only so that is why it is storing y again in there so whatever in C that variable right that we are going to store in S1 of L minus one I because in C we have copy of the first variable that is we have copy of J that's exactly you want J at the end right now let me run this program so now I'm entering here Jenny again and see it is printing in rever in reverse order Jen in reverse order see if you run this again and here I'm entering jti katri so see it is going to reverse the string right I hope you got this so I think that is fine but if you take like Travers from front also and from back also two Loops uh know two variables I and J so that also you can do let me just comment this out and I'll write that code right we'll write a for Loop here and U see four one from one would be I should be zero two I know initialization I'm going to do in this four Loop comma and one I'm taking J J is from end I'm going to start J so J should be whatever the L length minus 1 index of J right because length is five so index would be 0 to 4 that is four so length minus 1 now condition what you will put I till I less than J once I and J becomes equal obviously we don't have to swap and now we have to do I ++ as well as we have to do J minus minus J would be from and I would be from starting so i ++ j would decrease and I would increase right so before using this J we have to declare it here like J variable and within this Loop just do swapping same we will take a variable like we are taking C only here in C I'm going to store S1 of a copy of S1 of I first right now in S1 of I we can put s S one of J the last uh character now in S1 of J what you can put whatever you have in C like the first character and that's it and you can simply print S1 now I hope it will run let me run this enter string I'm printing I'm entering Jenny and see it is printing in reverse order Jenny right let me run this again here I'm entering J katri and it is printing jti katri in reverse order so this also you can write I hope you can try in this logic at your own right so from the next video I'm going to start functions in C so now I'll see in the next video till then byebye take care