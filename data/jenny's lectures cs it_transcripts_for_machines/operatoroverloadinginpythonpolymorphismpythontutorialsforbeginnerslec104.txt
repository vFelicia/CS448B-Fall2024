hey everyone I hope you are safe and doing good so in the series of running perfect programming language we are discussing polymorphism and python in the previous video we have seen duck typing in Python means how using typing we can achieve we can implement polymorphism now the next way to implement polymorphism is operator overloading so this thing we'll see in this video what is operator overloading and how you achieve this thing how do you do operator overloading in your program and how using that thing you can achieve for polymorphism and what are some advantages of using of this operator overloading right now first thing we'll understand what is operator overloading see I hope when when I say operator means what pictures come you comes in your mind plus minus into divide these are operators right overloading means what uh see let's take a simple real life example if I ask you uh the setting capacity of a bike on a bike how many person can sit you will say two percent or at Max if there's a critical situation then at Max three portions on a bike but somewhere sometime you must have seen this thing like gonna buy four personal setting or five even five person or setting five to six one is on that tank Fuel and the driver is also like this and three person behind the driver like this means when we see such kind of you know see in such kind of bike then we uh generally say that the bike is overloaded means bike is performing Beyond its capabilities the capability of a bike is the setting capability capacity of a bike is only two person and they are setting 5000 and still the bike is performing means they are going somewhere so the bike is performing Beyond its predefined capabilities in general overloading means like this same thing we can apply with Operator Operator overloading means that operator that is being overloaded that operator performs Beyond its predefined capabilities now what does that mean if I say plus what comes in your mind means it's going to add like if I say one plus two then it is going to add two integer like three addition and if I use this plus with string like these are two strings and I'm going to use this with plus with these two strings means now the answer is it is going to concatenate these two strings three or if I write something like this 1 plus 2 what would be the answer you can write down in comment section now the one is string two string because these are in double quotes or maybe you write these in single quote this is also considered as string what would be the answer one two one two it's not three so the operator is same plus plus but if you the operand are integer it is performing something different if the operand are string it is performing some different operation means this plus is overloaded by int class as well as by Str class see in Python everything is object so int is a class here Str is also is a class so this plus is overload same with like this multiplication operator one into two it is going to multiply but if you use this with any like string into three then it will print Jenny Jenny Jenny in three times like this the star is also overloaded by in class as well as by Str class bye but what if I see I have a class because generally this polymorphism this type of concept is in object content programming and there we deal with class and objects so can we add two object if I have a class suppose I have a class person I have created two object P1 and P2 of this class and I want to add these two objects can we add this thing I don't know maybe let's see this practically okay then you will get it better what is operator overloading how you can overload an operator and what are the advantages of operator overloading I hope you got the basic idea the definition of or the general meaning of operator overloading okay now let's see practical okay so let's create a new file right now see let me just first tell you that overloaded plus operator see now you can see the difference here I'm using this plus with hint as well as with Str UT now first we'll give three and the next line will give one two so one plus two is three but this one into our string so here the pluses performing as concatenation so one and two okay so this plus is overloaded by int class as well as by Str class now see what is happening behind the scene if you write this class means behind the scene there is some method which is going which is to be cold that is ADD method okay now those methods are special methods or magic method because how we are going to overload these operator before that you have to understand what are some special methods so these are called magic method or these are called Dunder methods these are short form of double underscore method like you have seen this method underscore underscore init this these gender methods begin with double underscore and with double underscore so initial method of special method or magic method you can say every time you call object this method is to be called same we have ADD method whenever this plus you write this plus behind this in this add method is going to be called if you write minus then for that also we have this method sub method is being called behind the scene what is happening that is I'm telling right now so see I can show you plus these one and two are end so we have an INT class tint dot C this and this add method gender method on this int class okay we have a net we have d i r mro many methods are there okay many magic method or special methods are there so right now we are dealing with this we are dealing with ADD so like this and it will take two argument one is self one is other right so if you want to print addition of one and two so rather than rather than this line rather than this line we can also write down this thing in dot we can call add method and we can pass simply one and two it will give same result three so as I've told you when you write down this plus behind the scene this add method is being cold okay so this add method is on int class as well as in Str Class C Str dot we have this method add self and S2 is going to be passed two parameter right so here if I pass like 1 comma 2. and if I print rather than this line so you will get what result c 3 and 1 2. now here I think you got it these are some special methods okay now when you use this method that also I'll tell you so same if I take one object if I take one another example if I have a class I hope you have heard or you have used complex number okay we write something like this like maybe three plus two and I is Iota this is complex number so this three is real part this two is imaginary part and if we have two complex number like two Iota and if you are going to add these two complex number then what would be the output the real part would be added to real part 3 plus 1 is 4 plus 4 ITA this would be the output okay now let's see I have a class complex number and there I am having two uh thing real and imaginary so let's pass to parameter we have suppose up and I only and I'm taking sorry not depth it should be self load one argument is real equal to whatever R you will pass and that self load imaginary is equal to whatever the value I you will pass so this is the number right and I'm creating two object of this complex number in first I am passing 1 comma 2 and in second object four comma five right and I want to add these two complex numbers so simply if I say if I write something like this like print C1 plus C2 can I add these two object of this class directly c 1 plus C2 I don't know let's run this no it will give type error see it is giving type error unsupported operands for Plus complex number and complex number when you add two number one plus two means operand one operating two so you are passing integer when you are passing the operand Jenny plus khatri you are passing string operand that is also fine because plus is defined for Str class also it knows what to do with if a string is passed if integer is passed but it you know it is not defined for these operands for these type of operands when we pass object when we pass I mean any object of this type complex number the python interpreter doesn't know what to do because this plus is not defined on these types on these types because type of these operand is complex number okay now we can overload this plus operator how using that dender method that special method add because automatically if you add two integer then behind the scene the add method is going to be called right so in add method it is defined what is to be executed when you call add when you call Plus with integral so we can modify that add method we can Define our own add method for these objects okay so let's define that special method add and this method obviously will take two arguments one is cell one is other right so self and other if you do not take this other anything you can take selfish as it is but if you want to take like any name x a b c anything you can take simply I am taking only other right now I want to add these two number means transfer should be real part would be added to real part imaginary part would be added to the imaginary part the thing you want right so when you call this when you write this class means by default this add a method would be cold right so C1 C1 means this one and two would be passed so one is what like real part and two is imaginary part right so cell means the C1 object other means C2 object right so ultimately what you want to do I'm not writing the com you know that proper syntax here first let's understand what you want to do the real part of C1 plus the real part of C2 right so self Dot real because attribute name is real and imaginary self load real Plus C2 object is in other here in this parameter other so Plus other Dot real self not real plus other dot real and second thing self load imaginary Plus other dot management right these two things we want and overseas output should be something like this five plus seven I iota okay so now you have to frame that kind of output so this okay you can you know do this thing with many methods I'm just going to tell you one way so I'm going to return and with the help of F string I want to do this thing just first take the value whatever the value in this then obviously when you add then 5 then Plus seven Iota so this plus is that plus okay then imaginary part this value would be from here right and then at last Iota is also would be printed so that's it what you are getting see now see 5 plus 7 item now it is not giving any error that plus is adding these two complex number because we have overloaded this add method we have given our own definition to this add method so whenever you will write this plus now this add method would be cold not that was predefined by in in class or Str class this add method would be good right and in this third method we have defined our own thing we have given our own definition so now it's working fine on the object as well so this is what operator overloading we have overloaded this plus operator this plus operator is performing Beyond its predefined capabilities right you can do this with other way also like with the help of Str ather than F string just convert this addition addition into Str this addition addition into Str and then just concatenate this plus this this I can get in these things right this is assignment for you guys you have to try that method you can write down the logic in comment section see this is the second wave return you can just convert this thing into Str this thing into Str then you can concatenate Iota with this and you can obviously concatenate this plus also this plus because this plus is not actually plus we are not doing any plus here we are concatenating these two strings so this this plus this plus is concatenating this string and the string this plus is concatenating this string and this string okay let's run this and see you will get same answer five plus seven item so either this way or this way you can do this thing okay now one quiz for you is one assignment for you is or one challenge for you is you have to overload greater than operator just create a class two persons two percent in that object uh you know create two objects of that class person two percent with name and age the one who is Elder is going to pay the bill so you have to compare the age of two person so pause the video and try this out I hope you have done this so let's create a class and init in Constructor I am having two parameter name and age so attribute name same I'm taking name and age you can take different also it's up to you name and age okay and let's create two percent of this class and let's like pass so we have kg2 object Ram sham having 32h 23 age so I want to compare these two if this P1 is greater than P2 the one who is Elder is going to pay the if P1 is greater than P2 means you just print the name of that person name of that person P1 Ram now it should print Ram is Ram will pay the bill this thing so using F string we can fetch the name frock of that object P1 Dot name will pay the bill else second person will pay the bill same with F string else P2 Dot name will pay the bill I hope this is not so much stuff but directly we cannot obviously compare to these uh we can say objects C not supported between instance of person and person this greater than this operators so this thing I am going to I'm telling you why because it's not like that we can overload only uh these operator plus minus or arithmetic operator no we can overload comparison operators as well okay so we can overload bitwise operator as well so let's overload this greater than operator in this class so for that we have see I'm going to show you first and in class we have g t this greater than when we use this greater than symbol behind the scene this method is called so two argument you need to pass self and one is X or other for less than it's healthy LT for less than equal to also we have l e something like this so we can overload comparison operator as well so let's overload this GTR LT you can overload so GT this self and others so person when you use this thing means rather than this greater than this method is to be called P1 is now self P2 is now other so let's take the age of P1 and P2 and compare so just we can compare like if self dot h greater than other dot h then return else simply return false sorry already you are in its return and return false so this is how we can overload greater than operator right so now when you this line is to be executed then python interpreter will call this GT so P1 dot h means 32 P2 dot h means other dot 8 other is P2 P2 rotate is 23 so 32 greater than 23 Yes means it will return trip so now it will return true true means this thing is going to be executed so obviously it should print Ram will pay the bill now the one who is elderly is going to pay the bill so see Ram will pay the bill no it's working fine we have overloaded this greater than operator as well see this greater than is working fine because now age age these two are int and on tint it is predefined greater than is already defined on hint class right it's not defined on this person class it's not defined so that is why this we are defining here but within this we are using this greater than this is for interning because the operands are hint and hint so by default it will call at this point of time it will call from the int class the GT defined on the in class right that is to be called and here on this this greater than would be called this method this GT that we have defined right now what what I hope you go to what is operator overloading now what are the advantages of using this operator overloading see we can Define the developers can easily Define these operators according to their cell according to their use or on their class and obviously these methods are familiar to us plus addition comparison all the arithmetic comparison relational operators these are familiar to us so it's easy for us to write down the code to maintain the code and definitely it is going to improve the code readability because of the familiar operators right and obviously this overloading kind of concept allows developers to you know create custom operations for their own classrooms and definitely it is making these operators more powerful and flexible this is definitely helpful when you deal in you know scientific Computing okay so now in the next video we'll see method overloading ad method overriding so now let's in the next route and then bye take care