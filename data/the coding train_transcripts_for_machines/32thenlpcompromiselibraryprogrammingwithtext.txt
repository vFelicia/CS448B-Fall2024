hello welcome to another scratchy voice video I apologize these videos I have a bit of a head cold making them but I'm gonna push forward anyway and in this video I am going to talk to you about something called NLP compromise now when you think of I don't know what you think of when you think of natural language processing and the and the whatever but I often think of the programming language Python and there are a lot of amazing natural language processing toolkits and libraries and frameworks and things that you can work with with Python but here I am I'm making some stuff happen in the browser in JavaScript I'm using something called p5.js I thought it would be worth seeing what's possible with JavaScript and in the previous video I looked at a JavaScript text library called Rita Jas and in this video I want to look at one called NLP compromise which has some similar functionality and other different functionality as well so let's first just look at how do I even use NLP compromise so first of all here's the github repository you can go there and as with a lot of github repositories it has a nice read meet which kind of gives you some of the basics and you can I encourage you to read through this click on some of the links and see how it works but you can get this basic idea like there's this syntax of chaining in a way I have an NLP object and I want to call a function sentence I'm gonna pass it as string then I can perform an action on it like turn it to past tense and then I can ask and I can also then get the text of that past tense version of this sentence so a lot of what you can do with NLP compromise is pass it a sentence and do things to it like negate this set and start turn it to past tense it knows about verbs and how to conjugate verbs and and various things like that so let me let's go forward at least and getting started working with in our code so if I scroll down here you can see okay off you go hmm NPM install NLP compromise ooh what's that well one thing I will point out is that this is something you can also use with something called node which is a serverside package for JavaScript and I'm going to look at that in some future videos but right now I'm in the clientside and I need a clientside JavaScript library in the same way that I am referencing here in my HTML file I'm referencing the p5.js libraries I want to reference NLP compromise and in a previous video I showed you how to download the Rita Jas library directly to your hard drive here's another way that I can do it because it gives me the code right here I can actually just take this entire script tag copy it and I can paste it right here into my index.html file so this is now referencing a version of the library that has been placed on a CDN a CDN referring to a content delivery network fancy word for a web server and you can see that web server is unpick AG comm and the libraries promise dot means the minified version cas so even just adding that to my index that HTML file should make something happen well maybe not I expected did I save that let me try one more time I expected to see maybe a little initialization message happening in the console but maybe I need to actually do something with NLP compromise first so what's the first thing that I need to do one thing with this library that I need is I want to have a variable that I can always just everything that I'm going to do with this library is essentially is a function that I'm gonna call on a variable that kind of holds the whole library and the actual library is called and is by default called an LP compromise so but I want to just be able to have a reference called NLP which refers to an LP compromise window to NLP compromise for short and I realize this might cause me a problem I'm gonna keep going now so let's look at what happened now if I say NLP that work yeah look at that so look I have this nice now like in LP I suddenly have all of this in front of all these functions that I can call like adjective adverb date lexicon so like you know what happens if I just call something like NLP dot sentence this is a test and that doesn't say a sentence there can i click sentence you can see haha now it made me a sentence and it has all sorts of things in it has terms you can see it terms has the word is which has a part of speech and all this like metadata about the stuff that I'm doing so you can see this is pretty exciting that NLP compromise has all this stuff so let's let's look at one quick thing that I can do like what if what I want to do is negate anything that somebody types into that form so something that I can do right I've got the same set up that had the Rita example where whenever I click Submit I get this string that the user entered and then I'm gonna spit some new text out so in other words I'm gonna do this and it spits out it was a dark and stormy night so what if I wanted what if I say NLP dot sentence s so I want the output to be the result of well let me do this in a bunch of different steps even though I could chain it all in one line of code I'm gonna say let me first make a sentence object then let me make the output I'm gonna sentence dot negate now you might think this is enough I want to negate that sentence and that's gonna give me the output but everything in NLP compromises like this object with all this information stored in it and all I want is the actual text so I need to just say negate the sentence and give me the text and now if I run this and I hit submit that didn't work oops so I made a mistake which is that then the gate function is actually not a function you can call on an unintel NLP compromise sentence it's something you have to call on an NLP compromised statement subtle distinction there but you but so if I want to negate something I need to use the NLP statement function and I'll just call this a statement instead and now I should be able to negate that and see the output so let's see how that works whoops I'm I was looking at by the way the readme has a as a reference for all this stuff and shows you different examples and that's how I noticed that I made that mistake because here in the example an LP statement she sells seashells negate text okay so here we go and now if I hit refresh and hit submit it wasn't a dark and stormy night I am NOT teaching on a live stream so I am teaching on a live stream so you can see here this is a kind of powerful you know that just as a little tiny little demo isn't very much I'm just taking a sentence and inverting the the negating it but you can imagine what kind of creative outcomes could come from this and also just seeing this I'm only scratching the surface of what is possible with NLP compromise I meant to start I started with the sentence to just show you a quick example of negating it and then I realized I needed a statement but I want to back up and use that sentence function because the sentence function is kind of a core element of NLP compromise that allows you to analyze and do stuff with a sentence so let's let's look at some things that I could do there so one thing I want to do is I'm gonna go back I'm gonna I'm gonna comment I'm gonna take this out I'm going to save our sentence equals NLP sentence s and actually let me just go into the console to test out some of these ideas so let's say I type var s equals it was a dark and stormy night and now I'm gonna use the NLP sentence function to make a sentence object I'm just call it Sen for short I'm gonna say NLP sentence s so now I have this sentence object and it has tons of stuff in it one of the things in it that's really key for me to use is this array called terms so I can look at the sentence terms so the NLP library has actually tokenized that sentence into word chunks this is very good because I can say Sen terms index zero and now I have this object that has all this information about the first term the whitespace that's around it what is the text of that term what is it two parts of speech reasoning there's all this metadata in there that I can make use of so for example I can say terms index 0 dot txt and now I have that particular text terms index 0 dot POS and I have this object that's telling me it's a noun and a pronoun so there's lots of metadata in there so what I want to do now is take any sentence and PluralEyes all the nouns this is something that I can do NOP compromise knows how to do things like take a verb and make it future tense or positive so let's PluralEyes all the nouns and make the verbs future tense okay let's do that all right so now here we go so what I want to do I have the sentence in the code and I want to say for VAR I equals 0 I is less than terms dot length I plus plus and just to make sure I can rebuild it let's start again with an empty output and let's say output plus equals terms index I dot txt create P output okay so now let's run this again and ah terms is not defined Oh sentence not terms sentence not terms and write terms is part of the sentence object so I need to add that in there and now I can submit so again I've lost the whitespace yeah I seem to recall that something in those terms object tells me something about whitespace I hesitate to go down this road but let's try to stay true to the whitespace here I think that'll be interesting so let's try this again I'm gonna I'm gonna debug this kind of here in the I'm going to do this again and I'm gonna say terms whoops esta terms index 0 nope Oh sentence not terms index 0 so let's look at the whitespace sentence terms index zero dot dot whitespace was that what it was ah look at this preceding trailing oh this is exciting look at this so this you know that this may exist in other libraries and frameworks but I'm just sort of discovering it here this is telling me what's coming before it and what's coming in after it so this is very this is great because I can rebuild the text so let's actually use the trailing whitespace is what I'm gonna do so I'm gonna then say output plus equals sentence dot terms index i dot white space dot trailing so this should give me I want to put the text of the output and the trailing whitespace in there in the output and now look at this I rebuilt the sentence exactly from what it was before so this is great because i junked it up I analyzed it now I can play with the terms individually but I can put it back together and retain its exact original form now what I want to do here is say let me make a variable part of speech and let me look terms index I POS so I want to look at that I want to just grab the parts of speech and put it of that term and put it in a variable and now I want to say if POS be part of speech noun I'm just gonna do something right now I'm gonna say output plus equal noun just to like make sure this is working so I want to check is it a noun output plus equal noun it submit okay so you can see it noun was a dark and stormy night noun so great so that is working so this is a way of testing if that's a noun now what if it is a noun what I want to do now is take that noun and PluralEyes it how do I plural eyes it let's go back to the NLP compromise website and look here I believe it's one of the examples referenced here there it is so if I call NLP noun and pass in that text now I've made this noun object and I can call functions on it like PluralEyes plural eyes or something you could do with it now so if POS dot noun then I want to say so I'm gonna say a new word equals so I'm gonna put this here sorry so if it's a noun I want to just say var noun equals that text and actually you know what I'm going to do I think what would be useful here is to actually just pull that word out so I want to get the word out and put it in its own variable because I'm gonna need to do so many things to it it's nice to have it in its own variable and then I'm gonna say noun equals NLP I'm gonna say new word equals MLP dot noun that word so make a noun object that word dot PluralEyes and then and actually I'm just gonna say this right and then output plus equal word so what I'm doing here I think this is a nice way of doing it as I'm saying give me that text if it's a noun plural eyes it and change the variable value and then output it so the original word is placed in the output or the pluralized if it's a noun and you know I feel pretty confident about this let's go if POS dot verb word equals NLP dot verb that word and then future so I think that's gonna put it in future tense so with a word verb I can make it future tense so let's see how that works I'm gonna come back hit refresh hit submit uh verb dot future is not a function and so maybe I need to say conjugate or something let's look haha yeah so what what what I what I can do is actually take the verb conjugate it which returns to me a list of all the conjugations that same and then I could pull out the future one so I imagine that it worked that way but it didn't I can say conjugate conjugate dot future so now I want to take the word conjugate it and then grab only the future tense so now if I go back and do this and hit submit its will be a dark and stormy nights I guess it's was an ally I was teaching in a live stream his will was I eyes will was teach in a will live will stream well all sorts of crazy stuff is going on here so because I so interestingly enough you can see how this isn't working perfectly but I'm getting the basic idea that I'm sure I could finesse how I'm analyzing the context and all sorts of things to sort of and to sort of work out what it is that I'm so I want to just point out that the the code that I'll release with this particular video kind of has a lot of this built into it I'm just going to look at this example so here is and this should say future so you know I can pluralize all the nouns or I can make it the quick brown fox jumped over the lazy dog and now the quick brown fox will jump over the lazy dog boy this debt this demonstration sentence worked a lot better let's come back to this the quick brown fox jumped over the lazy dog it's submit you can say the quick brown fox is will jump over the lazy dogs well there we go I'm not sure what sort of weird things I've got kind of from my goofy settings before ah ah and two tubers says I need to check if the term is not a pronoun so that would be a great improvement thank you very much so I can say if it's a noun and the POS is not a pronoun let's try that and I can say I was I I ran to the store I will run to the stores okay great so it didn't do that to I because I also check to make sure it's not a pronoun so you can see I'm muddling my way through this with a sort of you know but the point of what I'm showing you here is what's possible how do you take how do you load the library how do you create sentences how do you do stuff two different kinds of words and all of this is here and you can kind of look through what's happening here and what's nice about this is you can also analyze the for all sorts of and there is by the way a corpus too so you can you can generate other words and and that type of thing also from NLP compromises okay so I hope you found this useful release the code with this and you know try to make some experiments to see how can you alter the way a text that sort of language of a certain text is by using NLP compromise to process it analyze it and change it okay so great and thanks for watching this video and I'll see you perhaps in a future one