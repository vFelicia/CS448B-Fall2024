okay it's time what are you watching by the way you are watching a video where I am now in javascript in the browser training a neural network to recognize doodles of cats rainbows and trains and you don't get to see anything here yet we're gonna I'm gonna get to that eventually all I'm doing is reporting that I trained over one Epoque with 2,400 different doodles 800 cats 800 rainbows 800 trains now I don't to add to this video is I want to test I have also testing data which the neural network has not been trained with that is also labeled I want to see is it able to guess what any of that stuff is and how accurately is it able to guess so let's do that right now so one thing that I did previously is I took all of the training data and put it into one particular array so let's do that with the testing data as well shuffling doesn't really matter but I'm as well shuffle it because I'm not actually training in this case so what will take out the shuffling so I'm going to say let testing be an empty array and I'm going to put in everything all of the testing sorry I don't know why I'm just copypaste and so this I'm gonna I am going to so actually let's do a little refactoring here let's let's take out let's take this and let's put this into a function called train or train epoch because I love the word epoch makes me sound like I'm doing something really fancy and futuristic so I'm gonna train for one epoch and so that's gonna go right here train epoch and you know this was kind of awkward what I did here and I thank you for me I have to be put in the chat I'm trying to be a person who uses some of these higherorder array functions these days so let's quickly hope I don't ruin everything one nice thing that I can do I don't need I don't need to have this little loop here just say inputs equals data map X X divided by 255 so this should this makes a new array which takes the previous array and divides each value by 255 and this uses arrow syntax and you can watch one of my higherorder function video tutorials about the map function but that just makes this a little bit cleaner so let's add that in and now let's run this again to make sure I didn't break it line 41 shuffle training oh I made this so let's pass in the training array and we're gonna train for one epoch finish there we go train for one epoch so now I'm gonna that still works I'm gonna comment this out and now I want to just check and take a look at the testing array to see if it has all the testing data in it and it does has 2600 which is right because if I had 800 it shouldn't have 2600 in it hold on oh yes look at this that's a bad error I need to be concatenated with testing so much for my copy pasting terrible terrible all right I knew 2600 was wrong 600 600 is right because it's 200 times 3 I have 600 test data points so now what I need to do and let's just do this with 1 all right I can still do I can evaluate how its going to do with the testing data without actually without actually training it so let's look at how this goes so let's write a function let's write a function called testing wait what did I call this a train EPOC test all with the testing data so let's do something similar to this function and let's rename this data just so it's no no let's not rename that so let's do test all with the testing data I don't need to shuffle it I want to go through everything I'm gonna do exactly the same thing on a map it same inputs the same targets the same way but now here's the thing I want to say let prediction or I'm gonna say let guess equal neural network dot predict inputs and actually I don't need to have targets right I just need to have a label right I want to predict my guess is what does it think it is so right now what I'm actually gonna do rather absurdly is I'm just gonna console.log the guess and I'm gonna console.log the label okay and I'm going to just for a moment I only want to do this with one data point in the testing data set so I want to test everything okay so I want to run this code it's so quiet now run this code and I want to see what does it think it is and what should it be let's run this so we can see look at this these are the numbers that came out totally randomly zero point zero five zero point zero eight zero point zero eight eight eight two so it thinks it's a number two zero one two and actually it's a zero it got it wrong it thinks it was a train but really it was a cat but that's okay it just got it wrong but this is good so first of all I need to do something where I evaluate which one is it based on these numbers so I need to find the index of the maximum I need to find the index of the maximum value so let's go to testing okay so I need to turn this guess which is just three numbers into a classification so basically I want to say let classification something like the maximum of so let's see is p5 has a max function right where I can give it two values and it gives me the maximum one if I have an array with a bunch of values does the max function do anything for me it tells me which one was the maximum oh sorry ah let's I just want to make sure it's working I equals 0 to 9 111 for max a 111 but I want the index so does max secretly if I call it in a different way or I know Arg max is kind of the there is no p5 function called Arg max does array have Arg max that's the technical term that you'll see in a lot of kind of machine learning libraries are max is a function that will give you the index to the maximum value in the array so I could use I could use reduce and write my own Arg max function 60 in the chat just gave me a really great tip because I forgot what's that arrays have a index of function so look at this watch this if I say max a that gives me 111 what if I say a index of max a get gives me 3 because the index of 3 of sorry 111 is 3 right this would be negative 1 because it doesn't exist so I can say the classification is the guess da index of and let's separate this out let n equal max of the guess like this is the max value and then I want to get the classification is the in of that max and then I could just say I can just say console dot log let's look at it to make sure this is right console dot log classification and labels so guests are the raw array values classification is the Arg max the index to the one in that array that's the largest and this is the target label what it's supposed to be so let's run this and we got so let's look at this it makes sense this is a tiny number 0.03 that's a big one 0.87 yes it gave me one zero one that's that's the oh I can check by the way I could just unfold as a look that's correct let's look at this ooh this one more time we can see like up got one again now it got one it's always the middle one that's interesting but that's just random to it got to so this is working now you'll notice these don't add up to one point two point two point one six so again I really should probably be implementing softmax as the function that I use that when I exiting out into the output from the neural network softmax is a special kind of activation function essentially and this is something I cover in the neural network series that takes whatever that output is and transforms it into probability values at all and up to 100% but I'm going to come back to that in another video this will just work just fine for right now and so I can say now let's say let correct equal zero if if classification equals the label then correct plus plus and then I want to say the percentage equals the number correct divided by the total which is testing dot length so consult law percent so let's look okay 0% correct 0% correct kind of get lucky and get one I got one correct okay so now what I need to do is let's do it for all of them let's not console.log everything and we should see right just by sheer randomness we should see about onethird correct right not there's been no training the neural network without any training without knowing anything should get one about one out of three correct oh why do I have oh I'm sorry this should happen at the very end after all the loops are done you can see by the way I did get exactly that 35% 35% 24% so there's a lot it was very feelings only to look at that exactly one third correct so things are going as expected but can we improve it can we improve it just a little bit will this actually work it's sort of sad that I'm doing this without showing you anything visual but I'm kind of thinking you the person watching who has visual talent you could actually start to ant but a project for this would be to animate the training process and all that but let's let's train for one epoch let's just run through the training set then let it test again I wish my sound effects were working because I would certainly use a trim control role and then I'm gonna say testing result and by the way I want to move this data prep up here and then I'm gonna just say this so basically we've prepped all the training data we've prepped all the testing data so much work by the way it is just to work with the data that is like a whole project unto itself then I'm gonna train and then I'm gonna test and we're gonna see and wouldn't it be nice if the testing maybe returned it so let's actually return that value and console.log it down here cuz I feel like that's kind of what I want to do correct percentage correct okay okay okay here we go let's see training training training of training all the way I like to train elected trained training all the way hey training training training machine hey we got eighty percent correct this shows that things are working right we got eighty percent correct that is so exciting to me at the horn Wow it was kind of good so that's really interesting hmm wow this is very exciting I don't even know what to do now percentage correct eighty percent let's just confirm that right ready I'm gonna comment out the training no training no training remember with training eighty percent correct no training 33 percent crack this is good machine learning it's a thing that sometimes kind of almost maybe sort of works but it's highly problematic for many important ethical and social reasons but that is something we will come back to so we should really be again this is a good point should I even be doing what I'm doing I think it's okay to be doing what I'm doing everything is pretty transparent we know where the data comes from we know what's in it and we can see and we've learned something about uh neural network oh I'm just amazed here okay so I should finish up this video but let's let's just do something interesting let's say for let I equals 0 I is less than 5 I plus plus so what we're going to do is we're going to Train oh we're going to Train we're gonna say epoch I plus 1 I'm just gonna start with 1 and go to 6 so I can just say epoch plus I so now what I'm gonna do is I'm going to see I'm gonna do it five times let's see how the percentage increases let's make sure my training function we randomizes the training data shuffles the training data that's very important each time okay let's see how much better gets training training training I'm training all my epochs loading loading loading in training epochs training Oh 76% correct training training training training hold my box you are watching a video where I am NOT editing out the fact of it 79% training training training I'm trading all the way I'm almost a puck three and here's what we say 81% training trading training trading all the way I'm almost a puck four add this is what we say Eddie went down why why so there's kind of a it's interesting to see this here so there's this is where now we're revealing I haven't really been I have not been I'm not doing everything that the quoteunquote best or optimal or way that I could be so for example this idea of soft backs and crossentropy I've really got to come back to that that's hopefully a way that's going to improve the training process it's gonna be able to squeeze out a little bit more accuracy if I add these two elements to my machine learning system I also have something where it's like hello my training 2,400 drawings that's like the tiniest bit ever so I probably would want to run this with a much larger training set that's really gonna help I probably want a kind of a larger testing set as well just to have a better sense of how accurately this is doing but I think we're in pretty good shape here I feel like I'm happy with where I am so far in the next video what I want to do is kind of clean this up a little bit and think about maybe how to like animate the process like show that it's training so it's not just saying loading here forever until it gets to the end and then I'm going to add a part where I can draw my own little drawing and see if it could recognize my cat versus my rainbow versus my own train so in the next video that's what I'm gonna do and I'll see you there you