part three of the Hamilton lottery simulator here we go so if you were kept in suspense in the previous video I let it run and after fifteen thousand four hundred twenty times of playing the Hamilton lottery we finally won our two tickets at ten dollars each see you tonight at the show okay uh not really actually but okay but now what do I want to do this I wouldn't make this a bit more interesting the goal here is to kind of make a little project that's about probability using javascript and so what I want to do is I want to change something about this I want to make it so that this number here for example I could edit so how many tickets are available or I could edit how many people are entering the lottery maybe let's change how many people are entering the lottery because we know I know based on the website that there actually are ten pairs of tickets available so that's sort of like a fixed number but I don't actually know how many people are entering so I'll leave it up to the user to estimate that so one thing that I want to do I could make a text input field or I could add a slider here there's lots of ways I'm going to do it kind of a strange way which is I want to make this editable and I want to show you if you recall this number is actually this um this element if I click inspect you can see over here it's a span with an ID called total that's what's in the HTML page so if I want to have this number sort of exist as its own thing that I can manipulate and play with I also want to make it a span how do I get back to the console I also want to make it a span so I'm going to go back to my HTML file and I'm gonna go up here and I'm gonna say span ID equals I'm gonna call this entrance as in the total number of entrance and you know later I'll maybe do something fancy to have like commas appear automatically or something like that but right now I'm gonna leave that at 50,000 with no comma and I'm gonna go back and you can see that there it is fifty thousand one thing I want to do I want to add a little bit of styling so the way right here I mean this style tag and the head I could have put this in a separate CSS file I'm referring to the ID by entrance and I'm just gonna do something like say background color make it like a light gray just so we can see that that's a light gray and then maybe I'll also add like a little padding around it so you just see that it looks like something different now somebody is gonna be a somebody when I once I post this the github some nice designer will come along and redo my CSS and fix it up to make it nice but the whole point is I want to be able to edit that so to be able to edit that it's not this is actually not something I'm gonna do in the CSS Dom elements on a web page have things called attributes attributes are other ways of modifying the behavior of a particular Dom element not associated necessarily with just its sort of design its style its look and one attribute is called content editable so actually if I just write content editable here in the span it don't worry this is the equivalent of saying this content editable equals true but I can just put the word content editable in there which means it now has an attribute content editable and now you can see here this is actually editable so I can just change this to any number I want so I'm going to go back to 50,000 so the point of this is what I want to do is now if the user comes here and changes that number I want everything else to change to reflect it I want to have this say how many times you have to play to have a 99% chance I want this to say you have a 1 in what so in other words as soon as I change this to 40,000 this should say you have a 1 in 4,000 chance of winning so now we need to look at what are the Dom elements that need to be updated so this number 5,000 needs to change and that number 23,000 needs to change so I need to make those also spans that I can access so now I'm going to come down here and I'm going to say span ID equals chance and I'm going to come down here and say span ID equals nine I'll call this one 99 can I make an idea number I don't see why not and let's call it 99 percent the 99% of us who aren't going to see Hale too because they're very expensive I don't even know if you can get them okay so so now I have those elements as spans now I have a question how do I know when the user has changed the number 50,000 now one thing that I could do is draw is looping over and over again so there's this draw loop looping over and over again so I could always just say like always always check check the Dom element update the number check the Dhamma update number but that's not very efficient here in fact I actually turned off the draw loop unless the lottery is running so it isn't really looping all the time what I want to do here is I want to say only when the user changes a value in that field do the to the other numbers update so I need an event just like I have an event for when the user presses the button I could now have an event for whether the number in this content editable span changes and let's look at how I could do that so first thing is if I go back to the HTML file I need to remember that this thing that's that people are changing is called entrance so let me go back to the sketch and I'm gonna say entrance equal entrance and in setup I'm gonna say entrance equals select entrance okay and now I need to make an event entrance dot changed update probability so just like look at these two areas here's the button when the button is pressed call the start lottery function when the entrance have changed call the update probability probability so this means I need to write a function called update whoops I want to called update probability and let's zoom back out and scroll down a little bit so I need to write this function so what do I need to do the first thing I need to do is calculate what is a new probability I have a one in 5,000 chance because I have 50,000 entrance divided by 10 pairs of tickets so the new probability what 1 in 5,000 is 50,000 divided by entrance dot html' so the HTML function in a Dom element allows you to set the contents of that Dom element but it also allows you to retrieve it so you know we can check this right this if I type entrance here we can see that's a p5 element can you see that let me give myself some more space here if I say entrance dot HTML you can see it has the number 50,000 in it if I change that to 40,000 and say that again it has the number 40,000 in it so what I want is I want to when the probabilities updated change change that that number probability 50,000 divided by entrance and then I need to update what do I need to update I need to update this number the chance so here I want to say var chance equals Salette actually I'm just going to say select chance dot HTML prob so let's look at this now I'm updating I'm calculating that new probability and I'm updating that Dom element so let me go back and change this ooh what happened there what did I miss so I don't know what I missed let's so I don't see it working so I have to debug this somehow so first let me just call that function ok it worked one in 1.25 chance so something happen so first of all my event didn't work because we have clear that function does something but my event didn't work but also my the math in that function is wrong let me go back and try to fix that 50,000 oh I'm being so silly the entrance is the number 4 well you guys probably figure this out like a while ago entrance is the new number that's replacing 50,000 and we know there are 10 pairs of tickets so I want to divide that by 10 so let me save that I'm gonna refresh the page change this to 40,000 and now update so you can see that that works the updated probability is working but for some reason that event isn't firing let's go back to look at this select changed so let me try a different event I think I'm fortunate I'm a little bit afraid I've come into a p5 bug here Oh No yeah this is working now so I don't know why the change so there ok so there are two different event functions associated with one a Dom elements content changes there's the changed function and there's the input function the changed function only changes when you've complete triggers when you've completed your action like you've pressed enter or tab to leave that Dom element the input event fires continuously any time you're changing your typing so I don't know why the changed one didn't work I'll look into that later but I kind of wanted the input one anyway so what I now have is that you can see that as I change this number onethe out if I change this number to 1000 I have a 1 in 100 chance of winning now how do I change this number that I want to also have change that number there so remember technical mishap weird edit but what I where I'm back is looking at now applying this formula which I covered in part 1 of how to actually compute the the prot the number of times you need to play to have a 99% chance of winning the lottery at least once with log base 10 of 1 percent divided by log base 10 of the chance of not winning the lottery one single time ok so if your if you want to remember that for I'm going to go back to the first video but for right now I just need to find the place where to put that formula in to change that number 23000 right there so if I go back to the code we can see here that this is if you recall I just did this a moment ago this is where I'm changing the probability number and the other number I want to now do is first of all so what's the chance I'm gonna make a variable called not winning what's the chance of me not winning a lottery just once right four hundred four thousand nine hundred ninety nine divided by five thousand well that number 5,000 is now something that's shifting so what I want to say is probability minus one divided by probability that's the chance of me not winning the lottery just once so now the number of times is log of 0.01 divided by log of that not winning probability and now what that's the number that I need to update right here that's the number 23,000 that I want to change so if I do that all I need to do is select and the ID for that span was 99 percent dot html' num and I think it's probably worth also using floor here because I'm going to get like a long decimal number so I'm gonna put floor here to take off that decimal and maybe also what I'll do is I'm going to put that approximately it's not really that approximate anymore but I'll keep that in there so the span always keeps the approximate symbol so if I do this you can see now 550 thousand people are entering the lottery I have a one in five thousand chance of winning and I must play twenty three thousand times to have a 99% chance of winning the lottery at least once so let's change this to twenty thousand oh well that's the way that the approximate was already in there I don't know why I add that in in the code it was not part of the span in the first place so let me do that again I'm gonna change this to twenty thousand so you can see now I have a one in two thousand chance of winning and I have to play the lottery nine thousand two hundred eight times in order to have a 99% chance of winning at least once so this is what I'm calling kind of a dynamic essay I mean there's no essay here but as I change one value other things update I'm not going to go too much farther with this but I am up post this entire thing on github a link to it I would love for people to add to this and pour requests add design elements you know it might be more interesting if you could hover over this and like slide your mouse back and forth to change the number like almost as if it were a slider this is not my original idea there's lots of people creating work like this you know Brett Victor being one person to mention who's made a lot of these types of you know educational things online with lots of manipulable things so but let's just make sure one thing I want to look at is make sure the lottery is still working itself the other thing I should mention is look at this if I say 0 I get a 1 in zero chance of winning and then I get not a number if I start putting some letters that I get one and not a number so there probably it also would make sense to have some kind of error checking and also it'd be nice to format the numbers with commas you guys submit pull requests to the github repository that I'm going to post in a moment and we'll see okay so let's make the lottery now have 200 people winning each time so you have a one in twenty Chan I don't need the console anymore so to give us us some more room 200 people are entering the lottery each night that means we have a one in 200 chance of winning and you have to play about eighty nine times to have a 99% chance of winning at least once we want after 61 times we won after 49 times we won after 35 times so you can see this idea works and now I could change this to 2000 and we could run it again and it should take us longer to win you know I would expect that by the time we get to a thousand we're going to win three hundred seven done and now I'm gonna say let's just say 75,000 people are entering the Hamilton lottery to have a 99 percent chance of winning the lottery at least one time we're gonna have to play about thirty four thousand times so let's start winning and let's hope that we're lucky I didn't get it on the first try unfortunately because I don't think I'm going to see Hamilton this evening I'm gonna let this run I will leave you in suspense asking the kind in the in the description of the video in the comments I will let you know how long it took for me to actually win that lottery and look in the description for this video the link to the github repository and the website where you add and contribute to this