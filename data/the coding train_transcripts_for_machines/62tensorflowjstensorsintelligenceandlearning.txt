hello I'm back to for another video where I'm going to look at the core API of tensorflow jazz and in my introductory video I totally forgot to mention and link to this particular announcement video machine learning in JavaScript from the tensorflow dev summit where Nikhil for at and Daniel smilk off the creators of tension flow thas talked about the project and you should watch that because it'll give you a lot more background and also that show interesting demos and other things that people are working on with it ok so I wanted to mention that now okay so if you didn't watch my previous video which is kind of an overview of the landscape of all the pieces around working with machine learning in JavaScript you could go watch that or you could just be right here because what I'm gonna do in this video is I'm just gonna go to this API reference and in this API reference what I want to do is talk about the basic building blocks of tensorflow dot J's now here's a thing again I just want to mention I just want to mention that you don't have to be here right now anywhere else in the world than watching this video ultimately I'm going to start using something called the layers API which is built on top which is part of tensorflow Jas so there's court enter flow Jas ultimately I'm gonna for projects that I'm gonna make I'm too used to the layers API which is a higher level abstraction and then even I'm going inverse like down is higher level eventually I'm also going to use something called ml 5 which is a project being developed here at New York University which is a JavaScript library separate project from tensorflow TS but uses tensorflow digest behind the scenes to do some to show demonstrations of common machine learning tasks like image classification poetry generation and and things like that ok so but for me for my own sanity I would like to learn the basics of the core API of tensorflow yes and I think it's useful as foundational knowledge for moving along and looking at there's other stuff but if you just want to get to like getting your webcam and trying to classify the images that are in your webcam you can you could find some videos that aren't made yet but they will be made maybe I don't know this is very confusing I'm gonna make something within they'll finally be getting to that okay core API what is the core core core building block of everything in tensorflow it is something called a tensor and I talked about this in my previous video but just to recap we have this idea of a scalar which is a single number we have this idea of a vector which is a onedimensional list of numbers and we have this idea of a matrix which is really a twodimensional grid of numbers a tensor is a sort of more generic term that refers to any ndimensional thing of numbers and also the operations associated with those things like matrix multiplication and so this idea of this idea of a tensor being this building but it's a thing you can make and perform the common mathematical operation it's actually quite similar to in p5 if you watch my p5.js tutorials I use this create vector function so this create vector function is making a vector and actually a three to two or three dimensional vector so it's always just like an XY inventory it's always just an X or Y and sometimes a Z and so then you can make these create vectors and you can get their magnitudes and normalize them two common mathematical operations the tensor is exactly the same thing so if we now go and look at the at the API here we can see here it is TF tensor so how do we even make a tensor let's just make a tensor so first of all I have some code I have some code not very little code I have a single file called sketched out JavaScript and you would think like okay let me just go and take this and let me just put it in here I'm gonna hit save then I'm gonna go back to the browser I'm gonna hit refresh and uncaught reference error TF is not defined so why is TF not defined well it's not defined because I need to import to tensorflow das life so a way that I can do that I'm actually just going to Google I'm sure it's like in an obvious place but tensorflow je s CDN and oh it's actually right here on the homepage right here this is what I'm looking for I'm gonna grab this bit of code right here because what I want to do is reference the tensile ojs library file via a CDN a CDN is a content delivery network I could download the library include potential ojs javascript file in my project it's a little easier for me right now just to go into index.html you can see I'm actually referencing P 5 and P 5 Dom libraries of CDNs I don't know that I've been actually to use the P 5 library in this video but I can just add one more here and now I have tensorflow 2's imported as part of my project and I'm gonna go over here I'm gonna hit refresh and look at that ha ha it's our first tensor we made a tenstory beta tensor ok so I've made my first tensor now one of the things you'll notice if I go to the tensor flow documentation whoops is that in addition to just TF tensor and there's also by the way oh look at this I need to talk about shape and datatype but just for the moment I want to just look there also is this o TF scalar we're gonna talk about that TF tensor 1d 2d okay so here's the thing this funk this idea of a tensor TF tensor is a generic concept that will work for any ndimensional tensor but if you're working with tensor flow Jas you want it to the extent possible use the functions that specify something about the shape so what do I mean by shape oh boy so here's something a really important concept a shape this shape refers to the dimensions of the tensor so for example we might this right here this has a shape that's 2 by 2 I could write this this now has a shape because you always say the rows first with matrix this is two rows by three columns two by three so one thing that's important when creating tensors is to also specify the shape like why does this even matter well we're just kind of in the lowlevel land here just to get a sense of how these things are the reason why this matters for example imagine if what I'm ultimately going to do is feed in image data into a neural network for some tasks like image classification well I want and and what I have are lots of images maybe all those images are 28 by 28 pixels so my shape is going to be 28 comma 28 and let's say that I actually have a hundred of them I have a hundred 28 by 28 images this is exactly what I'm going to have for the doodle classifier example that I'll make at some point then the shape of all of the data is 100 comma 28 28 because I have 28 by 28 images and I have a hundred of them so this is a really sort of important piece this idea of the shape is a really important piece of defining a tensor so let's take a look at that real quick so let's come back and let's go back to here and let's just do this in the console so I'm gonna say by the way one thing I didn't I mean I guess I could keep doing this in my code let's keep doing in my code so I have a record of it so um one thing I didn't mention by the way is why am I saying TF tensor and first of all I'm gonna write this in a different way I'm going to say constant nums let me call it data data equals let's write this out like this and then data dot print so let's look at this so one thing that's a key here that I'm using the the way of declaring a variable called Const for constant which means I can't reassign this object and so this is what you're gonna commonly see in the tensor flow to tutorials I could say let data in a sense I'm using consequence I'm protecting myself from reassigning the variable data to something else later so I'm gonna say Const data then data dot print we'll go back here and we'll see there's the tensor now incidentally what if I say console dot log data so the tensor that print function is a helper function in there to let you sort of see just the information the data that's in the tensor but if I actually say console dot log data what you're actually gonna see is well look at this whole thing so a tensor itself is actually this complex object so this is useful for us to be able to see those are a properties of it but most of the time we just want to look at the data so another thing that I can do here is I could say console dot log data to string so data dot print just takes the string version of the tensor and puts it into the console so if I do this hit refresh we can see there's that tensor as well okay now here's the thing what if what I want to do is this these are pixel values oh let's actually say these are pixel values like 0 0 127 255 and what I want is for these pixel values to be a 2 by 2 image to represent a 2 by 2 image so I want to create now I want to create the tensor with a 2 by 2 shape so now let's look at what we see in the console now that I've defined a shape look at that we can see that it's basically a 2 dimensional array and what I could do is what's interesting about this let's say I had two of these images so now there's eight values and we'll make these like totally different numbers now what would happen if I try to turn eight numbers into a two by two a tensor a two by two tensor look at this I'm getting an error so this by the way this is an error you're probably going to see throughout your life if you go down this road now not exactly this error but constructing tensor of shape for should match the length of values eight so this means like hey you gave me eight values but you're trying to make a sense of a Tencent that only has four values I can't do that and this is actually quite a common error I was trying to work on a doodle classifier with tensorflow Jess earlier this week and I kept getting all these errors because I was trying to train my dataset what didn't match the size of what the machine learning model expected so we're getting a little baby steps into that this idea of if I'm preparing data as a big of I'm loading it from a file a spreadsheet and I have a big list of numbers I better have the right amount of numbers to put it in the right size tensor and so this can now be corrected in the code because I can say well actually what I want and it's awkward that all these numbers are just two but hopefully you're following me here is I want to have two by two and I want two of them so now if I add the shape is really and let's well I'm gonna give leave it as an exercise to you try to redo this but use like a three by five and so now I'm actually do that myself I'm gonna hit refresh you can see there we go there's my essentially this is the shape now it's two by two by two okay so let's do a couple more things here let's say console dot log a data just so I can see now so what I have here is that's the sort of pretty version of the data there it is those are all my numbers now shaped into these arrays now also here look at this I can see that the shape is two by two by two the size is eight meaning there's eight total numbers the type this is something I haven't talked about type is important I'm putting floatingpoint numbers in there so this that's the default type for example this could be 1 27 point 5 and if I'd run this again we're gonna see one twenty seven point five is in there however I could have changed the type two if we go look at the documentation int 32 so for example I could say you know what I want to be more I don't need to have floatingpoint numbers so I could change the data type to in 32 and that's just one more argument for me to add here in 32 now let me run this again and you could see it actually worked fine it didn't complain that I tried to give it a floatingpoint number but it just took off the decimal place and my assumption here is it's not going to round it like if I make this one twenty seven point nine ninetynine we're still going to see 127 there it's always going to floor that value meaning taking take off the decimal place so we can see now in making a tensor we have three important properties essentially we have the values these are the numbers that are going to go in the tensor we have the shape which is defining the dimensionality of the arrays of data basically and then we also have D type or data type which is saying what goes in that tensor and the only possibilities are floats intz or boolean z' so you can imagine just like if you know you only need integers you're gonna save some memory or some GP yunus by using integers instead of floats so this is what it means to make a tensor so I want to do two more things before I move on for the next video we'll start to look at some operations on mathematical operations on these tensors and and and also I need to talk about the difference between numbers so let's let's make an array well I'm gonna I'm gonna be a human who uses the constant at values is an array and I'm gonna just say I equals 0 I is less than 15 I plus plus I'm going to make up some pretend data and I'm going to use p5 random function I could say math dot random if I wasn't using p5 between 0 and 100 and then what I want to do is and then I'm gonna then I'm going to make a shape and I'm gonna say the shape is 5 by 3 then I'm going to say Const equals TF tensor with the values and the shape so this is perhaps a bit more like how you might want to do it right for example I load this is me loading in a lot of data from a spreadsheet or from another API or loading image files and converting them to pixels there's actually from pixels function in tension flow digest that will just take pixel data and turn it into a tensor but so basically so so I have 15 numbers I set the shape and now I have this tensor and now we're gonna look at it down here let's take a look and see if this worked so now we can see now there's a little bit awkward to look at because of all there we go look at this it is 5 by 3 5 rows 3 columns so this is working this is good now what happens if I were to have 30 numbers I get that error but again this could be 2 by 5 by 3 and now you can see I have two chunks of 5 by 3 data so now at least we're able to see how this kind of shape stuff works and if I wanted to I could also add back in int 32 because maybe what I want are just integers and you can see it looks a little nicer there now here's the thing all this time I have been using just a generic tensor TF tensor but if we look at the API and this is the last thing that I wanted to point out here if we look at the API what you'll actually see is first of all a scalar so this is rank of 0 meaning a single number rank 0 there's a idea of a ranking here tensorflow 1d is Rank 1 that means a vector tensor flute atf tensor 2d is a matrix that means a matrix and 3 so even though you can just use TF tensor it's going to make your code more readable and you're gonna protect yourself for more errors if you use in here the actual if you actually specify the rank that you intend so for example if I just go back to the Sol for a second and I hit clear I could say scaler for so this now num dot print is just a tensor with a single number that's scaler now again I could have said num T equals TF tensor for and then I could say num T dot print this is exactly the same right TF tensor for or TF scalar but I've have possibly more legible readable code by saying TF dot scaler so now if I go back and look here even though I'm also just using the generic TF tensor this is really a rank three tensor a three dimensional tensor so to make my code more readable what I want to do is and and also to protect myself from errors what I want to do is come here and use TF tensor 3d so again if I know I'm just making a one dimensional vector I'm gonna want to use tensor dot 1d if I'm just making a single number TF dot scalar 1d so I'm just gonna change that here TF dot tensor 3d I am now going to go back to the sketch I'm gonna hit refresh and we can see there it is here is my tensor which is 5 2 by 5 by 3 okay so this I think this concludes this particular video tutorial where all I have done is show you what is it what is it tensor how do I make a tensor what is shape and what is data type now that I have this building block finished in the next video I need to actually talk about something these tensors are some are known as spooky music immutable whoo spooky whatever I'm not gonna bother this music they're immutable I cannot change the value so there is something called TF variable in the distinction between TF tensor and TF variable is important and I probably want to look at reshaping tensors although as well as I want to look at the operations so what does it mean to multiply tensors add stuff to tensor square tensors what are the kinds of operations mathematical operations just like there are a whole bunch of mathematical operations with a p5 Ector what are some of the mathematical operations where the tensile ojs tensor ok so that's what will be coming in the next couple videos you