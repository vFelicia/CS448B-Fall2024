welcome back here we are again another video sine cosine waves oscillation this is where i left off i'm graphing the sine function in p5.js with a lot of dots oscillating up and down i want to get to the point where i can have an additive wave like sum a bunch of different waves together to get a more a more variable pattern to do that i think i really first want to take this example and make it object oriented i want to define the idea of a wave class and the wave class itself would have just three properties amplitude period and phase meaning whatever these values are would translate into a wave that maybe looks like this or one that looks like this and then the idea being if i could add them together i might get something that looks something like this not drawn precisely there is another aspect here that i think i need to take a minute to look at i've been really informal mostly about the way i'm sort of thinking about period or frequency i've just had this idea of an angle and then we'll increment the angle by some amount if that number is really small the oscillation's going to be slow if that number's really high it's going to be fast you know that's a longer period lower period it doesn't have to be exact about it i just want things to be able to dial things up and dial things down however if i want to think about the fact that i have some a canvas and i have this x axis what if i want to just take any given point along the xaxis and get the corresponding y value knowing what the amplitude period and phase are so there is actually a very specific formula that i can use that ties directly to amplitude and phase and maybe i should have started with this but i think going through this will really allow us to sink our teeth into uh waves and and hopefully unlock a lot of creative possibilities for you that you might make following um these sets of examples so um let's consider a specific scenario so i have a p5 canvas we'll say that the width is 600 and i want the period to be of the particular wave that i'm going to create to be uh 600 i want the full pattern to exist from the full width the one cycle through the wave to be the width of the canvas let's say i want the amplitude to be 100 maybe the height of this canvas is 200 so you know 0 is up here 200 is here so we've got an amplitude of 100 in both directions so y for any given x is going to be sine of something the easy part here is probably times times amplitude and actually i know i know for a fact that i'm going to need a lot of space in between these parentheses so i'm going to redraw the way i'm doing that whatever comes out of the sine function is always going to be a value between negative 1 and 1. so whatever the amplitude is all i need to do is take this negative 1 in one range and multiply it by that amplitude that's going to stretch it out of course i could use the map function but you know just doing demonstrating a few different ways of doing the same thing now this particular scenario the period is 600 meaning i want to see one full cycle of the wave all the way from pixel 0 to pure pixel 600. basically the x value that i'm graphing here is some part of the way along through the full period and the full period manifests itself between 0 and 2 pi so the formula for that let me just write it out i'm going to basically say i'm going to write it out using p5 constants 2 pi times this is a times here x divided by period this is getting me to say like think about if x is 0 0 divided by 600 is 0 sine of 0. if x is 600 600 divided by 600 is 1 so i'm taking sine of 2 pi so this allows me to and given any x find the particular y value of the function given a with a given period and then multiplying the result of that by the amplitude now the phase i didn't include here the phase is just a little bit of an offset if i wanted the wave to start here this is maybe the equivalent of like pi divided by two right if the full width is two pi i wanted that to be where zero the zero value then i just need to shift everything over so that's actually really easy cause i can just add that in here phase plus let's see if i can write this out with with enough space there this is the full formula let's see if we can go back now to this code and rewrite the exact same thing but with uh an object that a class wave with an amplitude period and phase all right i've taken the liberty of creating a sketch that has a wave class in it with three properties amplitude period and phase so i'm going to make one wave with an amplitude of 200 a period of 600 measured in pixels and no phase no offset now i should be able to write a loop to look at every x position from left to right i'll space each one out by 10 pixels i then want to get the y position by saying wave dot aha i need another function so what should this function be called now i'm tempted to call this function f and basically it's going to return the result this is but this is very like a very mathy way of doing it i think i'll just call this calculate right now so i'm going to call this calculate so i'm going to say y equals wave dot calculate the y value according to the x value and what will that be well now i've just got to go ahead and use that formula i'm just on up there that formula that i have over here right i want to say return sign of this dot phase x divided by this dot period times this dot amplitude okay so take a look at this this is exactly the formula i worked out on the board over there now i should be able to just draw a circle at that x position that i'm in the loop and the y position that i calculated let's see what i get something well first of all i should make these size 10 since that's the space and then this isn't exactly right what is wrong here oh i i forgot a really crucial element here right i'm trying to figure out where is x along the path so to speak of that full period and then i need to multiply that by 2 pi because 2 pi is the angle that goes into the sine function that gets me all the way through the cycle of the wave so if this has to be even longer this needs to say 2 pi times x and there we go now it's in the wrong place this is because in some of my previous examples i had translated the origin to the center i think i can skip doing that here and just add some offsets here so for example i know this should be plus height divided by 2 i should just move all the y values down a bit and we can see there we go i've got essentially what i had duplicated now from the previous example but i have it as an object which is really quite powerful because now i can start doing things like oh let me change the period to 300. let me change the amplitude to 50. let me make the offset 10 right so all of these properties change the way the wave is visualized and ultimately maybe i actually would want to take this loop which is drawing it and make that a function inside the object itself so maybe a wave can render itself but i'm going to do something a little bit different here because i want to take multiple waves and add them together so let's turn waves into an array i'm going to start with arbitrarily just five different waves and i'm going to make them all random a random amplitude between 20 and 80. and a random period between 100 and 600 and a random offset between zero and two pi now that i have it as an array let's see if i can draw all of them and i'm going to use an enhanced for loop i'm just going to say let wave of waves and this will do exactly this for all of them so you can see there are all the waves and i'm going to say no stroke every time i run it i get a dif uh several different wave patterns it's sort of interesting to see them all just overlaid on each other what i was intending to do was say let y to add them together would say let y equal zero and then y plus equal whatever that way's value is and then draw the results here so this is now every time i run this this is five random waves added together and you can see this is starting to look quite a bit more like this example here the only difference is this is not in motion so how would i get this to be in motion that's a good one there's a few different ways i could probably approach this but for me they think the variable for me to play with to tinker with is that phase of each wave because right now i'm not panning across the wave i'm not seeing anything oscillate up and down because i'm looking at all the waves with a fixed phase they're all starting and stopping at the same place in the canvas earlier when i was working on this i made a very big mistake and updated the phase in here but i don't want to do that because this is happening remember for every x location so many many times i need a separate for loop that i'll just do afterwards and here i can update the phase and again maybe this should be a function in the wave class itself but i'm just going to very slowly just say phase plus equals 0.1 and now we can see there we go so now i've got essentially that example from before i kind of want to draw these a little bit bigger to have a little bit more overlapping i could use alpha i could start to connect them and color but you get the idea thanks to some folks who are tuning in during my while i'm recording this video i've got two excellent suggestions one is a probably a better way to name this function is with evaluate so i'm going to say evaluate and just change that here and then really this i agree this is really bothering me i'm going to add a function called update where the phase changes by some arbitrary amount and you can see this is just setting me up for success later where there might be more things that i want to do to update the wave more logic a variable behind what it increments by so i think you know the less that the wave itself is manipulated out here in the draw loop the more that functions are added to do that the better okay so this really wraps up this example i think it's quite close to what i had that what i demonstrated when i started this set of videos um and i think there's some a lot of creative possibilities how can you visualize this using color uh playing with you know how you orient this wave pattern um how you interact with it there's lots of possible things that i think you can explore and i hope you try to do those things but there's still a couple more videos that i want to make i'm going to make those as coding challenge videos in that they're going to be little sort of mini projects they'll be case studies in techniques that really build on top of all this trigonometry and oscillating motion stuff so i want to look at coding a pendulum simulation as well as coding a spring force a bouncing spring simulation and both of those will really be videos that i think take all of the concepts from chapters one and two vectors and forces and kind of combine those with the techniques that build up that that require angles and trigonometry here in these chapter three videos so they'll appear in this playlist if you happen to be in the nature of code playlist they'll also be standalone videos that you can find elsewhere but this might be a moment you know if you want to sort of wrap up and stop chapter three and explore your own exercise your own creative visualization of wave patterns and oscillating motion thanks i hope you enjoyed these i can't see to see what kind of beautiful patterns people make i'll include some links in this video's description to some creative other projects that make use of this kind of oscillating motion and i will see you in a future in chapter four or in the coding challenges or somewhere uh goodbye