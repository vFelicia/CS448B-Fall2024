okay here we are it is time I am going to draw into this canvas a kitty cat and then I'm going to have something show me here tell me is that a cat or is that a rainbow or is that a train now before I can get to that I want to first at least make this somewhat interactive that I can train for an epoch just by pressing this button I can press this button to run the test to see how many things I've got correct so I did some things in between the last video in this video I added the buttons here in HTML I used my magical advanced CSS abilities to to alter how those buttons appear I'm now I am now officially a graphic designer and I have also by the way moved some of my code into separate JavaScript files so the trainee pok function and the test all function are in this javascript file and I have this data prep javascript file just to kind of move things around so the first thing that I want to do is I want to be able to attach events to those buttons so I want to say train button equals select and I'm using the p5 Dom function train and then I'm going to say train button mouse pressed and I will yeah yeah I'm just gonna say write train epoch so this will run the Train epoch function once and the if you don't know about arrow notation or then you can check out my video about that but I'm trying to use it a bit more in cases like this test button a select test and then I can say test button dot mousepressed and do the same thing now here's the thing that I'm gonna actually write this function out a little bit actually so hold on a second I like I want to use the arrow functions but I really just refactor refactor later let's make this let's make this easier to read EPOC so well I'll write an anonymous function that's okay I can handle that you can convert it in your head to an arrow function I'm going to call train epoch I'm gonna have a variable called epoch counter which is equal to zero I'm going to say epoch counter plus plus and then I'm just gonna say create it actually I'm just gonna console.log it console.log and I'm gonna do exactly what I did here but I'm gonna say console.log epoch counter so every time I press that button it's going to train for an epoch increase the counter and console.log that and I'm gonna do almost the same sort of thing with the test button and test button test all and then I want to get the percentage correct test all I'm gonna say percent is percent and let me let me at least number format that number format percent comma and then let me also add a percent sign and one of these days what's that thing you can do in es6 now the back ticks I'll get to that at some point okay so this is what I'm doing I'll have a train button and a test button let's see let's see how this goes I am going to train let me just test cannot read property length of undefined all right so one goofy thing that I set up here is I've got to pass in the data that I'm using which I sure I could refactor in a way which I don't need to do that but 30 to pursue do I not have the 100 times in there let's I thought in my train test I thought oh let me let me multiply it by 100 so the percent right is point 35 but I want to multiply it by 100 so I see 35% 35.5% so we could see test test test no matter what now I'm gonna train unfortunately this is all blocking I would want to do something and I could use es6 and promises or I could probably set time out there various ways that I could make this asynchronous so that it didn't look browser didn't freeze up while it's doing the training but I trained for one epoch I test it again and I got 78% so now at least we've got this interactive I can kind of keep pressing train if I have the patience to do it and see if it improves a little bit 80% now here's the thing let's do something really exciting what I'm going to do right now is I'm going to add a draw function actually I'm not even gonna add a draw function I'm gonna add a mouse drag function right whenever yeah I'm gonna add a draw function know how to draw function and I'm gonna say stroke weight eight line P Mouse X P Mouse Y so this is in p5 the previous Mouse position then I'm going to add Mouse X Mouse Y then I'm gonna see what that looks like I don't see anything probably because I need to say I want what I'm drawing to be white there we go but now I want to only draw if I'm pressing on down on the mouse so I'm gonna say if mouse is pressed so now if mouse is pressed so I could draw my own cat I'm gonna work really hard on this I don't have a way so now all I need to do right all you need to do is grab the pixels of what I've just drawn and turn it into a 28 by 28 image that I sampled down and normalize to 780 for inputs give it to the neural network and have a neural network say so let's see if we can make that happen okay so what do I do now I'm gonna need another button and I'm gonna call this button guess and now I'm gonna say I'm gonna just grab all this code and I'm gonna say guess button equals select guess and when I press the mouse on that button what do I need to do so the first thing I need to do is I need to somehow make an inputs array I thought I need I need an input array with a bunch of numbers between 0 and 1.0 according to the pixels of what I've drawn what would be the best way to do this I could just read the pixels but it's 280 by 280 I think I can use copy I think are get I got an idea I think I can say let image equal get so I think the get function in p5 just grabs all the pixels from the canvas and makes it into a p5 image object so let's see what that does if I'm right about that yep I got an image that's 280 by 280 now what I could do is I could say image dot resize to 2828 let's take a look at that now I have an image that's 28 by 28 now let me load the pixels and guess what guess what everybody we are just right back to where we were earlier when we instead of reading in those bytes and turning them into pixels I now have pixels that I essentially want to turn into bytes so what I'm going to do is right a nice little loop I equals zero I is less than image pixels dot length and I'm gonna do something a little goofy here I'm gonna say I plus equal four so here's the thing this is by definition a grayscale image right I can't put anything but black white or grey in between here and so what what I want to do I'm thinking here I'm thinking here is that the red the green the blue values of each pixel are all going to be the same so I can actually just skip every four elements in that pixel array because the pixel array is RGB a RGB a RGB a so I should be able to look at just every fourth pixel every fir not every fourth pixel every fourth element of the array and say the the brightness is that image dot pixels index I and then inputs now here's the thing that's a little bit awkward I should be able say I divided by four mmm you know what I'm gonna do I prefer to say remember that variable I had called length let me use that that should be 784 another way I could do it is just say I times four right to skip ahead every four and then say inputs index I equals bright / 255 now let me just say console dot log inputs I just want to look at that did I am I getting an array that is 200 that is 784 floating point numbers long with each value normalized between 0 and 1 let's see let me just draw some stuff in here good guess and there we go now can I find ooh oh yeah yeah there we go look at this so it is working I mean I could have made a mistake somewhere but this seems about right so you know I I could be more thoughtful about drawing in a softer way that mirrors the doodles a little bit more and the thickness is really going to matter so I'm going to have to figure it out now I'm being asked in the chat shouldn't it be the other way around blackonwhite well here's the thing in all of my previous videos if I open up my processing sketch and this is a sort of point of confusion if you recall this is going to take a little while to load so I'm gonna talk while it's loading if you recall when I did all this stuff previously you did see a black pencil doodle on a white background which is this however what I did the moment I wanted to offer draw the pixels was I reversed it the data actually in the data set is the other way around so so machine learning wise I'm matching it correctly what I might choose to do just to like make this a bit visually more appealing is I might choose to just to be consistent here is let me go back to sketch where's my draw function where is that draw function what just happened did I put that draw function like Oh put the draw function in train test that was by accident let me move that back to sketch I'm gonna change the background to 255 and I'm going to change the stroke to zero and then I'm gonna do something weird which is I'm actually say 255 minus bright I'm gonna reverse it when I turn it into the data so I can actually look at it like this you know I kind of now in the canvas is white but I have an idea I'm gonna go I'm gonna say body can I say like background color and let's just make this some like light gray look at me look at me by CSS yeah I could see now you know this is what I'm drawing my cat so let's press so let's press guess and we can see it's still a whole lot of zeros so I think I'm good I think things are looking good okay now what I need to do is now let guess equal neural network dot predict those inputs and remember I did this in the testing I then already figured out the code in the testing to get that classification right remember this I have to find the highest in the in the outputs I have to find the highest one and what index that is and so now I am going to say maximum classification and this is really goofy but I'm just gonna say if classification equals cat this is like the worst code anybody could ever write but I'm just going to do it this way just to get this done and I'm gonna let those of you watching create your own variation of this with an actual interface and be more thoughtful about how you how you end end this up I got one more train console.log train ok are we ready are you ready are we ready I think we are so here we go so I'm gonna draw what I think is a cat some whiskers some whiskers I don't know and a little smiley old okay now I'm gonna guess what is that it's a rainbow of course it's a rainbow I haven't trained it yet so I shouldn't give I got the right answer we'd have gotten just very very lucky now I am going to run the training ok it's training it's thinking it's gonna train for one it would be nice to have an animation I'm doing a different one let's just run the testing you know it's getting the test data right 80% of the time so even if at best this is going to fail one out of twenty percent of the time which is quite often you remember recent events in our history here ok a guess a train let's train it one more time please II didn't think it was a rainbow this time let's train for another epoch try to get a little more accuracy here I think I can Orma lies the data correctly let's run the tests again 82% let's guess train so a sound board doesn't work it's a train everybody and goodnight thank you very much this is the end of this video alright alright well let's go back and do that again I mean I thought I'm very happy with it to fail but at least now I have the sound effects it'll be more entertaining okay all right I'm going to draw for myself a cat you know what I think this isn't thick enough one thing I should do let's let's actually let's take a look one thing that I could do here I want to see the resized image so let's make this a little bit thicker when I'm drawing I think that's gonna help where am i drawing again in the draw function let's make this 24 I think this is gonna be oh I don't know that's I'd have to look back at the training I don't know I think it was actually fine let's just make it 16 okay that's a little bit better so I'm gonna try to make a cat but actually one thing that I wanted to is when I press the guest button I kind of want to see that resized image where is that so let me also let's just see if I can I'm just gonna draw it image guess 0 0 I just want to be able to see it like whoops execute draw image on mmm oh not the guess image image I just want to see what it looks like yeah that's the smaller version of it I think that's okay that kind of feels like what the doodles look like so let's try ok I'm gonna draw a cat I really should probably use the rainbow give it some nice whiskers and now I'm gonna guess what is this now I haven't trained the neural network at all so I really I just have like a one out of three chance of getting it right it's a train and look there's my doodle sample down so that's not correct but of course it shouldn't be correct now let's train the neural network and it's gonna have to wet we're gonna train for a bebop here we're training okay we trained let's run the testing just to see 75% okay that's pretty good let's guess it's still a train I do want to point out though whoa what am i console logging here and why was it different something weird is good oh you know what because it's got all these pixels there now in the canvas ah so that was bad idea for me to draw that up there that was sort of just for debugging let's try this again let's draw a rainbow rainbow my people were recognizable okay so I'm gonna draw my rainbow right that's my rainbow I'm gonna guess it's it always thinks it's a train let's run the test data set it got 33 percent correct let's actually train the network not a rainbow probably it's very unlikely that this will work in any way oh we finished okay now here we go I'm now gonna guess again I can't brother look alright fine five five months let's train it one more time you need to e box for it not to just always think it's a train I'm kind of suspicious here that something might be going wrong it always thinks it's a tree it's a conspiracy because its second coding train alright we did two epochs let's run the test again hey art our accuracy went up from 33% to 80% I really should get rid of these unnecessary console logs and I'm gonna guess again here we go definitely gonna just say train it's me oh I get trained by accident you pok3 test 81% okay here we go yeah at least I got cat I mean we got to be happy that we got cat right let's train again I mean 20% of the time it's gonna be wrong and most likely more than that now is it did I do it is my data is the new data formatted exactly right okay did another epoch 81% all right I'm gonna pause for a minute here and investigate to make sure there isn't anything horribly wrong because what could be wrong I mean I'm not surprised as isn't working but if my data the way that I'm passing it and formatting the data is not the way it was trained then we've got an issue hold on everyone there's actually kind of a major problem right here I was being all fancy refactor we got to use this map function but that makes these inputs restricted to you into eight thingies integers only a zero or one I really want to just divide by 255 and make them nice floatingpoint numbers so I could go back to my loop or apparently I could say array from data dot map I believe this will create a new array and let me just check that in the testing I'm gonna say console dot log inputs and let me run test and now we can see yes this is a regular array with numbers that are somewhere in here oh let me look in the middle that are floating point numbers okay this is good this could be the source of a lot of our problems so let me take this and put this also here so that fixes it for the training and now oh and by the way while I was taking that break I added a Clear button and let me just show you the code for that trying to figure out what was wrong in sketch AS there is now a Clear button and all that Clear button does is draw the white background so we are ready to attempt again hopeful let's just see by the way what does it think an empty image is it thinks it's a train because as we know it's always a train maybe I should try drawing a tree let me draw the rainbow I feel like the rainbows got to be the most recognizable and I meet by the way I made the stroke a little bit thinner and I don't know let's make this the rainbow okay so now first of all I haven't trained it yet let's guess it still thinks of to train obviously let's test oh I forgot to have that console.log 31% I want to get rid of that console.log in train test let's get rid of that so let me start over here for a second and let me draw my rainbow and let me guess it is of course a train as it always is let's run the test we got 30% right because we're just guessing let's train for an epoch oh it's finished I get so involved with my dance let's we got 84 85 percent correct this is good let's now guess it's a cat watch look it's got whiskers and a little like little ears and it is totally I catch it has guessed a cat let's clear and let's try drawing a train this is my train it's got a big choochoo thing there's my train this is the coding train so I'm there's so much that could be improved here the real problem is that I am using a tiny data set the other problem is I haven't been really so thoughtful about thinking about this spatially I'm flattening this image into one vector of pixels and you know where where it's the using a so called convolutional layer in advance of this what this is over this like final layer is something that could actually help this to work much more accurately I hope to come back to that in a future video also probably adding softmax and crossentropy are going to be a way to sort of squeeze out a little bit more accuracy but ultimately what i wouldn't be curious for you to do if you're watching this I'm gonna there's gonna be more videos in this playlist but this is if you're watching this you're gonna and they don't exist yet what I would love for you to do is think about a way that you can try this with larger data try this with animation and think about ways to make this a bit more robust make it more creative and goofy and fun but we've got the basic idea here so share with me what you make all the code for this will be published there's so much more to do with it but we've got a basic doodle classifier that mostly thinks things are trains so thanks for watching the coding train after this video ended I went and tried a whole bunch of other drawings and they worked so right now you're going to see a quick montage of those moments where it worked let me draw a cat well I'm hungry I'm tired it's been a long week I'll be back next Friday this is my cat look at this this is getting okay you know I got a 1 out of 3 chance you