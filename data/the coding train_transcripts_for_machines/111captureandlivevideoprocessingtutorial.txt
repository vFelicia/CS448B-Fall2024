okay so we are now ready to move on to uh something pretty different and exciting um and what that is is looking at moving images so we spent all this time saying okay I could uh I could have a blank P image and I could figure out some interesting algorithmic way to set all the pixels of that image or I could have an image that's coming from aile like frog. JPEG and I could load that image and I have access to all the pixels and I can draw it on the screen I can manipulate it I can do all sorts of stuff what if however we could have a uh camera I don't know this is my weird drawing of a camera and what if I could pull in a live image from a camera into my processing sketch what could I do with that what if I had a you know a movie file could I pull in that movie and play back that movie in my processing sketch speeding in it up slowing it down going in reverse how could I how do how does all this stuff work how do we make this happen so let's first just take the basic transition from Flat image file to camera and the way that we're going to do this is with processings capture object so the capture object is part of processings video package now I just realized there's kind of a crucial component to this if you are using and again this part of the video sadly is going to be just become obsolete in a little while but uh if you are using the 3.0 Alpha Series and hopefully there'll be a beta soon or a final version this will be true for all of the 3.0 versions of processing let's come over here and look uh uh here if you if I go to um import Library let me just zoom in here import Library ad Library um and I pull this up your um you won't by default have the video library so I'm going to search under processing and this is what you're looking for you want to find in this contributions manager the video library by the processing foundation so in order to run any of these examples or to work with live video or recorded movies in processing you need this particular video library in all the previous versions of processing prior to 3.0 this Library came with processing but it's quite of a large uh a large library and also it's maintained and updated on a separate schedule so uh by pulling it in separately um all you need to do is hey whoa I have actually amazing I uh I forgot that I just did a fresh install processing here so this is we're going to test this out you just want to hit this install button and uh while it's downloading and it should be ready to go and now we're going to have this Library yeah and then it'll say remove so if you don't have the video library make sure you get it okay back over here once you have the video library you now have access to the capture object you also have access to the movie Object so capture being live video from some camera that's connected to your computer uh movie Object you'll use for uh video files um that you're loading and playing back in processing so here's the thing the the thing that's the most wonderful about this is that the both of these things are P images essentially all of the functionality image pixels width height copy any piece of functionality you learned and practiced and did with P image you could do exactly the same functionality with capture and movie The only thing that's different is when you load a p image like frog. jpeg those pixels are never going to change unless you change them right that file that image is a flat static image those pixels are the pixels you can do all the same operations but with a capture object or a movie Object those pixels might be changing According to some schedule of course we have total control over that schedule we could say give me fresh pixels from the camera or stop giving me fresh pixels from the camera or Advance the next frame of the movie or don't Advance the next frame of the movie so this is an added piece of the puzzle that we'll be able to work with as you start using these classes so let's let's sort of uh let's look and see how this would work and there's a couple little nuances here so I'm back over here and I'm in a sketch so this is just a kind of a simple processing sketch that that I think we did at some point in an earlier video I'm loading an image and I'm drawing on the screen I'm using a couple things one you can see I can dynamically resize the image as I draw it using the mouse or I can also tint it meaning change its color so what I want to emphasize in this just first uh part of this video is let's let's make this the capture object from the camera I have a laptop in front of me it's not all magic let's get that image from that camera and let's see that there and do all the same stuff for it so instead the first step is instead of a p image I want to say capture and I'm going to just say video now notice as soon as I do that I get an error message it says um if I look at the errors you can say the class capture does not exist now this needs a little bit of work here but it's actually giving me a suggestion which is nice this is part capture and movie are both part of that processing video library that we just installed so even though I've install the library I have to in my code make an explicit reference that I'm going to use it so I'm just going to it processing will add this for you automatically in a bunch of different ways but I'm just going to do it manually so I just need to have an import statement at the top import processing. video. Star now I have my capture object now you might think you would say something like I said load image load capture or something create capture connect video start video um the way that this works however is uh there is no function like that we need to use the sort of tools and syntax of objectoriented programming so let's come back over here and if I have a video object the syntax is to say I want to make a new capture object and I need to figure out what goes in there so what might be some parameters that you need when you're about to connect to a live camera maybe you might say ah uh camera over there I would like a very high resolution image or a very low resolution image so some parameters we're going to put in there is the width and height of our requested uh images that we'll get from the camera another piece of information that we might put over here is uh frame rate do I want to get images from the camera at 30 frames 60 frames 120 frames 15 frames now with both of these frames per second so so with both of these certain cameras are only going to support certain resolutions and certain frame rates so a lot of this really depends on what you've got and I'm going to show you a way to figure out what your camera makes available to you but you know generally speaking 640 by 480 30 frames per second those are kind of good numbers to use and in fact this is an optional parameter you're just going to get the default frame rate if you don't uh request a specific one which is usually 30 frames per second now there's another argument that needs to go in here and this is one of those tricky ones that appears in when you're using in a lot of times when you're using a processing Library one of the things we need to do is we need to say hey capture object camera I you're going to have new images available you're looking at the room you're looking at me you know where I want you to give those images I want you to give those images to me who's me this particular processing sketch this sketch so the keyword this needs to go in here now we could have a much longer discussion about what the keyword word this means and Java and then we could sit here and complain for a while about how confusing these like archaic Concepts in like oldfashioned languages like Java are but for we don't really need to worry about it too much to make all this stuff work we just need to remember the keyword this goes there and I think it's useful to kind of think about the fact that this is referring to this processing sketch I don't want the camera images to go to some other program on the computer I want them to go to this processing sketch and we're telling the library that this this happens in a lot of other ways behind the scenes in processing but you you don't always have to use that keyword this capture and movie are two instances where you do okay so let's come back over here and let's say uh okay video equals new capture and what do we say we need to say this we need to give it some resolution and a frames per second let's do this and um so we're making this argument that I can now get rid of frog we don't need the Frog but everything I did with the Frog I can do with the video so I should now instead of seeing the Frog image I should see the video no video but I didn't get any errors seems things seem to be working so things are good okay there's a couple things we forgot what did we forget one thing we forgot is that we have to explicitly tell the video to begin so one thing we need to add is video. start start there we go coming over here come back let's add that in and I'm going to go here video. start now let's run this again it's not nothing oh but look you can't see this but I can see it there's a green light I've got a Mac laptop with a builtin web camera there's a green light over there so the camera is going but I don't see the images why not there's another key function that we've missed there's a key function in the video library and it is called read read we need to with with with a loading a static image it's sort of assumed let me get that static image I've got it let me display it with a video image we need to explicitly say at this moment in time I want you to give me the freshest pixels from the camera possible and the function read reads the current image that the camera is seeing so one thing I could do just as a sort of quick and dirty solution to this is just say video. read in draw so every time through draw and like draw is looping looping looping give me fresh pixels give me fresh pixels let's run this we're going to have some weird crazy video feedback thing probably Happening Here uh oh wait wait because the mouse there we go look look there I am and look I'm actually here and I'm here and there's all sorts of weird like strange interference and there's green behind me because all secrets are now revealed this is a green screen but someday I'm going to they do this in a different way and there's like all sorts of crazy jittering going on I I don't I think a lot of weird stuff is happening um because of actually not necessarily so what I've done is kind of a bad idea um because oh I guess I have the ttin I don't know what's going on with this Jitter but I a lot of it has to do I think with the way I have this recording system going on but also let's just say that there is a bad idea here which is that which is that and um which is that there's no reason for me to uh uh read from the camera every time uh through draw in fact I only want to read from the camera when the camera like draw is actually running at 60 frames per second probably the camera is going at 30 frames per second I only want to read if there's an available message uh if there is an actual actually a new uh image available so one way I can do that you can see I've added this if statement if there is a new message available from the camera uh and actually let's we we see the point that um tint and the IM resizing is working so but let's just take that out for right now just so we have something a little bit simpler to look at so we should see now the image and you can see none of that weird jittering and all that stuff is happening and I can you'll see the what's going on here so okay so uh this works um and and in fact we saw that that was a bad idea not to have this video dot available but even this is not the best we can do we can do better so how can we do better one way that we can do better is uh we can Implement something called a capture event and I'm going to take this out here look at this now I've taken video. read out of draw and I've placed it in the capture event I placed it inside this function called capture event so what is hopefully familiar to you is a function like this this function is an event call back when the event happens I call back to that function and Trigger the code that's inside it so when I click the mouse I execute that code capture event is an event that's triggered by the camera itself whenever um Whenever there is a new frame New Image available from the camera so this now is happening off almost in a different place like this is the code for like I just want to continuously always read from the camera no matter what's going on so it's always reading the freshest image whenever there's an event just to just to kind of demonstrate this if I took video. read out of here and put it in mous pressed when we run this uh sketch now there's no image here but whenever I click the mouse it's going to take a snapshot of me right I'm only reading the image from the camera when the mouse is pressed this is like way too much fun right so so this is something you can see you have a lot of control here you can choose when you want to read when you want to stop reading reading I could now copy those pixels into a different frame so if you wanted to build say a photo booth application where you're seeing yourself you click the mouse you get a snapshot it prints it out it changes the colors it does stuff to it all of that image processing stuff we learned you can do all of this to this image so any single one of those examples we can go back and replace the image with the uh with a live video let's just do one of them uh okay so let me save this oh uh there's a couple there's a detail that I forgot but since I'm on this uh let's go uh open recent uh the particles one so if you remember this particular example where all of these things were streaking out and coloring the Frog image um let's remake that with capture let's just see that this actually works what are we we're at 15 minutes that's not terrible you're still watching you're very kind okay so I'm going to change to capture and I'm actually just going to call it frog just just keep the variable name the same let's make the windows 64 ah I there's a yeah let's and let's say instead of load image now we're going to say create capture uh this 640 480 and then we're going to say frog. start and then all I also need is capture event capture video video. read so you see how like in a matter of I don't know said create capture new capture create capture doesn't exist it's that's the that's the function that we we hope and dream for but uh we have to say new capture so um all I did really really quickly here was instead of having a p image and loading from the hard drive I changed the the the variable frog from a p image to a capture I instigated that capture and I make sure I'm reading from the camera continuously when I run this sketch it should actually be identical to what we had before only now uh right it's uh painting uh me as I'm trying to like stand still and you can see it's pulling the pixels from me and I could uh add like 2500 of them so we could see this a little bit more clearly this is really like a weird strange like performance art thing and you can see that as I move it's updating so this is like really where you can start to play around and kind of create this idea a of a software mirror so what is a system an independent drawing system that you could make where you're pulling colors from a live uh camera actually this is kind of a not not I I sort of like this example okay I'm G to stop dancing around from the camera I'm having too much fun here and okay so there's a couple key pieces of uh here now let's say oh I what I this is the most beautiful visual artwork made by a computer that anyone has ever made in the world that I must make it bigger and put it on a giant screen screen and everyone must experience it so um I'm going to make uh this I I don't know what the resolution of this computer is right now I'm going to make this 12200 by 700 and I'm going to run it again and you can see now uh here we okay so I I have this like giant window but oh it didn't work because the image is still like 640 by 480 even though it made my processing window bigger and actually the the way to do this by the way in processing while we're here is display with display height now this is what I wanted to demonstrate so I'm going to make this giant full screen thing uh it's going to open up it's taking over the screen and but I don't see anything at some point uh because my resolution everything's all oh there's some of them and they're coming over here but again the image is only this size so how do we deal with this problem well there's a couple and I'm just going to go back to 640x 480 for a second so there's a couple ways to deal with this problem number one is we need to figure out well couldn't I capture a higher resolution image from the camera why not right let me if I can get a higher resolution image from the camera so one thing we want to look at is what are the possibilities themselves so one thing I'm going to do there's um a function in the video library called list capture. list this is actually giving you a string array so I'm going to just say print array so I can see what's there and we're going to come down and run this and look in the console hopefully I'm running this now right and you can see you can see like oh there's all these options oh look the camera will actually give me a 1280 by 720 image and look at all my frames per second options so these are actually all the different and if I had multiple cameras connected to this computer then I would see like oh I could pick the camera that I want maybe I want this external webcam or this other camera source so this is useful and you can can actually pull you can pull this string out of the array and pass it into the capture Constructor and it'll uh so you know if if I were to just say this capture. list index you know five what I'm actually doing is uh using this configuration 640 X 360 frames per second one so you can pull from that list the configuration you want for the camera so that's sort of like a bit of an a side note that I think is useful for you to be aware of but I think what is more relevant here is not actually changing the resolution of what I'm getting from the camera let's think about it this way what if I were to say let me make this 1280 by 960 what I just did is double the size of the window relative to the size of the video that I'm capturing if I run this once again yet again as we've now seen this many many times takes so long for this start up this is very awkward uh I'm only getting colors in the top leftand Corner because I uh I doubled the size of the window but the the capture image is still less so what if however though what these pixels are at an XY they're moving all throughout this much larger space what if I said as the pixels are moving around this larger space sample down when you go to look up a color how do I sample down I just divide in this case I'm just going to divide by two so now that I've done this I I should have a much higher resolution processing window that's looking up colors in a lower resolution image and you can see here as I change the camera I now have this ridiculous thing that I've made at a higher resolution um and I'm waiting for those to come back into the center at a higher resolution but my capture is still at a lower resolution the reason why this is so crucial is and I'm sort of it seems like I'm spending a lot like way too much time on this and kind of wasting a lot of times this video is already 20 minutes long but this is going to come up again and again one of the things I hope to show you in the next video is using a computer vision Library like open CV to say find faces in an image however that's a very expensive process that can be very slow so you want to find the faces in the lowest resolution image possible but then use that data that you found in maybe a higher resolution display so this idea of having a scale of variable and one of the things that you'll see in a lot of my examples if you go through them is a variable like video scale in this case equals two so I might say here in capture you know width divided by video scale height divided by video scale so I can use that variable which is always keeping track of what's the ratio from my source imagery to my screen resolution that's something that I think you want to kind of keep an eye on as you work on projects like this okay sorry so I'm what I would suggest you do as an exercise and I didn't get to loading movies I'll make put that into a separate video but what I would suggest as an exercise is go and find something you did with a static image where you manipulated the pixels or looked up colors in those pixels and try to remake that exact processing sketch but with a live capture instead and see how that goes and I will see you in another video in another time in another place okay