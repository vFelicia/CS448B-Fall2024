so stop hello I'm trying to make a grand entrance today welcome to coding rainbow episode 48 uh I've typically had a problem where this sound isn't working correctly when I first started the last couple times so please immediately in the chat if you could let me know is there any static clipping I'm playing some music can you hear the music in addition to seeing me talk and hearing me talk um hopefully that's working okay welcome I have a bunch of things I'd like to discuss um this is episode 48 I'm live from the school for poetic computation here in the West Village of New York City uh sound sounds good thank you very much uh and I'm I Okay so turn the music off for a second so I so first of all if you're watching this in the archive go and check the video description there'll be links to time codes of where various things happen but I I'm a little bit flumed and flustered because I today what I want to do and it's been requested and I wanted to spend most of today talking about and looking at different examples around the larger topic of computer vision have this camera that I found here it is a Sony PlayStation I camera and you know I used this it was this is probably like five years ago at some at this point but I used to use this with processing on my Mac all the time and it was good for an external webcam um and uh it uh doesn't really work so much anymore so I have a weird sort of like hacky way that I might try to get it to work and you might be asking uh why why do you want to use that camera anyway you've got this thing I'm going to go here right I have a webcam right there there I look it's me look at this a little behind the scenes going on right now you're seeing this live composite but really what I am is a person standing in front of a green screen and then I'm putting the my computer screen behind me and then anyway you get the idea but the point is I could use this um in uh to demonstrate I need a live I want a live camera feed to demonstrate some computer vision ideas and topics um but what I was hoping to do was have a uh take this camera here I don't know what I'm looking at anymore and uh tape it right here and point it down at the table because I have these cups o maybe these would be good for juggling no not so good for juggling um I have these cups look at I have these cups and I was going to use these as uh things for the camera to look at uh and move them around and show you how to and and talk about blob detection um with these that's being so to make a kind of interactive tabletop type thing but I couldn't get that camera to work so I think what I'm going to do today is luckily so just so happens I happen to have this green screen here so I can actually move my laptop over to here and uh point the camera and I have this really nice clean image so one of the things you want in it with working with computer vision applications um the types of things that you might do is to create a a really for a lot of the demonstration I want to show you having a high contrast image something with a very different foreground and background and so oh look at this watch this I have a weird idea I'm looking this is the problem I'm looking I'm not looking at you because you're the one watching and I have a piece of tape here this is going to be excellent there we go now we're going to use this for blob detection so one of the one of the things that I want to do today I'm standing in front of it is whoa look at this which is the real cup is this the real cup or is this the oh my mind is exploding freakish i' like everywhere I look there's a screen or a camera or some copy of me and I'm just take a deep breath put my music back on okay I think everything's everything's starting to feel a little better and a little more Cal I'm walked into it okay so one of the things I want to talk about today is blob detection and what do I mean by blob detection I mean how can I have a camera a computer how does it computer vision by the way this idea of computer vision the computer that sees how do we write algorithms for the computer to be able to look at an image and analyze that image and produce some sort of result some evaluation of that image and that can be a lot of things from I think there's a person there or I actually recognize that there this is a landscape scene of a beach you know all sorts of machine learning type kind of things but I want to start from the very Basics and we could say like okay there what colors am I seeing me the the camera I'm seeing green and I'm seeing red where are the red colors they're over there is there a lot of red is there a little bit of red um that sort of thing so I want to start to look at uh that type of stuff okay so um so that's kind of one of the main topics today the other thing is um I got to close this uh let me see if I can find this uh I'm going to open up processing I am going to uh so let's see it's about 1130 a.m. eastern time right now and I am going to uh find an example I should have should have prepared uh processing uh maybe here fireworks oh it's not here oh you know I probably already put it maybe I put it on the uh desktop here uh no uh I want to find something hold on you need to listen to some music while I'm looking oh no ah hold on everybody okay I'm I'm I'm searching for something now enjoy the music need to get some more creative comments music where would I have save that oh I know where it is I know where it is time out I know where it is I forgot where I put it okay okay so I want to do a uh coding challenge today since it's the July 4th holiday coming up fireworks in in here these United States where I am currently and so this is kind of one of these uh guess I should turn the music off maybe um oh it stopped anyway um this is one of these sort of classic uh computational visualization algorithm things you know when you first start learning creative code and graphics and programming and think hey let's make a fireworks simulation and there's particles and a little physics and some stuff there so I want to do this um today uh before I leave here so let's say this is going to be about a twohour session and spend an hour and a half or so on various computer vision topics and then when there's a half an hour left I will stop and do this coding Challenge and I will also happily take your questions okay so in a moment I'm going to start with the computer vision stuff um before I get to that let me just say a few words again if you are new here uh I'm going to mention that uh if you're wondering what this is you can go to coding rainbow.com uh all uh what I'm doing now is a kind of raw unfiltered rambling discussion of creative coding topics I will program things and talk about things and watch this YouTube chat and answer questions um and once this is done I will take uh the sort of cogent chunks of video from this two 2our plus session and edit those into uh tutorial videos those will appear on my YouTube channel uh so if you want to be get notifications of those you can subscribe on YouTube um I also am running something called a uh patreon which is a kind of crowdfunding for media content podcasts videos other types of things too um and so you're welcome to consider joining that uh for joining that there is a uh slack channel that you then get invited to where I discuss this discuss topics I'm going to do and answer questions and that sort of thing a nice community of folks um and then the last thing is if you want to know when I'm going to be doing live streams you can scroll down and put your email in here and I will send out emails as those of you who are on this list notice I sent out an email like 15 minutes beforehand but sometimes I'm better about scheduling and I'll tell you a day in advance or two days in advance that sort of thing so this will be um my last uh coding rainbow session for this week uh I'm I'm traveling next week so there won't be any live live session um I am personally committed with this sort of patreon thing that I'm doing to doing four sessions per month which is once per week I have been getting more I I would say I'm I'm right now I'm operating on like six or seven per month so I'm kind of exceeding that but since I'm missing next week certainly the week after I'm going to make sure I schedule to do two live sessions so that I've caught up there um and that's kind of my plan one of the reasons for doing the patreon is to give me a little uh uh uh what's the word looking for so to give me some sort of like uh obligation so to speak so I feel um that that I'm kind of uh making sure I'm doing it ah uh neon cat fan asks in the chat if anyone has backed Pebble too this by the way is a pebble watch I I don't mean to be a Buzz Marketing Pebble by accident I I like it just fine take it or leave it um but I'm thinking of getting a pebble too okay um so I'm going to start getting myself set up to talk about some of these computer vision topics uh if you have some questions before I get started ask in the chat so um two things I want to do I'm going to let's put on some uh music again uh so I'm going to get a few things open here that I'm going to reference okay you can see all my looking around to try to get that PSI to work it ended yesterday uh okay I'm looking for now uh I'm going to find my playlist aha okay now let me see here I'm this is just me this is by the way as if I'm not live streaming right now this is what I would be doing by myself and i' like lose my chance okay I'm looking for hold on uh I want to I'm starting there's an example that I want to start with and so I just want to pull it up uh LP there we go learning processing video color track is where I okay want to know something quite amusing here which is that uh I'm using something called cam twist I forgot that I had that running okay I'm going to turn that off so I'm going to talk about cam twist in a minute this was my secret way of maybe getting the PSI to work ah seriously oh that's why no uh sorry everyone hold on I am trying to figure out why my computer is doing cam twist only I might just need to restart oh boy really wants to do cam twist badly all right I'm going to restart this computer uh hold on save as uh computer vision one hold on this computer is going to restart Oh look The Empty void of nothingness please restart sooner than later oh look oh did you hear that sound did the uh did the B sound actually uh make its way through to the to the stream okay so um I am okay so sorry this is not going very well so far okay let me log back in uh see if I get rid of this cam twist thing that happened by accident uh I'm going to open up processing so open recent computer vision come come come let's see ah I guess I have to uninstall cam twist I should not have installed it I killed my computer by installing cam twist okay boy this is a big failure today okay let's see how do I uh hold on I'm thinking uh probably installed some drivers I have have what's that thing called that I have uh uh clean my Mac okay sorry stop with this I was just going to use this I have this software that will automatically uninstall things nicely but instead uninstaller I want toinstall cam twist here we go uninstall sorry everybody this is really not going very well today uh okay let's see if that helps I might need to restart again cam twist oh my God dud crazy let's try restarting one more time now that I at least did that uninstall I might have to just I could switch to using a different computer actually I have a whole there's lots of things I could do actually um which I might in a second take some more anyway so just to just to to while um while I'm kind of getting started here what's this over here that's you're seeing there's something oh this it's a t Okay um okay let's see now I'm hoping this is going to be the moment uh usually I do this kind of stuff I I say usually I do this kind of stuff beforehand and I I say that just because aspire to do this beforehand and I had done a lot of this beforehand okay I'm going to take more drastic measures um what I'm going to do is create a new 50 people are watching this total disaster by the way this has happened to be in real life class this is actually real life class too um okay uh gosh uh let's make a new user let's see if I make a new user uh uh coding rainbow uh create user uh that's fine I don't want to password I want this user to be an administrator uh and I want to log out oh look at this coding rainbow is a parrot I'm hoping don't sign in definitely not yes skip oo oh I feel so like I'm in the mountains all right thank you okay uh let's quickly I'm going to do something silly which is I I think I'm actually just going to be fastest here to download processing uh I think this will actually be yeah I it is true that I one of the big issues here is that I'm using a Mac ah okay let's come here take this move this to the desktop and and I'm opening processing I hope this isn't anybody's first time watching uh I don't need this message now I'm going to add a library and I'm going to add a video uh and it's going to install that oh boy this has really been going for a half an hour that the camera's about to shut off that's bad uh okay now uh examples um libraries video let's go to capture let's go to getting started capture and let's hit play and let's ah cam twist has taken over everywhere this is crazy okay oh but look I am back here okay so at least I I I thought I saw some yeah look cam twist is still there oh and all right hold on let's just try one more thing here uh I think I'm going to be back in a second I have some good for all of you who think this is like total complete failure today I do have some good news I purchased some fresh whiteboard markers uh okay now I have a feeling that back here at least if I go to uh video capture getting started capture and run this we're back okay there's an unfortunate reality here which is that I think I've done so many weird things that it now takes like 5 minutes for the Pro to start I'm tempted actually to do these examples in JavaScript uh just in the browser okay so at least I have the camera working and I um and I have a feeling that the cam twist thing which is really irritating me I will uh I might install that back later it's just I think that uh maybe I just need to do this open recent computer Vision one let's try this oh sorry oops uh okay hold on we're getting there okay I've got something going now all right I've got something we can work with here so just frustrating me that uh all these all these like horrible error messages are all because I installed that cam twist thing and I really wish I could get rid of it because it's messing with what it is that I want to do and I want to see I want to get 640 by 480 from the camera so give me a second here oops I need print array ah one more time okay now I'm looking for FaceTime HD camera 640 by 360 really uh that's fine 30 frames per second is cameras three and I'm going say 640 by 360 let's start this off so what uh what I'm doing by the way if you're confused is I'm just trying to get my um previous example I I made a video a long time ago about kind of computer vision in general and I I had one example which uh does tracking of a red color so I thought yeah so this is where I'm sort of starting with and so I'm I'm what I'm going to start with the first thing that I'm going to do is you can see that there are some things about this that kind of work in that I am able to effectively track this cups location but you'll notice this sort of like circle is jumping around so this particular example is looking for the sing most red pixel and what I want to do in uh talking about computer vision is a few things number one I want to look at how I would then find the average location of all red pixels which will give me something more stable and more accurate from there I also want to look at um how I would then track motion so I think looking at tracking motion can be useful um pixels that are changing and then from there I want to look at actually blob tracking so not just the average location but thinking about what is the sort of Si what are the what are the dimensions of this blob of red pixels and then what happens when I have uh two of them and can I have multiple blobs moving around and you know what if I just use the red color I don't need a table top this will work so and um yeah so and then I can also I have my permanently okay so I think we're ready to get started with some of this computer vision stuff I apologize for um taking so long to get going with this so let me get back uh to this particular example I'm very frustrated about the red error messages with the cam twist thing there must be like um I I want to like there must be a driver somewhere that cam cam twist what if I do there's still something on the computer o where's this ah look at this ah look at this let's do this okay hold on I I I stupidly used that I um okay hold on we're g to make some magic happen here just bear with me for one more second this is what I want I want to do this I think the like driver or whatever for cam twist is a great thing I love cam twist I was going to use it to show you something really kind of cool but it's messing with my mojo right now uh so let's see uh this is already I think this is what got removed already um okay so let's see if that helps matters oh I should have just looked for that ear I'm such an idiot that I didn't do that earlier okay yay so I um so uh great and so here I am 640 by 360 is still cameras 3 great okay so things will work a little more smoothly now with no error messages yay okay now I need to go to the browser and I have to find these two things that I want to reference um and uh uh open Frameworks uh uh computer computer vision book so uh somebody correct me if I'm wrong but this is um this by the way this website that I'm at which is openframeworks docc fbook is a online book about using open Frameworks which is a C++ creative coding platform and I believe that a lot of this material was put together at a doc Sprint that happened at University of Denver the EDP what's this program EDP Denver uh emerging digital practices at the University of Denver great program Chris Coleman uh is there he supports a lot of wonderful uh uh creative coding types of things anyway um I am not going to work with open Frameworks in C++ in this particular video or session however you will find that a lot of computer is there still a cup taped next to me yes I love that I'm doing this whole tutorial with a cup tape next to me which is now also like this weird cup that looks like it's on my computer screen okay I don't know what I'm doing here this is all making me very uncomfortable all of a sudden uh okay I was talking about something meaningful and important now um ah yes so you will find as you if you do research about uh computer vision and look for examples of artists and um and uh uh and scientists and all sorts of other people working with computer vision that a lot of the open source libraries and examples and tutorials are written uh with s C++ as a platform there's a number of reasons for this number one uh when you what one of the core things you have to do with computer vision is read pixels and reading pixels can be a slow and expensive operation and uh C and C++ being a kind of language that allows you to program kind of lower level native to the computer itself uh you can kind of squeeze the most speed out of that I'll say that processing um actually runs incredibly fast for doing this kind of stuff too um and for most many things it's going to work just fine um so and also just a lot of the libraries so there's something called open CV open computer vision which is probably uh one of the most wellknown computer vision uh code libraries it is written in C++ so if you happen to be you know writing an application that you want to use C++ if you want to use open CV writing in C++ could make a lot of sense there is a processing library for open CV there are lots of computer vision libraries for uh JavaScript and so I'm going to stay in those worlds and uh but I encourage all of you watching or participating or learning to explore some of the open framework stuff to communicate with me maybe we can Port some of the examples back and forth so um so that is uh one thing that I just wanted to briefly say about that the the the reason why I'm also showing you um this I just uh um noticed last night is that uh let me let me go to uh so this is um article written by Goan Lev I'm going to try to make it something that you can see here and what I think what's great about this particular article and I encourage you I will include a link to this in this video's description is uh you're going to get a nice uh historical context you know it might sort of seem like oh computer vision that's a new thing or open CV there's this great open CV Library not you know new being in the last 10 years kind of thing is um but artists have been working with computer vision ideas you know since the six late 60s and possibly earlier but you can see myON Krug myin Krueger being kind of a seminal example of that um uh there are other examples of golan's own work uh and um other types of things that you would look here so I would encourage you to read through this the other thing that I think is particularly useful about this article is this section called Elementary computer vision techniques and this is kind of my goal here in this session is to show you how to perform these Elementary computer vision techniques from scratch with the sort of raw guts of the code to understand how these algorithms work in practice you might find it more convenient to just use a library that's going to have it implemented already but I think the idea here is that number one it's kind of interesting you might just sort of enjoy this in an academic sense to sort of learn the other thing is if you to use the library it's often helpful to have a kind of an understanding of how the algorithms are working in order to be able to manipulate the parameters and uh and stuff of the library but also to be honest you might come up with some creative weird strange idea application technique that isn't possible that isn't built in baked into a library so I think it's worth kind of looking at these stuff so I'm going to read these to you uh detecting motion this is something I definitely want to try to do today detecting presence uh we could look at this too detection through brightness thresholding this is a really uh this is would be useful simple object tracking uh basic interactions um and then then there's some uh more stuff here about different examples and authoring tools and that type of thing uh there are also um source code examples frame differencing background subtraction brightness thresholding brightness tracking you know what might be useful to do this says these the following programs are known to work with processing version 135 let's do something for the world today and let's uh download each one of these examples and let's uh check them and make sure they're working with the latest uh processing and update them if they're not I wonder if if these are GitHub links or no these are just uh straight files so I'm going to do that uh first in this session to kind of as an overview things so I encourage you to check out to this I think would give you some nice background and context to the tutorials that I'm going to do and I I also just want to credit them because a lot of my knowledge or ideas come from these tutorials and I think this open Frameworks book also is great I mean it's and there's a lot of really important key stuff one one like really uh fundamental diagram I I have video tutorials that go over this already so this is knowledge that I'm going to assume in the tutorials that I do today but this is sort of a key thing that you need to be comfortable with in terms of how the pixels look how the pixels are numbered and how they're stored in memory but and then the other aspect of this uh is I don't maybe there's not a diagram here I have to find my own diagram for that but which is how do how to think of the pixels as XY pixels but look up that individual index in that onedimensional array okay so that is some background um so I'm going to get the first thing I'm going to do just to kind of get warmed up I think is I want to uh open up these examples um and you know what maybe we're going to make this uh well I'm going to I want to open up these examples and make and see that they work in uh processing three but if you have questions or comments or thoughts there's still a cup here it's a little bit weird uh please let me know uh ah yes so uh one question that's asked is could you try to do an authentication through retina scan or face detection I absolutely want to do in in a way like um so first of all in case uh you're not aware uh where I am keeping track of where I am keeping track of my list of topics is in this uh GitHub repository coding rainbow / rainbow topics so you can open a GitHub issue to suggest a topic you can also upvote them because I uh one thing I can do here sorry about this let me just make this a little smaller uh is it I have the possibility to go sort by uh reactions and so I can sort by thumbs up and you can see that computer vision is right here on the top and I have uh an outline of the things that I'm planning to do and you'll see that I don't know why I'm backwards here you'll see that I have on my list face detection a long time ago I taught a course called uh faceit which was just a whole course only about things you can do computationally with faces face detection face recognition uh you know tracking eye tracking that type of stuff so at some point I'd love to expand that playlist I I have this list of stuff that I want to do in this YouTube channel that is you know I could if I was doing this even if I was doing this every day for like it would probably take me a year to get through all this stuff so we'll see but this is kind of what I'm working with um okay uh um so let's get warmed up here and I'm just going to uh let's go to frame differencing so I'm going to uh open up processing I'm going to save this as okay I want to make a folder on the desktop here called I'll put it under coding rainbow and computer vision uh and then what I'm going to do is save this as in the uh desktop of coding rainbow computer vision let's get a shortcut to that here uh and let's save this one as frame differencing so oops that works uh oops I lost that code yeah so this is frame differencing by go 11 uh oops I'm sorry I'm uh frame differencing paste this in here let's run this so I'm assuming that this isn't going to work and you can see that it is not working so let's update it for processing 3 and let me see if I can find some of the things that are different so the video library so the older version of the processing video library used to be built on top of Quicktime and it's currently now built on top of something called gstreamer uh and one of the things that it needs is a video. start and that might be actually all we need um oh you could see and we had it there oh there we go so this is now working so turns out that all I actually needed to do for this particular example was um was uh add that video. start I would like to change one other thing however I think this is a very reasonable way of doing things but I rather prefer to use the capture event and I will rather than if video. available and I I'm a little skeptical of this load pixels in setup um but it's interesting that that works I'm sort of surprised this I think should be in draw but let's see what happens here we might get some weird flickering based on what I did yeah notice that do you see that flickering so let's see if we can eliminate that flickering uh oh look at that interesting oh I like the way that this is being done so okay I'm not going to get lost in uh I'm not going to get lost in this example because I I want to make some other changes to it but okay but let me let me just cover at least what's going on what's Happening Here and I I kind of screwed it up and I'm gonna I I I'm gonna I'm going to get to that later but uh what's going on here as you can see if I'm completely still the window is black and as I move you start to see these colors what's happening is a video image is a frame of pixels followed by a frame of pixels followed by a frame of pixels followed by a frame of pixels and um what this example is doing is it's taking a current frame of pixels and comparing it to the previous one and taking each color each red green and blue component and subtracting the previous so as the pixels move we're seeing the difference between those two colors um so I I have a feeling that uh each one of these and and actually I'm going to come back to this later um each one of these is probably um probably works just fine uh if I just add the uh video. start so um someone remind me I will get in touch and uh see if I can help just so this is actually really useful I want to use this look there's the cup is so I want to use this idea of uh thresholding as well during this discussion okay we better just get started I think I want to start doing the actual programming of stuff um because I've been going for almost an hour just kind of getting myself set up okay uh so I want to reference golan's article I want to close this I want to get my processing code up I want to start with this particular example which is uh uh going to track this particular cup um so that's working well and then the other thing that I'm going to need is the Whiteboard let's see if that exists how's the focus if someone in the chat could tell me if the focus on this is reasonable that you can read what's here I don't know why today feels like a very all of a sudden feels like a very serious uh oh and I'll turn this light on I like to have oops this is not plugged in ah never mind turn this light on so let's get it a little more light here maybe that's not necessary uh can you see this whiteboard okay I'm going to get out my um new uh markers okay I'm hopeful how's that can you see that can you read that that let me plug this um just going to fix one thing over here to get this light plugged in in the corner tends to work well oops oh what a disaster I got to use the tape here so I don't trip on it okay okay this is sort of silly what I'm doing but I'm doing it anyway okay uh okay I think we are about ready now and let's see focus is good eyes are a little small uh okay so the other thing I think God that's fine G to zoom in here uh okay so oops let me tape this a little bit further over so I can stand here and be talking about this tracking thing and I think if I stand here wait I can't this stand here okay uh great okay so I think I am about ready to go with this first tutorial um by the way Alvaro asks is there a way to find the red pixels without searching all the pixels not really I mean here's the thing you could TR you could search you you know you could you could come up with clever things like for example let's say we know where the red pixel is uh it's like this is so weird like I'm pointing here but I can point here I'm I'm lost okay let's say you know where the red pixel is one frame well you could start by searching the pixels near there to see if you find the red pixel again and that way you could say ah I found it let me not look anymore but ultimately um you need some sort of you know higher level logic uh to strategize for how you might you could do something like I'm just going to look at every 100 pixels and if I find something redish then I'll start looking in more detail around that one so you could skip a lot of pixels that type of thing uh okay um so I'm G to put this camera aside I'm going to cycle this I'm apologize today for how long this took me to get uh up and running with um this stuff so in this first video what I'm going to do is move from looking at a single Pixel for the average location of a bunch of pixels and I'm going to also kind of introduce the idea of computer vision a little bit do you guys hear a hum of the fans I have going in here hopefully not it's not so bad okay so and let me oh let me get my code set up a little bit here and then here okay let me close things I don't need okay I think it would be nice let me find a nice image here we go uh okay very low hum in the background uh all right let me see better how's that with the hum better okay I'm glad some of people have just tuned in for those of you just tuned in I wasted not Wast wasted but I spent 45 minutes just trying to get to this point but here I am I'm at this point oh you know what I also have are these These are little like colored Postit notes and I could put those up in addition to this cup thing but let's just start with the cup thing okay um here we go I'm going to start the first tutorial which is going to be again just reminding myself reintroduce the idea of computer vision reference the Goan L article talk about the um sort of classic techniques and then moving to libraries and then show my example and transition okay here we go uh somebody asked what's the URL of that page I think Oliver might be the only person who can paste a URL into the chat but it's uh if you just search go onle computer vision it will come up on Google okay hello welcome to A continuing series about computer vision now uh I uh okay hold on I this is weird because I feel like I'm starting fresh but I am actually continuing a previous video that I made over a year ago in terms of where it's going to be in the playlist on YouTube but let's just see how this goes okay hello well okay thank you Oliver okay hello welcome I'm here in this video to talk some more about computer vision computer vision being this idea of the a having a computer see having a computer find something if you notice there's this strange red cup this actually isn't part of my computer screen this is a red cup here taped to the wall behind me and in a second I'm going to have a camera pointed at that and I want the computer to be able to find that red cup and this is going to open up a lot of questions around all sorts of different techniques and strategies of getting things that are faster and more accurate and that sort of thing so the first thing that I want to do though is reference for you a source of inspiration for me which is uh an article uh by Goan L called a computer vision for artists and designers pedagogic tools and techniques for novice programmers so there's a link to this article in the description it gives you some historical context and it also walks you through some sort of uh key classic techniques like detecting motion detecting presence detection through brightness thresholding simple object tracking Etc and I'm going to demonstrate a lot of the techniques which I've learned and taken inspiration from this particular um essay online essay so okay so the other thing I'll mention briefly is what my my strategy here for this this set of tutorials there's going to be a whole bunch of them by the time I'm done there could be up to 10 even is that I'm going to show you how to program some of these classic algorithms from scratch and then what from there I'm going to transition to showing you how to use different computer vision libraries that have these algorithms and more sophisticated versions of these algorithms baked into them so it's a question of you know in practice a lot of the time you probably want to just use a library like open CV is one of the ones I'm going to show you but there's some value in understanding the algorithm for when for when you go to use the library for knowing how it works plus you might invent some sort of wacky creative new ideas around computer vision and just sort of creative visualization by having by playing around with these by writing the algorithms yourself okay so um a previous video I started with an example that does exactly this so and this is an example running and processing a Java based platform I will make uh p5js JavaScript versions of these examples which you can find uh hopefully Linked In this video's description as well but here you have a cup a cup taped to a green wall behind me and what you can see here is that I'm drawing a circle at that Cup's location now how did I do that the way that this particular algorithm works is it says look at every single Pixel is that pixel red is that pixel really red is that pixel more red than the other one I found that was kind of red it's looking for the most red pixel for every pixel find its color distance its difference from red and find the one that holds the record for being the most red and then draw a circle at that location but there's an issue while this is working somewhat accurately I could even take this off the wall um you can see it's kind of following it around but it is sort of jiggling I could I could also demonstrate another problem by having two cups now and like now it's jumping back and forth between the two so there's a lot of things that I want to resolve here in these the way that I'm going to improve these examples the first thing that I want to do is simply make it so that I can get a stable location hopefully in the center of this particular cup and so the first thing I can do with this particular example and also by the way notice now it's not finding it anymore this camera is doing some like Auto white balancing brightness stuff which is really can be a problem and I think there's ways of turning that off but in the sort of real world if you take this to an installation or a project you're making you're going to want to have a camera that you can turn off auto white balance Auto all those sort of other automatic settings but I can in this example I can always click and uh kind of re uh recalibrate the color that I'm tracking so the first thing that I want to do is instead of looking for in this particular video instead of looking for the single most pixel that is the most red I want to say is a pixel Red Enough find all those pixels and give me the average location of all of those pixels so let's dive into the code and make that change okay um as you'll notice here every single whoops the core algorithm of essentially all computer vision let me look over here for a second the core algorithm of all of these computer vision examples is this this nested Loop for every X pixel for every y pixel and I something is really bothering me here I don't know why these Extra Spaces are here uh and I want to sort of do Auto for I need to put some spaces here cuz I have a problem please don't be like me live your life with spaces in weird places um okay but um and you can see here what am I doing I am taking and let's just let's just review this for a second I have a new whiteboard marker that I've oh there it is um let's just review this idea really briefly in case uh you didn't watch the previous video this is a grid of pixels it has columns which I could number like this 0 1 2 3 4 it has rows which I could number like this and let's just make those different for the sake of argument then it has pixels the pixels are numbered like this 0 1 2 3 4 5 6 7 8 9 10 11 Etc every single computer vision algorithm that I demonstrate to you will start with for every X for every y so it's looking at every X pixel and every y pixel but then it needs to look up a given pixel here in the onedimensional array of all of the pixel colors and the formula for doing that is X Plus y time width and you can see why that would work because here the width is six the first pixel in column 3 and X3 is three the X1 is 3 + 6 which is 9 the X1 is 9 + 6 which is 15 is that right 11 12 13 14 15 so this formula is going to be kind of key so that's right here right for every X for every I find that pixel location and then it's look and then I need to separate out the red green and blue components of the color that's coming from the pixels of that video and then there's this other color called track color that's the color that I'm looking for the red uh is that here yes the red uh cup um and then using the distance formula and to be honest I should really not use the distance formula because it has a square root I should use just distance squared because then I don't have to take the square root but I'm not going to worry about that optimization right now maybe I'll bring that in later I'm checking to see if it's the the if it beats that sort of record it's the most red and have that XY spot so that's what this code is doing so now in the next version of this example instead of looking for um instead of looking for the most red I want to look for anything that me that that is like red enough so the first one thing we need is a threshold variable so I'm going to add to this program I'm going to add a variable called threshold and I'm going to try this just at like 25 I sort of made that up 25 I want any given pixel that is within uh that that that's difference is less than 25 from the color that I'm looking for for to be considered red so let's go down to the algorithm and I'm no longer looking for a record or a closest X or a closest Y what I'm really looking for is like the average X and the average Y and I'm going to make those floats because yeah I think that's going to help out in a little bit just in terms of doing the average stuff and then I also need to have uh a count how many pixels are red okay so I need to I need to ultimately what I want to at the end is I've calculated the average and that I also want to I need to keep track of how many pixels because that's how I'm going to calculate the average by the way okay so now we're looking through we find the current color we know the track color we know that difference so I'm no longer checking and I'm going to save this by the way as computer vision 2 I'm no longer checking is that distance less than the record I just want to know is it less than that given threshold if it's if it is red somewhat red enough then what do I do average X I add its X location in right I add the Y location in and then I increase the count why now those values aren't really average yet yet how do you take the average of five numbers you add all five up and you divide by five so this is what ultimately I'm going to do here the code's over here I'm going to add up all the x's and y's keep track of how many x's and y's I added up and then take the average so now at the end I can say as long as count let's just say as long as we found at least one pixel you know I could say like you know what this only works if I find five pixels that might be more accurate but I'm going to say as long as count is greater than zero I'm going to say average x equals average x divided by count average y equals average y divided by count I'm I'm going to fill with the track color give it a stroke and then draw The Circle at average X average y so you can see now here instead of looking for the single most pixel any pixel within that particular threshold of red uh is is going to be uh considered uh red so let's run this now and see what we get now I don't know if I picked a very good value with value 25 and I should really make that a variable that I can tweak in real time but let's just sort of see okay now what I'm going to do is click here to set that color you can see that's pretty good it's it actually is still sort of like moving around um uh one thing that I think could be useful to do is I could actually show you which pixels um I found and what I'm going to do to do that I think is just do uh I'm gon to this is like not so great but I'm going to draw just like a point there um to sort of see uh a a white point to see what it's sort of finding and what the other thing I want to do is I'm going to just write now I'm going to map the uh the threshold between Mouse X like the lowest threshold would be zero oh the mouse X goes between zero and width and I could have a threshold between zero and like let's just say 100 so this might make things run kind of slow because I'm going to be using the point function a lot but let's sort of see what happens here okay so let me click here you can see oh why are those all so first of all did I uh didn't I say F oh Point by the way is is stroke and I want to say stroke weight uh one and actually just for a second here let's take uh let's like like let's do this and let's make this a little bit smaller so we can really see what's going on here okay so let's run this and we should see a white a white uh pixel for every pixel it's finding that is red like and you can see what it's found here now oh look at this so the threshold is very high so you can see even my hand is kind of within the threshold now so and you can see as I move the mouse that threshold you know my skin is kind of like reddish but as I move over here you can kind of see um see what's going on now I want it wow my lips I got to get out of the frame so you can see now it's quite stable there you go so I found kind of an appropriate threshold I should be have a way of like printing that value out so I know and you can see that it's oops as soon as I move in the picture we're going to we're going to deal with that in a second I want to uh zoom in here um I should be able to unfortunately my arm is too red but I should be able to take this off and move this around and you can see that I have quite a pretty accurate uh tracking as I move this and it's it's quite stable so you can see that even just doing the average location you know again I have nice Lighting in here I have a green background I have a very distinct color that I'm searching for but but if this were an interactive tabletop where you could control the lighting it could have red discs on top of a green table or white discs on top of a black table then this is something you could do so I've shown you one Improvement here the first Improvement is just using the average and again as soon as I introduce another cup you know we've got a problem look at it that dot is right in between them right because it's the average location which is kind of interesting but not what I'm looking for so in not in the the next video I'm going to look at tracking motion which I think will be interesting to see but the video following that I am going to um I'm going to show you how you can track each of these locations as blobs separately okay uh so that concludes this particular video and in the next video we're going to look at motion tracking frame differencing okay how was that was that useful for everybody did that work um I have no idea how long that was uh so that was hopefully good good I there was something I would just that popped into my mind right at the end there that I wanted to do uh but I can't oh I wanted to get the threshold value let me just I want to know that threshold value so I can use it let me um let me just do that right now let me click here kind of like see that seems pretty good um so oh I'm not how do I anybody have an estimation ah okay hold on what I meant to do was uh print line Mouse X or print line threshold uh let's do print line Mouse X comma threshold this is what I meant to do and now come back camera click I think that's so I'm at a threshold of like 80 oh and I forgot I was going to add the distance squared thing um so a threshold of like 80 is pretty good uh keep that see I wonder um okay so uh I guess my question for you guys is I think I'm going to go and do the frame differencing thing to look for motion pixels because I think that's kind of interesting to see uh for um how that works yes uh so I was just using point just to be quick and dirty about it I wouldn't usually do that it um I would use either set or I would actually use the pixel array to draw that but it's kind of it runs fast enough right now so it's kind of good enough um so what I want to do going to do the frame differencing so save this uh let me rename these actually for a second um so let me rename these computer vision whoa oh no oh I didn't save this in the right place um so this is this one was uh average point average color tracking average Point color tracking call it that and uh computer vision one which was where which was maybe just on the desktop oh yeah uh this one is oops ah what did I just do something crazy happened oh I I hit present mode by accident uh yes I am planning to use open CV at some point was asked in the chat let me just save this example as oh yeah uh uh computer vision this one is uh a single single Pixel color tracking okay single Pixel color tracking uh and then uh average Point color tracking okay okay so the next thing that I want to do and let me uh cycle these cameras is I want to look at detecting motion um and so to detect motion this would be good to do some dancing in this perhap this video perhaps maybe I better have my music ready okay yes I think I'm ready I played music twice okay sorry okay in this particular video uh um yes show us to make a circle detector so we can find cups of any color yeah well all this is possible okay one step at a time now um my nose is still running I have was terrible cold a week and a half ago and I'm going to mute my microphone so I don't okay so uh the next thing I'm going to do is motion detection looking oh yeah no no no let's I can't remember is is there a distance squared function in processor no so I know there's a MAG squared for the vector object uh distance squared processing.org I don't think there is um so I you I could keep it this way um you know what what I would do is just write my own function and maybe what I maybe I'm going to do that um so so I'll do that at the beginning of the next video I'm going to write a distance squared function in which case uh it can eliminate the square root um which I think will be useful okay so uh let me get rid of this stuff at the top I you know I want to have comments in my code but I find them a little less useful uh while I'm doing these tutorials okay uh okay um here we go whoops um okay now I am ready so in this video I'm going to talk about detecting motion we were searching for a color a specific color now I'm going to search for a specific um oh sorry I'm losing my mind here I'm going to search I'm going to just look for uh pixels that change and then I am going to uh oh no no uh I'm going to I'm going to optimize the distance squared Thing by adding my own function and then look for pixels to change okay get this up and running what happened to The Cup oh right this has to be like this okay uh here we go all right here we go hold on I I think that I don't need I just want to um I think it actually will be fine to have this bigger and let me just see what this looks like for okay great uh okay hello welcome to another computer vision tutorial video now in the first video I showed you how to find the average location of all the red pixels in this particular image and you can see over there I like I'm pointing over here ah okay no start over I I'm like I'm so used to looking at a preview of myself okay start over hello welcome to another computer vision tutorial video in the previous video I looked at how to find a an object of a certain color and find the average location of all the pixels of that color which allows me to very easily track an object like this and you can see I can kind of move this around and I'm tracking it now what I want to do in this next video is look at something related but a little bit different to look at how do I find pixels that have changed so in this sense I'm writing a motion detector motion is pixels that are changing right because if everything is very still none of the pixels are changing but if I move those GRE green pixels are suddenly becoming the my skin color and my skin color pixels are sudden becom green pixels that sort of thing so I'm going to start with this code example up but before I do that let's add just a little sort of simple optimization to it we don't really have a speed issue this is running very very quickly but this can as you move to higher resolution become an issue I did mention in the previous video that this particular algorithm right I'm finding the distance seems weird distance between two colors where well dist you can think of this threedimensional space as that we live in as a color space and each color you know the x axis of this space being red and the y axis being uh green and the zaxis being blue and so colors that are near each other in the space are more similar so that's how this sort of idea of ukian distance works but um the truth is this the distance function uses a square root so I'm going to write my own function here down here I'm just going to call it distance uh squared and I'm going to give it uh six arguments uh uh oops this should be X2 and what I want is to get that distance which is uh X2 minus X1 uh time X2 X1 plus and then I want to do the same thing with Y so it's the difference between X the X Valu is the difference between the Y value values and the distance between and the difference between the Z values all of those values squared and added together now the actual distance formula would then take a square root of all of that but I'm going to not do the square root thus this function is called distance squared I'm calling distance squared and so I can just change this to this and then what am I checking I'm not checking against the threshold anymore but I'm checking against the threshold squared and now I don't have any square root function which will make the code run a little bit faster and this could also I could eliminate having to square it by just like using the value that's already squared but I'm making the point here so you can see this works exactly the same way same exact math but I've eliminated a square root okay now that I've done that let's start moving on to thinking about um thinking about how I can uh sorry how I can do this Frame differencing okay so first thing I need to deal with is the fact that I have this capture event right in a separate thread the video library is calling this event function capture event every time there's a new image available from the camera video. read here's a new image video. read here's a new image video. read here's a new image so what I need to do is right before I get that New Image let me copy the previous image to save it so I have the previous one and the current one so what I want to do is add actually a p image object I'm going to call it preve for previous and then what I'm going to do here is say previous previous equals create image and I want it to be exactly the same dimensions as the video and I want it to be an RGB image so this is making a blank image in processing and then right before I'm about to read that image I want to say previous do copy the video and then uh the copy function in processing says take what the what take the pixels in the video and copy them to this particular image but you can do all sorts of crazy stuff like you can take a little bit of this image and copy it here and stretch it out but I'm not going to do anything that interesting I'm literally just going to say copy the whole video onto the whole uh previous image so I'm giving it two rectangles and so and the other thing that's probably I worth doing is saying update pixels so this now I should have previous and the current video so if we run this let's just run this to make sure there are no errors my shoe is untied oh look I have a knee I've never I don't think I've ever shown my knee in any of these videos before and that'll get edited out um okay so you can see this is still working nothing's changed but behind the scenes there's this previous image so what I want to do now actually is change what I'm doing oh and I'm um I think I might have messed up by not saving as let me do this right now uh uh um uh motion detection so what I want to do right now is actually look at every pixel in the current image and compare it to the previous one okay so um I'm I'm going to lose this idea of a track color because I'm no longer uh tracking a color and instead what I want to do here is I want to get not only the current color but I want the previous color which is from the previous image and I'm going to call that R2 G2 B2 and then I can check the distance between those I can check if they're less than some threshold um now this is a this is a difference threshold how different do they have to be to be considered motion and I'm going to leave all this average stuff in here because I'm going to use that in a moment but just so you see it right now what I'm going to actually do is say uh load pixels and uh in here I'm going to actually just draw to the pixels array of the display itself and I can use that same location and if it's a motion pixel I'm going to set its color to white otherwise set its color to Black and then at the very end I'm going to say up update pixels so oops uh we don't have track color anymore so now I'm going to run this and take a look at what happens come on video come alive oops okay we got an error previous color equals previous pixels location now where did I miss ah I never said previous load pixels so because I'm going to look at the pixels of that previous image just like I'm looking at the pixels of the video got to actually call load pixels okay let's run this again there's a lot of waiting here come on video ah I still have an error uh what did I miss there uh array out of bounds exception I don't see why I should have an array out of bounds exception I make the image exactly the same as the video size I copy it all right let's we're going to do some debugging here I might edit might maybe edit the debugging out I'm not sure yet uh let's look at these particular values oh you know what's going on it takes a while for the video to be ready that's weird really shouldn't matter though because ah the previous video why is that not oh you know what this is uh interestingly enough the video's width and height does not exist yet here I just realized that so because in setup um uh in in setup uh it it hasn't really happened until here so I right now I'm just going to just to confirm that that's the case I'm going to hardcode these values in and that that should fix it but um then we might think about like a different way of doing it yeah so that's going to uh fix the problem except I don't see anything happening okay let's see here uh okay hold on I this let's make an edit point at some point earlier and I'm going to to uh because let me let me just figure out a couple things that maybe I miss missed because I have a feeling that um my order of operations is off uh you know because let me just do this for a second and let me also uh do this come alive oh there we go so I can't tell white is does it think every pixel is really different oh this should be greater then right if it's greater than that make it white otherwise black but it thinks that every pixel is not different so I think I have I'm doing I knew this would be a problem the problem is that I'm reading the image and copying the previous one but I'm doing that separately from what's happening in draw I know I could fix this with just saying um let me just let me confirm that this is the issue to not use capture event just for a second so I should say video. read and then at the end I need another let me get it working and then I will uh continue that video tutorial knowing how it's going to work oh no no read down here sorry now it's still okay good that's interesting so maybe I need hold on let's just do something so what's going wrong here how we doing TimeWise okay so there's definitely something I can you see if there's a delay one frame delay I can't tell uh hold on let me just let me check one other thing let me only if the mouse is pressed let me do this copy ah so this isn't even working okay so something else is wrong uh let's see that's good oh how is this still in here take this out uh if distance is greater than threshold times threshold okay hold on if distance is greater than one make the pixel white I want I must have messed up this function let me use let me use the um the regular one for a second try that debugging I need my debugging music yeah so okay so why are we not getting uh I forget about this for a second do I have something wrong with my pixel stuff oh I never said load pixels for oh yes I did here terrible error do you guys see it now there it is I copy pasted it but I didn't put the previous color in there okay that's good R2 G2 B2 is my name uh yay okay oh very slow very very slow why because I'm using the okay let's fix a bunch of things let's go back get rid of this put this back in okay I'm going to walk back to what I had previously everything's different save okay now this is working it's just so by the way this is just showing the pixels that are different from where it started and I can free frame it this is actually quite useful to show um which maybe I will but let me get back to what I had before see if I can uh there's a certain way that I prefer to write these examples and I just want to see uh if this will work this way and I might I might have the issue that I think I'm going to have but this is this is what I had previously when I started debugging uh okay I didn't have this uh let's see here look at that so oh wow interesting why there was like a lot of noise for a moment at the beginning but now it's doing what I expected it to do um okay what was all look at this people doing strange things software differ okay but I could also change the threshold so oh because of the threshold so let me give it a kind of reasonable threshold of like uh okay um okay so back back back sorry everybody thank you for your patience um let me just start off with the threshold to 50 video load pixels I can't um I think I didn't have video load pixel or previous load pixels okay so the thing that I need to show this is what I had wrong so I'm going to put that back and I also I had this by accident which is fine and I don't need these there although it's nice to sort of have those for reference okay um oh and then this was this was the issue okay okay I'm G to come back the I'm going to come back yeah the noise is due to the auto white balancing when the with but also just that threshold was so high okay I'm going to come back uh into that tutorial this will have to get edited together um and fix those two bugs and keep going oh hey hello cup okay here we go back after a moment of debugging maybe I need a to give it a little space there in case it's harder to edit let me do this again back after a moment of debugging there are two key issues that I had in my code um that caused a lot of problems number one is something that's a little bit of a a Nuance to the um the way the processing video library works but the video stuff is happening separately behind the scenes um and by the time we get down to this line of code the video actually the camera hasn't like opened its connection yet so the video width and height doesn't actually exist so I could be smarter about how I create that image but I think just to get this example working right now I'm just going to hardcode in the width and the height I know that my camera is giving me a 640x 360 the image so I want my background image to be that as well the other thing that I didn't notice I had as I went over here is right the current color is from the video the previous color is from the previous image the previous frame but I want those red green and blue second values to be not from current color but from previous color so I've got to I've got to fix that and now that I have that the other thing that I think might be necessary maybe it doesn't matter oh I might have not had this in there so I need to also make sure that I'm loading the videoos pixels and the previous uh pixels and so now we should be able to see white pixels wherever there is no motion meaning the the the pixel is the thread the distance is less and and black pixels where there is motion so let's take a look at that and let me try to zoom in here so you can see what's going on come on image so you can see it's very very white and now you can see if my arm is very very still there is no motion but if I move my arm the pixels are black you can see around the edges and I can kind of walk in and you can even see like if I move the Tshirt around uh you could see this and this would be a good time to see what happens with some dancing motion dance detection okay uh I was I thought you weren't expecting that if you ended and now you might be sorry you're watching this video okay um so there's a couple more things I want to do with this number one let me just show you something interesting about this I I sort of actually also weirdly feel like reversing that so let's see the white as the black as the background and white pixels otherwise um but one thing I want to show you is I'm actually every time there's a new image from the video I'm copying the previous one but I could also by the way say hey let's take this code and just add it in mous pressed so what this is doing you'll see in a second is as this runs speed up here you're going to see uh it's all white I could click and it's now it's all black I'm going to click again there's a lot of Auto white balancing going on you can see here that now it's just showing me pixels that are different from the background because it's memorized the background you know another way that I could make this a little bit more clear is at the end here I could draw the video and draw the previous one I'll make them kind of small at the top this is going to make things a little bit more clear are you running Run come on computer vision time so you can see here now this is what it's comparing it's comparing you know this image up here to the one on the right and if I go like this I and then I move you can see that's been out unfortunately the camera Auto white balance so if I had a camera that didn't Auto white balance you can see I could come back into my spot and try to find it oh look I can't get there I oh there I am no okay anyway you get the idea so I could be out of the frame and save it now it's the background now that cup is shaking it stopped shaking save it again and I can move my arm in and you can see I'm getting a really nice silhouette so this is the kind of thing you can do also for for getting Silhouettes but you want good lighting it really helps to have a solid colored background you don't need a green screen but certainly that's helping the cause here but really you need a camera that's not going to do all this Auto white balancing stuff you can see how it how quickly it changes okay let's add one more thing to this now which is that remember how we were looking for the average location of all of the red pixels well I can now do exactly that here I can say anytime you find a motion pixel a pixel with a distance greater than some threshold then also what I want is to see that particular pixel and I'm going to fill it white with a black okay so let's make it um let's make it some like a pinkish color so we can really see it uh and maybe make it a little bit bigger so this is going to be interesting because what I'm going to do is look for the average area of motion and let's see what that gets us oh I didn't mean to have oh whoops uh let me let me do a couple things here let's take these out we don't need to look at those right now and let's put this back in capture event so we're always always getting that previous frame awkwardly standing while waiting for camera to start okay but you can see I'm to move out of the frame and I can put my hand in here you can see this is actually doing a pretty decent job of hand tracking because you know it's not perfect by any means but you get a sense because my hand is the thing that's moving now if I stop moving it's going to completely go away but I could store that one thing Improvement I could make to this that I'll uh is I could keep that location as a global variable and if there isn't any motion I could stay where it was last let's add that so let's make that let's make this average thing a global variable and over here what I'm going to do is only only alter it if there are at least let's say uh 20 pixels that are 20 motion pixels otherwise it'll stay where it was before and let's always draw it so this is just a slight Improvement to this that I think will help uh make it feel like it's doing something more along the lines of what you might expect or want it to do so you can see I can move myself around and uh now 20 I guess is not that much I guess there's so many pixels there let's just say there are 200 I don't know what's a reasonable number there's probably you know there's millions of pixels so these are probably like such incredibly low numbers that I'm using um and you can see as I move anyway you could play with these values and get something that's doing something slightly better but you can see the other thing that I would do here and since we're here is I'm going to um I'm just going to add uh a lurp x a variable called lur I'm going to show you that you can use linear interpolation I have a whole video All About lurp that you that I should link to from here but I can say also the thing I can do is I can say let me actually take a alert point and always say uh and say lurp x equals lurp uh between average X and lurp X and actually let me I like to say lurp X first I think uh and then 0.1 so what I'm doing is I'm always just going 10% of the way towards the new point which is actually going to smooth things out quite a bit and I encourage you to uh look up my video about the lurp function which would kind of explain how that algorithm Works a bit more uh and here we go and that camera just went off but uh I'm going to turn that back on and so you can see the sort of final result that we have here and the final result that we have here is that I have something that's kind of smooth as as I move my hand around where does it go to why does it go somewhere else I don't know I have a bug in my program where it's like uh and going somewhere else I kind of want to fix that um oh because it's adding all this stuff up oo okay uh yeah yeah yeah so this needs to be average x i it's adding up all those points even and but only only dividing it by count when it gets about 300 so I get that like added thing when it's less than 200 that was terrible so uh what I want actually my Global variable is to be uh the actual uh I'll call this motion X motion Y and I actually only want to update those motion X and motion Y and then I want to lurp that oops and this is now I think going to be a final version of this that works correctly so I was always adding up all those values for the average but then not calculating the average and so that was making it go way off the screen and you can see now I'm going to move off the screen and you can see I have sort of a very rudimentary like you know as long as I'm moving my hand around and I don't come in the scene I'm kind of getting uh it's it's kind of following me in a sort of like nicely interpolated way okay so you can see that opens up a lot of possibilities if I'm in here you know it's going to kind of follow me around I could turn my music back on and I can do the pig dot dance I am a magic pink dot manipulator okay that's uh hopefully you turned this off and you didn't have to experience that um so this is now a second video where we've looked at um kind of how you can use motion frame differencing to sort of track a point around the screen and in the next video I'm going to return back to where we were tracking just this cup and looking for the average amount of red pixels to actually think about this cup as a blob so that if I add a second blob second blob we can track both of them individually okay thanks for watching goodbye uh okay uh all right how are we doing TimeWise it's 107 this has been an hour and 37 minutes I want to do the blob detection so I think in terms of my list I'm going to do the let me go back as I screwed up and let me get um um let me open up the I have frame different motion detection single average Point color tracking I screwed this up and I started messing with it right yeah so I need to put this back to what it was that's frustrating uh but I don't think yeah I don't think I went that far with it uh well I added the distance Square thing but that's fine I want that anyway okay great so I want to do blob tracking so this is going to be and I don't need the previous I do want the TR track color I do want the threshold uh I don't need the previous uh okay save this so I think this is going to be I'm just checking the chat will this lesson be okay so people ask will this lesson be available offline so uh for people who might be joining late what is this who am I where are we in the world Carmen San Diego no I won't sing um you don't want me to sing uh so I'm this is a live session where I'm kind of stumbling my way through these tutorials this live entire live session will be archived on my YouTube channel um the uh then uh edited version so far I've done two tutorials a average uh so the edited versions of these tutorials will then become Standalone videos also on my YouTube channel and then finally oh that's it oh and I I do in the chat it is true that I do have a Google drive folder with all of the the Raw videos that I give people who subscribe to the patreon access to honestly if somebody was at a school somewhere in the world and they wanted to use the videos but they can't get a good connection to YouTube I would be happy to share them um so you know if if you have a compelling reason why you need the video files I'm open to that okay um okay uh Oliver mentions I need to separate the average XY local locally and globally uh I guess I figured that out um okay so um let me see here I think uh I want to get back to this now the blob thing is much more complicated and what I'm going to need to do is actually there's there's a whole algorithm that I need to cover and basically the way I'm going to do this I want to talk through this for a second and then I'm going to uh do it again um what I'm going to do is let's say this is the scene and there are a bunch of blobs I want to have a blob object I think I I think I'm actually ready to just record this um and what I'm doing is I'm looking for any pixels of a given color when I find the pixel of a given color I check to see if it's within a reasonable distance of some other pixel that I found if it is those things join together as a blob if it is not then it makes its own new blob and at the end I have a whole bunch of blobs and I look through that list and maybe I throw away blobs that are too small oh this is going to be easy I'm just gonna do it I'm ready for this oh this is going to be exciting I can't believe I'm about to do a blob detection from scratch tutorial this is great I'm very happy about this I'm gonna be very glad if this works okay oops I'm in the wrong frame okay drink a little bit of this nice delicious tea I believe I cycled the cameras I'm going to have this point over here to start move this up here okay now I need to save this as blob tracking and I'm not going to do oh look my lips are a blob um okay uh I think I am just ready uh someone asked what is update pixels yeah so it might work without update pixels processing is kind of funny in this way my point of view on load pixels and update pixels is you know first I just put them everywhere like if I'm about to look at the pixels I call load pixels if I'm about to change the pixels like with the copy function I call update pixels after and then later I might try commenting out those lines and see if it's still Works anyway but technically speaking processing doesn't give you access to the memory of those pixel colors unless you first call load pixels and it doesn't actually change them in what it draws until you call update pixels and this is for the display window and for individual images as well okay jumping jacks I'm losing my energy break dancing okay up uh yep pull the muscle okay we be fine okay here we go the last last not I think this is the last computer vision topic I will tackle today and I'm very excited about it then we will do fireworks and then I will say goodbye for unfortunately for a little bit more than a week don't don't be too sad trust me there's more to life than my weird live YouTube stream thing okay anyway okay here we go I I'm having a paranoid fear that I didn't turn this camera off and on so I'm just going to do that very briefly okay hello welcome to yet another computer vision tutorial video in this video oh my God I'm so excited I'm going to show you how to program from scratch not from scratch but how to program the raw algorithm algorithm for blob detection yourself and what do I mean by blob detection so in two videos back I made an example that finds it's over here what no it's over here where is it okay over here that finds this cup that I have taped to my green screen behind me by looking for the average location of all of the red pixels it finds and this works perfectly beautifully nicely however there's a problem if I add a second cup look at the average location is in between those two things and I want to be able to track them individually as individ ual blobs so how do we do that so I want to talk about how this algorithm works so let's what what's going on here there is a an image that the camera is seeing it is seeing two red cups taped to a wall I don't know what what my life has become that I'm taping plastic cups to walls that are painted green but that's just what it is okay so it's looking at every single Pixel and it's asking a question is this red and you know you can insert something else there is this a bright pixel is it a dark pixel is it a blue pixel you know you could be using a a connect and depth tracking is it a close pixel is it a far pixel there's lots of things you could substitute for this question but for my demonstration of the algorithm it's going to work nicely if I ask is it red and so the answer is going to be no is it red no is it red no is it red no no no it's a very negative program just no no no no no no no no no but eventually at some point it gets to over here and is it red and it's like yes yes it's red so if it's red then we have to ask the question is it did I find a red pixel before or is this a new have I have I found the first red pixel and as soon as it's find the first red pixel it has to make a blob so the blob is going to be a Java class an object which is a blob it's going to say ah I found the first red pixel so I'm making a blob object and I'm going to call this blob a and blob a has an x a y and a width and a height it's like a little rectangle now what happens next oh it goes to the next pixel is it red yes it's red yes it's red is it near one of the existing blobs it is so let's just put it in Blob a and maybe blob a gets a little wider then it looks for the next pixel oh it's near blob a put it in Blob a make a little wider it keeps going then it says no no no no no finds another one oh it's part of blah B no no no no no no eventually it gets on here and it finds another yes well is it near blob a and it suddenly realizes no look at that that distance is greater than some threshold it's time for me to make another blob so it's looking for all the red pixels and finding the clusters of red pixels near each other within some that are far enough by some threshold amount so that's the algorithm we need to program and the blob I'm going to think of really just as a rectangle it's going to have an X and A Y and it's going to have a width and a height okay so let's see if we can make that happen here we are over here oh oh was I not was I on the Whiteboard I think I was on the Whiteboard that whole time somebody will tell me if I wasn't uh okay that was weird you know I was okay anyway I'm back hopefully I was on the Whiteboard um okay so now what do I need to do okay the first thing I'm going to do is I'm going to make a blob a new tab in this processing sketch okay good and I'm going to give it an x a y and a width and a height and then I need a Constructor and uh the Constructor when I make the first blob it gets an X and A Y this is tricky so what's the x is going to be that X the Y is going to be that Y and the width is going to be a width of one and the height is going to be a height of one okay great so that's what happens when I first make the blob oops now let's think about this so now let's let's go back to this algorithm and I don't need what do I need H I need to have some sort of variable list of blobs so I'm going to make an array list of blob objects now if array lists are new to you it's like a flexibly sized array so I can start with none and I can add more and that sort of thing and this is something that I encourage you to look into and one thing that I'm going to have have to do uh I lost my tra of thought okay one thing I'm GNA have to do is say uh blobs do CLE so this is something that's going to be really really key and I'm going to bring this up again later but what I'm look this algorithm is going to do is just show me a snapshot of blobs at this moment in time and then a snapshot of blobs at the next moment in time but it's not going to know which blob is which over time but I'm going to get to that in a future video talk more about that in a little bit so I don't need this average location anymore I don't need this count this was all for my previous example but what I'm doing here is what happens as soon as I find a pixel that meets this red threshold well what I need to do what I'm going to do is just say blob B is a new blob at that particular X and Y and then I'm going to say blobs do add blob B so this is the idea anytime I find a pixel I make a new blob only I don't always make a new blob right I only make a new blob well when would I make a a new blob if blobs is empty then I make a new blob right so if there are no blobs and I found a pixel it has to be now otherwise and I'm going to do this a slightly different way but um another way that I could do that is for every blob let's add a Boolean variable saying found is false so I want to Loop through every blob and say is one these blobs my home so if there are no blobs by the way if not found then I add a new blob to that array list so this is the algorithms over here I start by assuming well I haven't found a blob that's a home for this pixel but now I'm going to look through all the blobs and see if one of those is a home if after that Loop which I haven't written yet I still haven't found one then this this pixel is a new blob okay so the very first thing I need to do is say what is the distance or let's let write it this way if B contains or is near let's write a function called is near I think I I think actually in an example that I saw it was called that um if blob is near this particular XY point so that's one thing I can do to check what's the distance between this XY point and this particular blob so let's go to the blob now and say uh is let's write a function that's a Boolean function it's got to return true or false is near and it gets an X I'm going to call this like uh I just use xcore I I should come up with a different somebody suggests a better variable name but um if this particular XY point is near I need to either return true or false so the first thing I need to do is what's the distance between XY and XY so um I'm going to call this like PX for like pixel X and let's do that up here too I don't like this underscore thing it looks so obnoxious no I don't have any no not that I have any problems with underscores they're underscores are lovely nice characters but I'm going to call it PX for like pixel X but actually here's the thing I actually want to test I think I want to test if it's near the center of the blob not the corner of The Blob so one thing I'm going to do is say CX C CX for Center X is x + W / 2 and Cy is X Plus y + h / 2 that's finding the center right X plus the width no no that's not the center X plus the width divided two don't be ridiculous X Plus width divided two thank you very much y plus height divided two that's the center right if you have a rectangle X plus the width of the rectangle divided two that's the center location so I want to know if that pixel is within some distance now uh um again I could let's use distance squared to like not oh don't I have distance squared in this example right here there it is oh but it's only that's a 3D distance let's let's make a 2d version of it I have this from a previous example where I was using uh color by the way did you know in Java you can just have the a function with the same name as long as it's two different arguments two different sets of arguments it'll know which one to call that's called method overloading okay so I'm going to go back here and I'm going to say if the distance is less than some particular uh threshold I don't know what's a good distance let's say 50 pixels away if it's within let's say it's within 25 pixels then um then return true and this is definitely a variable that I'm going to want to make a something that I can change otherwise uh return false okay so now what I'm going to do is and I don't oh all this stuff is irrelevant this was from my previous example so if blob is near XY then uh first what I want to do is blob add XY I want to add that point to The Blob and then I want to say found equals true and then I'm going to say break now there's a little bit of a problem here where I probably should check all of the blobs and find like the clo the one that it's closest to but I'm not going to worry about that right now I'm just going to do this Loop to find I'm just going to find the first one so now I need to add that XY so here I need to write a function add that pixel X and pixel y so what does that do well the thing that I need to change is I need to um I need to check oh this is tricky here let's think about this for a second I'm going to use a diagram there's probably a smarter way I could do this maybe somebody in the chat or will give me a suggestion but let's say at some point I have a blob like this um and it has an X and Y and it has a width and a height so the first thing I need to figure out is is that pixel inside this rectangle is all right if it's inside that rectangle I don't do anything if it's over here I suddenly want my rectangle to be like that if it's over here I suddenly want my rectangle to be like that so you know what I think I want to change about my blob I'm going to change something I'm going to have the blob instead of having x y w I'm going to have Min X Min y Max x max y I'm just going to keep track of the top left and to and bottom right corner of the blob and actually that allows me to have this argument be XY and I'm just going to say when the blob starts minimum X and the minimum Y and the maximum X and the maximum Y and I could have called those bottom bottom bottom XY top XY but anyway all those are that now when I check if it's near now I am getting the average so I'm going to say uh minimum x + maximum x / 2 and minimum y plus maximum y / two the distance is still the same thing between this x y and then the add function is going to be easier because what I'm going to do is I'm going to say minimum x equals the minimum of X and minimum X this is a processing function minimum that says if x is less than minimum X whichever one of these is less use that one so I should be able to just do this and the same thing here like this so I just want to get I could have written if statements like if x is less than minimum X then the minimum X is now X that sort of thing but this should do that trick this should add the blob okay and then by the way what do I've got here I've got everything I need to draw a rectangle so I'm going to write a function called show and I'm going to say uh stroke zero fill to 55 and I'm going to say uh just stroke weight two so I make sure it's kind of thick and then I'm going to say wrect mode Corners by the way in processing the rectangle mode Corners allows you to specify the top left and the bottom right of a rectangle and those are the values I have so I'm going to say rect Minx Min y Max x max y so I added a whole The Blob does a couple things it checks to see if a pixel is near it and could say true or false it also can add that pixel to expand or contract its rectangle and then it can also draw that rectangle and now in this particular algorithm this is it I think I've got everything here if it's near am I if it's near add that point I found it otherwise add a new blob and then at the end here after I go through all the pixels I should be able to go through all of the blobs and say blob. show okay I'm sure I missed something but let's try running it the variable PX does not exist uh oh right because this is now X and Y uh oh Max x equals x I have an error in the chat someone's telling me there's an error in the Constructor Max thank you okay so this was a big error that would have caused me a major problem okay here we go let's see what I've got here now oh what is that craziness oh look at this it's finding zillions of little tiny blobs oh look at all the little tiny blobs little tiny blobs look find some more little tiny blobs so uh I think my distance threshold needs to be a little bit bigger 25 pixels so that's is something I need to uh make um make a variable so I want to make this a variable let's just do this right now um oh right because this all the way is distance squared so it wasn't so crazy so I'm going to make a uh so this is the color threshold and I want to make a a distance threshold and I'm going to say that's equal to 25 just having these be the same and first of all this needs to be distance threshold time distance threshold and I'm going to add a uh just right now I'm going to add key pressed function and I'm going to say if uh the key equals a then distance threshold Plus+ else if key equals z and this is a really quick way for me to just adjust that uh minus minus and then uh print line distance threshold just so I can uh modify it on the Fly here we go come on everybody here come the blobs here come the blobs blobs the musical here oh yeah much better so we can see here now Tada now this is still getting multiple blobs and I can uh tweak things uh for example I should probably click on the color look my lips are a blob my fingers are a blob but you can see um one thing I one thing I can do here let's zoom into this is I can consider Blobs of a certain size to be useless so I can uh one thing I can do is say here um right I can say if blob do uh uh size oh if b. size is greater than 100 for example I can only show right now blobs that have a certain size and there is no size function I could write one and I could just say uh you know return Max x minus Minx * Max y minus Min y like the the width and the height of the blob so to speak I multiply them together and you know I could say uh I could you know they have to be greater than like you know 500 this would get rid of small blobs right oh and that threshold yeah yeah I meant to I meant to by the way so you know this is also what I can change here let me add this second one and you can see how nicely this is working now my arm is BL let me go over here and you can see you can see what I'm getting now I could still uh that threshold you can see that there's two blobs up top there let me make that threshold if I keep making that threshold there we go now it's just one blob and again I could do things like interpolate or whatever and let's do this and here we are and oh oh boy we have to do something ah no Bobs Bobs I'm being eaten by The Bobs that's not what I meant to do come on give me some red I am blob man okay anyway whatever they get the point so this I think um stop music excuse so I think I've shown you the basic idea of a blob algorithm there's I think a bunch of things I could improve here one I could make a nicer interface to kind of tweak these thresholds of color the distance threshold you know it might be nice to sort of draw the rectangle blob rectangle with some Alpha so I could see what's behind it um you know one thing that's really kind of uh important about this to mention I'll mention this again is um come back to me code uh is that um whoops it's funny it worked much better without me clicking on it anyway um is that there's no sense of an uh uh I should so by the way this this distance that threshold should really be like 75 to start with and let's make this like uh let's make this less I don't know what I'm doing here um so one of the things that's really important is let's say you wanted to have an image follow this cup and an image follow this cup look it's working beautifully right now an image follow this cup and an image follow this cup like what if I wanted to put a cat over here and a dog over here well it's not I'm not always going to you know I might like this blob is going to be found first because of the way I'm iterating through the pixels so this blob is always going to be blob zero but now this blob is going to be blob zero this cup that is it's blob zero but it's this other cup so these blobs do not there's no way these blobs don't have ID numbers there's no way to track them Over time however that is something we could add so I'm to show you how to do that boy this is working so nicely I'm so pleased all right oh I look I I could put Mickey Mouse ears on myself I need anyway I'm going to go do this on my own time you don't need to like watch me do the weird stuff with The Blob but um I'm going to do that in a future video let me say one last thing so ultimately you know if you want to do this and I'm going to show this in in another video there are ample sets of processing libraries there's blob detection there's open CV there's a lot of processing libraries that will do this there's also something that I haven't implemented in this algorithm which is actually to find the Contours of this cup I'm just finding kind of the minimum maximum area of The Blob so those types of things I would recommend uh thinking about Contours but and and so I'm going to show you at some point how to do this stuff without writing all the code for yourself but just use a library that does the same thing but it is interesting to see one thing that I think is good to see about this is a lot of the libraries are built in just to look for bright or dark blobs and so you would have to apply some type of brightness threshold to the image first before passing it to the blob detection Library which would be fine but custom baking it yourself you can just like look for a specific color like red okay thank you for watching this blob detection video I'm hoping it was useful and I'll see you in the future computer vision videos goodbye uh okay um oh yes uh Oliver makes a good point which is that I could merge there's H various optimizations I could do here like merging the blobs if they overlap um but yes um so I think that's good for computer vision for today let's go look at my GitHub issue and let's see what I made uh rainbow topics uh issues uh sort by thumbs up computer vision okay so what did I do let me edit this I did did um average Point let me zoom in here so you guys can see I did average Point tracking I did motion detection frame differencing and then I did blob detection algorithm so we can see here what's on my list I don't know if any of you want to um so this is on my list next would be looking at a library like open CV for doing this looking at some of the stuff in JavaScript to see how it works and performs I want to show you how to like keep track of blobs over time uh in addition to libraries we should look at open t other tools op tsps and uh Community core Vision CCV I should look at those uh face detection face detection with persistence saving faces to files is kind of an interesting thing more stuff in the browser Kyle McDonald has a great resource for this so I really only got scratched the surface but you know being here for two hours I think to have done three solid tutorials on computer vision I feel pretty good about that um okay uh so anybody see anything that they want to type in the chat that I'm missing from this list but actually better yet just go and uh write a comment here add your comment here and I'll add it to the list okay so I'm just about finished for today I'm feeling like I have to I want to do the firor Works thing I have a question for you guys in the chat so let me open up my fireworks example uh fireworks fireworks fireworks here it is so this is the example and so um and I'm going to also open up maybe uh examples uh topics under simulate I think multiple simple particle system oh I messed something up I got to fix this oh um I gotta I gotta file a quickly um I got to file a GitHub issue on processing uh or actually somebody watching file this go to processing. docs and um I was replacing a lot of get functions get with vectors changed to copy so this used to be get but I changed it by accident to copy but it's calling get from the array list and it shouldn't be so I need to go through the examples and revert some of them back somebody file that in processing. docs shiftman me and your dri or or better yet just do a pull request to the uh example but um I will I will fix that later but okay so I have a question for you guys which is I have two two ways I could do this one is I could from scratch from nothing I think I could do this with in a half an hour or less make this fireworks example from scratch the other option is I could take an existing particle system example and adapt like this one and adapt it to be the fireworks so I wouldn't be doing all the code from scratch um I don't know which would be more useful you know certainly I would do it the adapt way but I wonder if there will be people who might actually just sort of end up at this fireworks video from nowhere and actually having the whole thing might be useful let me know in the chat what you think boy you guys in the chat are really quite far behind me to make your own particle system so to do it from scratch scratch two votes for scratch scratch three votes for Scratch all right scratch Yeah scratch Yeah scratch okay scratch would be nice scratch oh everybody okay we're gonna do it from scratch that's good to see okay um so don't save that uh the other question is should I do this in JavaScript I think I'm going to do this in processing because um then I can extend it into 3D more easily and um then I'll make a JavaScript Port of it yes little scratch I do it from scratch hopefully I I'm gonna make a JavaScript Port of it keep me honest about this like bother me about this because I think it'll be nice to have people make their you know JavaScript p5js fireworks things in the browser for Fourth of July oh everybody now there's voting for P5 JS maybe I should do oh I have an idea I'll do it from scratch in p5js because yeah I'm not going to do it in scratch so that's a great idea I'll do it from scratch in p5js since I already have the processing example done and then what I'll do is I'll come back to the processing example and extend it to 3D Oliver always was the best suggestions okay how about I do it in scratch and I'll do it in C which I've never used before in my life or python which I just don't know at all okay uh um so um let me just coding rainbow fire um coding challenge fireworks okay so I need to get set up for a second did you guys hear that something fell behind me um super shape test that was using recent P5 where is that coding rainbow super shape test here it is and I'm going to call this firewor uh coding challenge fireworks uh P5 and I want to open that with the atom editor um I'm going to erase everything here and I'm going to do create canvas uh function setup and and I'm just going to give myself a little bit of something to start with uh and then one thing I'm going to do just um I think it's okay for me to start with the files I know I'm going to need a particle. JS file and I'm going to need a um firework DJs file okay uh and then in index I want to make sure I am referencing particle and Firework okay and then I need uh I need uh CD desktop CD coding rainbow ah CD coding rainbow um run a local server and minimize camera goes off uh Local Host turn those back on okay and where am I fireworks hey one thing I don't want to forget is to reference a source of inspiration for me for this project is Seb Le fireworks I forget what it's called pixel pyros so uh if you're not familiar with this project um oh you can hear the sound I'm going to I was going so this is a project by um uh Seb Lee delile did I pronounce his name right Seb friend of mine wonderful guy a host of the creative coding podcast subscribe and support the creative coding podcast on patreon um and uh Seb created a project which is I believe he used open Frameworks and lasers and computer vision all sorts of stuff we've been talking about to create this uh kind of I mean this crazy sort of like fireworks asteroids kind of crazy game that happens outside take a look at the project I'm going to do you can see uh you know the the kind of little bits of similarity here I'm going to do a you know quite a simplified version of this you can see there's a lot more thought in terms of the graphics the design the trails all that sort of stuff but um anyway so I'd encourage you to check out that it's a wonderful project uh and I'm going to I just wanted to mention that as a kind of like where I took sort of like the visual idea for making this from okay okay uh now let's see here so I can close that uh and I think I am just about ready now Index close so sketch particle and Firework okay all right are you ready and a one and a too hold on I need to give myself some energy here okay it is time for cutting r cing okay I'll stop doing that now okay now we are ready uh to go oh I'm feel a little bit dizzy and laded from that okay it's very hot in here let me turn this fan on for a second and now it's time for for firks okay all right I'm stoping using myself with my own entertainment value and oh I got I dizzy again everything's gonna be fine um okay I'm gonna I'm gonna start this now uh okay let's see um let me run this actually one thing I want to do is let me just do this let's try this oh hold on I'm GNA fix my processing example to be yeah it's silly to have the background 51 it should be zero and uh let's give them this should do the trick there we go okay I think I'm ready now fireworks okay oh you guys everyone's asking personal questions about me in the chat um I guess I can Mar I am married I do have two children they are uh four and seven years old actually 8 years old now and almost five okay uh here we go I ready I'm going to do fireworks coding challenge did I I recently cycled the camera I'm just going to do it again I don't think I'm going to need the I don't think I'm going to use the Whiteboard at all for this so okay uh okay here we go oh oh oh let me just fix one more thing sorry everybody I'm G to get to this now just fix this camera ah come on camera there there we go okay uh last thing I'm going to do today coding challenge fireworks happy 4th of July it's been two hours and 20 minutes uh this should take about a half an hour or less and then I will be saying goodbye for a while but um that sort of thing okay okay uh here we go hello happy 4th of July if that is a holiday that you celebrate for H never mind forget about that it's too like I'll just do fireworks I don't care about the fourth I mean I it's a nice holiday fine whatever but we are a global community and I don't need to be so focused on holidays specific this is just a fireworks video hello and welcome to another coding challenge I want to put a sound effect there I don't have my sound effects up forget it okay here we go I'm really doing it this time hello and welcome to another coding challenge in this coding challenge I'm going to program a fireworks simulation I will try not to make ridiculous sound effects during it um let me just start I like doing that but I don't okay let's start one more time you know what just hold on uh I think they should happen a little more often okay last time hello and welcome to another coding challenge in this coding challenge I'm going to program a fireworks simulation um and I'm going to program it for from scratch in JavaScript in the browser the version that's running actually behind me is a version that I've made in processing a javab base platform the code for the one behind me and the one that I will make in this video will both be available in links in the description and at the end of this video I I'm hoping to return back to this processing one and also uh turn it into 3D fireworks this might have a threedimensional like quality to it but it's really just two Dimensions um okay so here we go so let me minimize this code which was the processing version get rid of that and I have a blank JavaScript can HTML 5 canvas and I have some JavaScript code so the first thing that I need to do is I need to have uh I want to have this idea of a particle I need to have a particle so I'm going to just write a particle uh a Constructor function uh where oh you know what I'm going to do is I'm going to the particle should have a position which will be a vector the particle I need to use physics here it's going to have a velocity which will right now be just zero and the particle is also going to have an acceleration so I'm going to kind of custom bake a physics engine this is the same sort of model that I use in all my nature of code tutorials and videos about physics but I'm and I'm just going to kind of bake this from scratch really quickly and then I'm going to add a function called update and that function does what it takes the velocity and adds it to the position and it takes the uh acceleration and adds it to the velocity now where does does it get acceleration well that I need to have a function I'm going to call it apply force and in that function I'm going to get some sort of force and I'm going to add that Force to the acceleration this is the idea of force accumulation Force equals mass time acceleration or acceleration equals acceleration equals force equals masstimes acceleration or acceleration equals force divided by mass but I'm going to eliminate mass for Simplicity so acceleration equals force are all the forces of a moment added together so once I do that I also need to make sure that um after I update the particle each frame that I multiply its acceleration by zero to sort of clear it out because the acceleration at each moment in time is going to start with zero okay so now I'm kind of got this both last thing I need to do with this particle is I need to have a function I'm going to call it show which draws just for Simplicity it just draws the particle at um where where where mix it as a point this position dox and this.position doy and what I'm going to do just for um one thing I learned recently about p5js which by the time you watch this video in the future may not really be the case anymore but if I set the stroke and the stroke weight up just in setup and don't set it over and over again it sometimes can run a lot faster um so just to test that things are working I'm going to U make a variable called a firework and I'm going to say that firework is a new particle which lives in the center of the window and I'm going to say here in background firework in draw I'm going to say firework do update and Firework doow so I want to now go back to my sketch and see ah I have some errors so particle. JS let me make this a little bit bigger that's really big but uh particle. JS line uh number six has an error uh let's see particle D this do apply Force equals ah function is spelled with a C refresh there we go so you can see there's the particle in the center things are working so far uh the next thing I want to do is let me give let me have this particle start uh at a random width and all the way at the bottom of the window and let me give that particle a velocity pointing up so let me say its velocity is 4 pointing up me run this there we go we can see it's going up each time I refresh it it starts in a new random location and starts going up so we're getting somewhere the next thing that I want to do is see if I can add some gravity so I'm going to make a Glo gravity a global variable and it's going to be a vector that does what it points down so negative uh no pointing down is positive so zero comma I'm going to say 0 2 and then I'm also going to say firework do apply Force gravity so I'm now adding gravity to that particle so let's run this uh acceleration is not defined let's go back to the particle uh where where H this do acceleration always forget the this Let me refresh uh didn't make it very high but that's sort of reasonable so let's make the particles velocity a lot bigger like 10 okay so that's good so we can see so this is the start of our firework simulation something shooting up from the bottom and then at some point it's going to explode and make a lot of particles but before I could do that what I want to have is just have a lot of things shooting up from the bottom continuously so let's get that going so instead of having uh one single firework what I really want is to have an array of them and actually what I want is for the firework to be its own object so I'm going to create a firework uh uh function sorry and a Constructor function and the first thing I'm going to do is it's going to have a local variable which is a so I'm I'm basically going to do what I did here right I want it to have in this firework object I want it to have a particle it's going to have that particle the firework itself can have an update function and whoops what happens in the update function it does all these these these things it adds gravity and updates that Firework and then I'm going to also have a show function for the firework object and I have a I can see I have a syntax error uh which I'm going to fix in a second so the idea here is the particle right a particle is an individual particle this firework object right now is one particle but the firework object is also going to in a moment not just be the particle moving up but suddenly all the particles that explode from it so I need this object to keep track of that individual particle and then also an array of particles but this should at least get me now if I say uh um firework do push new Firework and then I should be able to say firework dot uh I should be able to say oh fireworks should be an array then I should be able say look at all of the fireworks. a length i++ and you know I could use a for each Loop but I'm choosing not to just for clarity um update fireworks uh indexi doow okay here we go so now okay firework is not defined in line six uh yep I need the as always I always forget the this dot this dot this dot I'm going to do the this dot this dot this dot this dot the this Dot Song never forget the this dot somebody compos that song for me uh and run this again there you can see okay so it happened and now what I'm going to do is I have this line of code that puts a new firework object in the array and I could put that line of code in draw and if I put it in draw over and over and over again it's just making these fireworks making these fireworks I don't want to make them that often so I am going to say if random one is less than 0.1 so every frame there is a 10% chance of making a new firework let's try that that's a little bit better so it's making them kind of randomly every so often so that's a good start and now what I also want to do is you know I think this should be a random value so let's say random between 15 and5 so that way they don't all go and so that the range might be off there let me make the range a little bit calmer let's do this so anyway you get the idea that they're not they're also not all going to just go up to exactly the same height so now we're pretty good we've got our system of the fireworks going up over time but I need to figure out what's the point where I want them to go poof and explode into a bunch of particles okay so how do I do that here in the update function one thing I should edit Point timeout I have to blow my nose maybe this okay I'm looking at the chat okay okay back um I what I need to do is I want to check something I could do is I say how do I know when the firework gets to the top Point well it's velocity is negative it's velocity is negative it's velocity is negative in the y direction now it's zero now it's positive now it's positive I wanted to explode the moment it reaches that top point so I can say if this firework dot velocity is pointing down is greater than zero is greater than or equal to zero this is the moment where I want it to explode so what I'm actually going to do is I'm going to say this. firework equals null so I'm just going to like set the firework to null so that um uh it's like that will make it disappear essentially so in the and I'm going to need some like I'm going to have to say if this. firework so I only want to update apply force and update it if it exists and I also only want to show it if it exists so let's just see you know there's lots of other ways I could do this but this is just going to be a sort of way of me tracking I could have actually a Boolean variable like exploded or something I might I might change it to that later but let's see how this works so oop H that's weird uh if this oh well that's if the Y component of the Velocity right if the Y component of the Velocity let's add that o cannot read velocity of no where did that happen ah okay well this is a issue so this little bit can go inside here like also as long as it exists there you can see now it's disappearing the moment it kind of gets to the top so that's good and what I want is when it gets to the top I want it to just go into a whole bunch of particles so I actually kind of feel like I'm going to just change this just for to be I'm going to say this do exploded is false as long as not this dot exploded fly Force if it's then say this dot exploded equals false because as long as this uh as long as not this dot exploded I I think I would prefer to use a Boolean variable uh it equals true so this should be the same exact result but I'm not doing the sort of null thing okay so I used a Boolean variable to track when it's exploded now what do I do when it explodes well what I need to do is I need to suddenly right here I'm going to just say this. explode so I want to put this in a separate function and I'm going to write a function now called this. explode and what do I need to do in this function I need to make a whole lot of particles let's make a 100 of them so for VAR I equals z i is less than 100 i++ what I need to do is say VAR P equals a new particle and where should that particle start so it's about to explode where should that particle start it should start where this fireworks position dox and this fireworks. position doy so I need to make a whole lot of these particles and now I need an array the firework object in addition to keeping track of this sort of like seed firework should keep track of this do particles an array so it has an empty array and I am now going to say particles. push P okay particles push P now what I also then need to do is and I'm going to just do this here right here what I need to do is display all those particles index i. show so oh and this has to be this do particles and this has to be this do particles in xi. show so what I've added here is the moment the particle reaches the top it makes a 100 new particles and then draws all those so let's see what this looks like oops cannot read show of undefined firework JS index 30 oh this should be this. particles. length because I don't want it to show nonexistent particles that array is only going to have 100 as soon as as soon as it is exploded let's run this again look at that that oh it made 100 particles none of which move or do anything pretty weird right well first of all why aren't they moving well I forgot something I forgot that I also should call uh here in update I should also call for all of those particles apply force uh gravity and for all those particles I have to update them so I need those particles to experience physics as well well look what's happening it's making those fireworks but they're all why what happens when you make a new particle it shoots straight up so I need to make those particles in a different way so let's look at how I'm doing that if I go back to the particle object the particle is always made with a velocity that randomly points up between 12 and8 so I could use like inheritance and have like a different two different kinds of particles that inherit but I think what I'm going to do is just I'll just add a third argument here and I'll call it uh Exploder and I'll say if Exploder I don't like Exploder that sounds violent I'm already using explode I guess uh I'm going to call it um firework uh if firework make the velocity that way otherwise make the velocity and I'm I I'm just going to do something different just so what I'm going to do is I'm going to say I want to say P5 Vector random 2D so I'm going to have any random Direction okay so if that's Boolean variable is true it's going to make it as like one of those original firework things so let me go back to this firework object and this particle it needs the last argument of true these particles um it needs the last argument is false but in JavaScript if I don't I can also just pass nothing in and that variable will have the value of undefined which will evaluate to false so this should now if I refresh this we can see that I'm getting something closer so now why are they why are they exploding in this perfect circle well the reason why they're exploding in A Perfect Circle oops I have some old notes from a computer vision tutorial is I'm giving them a random velocity which is a unit Vector all of length one so they're all going to explode out in a perfect circle so one thing I might do is just have those the lengths of those vectors be a slightly random length but and I'm not going to do this in this tutorial but you should make heart fireworks for example so what if you could figure out U if I draw a heart like this from the center vectors pointing out to the edges of a heart so you could actually or you could use you got a fireworks that display letters or particular kinds of shapes so the way that you pick those initial velocities of that explosion can really make hearts or rainbows or unicorns or whatever kind of shapes you can imagine that you might like to make so I encourage you to do that as a kind of Riff Off of this you can also notice that right now it's running really really slow so that's another thing we're going to have to fix but let me just go back to here and I am going to um where was I under particle now the other thing I want to do um is I actually want to in the particle object I think I want to keep track of this this whether it's the original firework or the particle because I want to like do other things that are different so I'm going to say this um because I also want oh you know what I'm but I'm gonna leave that for later okay so let me fix this and say um random 2D and then this. velocity multiply by something like I'll I know what I'm going to do in a second multiply by between um you know uh uh two uh one and six so now it's a magnitude is going to be scaled by some random amount let me run this again oh okay that didn't work what did I not do right let me look at this this do velocity multiply oh random a random value between one and six okay so you can see now they're really exploding kind of like wildly there's also two many of them so I can't really see what's going on that well so I'm going to go back to the sketch and make them like quite a bit less often okay so there's one thing they don't look so much like fireworks one thing that happens with a firework is it kind of like bursts out and it like really like slows down almost as if there's like friction or air resist like an immense amount of air resistance in the air so I'm going to add that uh and a quick way I can do that is in the update fun but I only want those to be for the Noni I'm calling the thing at the bottom the firework for the nonf firework particles so I want to say if it's not the bottom firor particle then I also want to say this St velocity multiply by like 0.95 so I really want its velocity to slow down so let's see how that looks uh and let me make that a bit more extreme just so we see that that's really working yeah so you can see ah so you can see that that is working now the other thing you notice is those fireworks they're not fading out at all so I really think this is where I'm going to have to lose one of my optimizations but what I need to do is I want to have a lifespan variable and I'm going to make that lifespan 255 and if it is okay I should be back now um I checked and what was actually recording to dis uh hold on let me just what was actually recording to dis worked but it stopped a bit before the I don't know actually where it cut out so um so I am I but I I just watched the video back and it actually cut out right here where I added this bit of code so let me refresh this okay so um so this will have to get spliced together once again thank you m who has been helping me doing an amazing job editing these things together when this kind of stuff happens we're just about done though which is good hopefully I'm not going to lose any more Outlets or whatever and I'm about to go right back into it okay uh let me get the chat here going and here we go okay Power okay lost power but I'm back now and what I just was is I was saying if this is not one of the seed fireworks particles if it's not one of the seed firework particles let's take its velocity and multiply it by something like 85 so that it slows down um slows down every uh frame and you can see that kind of gives it this sort of like burst out that sort of slows down and stops now there sort of a funny thing happening where they're still there and when you see a firework it explodes and kind of like Fades out and you know I'm not going to get too crazy with visual dressing here you can make stuff Sparkle and have trails and glow and all sorts of stuff like that but at least least add something where the fireworks Fade Out so what I want to add is a variable oh I already did because that's before the power ran out I'm going to add a variable called this. lifespan equals 255 and what I'm going to do is in the update function I'm going to say as long also if it's not one of the seed ones I want that lifespan to uh go down by one and this maybe I want it to go down let's actually have it go down by four each frame and what I want is for the particle to uh have a stroke which is its lifespan so uh so I want to give it some Alpha so I'm going to say if it's not the uh the sort of seed firework do that to the stroke otherwise uh just have a regular stroke and then also let's let's make them stroke weight two and we'll make the uh those a little bit thicker so let's see what this looks like now was it running really slow no oh lifespan is not defined because I need to say this do lifespan let's try that again so you can see here now this is a little bit better now you know I should fiddle with these values like maybe this should be uh you know 0.9 and its initial values should actually be between like two and 10 and whoops uh and over here we could see what that looks like now and whether this is better or worse I don't know but I'm going to let you sort of like consider that on your own but I now have the basic idea you can see very quickly now though it's starting to run rather slow so we're losing a lot of frame rate here why are we losing a lot of frame rate well it doesn't matter whether the particles have faded out or left the screen I'm never I'm never getting rid of them so there's a bunch of things I need to do number one I need to say I need to figure out a way of getting rid of particles so here in this um in the fireworks system what I need to do is I'm looping through all the particles first of all I actually want to Loop through the list backwards because I'm going to do something where I'm start plucking them out of the list and if the list is shrinking it's Contracting from the end it works better if I'm going through it backwards and taking things off the the the back end so what I'm going to do is I'm going to change this Loop to say go from particles. length minus1 and greater than or equal to 0 and IUS minus let's make sure that still works so nothing's changed it's still working and what I need to do ah go away finder what I need to do now is say okay well if this particles index I is done then this particles do uh splice I so splice is a JavaScript function that deletes something from an array and you can actually splice at I a bunch of things after it but I just want that one particle so if the particle is done splice well how do I know if it's done I need to write a function that says if it's done so in particle. JS I've got another function I need to add I'll just add it over here this DOD and what I'll do is I'll say if if this. lifespan uh is less than zero then return true so that lifespan which is counting down else return false so let's run this it's hard to oops we have an error particle. JS line 30 uh line 30 here this not done equals function so now I have no way of knowing if it's actually removing the particles it does seem to be like performing a bit better like not slowing down so those particles are being deleted but they're actually still a firework object that system object in that list so what I want to do now is add over in the firework object also a function that says this Doone and how do I know if that thing is done well it is done if that particle is exploded and this. Firework dot sorry this. particles. length equals zero right the particle system itself is done as long as it's it's in a state of having exploded and there are no and all those particles have faded out so if that's the case I should be able to say return true otherwise return uh false so now I can go back to the sketch here and what can I do here in this sketch I also want to Loop through this thing backwards fireworks. length minus one I is greater than or equal to zero iusus and I want to say if fireworks. length oh sorry fireworks.on ah fireworks indexi Doone then fireworks in uh splice I comma 1 so now and what I'm going to do is I'm also going to add just to make sure this is all working I'm going to add console.log fireworks. length so now we should be able to see you know as a you can see that that length is going down so it's never going to be too many things on the screen so performancewise it's going to work fine so this now is and you know JavaScript canvas drawing can be a little bit slow but you can see I've got kind of you know with 100 particles per system it's kind of running reasonably well now we can make this look a little bit nicer uh for example I could um add oops I could add a little bit of alpha to the background meaning have the background um transition in to and we'll have each firework draw a little bit of Trail let's see how this looks right that has a little bit more firework like quality to it that's nice then of course I could say well let me give it a color mode of HSB and I could say for each firework let's for each firework system is going to get its own color uh so uh it should get a hue value is a random Hue and then ooh every time I make a particle I'm going to also want so the system gets a hue and then I'm going to want to send that Hue into um let's do that before the last argument here into the particle object so they can use it as well uh so I anytime I make a new particle even in the explode function I also make new particles so I'm going to say this. h and false and then now in the particle object I can add a variable to get that Hue value and then I can say uh stroke is the Hue 255 255 H 255 255 uh with the with no Alpha and now when you run this we can see we have now we have rainbow oh how come I lost the trail that's weird what did I do to lose the trail oh you know why I lost the trail is because I changed it to huse the color mode to HSB and the background is now doing something weird so this should fix that I think whoops ah look at that I wonder if this is a bug in p5js that we've just found well I'm going to do something here which might make things run a quite a bit slow but I'm going to just change the color mode to RGB here here and in each particle right before the particle is drawn I'm going to change the color mode to HSB let's see if that works there we go so uh that should be I think that seems like a bug to me like there should be a way to have an alpha with HSB color mode but now we've got it working um and you can see there we go so there could be a lot of finesse here right I could have those velocities go at an angle I could think more thoughtfully about what the velocities of the bursting particles are I could have uh a variable amount of particles um I could think more thoughtfully about the design I could actually store a list of history of the positions to draw a trail myself I could use like textures I could use something called additive blending maybe I'll um to make things appear more glow like but um but you can see here here's the basic idea so I encourage you to take my JavaScript code and make some improvements on it and I want to make a 3D webg version of this but before I'm ready to do that I'm this is this kind of concludes this video but I'm just going to keep going I'm going to go back to my processing one I'm going to close this I'm going to go back to my processing sketch which is basically ex 100% exactly the same code that I just wrote but it is oh it's doing it full screen I forgot that it's doing it so one of the things about using Java in a desktop environment is I can kind of get a bit more speed out of it so I have now this full screen application but this is still 2D so what I want to do with this one and let's um let's take off the full screen for a second just so I can kind of see it a bit more clearly let's make it 800 by 600 what I'm going to do here is I'm going to change this to P 3D each particle when it gets drawn is a point but I'm going to say um push Matrix I'm G to I need to do three actually I could just use I'm going to do do this anyway I'm going to use Translate to add that Z axis and I'm going to say uh point at 0 0 so let's just make sure this still runs oops they're all shooting off above the screen because when I made it smaller the initial velocity uh should uh be less strong so let me just run this again I'll fix that again later okay so that's still working work now what I want to do though however is these particles when it explodes somewhere somewhere I create that Vector the random Vector probably in particle system that firework object uh and uh yes and then it makes a new right here it makes a new random 2D Vector I want this to be Random 3D let's look at that let's see if this works now can you see anything different here I'm not so sure you can but technically speaking it should be a random 3D Vector let's see if we can now actually start to rotate the scene to see if this really works so I'm going to add uh I'm gonna import a library called pyam which I always which I've been doing which uh I can now say I can add a pz cam object and I can say a cam equals new peyam this and I'm going to say 500 like I want to look at it from 500 pixels away the other thing that I need to do is when I make the initial particles um their location uh sorry when I make that initial particle its location should be random uh py cam makes everything relative to the center 0 0 so I want to look for random negative width divided by two to width divided by two and then I also want to change the bottom of the screen is now height divided by two so let's run this and see what happens o oh py Cam oh okay hold on py cam is very unhappy with my oh clearing of the background technique so I'm going to lose the trails I can get those back in another way and just say background zero I forgot about that once I have peyam okay now let's start manipulating the scene can you see I'm looking at it from above now yeah so you can see I need to make a lot more of these to be able to see this more easily let's add let's have a lot more being added um and let's also make the stroke weight of these particles uh much bigger and let's have their lifespan last a little bit longer um and and let's run this and okay so now and let's actually just make this full screen again because that might help uh so I want to also make the initial random velocity much bigger and I'm going to go back and make this full screen uh in p3d and let's see if we get some nice 3D fireworks here oh that I can kind of like yeah you can see there they are oh no no no oh yeah they are 3D but they're all like in one plane so I should also probably mess with where they start okay so let's mess with where they start so this starting location is uh oh it happens here which is a particle and I don't give it a z location it's Z new particle a random uh okay hold on the new particle gets a random XY and a z and it should have that X Y and Z and so let's give it a z random and then let's give it a random Z which is going to be sometime somewhere between 300 and 300 and so I'm going to run this okay now let's sort of zoom out and look there we go so we can see H that's not so there is some zdepth there it's not very much let's make that more extreme I'm pretty sure did I get it we should know now yeah okay now you can see I've got 3D fireworks so and then you can see that I could probably do something where I have them burst out quite a bit more and I now have upside down so anyway you get the idea you can play with this more so I encourage you I'm going to post in the description of this video the processing code I'm going to clean this up a little bit the processing code for for the 3D fireworks as well as the browser JavaScript code uh I need to get rid of the full screen thing is has to stop stop as well as the um I lost I lost everything ah come on no come back uh fireworks fireworks fireworks somebody see it fireworks P5 as well as the this code the JavaScript version of the 2D fireworks and I hope that you will make pretty shapes out of them I hope that you will add I hope that you will think of different ways of doing this and come up with a creative take on this and post it share it with me in the comments or on Twitter or whatever wherever you find on the internet to share it and I hope you enjoyed this quick coding challenge wasn't very quick probably uh of of how to program a fireworks simulation from scratch thanks for watching oh yeah draw a quad where the ground is maybe was a great suggestion okay everybody I'm done for today uh this second part of the stream is now 20 minutes I have no idea I think I've been doing this for about three hours today uh three computer vision tutorials plus one fourth of July uh fireworks coding challenge if you have any last questions oh have I used 3js I haven't and 3js would be something good I think to try programming this in to see how that works um I um I've been using the webg renderer of p5js which um but I um you know it's I haven't gotten as comfortable with it yet myself and I think they're all it's still sort of new and there's probably bugs in it so uh you know probably I'm going to try to maybe see if I can get the 3D version of this working as well uh any last questions before I go okay so let me just before I leave let me just remind you uh coding rainbow.com is the website uh make sure you are if you want to be that is subscribed on YouTube if you want to join the slack Channel Discussion Group you can subscribe on patreon it's a crowdfunding thing totally optional but I'm just letting you know it's there for anyone who feels so inclined um and then also if you want updates about when I'm going to post my next live stream you can get an email update by signing up there so that's coding rainbow.com you'll be able to find all of these links uh thank you everyone I am going to be away next week I will be on the internet um so you're welcome to ask me questions or make YouTube comments or and so these videos will kind of Trickle over the next week and the next live stream will probably be something like Tuesday July 12th or Monday July 11th or Wednesday July 13th somewhere around there will be my next live stream I will do four at least four sessions in July I might continue the computer vision stuff or come up with other topics based on the discussion on GitHub and in the slack uh WG Bros wants a shout out game that WG Bros has been making at plan n.i plz. go check it out why can't the NFC processing function accept along long as an argument so processing as a sort of simplified creative coding sketching environment stays away from Longs and doubles and if you want to use those um data types the sort of more advanc for sort of advanced math stuff then just use the Java system math functions uh with those uh with those uh particular data types um oh I was going to answer some questions on GitHub I I'm not going to do this today but let let me just see let's see let me at least let's see if this one is quick so uh one thing that I'm doing is for anything on GitHub you can also just you can suggest topics but you can also just ask a question you can include your code with the question or it can be a general question so oh shoot there was another issue did it um which I thought was it this one no though this is a question but there was a question it seems to be gone now that was about a particular piece of code and I edited the I changed where did it go well I can't find it now this is is it sorted by newest yeah sort by uh recently updated computer Visions uh this no this is I guess the qu oh yeah this is the top I do want to talk about this but not today I will oh well there was a question here that I thought I was going to try to answer online but um but you can ask your questions here and I will in live streams do like a Q&A where I will make a quick video that answers the question here and you can include your code a link to your code if you can't solve a particular problem that sort of thing or it can just be a general question okay everybody uh the archive for this stream will be up at some point later today or tomorrow I hope and um thank you for watching I'm sorry for those of you who just joined in I have been going for almost three hours at this point so I as much as I would love to one of these days this I would like to do maybe for the 100th episode I will do an eight hour all day session I'm approaching episode 50 soon um but uh today I'm kind of out of steam and it's almost 3 and I got to eat something and do some other stuff this afternoon check my email that sort of thing so thanks you again for watching I love that you all participating and uh giving me feedback and watching the videos and subscribing and all that stuff uh share with your friends um if people uh and keep in touch okay goodbye everybody uh here we go I'm going to I'm I'm I'm signing off signing off this has been cing rainbow cing rainbow with me chief CH theme song is coming this is a temporary song I want some I need some more music tracks to play it is coming Chia areri arir sayara goodbye Shalom can I say shalom for goodbye I don't know okay yeah of course I can peace at least I could say peace is a nice sentiment I'm I'm sorry that I missed like a so many languages in my kind of eurocentric view I going to get more next time if I ever do that again okay goodbye