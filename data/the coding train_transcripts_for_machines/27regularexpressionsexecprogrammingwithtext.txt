welcome back this is I'm picking up right from the previous video or I looked at the match function the match function which is a function that you can call on a string with a regular expression will give you the thing the regular expression matches plus the captured group however if you use the global flag you lose the captured group it only just gives you an array of those matches so if you need to match multiple instances of a regular expression and have captured groups you have to use a function in JavaScript called exec and exec is a function that instead of saying the string matches a regular expression you're saying the regular expression executes string we're really saying execute this regular expression on a string but execute is a function that you call in the regular expression so r dot exec s so these do these over here do basically the same thing s stop match RR dot exec F but exact does a little bit more but the writing the code is a little bit more complicated so let's just call it once and I'm gonna see what happens look what I got I got one one one two two and the captured group right I got the full phone number and the first three digits let me call that function again look at that I got the next one let me call that function again I got no so what you can actually do with exact is call it continuously until you get null and in there you have to write you just have to write your own loop to continue to call it and there's some nice really like elegant ways of doing this in like one long loop statement like while this call bop blop not equal no I'm gonna do it in a rather longwinded way just to make it as you know nothing with regular expressions is readable at all to be honest but I'm gonna try to make it as kind of legible and understandable as possible so let's actually do that in the code now so this is the regular expression and I don't want to use the match function anymore instead what I want to do is I want to say match and actually I don't wanna use the word match because that's the name of a function but I'm just gonna say results result I can't think of what to say is the regular expression execute on the string now as long as that result is not equal to no I can do something and then do it again so as long as that result is not equal to null continue to call this again and again and then as soon as it becomes null you're done now what do I want to do what I want to do is say create P result now let's look at what happens here so this is now the algorithm call exec get a result as long as it's not no do something and do it again then do something then do it again as soon as it's no be done with it so now if I come and refresh this page sorry those are mine don't notes that has the code in it I can do this and you can see look what I've got so it actually it's kind of spitting out the array but you can see it's doing this it's giving all of them and if i refresh the page and say and for you know you can see there I've matched everything and I'm retaining the capture group so if all I want to do is show the capture group all I need to do is say what create P result index one because remember the what exact returns to you is an array of all the capture groups Group zero is always the full match then group one then group two etc so I can run this again and I can it submit and you can see I'm just getting what was captured so that's really the basics of using exec I'll show you now that you can actually you can you can write this you can make this shorter I think you can just say while VAR result equals r dot exec s I think I could just do this because this whole thing will evaluate to no let me look at how I wrote it here doesn't yeah yeah that's what that's what I did okay so this whole thing will evaluate to no and it stops and then and I don't need this anymore so I could actually just write it just like this so this is kind of like a shorthand way of writing it which I could also do that should give me the same result really wanted they didn't really want to go over that but I did okay wait over here here we go oh no no syntax error line 21 this is what happens when you go off off the beaten path of it but you didn't intend to do what's wrong here while VAR result equals r dot exec s did that not work okay hold on let me just let me copy paste this are exact s yeah look at this token bar ah okay that might have done something yeah so so for whatever reason I so so this is how you I guess I have to fix that in my notes you've got to create the variable in advance so the weird thing about javascript is very good at evaluating things to true or false so it'll figure out even though this is like a function statement like calling that and and returning something this like if I write this code this code will evaluate to either true or false based or whether it gets null or not okay it's like it's like false eNOS you know truthiness it's kind of like a little bit truth or not truth anyway I'm melting here melting under the the sheet and and pain and happiness and joy and stress and all of that of regular expressions so hopefully you've gotten a little bit about how to use exec in this video and how to be able to use capturing groups but really I'm kind of missing the the main the main squeeze the main event the which is looking at the functions a split and replace so the function split and replace are used with regular expressions for a lot of text processing algorithms in JavaScript and I'll show you those in the next video