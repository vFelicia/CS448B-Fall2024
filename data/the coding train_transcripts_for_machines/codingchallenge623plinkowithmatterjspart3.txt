hello welcome to part 3 of my Plinko challenge now one thing you might note is that so my plan here in part 3 is to work on sound but actually I'm not going to get the sound probably just in this part 3 now I'll get back to that in a second because I have some improvements I want to make number one you'll notice right now every single Plinko particle is following the exact same path so the whole point of Plinko is that well one of the main points of Plinko is that you should be a 50% chance of it either going to the left or to the right but it never goes to the right it only goes to the lab so let's look at a way that we might change that so there's a lot of ways we could change that week the member we're making these matter jeaious bodies and those bodies have a velocity we give it like a slightly initial velocity in a different direction or something what I'm going to do is I'm just going to like randomly offset it slightly to the left or the right which will probably do the trick so if I go into the particle object I can write here each particle is getting an X&Y location where it starts so it probably might make sense to go and actually alter the way the explication is set but just as a quick test right now I'm going to just say let's just oh let's just whatever X comes in randomly offset it a little bit to the left or the right with a random number so let's do that now look at that it went to the left that went to the left it went so left I must have done something wrong did I not statement oh I didn't save it let's try it again let's the left way to the right so now you can see whether it's really 50/50 is this exactly accurate sure you could improve on this idea but now we've at least got something happening kind of differently now distinct the other thing that I want to do here though is that really Plinko Plinko balls please Plinko particles that are falling down right now they're kind of bouncing out in a kind of crazy way and I really want to see them pick this one and then this or this one and then this or this one I really want to have that consistent pass or their 50/50 going one way or the other not sort of bouncing far off to the right or left just for the sake of argument here so one way that I might be able to achieve that is by playing with the size of the pegs really simple change so I'm going to go into the pegs are in this Plinko object and I'm going to just change these to being white also and I am going to what am I going to do I'm going to change their size from where do I create a create seven sketch yes I'm looking in the wrong place where I set them to just uh where do I make them right here for so let's give them a size a radius out of four but let's try sixteen and there we go so you can look at that it listed right on the top so you can see now they've really got to make a decision as to whether to go left or right at each and every moment and just to see how this plays out and let's do a couple things number one is let me make them a little bit darker so we see them as slightly different actually and then let me let me drop them more often so instead of every 60 frames let's try drawing them every twenty frames and let's see now we could sort of see what's going on here so we can really see this has a bit more of quality now I think I probably would want to play with the friction and play with the restitution either to make it a you know slippery ER or more or less bouncy just out of curiosity let's try on let's try messing with the friction for a second so if I go to the Plinko of the Plinko aren't you sent to a friction of zero the particles are set to a friction of zero so that's interesting so I don't know I'll let you guys I think I'm a mess around was kind of how how how some of these physics settings will will alter it and you can be kind of take your own creative take out like you can see now if we let this run for a little while it's going to most of these we're going to see that a bell curve of most of them falling in the center with every once in a while getting one falling out tilt to the edge so now let me I'm going to let this run for all we'll come back to look at it let's just add color to it as well because we should have rainbow colored Plinko things so I'm going to I'm going to add a variable I'm going to use HSB mode for the color first let me just so HSB mode is a way of defining color that is in a different way from RGB so in p5 I can say let me add color mode HSB to set up and let me hit refresh ah so we can see some of the color is off now because what I want to do is actually just set the HSV color you want to make it black so brightness right now brightness no saturation in some hue and so now I have a black background and I'm going to leave the I'll leave the Plinko the peg does white for right now that's fine so now that I have the particles have I can add a variable for each particle called hue and I can make a random Q between 0 and 360 so the default range for Q is 0 to 360 because the hues are like on a color wheel between 0 and 360 degrees and then here we go I could just say fill this dock you missus disgust you and I'm spelling q hu for no reason I'm going to call it Q because that's actually how it's spelled this Q and then I am going to just give it a saturation of 255 and a brightness of 255 and here we go so now we've got all I lost my I was I was waiting to see how much it fills up so now I have to talk for a little bit although what what I'm going to do now is have a little edit point in this video I'm going to take a little nap we were asleep and when I wake up a lot of the Plinko I'll wake up from my dream where I'll be dreaming up San Diego sounds nice sometimes be hurt and I'll wake up and see how many where they are good night okay hello I'm awake look okay so I still own that and when I woke up and told my fling cosimulation out of my oven because I precooked it for this code cooking show up if you could see that we are getting this nice kind of bell curve where most of the particles fall into the center and once we only get lucky in one falls outside now they're filling it up too much and strange things will happen but that's it actually one thing I wanted to sort of play with actually before I go onto the next video is I got a suggestion from somebody in a comment sub warehouse two prizes that I should consider of playing with the density of the particles in order to affect their motion as well as the time step variable so one thing let's just drive before I go is in the particle one of the options I can set here is density and let me go to a browser here I'm already in a browser and I'm going to go to the matter KS website I'm going to go under documentation and I want to look under body and I want to look for density so density a number that define the density of the body that is mass per unit area if you pass by density robotica ID create blah blah blah this is generally preferable to simply setting the mass and allows for a more intuitive definition of material what's the range Oh default 0.001 so that's the default density so let's see what happens if I give them a much higher density and let's just do something rather extreme like one and I'll go back to my code so I don't know if this looks particularly different to you but this might give them kind of a weightier feel to them in terms of how they interact and work with each other let me just make sure that that those values are actually in there so under the body whoops I should see density somewhere as one okay so that value is in there I can't precisely usually see the difference but this is something that you could use to give to try to experiment with different qualities of different materials oh and you really can see maybe that they're a little they're a little heavier when they land less less bouncy I'm not sure if I'm maybe who to speculate imagining that the other thing that I want to do is really work with the time step to be a bit more consistent about this so under engine the function that I'm using is to update so you can see a update Delta Delta is the time step right the value of the newest innovation forward in time by Delta milliseconds so if you think about it what is the default Delta Oh sixteen point sixteen point six six six six milliseconds that must be the default so I'm going to go in sketch a s and what I want to do is look for in draw where I call engine update so I'm going to just pass in sixteen point six six six so this should now behave exactly the same way so this should look no different but if I make the time step much smaller like one point six whoa we get some like very strange behavior because oh they're moving so so slowly I'm creating particles very often but that time step is so small but I could make the time step much larger like ten times larger and now you can see look how fast they're moving through the simulation so this is also something that I can kind of play with in terms of you know if I were to make a much subtle by just kind of like doubling the time step you can see kind of has the feeling of moving much more quickly but that's simply because for each frame of animation I'm moving further ahead in time so really what you want to put in there it depends on what your frame rate is and what the feeling is and you know are you getting errors can you correct for those errors but this is another thing that you can see to play with now here's the fix Oh 1000 divided by 60 okay Alka thank you thank you for pointing this out so why is that number one why is that number sixteen point six six six because um because matter digest is assuming a frame rate of 60 frames per second so let's actually look at we could be kind of crazy about this here what I can do is I could say console log frame rate which is a function in p5 that will give me the actual frame rate that it's rendering and so I could say a thousand divided by sixty because I want to update the engine at a frame like every moment in time is one sixtieth of second is that right 60 framespersecond I don't know whatever so now you can see but the frame rate that I'm actually really getting is like 30 frames per second so it kind of makes sense that it will want to double that number and you can see this is now with with the simulation running at 30 frames per second and in that case maybe it was silly for me back in the beginning when I was trying to get the world to behave a little better to mess with the gravity so maybe what I really just want is to mess with the density and the time step to get the sort of feeling of how it should look and feel so now it's probably running a little bit slower because I'm console logging but this I think is this is actually I think looking a little bit more realistic now here's the thing I have a confession I am coming to you from the future this third part of the coding challenge is actually been recorded oh we almost a week later than what you watched in weeks part 1 & 2 but the fourth part of the coding challenge that you're about to watch was recorded in the past who in the past so when you go to get to the fourth part of the coding challenge where I focus on adding sound your the codes actually going to revert to a previous state before this so as a challenge to you and maybe I'll record a fifth part at some point putting them together you know if you like some of the improvements I made here you can you can you can mix the sound piece that I add in the next challenge with it when I go and upload the actual code the example code that you might go and play with and iterate on and make your own creative version of this that will have the sort of final version then that will have that will have the final version with this 30 frames per second fix the density is a particularly and the larger tanks but the sound example won't have those larger pegs so just so you know that's the secret truth of all of this welcome to the Future Passed thing and I'll see you when I went to traveling room time in the past if you watch support for the challenge thank you goodbye