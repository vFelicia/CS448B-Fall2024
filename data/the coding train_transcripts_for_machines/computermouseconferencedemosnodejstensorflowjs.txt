so do check one two just testing out my mic i also see there's a question from joe herbert which says i thought of a good prestream question does the coding train have good intro ml in good intro ml video that one would suggest well i don't know about good but i do have a series i think if you search on youtube for beginners guide to ml5.js perhaps this is what kobe is suggesting right now um those are my intro series and i'll be covering the topic from a beginner's perspective today me do do hello happy friday on the coding train welcome all aboard it's a live stream from me before i'm gonna do a whole lot of coding stuff um so um i don't know when i was last here live streaming this way it feels like i've been gone for a very long time down deep i've dug myself into a hole i'm covered and covered in piles and piles of old computer mice that i purchased off ebay um i've been participating in something called the computer mouse conference which just started yesterday but um i was invited to um give it a talk if you will if i could use that term um at the conference and all of the uh talks were um this is a fully online conference and the talks were all um are all being prerecorded there's some i think live panels tonight so i um didn't i chose not to make it easy on myself and uh simply um record kind of a more uh typical kind of uh presentation um and wanted to try producing a uh um a kind of thought a video that was a bit different than the kind of content that i usually make on the coding train thank you for listening to me about this right now and it was really hard i had a lot of help from a lot of people i have so many people to thank and uh if you have no idea what i'm talking about i apologize i'm going to explain more about what the computer miles conference is in one moment but what i am excited to let you know right now the sun just came out here in brooklyn new york it was just pouring rain like half an hour ago that's not what i was gonna tell you what i am excited to tell you about is that i will be publishing the video from the conference which played last night um probably around on monday on the coding train so i today i want to talk about and go through some of the code examples it's a little bit backwards because i'm assuming that many of you who will be watching this live stream haven't actually seen the video so i'm giving you a sneak peek a preview into some of the demos there i also kind of never really finished the last demo that's in the video it's a little bit of smoke and mirrors i really would like to work on that um i would very much like to see if i can train a recurrent neural network in node with tensorflow.js based on mouse movement data and yeah i doubt that's going to happen in the next hour and 45 minutes but i will get it started um let's see so where do i want to um begin so let me bring over my screen here so first of all up here in the top left uh currently all of my mouse movements are being tracked by a processing sketch that i will explain in a moment and they are being recorded into this um sketch and after i think 40 minutes that image will be live tweeted um at uh the twitter account the mouse sees so let's see uh this was the last one two hours ago uh from me that was tweeted here so the in in i don't know how long it's been i should put something in the sketch that says how long it's it's been going but in at some moment of time that sketch will turn you know if everything's working correctly that sketch will become blank and then that image from that sketch do you hear the helicopter flying overhead i'm in the attic of uh the and so the helicopter was flying kind of close of my of my uh place here in brooklyn but um so let's see if that happens um let me first get something out of the way uh which is i'm very excited to um thank today's i'm looking i have my console of buttons there it is uh like very excited to thank today's sponsor of the coding train brilliant um you can sign up for free right now this very moment you can turn this whole live stream off and sign up for free you can keep it on and sign up for free at brilliant.org codingtrain i'm very excited about uh what i want to show you about halfway through the stream today on brilliant's website um they have a course about learning all about artificial intelligence and neural networks that's the topic of my live stream so i'm going to look at neural networks in tensorflow.js and of course there's this ml5 project which i will um allude to but um some of the things i want to explore are not yet in ml5 and so if i can explore them in tensorflow.js then they could maybe get added to ml5 later which would be very exciting um but um uh if as a really wonderful way to learn along with the kind of stuff that i do is brilliant which has a whole set of interactive um lessons where you can try out ideas and answer questions and join a community of people helping each other in topics in math and science and physics and computer science there's a python program of course so many things so um you can sign up for free brilliant.org codingtrain um and uh if you are interested in uh signing up for the premium service which unlocks all of the courses um you can get 20 off of the first 200 people by going to that link all right let's see right now ah yes i thought the timing might work out i felt like i started it around 40 minutes before i went to live stream so let's see um let's see where oh i lost the twitter account already um did it work no where is it oh is there an error oh i'm so sad it went blank and i don't see it oh oh i was i tested it and everything oh i got a bat what's this too large oh look at that request entity too large so i never bothered to do why is it too large because it's a png what if i save it as a jpeg um oh no but i'm doing it as a base 64. um okay i think maybe it's just my node code uh how do you feel about me debugging to fix this right now i'll do it after i finish streaming let's change it to let's make it a shorter amount of time let's just do 10 minutes and it'll be so much less activity i think that base 60 shouldn't it be the same like shouldn't the base64 encoding of this image oh my resolution changed could it be the resolution of the image let's print out like what would make it that suddenly this file was too large to post to my server let me print out the display width and height 1920x1080 i feel like i was doing that before i mean i could certainly oh no this is so sad uh i know i can fix this for sure after the stream is over but i wanted it to be posting while i'm streaming let's just try five minutes and see if it has to do with the actual like amount of activity in the image i could also just go and see i set like a um a data limit i think on the node server that stu that's receiving the image because i don't know that seemed like the sensible thing to do maybe i need to set it higher uh let me just put it on sorry ah let's put it on um five minutes we're gonna get five minutes of mouse movements and see uh see what happens in five minutes okay oh i'm excited that you're all here with me for this so where was i all right we're gonna come back to the twitter ah okay so the computer mouse conference this is the url uh complicating i don't know if you can hear the screaming that's coming from downstairs my so friday afternoon is not a good time for me to live stream the children are home from school lots of activity going on but i'm gonna power through this complicatingthecomputermouse.net so if you go to this website um you can buy a ticket for the conference still later um at six o'clock 6 p.m eastern tonight the live zine the streaming of artist nedo bomani is making uh has a camera view of her workspace tabletop workspace and is making a live paper zine and printing and cutting while the conference is going on you can hear the audio from the conference in that zine stream just for free and we could go look at the schedule let's see what's on the schedule for tonight we can see all these wonderful things that are happening so i encourage you to check out uh and maybe join um the computer mouse conference um if you're interested isn't it wonderful that there is an actual like i don't know if it's right to say about all this academic intellectual conference all about the computer mouse nothing about me is academic or intellectual but there was a lot of brilliance on display last night from all of these um amazing presenters um and i i'm assuming that all of these talks will eventually be available um um i like i'm enjoying charlie's comment in the chat children home from school helicopters home from school lots of distractions it is true um so you know i could go on and on about how much i love i've been really i i love the computer mouse conference in 2020 how much i love it so far this year and how much i'm looking forward to it tonight but let me get to why probably you are here watching this stream this is the page you can actually just go to uh thecodingtrain.com mouse learning so if you go to that url it will take you to the page and thank you so much to dusk uh verkus who's in the chat i think um who has been uh instrumental in helping me get all of this material organized to be online so everything that i reference in the talk all of the artists are here listed with links and all the various articles and publications and you can find them here i wouldn't be surprised if i missed something so if something is missing please uh tweet at me at shiffman you can open probably an issue also on uh the coding train website uh github repo so you could also potentially go here to the coding train website issue and click uh new issue if something is missing of course how do you know if something's missing if you haven't even seen the talk you know it'll all work out eventually um but um there are a whole set of um examples here so i'm trying to think about how i want to approach this oh my goodness i must must someday finish the live poll project so i could just throw up a live poll while i'm streaming gotta make that happen so let's start with collect and visualize mouse data because in order for me to work on the thing that i want to work on is predicting mouse movement so actually let's let's go ahead and a little treat for you i am going to play not the full talk um but just like a portion of it at the end for the section that i want to to discuss here so let me scan through it you can sort of see the video um parts of it here um and let me get to what's the part that i want to get to okay let's try this you do not hear the audio hmm let's see i will fix that so i use this software called loopback ah if i think if i turn this on this will take the audio and send it out to usb capture so that should fix that let's see if we can get this going here oh to collect and save all of my mouse pointer positions into a csv file csv stands for comma separated values it's a very standard data format that you can easily reload into all sorts of other things like a spreadsheet you can then take this data and visualize it in a myriad of ways animations i tried a few different ones with all of these mouse movements saved i could also use them as training data i can analyze the probability of any moment of the mouse going up down left right and replay a sequence based on those probabilities with something known as a markov chain i could feed this data into something called a recurrent neural network a kind of neural network that's very well suited for sequential data time series text music vector paths there's a wellknown machine learning model called sketch rna and the next part is what i'm trying to get to here with data set to generate doodles of all sorts of different types of things and i can take the results of that recurrent neural network training audio too loud movement take a nap and let it just take over and control my computer now i didn't include mouse clicks in here well although i could have this way i just you know i'm safe and i'm not going to end up you know who knows what nefarious business the sort of dream version of my so i don't know what you can see if what you can see here but this um what's going on here is this processing sketch is actually listening to a node server which is spitting out mouse locations where it wants to move the mouse so um these are normalized between zero and one so if you know i'm if i my pixel dimensions are 1920 in width then 0.37 you do the math a little less than half of 1920 what's happened oh i help my children with their math homework all the time and i feel like i i i i've been like learning all these new strategies to do things in my head and i'm like as soon as i'm live streaming and trying to do math in my head it's the most terrifying thing in my entire life um so the idea here is that um this particular so i want to try to like rebuild this project again a little bit right now it didn't really work very well so it worked enough for me to kind of demonstrate in the video this is actually like a little bit of showing like okay this was my mouse prediction so train so first thing i need to do is like collect a lot of data of me moving the actual mouse so let's get to do that and by the way i think um here yes it worked so this was my latest five minutes of mouse movements from the coding train live stream so i don't know why the the many many more uh the like larger image the image with more stuff in it doesn't make any sense to me if it's a base64 encoded image is the basic c4 encoding like compressing it somehow because wouldn't it just be the same number of bytes no matter what the colors actually are i'm very confused thank you thank you to objet who gave me the answer to 1920 divided by 2 which is i would do 1800 divided by 2 is 900 and then i could do 120 divided by 2 is 60 and i got 960. boom just like that boom um so um what am i doing here let's close let's go back let's um let's i think tweeting this every five minutes is going to be too much so let's switch it back to 20 minutes and we'll let this go in the corner here um okay oh gabriel's is here and i have to like unhide no i held it for review no i hit delete by accident gibril's is here and i hit delete by accident you can post your message again why was it held i didn't mean to i didn't mean to my favorite what you know internet person is gabriel's i mean i i probably say that about a lot of people when they pop in the chat they're all equally tied all of my favorite internet people are equally tied as my favorite internet people jabriel's being one of them for sure and there's a limited number so it's not like there's thousands of them okay moving on what am i doing aha okay i've got to collect the data first so let me ah so what am i doing here uh mouse learning so we're going to the collect and visualize mouse data repository so i'm going to be writing a lot of the code today but uh i need to make use of some code that i've already written because no way am i doing this whole project from scratch here all right so let's get let's clone this repo and put it on my desktop um let's open it up i can't believe i deleted gabriel's message my accident i was trying to click let it let it post uh all right so now here is all right so there's a bunch of different uh processing sketches here by the way i also thank you to dusk um what i've recently learned and maybe i should pursue this is you can actually use node.js to also track your mouse movements so you need something you need some programming language or environment some framework that has operating system level access right i'm not talking about using mouse x and mouse y the way that i might talk about in p5 or in processing to get my mouse movements over a canvas i want all of my mouse movements no matter what it is that i'm doing so you can see here like um like this down here this is like um size to be smaller words are failing me very of more and more every day this is what happens when you get older i think it's happening pretty quickly for me um but over here so if i just take the mouse and like hover it down there in the corner it's down here in the corner we should start seeing it appear up there oh boy um so now how do i do this i'm gonna go to this mouse data collect sketch so the way that this the what what i'm actually making use of is something called the robot uh and by that i don't mean the robot i do kind of but i don't have a sound drop to like robot dance to and probably could come up with one but the you want me to move on i can tell all right so let's look at what i'm talking about java robot i love that it's called the robot uh it doesn't matter whether i'm looking there's an older version of java but um you can do all sorts of things like i can use the java robot class to get a screen capture to get a pixel color key presses so but what with the robot class is meant to do it allows you to automate things that you might want to do on your computer so i could actually write a java program that's just typing keys automatically moving the mouse so if i wanted to automate some uh you know process of you know opening files and changing something if i could kind of figure out what the logic behind it is or record myself doing it then replay it there's a lot of possibilities there um now i think i scared gabriel's away i just want to see a message from shabriels again in the chat that already tweeted him or something he left he saw that i deleted his message and thought i never wanted him to come back but i i love you gabriel's you're my one of my top 25 internet favorite people wait what way at the top of that top 25 all tied as i said earlier i just don't want to leave anybody out you know i i okay i was saying something here so um oh and actually now that i'm realizing it the robot class is what i want to use once i want to control the mouse i actually don't need to use it at all for what i'm about to demonstrate to you which is that yeah i want mouse info so let's look for mouse info so there's a difference between tracking the mouse right what does it mean to listen to all the mouse positions and record them versus control the mouse through code rather than through the actual user interactions um mouse mouse info java so if i go here to mouse info and i look i can get pointer info and i can get the number of buttons and where the pointer is and all that sort of stuff but i've done this i've written the code so let's just take a look at it i'm a little bit afraid to run this i don't remember what i'm doing here why do i have the robot one in this unnecessary um let's take out a robot completely because i don't actually need it let's call that start tracking and i don't know it sort of seems silly to have a whole extra function for that let's just move that into setup okay so the first thing that i'm doing is just to make sure there is a mouse attached i think i can get the number of buttons so i guess it could tell me like how many buttons does this mouse have i have no idea i'm just using the trackpad right now uh i don't have another mouse hooked up but let's see what it says so there's five buttons how are there five buttons what are the five buttons i have no idea what that is and why am i getting this null pointer exception who knows um all right so but i know that there's a mouse if there was no mouse i would exit the program now in draw let's look at the the crucial sort of element here is and i see i have some code commented out that i'm not using um is this track mouse function so what the track mouse function does is it first asks for some pointer info right now remember i could just say print line mouse x mouse y but mouse x mouse y would only give me the mouse locations within this tiny little canvas and i want the mouse locations no matter where i'm moving so i can say get pointer info and dusk i see that you're in the chat if you could link to me the name of that node package you showed me i'll probably want to bring that up at some point too um so get pointer info now i have this pointer info object i could say get location and then i can say get x and get y so this could probably all be written in one line of code um the other thing that i'm doing is that bef i have my own mouse point class basically i created a little class just to wrap the x y and the time i'm not you i haven't done anything with the time but i could imagine if what i'm doing is collecting a large data set about my mouse movements that i might want to record when they occurred as well um and then i'm always i'm keeping track of the previous mouse position that feels useful for visualizing if i want to connect them with a line i also am doing something i don't know if this is i'm just trying to keep my data set a little bit smaller and more manageable so i wrote this function called sane that basically says hey if this is if the mouse hasn't moved don't bother recording it into the history so this arraylist is a history of all of the mouse points to summarize i've got a processing sketch where's my like postproduction animation that's just gonna like put the bullet points up here it doesn't happen when i'm live streaming but i could type out this pseudocode uh let's open up like text edit here so let's let me type out the pseudocode for this so you can kind of follow uh so every every time through draw get x y tau of mouse add x y and time to arraylist and then and i think like if a new xy then add that so if it's a new xy if it's moved then add that to this arraylist over and over again uh also draw um draw scale down i thought this was going to be really useful for me to like summarize the code it's quite simple then uh also after x number of mouse locations save to csv files this is really it so every time through draw ask for the xy position of the mouse if it's a new one save it along with the time then keep all that into a big array but you know if i just stop the program from running that array will be lost so take that array and save it to a csv file what's a csv file let's take a look at that so um i believe right now the what the code says if the arraylist has a hundred thousand data points in it save it to a file you know i could be sending those to an api somewhere to save the data in the cloud or i could be storing it in a proper database or saving it continuously but this is my sort of hack let's just save um if it's like 30 frames per second 10 seconds would be about 300 points so let's just save about 300 points right now just so we see that this works and let's also say there must be a print line somewhere in save data uh you know i'll just put print line saving data i'll talk about what's happening in this so i'm moving the mouse around it's um this console i got to make the console bigger right can i do that in console font size also 32 so you can see that better um let's see so i we should be able to count to ten one one thousand two one thousand three one thousand four one thousand five one thousand six one thousand come on it's gotta have been ten seconds already even though i only counted it to five to saving data all right great save data i could by the way i could i could just implement i think i might have actually implemented this i forgot uh i don't see it yeah i forgot that of course here i am like i have i just i have embedded if i click the mouse it'll save the data automatically so that was silly it could have done that let's now take a look so in the data folder we see there is now this csv file and what's in this csv file it is a table of x y x y time x y time x y time so this is me and so that's what's being saved so i think in order for me to attempt to see if i can get an ai to start controlling my mouse for me based on my own mouse movements and i'm using the the term ai just to be just to sort of like get myself through the sentence faster it would make sense to unpack what i really mean by that because ultimately we're talking about a machine learning algorithm and a very and a particular neural networkbased machine learning algorithm what kind of neural network so that's what i want to unpack here but um i think maybe as to try to get a test going maybe i'll just move the mouse in a circular pattern because maybe that's something if i could get it to learn that and reproduce that then i would know that my methodology is sound so let's do the following i'm actually not going to bother to save the data automatically i will just save upon a mouse press so i don't want so okay hold on so let me now remember let me do some circle patterns in a clockwise direction it's kind of hard to do this oh i don't hear the music anymore oh i do this is good circle pattern i wonder if i'm moving it too fast you know what let's try this again i'm gonna move it slower oh no i keep wanting to do it over the canvas and i keep forgetting that that's besides the point this is going to show up in the tweet as well ah gabriel's is still here everybody do the mouse in circles dance i think there's enough data for me yeah and now for the moment you've all been waiting for i'm going to click the mouse and save my data that was a little anticlimactic but i did it okay all right so let's take a look um it's a very small file but that's good so let me just take a look at this this is my mouse does this look to you like i'm moving it in a circle i think it kind of looks like it's going in a circle look to the right to the right to the left to the left down down down down down down down down down down down up up up up up yeah looks pretty good looks pretty circular okay now ah this is great i'm so this is moving along so quickly here through this project let's now switch i'm going to close process not going to close processing completely i'm just going to close this data collection sketch i'm going to leave this mouse tweeter bot thing running um which ever in case you just recently joined every 20 minutes it's uh i this is cur recording all my mouse movements and look at it i love this sort of like uh how how you're really seeing that circular pattern now emerge in there um but i don't want to stop that let me just minimize it okay this was my attempt to be good at explaining something which didn't really work out um and now so what i'm going to start recreating is this particular repo that's predict mouse movement but i'm not i'm going to write this code i mean nothing is truly from scratch but i'm going to start this project over just because it didn't really work out but i might have to refer to it because i don't know tensorflow.js super well off the top of my head okay um great and we have a machine learning researcher for wireless security in the chat please help i don't really know machine learning i just i just played somebody who does on tv um i also have this really like big question in my head which is this video is so unlike most of my content it also is specifically for this conference so i wonder if it needs like a short intro i should record a quick intro to it but yeah i don't know think about that late all right so let me get to here so let's make a directory we're going to call this mouse ai for gabriel mouse ai uh i'm gonna say npm init that's what you do these days right i don't know i should say like yarn or something or what's there somebody saying newer than yarn i think i kind of forgot i think i forgot to eat lunch today like i'm very hungry i'm feeling kind of tired i had a very large uh late breakfast uh today has been an unusual day for me uh a very very nice day beautiful uh beautiful day and i was outside for quite a bit and uh i don't you don't need to hear all about my day i could i could talk about it it's not that interesting uh by the way i'm getting i'm fostering a puppy who hasn't arrived yet the puppies arriving tomorrow so you all hopefully know my dog gloria pickle who makes many appearances in the mouse conference video but tomorrow gloria's gonna get a friend uh marlin and um oh i'm getting breaking news from simon here do npm inity so that it automatically does it automatically you don't have to manually make it do it automatically oh well i already did it though sorry all right moving along so stay tuned for cute puppy photos tomorrow um so where where am i go where am i where am i doing all right so now uh let's open up this directory and let's create a file called index.js so the first thing that i want to do is just parse that data file so i've got to find that csv which is presumably on the desktop in computer mouse data mouse data collect which one was it the later one this one let's make a copy of that and just put it here so let's start with and i'm um you know i apologize to any of you who are new to coding i really really strive to have everything be accessible and approachable no matter your skill level watching my stream but admittedly anytime i'm diving into writing some node code and trying to use something like tensorflow.js there's going to be a lot of confusing stuff just know it's confusing to me also but a node is an environment where i can write javascript code just and execute it through the command line basically run little javascript programs on my computer i'm not doing anything with a web browser right now and one of the things i can do is i can import various node packages and one of them that i want to import is called fs or file system and then i think i can just say like data is a read file and i'm going to use this read file sync so i don't have to worry about a callback and then i need to say what file i'm opening like mouse.csv and then probably like oh what's its encoding it's a text file or utf8 so let's just see and then if i say console.log data and of course the file isn't actually called mouse csv so uh let's get the full name i could just rename it but all right so now can you see all this code let me move this over here ah there we go now i should be able to say node index so now i'm going to execute that program and look there's all that csv file so i'm sure there are countless node packages that help with csv parsing but to me it's actually kind of easier to just do this manually such a simple file so i think the first thing i want to do is say data dot split by a line break so i will now have an array of lines then i can go through every single line and i'll say the row is lines index i dot split based off of a comma and then the x is the rows first element and the y is the rows second element so if i say console log x comma y we should have this parsed great so now i'm seeing all of those x y's that's good now here's the thing i probably should i mean basically what i'm attempting to do is recreate sketch rnn what's sketch art what what sketch rnn you asked i can hear you asking it all of you asked it simultaneously just as i said it i can hear you um sketch rnn uh let's see here this is what i'm looking for so i do have a video all about how to use sketch rnn sketch rnn is a machine learning model uh that was trained off of a large data set of doodles for example doodles of cats my children have written a song about cats and i'm using everything all of my uh um strength right now willpower to not start singing that song um but uh let's see i think there's like a demo in here if i just like sketch skip to the end um you can see here this is what sketch rnn does it's not working still oh this so this a little further off where we left off and i will say goodbye to you by letting you watch a compilation of sketch rnn drawn yeah yeah yeah move it along move it along so you draw and then the ai takes over and continues the drawing so i'm basically trying to recreate this but with my own data and i do uh happen to know that sketch rnn i believe doesn't use the raw position data of all the points it uses the difference between the next position and the previous position so you can get those like vector paths but to keep things simple right now let me use the raw data one person in the chat is asking me to sing it all right so but i'm gonna start small and um and not do that so the next thing i need to do is i want to normalize this data let's put this in um let's make this a two and so machine learning systems neural network based systems generally uh generally are looking for data in arrays so i already have it in an array but i let me make my own array i probably should make it an array of arrays x y x y x y x y let's do that so i am going to say uh i'm going to make an array like i'm going to call it raw input so i want to create the raw input to the machine learning model and the raw input equals uh input uh equals ah no push i want to push an array with the uh with just the x y and then i need to normalize that data and i happen to know that my resolution obviously i wouldn't want to really hard code this but if i divide it by 1920 and by 1080 i've normalized all the data between 0 and 1. now if i say console.log raw input there we go so this is now the data that i want to send into the neural network that i'm going to develop is going to be in chunks chunks of x y positions all normalized between 0 and 1. looking good all right so next up i really need something i i should have set up a notepad for me to diagram today so i'm just gonna have to use my words please bear with me what i'm looking to do ultimately is what's known as a regression a regression meaning i would i want the output what's the output of the neural network i want one of the one xy right the input is maybe hey here's my previous 10 xy positions what's the next one if you if you were moving in this direction all these ten times where would you go next so alt if i'm doing this and so it's regression but what kind of architecture do i want well you can think of this as a time series data it's a sequence the sequence might go on forever and the architecture for that kind of data music text time series financial data you could probably think of other examples would be something called a recurrent neural network and you know there's more recent research and variations on that and lstm and gpt transformer stuff all that stuff yeah our machine learning researcher in the chat will explain all of that to you thank you machine learning researcher in the chat who is slowly approaching onto my list of some arbitrary number of favorite internet people we'll see though the word is still out um but i wanna just i wanna i wanna know that i can get this to work first so um let me try doing um a sort of more uh classical classic uh fixed input neural network so instead of it being sequential i'm going to train a neural network to make a prediction based on some fixed number of previous mouse positions so if i always know like a sequence could have five numbers in it or a thousand numbers in it and it's continuous but it's not i'm not going to have as a robust system with a lot of memory but maybe i could get something to work if i always just say the input to the neural network is 10 mouse positions and the output is the next one so that's what i'm going to do so i need to start architecting my neural network now ordinarily i would go instantly to ml5 and i could i probably wish i could i wish i was because i know how to do it very well with ml5 but ml5 doesn't run in node and i don't feel like opening up a web browser and figure out that and i would like to learn a bit more about using tensorflow.js directly in node because someday i would love for ml5 also to work in node so that's where i'm going to go i just had to say all these words over and over again to build up a little confidence that i can make this happen so let's go to uh you can see what i was googling by the way it came out right before i started live streaming tensorflow.js are an ed cell because if if all goes according to plan which it won't i will get to investigate this before this stream is over i i doubt that's gonna happen but i'm gonna not worry about um that just yet so let's go to the api documentation um and one of the things that's hardest about working with tensorflow is this idea of understanding what it means to work with tensors this is why i like to use ml5 because ml5 obscures the need to work with sort of lower level memory management and tensors with your data you could just give it an array or give it a string and it'll sort of figure out how to do that but i'm now opening up this can of worms which is tensorflow.js and i'm gonna have to do it myself by golly and i can i what's the stuart smallie daily affirmation people like me gosh darn it they really do i'm i'm good enough i'm smart enough i don't know i stopped watching sorry live after the 1980s so that's where my knowledge leaves me all right so i don't know where to begin well where to begin actually is i need to uh um i need to look at the getting started page there's got to be a getting started page right because i want to use it in node tf dot js node there we go this is what i want so i need this node package to use it in node so let's do this npm install tensorflow tensorflow.js node boy this doesn't work it's not going to be a very long live stream let's install this so npm install i you might be wondering like hey you used fs how come you didn't have to write npm install fs so in node some packages just come with node but tensorflow.js for node is an additional package i have to add okay um oh it's got to build tensorflow ooh this is exciting oh oh i was about to like put on some did it work thank you thank you are these i thought it would take longer i think it worked okay so now i think i just need to say require something required here we go let's do this i'm not going to attempt so you can um get it to use your uh graphics your gpu hardware that's not something that is within my powers today and i don't i definitely don't need it making a very small little neural network here a little just a little bit of data so let's do that so now the first step is for me to turn this data this raw input data and can i say console log table i notice that question in the chat yeah console.log table works in node which makes a nice little like sort of spreadsheet version of what i wanted to print out i need to turn this into a tensor so how do i do that so by the way tensor it sounds like oh tensor that must be some like really complex concept that has nothing to do with anything i've ever done before how i ever understand why is it called tensorflow what's a tensor so tensor is really just another word for a bunch of numbers and and maybe that's uh you can you can argue with me in the chat whether that's accurate to say but um tensor um you know the reason you you might think of an array like well is tensor and array the same no so an array is a list of could be in a list of numbers but by definition an array is one dimensional so a tensor is kind of a nice word for any arbitrary multidimensional array am i getting this right i have a whole video where i explain this and i kind of have forgotten it but really it's just another word for like an array uh you might think of as onedimensional matrix is twodimensional tensor is a generic any dimensional bunch of data i'll i'll look at the chat to see whether i've been corrected or not um all right so now this data is one of the so something that comes up in machine learning a lot is the shape of your data and what's lovely about using console.table is i see the shape the shape is you know 100 1435 i mean that's probably the index i'm sure started from zero so it's 1436 by two there's two columns now it looks like it's by three but these are just the index values so that doesn't really count so this is two dimensional data so if i go back to the tensorflow api i want to say i want to make a a two dimensional tensor so with values and shape so i should be able to say now const input tensor i'll just kind of call this input equals tf tensor2d my raw input my shape is raw well let's let's look for rawinput.length and i'll call that a rose and then i know it's two columns i don't know if this is going to work and then i can say input dot print so in tensorflow.js instead of console logging it you can you call print and it'll put out a preview let's see if that works good hi where's my bell uh my sound effects for being happy can't believe that worked i must remembering things from tesla okay great so now i have my input data i have my input data in a tensor next thing i need to do is i need to design my neural network so my neural network needs to have inputs that correspond to this input data and it needs to have outputs i know there's two outputs so what goes in between don't worry i will get there um oh the last line is empty so i should that's very good that can really mess things up thank you for ever in the chat mention that to me the bell i really it's like funny not having the bell like i feel like i use it whenever there's like really salient important moment and i'm getting to the halfway point of this live stream so i will be taking a break having a snack uh great this is important that i do this and let's just yeah because this is really going to mess stuff up this not a number here thank you for noticing that so and i don't want a console.log i just want to see the tensor uh i don't need to console log this anymore so let's do this again great um all right so we can see i have my input data so now back to the tensorflow api so what i'm looking for next is to create a model and i want to make a sequential model a sequential model is a model where the data flows in one direction in a sequence there are inputs and there are outputs the world of machine learning and neural networks there's all sorts of different kinds of model architectures i'm starting with the most basic simple one um okay so a sequential model so i'm going to start off doing this i'm going to create my sequential model then i need to configure the first layer it's going to be a two layer network there's just the hidden layer that receives the inputs and the output layer that takes the output of the hidden layer and which squishes it into my xy prediction so looking at this uh let's do this so the first layer is um no okay so ah so the this is the input shape ah right right right ah my data actually isn't formatted properly i want to have so here's what my data is now this is what my data looks like but remember what i'm using as my training data is groups of 10. like what is the next mouse position based off the previous 10 mouse positions so there actually should be another array in here and this should be 10 of these and then another one so the data should actually look like this it should be in groups of 10 and these would each be 10. so how do i do that so i want to let's make a variable what's a good name for this variable the oh people are telling me the font size is a little small let me thank you let me um let me try making that a little bit bigger uh let's see if this helps better hopefully this is better um okay so i need a variable for history size chunks i'm going to call it chunks i want chunks of 10. so four let j equals zero j is less than the number of chunks j plus plus so now um and then for each chunk oh that's i want to have a chunk which is an array boy did i make this complicated and the chunk should receive aha oh my goodness this is super interesting this should be i plus j and i can only go i can't go all the way to the end of the array because if i'm always taking blocks of 10 i have to stop at the 10th to last position i have some syntax errors somewhere because it's not auto formatting nicely move this over since i'm sitting here oh but i don't see my beautiful mouse visualization that's fine okay so go through all of the lines for every line get a group of 10 push that into this chunk and then raw input push that chunk what's there's a syntax error or something does anybody see it huh let me just try running it 34 you're probably all telling me in the chat oh because i have all this nonsense down here i forgot about that okay that was just reference material okay i think we're good now oh but it's not a 2d tensor anymore i'm done tf tensor the number of rows the number of chunks then two is this my shape now is that how you do it i'm just kind of afraid let's come at this all right let's see all right this looks ah i'm on a roll today that looks right groups of ten groups of ten amazing ah this is so amazing no so people are saying do i i should be saying plus equal chunks i don't actually want to do that my training data takes 0 through 9 predict the 10 1 through ten then pick to predict the eleventh two through eleven so that data is repeated with each chunk now again this is not the proper way of doing it but this is giving this is how i want to do it uh yeah um i absolutely do not wanna move up by the chunks i'm looking for as much data as possible and you know i'm taking 10 chunks at a time sliding across the data okay so now the input shape is um still the um oh the input i think i would just say it's the number of chunks comma two i think that's the input shape right it's ten things of two okay now the number of units i'm going to leave this as 32. it's sort of like and by the way there's like i i feel like it should be wrapping some of these um all right i'm not going to worry about that i never can get my code formatting right if i do this well yeah let me do this because i think this is a little easier to see now okay um so i'm going to leave 32 as arbitrary now the next thing that i want to add is the output layer which has two units that's it now i want this to be on one line although i think i need to add like activation functions and things like that let's do it this way to be consistent okay all right so i'm creating a layer that receives the inputs 32 is i'll get to why it says units 32. we'll decide that later and then there's two output units yeah i probably also could flatten the data but i'm um yeah hide the side tab i don't know what that means i need to do need to take a break in a minute um so just give me a second here but i kind of want to get i want to at least um actually this is the perfect time for me to take a break i've never aligned my sort of sponsorship so perfectly with um with my content but it's um and so i'm i'm avail i'm streaming until five today which is about another hour i think i'm gonna be able to get through a little bit quite a bit more of this but let me take a short break i'm not actually taking a break this second don't go anywhere i'm going to tell you um about uh today's um sponsor which is brilliant so i don't know about you but me i love to solve puzzles and i love to learn new algorithms and try to figure them out and then when i i love to get things wrong because also because that's the best way that i learn and so for me one of the um a really wonderful um service and website and they have an app that i use is called brilliant so brilliant is a website it has courses and lessons and a community of people all lifelong learners stuff for all ranges of ages you know one of the things i like to say look it's actually telling me continue learning look at this it somehow knows the brilliant has some really good ai that knows that i need to continue learning introduction to neural networks well i was working on it earlier as a review to understand about neural networks but i think the thing that i would just show you here is if i just go to courses i don't think it says that i could say much more about how wellsuited this is if you like the coding train that you would like uh brilliant because of look at all of these topics um computer science fundamentals neural networks math fundamentals applied computer science um browse all 60 courses number theory this is one of my favorite ones right here infinity so if you like some of my videos on fractals i mean all you know so many of my coding challenge ideas came out of brilliant so um just to give you a quick preview of some of these i have a couple videos that i can play so there's a python um coding course um that you can actually so like i don't do videos on python but if you want to learn python you can go through these interactive lessons um see how they work you know the one that i'm working through now which you know i was saying like oh i really need visual diagrams to explain some of these concepts they're really beautifully illustrated in the uh neural networks course um there's lots of material that you can available just by going and signing up for free at um i have this brilliant.org coding train if you go through that link lets them know that you found brilliant through me which is just a nice thing to do if you can no big deal either way but i definitely would appreciate it um and then if it seems like something you would really like to unlock all of the premium courses and content you'll also get a discount through going through that length of coding train one of the things that i like to say i don't know you know it's not exactly gift giving season right now but you've got a someone's birthday coming up you know buy a nice gift um is getting somebody a premium subscription to brilliant it's something that i i do buy for as gifts for other people myself all right so um let's let's see if i can just briefly before i take my break um dive into the neural networks course a little bit let me move this out of the way so let's go to um introduction to neural networks i'm going to click continue course and i want to skip to i would definitely recommend going through all of the course but i just want to skip to the neural network one because it illustrates a lot of the concepts and here it is of what i'm talking about so the idea here is like this is the input data now it's different the input to this neural network is an image but you can see it has a shape to it like the shape to this data is one two three four five six it's probably 27 if i'm guessing i don't know i can't count if somebody could count this for me but the shape is the number of columns by the number of rows so similar idea and then all of these go into like if i would go back to my code here 32 units well that's the number of these hidden nodes now there aren't 32 here and then there's actually two hidden layers so in this if i were to try to recreate this architecture i would have to add two layers and then there's an output one you can see the output has one two three four five six seven eight nine ten so i would put 10 here and the idea here is that you know it's based on how the neural network is trained it is going to highlight or light up one of those output nodes those output neurons so i'm basically using tensorflow.js writing code to design a model like this not the same concept because this is doing image classification and i'm not even doing classification i'm doing regression but i have the same idea i have this sequential network it's usually visualized or drawn in diagrams from left to right this is being drawn from bottom to top so the data flows this way in the sequence input data that's there hidden layer hidden layer output layer so that's exactly what i'm going to do so i'm so glad that this course in brilliant just perfectly illustrated exactly what i'm coding today uh so thank you brilliant for being a sponsor of of coding train a very very um dedicated uh sponsor and what i'm going to do now is just um take a short like hopefully less than five minute break um if you have nothing to do during this five minute break uh you're welcome to go ahead and sign up at brilliant.org codingtrain but i will be right back i'm going to continue writing this code to try to finish this project if i could get back in four minutes i'll have 45 minutes to finish this project so please uh take a break yourself if you can stretch get some fresh air meditate something practice some selfcare please um i'm gonna go get like a granola bar or something give me a little energy for the next 45 minutes and then i will be right back to finish um this particular project all right so see you i'm gonna put up the intermission uh animation right now and i will be uh right back i'm muting my microphone do do so do do do do so do okay i'm back whew that was a good break all right how's everybody doing i got a lot of flights of stairs to go down from the attic let's get something okay i'm back we're gonna make this happen people um how's everybody doing okay um oh nice some people are saying nice things in the chat that is very kind of you i very much appreciate it okay so we have now added oh we're just gonna do one layer so uh and i want to change this back to two so i have a sequential neural network but okay if you just are tuning in i'm trying to write a neural network to make a mouse movement predictions so i have a training data set of me moving my mouse pointer around in circles and eventually i would like to have used different data and i'm now going to see if i feed that into a neural network using tensorflow.js if i can get it to make the prediction to move the mouse around in circles okay and uh i had a little piece of toast with a little peanut butter on it in case you were wondering i feel so much better i'm like a like i could just like survive for the rest of my life with just peanut butter just just putting that out there okay uh and some water had some water i i wanted to make a coffee but that's kind of late and i didn't really have time that would take too much time to pick a coffee i don't have that much time to find my break all right so what's next let's go back to the tf.js and thanks again to brilliant the sponsor let's go back to the tf.js page so the next thing i need to do is usually have to like compile the mod the model or something or add some kind of loss function optimizer i mean i wonder if it has like a default of all that stuff tf sequential usually like um oh maybe that's all under model compile yeah how come there's not an example of using compile i mean i could just go to my uh examples so i by the way let's let's do this i made a bunch of examples a bunch of years ago let's see uh examples p5 or something well these are my videos now this is what i'm looking for so this is from well i guess i made a change on 2019 but these are a bunch of examples i did let's look at this um color classifier which is probably relatively similar what did i do ah right so i did this a little bit differently that's interesting i like how this is done so i didn't put in the specific activations i'll get to that but this is what i need all right let me just copy this sorry everybody let me just copy this in here for expediency so all right so what am i doing here and this is i'm gonna i'm gonna change this stuff so basically this is this here is architecting the model and that is saying that here are my layers just two layers the first one that gets this input and you might be asking like well why is there no input shape in this layer i could put one but the tensorflow.js the model can figure out what the input is into the second layer because it's the output of the first layer which is 32 but the first layer doesn't know what its inputs are because that's my data so this is me defining like oh this is my data then put 32 things in here and i don't so i could if i wanted to do something like this i think it would be this but um unnecessary whoops okay ah so many auto fill so now once you um and so let's let's just sort of see like what once i've architected the model i need to say model dot compile it basically the tensorflow.js is going to do the work behind the scenes to like set up all the data structures and memory and math stuff that it needs to do based on it doesn't want to do that until it knows what all the layers are so i'm just curious if that if it'll like compile in some default way or if it gives me an error whoops oh and let me um i don't need to print out the input anymore so i've seen that it's right right so this is what i expected it's giving me an error it cannot read property loss of undefined so what is loss and i think that by accident i'm like using some meme or something that i'm not aware of because i'm an old loss is the term to summarize the total error of a neural network as it is going through its training data so it's looking at its training data and trying to make predictions that match the actual answers that are embedded into that training data and if it's getting if it got everything 100 right its loss would be a nice big round zero of course that never happens and if it is a zero it's probably over fitted which is a term for like your model is so good at making predictions based on the actual training data that when it's deployed into the world with nontraining data it's not going to do very well but so uh in order to define the loss function um well i need something that defines it so um we can see here i could add and let's add that in loss now it says categorical cross entropy here which is um just from my other example that's a kind of loss function that is well suited for classification algorithms which isn't really what i'm doing here so um i'm going to look for i think it's just root means mean square root mean squared i've lost my um sense again of uh let's see so let's see what are the optional options up let's say categorical cross entropy it's got to be ah here we go mean squared error this is what i think i want to try so these are a bunch of different like metrics for measuring the how the neural network is doing i'm going to grab mean squared error let's try that now let's see what happens all right so i it needs all the stuff so it also needs a optimization function so what does that mean so the neural network is full of all of these weights if i went back uh if i went back to the original um uh if i went back to that diagram from brilliant.org from the brilliant website you would have seen all these little lines that connect the different layers they all have weights so i need to figure out what how am i optimizing the weights to get to the most the best set of weights that produce the the lowest loss and so sgd stands for something called stochastic gradient descent that feels like a fine thing for me to use right now learning rate and a lot of my other videos cover this stuff in more detail is so if i have an error and i want to like twist a dial to adjust a weight to try to get that error lower like how much do i twist that dial like do i just make little tiny changes that i'm going are really big ones so let's um let's do let's do let's create this uh learning rate and optimizer and put that in there i actually don't think the metrics thing i really i don't know what the met someone i don't know why if metrics is just for if i want to like get a report on how it's doing or whether that's actually doing something but let's keep it because i don't know it sounds like accuracy feels like an important thing so basically i am doing this okay now something that was in my previous example was activation functions and i do need to get into what i want to use here because i certainly don't want to use close this tab close this tab you can see here that there's something called sigmoid and something called soft max so we'll talk about those i think i'm going to need different activation functions but once again i just want to see if this will run without an error great no error moving along next up ah i need to have the um so these are actually so this is often referred to as the x's um the x's being the inputs to a neural network and so my training data set would usually have x's and y's so that the inputs paired with the output so in the sort of canonical cats versus dogs image classification my exes would be a lot of images of cats and dogs and my y's would be cat cat all the correct labels that correspond to those images here my raw output or what is called raw output is the 11th xy so after i go through this the raw output should get next row is lines i plus j plus 1 and i should get an x y from that i don't know what to call this like i'll just call it maybe if i call it next that kind of makes sense and then push that x y into the raw output so these are the raw inputs chunks of 10 and then the 11th that goes to 11 is the output although i think now this needs to be minus 1. so i should be able to also say y's is a tensor raw output and i should have rows comma two right let's print the y's let's just look at this also that's oh i don't have i plus j it's not i plus j and it's not i plus j plus one it's i plus chunks so chunks is 10. great so these are these are all the next positions oh they have to be normalized so they also have to be normalized so they should have they should be divided also by the width and the height great so these are the output tensors the reason why i'm doing that is because the next thing i need to do is call model.fit so fit is really a function for um oh it means what it says but you know you would think like oh next thing is train the model model.train and actually if you look at ml5 no train i am i'm contractually obligated to blow the train whistle um oh uh a train is the word that's used in ml5 but fit is really what's going on here because basically i have this neural network and i have this trading data set and i want the neural network to uh fit i want to fit that d fit the data inside the neural network i want the date the neural network to learn from that training data set so i want oh i want to fit it why is it fit i can't get this to like make sense it's like it's so embedded in my brain to think of like i'm fitting the data like we're fitting the model fitting the model to that data that's what it is so what goes in model.fit oh let's i can see it here i think it's just x's and y's um we can look for um compile evaluate predict fit so we can see here and oh well here's my answer i could just do oh i can do something much simpler like just this by the way that's interesting so i want to say model.fit the x is the y's then and the number of epochs okay great let's see here so i'm saying model.fit the x's and the y's and then i guess i give it an object which i want to say like how many epochs so an epoch is it epochs or epoch i'm just going to say one right now and epoch is one time through all of the data batch size is also maybe important here but i'm going to ignore that for right now batch size is how many chunks of data should i batches of data i guess i'm saying chunks but a batch is like a chunk how many batches of data or how big should a batch of data be before i start tuning the neural network so if i have a thousand data points i might do batches of a hundred and that would be ten batches of a hundred and so i wanna use the um this is an asynchronous function it takes a while to fit the model so i'm going to put this in a function i'll call it train and i'm going to say this is oh it's an async function and i'm going to say await model.fit and i will call train so let's await and i i probably should use some callbacks and things like that but let's see what is it doing here let's just try oh there's a hiss well i get something out of it cool i guess i get information about you know how the model was trained and then i can um i see call that h i'll just do what they're saying what's i oh it's like calling fit a bunch of times that's interesting why would you call fit so here's my question why would you call fit five times why not just have it be 15 epochs that's confusing to me does anyone know the answer to that i don't know but i'm not going to worry about doing it five times let's just say um let's look at the total loss when it's done all right here we go people well that that didn't go well error when checking target got array 1424 comma two dense two to have three dimensions so my data is not formatted correctly um did i do that by accident in chunks of 10 also no i mean is it just no i mean i i kind of know how to get this to work with flattening the data um it resets the neural net people are answering that question in an interesting way but at first i want to get this to work so did it get through like let me just take this layer out for a second well that doesn't make any sense actually um shoot error when checking target expected density to have three dimensions but got so this is right that's the array's shape but it should have three dimension what uh no is it really like like is it this because the x and y are just one number that doesn't make any sense blank ten two blank ten where'd the ten come from put shape oh this is the bane of my existence with doing this machine learning stuff run the debugger there's a debugger i have no idea what that how that that works i'm gonna figure this out um okay got this blank 10 why is that where's this 10 coming from so i i feel like i know a way to get this to work that i was trying to i guess the x y's being in pairs don't actually matter so i'm gonna do this differently if you will all um i'm gonna i'm gonna do this dif i would love to like figure out exactly what i did wrong here but i have an idea of how to do this differently oh yeah it's actually just this which is silly but third shape promoted shape oh okay okay all right i give up i'm gonna do this a different way um one thing i want to figure out is if i have an array if i have an array and i say a push 3 comma 2 that's my array then a push 9 comma 10. great okay i need that for loop of x's and batches chunks is 10. 10 is the chunks okay hold on people are telling me something here that does sound reasonable oh no batches of ten the chat is being helpful to me but it's a little bit too much for me to follow um so i think i'm going to do this a different way that i kind of have more confidence in working the the fact that i'm keeping the x y's together is kind of irrelevant it doesn't really matter i'm not doing like a convolution here so that i could just flatten the data like it makes much more sense for me to just have this be 20 things in it so and then have the raw output be just two things so that this now is chunks times two right this is like basically just changing it to instead of having it be arrays of arrays it's just uh like a threedimensional tensor it's just twodimensional which i think is going to make more sense and then this is just chunks times two and then this oh no hold on let me look at the example hmm all right let's see this this is what i'm thinking yeah that worked [Laughter] so i i i i think me trying to do the the keep all the xy's together in their own little arrays set me off on a a bit of a tangent that's kind of unnecessary here um i know that was probably confusing for those of you watching because i did it in so basically let me explain what i did so i had it i had it originally as each each data point was the following xy so this is the inputs were like this with 10 of these but i think it's ultimately simpler for it just to be this so instead of having like lots of little internal arrays with each xy which could be useful in case i need to like do some operations where keeping them in pairs is really important but i'm not doing that so i think this is better now the other thing i want to do is i want to um i i want to be able to see the loss over multiple epochs probably so i know that and i'm running out of time here so i want to look for these i think i can pass in callbacks so i'm just going to grab this um which is some code that i have from another example that i saw uh it goes in the fit function and i think if i do this um so what's this on epoc and i don't need on batch end i'm just going to get rid of on batch and so i have callbacks in addition to epochs come on you can do it you can get this syntax right epochs callbacks that's on epoc end callbacks i'm trying to like organize this the way that it's and i i don't need this lost p html nonsense epochs one call backs on epoch there on there and then there we go so i added a callback and little let's give it 10 epochs and then what what how do i get oh how do i get um what did i do in my example uh logs lost to fixed so let's grab that epoch logs so let's do let's print out the epoch plus logs loss to fixed i don't need a plus that's why i'm using this string literal epoch and then loss so let's see what happens here so interestingly i am getting a loss of nan whoops i didn't mean to split the pain i have pain i didn't mean to split it so um and whoa everything got so wide all of a sudden okay now i think what's missing from this is a couple things one is thinking a little bit about this optimizer so i'm not sure if i'm using a really socalled smart optimizer here but more importantly i think the thing that's really missing are what are the activation functions so i don't know what they are by default but i am going to put in to both of these the sigmoid activation function all right given that i have about 15 minutes left in today's live stream it's unlikely i'm going to really dive too deeply into what is an activation function definitely somewhere in one of my video tutorials i cover it but if i were to if you were to think back to that um do i still have it open the brilliant neural network library but let's um um let's see if i can find one that would sort of make sense in this context so i just want a um here we go perfect so this is basically um a pretty this is a two layer network so there's how many inputs i have 20 inputs because i have 10 xy pairs my hidden layer has 32 and my output layer has two not one so that's the only thing that's different but basically as the data flows through this sequence it has to be processed it's a weighted sum so the input values are multiplied by the weights of the connections and then are passed through what's called an activation function the activation function has does a lot of you know serves a few different purposes but in this case what i'm really thinking of is it takes the um the the weighted sums and squashes them and so one of the things that is important to me here is that i want outputs of the neural network that are between 0 and 1 so i can expand those easily back to 1920 by 1080. so um so i i really do want the output layer to be sigmoid um there is something that's sort of more modern more more sort of like currently used which is called relu rectified linear unit which just chops up the negative values i have no negative values though i wonder if i should be mapping my data based off of like 0 0 in the center so this is really what i'm not sure this is also why using the vector between the next point and the previous point might make more sense i don't really know but let's just try it like let's just let's just live in like you know the 1990s and really very basic like kind of classic neural network architecture with just like the sig classic sigmoid activation function with stochastic gradient descent i'm going to lower this learning rate to something much lower and let's see what happens oh yeah look at that my loss what by the way is this is just some like auto print out something like do i not need to do this in node like maybe i don't i don't need this callback at all i went all that time to do that call back because node is going to automatically print out stuff for me well that was silly so i'm going to take that out of my code and i could well that's fine let's give it like 20 epochs oops no no i don't need to do that okay it's going down i kind of like that i mean is it still going down let's give it a 100 epochs down down down it goes huh this is working surprisingly well why is this loss are these like the internal batches or something why do i have this nice beautiful loss that's going down and then this lost the tire regardless i think now i can try to make some predictions i'll make a function called go and i'm going to say await train now i'm going to say um i'm going to make a function called predict oops and basically what i want to do let's take any arbitrary what do i have is it raw input i want to take any arbitrary sequence of 10 from my actual raw input so let's pick um let's say i'm going to take a random number a math.random times rawinput dot length math.floor that and then and and it should be actually times raw input.length minus chunks is that right are chunks oh oh i could just take one of them i already have it okay great sorry sorry sorry raw input.length now i'm going to say my inputs my input is raw input dot index r and then the x's are tf tensor inputs and i should put that in an array i think and the shape is chunks times two just one of them right because uh a one comma chunks times two i'm just going to predict one thing i'm trying to create i'm trying to just test right and then i can say uh the outputs are model await model dot predict so passing now i'm using just some of the training data which i realized i should create my own data like i should move the mouse and then have it continue i won't get to that probably today but i will get to that at some point um i want to get those outputs and let's just see if i get something so we're going to say await train await predict um say training complete i'm making a prediction all right let's see uh await train oh this has to be an async function also now i need to call go all right let's see what happens okay it's training the model loss is going down and then hey i got a prediction now that's a little bit disheartening that the prediction is like be in the middle like i feel like that's not very good like maybe that's what it actually should be but that seems um let's let's do a bunch of different predictions and um what i should also do is um i should actually pull it out of the tensor so you can call the dot data function and then i can just console log the x y because in theory what i could do now is just tell the mouse to go to these locations training let's see what i get do i get all yeah see i don't know i mean was my mouse moving around the center and does that seem reasonable so hard to know i suppose i could quickly spin up the next step i mean i think for this to feel at all satisfying i should so um uh right because we're not we're not really seeing if this works at all so let's let's let's go to the next step and i'm gonna um in order in order to be a bit more expedient here i'm gonna go to the code from my talk um repository and just grab like what i did here which is to add a quick server although i guess i could use wait a second let me go back through the discord i can control the mouse with um um where was that dusk i saw print gave me the link but i can't find it now oh i'm sure i can google it uh npm robot.js let's try doing this without processing so this will be new so there's a node package for desktop automation just like in java it's called the robot class it's called robot.js so let's try adding that and we're gonna start moving the mouse it'll be fun uh you know depending on what your idea of fun is uh definitely for me this is my idea of fun okay so actually what i need to do that's different is back into the code before i could do that this was a very silly thing that i did which was just like oh let me predict this a bunch of times so what i really want to do is um here we go i want to start with some inputs so i'm going to start with an arbitrary set of inputs and then i will call something called predict my own function called predict based off of those inputs and i'm going to get hopefully a next point there so predict based off those inputs get the x's get the outputs get it as an x y but return that then um and i want to do this then i want to say let's just do it like 10 more times i want to take the hmm i should probably i'm going to call slice just to make a copy of it slice makes a copy of it right because then what i want to do is i want to say inputs dot splice the first two elements like i want to take the first two off and then inputs dot push push the new the prediction it just got and then this should be let maybe and then next is predicted again right won't this do a nice little loop where i start with 10 mouse points i predict the next point once i've got the next point i take out the two oldest points put it in and then get a new next point and do that 10 times won't that work and this should be a weight and this should be a weight pretty sure that's right it's a little silly that i have to oops a little silly to have to train the model each time but i'm not it's so fast because it's so little data that i'm not going to worry about that okay oh how how come it didn't do any prediction did i not console log anything oh i'm not console logging anything so let me hold on hold on where was that where am i doing prediction i've lost it sorry for all the scrolling i'm getting a little tired again oh this is where i call predict but i want to do it here next so maybe this is probably like let's just do this a little silly but i'm just gonna log it here and then log it here okay uh and let's just uh let's lower the number of epochs just to get to see that it's working yeah look at that so those are the 10 next mouse positions to move to so now in theory where is this robot js thing i was there robot.js um let's go to github and see okay robot equals require robot.js now key tap mouse get mouse position i want to move the mouse robot move mouse is it really that easy what does set mouse delay do well so now is it really as so let's say move mouse next oh no no no no i want my own function no wow it really wants to type out what i want to do but and then i'm going to write function move mouse this is very bad it's going to take over my mouse and then point point comma 0 times 1920 point point comma 1 times 1080. okay everybody are you ready to watch my mouse get my the ai take control of my mouse this is going to do it for 10 points let's let's throw caution to the wind to give it a hundred is my mouse moving oh wait what what what happened there uh it didn't print out the uh uh didn't print out the predictions well i took out the prick to not predictions because i do i need like a callback for moving the mouse or a mouse delay it probably did it so fast i guess i need that mouse delay uh let's that's speeding it up no okay hold on no it's doing it just like does this work let's just try this for a second weird okay did it do it let's um let's console log let's console.log what we're putting in here well let me check the chat here that's where it was supposed to go i don't think it's working very well this is what i didn't think would work set mouse delay a hundred make sure you're focused on the terminal okay so i need to set mouse delay let's try that robot set mouse delay 100 and let's let's let it train the model a little bit longer and see i don't even know where the mouse is i don't see the mouse does anybody see where it is i can't find it 958 should be like is this where it was let's okay let me put it over here i'm going to put the mouse over here everybody see it over there here's where it is right it's over here between these leaves but clearly this is not working because it's just stuck in one place so this is my problem wait where'd the mouse go it already moved where'd it go this is the end of our today's live stream i'm actually just really curious to try this example with the sine wave this is really but where is it getting oh okay let's i'm just curious to try this um let's just try this um mouse i'm going to create something called mouse.js so this i just want to see this i just want to watch to see if this moving in a sine wave works let's try this example where is the mouse am i just blind okay i'm starting it over there do you see it it's over there i'm gonna keep my i'm keeping my eyes glued to the mouth okay i'm looking straight at it oh wait i'm looking straight at it as soon as i do that it's gone i can't find it interestingly and i'm able to move it myself what am i missing i'm looking in the chat to see if anybody's telling me could be going behind the window it could be going behind the window that's interesting let me see i i should read the documentation a little bit better i mean that's what i should see if you need to build no i'm gonna be in here xcode i mean i have all this huh pull up a blank white screen that's not a bad idea look who has a nice blank white screen why also is it's just stopped do i have my cursor set to hide when i type oh yeah my cursor is set to hide when i type so where is that is that is that a um that's weird where is that setting okay why does my cursor disappear control panel mouse properties pointer options okay i have to go soon people there's a conference happening i got to get set up for that but i just want to see this work um let me make sure nobody's sending me any crucial like emergency messages okay not that i see all right um where was that mouse mouse properties no control panel mouse properties is this not on the mac well this is like from 2013. quickly shakers that doesn't seem like the right stop is it is it a i term setting yeah wait hold on yeah it's only an i term it's an item setting pointer ah click what focus follows mouse that's weird nobody knows huh why i think i spelled disappears wrong use vs code in build terminal wiggle it as soon as i run the script yeah but the whole point is ah wait i think i got it except it's not moving first of all why is it taking so long oh because i have the delay to 100. oh i don't set a break point like it shouldn't let me move the mouse let's all right hold on this must be an os x thing all right i should just go back to processing processing definitely works ah i should have been there so this is like i got sidetracked trying to do this in node all right don't worry everybody it's okay just give me a second here i'm gonna i'm gonna not worry about trying to do this in node anymore um all right so this is this is this is great so i'm gonna go back to um somebody can help me figure that out but let's let me go back to my actual uh what i did where where is this one no no uh predict mouse movements okay so what i did when i was trying this is i just can quickly add a node server i'm just gonna i'm just gonna get all of this from the so i'm going to grab this and go back to here let's take out this mouse move and i am going to um so i'm going to say npm install express so now what i'm doing is i'm creating a little server oh and i made random inputs which um oh that's interesting i did this in a different way eventually i think but sorry i'm just thinking about this um mouse so that's fine i'm going to start with something random then i'm going to call await this is the same thing all right this is and then send those back so this is basically from processing i can just ask for the next two points let's see if this works so now i'm going to go into processing create a new sketch i am going to import the http request not pz cam import the http request for processing and again because i'm kind of out of time here um i am going to really just grab this mouse you know what i'm just going to grab this completely so basically oh but i was doing something more here was i i'm not sure um let me just grab this i don't i don't know what this is doing oh yeah oh because i was working with vectors at this point all right i'm gonna make this much simpler okay so mouse mover so and then import the library i just want to have a little win here before the end okay so i am going to uh the other thing i need is i need to get the content back and console log it okay and print line move to so basically what i'm doing here now is in my server instead of actually calling instead of calling predict here i'm just going to train the model and then whenever processing sends a get request to the server it will run the prediction and send the xy back to processing so let's try this i just think no oh i'm not running the server that would help to run the server not not that we're almost there folks land this plane no what happened uh snapshot is not defined index index.js line 99. oh uh snapshot is like chunks chunks times two right because i need 20 numbers i think that's right okay training the model once the model is trained i love how i really thought i was going to get to like trying to use a recurrent cell once the model is trained i'm going to hit run okay great look at this i got it back i got the xy back beautiful so then now i just need uh will it oh it's already doing it's already doing the splicing so it'll give me the next one so now i can just say uh void draw avoid setup okay right now i'm getting mouse positions again this is going to be very sad because it's obviously clearly not going anywhere of note but uh let's at least get it to work so all i need now is um the robot we are the robots uh import i think it's from java.awt and i need to say a robot robot so i've got the robot and now the only function i really need is called robot mouse move and uh i will say um uh the the values are convert move to splitting up by a comma to floats and then mouse move to values index 0 times 1920 and values index 1 by 1080. what's wrong here uh it needs uh double quotes let's just make sure this actually works and yeah right i don't it's it's keeping it in the center oh so sad let's um yep let's make this look a little bit more interesting uh i should do the sine wave but uh and i'm gonna do something terrible but i can't resist um so instead of using the neural network let me just pick some random values oh that's p5 code just so i can see the mouse actually move and then i will upload this code and maybe somebody can help me develop the model architecture in a way that it actually does something um i should really start i should have also started with actual mouse points that are going in a circle but i have to wrap this up uh let's just give it one epoch okay here we go everybody yay the mouse is moving randomly you can see it have a better idea oh no no i gotta stop so you you get the idea i'm looking at the chat just for a second all right so we have all the pieces working right i have just to just to recap for a second is i'm going to post all this code and i would welcome any contributions i didn't get to actually implementing the recurrent neural network i think there's also there's just like probably a lot of fundamental flaws in exactly the way that i'm doing this in the sense that i don't i just don't even know if it's really reasonable to expect that 10 x y positions could predict the next one i don't know it doesn't sound so crazy to me so i think it's really the model architecture but let's just recap so i have a training data set of xy positions i have node code that and i'm going to take this out we don't need this anymore that loads that data set puts it into tensors it's ready for a neural network then i take it in groups of 10. so 20 values 10 x y pairs with the next position so the x's are all those 20 values and the y's the output of the neural network is just two values the xy prediction i set up maybe i should have tried just like a different activation function who knows but i set up one layer with 30 or i never even bothered to explore like how many hidden layers one output layer i never explore different activation functions i never explore different optimizers different loss functions so all these things are things you could explore then this is no longer relevant um then i'm training the model then after i train the model when it's done there is a node server that can just receive a message like at a particular route and then it's going to well i should put this back call predict on the model and if you know the input that this is a flaw here i just made random numbers for the input data that's probably a big problem so this is something that uh could use so let me actually put some notes in here how to start the input pull from training data here's something else um should i try more or fewer points um is this model architecture reasonable uh try different activation function um so this is something you could explore all these things are things what what optimizer and loss function so that all and and this is all otherwise quite reasonable training it calling predict having processing call predict and then this also is totally i mean there's nothing to this code it's just like hey uh once a second query for a mouse position and move the mouse so i'm going to very very quickly the last act of this live stream oh i forgot to scale it up when i used robot.js was that the problem is i don't know still a mouse was disappearing who knows okay i might have forgotten to scale it up when i was using robot.js ah i think i did oh anyway too late um let me very quickly make a github repo i mean honestly this is mostly what's in that other repo um but let me put it in the coding train and just call this mouse live stream april 30th let's make this public and add a readme um let's oh add a file i definitely need to do a like dot git ignore because um then i want to say dot or node modules i don't want any node modules okay so commit that and then now let me this is like a a crazy way to commit a project but it'll do oh no i don't want this so let me add this up here uh there we go so here's that code and then the processing sketch i guess is unnecessary if um if the robot.js in node worked but let's uh put this in here but now you have all the code i can go to uh the coding train discord shout out to the coding train discord posting the link into the chat while i live stream there there's a channel here called schedule where i will um if things are going well post announcements about when the next live stream will be and then um and then uh links is where i will share things that i'm doing like for example uh there now that repo is there and then also i think probably for reference um you know why don't i share this link as well all right that i know this is like a kind of a rush to um get out of here but um this is the end of today's live stream just peeking at the chat yeah so you know um something that i'm in was interested in trying is um there's something called deep svg so if i could convert all my mouse movements into svg then i could potentially use this to predict the next mouse movement so that i would love to explore the thing that the next step that i wanted to explore that i never got to is um if i go to tensorflow.js and look for api no api tensorflow.js this is what i was recurrent neural network yeah so there's no this in theory is what i really should be using from the start but i didn't don't feel confident enough in my tensorflow.js knowledge that i wanted to try this method first but this is my next step if anybody wants to take this project and experiment with doing it with tf.layers.rnn please be in touch with me i probably should have collected a lot more data there's so much that's missing i would love to solve this i've gotta move on from this mouse conference video and examples but i will would love to circle back to it at some point so please uh any suggestions at shiffman on twitter leave a comment in this video's description as soon as i turn off the live stream comments will be available um and i'll see you next i think i'll be back next friday um i should be back next friday i'm gonna be having a fairly regular at least two or three live streams in may i have such a backlog of tutorial videos to get out oh my goodness at least eight or nine of them and then stay tuned for the actual mouse conference video which will be on the channel early next week i hope that you enjoy it um and that's all i have to say thank you everybody i'm i'm sorry that i'm not sharing i haven't shared community contributions a while i haven't released a coding challenge in a while it's all it's the circle of coding trained life we'll we'll get back to it at some point all right look close let's let's see have i st how many how many tweets of my mouse movements have gone up it's pretty interesting to see these these are all the mouse movements from my live stream today probably should not be doing gotta figure i gotta go into the server and give it a more i guess allow a larger image all right this is it uh i'll see you all oh oh oh oh stop pull the presses hold the presses i'm gonna be back in 35 minutes i forgot uh i completely forgot um guess what upcoming live stream so if you missed yesterday's live stream um neto bomani is during the mouse call we've got the audio of the mouse conference available for you to listen to a lot of panels tonight so even just listening to the audio will be great and you can watch neda live create a zine um in this stream um i'll be there in the chat moderating so you have questions about this this mouse code stuff i'll chat with you during that uh um um and it's just beautiful the work that she's doing is amazing we are also fundraising i meant to mention this for um oh shoot i'm logged just give me a second here let me pull this up oh no no it's in the sorry it's in the description so um here we go uh i just want to mention a shout out um you know thank you to brilliant by the way for being the sponsor oh wrong button um the sponsor i am donating a portion of the sponsorship fee today to uh survived and punished um they are have a uh goal of reaching a hundred thousand i reached their goal amazing well i'm still gonna donate two days left but that's wonderful to see that uh survived and punished uh reached their goal of a mutual aid group uh project of survi um um that exists to end the criminalization of survivors and of domestic and sexual violence a wonderful organization that neda introduced me to um so if you if you're able to donate i highly uh would encourage you to do so so um that is really all i have for today come back for the live stream in about 35 minutes it won't be me coding but i think you'll really enjoy it um and hang out in the chat all right everybody see you then as always i always forget that this stop this stop it stop this stop i'm gonna do this stop this stop i'm gonna do this this stop this stop this stop i'm gonna do this stop i just stopped this goodbye everybody usually i play a few more songs but i gotta run and get set up for the next stream so see you then