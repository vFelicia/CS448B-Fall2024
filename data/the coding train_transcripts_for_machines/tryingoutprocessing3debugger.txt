okay I think I'm here so uh if you're watching I have a new audio thing going on so I have no idea if the audio is good mediocre terrible excellent uh so I don't know if anyone joins and this thing starts did I actually start I think that I started I can see myself over here I have a new a separate screen to watch the chat CH uh there's nobody watching uh so I have to wait to see oh I can see the Audio Level going super high so one thing I might do is bring it down a little bit sensitivity test test test test that might be better I'm going to keep an eye on the chat here uh I can actually listen to my own audio but that's going to so one thing I might do is bring it down hey it's not not terrible okay um there's nobody watching but this will get recorded I am here to look at the processing 3 debugger uh I am going to make a video about all the new features um in processing 3 eventually uh but right now I just want to focus on the debugger so and I actually I'm going to record this video I mean it's this is recording but I'm sort of getting ready and then I'm going to hit record at a certain point and that'll be kind of the archived version um okay I see that somebody one person is watching tell me if the audio sounds okay if you're actually there so let's take a look at what I've got here I'm trying to make a sketch that I think might be a good one to demonstrate the debugger let me uh let's look let me add a y variable me let me uh make this a little shrink this a little bit um have X start at 100 uh maybe I should actually just make this a little bit wider and a little taller uh x = x and let's just have y = y + speed and then I'm going to add oh boy what am I what's going on here CU I have all these I'm going to take out the comments I'm going to have a gravity variable and I'm going to say uh speed equals speed plus gravity so I'm just creating a very and I'm just going to test the bottom if Y is greater than height speed equals speed * 1 and draw The Circle at XY so I just want to create very simple bouncing ball uh because I think this might be a good way to demonstrate the debugger so it's working okay uh um all right so I think let me just sort of like work this out a little bit and then I'll start recording I have a little bit of time how's the audio anybody there listening how's the audio uh okay I did okay so um let me see now okay so the processing debugger this is new look at this this little icon right here will enable the debugger and uh let's let me create the problem first so let me make gravity a little bit more extreme I'll have uh y start at 50 and one of the things oh and X can be in the middle so one of the things that you want to do with a bouncing ball sometimes is have have uh have the ball this circle when it reaches the bottom lose a little bit of speed so if it loses a little bit of speed it'll appear more like an elastic thing that loses some you know speed each time it hits and it'll slowly down b b b so um let's look at this and I'm going to change this to uh 0 uh8 and see what happens oh look see it immediately got stuck and it's like flickering over there yes that's the problem that I wanted to demonstrate so oops I have the chat open uh just one person okay you um so this is what I'm going to do I'm going to start over at a certain point um okay so that's it's stuck so how do we figure out what's going on so one thing that we can do with the debugger is look at variable values so if I enable the debugger first of all you'll see a new pain comes up this is I would say the variable inspector pain so normally what I might do without the debugger and I'm going to disable the debuggers I might say something like print line uh Y and if I run this I can see like okay well there's some stuff going on here that's what's happening with why maybe that's going to help me deduce the problem you know what I think maybe I'm just going to actually start recording this video I'm going to go back I feel like oh no let me keep going through this so that's so let me cuz I need to figure out where I'm going to add a break point so but I don't want to the debugger is going to allow me to have a more sophisticated way of looking at variable values and actually pausing the sketch while it's running looking at some variable values telling it to continue telling it to advance line by line so what I'm going to do here is I'm going to add a break point right here let's see if that works so oh first I have to enable the debugger I have my variable inspector let me see let me stop this uh uh let me make this shrink this close this put the variable inspector down here I just want to see if I can fit everything onto the screen uh run the sketch all right let's make the let's make this variable inspector a little bit smaller and move it down here okay so it's stuck okay all right uh I think I'm a little bit closer now to what I'm tempting to do uh so let's see if I add the break point here then I hit debug it stops there and I can see X is 200 and Y is 51 and hasn't drawn the ellipse yet so what I want to do is do continue and I'm going to have to hit continue a whole lot of times and okay this is going to work when it gets to the bottom you can see it's stuck so what I can do is try step now step step so I think this is going to help me deduce the problem okay um so okay so I'm I'm just sort of working out some things I got an example the thing gets stuck we're going to like fix the problem we're going to look at the debugger so I'm going to close these panes uh oh I'm going to hit stop I'm going to change this back to negative one I'm going to hit run oops I'm going to take out the debugger I'm going to oops I'm going to enable the debugger I'm going to take out this breakpoint stop take out this breakpoint save get rid of the debugger okay and here we go okay I am ready to make this video about the debugger anybody have any questions comments feedback all two of you watching yesterday I had like 15 that was very exciting uh okay so I'm going to practice or I'm just going to make this video now about the debugger and hopefully it's going to go well I'm just coming over here to have some water I've got like 20 minutes I really hope and somebody tell me if the audio is okay uh I'm just going to have to assume it's okay it looks like the levels are reasonable over there they're coming up kind of high maybe I should move it up a little bit sensitivity test test test test test okay I think it's good uh okay okay so now I'm going to start actually recording I mean this is uh YouTube will archive this whole mess but I'm going to actually uh record now and I'm going to I'm going to move this plugged here and I'll be ready to go okay hello uh this is the first in what I hope to be several different kinds of videos about some of the new features in processing 3 I'm working on a kind of overview video that will go through kind of a list of everything new and and and things that have changed in processing 3 but in this video I want to look in particular at the processing 3 debugger which is a brand new feature in processing 3 it's very exciting I have really actually to be honest have never really used a debugger I'm I'm kind of a print line kind of guy which uh will'll talk about what the difference in how you sort of debug so how debugging and all of that is a tremendously large topic and I will U I have some ideas for some resources that maybe I can link in the description of this video too but here I want to just look at how the processing 3 debugger works I'm start this video over because I rambled for too much okay uh here we go again uh it's audio okay somebody somebody you there's a chat here if you're watching tell me if the audio is okay hello my name is Dan schiffman and I am here to talk about the process 3 debugger now there's a lot of things that are new in processing 3 and I'll be making another video at at some point very soon that gives an overview of all the new things but here I just want to look at the debugger so what is a debugger for this is not an unusual thing you're writing some code it's not working properly you can't figure out what's wrong you've got to diagnose that problem there's lots of different strategies in fact a good strategy is just take a break for a while or go talk to somebody else about a different subject and let your mind rest a little bit but if you need to dig into the code itself uh the debugger is a nice tool to help you see what's going on and uh has several different kinds of features that I want to demonstrate now so first let's I have a prepared sketch here I'm going to run it this is a kind of classic bouncing ball sketch there's a single ellipse on the screen it has an X and Y variable it has a speed variable and gravity is changing speed speed is changing the Y location so uh this is working fine but I have this I have this fake pretend idea for this sketch where I'm going to go down and say you know what I would like to happen is when this ball reaches the bottom instead of multiplying speed by Nega 1 I want to lose a bit of speed I want to multiply by 0.95 9798 let's make it8 right now so the the effect that I'm looking for is Bounce Bounce Bounce lose a little bit of Bounce each time and settle down onto the ground like a real elastic ball might do so let's quickly run this sketch we can see the results oop it's immediately stuck at the bottom so why did it get stuck at the bottom okay so I already know the answer went through this a minute ago but this is kind of a classic problem and you might you might already be aware of the answer and what I want to look at is how can the processing debugger help you solve this problem so without the debugger one of the things that you might do is say okay well clearly the Y position is doing something weird uh let me add a print line statement right here and I can see every cycle through draw I can see what the yvalue is and this comes out in the console and we can sort of maybe see what's going on now this might be enough cuz I can kind of see what's going on already we got this number that's 300 and then sort of getting stuck like what's going on here so let's take a look more closely at the debugger that's what I'm here for the debugger so the core feature first of all okay so to enable the debugger there's two ways there's the debug menu here enable debugger you can just click right there another nicer way that I really enjoy is this nice beautiful little insect icon so if you click that icon you'll notice a couple things one the menu changes up here there are four different buttons there used to just be two play Run Stop run stop now there are four I have to go through what those are there is a variable inspector right here another pane that shows you what are the current variables of the sketch X Y speed gravity and what are their current values now it's actually I'm just realized it's showing some historical values of the last time I ran the debugger because I was just testing this before we started if you use the debugger for the first time of the sketch this will be blank until until uh you actually pause the sketch at a breako which is the next sort of thing that I want to talk about so the core feature of the debugger is it's all about setting break points break points are lines are set at lines of code where you want to pause the sketch and investigate what's going on so for example um let's say right here at this line of code I want to pause the sketch right before I do this test is y greater than height so uh what I to set a breakpoint I can there's I can select this toggle breakpoint option I can also I believe rightclick uh or no I can click on the line number yep so I can actually click on the line number and you can see very very closely there that the icon changes from the line number to this kind of uh greater than less than uh sequence so that is setting a breakpoint and of course another way to set a breakpoint is just with the command B shortcut so all those will work so I've now set a breakpoint there when you set a break point and hit run which is no longer run by the way you can see that this is this button is now debug if I hit debug the sketch goes and it pauses right there at the break point the sketch is actually stopped and I can see what are the current values of the variables and this makes sense X is 200 Y is 51 speed is 1.3 and gravity is.3 this makes a lot of sense because this is the first time through draw uh so y has gone up by one 50 + 1 speed has gone up by 3 1 plus. 3 so these variable values make sense I can also go into this folder here this folder is going to show me all the builtin variables of processing whereas the mouse previous mouse key key code frame rate so you can see there's a lot of things here that you can look at and just through this interface which is often easier than just printing out like gobble deg all in the console here okay so now that we've looked at what it means to be able to inspect those variable values what are what are what what can I do next the code is paused right here at this break point so there are a couple options and you can see these options here there uh two the two core options and I'll talk about some of the other ones are step and continue step and continue what continue will do will keep running the code all the way until the next breakpoint what step will do is we'll just Advance line by line through the code so you can walk through the code line by line and watch in the variable inspector how those variables change which which can help you diagnose what a problem is so what I'm going to do first however because the problem hasn't really occurred yet is I'm just going to hit continue I'm going to hit continue a whole bunch of times it's pausing every time through draw and you can see I'm getting close to the bottom and once I get to the bottom here as I hit continue you can see it's kind of stuck so what's going on let's look at this variable let's look at the inspector more closely 303 uh and speed is .9 so oops I I need to hit continue sorry which is over here uh then said 304 303 304 so I can see that it's actually above 300 why is it above 300 it went off the screen greater than height it turned around but it never made it back less than 300 so then speed inverts again right that speed look at that speed variable as I hit continue I I probably should have figured out a way to make this let me move this up here so I can zoom in here look at that speed variable it's going back from negative to positive negative to positive getting small smaller and smaller and Y is still greater than 300 so what's the problem it's stuck off the window so this is my slightly awkward way of trying to diagnose this problem using the debugger I can now see that the solution is if I just re nudge it back up to height before I reverse its speed it won't get stuck uh and I can off the screen I can remove the debugger I can run it again and I'm done there's no more more problems okay so um let's look at some of the other features while we're here I'm going to reenable the debugger uh we we saw that when I hit debug it runs and pauses when I hit continue it's just advancing until the next breakpoint which happens to be just this one singular breakpoint so if I were to add two breakpoints let's add another one and I hit stop and I'm going to debug again we're at the first break point continue goes to the next break point so you can see I'm jumping back and forth between these two break points now if I want instead of continue going to the next breakpoint I can use the step function what the step function will do is watch this go to the next line of the code go to the next line of code go to the next line of code go to the next line of code so this is actually advancing line by line by line which can be incredibly useful to look at and watch what the variables are doing and keep the sketch paused and then at some other point you can just hit continue again to go back to let it run run again so um there are if so this these are the core features of the debugger um the if you look in the debug menu you'll see that in addition to continue and step there's step into and step out now these are much more rarely needed but they are there and they do provide a certain kind of purpose one thing you'll notice here is that I'm kind of just looking at everything inside of the draw function it's just a linear list of code there's no objects there's no classes I'm not calling other functions so one thing that the this step function does is the step function just steps line by line through the current scope the current function that you're at so if I were to write a function like void um you know print I'm just going to say void like uh crazy thing and in this function I'm just going to say print line hi right if I put if I call that function here and I stop and re hit debug again and then I do step step step step see how I stepped right past that crazy thing I didn't start stepping through the lines of code that are in this function so if I want to go into that function and continue to step and I'm going to hit continue uh I think I can do this step step and then now I want to do step into which you can see now we're where's the debugger it's into this function if I want to go back to that calling area debug and step out so now I'm back up here so it's a little bit tricky once you have function calls to other functions whether you want to step over them step into them or step out of them so step by default will always just step through the current function scope and step into will go into the function that you're calling but it has to be a function that you wrote right if the function is ellipse you can't step into that function because that's part of the processing core Library it's not in your code to step into um so I I'm sure I've left some things out hopefully this is a basic introduction it's about 10 minutes long uh let's see let's give this and put this video out there and give it a try and I can always rerecord it with a better example or some other uh answer some questions or or or make a like followup video to this if I need to okay thanks very much and en uh enjoy processing three oh here's where I stopped the video goodbye okay was there anybody watching hi uh for those of you who are watching was the how was the audio was that okay oh did the stream stop oh no this computer just went offline okay uh shoot uh ah WiFi is terrible here um so I'm going to pull up here sorry everybody I don't know if anyone's still there watch the stream if I go to YouTube uh hold on YouTube live dashboard maybe this will uh get me to where I'm going uh this stream is offline uh oops no it's there oh hold on uh how do I get o events uh live control room uh VI one watch page okay uh hi okay oh good the sound was good good everybody so I think that um did anyone have any questions about the debugger that kind of concludes my discussion of it I I just did it in one try I'm sure it could have been better um thanks for commenting uh and um yes so I'm going to turn this off unless anybody has any last questions or comments I'm kind of keeping an eye on the chat all four of you you can see your chat messages there oh sure go ahead ask the question doesn't have to be about the debugger that's what this is for I'm I'm happy to hang out here for another half an hour and answer questions about processing I need to get uh this machine back on the internet while I wait for the question uh why is uh Network it's terrible how the W NYU WiFi doesn't work um I had a whole plan for this second screen where I could have the chat on the second screen not on this screen which is the screen you're seeing but um NYU WiFi just keeps cutting out so I think I need both of these machines that gets plugged into the ethernet network uh yeah thanks it's a little bit insane okay frame rate so uh the question is asked uh frame rate how does it affect drawing and changing of variable numbers that is the one thing that has never been fully clear to me okay so let's take a look at this question uh and then I'll come back and uh so this is a great question I'm going to turn the debugger off and I'm going to run this code again this is now working it's this bouncing ball so let's say you're looking at this and you feel like okay it's it's going too fast that it's bouncing up and down it's uh this is no good um I want it you want it to run slower so you you might think okay well I can control the frame rate that'll that'll make it run slower and by the way I just want to uh change this to like 0.95 let's run it again so we can see it's nice fluid seamless animation you want it to run slower you could say okay if I'm going to change the frame rate to uh 10 and by the way we don't need this print line anymore uh so changing the frame rate from it's the default process in by default attempts to run at 60 frames per second uh changing the frame rate you can see okay it's moving slower but there's a couple of issues number one is you can see I don't know how much you can see this on this video recording but there's a bit of a staccato to it it's sort of stepping through and the sort of fluidness of the animation is lost so that's problem number one problem number two is what if you had two of these and you want one to be moving more slowly and one to be moving more quickly um so affecting the global frame rate is generally never a particularly great idea and what you want to do is let processing try to let processing run as fast as it can at 60 frames per second and control the speed of things through math so in this case an easy way I could control the the you know the speed is starting at one but what's really affecting how fast the thing is moving is this gravity variable that's accumulating in speed so uh so if I wanted it to kind of go more slowly one thing I could do is change this from 3 to 0.1 for example and you can see now there's a slightly slower bounce to it and if I had another one I could have different variables and there's a lot more to this I could you know have a dampening effect and add other variables but this is the basic essential idea I don't know if I answered the question let me this is why I need the chat up uh so um you can let me know if I answered that question or ask any other questions I'm going to try to get this computer also back oh I think I'm back on the internet oh yeah I am on the internet I think ah ridiculous goes on it goes off uh I I should just log into when I do this I should log into the NY you guess never you did thank you yeah there's a delay for 30 seconds this is something I would like to really work out um I wish that wasn't the case uh any last questions before I shut this off for the day I'm going to try I'm I'm enjoying doing these live streams and there's very few people tuning in but I don't that's just F them but uh spread the word or uh or connect to me on like I guess Twitter or whatever um maybe there are certain times of day we can get people on just asking questions uh yes and I'm going to be doing more videos on both processing and p5js and they're all be here I put them on Vimeo and YouTube which I sort of like a weird thing to do but um I put ads here on YouTube to see if that generates anything but it doesn't really it's very little so you can watch them on Vimeo without the ads if you before okay I'm going to wait the 30 seconds now to see if there any last questions so I will come back and do more of these and I'm going to post the video the sort of edited it's not edited but it's just sort of a section of this which is actually about the debugger okay uh oh wait where do I hit stop so to hit stop I go to the live control room and I'm going to click this button stop streaming goodbye and uh yeah I think you'd still leave comments on this video it'll be there yes I do