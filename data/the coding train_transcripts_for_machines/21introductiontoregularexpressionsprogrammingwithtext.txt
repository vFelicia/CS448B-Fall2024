hello welcome to another programming from A to Z set of videos and this is the first video in a series of videos all about regular Expressions um Regular Expressions actually I mean I don't know if you should be like me but they are something that I just absolutely adore um they are just fun little puzzle strange things that you can do to just expand your mind and you'll find so many if you look around and look for regular expression games you'll probably find tons of games people are making on the internet where you try to like solve things with regular expressions and I encourage you to make your own but I don't want to go off too long about that what I want to do in this video is simply talk to you about what a regular expression is and in fact what's interesting about this topic is this topic really stands alone regular Expressions have nothing to do with JavaScript well not they have nothing to do but they they aren't inherently something that only has to do with JavaScript or python or Pearl or Java or C++ or even programming whatsoever and in fact a lot of what I'm going to show you today uh is how to use regular Expressions just as a tool for yourself in a text editor for writing or find and replace and that sort of thing um and you can see so here's the the downside of regular Expressions the downside of regular Expressions is that's what they look like so they're possibly one of the most cryptic strange looking things that you could ever possibly create with strings of characters and this is in fact a regular expression that is searching for phone numbers and you can see here that magical regular expression has found these three phone numbers in this particular piece of text which leads me to the discussion of what a regular expression actually is I don't know why I'm coming over here but I am okay um a regular expression is a sequence of characters that defines a search pattern in a search pattern for text so it actually comes you know if you look at the history of why these regular expression things exist read about this on Wikipedia you'll find that it comes from the mathematical concept of regular sets sort of an interesting side note but here really what what I want to show you how to use them is how to define a search pattern in a body of text so let's let's talk about what this means exactly uh hello this is coding rainbow right here is text okay now I want to define a search pattern to search inside this text here is a regular expression often referred to as reex for short regular expression this is a valid regular expression it is a pattern the pattern is as follows capital R followed by lowercase a followed by lowercase I followed by lowercase n followed by lower case b followed by lowercase o followed by lowercase w and you might think it absurd that I went through that whole thing but this is exactly how you need to think of regular Expressions you need to look at that sequence of characters and translate what each character means and in this case each one of these characters is what's known as a literal character meaning the pattern is the pattern that I'm searching for is literally the character capital r followed by literally the lowercase a so you could imagine what would happen if I go over to um uh I I'm not going to go over there if I go over to text editor I hit command F I'm searching in the text I type in Rainbow it'll highlight for me every time rainbow appears now this is unto itself not super powerful yet when you add the addition of this idea of something called a meta character a meta character meaning a character that does not indicate a single literal character but a character that indicates some type of more generalized pattern for example I could say I want to match the capital letter r followed by any possible vowel followed by the any possible vowel followed by any possible consonant followed by any possible uppercase character followed by any digit followed by any Whit space you can imagine how you can start to create more and more generic patterns that would multip that would match different kinds of text so let's think about this a little bit more I'm going to come back over here for a second and point out let's think about the phone number example I think it's a useful example to start with imagine you had a huge text you you got access to this massive text and you want to publish it but it has lots of private phone numbers in it and so what you ultimately want to do is redact the phone numbers so you need a way of searching throughout the text for every phone number but you can't say literally I want to search for n the actual numbers you have to say I want to search for something like I want to search for three numbers followed by either a dash or a DOT followed by three numbers followed by either a dash or a DOT followed by four numbers oh and it's possible the first three numbers could have parentheses around them and this by the way is exactly what this particular regular expression is doing so let's go back and unpack this a little bit more and let me show you what what some what some meta characters are so I want to keep a running list of meta characters um and I think I'm just kind of in this video I'm just sort of introducing the topic and I'm going to talk about this uh uh phone number example and in the next video I'm going to kind of start to go through the pieces of regular Expressions a little more one by one so I might jump around a little bit here then I'm going to go through them one by one I think that's going to work okay um so let's think about the phone number example so um my the text that I'm looking in has this in it 917 555 1 2 3 4 and 646 1867 5309 okay so how do I I want to create now a pattern that will match these so what could I say and let's make a list of meta characters over here the first thing I want to match is any digit so guess what back back SL d means any digit 0 through 9 back SL D followed by back SL D followed by backd followed by what now in this case it's always followed by a dash so Dash let's erase this so this is meta character meta character meta character literal character back SLT back SLT back SLT uh Das back SL D back SL D back SL D backd so this means search for any text that matches three digits followed by a dash followed by three digits followed by a dash followed by four digits so now what I want to do is actually show you this running in the wild so one of the things you can do in most text editors so for example the atom text editor the Sublime Text Editor a lot of things tools that you might use have when you do the command f for find there's often a little button there that allows you to search by regular expression so let's look at that so I'm going to come back over here and I'm GNA delete this we'll make this happen later I'm gonna do this so pretend I'm like this pretend I'm like this I am like this uh pretend that that other stuff didn't exist a moment ago and now what I'm going to do is do command F so normally I might do something like this okay type in phone and you can see it highlighted phone for me and I realized this text down here is very very small I'm going to try to zoom into it when I remember but it's it's um Adam doesn't I can't seem to figure out a way to make that text bigger um so I could also search for 91755 five and you can see I'm searching literally for this particular phone number now what I said is I could do SL DDD now look at this notice this just looks like this is actually looking for literally SL DDD in order to enable regular Expressions I need to go all the way over here see this button and it says use Rex so that button enables regular expressions in the search and incidentally why is it dot star so two more meta characters dot means any character I've got the wrong whiteboard marker again and star is what's known as a quantifier and again I'm going to go through this stuff in sequence meaning zero or more so this Dot star which you've probably seen like oh I want to look for all of my files called rainbow dostar that means it could be rainbow cat.png or Rainbo happiness. jpg or rainbow essay. dooc right any file right rainbow dostar this is often referred to as a wild card and it is in fact it comes from regular Expressions this is a regular expression it means I want to match rainbow followed by any number of any characters Wild Card anything zero or more anything this matches absolutely everything in the known universe this regular expression matches the Universe um okay so that's where that comes from back over to here we can see here dot star so now I'm using regular Expressions as soon as I do that and I come back over here can I come back over here oops oh I have to enable it you can see this is now highlighted so regular the uh syntax highlighting will happen for you and you could see that it has now matched all of these groups of three characters now notice how it's still matching let's say I only want to match groupings of three numbers notice how it's um matching 53 0 with the nine afterward so what could I do here I could say oh well I only want to match three numbers followed by a dash so you can see here now I'm matching only three numbers followed by a dash I could say a dash or or followed by anything okay well that's not really right so I'm going to have to over the course of the next few videos I'm going to show you all of the pieces of things that are part of a regular expression and create a bunch of different scenarios and examples to show you a bunch of examples of regular expressions and by the end you should have a sense of how they work then I'm going to show you how to use these regular expressions in code in JavaScript specifically and do a couple coding challenges around text manipulation with those regular Expressions okay so hope this gave you the basic idea and how to use them in atom and I'll be seeing you in future regular expression videos maybe okay thanks for watching