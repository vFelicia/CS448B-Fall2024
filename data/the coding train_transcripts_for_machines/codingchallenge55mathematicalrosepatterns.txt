hello welcome to another Cody train top coding challenge and in this challenge oh this train is really loud too please pull out of the station out on the train our slogan because one thing that I really like are flowers and there's the wonderful mathematical algorithms that you can get to make these beautiful rose like patterns and you can see even here all sorts of different possibilities so I've been really interested in tiling and symmetry and I'm hoping to do many more videos about different topics like that and this is kind of along those lines so this is actually something that I could do with just this incredibly simple formula where R equals cosine of K times theta so what does that's what Camila be we're going to have to figure that out first so out wrong button over here for a second so here's the thing this was same except I'm gonna code which I have not done before hopefully it's going to work it's built entirely around this idea of polar coordinates so if I have a Cartesian space meaning a plane a flat plane like this white board not playing today's flag in the air a plane like this white board and I have a point in the plane you know this is the same as I might have a point in a in a canvas in all my videos in computer graphics in the programming we usually think of this point as an XY location but actually right this is its X location and this is its Y location but another way and this is known as a Cartesian coordinate name for the French mathematician or guy named a cup okay now how did I do French borders now I just sounded like a completely ridiculous person now you could also think of this point as a distance from the center known as our radius or distance from the center and an angle relative to the x axis this R comma theta is known as a polar coordinate so here's the thing remember you know those functions sine and cosine so cos Toa sine is opposite over hypotenuse cosine is adjacent over hypotenuse tangent is opposite over adjacent here's our triangle here's this angle so sine of the angle equals opposite or Y divided by hypotenuse or our cosine of the angle equals sorry X divided a day since which is x over hypotenuse which is our I could write these in another way and say y equals R times sine of theta and x equals R times cosine of theta in other words cameras over here but you can still see me in other words I can think my mind can face in terms of polar coordinates I can calculate ours and coz lates Thetas and do all sorts of stuff and yet I can draw something t5 or processing whichever experiment that I would use only except only except in the ellipse function and the point function the vertex function Cartesian coordinates so this is a way of neat converting from polar which are going to think it to Cartesian so let's come back and that's actually what I want to do here is this ideas use this formula as a way of calculating a radius based on an angle the radius how far from the center is going to be cosine times K some constant and then this formula here is if this is our x equals R times cosine of theta y equals R times sine of theta so we should be able to do this relatively quickly I kind of wish that I was doing this in processing for some reason but I'm doing in the p5 up I'll make a processing version and post a link to that code in the description as well okay so let's just say for the sake of argument that I'm going to write a loop because I think this is probably easiest way to do it for the moment and I'm going to write a loop where I can't write 2 pi where I have a variable called a which starts at 0 goes all the way up to 2 pi and I don't know I'm going to increment by some arbitrary amount I could be more thoughtful about how I do this and so now just to see that this works I'm going to say a bar x equals let's make let's make up an R Bar R equals 100 bar x equals R times cosine that angle far y equals R times sine of that angle and now let's just draw a point stroke 255 what that console dot log come from a stroke wait for and then a point X comma Y now here's the thing this is all predicated on the notion of having these points around the point of origin but the point of origin by default on a canvas is the top left so actually before I do any of this I want to use translate to put that origin in the center the top of this marker went down over here I'm back okay so now what I want to do is add translate to the center which is with divided by 2 height divided by 2 and then let's see what we got there we go so you can see it looks I got a circle so something's working correctly here and you can see here if I say go up by point one we can see you know I'm drawing all these little points this is just a simple demonstration of polar to Cartesian transformation but now let's go back and let's say let's go back to that Wikipedia page and let's try K equals 7 let's try K equals 7 so R equals cosine of K times theta or the angle that is my variables X R equals cosine of 7 times a now let's try this hey what happened there so I wonder if I need to really expand things out or just need to quit there we go so I just need to expand things that enough what I might want to do now is have a bit more gradation and so I could start to see this pattern forming and what I can actually do that would make more sense now is for me to say begin shape and shape forget about the stroke wait I'll just make the stroke weight one and set these as vertices so what this does instead of drawing that dot at every spot I'm saying begin to shape and the shape and connect everything and then maybe at the Animus they close and we can see there we go look at my beautiful Rose cider so in a way we're done that was like the quickest coating challenge with no editing whatsoever that never happened but let's make this worse I should just quit behind the head it's like that was like eight minutes or something less than that even let's let's see what we can do so let's just try some of these other let's try some of these other let's try k equals four and I should probably make this let's make this a kind of global variable for right now I'll just put it here in draw kick actually what I really should do is make that something that I adjust with a slider no my goodness that's crazy so let me take K equals four and change this to K look in the wrong place we think there we go with K equals four okay let's try some of these patterns so for example I like this one which is like five with k with k equal so you could see this K equals n divided by D this is a table 5/6 or 5/8 let's try one of those so let me come back into the code and add a variable called K and actually just put K down here and then what I can do is so this should be the same for one thing I want to do is get rid of the fill just so I can see it like this and then what I want to do is change this to what I say it was 5/8 okay so this I think is right and I have a problem with this and I think the issue is that I need to now go around the loop multiple times so I wonder if there's a way to calculate that exactly but I'm just going to multiply this by 10 and we can see there we go so if I go around the loop mobile times we get this beautiful nice tiling pattern maybe way too many times I'm not sure what this extra line is doing here it's like connecting back to the center so I'm sure I could clean this up in some ways but I think what would be interesting to see right now very quickly is if I add the Dom library and if I say var slider slide our equals create slider and let's give a range between 1 and 10 starting with 4 and incrementer a 2.1 what I should see is now I can say K equals slider value now let's give this a try so now as I change the slider we can sort of see different possible shapes and possibilities as I move it around so anyway so I don't know probably a precise way you could calculate you could calculate how many loops you need alka in the chat suggests actually like looking at this that you need depending on what this D value is the denominator of this practice how many times you need to go around the loop which makes a lot of sense actually because you know how you're multiplying by PI you'll need to hit all the sort of angles to get all the positions but anyway so we could sort of test that I'm going to take the slider outfits for a second and say multiply by the denominator value and we can see yeah there we go now that's perfect so if that's definitely right that you need D loops and so we could change this to B so this is exciting because what we could do actually have two sliders we could say D the denominator is 8 the numerator is 5 and I could say slider D slider n slider D equals some value between 0 1 and 10 starting at 5 and slide our end some value between 1 and 10 starting at 5 and then I could say here D equals slider DS value and equal slider and net value oops and I could say K equals D no numerator divided by denominator and then I could keep D right here and K is here I don't and I think now you would have yeah you can see here the different types of patterns I'm getting which I think are correct and probably match now it would be nice for me to report it would be nice for me to actually report what those values are and then double check them but I think this is rose mathematics pedal stuff so how can you how can you Betty you know play with this create a whole bunch of them that have it more from one to the other fill it with colors pile them all the next in a pattern I'm sure I'm sure there are a lot of possibilities yes I should probably make the step size smaller which would also give me maybe a more fluid outcome the chat is giving you lots of great suggestions give me a more fluid view of this and we can see oh look at this we're going to get some weird funny business here for strange decimal numbers but you can sort of see one and I have to clean up this thing where ends doesn't end it back at the beginning so anyway so there are a lot of wonderful possibilities here I hope you enjoyed this rose mathematics challenge if you make some stuck with it share it with me and I would love to see the world filled with flowers that's what I my dream is all these computational flowers so make some gifts make some images tweet them show them the at shipment and I'll see you off and the next train is leaving the station