hello welcome to another video about regular Expressions um okay so in this video what I want to do is talk about a whole bunch of specific meta characters that you can use in a regular expression now I should note that there are what's commonly referred to as different flavors of regular Expressions so depending on the context that you're using the regular expression like the atom editor or I'm using a reg expression in my JavaScript program or in my Python program there will be subtle differences in how The Meta charact in what the meta characters are so I'm I'm kind of using I'm using for lack of a better uh I'm using the meta characters that work in JavaScript um I'm using the JavaScript flavor I think it might taste a little like blueberries um uh um uh in uh for the these regular expression videos so what I want to do is U just sort of talk through more in order in sequence um what some meta characters are so just to remind you we have this idea of literal characters like I want to match literally the character a and we have this idea of meta characters I want to match a a a any character of this kind so to speak so um I'm going to in this particular video there's more than just this and I'm not obviously not going to get to everything completely I want to look at um Single Character meta characters something called a quantifier and something called a position and I've just realized I can't remember which is which so I'm going I'm going to say what some of these are and then I'm going to quickly check the chat that's going on because it's being recorded live even though you might not be watching it live and I'll see if I got it right but I might get these wrong I might get a lot of stuff wrong but anyway and I obviously won't list every single meta character but I will provide you in the in the video description with links to where you can find more stuff out about of this so we saw by the way that slash D is a meta character that indicates any digit any value any character 0 through n okay slash back SL D and so one thing you'll notice is some meta characters are indicated because just D is a literal character so just D is a literal character backs slash is uh indicating that I want the meta character D for digit here's another one that's really useful back slw lowercase w that's very important is any character capital A through Z lowercase A through Z and 0 through 9 the W stands for word so in essence this is any character that you might find as part of a word any letter or number back SLS any white space What could this match this could match a space a tab a space or a tab probably some other things too anything that's white space I'm not including line break here even though it can match a line break but whether or not a regular expression will match across different lines is a bit bit of a strange thing so yeah um and and involves a a flag a setting that you have to set and how you use a regular expression I'll get to that later when I talk about Flags um what are some other ones uh another meta character that's very key is and I talked about this in the previous video is dot this matches any character whatsoever any character whatsoever I don't know if that is in the technical description of regular Expressions the word whatsoever but I I just want to emphasize it so this is kind of a strange one to use and you've got to be very careful because it's there's this concept that I'll get you later of this greedy regular expression that just it can't so whoa hey I just got like three three pointer of there landed in this little box um it just can't stop eating and matching and matching dot dot dot match everything so okay um all right now an interesting thing about these particular characters SL dw/ s is these are lowercase and if you are and I I guess I'm going to kind of like take up if you if you use SL capital W or slash capital S this means anything that's not a word character anything that's not one of these characters or anything that's not white space and this can be very useful I want to match any nonwhite space character so um that's one thing I think I'll mention and I I don't I would assume actually I don't know that this I have to check this if you do back capital D is that anything that's not a digit I would think so so that's so these are um um these are I think some key single characters for you to look at let's let's actually go and um come over here and like type some of these in and see what happens um okay so I'm going to type in slw and uh you can see that matches everything what if I just look for uh three any sequence of three characters in a row and you can see sort of strange thing that's going on here because it matched the th H it doesn't match the hes because H is already part of this match if you want to match both of those you're going to have to do some other kind of acrobatics to do that but you'll notice how how that sort of works it matches the S so but not the OM but I could add a fourth one and we could see hey here are all um um here are any sequence of four word characters in a row uh here is a digit followed by a word character followed by a digit followed by a word character and by the way that matches these but it would also match if I put this in here or if I put this in here you can see how we can use these Single Character meta characters to make generic matches now there isn't a ton that we can do just by knowing these but I would like to just see how the white space works very briefly uh here is me matching all Whit space you can see I've matched all Whit space or this is matching only two white space in a row and you can see oh no I I think I put two spaces after my period I can't do it oh I fell sound effect horrible failure there okay I'm gonna uh so now by the way I found anywhere in my this is this is how you by the way can get rid of all of your two spaces after a period which I believe I really should be putting one space after a period according to something I saw on the internet at at one time anyway okay so let's come back over here and you can see that um something that I've been doing a lot is I've been saying I want to match three word characters in a row or three digit characters in a row so this by the way is where quantifiers come in so quantifiers are a meta characters that modify the previous character in the regular expression and say how many of those things you want to match in a row we saw that asterisk or star is zero or more uh plus is one or more so at least one uh question mark is zero or one so is like optional and then you can also use curly brackets with minimum comma maximum or just a single number n so these are at least in my head I might be missing one these are the basic quantifiers so we can match single characters and we can quantify those single characters how many in a row to match so let's go back over here and come back to this and I can say for example I want to find all five letter words see this regular expression I want to find all five letter words in my text and you can see there we go now this didn't really work why because it matched this because it's just matching five word characters in a row so how could I say five letter words well one way I could do it is all five letter word all sequen of of of five characters follow followed by wh space now you can see ah I got this because it's followed by wh space which is at the end that's no good so I could also say it has to be white space followed by five letters followed by white space Oh but these doesn't have white space on the beginning so then I'm I'm leading to something that I'm going to show you um there's there's some there's there's a really nice way you can look for uh uh words of certain length or words that match certain properties but I can see here how I can this is a way of matching whoops one or more word characters in a row um we can see how I could say uh a word character followed by one or more digits uh which again you can see what that matches um so these are ways that you can quantify and let's let's um let me show you uh let's let's let's say I want to match the word color so um uh the colors of the rainbow have many colors and the rainbow does not have a single color so uh so look this is now I want to match anytime the word color spelled c o l o Ur or colors or anytime the word color or colors appears color singular or plural a spelled o or spelled ouu let's look at how I would do that so if my expression is just color you can see what I match so I could say color with an optional U right like that and with an optional s so look at this this regular expression is match C literally C followed by zero followed by L followed by not zero I couldn't I could have it be also or zero C followed by o followed by L followed by o followed by U optionally followed by R followed by S optionally Okay so you can see here how these quantifiers can be quite useful okay let me come back over here so these are where's my where's my whiteboard marker here it is so these are quantifiers these are ways of indicating how many of a single um character you want to use now position is another kind of meta character which matches um the position of a character in the string itself so for example there is uh carrot which means the beginning of a line I think and dollar sign which means the end and um also um I'm going to put these in position uh meta characters uh SLB which is known as a word boundary so these are position meta characters which can also be incredibly useful let's look at um some scenarios where these can be useful oop I rang the bell okay um so let me come back over here and I'm going to type some text for you um this is a sequence of words color um Hello Goodbye go so what I want to match um right uh so what I want to do is match all the words that are at the beginning of a line so for example if I do slw plus you can see how I'm matching all the words here this is something is about a blah sequence of words hello and goodbye what if however I say hat now you can see I'm saying that hat is a position let me let me show you that again hat carrot something like that that is a position uh a a meta character meaning the beginning of a line followed by one or more word characters so look what I've been able to match now now what I could do is also put end of a line now I didn't get anything what if I take out the carrot you can see I'm getting all the words that are at the end of the line notice how I don't get rainbow because of the punctuation mark so I'd have to do something about that if I wanted to match that but what if I wanted to match only single words lines that have one word so now I could say match carrot followed by any sequence of word characters followed by end end of line so you can see now that regular expression matches only words and single because that they're the only lines that start and end with a sequence of word characters so you can see how those position meta characters could be particularly useful depending on what you're doing now another is word bound and remember this problem I was having where okay well this matches all of the um um but what if I want to match sorry what if I want to match only all fourletter words so you can see this isn't exactly working because I'm getting nuu MB numbers is actually a sevenletter word but these are four word characters in a row so something I can do is I can say SLB a word boundary followed by four word characters followed by SLB and so now you can see this is now look what it's getting sum is a fourletter word call is a fourletter word now look at these a period is also in between now now I'm saying this is a position meta character because it's not matching the thing after it it's matching this weird space the space in between the whoa the space the space in between the T in the period it's a position the boundary between a word and so um this is something that different implementations will do slightly differently depending on what environment or context you're in but it really means you know arguably the space in between a a word and it where it ends so you can see if I change this to um let's see anything between four comma 6 now I've matched all words between the uh between four and six characters so hopefully this runs you through um this runs you through uh the basics of what kinds of Single Character meta characters I can match a digit any letter or number I can match any white space I can match any character you might be asking yourself what if I want to match only letters so we need something called a character class for that which I'm going to show you in a different video uh quantifiers which which modify how many of these in a row and position like the beginning of a line the end of a line or the space between a character and another character at the beginning or end of a word uh and so if I'm continuing with this thread let's see now if we can match phone numbers I want to match slash d three digits followed by a dash followed by three digits followed by a dash followed by four digits uh whoops so I'm starting now this is now my regular expression on the way to matching all phone numbers and you can see what only matched that one why did it only match that one because I'm saying it has to be a dash how would I say a dash or a period and we need another concept called character classes for that which I also just mentioned which I'll cover in the next uh video okay thanks for uh tuning in and hopefully this is helping you get a sense of regular expressions and I'll see you maybe in the next video