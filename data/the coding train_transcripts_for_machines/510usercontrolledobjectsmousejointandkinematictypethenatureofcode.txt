hi a mouse joint a mouse joint in box2d yeah a mouse joint this video we're gonna talk about a mouse joint now I said Mouse joint like five times because really I have an essential question what what's the missing piece what is a missing piece of the puzzle with box2d how do we interact with objects in the box2d world what if we want to click our mouse on that object and move it around how do we do that so if you just kind of found yourself wandering through the internet one day and you were wading through the box2d documentation you would figure out that you can actually say something like this body dot set transform and it has some arguments to location in an angle so you can always manually set hey I want this body to be over here and I want it to be at this angle and if you had the mouse location you could say set at the mouse location set at the mask location set at the mass location we do those all the time in processing we say rect Mouse X comma Mouse Y but let's think for a moment what that might mean in terms of a world of physics what if I could say to this eraser I don't know why I'm talking to an eraser but what if I could say to this eraser set your location over here instantly it's essentially teleportation we'll be right over here instantly now of course I had to move it continuously over here because this is the real world a continuous time and space continuum place we need to we need to live up to those realworld principles in box2d we cannot just the physics will break and we start to teleport things around the screen however there is something we are allowed to do in box D we could say hey you know I'd like to do to get this from here over there I'm gonna tie a little string to it and I'm gonna tug it along and move it so we can tie strings to our box to the objects and move them around and that's what we're gonna do with the mouse joint the mouse joint is essentially a distance joint between a body here is a body remember a distance joint is between two bodies but instead we're going to make that distance joint a joint between the body and the mouse and as the mouse moves around the body gets tugged around it sounds a little strange but it will make sense to you but here's something kind of revolutionary it's not revolutionary but here's something that's really important in our thinking about this yes we're calling it a mouse joint yes we're demonstrating it with the mouse but you should realize that the mouse is just an X and a Y so if you have some algorithm some systems some set of rules by which you're setting XY locations you can move things around the box2d world according to that algorithm and I would say you know we get to the end of this video and exercise would be don't use the mouse use like a purlin noise random walk to tug something around the screen and see how that works okay so let's now that we've kind of covered why we want the mouse joint and how it works and and there's a by the way there's another solution to moving things around manually in box view which will which I'll mention at the end of this video the mouse joint isn't the only way I want to go over how do we how we write the code and again we've got to follow these steps first step is have two bodies ready to go okay wait just erase that diagram that I want body connected to the mouse well here's one body where's our second body there's no body here we're saying the mouse as a body there's a new concept we're going to introduce here called the ground body that's weird it's a 2d world is there a ground but you know you can kind of think of it as basically what we're doing is we're if the wall is the screen and that is the body we're sort of attaching it over here and this ground body is going to get a target and the target is the thing that's going to move around so as the moon Mouse moves around we set a new target on the ground and this body actually gets pulled along with that mouse joint hi okay so have two bodies ready to go so now that we've established that we have body 1 the ground body everything else is essentially the same as a distance joint we're gonna call it a mouse joint definition probably if I we're gonna look in the code to see the exact syntax or to configure all the parameters what is the maximum force what is the damping ratio the frequency Hertz the same kinds of bring like parameters we had in the distance joint we're gonna do and then create the joint but here is something a little bit different that we're gonna see in this example so now that we've established this set of steps and we kind of understand what the mouse joint is what is something that's a little bit different another thing in my way what is something that's a little bit different in this example in our main program when we press the mouse we want to create the joint so you're gonna see void mousepressed here is where we're gonna create the joint and then in void Mouse released void Mouse release and I hope this is visible we're going to destroy the joint so this is kind of interesting about this program instead of having this kind of permanent joint that's always there we didn't have to do this was distance joints we just chose to do it that way in our example we're gonna do things as soon as we click the mouse boom that joints gonna exist and we move it around we let go of the mouse boom that joint is gone this is gonna allow us to do things like click the mouse drag release and toss something across the screen as well so there's a lot of possibilities here but if we look at the code that's very important to understand how it's working with these events create the joint destroy the joint in draw write draw with an underline but it's in void draw we're always going to be setting the target so as we move that mouse around we're setting that new target so it gets tugged of course we only want to set the target if the mouse is pressed because that's when the mouse has been created but that we're gonna have a logic we're gonna have a spring class the spring class is going to manage the mouse joint definition will have functions to create the joint destroy the joint and set the target so we're gonna have a box class that's the thing that's moving around we're gonna have a spring class to manage that mouse joint and that spring is going to sometimes exist and sometimes not exist it's going to be just made and destroyed on the fly so I think I've kind of talked through how this example works let's actually go and look at the code and run the example to be very exciting press this button and here I am okay so first let's just run this example and we can see look we have this box object said it's in a box of the world and it's sort of responding to gravity and it's falling now when I click the mouse on it you can see I'm a label tugging I'm tugging it around and you can see actually as I move the mouse it you can see there's a little joint there it takes a moment but it kind of catches up to me now of course I don't have to draw that line I'm drawing that line just to demonstrate that that that that joint is there but if I want to make it look more like I'm just moving it around the screen with the mouse I don't have to draw that joint so you can see this is me now moving this object around with the mouse and I can toss it up I can try to catch it I don't know why I'm doing all this stuff in this video but it's kind of addictive to play with it I can't stop do it on your own time okay so now let's look at the code again remember let's look at the main program here's what I was talking about Mouse release that's where we destroy the joint mousepressed if the box contains that location so we're only creating the joint if we click on it you know this is a you know a choice that we're making we depending on what kind of interaction we want but in this example if we click on it then bind the spring to the box this is really interesting another scenario whoa here's an exercise for you try to create a scenario we have multiple boxes and you can click on any one how would you do this with a loop and an array to test which one are you clicking on which one should that spring get bound to but you can see this is how it's working destroy it when you release make it when you click the mouse and then draw we always update the Springs location with the mouse location so that's the general framework right click the mouse make this make the joint release the mouse just wait wait I'm sort of good click the mouse make the joint move the mouse around tug it around release joint is destroyed but this is all conceptually what we're doing the actual box2d code is deep within that's well not deep but it's in that spring class so we can see these moments right these moments are when we create the joint right that's binding it to that box we make a map joint definition here's this crazy line of code right body a is the ground body that just we're just attaching it to the screen the ground body B is the actual box so instead of a joint between two bodies it is between two bodies but instead of the two bodies away we normally think of it we have one body and then that ground then we set some parameters and we create that joint now the update function which is kind of key is we say ah as long as the joint exists set its target to the mouse location so and notice this function takes generic arguments XY we're passing in Mouse X and mouse Y but we could update it according to you know anything like a purlin noise random walk hint exercise okay so we can see all that these functions are contained within here we're drawing the joint as a line destroy is very very simple I'm sorry I'm kind of like lost here ah destroy is very very simple there's a nice function in the box 2d world class called destroy joint pass it a reference to that mouse joint and then set it equal to null we want to set it equal to null because this is how we're always going to test is it active if it's null it's not active if it's made it is active so any time in our program I want to know is the joint on or off we can just check if it's at all we could have used a boolean variable to keep track of that but keeping track of if an object is null or if it's created is also another way we can do that okay I think that's just about everything about the mouse joint aha but let me mention something so this is one technique we're tugging something around the screen using a mouse joint another technique that you can use is to set an object's type settin objects type kinematic remember we had a dynamic body that's a body that moves around response to physics we had of static body that's a body that never moves and now we have a kinematic body this is a body that you're allowed to control yourself manually but you still don't set its location the way you can control it is by assigning it a velocity by assigning it a velocity so let's say this is the box and you know this is where you want it to be on the screen you could compute a vector which is the difference between its current location and that location on the screen and set that objects that velocity as that vector so I'm not kind of going into the details of this I personally like the sort of mouse joint technique it to move something around it has a very kind of like real feel and there's some limitations to the things that the kinematic body can do I think it can't collide with other kinematic bodies there's something like that it should probably look that up I will clarify somewhere of somehow someday but but this is one technique and if you're looking into this technique if I just go quickly to the examples and go back here kinam I believe kinematic test ice kinematic tested in a github repository I guess I should work on this one is one you could look at let's run this and hope it works you can see I yeah this is me moving it around and you can see I'm able to move this around manually with the mouse and it's very similar to and it fell because it's responding to gravity when I let go or it got bumped okay so so you can see that I don't know what I'm doing here I will kind of lost my train of thought but I wanted to just show you where now edit edit edit this make this video veteran shorter here it's where the body type is set to be kinematic so that's something you could take a look at okay so what I would suggest is couple things one try to have the box move around according to rules that's different than the mouse using the mouse joint another thing just add more stuff into the world can you do something where you're kind of moving something around to break things apart knock things around you can probably create some type of you can start to thinking of how you might create a game if there's some form of interaction with keyboard or mouse of acting the behavior of one of the bodies and by the way in the next video we're going to look at another way of affecting things manually by applying forces to the objects of Bach City all that time we spent figuring out how to make attraction forces friction forces and P vectors and apply force function we can do that with Bach city also so if you're excited about that like I'm excited about that that'll be in the next video great this was recording was on so I made this video it was maybe 12 minutes long and I'm gonna hit stop now