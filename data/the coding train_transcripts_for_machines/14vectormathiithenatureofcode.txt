okay all right so we have about nine minutes here an appointment at 30 but I think this video can be accomplished in this period of time we just finished looking at the vector math operations add and multiply and in this video all we're going to look at is magnitude and normalize um maybe something extra but this is this is where we're starting okay so first of all again we're still at this moment with this time in place of just looking at these functions in a kind of abstract way once we can get through this list where it's going to be much more I think useful and interesting to actually apply these functions into a real practical example but I think it's worth looking at the math behind magnitude first so let's say we have this vector called V and we want to know its length now you might be asking yourself the question isn't that one of the properties of the vector a vector is something that has both magnitude length and direction well it's true but the P vector class if you remember if we were to actually look inside the guts of processing the bowels the depths the innards whatever we would see this P vector Java class and we would see what it actually is storing are the components of that vector this is something like what it looks like right we're storing the components of the vector the vector itself doesn't actually store its magnitude so if we need that vectors magnitude it needs to be calculated and it gets calculated through the magnitude function so how does that work well remember the components are an x and a y x and a y now look at this out of this vector we made a right triangle the components aren't x and a y we could call this H I don't know it'd be the hypotenuse of that triangle the magnitude of the vector first of all we often write notation wise the magnitude of a vector will look like this so this is what we're saying we want the length of that vector how do we get the length of that vector well if you remember the Pythagorean theorem that is the worst right triangle anybody has ever drew but a squared plus B squared equals C squared well solve for C C equals the square root of a squared plus B squared and in fact the magnitude of this vector is square root of x times X plus y times y right that's how we might write it in code and I know ass I need a little line here where this is this is actually only as far as you can see is about there but this is x times X plus y times y okay okay so that's how it works luckily for us all we need to do is call this mag function this is one of the reasons for using the P vector class in the first place because the magnitude of a vector something we want to know very very often and if every time everywhere in your program you had to remember to write square root this and square root that your code would get kind of balloon so the point of the vector class is to store these vector quantities and perform and have functions to enable these mathematical operations that we do over and over again add subtract and multiply magnitude normalized over and over again so we can just access them through a method so if we walk over here we can see before this was our this is where we left this little vector math example where we now we're making a vector between the center of the window and the mouse and then we shrunk its magnitude by 0.1 so it's 10% and that is where we left this example now we could do something like we could say hey let's draw a rectangle in the corner of the the screen which has a width okay so let's the point of what we're doing is we can get hat vectors lengths and we could store it in a variable now what would we do with that variable that's a nope that's an interesting question there are lots of times where the magnitude itself is useful if the magnitude of the velocity is greater than 10 you've going too fast and slow down there are lots of reasons why we might want to examine the magnitude of the vector here though I'm just going to use it to draw a rectangle and I'm gonna for dramatic effect color it red so we can see here look at that that was kind of exciting let's I don't know I want to just put it in the it's fine it's fine there let's move the mouse around you can see that rectangle is growing according to the size of that vector and if I don't want to shrink it by 10% any whole herd we can see that this is just representing the magnitude of the vector so again there is no this example isn't really doing anything it's just demonstrating that we could calculate a vector and use the quantities I'm sort of drawing arbitrary stuff I'm drawing a line I'm drawing this rectangle just to try to demonstrate here's the syntax here's how these methods work we're getting closer okay so interesting thing about magnitude I got four minutes left it isn't thinking about magnitude is we often want in our lives something we want in our lives is to just be normal sometimes actually most the time we don't want to be normal but actually what I'm talking about who knows what we want in our lives vectors sometimes we want our vectors forget about our lives I know nothing about what a good how to deal with much life but I do know something about vectors we said is one of our vectors to be normal and what do we mean by normal we want to deal with vectors that have a length of 1 a unit vector a normalized vector what does it mean to normalize something you can think of the word standardized in a way what it means to normalize a vector is to take any arbitrary vector look I can just draw arbitrary vectors if I want to normalize all these vectors I want them all to keep their direction but have a length of 1 so let's say this approximately represents one unit that much so this vector would be normalized would look like this this one would look like this this would look like this this would look like this this will look like this if I had a little tiny one and I want to normalize it it would look like this right no matter what its length is to normalize a vector is to take it and reduce it or grow it or just to the length of one how do we do that well if I have a P vector V which is some P vector I can say V dot normalize the interesting question though is what happens inside that method what is the process two questions here what is the mathematical process of normalizing a vector and then what's the point of doing that like how does that does how does that help anything how does that make anything better so let's first look at the mathematical process of normalizing the vector okay here is the mathematical process of normalizing the vector God okay let's make a vector and it's of length five and it has a component of length of four and another component length three and notice I made this a 3 4 5 triangle because we can kind of do that very quickly so how do we turn this vector into a vector of length 1 well how you take any number and turn a number into one I mean I could say hey I know 5 minus 4 that makes it 1 but that's not what we're looking for because if the lengths were 10 10 minus 4 is 6 how do you take any number and turn them into 1 for example and I'm going on too long with this how do I make the number 10 turning or 5 or negative 3 or 0.5 or 0.05 divided it by itself right do any of these we all get one so we can take a vector and divide it by its length that gives us a vector of love of length 1 and so if we divide the hypotenuse or the length of the vector by 5 we also need to divide the components by 5 so this vector of length 1 this side is 3/5 and this side is 4/5 so that is the process if you look again into the guts of processing I probably should have this open but I'm just winging this stuff and I need to prepare but if we look into the processing source code we will see that to normalize a vector is to ask for its magnitude and then we would say the X component of that vector is equal to itself divided by magnitude and the Y component is equal to itself we normalize we find the light that we divide each side by slang that gives us a vector length one let's actually go and demonstrate that in our program looks kind of like I prepared for this okay so here we are back again where previously we asked for the vectors magnitude well one thing I so let's comment that out and now let's say Mouse dot normalize so I'm going to normalize that vector okay where is it a little what pixel vector tiny little one pixel vector that's the thing normalizing the vector makes it of length one which is incredibly useful from a mathematical standpoint not so useful visually because one pixel is not something you can really see so let's let's try to make it so we can see it well once I have it of length one why don't I just I don't know multiply it by 50 and now you can see ah it's length is 50 but it's always 50 it doesn't matter how far away I go its length is 50 the reason why normalizing a vector is so useful is once you have it length one it's easy to scale it to any arbitrary length so if you just figure out what we're going to see in a moment is what if we could just figure out the direction of a vector and not worry about its length we could just normalize the length one and scale it appropriately so this is very very common and there's lots of things I would like to do to this example but I think I've kind of gone on for too long be more useful to see this in a practical sense where we might normalize the vector I should briefly mention I think I'm back over here that there is a function called set mag and what set magnitude does is it normalizes and multiplies in one operation it says I want to set the magnitude to a certain length so first let me normalize it to 1 and then multiply it to scale it and that in fact is what we've done over here I should just note that this could be simplified into one line of code by saying set mag 50 so these two lines of code are exactly equivalent to what that one line of code does but I think it's important to realize what normalization is for it's really what we've you normalize a vector it's something that only has direction the magnitude is no longer relevant and you can do all sorts okay a lot I have to go from the take a little break I'm gonna go back and we're actually done with this basic math stuff and we can we can look now we have these tools add subtract multiply magnitude normalized we can um we can actually start to build those into an example and we're gonna have a little mini physics engine in a moment yeah okay so see you let's see yeah okay