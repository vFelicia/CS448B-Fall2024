Dan and I am broadcasting live from the school for poetic computation on uh Tuesday March 22nd it's not really the morning anymore it's about 1120 a.m. I'm here um hopefully you can hear me hopefully you can see me I've got some new lights set up so I think the picture quality should be a bit better the keying from the green screen should be a bit better please let me know in the chat how it looks how it sounds um I'm still kind of in a phase of kind of testing this setup and getting it configured so I like not really prepared which is why I'm kind of stream of conscious rambling here but I do have some stuff I want to do today uh in addition to just kind of talk and answer any questions but on my list is I've been meeting for a long time I made a whole set of video tutorials about making a Twitter pot Twitter pot a Twitter bot using node.js so I finally want to look at some strategies for deploying that bot to a server we can look at how you can deploy it to Heroku or an Amazon ec2 instance or discuss other possibilities oh Cloud9 is another one you can use I think for free I should maybe look at that um as well as actually just running your Bot on a Raspberry Pi so I want to not really I'm going to pull out a Raspberry Pi and see if I can even hook it up into the system and have it behind me and see what we can kind of like FS futs with it Fitz with it fuddle with it I don't know what you do with a Raspberry Pi you program it you make it do stuff um but um so I don't know I'm going to hang out here for an hour or two and kind of do this stuff if I get a good if I have a good like chunk of something I'm going to record that separately as a video tutorial that will get all this will get saved but I'm looking to make in the next hour or two while I'm fussing around also make some video tutorials so I'm looking in the chat um do I look I don't know if I I noticed the way I had the white balance on the camera I was very like pale the other day now I look a little bit orange but um if uh if you wouldn't mind letting me know how the picture quality is and how the sound is that would be helpful to me before I get kind of started here um okay so let's see uh yeah I got some folders on the desktop here all right um does that make a weird noise like a slurping noise um okay so picture and sound are good seems perfect perfect great okay thanks for the feedback so I'm going to get started then um let's see what we can do first here let me revisit um and try to get so here's the thing I'm kind of doing my strategy for today is rather than like prepare and then turn on the stream and be prepared I'm just gonna prepare while I'm streaming so I think the first thing I'm going to do is kind of get myself back to um some of those bot examples um so I'm going to open up Sublime uh and I'm going to go here to the finder uh and see if I can figure out where where are all the where are all those oh documents yeah uh data apis arrays other R of code video notes where are all the bot examples other documents this is not going well so far uh uh hold on let's look let's try this bot. JS okay ah they're definitely somewhere um let me see these things in the finder uh old desktop old YouTube code Old this is brilliant brilliant file naming here documents old desktop old YouTube code but that's what I'm looking for so I'm going to grab those things old desktop old YouTube code uh so let's grab I'm going to move this stuff to the desktop here and and drag this into here uh so this was a bunch of my old bot examples um oh unregistered Sublime Text I have purchased Sublime Text but I guess because I made a different user account on this machine uh um I see somebody wrote in the comment image could be sharper I'm assuming that's just the sort of compression of the internet speed um it is I am I am streaming this out in 720p I was reluctant to try to do it higher but anybody else let me know if it seems like you have trouble um seeing anything um okay uh let's see here let's just find a very simple example which just uh let's look for the like this one I think maybe uh this one does a random number uh every what's 20 times a th000 every 20 seconds um and um somebody asks why not use adom IO text editor no reason I just happened to using Sublime here um that would be that would also be a good one for me to use um so I think this will work here as a demonstration to start with um let me open up terminal now uh uh well where am I here in terminal here oh my goodness uh and I'm in this one I have no idea and I think the the good question another question here is what is this example hooked up to Twitter am I logged in to uh no I'm logged into to who myself let's let's log out out that now you all saw my Twitter page let's log into ITP A2Z I try to remember the password which is my test Twitter account no oh wait first of all let's even see if that's the right account name ITP A2Z no A2Z ITP yes okay log in uh what did I say it was A2 Z ITP uh interact oops I just said the password out loud uh I don't know should I save it what do you guys think oh I feel so stressed out when I get these queries let's not save it let's not save it bad idea bad idea okay um so now let's run this bot uh bot is starting it worked yeah there we go this is a tweet we just made 3 seconds ago random number 39 the number of the day isn't that that's a Sesame Street thing right the number of today is 39 uh okay and we've got our random number bot and so I think I have all the pieces here now I have a browser Page open to the twitterbot I have Sublime Text open to the code for the twitterbot there it is and I have also terminal now uh in the directory for that Twitter bot so I can run things and I don't need the activity monitor and Etc I don't need this oh I I am going to need this ah yeah when we get to the Amazon thing okay do I have cyberduck here somewhere yep okay we're going to use that for ftping files uh am I logged into some sort of get something like that okay um so let's see here let me look um there are 28 people watching hello so a lot of people seem to have just joined I'm just getting set up here the things that I wanted to talk about today are how to deploy your twitterbot uh and as well as look at a Raspberry Pi let's should we try should I try let me get my res I got to leave for a second not really leave not really I'm in a place I'm in this like kind of underground bunker it's not underground at all it's like a room with no windows uh but there's a room with Windows right over there I can go get a little sunshine um but over in that room over there I left a raspberry piie so I need to just walk over there and get it be right back there's lots of things here I could trip over so I have to do this very carefully be right back oh you can still hear me though because I got a live mic going on here so I'm in the other room you can't see me now and it I can't find the raspberry Pine oh you know why because I already brought it in here cuz I'm a lunatic oh and you know what a light went out um one of my lights went out probably because I stepped on the cable now it's on it just shined in my eyes Okay um so let's talk about the Raspberry Pi for a second so here's the thing if you've made so if you've made a twitterbot and if you've made it using node or whatever you made it with you now have the ability as we just saw to on your own computer run that tter oh this the font should be bigger here so you can see that to run it there we go right you have the ability to run it and you could just let that twitterbot run but uh if this is your laptop eventually you want to close it you want to shut it down you need some place where it can run permanently and your options could be like okay well you could dedicate a computer sitting in your home or office or wherever you have your your computer to running your Bot but that might be a little bit unreasonable um you know it's kind of an expensive thing to dedicate an entire computer just for a bot so one of the nice things you can do I have a box here hey props I have in here a Raspberry Pi I show it to the C this won't this will be out of focus uh a Raspberry Pi a Raspberry Pi is a small computer it looks like this I actually have a little camera hooked up to it which I will at some point see if I can get working um I happen to have also a little um I need another camera to like close up on this I happen to have a little um what what do you call this wifi thing dongle USB WiFi thing so this can connect to the internet of course I could just plug it directly into ethernet um and this is computer this is running a Linux operating system there's a little micro SD card in here um which is has the Raspberry Pi uh has the Linux operating system on it um it's running that and that can run node so this being only $35 is a much more reasonable thing to leave dedicated to running your Bot so that is one option and I would like to maybe I'm not going to do this right now set this up I'm going to try to outp get the HDMI output of this or actually I don't even need that because if I'm just going to could log into it I don't know what I'm doing yet but I'm going to set this up and show you guys some stuff with the Raspberry Pi but maybe we should move on um uh maybe we should move on and I'm going to look at some options for deploying this bot to servers so let's think about what some oh this light does not stay on why is that hold on maybe I need a piece of tape here why is it Loose hold on I'm going to work on this light over here okay come on there we go there we go all right um so uh oh I've lost a lot of viewers I was up to like 30 30 some viewers now there's only 23 of you watching but that's nice okay so what I want to do is look up here um I have some notes on this which I will show you where those are uh um uh shi. github.io A2Z F15 so if you A2Z df15 okay if you go to this URL I have some notes on how to deploy your Bot to both Heroku which is a company that runs servers that you can get an account on um and actually you can run your twitterbot on Heroku for free as far as I can tell I've been I've I've been able to do that I'm going to show you that um obviously if you want to do more sophisticated things you'll probably need a paid account for Heroku so we'll look at that briefly um and um so on this page I have um two uh two links here of notes one is a page of notes on how to deploy your Bot to ec2 and another is a page of notes of how to deploy your Bot to Heroku so I'm going to open this up and and uh you can see the and what I'm going to do is you can kind of like see the basic instructions here but I'm going to walk through them and I'm going to then I'm going to hit record so maybe this first video that I'm going to do is will be called how to deploy your nodejs Bot to Heroku when when I woke up this morning is that really what I thought I was going to do with my day was come here and talk to myself in a room with a wall painted green about deploying a node bot to Heroku anyway such is my life you're the you your life is to watch this of course you you you you have free will and can turn this off and go to the sunshine I will stay here in my dark room okay so um I'm going to do a couple things one is um ah hello tun I see hello Andrew uh oh Andrew Kim writes in the chat by the way Twitter Bots are estimated to create approximately 24% of tweets that are on Twitter is that really true well we are only adding to the problem if that's the case so I want to get my notes open on this I have a second La my my my second labtop over here uh so shiftman github.io um slash uh A2 z F15 and I'm going to go to um the I'm gonna start with Heroku up the camera just went off I'm going to walk around here and turn it back on sorry about that I also got to check the I'm in a bit of a battery situation which is that uh I I'm running this lav mic and the receiver for the lav mic off doublea batteries and I kind of um those might run out which Cas I might have to pause and go out and get some batteries but uh we'll see I still got a full bar so I think it's going to last for a little while okay so um okay so what I want to check here is okay good that's not installed so I need to install this Heroku tool belt and the one thing I need to make sure I can do uh is make sure I can log into Heroku here uh so I'm going to log in uh make sure I know my password so sad I use one password and I'm just don't have it ah I was lucky okay uh let's not save it I probably should save it I don't know what's happening anymore okay the boy look at all of these tests test test delete soon this is my brilliant bot test delete soon test Twitter bot test think I should delete some of these can I delete them very quickly uh it's probably going to take me a while we'll just make another test it's fine okay so I think I'm ready for the first tutorial for today it only took me 16 minutes to get to that and the first tutorial I'm going to do is deploying your twitterbot to Heroku and I probably should practice this before I hit record but I could always do it twice and whatever anyway so I'm going to check the chat to make sure everybody can still hear me and everything looks okay um uh hello to more of you who are saying hello in the chat I love this purple color I got to change my desktop background to like a nice purple or something um um hello to brother rain uh in the chat uh I gained a viewer I was losing people through my rambling but uh once I started like holding up a prop and had this like Raspberry p and I was trying to I don't know okay so uh we're gonna do this so um so I've got just to revisit this I've got oops I don't need this here or maybe I do uh I've got my Twitter page open for viewing if the bot works I have got I'm logged into my Heroku dashboard I have got the code for this particular bot open and I also have terminal in the directory for the bot okay so I think I'm ready here we go so now I have to come over here and I'm going to hit record I'm going to have a little sip of this uh I'm having coffee today instead of tea which is very dangerous since I have like a sort of a hyper energy problem anyway but what can you do okay here we go hello in this video I'm going to look I got to start over I have this on the wrong page uh okay tur this over here okay uh and then I'm going to make this bigger uh okay okay uh here we go uh stop I'm gonna try this again hello in this video I am going to look at how you can take a twitterbot written in node.js and deploy it to a server and the server I will look at in this video is one that runs on Heroku so what are the pieces of this the first thing is I have this simple little bot which just tweets a random number you can see I just ran this bot and tested it over here uh and you can see there's the random number it picked random number 39 uh and I also have um the my browser logged into Heroku so shoot I have to start over I have to start over sorry I got I I I I had this in the wrong page uh this code and terminal okay okay here we go I'm going to start over again um record hello hello hello my name is Dan hello in this video I am going to look at how to deploy your Bot written in no JS to uh a server and that server being one that runs on a service called Heroku so let's take a look at the pieces so you can see here I have my browser open to my test account A2Z ITP which uh I most recently just tweeted a bot tweeted a random number 39 and I have the code for that bot open right here you can see it in Sublime it's very simple it has a single function that tweets that random number uh and then I also have my terminal open to that directory and I could just really quickly test to make sure that bot works the bot is starting it worked let's go back to the browser I'm gonna hit refresh and we can see now I got random number four so everything is working the point is in this video is I want to say this bot that's running right over here I don't want to run it from my laptop I want it to run autonomously on a server somewhere that I can set it to go and never think about it again so let's tweet it again let's quit it um and look at how we can do that so the site that I'm the the service that I'm going to use in this particular video is Heroku so um you'll need an account so you know if you're watching this video and you don't have a Heroku account go to uh Heroku dcom Heroku spelled this way.com and you can see here I went there now now I'm already logged in so it went straight to my dashboard and you can see that I have all these things already listed on my dashboard because apparently I've tried to make a variety of I've tried to do this a whole bunch of time test this test that delete soon Etc so what are these things these things are referred to as dinos I think that's right not Dino DS Dino Dy NS like a dynamic thing that's running it's a process that you're running so what I need to do is create a dyo um to run my bot so the very first thing that I'm going to do is go up here to this plus sign up in the top right and I'm going to say create new app so app is really what I'm doing I'm going to create an app I'm going to call it uh coding rainbow uh demo uh should only contain lowercase letters okay rainbow demo uh it is available I'm going to create it and it is now there so there's a whole bunch of things I need to do here and one of the things about using Heroku is Heroku is kind of its own animal it's not really an animal it's a web server but whatever it's it's its own it has its own way of doing things and the way that you send things to Heroku and get things back from Heroku is two ways one is you use git what is git oh boy if you don't know what git is stay tuned for my upcoming set of git and GitHub tutorials but for now if you don't know what git is um you're going to be you'll still be able to follow this but you're just going to have to verbatim kind of copy I heard a noise there's a person somewhere nearby I have to keep going anyway okay um uh you can just sort of verbatim copy um some of these uh commands um okay so now I'm waving to somebody who uh it's my my neighbor Joe I love Joe he's a great guy uh he came and said hi the other day okay I got to keep going here so um so you can see here that on the Heroku page it's even giving you some sort of commands that you can follow we'll worry about that in a moment but we're missing one other aspect here the first thing that it's saying to do is saying herok login meaning log into your Heroku account from terminal somehow so if I go over here and I type in Heroku login it says command not found so one of the things you need in order to work with Heroku is a piece of software called the Heroku tool belt so I probably should have preinstalled that but I'm just going to Google Heroku tool belt I'm going to click on the first thing that comes up and I'm going to download it and I think it's going to this is going to happen quickly enough that I can just do this I'm going to install it continue continue install uh password and there we go I'm installing it I do my installing dance I don't know I I didn't I like the weird thing about me doing this dance while this video is going I have a preview screen I'm like watching myself over here I supposed to just dancing to the camera that was very weird I will edit that out that no one that someone will make a weird GI out of that or something okay so now I should be able to go back and type in Heroku look at that oh installing tool I didn't even know it was going to do that so maybe you have to do that I was about to just say Heroku log in but I just was typing Heroku to make sure it works apparently I have to do another dance because it's installing a bunch of stuff oh that was I don't have to dance okay so now we can see um I should be able to say Heroku login and it should ask for my credentials my account is under my email my password is ah I'm logged in so now that I'm logged in I can actually start to do things which would allow me to deploy uh from terminal here all the stuff for my bot to Heroku itself so let's go back now to this p page and uh oh actually this page no this page sorry and we can see here now now that I've logged into Heroku the next thing I need to do is make my uh bot into a git repository again the what git is if you're not familiar with it is out of the scope of this particular video but it's um version Control software and uh what it's going to allow me to do is once I turn it into a git repository meaning all the code for my bot is in this folder it's going to allow me to push that git repository to Heroku because everything that lives on Heroku is also a g repository so I'm going to be able to follow these commands the first thing I'm going to do is say get AIT get init and it initialized an empty git reposit now if you get if I type got by the way instead of git it's going to say got command not found if you get this error meaning get command not found this just means you need to download and install git so if I Google git the very first thing that comes up is this particular website g.& reason you didn't have that already okay now that I've done that the next command that I need to go to is this Heroku git remote a so what I'm doing is I'm saying I want my git repository this thing that lives on my computer I want it to be linked to a remote place that remote place far off in the distance is Heroku and I not just want to link it to Heroku but I want to link it to my app that's coding rainbow demo so I can just take exactly this here and I can type put that into terminal I see it over here on my preview screen and there we go it's all set now and then I can go here and I can say the next thing okay so the next set of commands here is now I actually want to send the stuff to Heroku the way that you send stuff to Heroku is with a command a get command called push in git push means send pull means receive so there's a there's there's a lot to there's a lot to this but I first thing I need to do is like add and commit and so I'm just going to follow these commands I someday this will link to my get tutorials which will explain all these commands so I'm going to say get add and then I'm just going to use exactly I'm going to say commit get commit D am make it better this I could put my own comment in here I'm going to say uh oh and you can't this needs to move like a little bit over here I'm going to say uh this is my bot and it did that and then I'm going to say get push Heroku Master get push Heroku Master which will send it so now it's sending it to Heroku and it's going to do all sorts of stuff to try to run it the thing is I missed some steps so these would have been the steps if I had a kind of traditional oldfashioned uh web application you know I made some sort of server it serves up web pages people log onto my server they see the web pages but that's not actually what I made I made this bot which is just this process that needs to run behind the scenes uh with no there's no web server there's no place there's no URL for anyone to go to I just want this thing to run on the server so I have over here I'm just want to make sure I get the syntax right my notes um and uh okay so in order to do this I'm missing a particular piece so first thing I want to do actually by the way I really should have practiced this in advance but this is fine so there's so let's here we are we' kind we've got okay what have we done so far we wrote the code for our bot we pushed it to Heroku and we and it even just sort of said verifying deploy done it didn't give me any error messages so let's actually go and look now I'm going to go back to uh my dashboard and I should see here I should be able to find oh yeah sorry whoops I should be able to find coding rainbow demo I'm going to click on that and we're going to see um it says sleeping so it's not really working it's not really doing anything yet the reason it's not doing anything yet is because it is listed as a web app I need to change this to be what's called a worker app and that's what I was talking about a worker is a web app is something that serves up web pages a worker is something that just works behind the scenes with its own process and that's what the bot is so in order to do that I need to go back to my code here and I actually need to create a new file so this is my folder with all the stuff and I need to create a new file and I need that file to be called I'm going to save it uh P file proc file this is the process file it's a configuration file that Heroku will look for to know what is it that this thing is supposed to do so I'm going to save that and in that file I'm going to say this thing is actually a worker not not a web application and it its job is to run node bot. js so I'm going to save that in there and then I have got to go back and this is again um if you're unfamiliar with Git I here's the thing I need to I made some changes to my project now I need those changes to go onto Heroku those changes are only locally on my laptop so to do that I need to say get add dot this is adding my changes and I need to say commit which is giving a message to those which is adding the proc file you can follow along those this is the same things I did for the first one and then I can say get push Heroku Master this is sending it to Heroku Master Heroku is our Master uh and now that done it's finished uh as I do my little dance I have to wait for all this to finish launching verifying deploy Etc now I should be able to go here and hit refresh and I see now I see look at that it says worker node bot. js and this I want to turn off I need to hit edit I want to turn off the web the web process confirm and I want to turn on the worker one confirm and now as far as I know oh my goodness boy we we sent a lot of tweets um you can see now it's uh you can see it's it's running now so it was probably running it's it's interesting that it actually worked maybe earlier but now it should be running every 20 seconds it should um post a new tweet and we should be able to see this by the way uh if I back here say Heroku log uh oh what I meant log is not a command perhaps I meant logs and in fact yes I meant logs uh Heroku logs and you can see by the way this is running because there's two new tweets uh and here uh it worked right so um this is oh yeah so you can see by the way there's a bunch of things going on here because I let it run as a web thing the first time and the web thing has an error it stopped but you can see the worker thing is just saying it worked it worked it worked so I don't know if 20 seconds has passed but if I do this again look at the logs you can see the worker is still going so um I'm actually going to shut it off um because I have it set to like tweet every 20 seconds which is pretty often but you can see that this works so now my bot is deployed on Heroku and by the way free account free Heroku account um to to do this so um so you don't this you not need a paid Heroku account to Simply run run a an app with a worker process so hopefully this was helpful to you this is about a 15 minutes of the steps um what I'm going to do in the video's description is uh kind of paste links to all the pieces you need to download uh I'll have links to all the pieces you need to download I also have this that I ran through as a written tutorial so I will post a link to that as well um and uh but before I go away I'm just going to show you how I could shut it off if I want to so I could hit edit here I could turn this off and hit confirm so now my bot uh even though it did four more random numbers it should have stopped now and it won't do any more random numbers I've shut it off right now so uh that was that concludes our discussion of how to deploy your no dutchs bot to Heroku over here I'm gonna hit stop okay so I'm now GNA uh I don't know if anyone's still watching the live stream I'm going to come back here and look at the live dashboard um and uh some people said hi okay there 25 of you watching how was that did that make sense I'm like tempted to just like redo that whole video cuz I was like didn't know what was happening but but um hopefully that was okay up this light keeps going you know the key seems to be fine even with this light going out um I don't know whether it's a power issue or it's just loose like if I squeeze it the light goes on can you see that there's a light going on and off yeah probably can um let me hold on let me take some more drastic measures here I have a feeling that this just is not in tightly enough okay sorry I just want to fix this light hello everyone hello sorry ah there we go I'm I'm I will be back talking to you momentarily there we go that seems more that seems better now okay seems to be staying on okay um hello again so let's see uh so uh Andrew writes uh what kinds of things do you have to pay Heroku to be able to do to be honest with you I'm not that much of an expert on Heroku but I know for a fact that I use it for um so one thing I use n Heroku for if I go to natureof code.com because I'm inadvertently plugging this um and I click buy now you'll notice actually the URL takes you to here so it's actually I'm running a server on Heroku to run this uh purchasing system uh which by the way you can you can download it for free but um so but I have a database that stores a record of every purchase and I have to have a paid account in order to have that database so that's one thing certainly I think to use a database probably it also was I would imagine related to how much bandwidth you get uh server space you get those types of things uh also how many different like apps you can run probably also is related to um whether you have a paid or a free account um okay uh that was one question uh another question is so that is for JavaScript based bots so you could deploy nonjavascript based Bots to Heroku whatever runs on Heroku you can run the thing that I have not been able to do with Heroku is run a bot that one um you know I made these tutorials so long ago but um the bot tutorials if you go through them look at doing just a text based bot and then an imagebased bot and the image based bot uses then processing which runs a Java program to do the image stuff so I have not been able to run Java uh Java with the JavaScript node bot on Heroku but I have been able to do that on Amazon ec2 which is what I also want to show uh next in this session today what about Windows users I guess the console commands are similar uh Leander R asks uh correct uh for Windows users you just need your own uh everything is the same uh you just need to have like sigin or Powershell or even like git bash is a tool you can download to have uh console command line access to your Windows machine but otherwise it's exactly the same um yeah um okay any other questions um I'm going to start getting ready here to look at Amazon ec2 uh um okay Amazon okay so first thing I want to do is go to shiftman GitHub so I also have some notes here oh yeah um so I'm going to go through this now uh one of the tricky things was oh my God this is like totally insane I'm going to leave this open on this machine um so I'm going to go through the ec2 stuff the tricky thing is getting to log in I think I'm just going to like hope that this I can make this work um yeah so let me go let me just see though if whoops um why is this URL not correct uh let me fix this uh so hold on I'm going to fix that URL on that tutorial page um still um post your questions in the chat while I'm and I will answer them in a moment while I'm getting here where where was that week nine ec2 ec2 uh edit I don't know why this oh wh I have this backwards in the brackets should be Amazon ec2 so this should eventually update um okay um uh okay uh oh interesting somebody writes in the chat I I'm I'm sorry I would love to know how to pronounce your name Goa tasan writes uh for web apps Heroku used to be very generous with their offer now free Dino is limited to run maximum of 18 hours during a 24 hours window that's interesting I was not aware of that so it might be the case that um this might not be the best uh it be interesting to see as you guys try deploying with a free account if it lets you run your Bot 24 hours a day um you know you might be fine if your Bot as a worker process only does something like once every hour um but uh be curious and then uh Cy writes as a non webd what does Heroku do well Heroku I'm I'm really the wrong person to be I should just not be here making these videos cuz there are certain things I really I'm also a non webdev as a non webdev I will now attempt to make up an answer for that question but I I I'll give you my sense of it those of you who I'm sure know this better will write in the chat but oroku is a uh server um uh that you get to have an account on and a server is just a computer that can run programs now for the most part the kinds of programs you want to run are those that serve web pages but as I'm showing you here any program that you can run you can run on your Heroku inst the thing about Heroku is they have their own way of doing things which is a little nonstandard it's a little different than I just have a computer that's plugged into the internet that I can log into and put files on they want you to use their Heroku tool belt software and you have to send things using git so there's it's Heroku is a um Heroku has a kind of High um sort of high threshold it's not that user friendly for a beginner or someone who doesn't have a lot of experience working with these but but you know hack away at it and hopefully these that video will help um uh is there documentation for the different commands you can make the Twitter bot do uh yes so what I what I would suggest in this case is um if you go to uh my uh YouTube channel um and go back to um this particular playlist Twitter about tutorial no. and processing I go through all of the twitterbot stuff in a series of like five or six videos of how you can be unate with the API and how you set up your keys and all that stuff so that video that I made about Heroku is going to get tacked on the end of that playlist as just deploying your Bot uh okay um and now I will attempt to do the next demonstration I'm going to check the battery on the oh on my um I still have a full bar there so I think I'm good battery wise and I have three bars here so I think I'm pretty good battery wise for audio um incidentally I'm not trying to the one thing I'm doing today is making uh videos that you that don't use the Whiteboard um oh whoops I don't have the um because I I have a new whiteboard coming by FedEx today I'm going try to mount it to the wall over there I realize now that I probably need unfortunately I have four LED lights which is lighting this area really well I thought I would just use two here and two there I might need to get four more um um but that that should be so as soon as I get the Whiteboard up I'm very the I'm going to uh be able to do a lot more tutorials that involve kind of different mathbased algorithms and also the set of get tutorials I want to do which um even though I I kind of want to use the Whiteboard to kind of diagram out how git Works um okay uh um okay so let's let me get to uh here and Let me refresh this uh Ah that's good the camera went off and I am going to uh come back over here uh uh uh Chris Coleman writes on Twitter by the way we need a diagram and walk of your setup Studio setup sometime so I did that the other day on Periscope and maybe I'll do that again today I I I kind of but I didn't like it wasn't my intention to do that so I will um I definitely will do that I have a a video about it that I made a while ago but it's it's a different set up now so yeah I will do that um okay uh uh here we go now um let me just have a little sip of this okay so um I'm going to go back to I'm going to close this we don't need Heroku open anymore we need this open um and uh ah so actually so here's the thing I want to show how in this video not just to run a plain vanilla twitterbot but a twitterbot that also posts images so let me see if I think that's this one so this is the one that runs um that does the image let me see what happens here so hold on a second uh let me get this set um sorry uh I want to go to the node five example uh and say node bot. js let's see if this works claims it worked let's see what's here okay great so that did work so um so I'm going to uh did I yeah so this particular bot what it's do doing and again the tutorial is um uh the tutorial I'm sorry I've lost my train of thought here for a second the it I I already made tutorials that show how to have the twitterbot create an image and post that image so what I'm going to do now is just show how to um send the image uh how to do that on Amazon Okay so I got to look through these notes for a second just to see um that's installing Java doing this command uh oh right right right right right right right right right right right right right okay uh all right so I'm going to follow these instructions in this video I probably should practice this but I'm not going to um and so here we go so so actually what I want to do also is I just need to have this here uh I need to have this here and what I'm going to do is open up uh processing let me just see if I need to update my processing oh I do uh okay yes so by the way uh um uh there is 3.0.2 which I'm going to get right now uh so I'm using the most recent processing in this particular video uh we'll be getting to the ec2 thing in a second hey I've got I'm gating audience members I got to get do something more interesting I did do a little dance earlier that was kind of pathetic but uh so I am just I just want to have the most recent version of processing and I'm going to have this sketch open oh it's in use let's close processing let's replace it on the desktop okay so here I have the notes I have Twitter open I'm also going to need cyberduck at some point but I will get to that later I have this and let we open up processing open it and just getting all the pieces together can close close this one uh processing is now open I guess I don't need to show the welcome message every time and what I want to do is uh look at this and uh okay oh I forgot that it has exit in there okay great so this is the processing sketch it creates an image the bot triggers the processing sketch draws the image posts it to Twitter and that's that okay so I'm going to show you how now to run this locally and then deploy to ec2 okay and I'm going to have my notes open over here as well um in case I need need to look at that ec2 it's a little bit big uh okay and uh here we go so I have the processing sketch the twitterbot code and uh the twitterbot open getting all these notifications what are they oh people are liking my tweets and saying hi to me that's nice okay uh but I just want to be in my egg I'm an egg okay uh purple yay more purple okay sorry I'm I'm I'm I'm like scared of making this particular tutorial but I'm just gonna do it all right here we go um I'm going to hit let me just check the chat to make sure there's nobody saying anything uh I lost a viewer okay here we go I have my notes Here There we go okay hello in this video I'm going to look at how you can deploy a Twitter bot written in node.js to an amaz Amazon ec2 instance in particular one of the reasons I want to use an Amazon ec2 instance in this case is because not only is my twitterbot written in node.js but my twitterbot triggers a processing sketch which is a Java program to create an image and that image is posted to Twitter so if you want to uh make a image producing twitterbot this is one solution for you this is not the be all endall solution of course there's lots of ways to write Twitter Bots and there's lots of ways to make images but you can see here so I'm in a moment I'm going to start going through those steps but let's just kind of get a lay of the land here for a second so here you can see this is a particular twitterbot it posts an image made from processing you can see the image here this is the processing sketch if I run the processing sketch here you can see it just draws this particular image uh it also saves it to a file and exits um because here now is the code you can see the code in node is triggering that processing sketch here uh and now if I run that code the image bot is starting it says it worked and if I go back to Twitter we can see here I got another one now these two images are different even though they look remarkably the same remarkably similar um but um they are they are different right someone doing a quick pixel analysis they're different they have to be different otherwise my whole understanding of the way the universe work works is faulty okay so now we see this is how we you run this stuff locally this is what I did in all the previous uh videos in this playlist about node Twitter bot things now we need to look at how do we uh how do we uh deploy this stuff to an Amazon ec2 instance you know basically you know any other any Linux uh uh Linux server um you could follow these same steps and I'm just going to happen to use Amazon and I was able to do this with a free account now at some point you might discover you have to pay but for the most part it seems like you can run this using uh free credits at least for quite a long time okay so I do happen to have these notes online on a web page which will be linked to in the description of this video which presumably you are watching at some other time than the actual moment that I'm speaking right now um but the first thing I'm going to do here is go to this link Amazon ec2 but actually I can just type in Amazon ec2 probably into Google and uh I'm going to even just uh go down here and click on the first result result and what I want to do is sign into the console the console is where I'm going to get to configure my server so that's the first thing I want to do sign into the console and then I have to enter in my password uh and I don't want Chrome to save it okay ah I'm presented with this terrifying page of like 50 zillion things we could do I there's so much here I have no idea what any of it does but up here in the top left ec2 virtual servers in the cloud floating in the air um so uh those servers which are more likely in an underground bunker somewhere not in a cloud but uh this is what I want I want to run a server somewhere else or I can run this particular bot so I'm going to click on ec2 and I get an ec2 Management console and oh good oh no I do I have I currently have one running instance which is I guess probably some previous test that I did at another time but I'm going to just click launch instance uh and now I'm presented also with a terrifying set of objects of op of objects of options so I'm going to go back to my notes page where I said this is the one that I happen to use so there's different versions of Linux operating systems and different kinds of and uh um the the the key things that I'm looking for one is free tier eligible I'm to see if I can get this running on the free tier the other is I need one that can also not just run but run Java and so happens that this ubut server 14.04 it happens to also be able to run uh Java I also want to make sure I pick general purpose free tier micro and then set review and launch so I'm going to do that I'm going to look for that one which is this one I'm going to hit select over here I don't know if you guys can see this I should make the but Ubuntu Server 1404 I'm going to hit select uh a general purpose T2 free tier eligible I'm going to hit review and launch and now it is launched um great oh no launch now I'm gonna hit launch and ah okay so ah so here's so if okay so here's the deal this is the weirdest part of working with Amazon ec2 is how you're going to now authenticate and log into it and you need to create this secret file that holds the keys to your server now apparently I've been here before and I've made a bunch of these because I was showing different uh examples so you likely won't have any previous Keys you can use so but I I'm going to create a new key pair so I need to give it a name and I'm going to call it coding rainbow if you can see that and I'm going to then click download key pair oh yikes ah what happened I'm zooming like a I've completely lost my ability to zoom effectively so I'm going to hit download key pair and we should see hopefully uh that ah you can see here uh oh I'm standing in front of it but down here under my downloads uh in the downloads there is now this file coding rainbow. pem you must have this file I now need that file always and forever to log into uh this ec2 instance in a variety of different ways that I'll show you okay so I have that file now and uh now I should be able to now finally say launch instances now that I have that file I can say launch instances and waiting your instances are now launching and now I can go to view instances and uh I don't I'm not worrying about that right now so you can see this is clearly one that I made a while ago uh when I was doing another tutorial or another test or um and you can see this one hasn't actually completely launched yet um so this is the problem of making these videos in real time where I I I I sometimes uh I just stand here like completely awkwardly like dumbfounded I don't know what to do it's pending let's go to the next steps and when we come back hopefully it'll be um hopefully it'll be working so okay so uh I I followed these steps I did this part now aha okay so what I need to do now is use that key that file to be able to log into that instance so the way that the first thing I need to do is actually change the files permissions so files on computers have permissions some files are like locked and you can't edit them some files are applications that can be executable this particular key file needs uh CH stands for like change modif actually what does it stand for somebody tell me somebody write I'll do an annotation here it say but I I need to run this command to change its file permissions so what I'm going to do is uh the first thing I need to do is I need to go to where that file is so actually I'm just going to put that file on the desktop you can come up with a better place to put it uh and I'm going to go to the desktop and I can see there is that file and uh I guess I'm zoomed in or something uh so now what I want to do is oops type in this particular command chod 400 and then that file name which is was coding rainbow. PM so that's a first thing I've done I've now changed the file permissions to 400 for that particular file and then now I can you do something called SSH ssh secure shell um so basically what I want to do is in the same way that I have my I'm here in terminal on my computer and I can look at the files by saying LS I can run the files by saying like node what I want to do is be able to remote into that Amazon ec2 instance so that the terminal I'm looking at the commands I'm typing are actually not running on my laptop which is here that was dangerous to pick it up not running on this laptop but actually the commands are executing on the server floating in the cloud that's buried in the underground bunker okay so uh let's see here if ah so me rambling for a long period of time we're at 9 minutes here has actually caused this this instance to be running I don't know why it doesn't have a name here let me give it a name so um and one thing I can do here uh if I zoom in and rightclick see this connect option this is going to be really useful to me because actually it gives me all of right this is the command it's got I've got the command right here uh this is like the public this is like the I the address essentially of that instance and then here it's actually giving me the exact command to log into it so I don't even need to figure out what it is uh I can just copy this and go back to terminal and paste that in here hit enter and okay this is the first time that I'm connecting so my computer is saying I don't know about this I haven't connected this place before is anything is there anything that I should be afraid of here it's nothing so I should hit type yes and now it's added and then I just sit here and I hope I wait and I hope that the internet will oblige me and connect ah there we go so look at that you can now see here that I am connected I have logged in under my new name Ubuntu to my new address IP 17231 34179 so now I can do things like say uh PWD with print working directory here I am in home Ubuntu I can type LS and I can see there's nothing there so now this is great right this bot which I have here locally on my computer I want to be able to get it over here on my Amazon ec2 instance so how do I upload files there so the way one way to upload files to your Amazon ec2 instance is with uh uh FTP or file transfer protocol secure FTP so the way that I could do that is you could use any any FTP software and all sorts of there's probably a way to do it through the web through a browser but I'm going to use something called cyberduck uh which you can Google and download I already have it installed here and so I'm going to run cyberduck apparently I and what I'm going to do here I have a cyberduck open what I want to hit is this open connection so I click open connection and now I have this window where what I need to do is is put in all the information for that Amazon ec2 instance so first thing I want to do is make sure I do SFTP it's got to be secure shell fiot transfer protocol and then the server address if I go back to here should be this right this is connect to your instance using the public DNS it's this so I'm going to copy this and go back to cyberduck paste that in here now there's this interesting question here which is what's my username and password well I don't have a username and password I have this weird coding rainbow. pem private key file it turns out in cyberduck under here under more options I can click that and I can say use public key authentication so I click that and now I go to the desktop and I select this file and now I um I've now have this file selected as my way of authenticating and I should be able to just say connect oh maybe I need to write Ubuntu here just in the uh username and uh ah it works okay so that was one little step that I had personally forgotten that I need to put in the username I need to say Ubuntu but now I just have this window here right this is now a view into home/ Ubuntu so what do I want to do I want to go and I want to just go here this is this folder here node five is where I have all of my stuff and I'm actually just I'm just going to take um bot config and package.json I'm just going to upload those files right now so I can drag them in here drag those files into here and they're now uploading a little window is telling me progress they're transferring I can see that those files are listed here right now and now I can go back here and I can say LS and you can see those files are there yay these things are working so now running out of breath here um now I can type in node and you no this is going to not work because I i' I've missed a set of steps here but node bot. js and so what's happening here the program node can be found in the following packages node nodejs Legacy so and then it's saying pseudo app get install selected package so one thing we first have to do is at least configure node to work that the way that we want it to work and I believe that I have mentioned that here uh and these are some steps that you can do so let's actually just run through these steps the first thing I want to do is call uh do pseudo apt get update so what that does is just says this apt get thing which is a tool to like get things like node and other software I want to make sure it's updated and has all of the most recent stuff so that's done then the next thing I want to do is install nodejs which say pseudo app get install nodejs so I'm going to run that uh my audio is still working ah this is asking me if I want to use the disk space which of course I do um so I'm going to run and install nodejs which is great then I also want to make sure I have npm installed which is node package manager which you might remember from the previous node tutorials uh and this needs 130 megabytes of disc space so hopefully this doesn't take too long um so um this is installing now the next step while it's installing let's talk about the next step for a second um this is now a a command to make sure that the particular version of node that I installed is now the actual version of node that will run when I type in the node command um so I am going to grab this command here and hope that this is done it's done and I'm going to because watch what happens if I just type node right now it doesn't actually know what node it can be found in the it's like well which one should I run nodejs Legacy or this one node so I want to make sure that I run this particular one with that command and now when I type node you'll see I'm in node so now I have node running on my Amazon ec2 instance and I can oh wait if I say clear here oh it does still work I can say uh node bot. js now first error I get is it cannot find module twit this is going to be notice when I uploaded my files remember how I said I uploaded the files I didn't upload the directory that said node modules I could have uploaded that directory but it makes more sense for me to just let those modules get installed by Amazon itself so I can just type in npm install and it's now going to install all the modules that are needed for this particular bot we went through this locally now I'm doing this on the server so if if we looked here and I said I refreshed you can see that now there is a directory called node modules which has for example that twit module in it so now I should be able to say node bot. js and it will run now here's the thing it runs so these are all the steps you need if you just have a plain old bot that only runs in node but the reason why I got an error now is it can't find that image file output.png the reason why it can't find that image file output.png is because that's the image file that's created by the processing sketch so while this part of the video I've now concluded like you could if you just have a node.js bot you're kind of done although there's another step of getting it to run after you log out which I will get to Let's uh but let's get the let's get the image itself to let's get the image making processing sketch to run as well so let's look at how we do that and there's a lot of like sort of uh awfully scary looking weird commands to do that okay uh oh but um actually so um yeah I'll come back to the forever thing okay so the first thing we need to do is make sure Java is on our our uh server so first thing I want to do is install Java which I want to say apt get install default JRE uh so I'm going to put that in and run that and it's going to take 209 megabytes of dis space I'm going to say yes so now I'm installing Java and I'm going to wait for that to install let's go back while we're doing that to the next step The Next Step okay so look at all these like terrifyingly weird looking commands so what's the weird thing that has to happen when you work when you work with processing on a computer your computer is typically connected to a monitor a screen and you're seeing the output of processing on that screen your Amazon ec2 instance has no screen it has no goey interface it's just a server that you can SSH into or FTP files to but it's known as headless meaning processing actually when it runs it breaks because it's like I don't know what Graphics thing to draw anything to there is no Graphics thing so these next steps are steps that create a fake display essentially the ec2 instance has this display you're tricking it into thinking that it is connected to a display because we don't need to see it we just want the graphics to be rendered to a file so the first thing I'm going to do is install something called xvfb which you could uh Google to find out what it is uh I'm going to run this particular command which will install this tool for a fake display the other thing I'm going to do is uh give it a now I'm going to give it an actual screen which is has a resolution of 1024 by 768 why not so I will do that it gives some weird little errors but you know big deal so this seems to be running a process that um uh I need to like now quit out of so I'm going to hit control C to do that uh and then then I'm ah okay so this was this was the command that creates that screen and that screen was there only while it's running um but I also now need to export it and and assign it to be display one so so actually these commands are no good so this is the command let me uh let me explain that again so I'm going to run this Command right and that screen now exists for processing to draw into but I can't type in any other commands here because it's it's like running so what I needed to do is I needed to run in the background and a command for having things run in the background is no hop so I'm actually going to say this now and now you can see I'm back to my terminal but that screen is now created and I also just want to assign it display number one that's what processing will draw to display number one so that's done so now we're in good shape now here's the thing if we go back to the code you'll notice here this is the code that I ran locally on my laptop for triggering processing to run processing Das Java but actually now that I'm on a Amazon server boy this is I'm 20 minutes is anybody still watching this 20 minutes into a tour about uploading stuff to Amazon ec2 but I have now I'm now on an Amazon ec2 instance which is a Linux machine so there's actually a different way that I can do this I can go to my processing sketch and I can go under file export application so export application is something you can always do and it opens up a little window and what I want to actually do is check Linux okay I want to export it as a Linux application now there is this embed Java option which I'm kind of confused whether I want to select did I I don't recall whether I need to select that or not let's try unselecting it uh I probably should keep it selected but let's try unselecting it and I'm going to hit export so you can see here now I have um the Linux application incidentally here's a version that you could run on a Raspberry Pi which we'll get to later so now um I should be able to go back and uh upload this um to okay so I I I'm G to have this application which I want to include so oh no ah boy this tutorial is not going very well that light went off camera went off I don't know why this light keeps coming off um so I'm going to now now what I need to do is I need to take this folder and and I'm going to upload that folder to oops my server so I'm G to upload that here so I'm uploading that Linux application it's there now I'm also going to rename this file this folder and call it rainbow uh and I want to I do want to do that um so you can see here the application is now here in this particular folder so the first thing we need to do is figure out does this even work so remember here I am now on my I'm now logged in to the server and you can see there is a directory called rainbow so I can go into that directory we can see what's there this is actually the application and the way in Linux the way that you execute something is with do SL rainbow and it's going to say permission denied so there's a few things that I need to do here I need to get this to run somehow so let's go back to the steps um so it looks like uh all I need to do uh uh is say pseudo right so pseudo is a way of saying like I am in charge Here I Am the super user here so let's try running the application now uh what did I do wrong command not found Pudo oh oh you know what weirdly interestingly enough it needs to be in quotes is that really true that doesn't make any sense uh no why did I put the quotes there okay I have to pause this video while I figure this out I don't know if anyone is still watching this in the chat this has turned into such a like ginormous topic I knew I didn't want to make this video uh uh I'm looking in the chat okay does anybody know what I'm missing here well one thing is maybe I just need to uh change the permissions oh that's all I needed to do and now you see the image file is there crap okay so let me remove that file it's not there anymore let me uh uh oh it's working I uh I don't know what's something to make it not work no it's still working uh whatever ah shoot yes thank you oh plus X I like that better okay thank you sack Fab for correcting me all right I'm I'm just GNA have to frustratingly um splice this video back together um okay and I'm going to hit record okay I did forget a crucial step which is that I have to fix the permissions on that file to make it executable and a way I can do that is by chod plus x uh the file's name is Rainbow I don't know why I said plus X when what did I do wrong there sack but I'll just go back to 777 which makes it executable uh so let me try this again uh okay so I did miss a step there which is that um the the the permissions of the file I have to set the permissions to be executable which I can do by saying chod 777 uh rainbow and now I should be able to say do SL rainbow and run it and it did something it finished and now let's type LS and we can see look at that there is a file in there now called output.png so if I go in here and hit refresh and we go grab this file and I download it to my desktop and I take a look at it you can see this is the image that was now generated on the server so now we have the um processing sketch as a exported Linux application running on the Amazon ec2 instance boy this is I know this is like 20 some minutes into this long tutorial but we're so close now to actually making the thing run it's very exciting okay so now if I go back to here one thing you'll notice I'm going to go back to the code is remember this this was the command that I had for running on my Mac to execute a processing sketch using processing command line processing Das Java but now that it's a Linux application the only thing I need to do is actually just I change that command to this rainbow only that's not exactly right because it's in a different directory and so I'm going to go here and um I just need to make sure uh um I I have the folder so I think actually I can just do this rainbowrainbow and uh now I've changed the code and since I changed the code I also need to reupload the code uh to the server so I'm overwriting it continue so now that new code is running on the server and I should be able to go back a directory so now what's here we have bot. Js which triggers the processing application which is in rainbow and communicates with the Twitter API and po post a tweet so let's see if this works image bot is starting it worked and now now if I go here and look at the bot we should see 7 seconds ago this particular image now I want to make sure it's really overwriting and making a new image so the only way I can think to really do that is to um go into the processing sketch for a second and uh change this to like a green value so let's make um oops you can see now the color should be green and I'm going to uh export this export application as a Linux application go into here take this and I probably shouldn't be doing this right now I'm going to upload it so I'm replacing it here we go so now I uploaded the new application and I'm going to go into that directory I'm going to whoops change the permissions again you don't ever need to do this I just want to really make sure it's working which is risky because it might not be I'm GNA go back up a directory and I'm going to say node bot. js image bot is starting it says it worked but I'm not entirely sure it overwrote that file I have a bad feeling it didn't ah it did okay that's magical so it does work so um and I can run it again now this particular bot by the way you noticed it just quits it only does it once and you can see we got another one these are two even though the this the same color scheme they're different I I should just make a a processing sketch that makes a much more recognizable image but here's the thing um uh what you want probably is your Bot to be running continuously so the one thing is just to add set interval to the code um but the other thing that you need is to use a tool known as forever so this is the last piece that's on um that's on this particular uh walk through so in other words what you want is for the node app to run forever in the background even when you log out of Amazon uh your instance and forever we saw that this no Huff thing is a way of doing it which is also a way but node has its own way of doing that which is something called forever so um I can say pseudo npm install forever G so this is a node module that's not associated with a particular node application but a sort of global thing that you would run across a lot of applications so if I copy that here that's going to install this tool called Forever and then um it's gonna I'm do my in Forever install dance uh and then uh and then I can now um start and stop things I can say forever start bot. JS which is running it uh and you know you can set all sorts of parameters like you know how long should it be up for how long should it sleep and all that thing but I'm just letting it use the default and another thing I can type now is forever list I think and you can see um let's let's hold on let's make this a little bit more easy for you to see uh forever. list and you can see that uh this is the particular process that's running no. JS bot JS so if I wanted that one's just running now forever it's not tweeting forever because the process is not set to do that but I could um I can do things like say forever stop all I believe which just stopped everything so now if I say forever list again there's no forever processes running and I can say uh forever uh start again um so there's lots of different ways so so this is what you want to do you want to and so if I set that running and I log out my bot is now going to be running Forever on that Amazon ec2 instance this is like probably one of the longest tutorial videos I've ever made it was completely sort of like frantic and a little haphazard this is probably hard to follow probably to be honest with you this page of instructions might actually make it easier but let me just review to recap what I covered at this particular very long tutorial which is that first thing you want to do is create that server instance right you need to get a key pair a file so that you can log into it once you've logged into it you want to SSH into it you can connect to it from terminal then you want to do things like install node then you want to connect to it with FTP SFTP cyberduck being a tool for doing that that allows you to upload your files there once you've uploaded your files there you can run your Bot but if your Bot also runs a processing sketch you want to also install Java run these commands to create the fake display in the background then export your processing sketch as a Linux application and upload that once you have all of that there then you can use forever to run your node bot that triggers the processing sketch this is like the um the kick the cat that my father bought for tuu Z but anyway that that that that runs the node that runs the processing sketch that creates the fake display that runs with forever my father bought for anyway whatever um so uh all those steps and you've got your thing running so I've anybody actually watched this entire video and actually has a node bot running on an Amazon EC do instance successfully I don't know please send me a tweet or something or to let me know because um uh uh because that would make me happy um to hear that okay so I'm going to stop recording now uh I will in the description for this video link to the written instructions link to all the references you need and hopefully this will be something that's useful to somebody someday somewhere in the universe and record okay um I have lost 50% of the viewers which is no surprise this was kind of one of my like uh not so interesting um oh I missed the space for the plus X thank you um this is uh one of my um um you know the tutorials that I just sort of said I would do and been meeting to get to um but to be honest it is not not I mean it's just like not one of the more interesting are are uh ones but it it is what it is um okay what time is it it is um 1250 I think so I said I was going to um does anybody have any questions about the raspberry pie I think I'm going to come back to the Raspberry Pi this afternoon I'm going to take a break for lunch I'm just doing this all day by the way if you were wondering and I'm going to come back I know some of you might be late at night wherever you are in the world or maybe now you're just waking up um but I'm I'm I I'll Stick Around for another minute or two um five or 10 minutes even uh if people have a few questions they want to ask about any of that was there stuff uh also just you know I'm happy to just hear any feedback now is that is this kind of this not the kind of tutorial I usually do because it like involved so many moving parts and all these weird commands and I'm copying pasting and I don't understand half of what any of it means um but uh uh I see there are some things uh in the chat from before uh um but if people are just making comments but if anybody has any questions they want to ask let me know I'm planning to come back this afterno afternoon I'm going to see if the Whiteboard arrived so I can install it um because then maybe I could do some tutorials with the Whiteboard which would be exciting how is the white balance looking do I look like a a human being or like do I have like a weird orange color um okay I think an hour and a half um I feel pleased that I was able to get these two things off my list I'm just going to go look at the list by by the way uh while I'm here I'm waiting to see if anybody has any questions um uh so here deploying to ec2 this is basically what I did I did Heroku and ec2 I wanted to do a run it on Raspberry Pi tutorial which I might try to do this afternoon um and then there were some other other aspects to the twitterbot stuff that I think would be good to include as well um which I will get to um great uh thank you Dale um nice to hear that feedback um okay um white balance it looks okay thanks Sam okay so um can you tell how to host a website locally in a network okay that's a good question actually so I could do that right here right now which is that um uh if I um so uh okay so let me go back so if I had a um so if I had a node program that was a web server I could just run that node program right here and then this laptop this thing that I'm using right here you can see there's a laptop here uh sfpc that's where I am um this laptop will become a web server and I actually have another laptop over here that I could then connect to and see the web server and I I'll show you kind of um a little version of that real quick so I'm not going to write a node server I don't have that at the ready but actually Macs uh come with python preinstalled and python allows you to run a web server so if I were to just go here um I'm going to go to any one of these um uh folders I'm going to just go into this folder here and a CD into this directory so let's say in this directory these are all my files from my website they HTML files CSS files all that stuff and if what I and and now I want to run whatever my thing is that's a web server so you oh whoops okay I need to let you guys be able to see this um so I want to run so here is one way of running a web server on a Mac but you know node programmer can run a web server any you can program your own web server in any number of languages you can download things that run web servers but I'm running a web server so you can see the web Ser web server is running running on 0.0.0 meaning this computer Local Host on Port 8000 so if I go to my browser and I type in Local Host Port 8000 that's the URL for this particular web server I can see it here and I can go into here and I can click here and I can see like this is a page that's running one of my p5js examples so now the question becomes that's running on this particular laptop what if I want this laptop to access this both of these laptops are on the same local network so first thing I need to know is um not about this Mac if I go to system preferences um under network uh and under uh Advanced here actually you know what it's right here WiFi is connected and has this particular IP address this is actually going to become quite important when I look at some Raspberry Pi uh tutorials because I'm going to connect to the Raspberry Pi in a similar way so what I need to do now is on this lab laptop I need to typee in that that IP address into the into the um browser so I'm going to do that 192.168.1.1 191 but that's not enough because I'm running the server on Port 8000 so colon 8000 and you can see here I don't know if you can see you probably can't see this but if I go under forces under one of the examples I don't know if you can see this but this is that web page running I've messed with the key by like Shining Light at the camera um but so now I have this laptop connecting it so there's a web server here and the other computers are connecting to it like it's a web server hopefully that answered that question that's kind of its own little tutorial itself I should have hit record um okay I am now going to uh pause for a second and look at some things on my computer while I wait to see if there's any other questions I made 16 oh boy I think that twitterbot might still be running on Amazon ec2 or did I just do it so many times nine minutes ago that's weird I wonder what that twitterbot is doing I should make sure it's stopped uh oh okay it is stopped maybe it did have oh yeah I just didn't have the set interval I haven't commented out that was silly me I should have put that back in it's in the code there um notice that okay um all right so I'm gonna take a lunch break Tuesdays and Fridays are currently my days Friday I have actually some other stuff planned this week so I'm going to see if I can do some more recording on Thursday maybe this week if I have time but I uh as for those of you who might not be aware I'm kind of trying to spend more time uh this semester while I have a break from teaching my usual load of classes to make many video tutorials um and I have a list of things I'm kind of tracking here uh Chrome extension tutorials get tutorials more other things um so uh send me feedback Twitter at shiffman is the best way to reach me um I I'm not really uh uh and also if programming questions it's great if you use forum. processing.org for processing in p5js questions um and I'm going to try it's 100 I'm going to try in about an hour or an hour and a half to do some more recording for lat this afternoon around 230 so somewhere around 2 or 3 Eastern Standard Time um so send me feedback send me your weird gifts that you make of these videos if anybody wants to do that um and um that's uh that's it for for right now I will be back this afternoon okay um see you all I'm G click I click a button over here and then I go away I think