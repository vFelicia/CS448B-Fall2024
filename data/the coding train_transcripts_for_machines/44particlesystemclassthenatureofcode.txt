we are ready for the next step in a manner of speaking we've conquered the arraylist right we know how to add stuff to it we know how to delete stuff we can look through it and access all the elements we can manage the size right we now have this resizable collection of particles we can add subtract do it every one this is a great step but we have another big step forward we need to take and let's think about why let's just let's think about why we need this next step then I guess I haven't mentioned yet what it is yet so take a look at this example here so here's a processing sketch running notice there is nothing in the window but I can grab the mouse wrong mouse I can grab this Mouse and I can start clicking and everywhere I click I'm adding a particle system right a particle system is a collection of particles this processing sketch is a collection of particle systems I could have like more than one processing sketch which are a collection of processing sketches which are collections of systems which are collections of particles right we could we could do this forever and I think I said this in the last video I apparently have some weird obsession with systems and systems and systems but what's the point here the point is that in order to do this we need to take this idea of a particle system and encapsulate it into a class we need the particle system class right we want we have a very simple goal here which is to have a sketch that looks like this one I mean look at that code it's so like there's just nothing there it's just one particle system we don't even refer to an individual particle anywhere here it's just make a particle system add particles run it right this is what I mean our whole life here is just about I mean look at the indentation it's just a few lines it's so nice and compact cute little code right this is where we're going so how do we get to this point how do we make this program work this is I expect this hopefully won't even take us that long this is going to be I'm really for the record of the shortest video yet because apparently I take way too long if some of these are kind of slow okay so let's think about that okay so what do we know that we have we know that we have a main program right the main program is going to have set up and draw on it and if we look at where we left off in that example we had that we built in the last video what was in setup and draw all this stuff about the ArrayList all that kind of stuff right so that's not well we don't want that anymore here's setup and draw this is where we want to have just our reference to the particle system okay so we know we have a class called particle right the class called particle is the individual object location velocity acceleration update display lifespan all that stuff about an individual particle so you know all the vectors etc etc that's our individual object the thing that we're missing that we haven't done yet in these examples is create the particle system class I'm gonna call it particle system what is in the particle system class the main piece of data in the particle system class is the ArrayList call it a for simplicity on the board right this is the innovation here we have a class that describes a singular entity then we have a class that describes a list of those singular entities this is not rocket science although we could do a rocket science emulation with this with that particle system being the smoke that comes out of the rocket this is rocket science anyway but what I mean this is this hopefully is fairly intuitive and somewhat simple and that's kind of my goal for it here the thing about it is it today it's just Minh to practice this I don't know hopefully we're doing something useful here right so this is what we got so let's think about what kind of methods might we need in the particle system and you have to ask the question is this a method that deals with an individual particle or a method that deals with the system as a whole and we could think about what that might be what's interesting about it is we might write a method in here called display right we want the system as a whole to display the particles but there's a method called display in particle which actually draws the ellipse or the image or whatever it is we're drawing so what we want to do in the particle systems display method is loop through all the particles all right so essentially I kind of went off on it I totally organized and I would but if I start over I would do it better but it's too late now this is the point of what I'm staying here is that there's gonna be a lot of methods in the particle system class and those methods deal with all of the particles the methods in the particle class deal with an individual particle and that's kind of the organizational principle we're gonna go through here so that we can have a singular particle system in our main program so there's not enough room with this white board here to try to like mark it all up out here I think hopefully this kind of diagrams it out for you and we can see now let's try to add these pieces to our program let's take everything that we had and set up and draw and put it into the particle system class it's trying to do that okay so here we are and let's take a look at this so first thing I want to do is add a new tab and I'm gonna call it particle system and I'm gonna say class particle system and I'm gonna just put something here for the constructor and I'm gonna say I think we need an update method and I think we need a display method great so we're gonna update the particle system and display the particle system and create the particle system so let's go out and look here uh what is the main piece of data for the particle system class it is the ArrayList what happens when we create the particle system we create the ArrayList what happens when so then we've got this whole big function with all that stuff you know it's fine I like it the way it is we could have a separate update and display method and sometimes you might want to do that but let's actually just make things simpler right now and just make a run method and do this so now what we've done is we said hey all that stuff we had in the main program create an ArrayList run the ArrayList remove things from the ArrayList all that is now happening in the particle system class and we can see here we can make a particle system object new particle system and now when we run this AHA particles that add new particle it doesn't know how to add a new particle to the ArrayList particles because that ArrayList particles doesn't exist as the sort of part of the main program anymore the ArrayList particles is now in the particle system class so what what what does this say to us maybe we should add a function called add particle and what does that mean that means in the particle system class we could write a function called add particle and we could then add a new particle to the ArrayList so you can see we're managing all the possibilities of the ER of the particle system in the particle system class that's what the ArrayList is that's where we can add new particles that's where we can look through a big display remove etc particle systems particle objects with particle system particle in fact acknowledge we're not recording anymore cuz I feel a little winded and tired so you can see here we go we've got it this is now that example all we did was take all of that stuff out of the main class and put it into the particle system class so here's the thing there's a couple things missing from this let's say what we want now I don't know if I minimize that is to get back to this particular example right the difference is here we now have more than one of them look you can see a clue the main program now has an ArrayList of particle system objects so obviously this example is there it's example 4.4 and then in the nature of code book so you can just go look at that example but if you have the time and wherewithal what I would suggest to you is try go look at the simple one which is 4.3 and which is just a single particle system and try to make this list of systems itself so start with the single particle system and yourself try to make an ArrayList of them the thing that I just did here that's missing is the particle system is always at this particular location because every particle is is initialized with this particular location so one of the things you're going to have to due to these examples to make them more flexible is the particle system probably needs a variable to keep track of it's sort of origin location where is it giving birth to all these particles so that might be something that you add here in the particle system class P vector I think in my examples I called it origin so maybe the particle system should have an origin variable to it although it doesn't necessarily mean that in other examples of a can I just like cut this video off a certain point alright anyway so this the end so take it take this as an exercise what we're gonna do in the sort of last there's a couple things we need to do still we need to look at hey we learned all this stuff about forces and objects experiencing forces in the world we don't have any of that here so I want to add that back into these particle system examples as well as look at this idea of inheritance and polymorphism which is a way of having a system have different kinds of particles within the same system even they look different absolutely different how do we manage objects that are related that are they're kind of all particles of some similar functionality but they also do different things okay this one very hot under these lights and everything's gonna be fine you're gonna be fine I'm gonna be fine and I'm gonna press the button no okay goodbye