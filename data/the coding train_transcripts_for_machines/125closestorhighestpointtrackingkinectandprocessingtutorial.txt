hi in this video I want to look at an algorithm that lets you do the kinds of things like find the closest thing in the room or find I'm doing all sorts of like vogue poses find the highest thing in the room I don't know why I need to do that for the highest thing but whatever or and this is a similar type of algorithm if you've ever looked at like a color tracking algorithm find the brightest thing or find the most red thing in the room I like to refer to this as like the worldrecord algorithm which means like I've got to look at every single pixel and keep track of which pixel is the record holder and hold onto that record holder the closest thing the highest thing the most read thing and when I get to the end have that XY coordinate that I can use for something else so a lot of things that you might do with the raw depth data of the Kinect could involve this like if you know the person is always standing like this in a fencing pose what is where is their hand because their hand is always the closest thing or if you want to determine if a person is moving up and down how do you find the top of their head what's the highest thing within a given threshold so let me go over to the whiteboard for a second to just talk in generally speaking about how this kind of algorithm works and then we're going it in a couple different scenarios okay so as with just about everything that involves images and pixels or depth points you've got this grid right and the grid has a bunch of X's and a bunch of wise and there's always this loop all the examples have this for every X for every I look at every pixel I've got some glare here so hopefully gonna be able to see what I'm reading but if they shout at me just shout at your computer screen or ever you're watching this and I will hopefully hear you someday if you can't read what I'm about to write but but so the way that this works is you need to find the record holder so what let's say we wanted to find the the closest thing so remember the depth values are between 0 and 4500 so we could start by saying the initial record right the world record for the closest thing would be 4500 because that's the furthest back so any pixel that beats 4500 is by definition the new record holder so we have to say something like if I have the current depth in a variable I need to say if that depth is less than the record then the record is now that depth so this is the core algorithm for every pixel is the first one beating the record it is that's the record holder is the next one beating that record no is the next one beating in that record no is the next one being that record yes okay that's the record holder and while we're doing this we could also keep track of you know the record X and the record Y so if we went every time we get that new record we store that X&Y so the time we get to the end of this loop in those variables are the X and y that win this record okay so to demonstrate this example now what I have is I've adjusted this example a little bit and what it's doing now is it's showing you both the depth image as well as coloring particulars of that depth image this pink color that are within this threshold so now I need to figure out what pixel in that threshold is perhaps a record holder of some sort of record so we'll look at the closest thing and also the highest thing and I'm pretty sure the closest thing is going to not work that well but the highest thing I'm hoping is going to work pretty well so let's do the thing that's not going to work as well first and let's just look at a little bit of what's changed in the code just to show you so first of all I'm looking at the depth image as well and then what I'm doing is if the pixel if this on depth value is in the threshold I'm setting that particular color to this pink value if or purple the hell you I don't know what color it is can't tell if it's not then I'm just pulling the color value from the depth image itself and updating the pixels and drawing the depth image so that is why you are seeing this particular result it's essentially what I had earlier in the previous examples with just also adding in those depth pixels instead of black so now we need to figure out this way about getting a record holder so the first thing we need to do is say what at the beginning what's the record distance I'm looking for the thing that's closest so the thing that's closest the record to start would be something really really high so the record would be 4,500 that's as far as it passes something is possible to be from the connect then I need the record X which will be at 0 and the record Y which will be at 0 so I want to test every pixel x and y if it beats the record if it does beat the record set our X to that new X and set our Y to that new Y and then draw a circle at that record value at the end so right here I'm going to check only inside the threshold you know in a different scenario where I had the connecting like an open space and a sort of flat wall and people just came into the middle I don't really need to do this Thresh holding thing because I'd but there's so much stuff in this room there's a desk there's computer there's a wall that it's not so I think using the threshold here helps it be a little bit more accurate so I could say if that distance is less than the record then the new record is that particular distance right for every single pixel does that pixel beat the record if it does I've got a new record and if it beats the record then I need to save that particular X&Y in our X and our Y so all we need to do this kind of record algorithm is a starting record starting our X and our Y and then every time we beat that record save those two values and then at the end I can draw a circle at our X and our Y and I'll just make that circle white so it kind of we pick it up and we can see now ok now first of all you can see that circle is just jumping around that's because first of all there's very little that's like stray pixels that are that are making it in the threshold so now you can see that it's kind of working now you can see that white circle is following my hand now notice this is much less accurate than what I did before with the sort of average section of pixels mostly because anytime you're looking for a single pixel it's not such a great thing I kind of want to find a group of pixels that are like beating that record but that aside you can see the basic idea is working but it's really like if I come and stand in here like oh there's a lot of me that's in the threshold but my head actually I'm bending over is closer so you can see if I move my hands out they're a little bit closer if my shoulder comes in my shoulder is the closest thing so you can see it's jumping around a lot but it's always finding a particular pixel that is closest to sort of demonstrating the idea but let's change it now let's have it fine I'm going to stand here to sort of let's have it find the pixel that's highest and I'm a little worried we're gonna have a little bit of an issue because you can see something jumping to the top but let's see because there might be some stray pixels that is picking up that are kind of but let's see if we can get it to work so what is the record now so the pixel that is highest is could be zero the record would start at the height of the screen so I'm going to comment this out I'm going to leave both of these in this example I'll try to post this code somewhere we could download it put a link in the video description so the record would now be the height of the window or I could really say it really makes sense here to say depth height so that's the starting record and now if inside this threshold distance that's not the depth what I want to know is if Y beats that record so if this particular Y pixel is just I'm looking for any pixel inside that threshold that's very high then I've beaten that record so record equals that Y value save this save the X and the y and then draw it so the same exact idea I'm just changing what the test is like the height is the Y value if it's less than that record so now we run this and we can see it's picking up a lot of noise but if I come in and bend down so there's too many pixels up top you can see that it's flickering there's too many pixels up top that are pulling up some sort of value so I'm going to try to do like a little bit of a hack here again we're going to say and was it let's skip let's skip the first like 50 pixels I'm only going to look let's see if this helps there we go so now you can see I'm getting the top of my head pretty accurately if I move my hand up here I'm getting the top of my hand so if I had a particular project that wanted to have something move based on whether I'm moving up and down this is going to do some X squats here you can see that this works so you know I had to sort of like calibrate and do some goofy things but you can see this is a very simple way of just finding the top so like people always get obsessed with like finger tracking like let me find the finger but you can see how accurate this is I'm just getting like the tip of my finger now there's no finger tracking here just like if I go like this it's getting the top of my elbow but if you tell people to stand like this and wave their finger you can see how like kind of super accurate that tracking is just for looking this is like the simplest thing ever I'm just looking for the top pixel inside this threshold so hopefully this shows you a few types of things you can do we've seen a range of things just sort of visualizing the 3d data from like looking for threshold to get in between for tracking the height of something the average location um this is where I'm finishing this video set today but there will be some more ones I guess who knows when you're watching this the more ones might already exist the more ones and you'll see them in the next video okay so thanks for watching this I'll be alright that and I will talk to you soon okay good bye