in this video I want to look again at the parentchild function so it's a bit of a review of that function but I want to look at it in a slightly different context before the main reason that I looked at the parent function was to take a Dom element that I generated in code and insert it into another place in sort of the existing HTML so we just find and and to do that you just you reference the ID of an HTML element here I want to look at how do you use the parentchild function with elements that you've generated in code which is ultimately the same thing but it's another chance to look at it and just also it's to make the point by the way the thing you can pass into that parent or child function is a p5 variable that has a reference to a Dom element so that explanation may not have made any sense let's look at an example that I've started to get some context here so actually let's just look at so what's going to be this is by the way the HTML file is empty so everything in this example I'm generating through code so first I made a pet make a paragraph that says this is a link it has a little gray background and a little bit of padding then I make a link and anchor tag with the word apples and I'm handling if you click on that tag with an event called add photo and that add photo function generates a image element boy a lot of stuff going on there so right first we have the paragraph element that's made here then I have the link element that's made here and when I click on that link an image appears which has happens down here image create image now this is important this is different than load image I'm looking where am I looking at this is different than load image load image is something I looked at in previous videos where you load a file and then draw that file into your canvas here the create image function actually makes an image Dom element just like you might type in HTML image source equals and this source equals could be the name of the image file or it could actually be a full URL to another image so this is a way of inserting an image as its own Dom element separate from drawing an image to the canvas on the page that's kind of an interesting topic of how you might do things with that in for another time but here just showing you yet another create function another HTML tag the image tag source being the attribute what is that images source and over here so we can see the result of all of this again I'm gonna look at the output here clickclickclick so what I want to see happen is I want this beautiful grey padded box I want the link to the apples the apples clicking thing to be in that box and I want those apples to get inserted also in that box I want everything to be in that box so here we look at and say P is the object that is the paragraph a is the object the Dom element object which is actually a p5 element object a is the link and image is the image so if I wanted a to go into P and this by the way I get this confused all the time which one is it a dot parent P or is it P dot parent a you could make a case for both of the hoes right you could make a case for it you want a to be parented by P or you want P to parent a which one was it I honestly can't remember cuz that I'm even like asking this question I confused myself so Mike let's go with my first instinct which is that I want a to have as its parent P the action is being applied to a and the action is make its parent P I'm pretty sure that's right and you can see there that worked so now the apples link is inside the paragraph so the difference is it appears up there rather there's a separate thing below and now when I click apples those images get added below which actually this may be a nice effect but what I could say is also like image dot parent P so now and I've got a problem again as soon as I do this what's wrong this is not a global variable so I don't have access to that variable scope down here so I'm gonna make that of global variable and I'm gonna say P equals create P and I'm gonna run this and now when I click apples those images are now also inside that paragraph element so this is just and incidentally let's just let's just remind ourselves I could have said P dot child image and this if my mind is working correctly these are identical I want image to be parented by the paragraph or I want the paragraph to child the image right so that's the action that's the way of thinking about it honestly a better way of thinking about it would be to look it up in the p5.js documentation I will clue a link to that below and I'm sure it will say it there but this is something that certainly does confuse me but in general I'd stick to the parent function and there you go so this is a scenario that you are looking at now I I want to look at this also because I think we could kind of raise the stakes here a little bit so this is probably a good place to stop watching this video but I'm gonna go on anyway and what I'm going to do is I'm going to make a whole lot of these like what if I make a whole bunch of these let's think about this for VAR I equals 0 I is less than 5 let's just do 5 right now I plus plus and I'm gonna put a loop around all of this code and I don't I don't want the global variable anymore and here I'm gonna comment this I'm going to comment out what's going on here so first I just want to see the result here so the nice thing that you can see here is this principle still applies right now we're making a paragraph a link link gets parented by the paragraph another paragraph a link link gets parented by that paragraph now for you I might say as an exercise could you make each one of these paragraphs have different content could you make one a link called apples and one include link called blueberries one link called bananas bananas depending on where you are in the world but so that might be something that you add yourself and maybe I'll work on that another time so but the point of this now is this is a nice opportunity for us to remind ourselves that now this add photo call back when it's triggered what if I want to do the same thing what if I want to get the images inside right when I click on this one the images should appear inside that one when I click on this one the images should be here inside that one this is a pretty tricky problem but it is doable and it uses something that you haven't used before that I'm excited to show you so let's see how we can make this work so the question is what do I put here so first let's ask the question what do I even have access to well I have access to the keyword this do you remember that keyword this what is this referring to it's referring to the Dom element that triggered the callback add photo the specific one a so the link so this would be parenting the image by the link and we could do that and let's run that let's see if that at least gives us something so that actually is working the weird thing is this is actually part of the link which is kind of interesting effect all of these are as part of that same link I click on any of them I keep adding but I wanted them to be separate just insert it into the paragraph right so this works it's nice how could I get access to the paragraph okay let's let's make a diagram so over here let's think about what's actually on the page I have paragraph which has inside it an anchor followed by another paragraph which has inside it an anchor so what I previously just did is I took that image and inserted it the image of the Apple and inserted it as part of the anchor but what I want to do is I want to take that image and insert it as part of the paragraph paragraph is a child of body anchor is a child of paragraph and my new image I want to insert as a child of paragraph but the only thing I have is a reference is to this well what if I could reference this anchor tag and ask hey who's your parent who wears here it's like having you're at the playground and there's a child who's doing something and you say where sure you don't want to know about this but I spent a lot of time with my own children in the playground of this sort of like relates to it in a second but then it's like a weird thing that I'm talking about so back to this I want to know who's your parents a and so there's a way that p5 will give you that right if I say parent with a argument I'm saying assign this elements parent to this other element if I say parent with no argument parent blank I'm asking p5 to tell me who the current parent is so look at this come back over here I can say now I can say var paragraph equals ma sorry this dot parent this is me asking this you're the anchor tag this anchor tag who is your parent Oh your parents is this paragraph great make the image part of that paragraph and I'm now going to run this and you can see I mean it looks the same but this is no longer a link so it's now been parented by the paragraph and by the way so this is sort of the end of this except I actually have a couple things I want it's there's another thing I wanted to add to this which I think would be interesting oh I got this is great I'm gonna add something to this what I think would be interesting let's just do that now I have something else that I want to show you towards the end of this video already ten minutes in but there's a few this is this is going sort of well so I'm not ready to stop just yet so let's let's add I wouldn't want to add to this is something like okay so what I want to add and let's put this in the HTML file which has some extra style stuff that I'm not take that out let me add a button button ID equals clear clear and I'm say clear images so I want to add to the body of the page and I'll put it inside a paragraph just so it has some padding around it I want to add on to the page a button at the top and that button is clear images and when I press that button I want to remove all the images that have been added how do I do this now in theory you know there's a bunch of let's think about this for a second oh so there's an itch there's a there's actually a quick way that I could do this without even the way that I was thinking I was gonna do this so there's two different ways we can think about this number one is let's come back to this diagram now that this is working let's think about what we have a paragraph with an anchor inside it and an image and maybe another image right another paragraph with an anchor inside it and an image right we have a bunch of paragraph elements with things inside of it and I want to just how can I find all of the images on the page that's right give me all the images on the page well here's a way I could find all the images on the page you know about this because I did this in a previous video select all IMG select all IMG would suddenly give you an array of all the image elements anywhere on the page no matter where they are in that page so this is useful if I could get all those images elements maybe I could do something to remove them all for the page so while I could do it this way and I'll say you do it this way after you watch this video if you're falling along do it with select all as an exercise I'm gonna do a slightly different way because sometimes you might not be able to easily use select all and what you're doing what if instead you just kept your own array of Dom elements and this is not an uncommon practice actually I don't know what a common or uncommon practice is because I don't do any of this for real I'm just figuring it out and making videos about it so it's not an uncommon practice in my making video examples about it anyway so if I come back to the code I might save our images equals array so I'm creating a global variable that's an array where anytime I make one of these elements I'll store a version of it so I have this for myself and in that case anytime I make an image element I can say image dot push I'm sorry images dot push image so this is me adding that image object to this array which is a global variable so now anywhere in this code I have access to all of those image objects this can be very useful because for example I could I could do something I could remove oh I could remove them one at a time which would be kind of an interesting thing to do we could we could do that or I could remove them all at once I could apply a style to all of them let's look at just removing them all at once so albeit this is an array that I could fill would select all I'm making it myself so let's take a look at how I might do this so first of all what's on the page there's this button how do I get access to that button that button is made in the HTML file with an ID called clear so I just need to use select so I need to save our button equals select button oh no I called it clear and then I want to handle when it's pressed with I know clear stuff I'll write a function called clear stuff and here is where I can do a loop I already have that array that halls all the image objects in it for index I from 0 to the length of the array so for every single element in that array what was it called images length I plus plus now this images index I dot something so right here now I know it's showing me syntax errors but this is now me saying I whenever I made an image element I put it into that array hooray for me so now I have this like back it's like a back up it's like we're done didn't see like I just I'm making all these elements and in case I ever need to refer back to them I've got them all on this array sure I could get them with select all but I'm really cautious and worried about it I'm gonna make my own array so now I could apply a style to them I could change their source to show a different image but just to demonstrate removing stuff that's there's a p5 Dom library function called remove and remove does is actually removes it from the page which by the way is different than hide so I could use hide which is going to hide it make it so you don't see it but the element is still actually there as part of the sort of like active page it could show it again if I remove it it's gone it's deleted it's not coming back so let's not worry about hide so much right now let's add remove so all that I've done is now anytime I add one of these images all of those images wherever they've been added all of those images are now part of this array so now all I need to do when I hit clear is it will loop through the whole array and remove them all and there you go and now I can add some more again and I can hit clear and it works again now one thing I probably should do is once I've actually removed them I could probably reset the array back to blame worked anyway but I might want to just sort of like clear that array because I don't need references to those objects which have now since been removed so this is hopefully showing you a bit more of stuff that you can do this is calm showing you again just to sort of recap a little bit I can make stuff in the HTML file and access it through select by an ID like I did with that button I can make elements dynamically in a loop like I did with create P and then I could also make other elements parents after those elements have things inside then later I could make elements that are based on an event and I could know which Dom element triggered that event and then I could know what's the parent of that Dom element that triggered the event and put other things in that Dom element there's a lot of pieces to this example but hopefully this is showing you kind of a bit of the spectrum now of how you might write HTML write JavaScript to generate control style select select all that sort of thing I think I have two more videos that I want to make one is about how you might dragon drop a file into the browser and use the contents of that file and then I keep looking over here because I'm gonna at the time and then another video just to show you about sort of controlling interface elements kind of in a zombified way so they just like act on their own which i think is kind of interesting so that's the end of this particular rather long 17 minute video and i'll be back with another one