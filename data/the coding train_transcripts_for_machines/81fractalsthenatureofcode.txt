hi we're going to talk about fractals today fractals what is a fractal okay let's for a moment um think about the think about back in time sometime in your life where you were sitting at a chair with a little desk in front of it and you were studying geometry middle school high school last week who knows you were learning about circles and polygons and rectangles and lines and the relationships between angles and triangles and sides of shapes all this stuff very important very interesting but now let's think about and so let's think about those shapes that you learned in geometry and how they might describe things we find in our world okay so over here I have the top of a cup of tea and maybe you're would say to yourself that looks I mean you can't really see look it disappears with the white but I can put it right here it looks just like a circle and over here I have this eraser and if I look at this eraser it's rectangular so to some extent these idealized forms these ukian GE geometrical shapes can describe the world we live in I'm staring at this camera it's also very circular and rectangular but think about nature and I have this I don't know if this is going to work but think about nature look at these clouds and I don't know look at these crazy coastlines and these U this sea shell thing and the waves of the water and look at these trees and look at all the lightning and all this stuff and this man is talking about fractals this is by the way is from PBS hunting the hidden dimension I highly recommend you watch that if you want to kind of dive deeper into fractal stuff think about all that stuff that worked perfectly just the way I imagine these are not shapes that we can describe with UK idealized ukan forms we can't describe a lightning bolt I mean maybe it's a series of connected lines but the overall quality of the shape mountains coastlines lightning bolts these are things we need a new type of geometry to describe and it's not so new but it was new in 1975 not actually it wasn't n really new in 1975 the fractals have been around for a very very long time but the term fractal came about in 1975 with the publication of this book I mean you know condensing history there I'm sure there the term came before the book but um the fractal geometry of nature by Ben benoa Mandel BR who coined the term fractal and I'm sure many of you have seen the mandal BR set which is a very very famous fractal um shape I don't have a prepared image to show you but um so what I'm talking in circles here what we want to do today is look at what is this thing called a fractal that describes somehow the these shapes that appear in nature and if we could understand what a fractal is then could we write code to implement algorithms behind that would generate fractal patterns that's what we're going to do today it's very exciting so um let's think so let's I want to define the term fractal a little bit more formally perhaps so a fractal is a shape that when broken into parts right fractal from the Latin fractus meaning broken a shape that when broken into Parts the parts look like a copy of the whole shape now what does that mean exactly so a very common scenario which we'll actually make a processing example that implements in a later video is a tree so let's say I draw a line here and then I connect that line with two other lines and each of those two lines I connect with two other lines and each of those two lines I connect with other two other lines I'm like all these lines a little bit shorter every time I do it and I could sit here all day and I would be a very happy person actually just but I think I'll takeing up too much time in this video so I'll stop but you can see here even though I barely scratched the surface of how many times I can keep connecting these lines if I grab this particular branch and bring it down here and kind of rotate it so it faces up what do I have here I have this shape which is essentially the same as the bigger shape we started with this is is the concept of self similarity very the sort of key quality of fractals fractals are selfsimilar meaning the parts of the shape look like the whole shape and here we have an exact copy of the whole shape inside the part which is an important distinction this is a sort of exact fractal um one thing I should point out though that self similarity isn't just enough to make a fractal there is a selfsimilar shape if I take a part of that shape this little line segment and zoom in on it it looks like the original line but this shape doesn't have I would say which is a sort of important thing a kind of fine structure at small scales so this is an important principle of fractals that self similarity isn't just enough but I want to return back to this idea that this was an exact fractal let's take another scenario now this isn't a shape in nature exactly but let me let me let me um pose this scenario okay I'm going to draw for you because I have this I I I was I've been checking the stock market a lot recently not at all but um let's say we pick a company Apple and we're going to draw the price of Apple stock this is what's been happening to Apple stock maybe it's been going down recently there we go this is a graph of Apple stock now let me ask the question over what time over what time period have I graphed here is this a week a month 10 years a day a minute a second you know trades happen very quickly we don't know the answer to that because let's just say for a second I said this was one year what if I were to go and grab this section which is maybe let's say one month and zoom in on it maybe we might have something that looks like this the parts at at any level of Zoom the shape has the same quality to it now this though is not exact right the pattern that's zoomed in on this part of this time period of the Apple stock is not the exact the one one month shape is not exactly one year but it has the same quality and this is often referred to as a stochastic fractal and the the quality of the shape is kind of has a a random or probab probability component to it so this is an important distinction as we look at different algorithms for generating fractals and making things look natural to what extent do we want kind of exact copies or copies that approximate the whole with some kind of range of probability so um okay so these are the these are uh two important um aspects of a fractal but the key thing the key element that I have not mentioned which will lead us to this path of making all these processing examples that are going to be wonderful is the concept of recursion fractals have are generated from a recursive definition now the idea of of recursion is a beautiful and elegant thing when we implement it it makes our code so short and it's so elegant looking and it creates this beautiful pattern but it's a weird thing and it's a thing that doesn't immediately make sense to us and I want to look uh first at a kind of just pure mathematical scenario where a mathematical concept is defined through recursion recursion means a a function a recursive function is a function that uses itself in its own definition it's it's like saying hi it's like very warm under these lights and people ask well what does it mean for it to be warm and I say oh the definition of warm is the feeling you have when you feel warm that's probably a terrible example for all sorts of linguistic reasons but I'm using the term warm in my definition of the of the term worm worm which seems like a crazy thing that you shouldn't be able to do but in math and in programming this is actually something you you should be doing it's wonderful okay so what let's look at the classic scenario is factorial and I think we're going to look at this we're going to end this video and start to look at recursion in code next okay so let's look at um factorial so uh if you don't remember what factorial is let's just say for a moment right five factorial 5 factorial equal 5 * 4 * 3 * 2 * 1 we multiply the number five times every number that come that is that that is less than five all the way down to one right okay so now let's look at what four factorial is 4 * 3 * 2 * 1 oh interesting look this is the same as this right those match so I could actually say 5 factorial equals 5 * 4 factorial interesting which actually means I could say the factorial of any number n equals n * the number n 1 factorial faal look at this this is it's crazy this is the definition of factorial the definition of factorial is n factorial equals the number n * nus one factorial have we really said what factorial is here I mean it looks kind of like we have it but we have actually because if we play this out more then we're saying ah well you know what this really means 5 factorial = 5 * 4 * 3 factorial which means 5 factorial is 5 * 4 * 3 * 2 factorial which is 5 * 4 * 3 * 2 * 1 1 factorial and actually we need to add something to this definition 1 factorial equal 1 and in a way this is our exit condition now I mean exit condition I'm using the term exit condition because we're about to program this stuff and one of the things we're going to see with a recursive definition is it's something like a loop right you could imagine write the code this is your exercise write the code to define the function factorial int factorial int n oh I'm kind of ran out of space there you need to return the answer well you could probably do this fairly easily with a loop a for Loop right what I mean 5 * 4 * 3 * 2 * 1 and you know I equals 5 I is greater than um Z iusus the result equals uh the result time I right you could imagine some where you say 5 * 5 1 * 5 2 * 5 3 right you have this Loop that's doing that try to do it with recursion a loop has an exit condition when I gets down to one stop looping the recursive definition where factorial is defined according to itself you call itself which calls itself which calls itself which calls itself that has to stop at some point not in theoretical fantasy land where we make fractal that go on for Infinity which is an important question but in real life programming world where we we have discret finite things we have to have an exit condition so this is what this is the principle by which we are going to generate fractal patterns instead of thinking in terms of numbers which is probably you know somebody would probably tell me I can't believe you started without visual imagery people need to learn visually so I don't know but um this is a nice scenario with numbers we're going to look what does it mean when we have a function which draws something which is defined according to drawing something so that's what we're going to do in the next video I had to open the window very hot I don't know if you hear the sounds of the street but um um but before we get to that video Try um doing this try writing the code for factorial and see how far you get and obviously there's an answer in the repository and I'll link to that below as well okay