hello in this video I'm here and I'm planning to look at the set interval function in JavaScript the set interval function is a feature of native JavaScript it exists for you in the browser that you can just use it without any other JavaScript library whatsoever however I'm going to demonstrate set interval in the context of uh using the also the p5js JavaScript framework um so let's review for a moment uh in my previous video I looked at the function called set timeout the function called set timeout was one where you would you would give the uh you would give you would I'm going to keep going sometimes I would start over I'm just going to keep going um uh you would give that function two arguments one ARG the first argument is the name of another function uh and something like a function called rainbow and the second argument is a Time the time at which you want that first thing the rainbow function to be executed so this would result in this function rainbow happening 2,000 milliseconds or 2 seconds later so the easy thing here is that okay well learn set timeout so why don't you learn now set interval set interval is actually basically exactly the same thing the difference is instead of executing rainbow once and only once 2,000 milliseconds later set interval will execute the rainbow function over and over again every two seconds every two seconds rainbow one two rainbow one two rainbow one two that sort of thing so let's think about a context where that might be useful so for example and I'm going to um I'm going to save this as I should have done this uh set interval and I'm going to remove my code that I had from the previous example uh just to sort of start over from scratch again and I'm going to run this code so let's just say here's a scenario that might be useful let's say you have some sort of interactive experience you've built for the web there's an animation there's a canvas there might be a lot of other stuff and you want to have separately from that a Dom element a div a paragraph something that has a timer counting down or something that's pulsing uh every few seconds with some with a changing color or something like that so this is a nice place so I feel like set interval is useful if you want to animate a Dom element now I'm feeling a little I got a little pit in my stomach here because there's also something called request animation frame which in a lot of contexts in particular in an anim context becomes an important thing to know and look at and I will get to that I will I will consider that as a possibility but right now let's just stay and assume that there's never a problem set interval and we can use it for the kinds of things that I'm going to demonstrate to you in this video so let's say for example that in uh I want to create a I'm going to just call it uh a timer for lack of a better idea uh and I'm going to say timer equals create p and I'm going to put uh just the text timer in it and I'm going to run this and you can see that now underneath my canvas I have a paragraph element with the word timer in it now one thing you that you are probably aware of is that remember draw is this thing that's automatically looping all over again over and over again and by the way draw I bet behind the scenes uses something called request animation frame just a suspicion I have um so I could say timer. HTML and one of the variables you get for free this is a P5 variable set interval is part of native JavaScript frame count this variable that I'm using right here is part of P5 if I add that in there what I'm seeing in that particular Dom element is the number of times the draw has repeated the frame count so you can see that there is this element of set interval happening of this repeating action that's the draw Loop but what if I want my program to do other things based on time separate from this 60 or 30 or whatever it is frames per second animation this is where set interval comes in and is useful so let's say what I want to do is I want to say set interval and I'm going to make up a function called time it and I'm going to say function time it and that is where I'm going to say timer. HTML what so what is the content I want to put in that HTML element I let's make up another variable count counter equals zero let's update that d element to include the counter variable and let's increase counter by one so set interval and let's do that every 500 milliseconds so half a second so you can see now this even though there are two things going on there are sort of two looping threads the actual canvas animation is just managed by P5 and the draw function and this particular Dom element is managed by me and my own use of set interval so there's a there's a there's a there's a few roads down here that I might like to go on like first of all you might think okay what happens if I want that Dom element to interact going on the canvas I could reset the counter variable if I click on something there's lots of possibilities here uh but let's start with something that I think is probably the most useful which is what if I want to start and stop this interval based on something else so one thing that's really uh important about working with set interval is the function not only starts this interval going but actually creates an a JavaScript object that stores a lot of information related to the interval so I'm going to add a variable called interval and a global variable and in setup I'm going to set interval equal to set interval so now when this function is executed I have a reference to that interval so if I ever wanted to stop it for example mous pressed I can say clear interval interval so clear interval by the way this is also a function part of native JavaScript and what this function allows you to do is clear the interval meaning stop it so uh so here we go and you can see that that interval is going one two it's very hard for you to see because it's very tiny but I can zoom in and see 10 11 12 13 14 now when I click the mouse I've cleared that interval and it stopped at 19 so how would I click the mouse again and have it keep going I think this would a perfect exercise for you to do if you're trying to practice this stuff so what I might suggest let me get you a few more U steps along the way there I'm G to I'm going to create a button and I'm going to say start timer and I'm going to say button. mous pressed and I'll say uh do uh you know start timer and in start timer I'm going to say interval equals set interval and maybe I'll make another function called stop timer clear interval Set uh clear interval the interval now you can sort of see here now if I'm running this oh it already I already started it right so if I'm running this this you can see now I've made this extra button and that button has a function attached to it when I click on it that actually makes the interval so when I click on it you can see that that now the timer has started and it's counting up so right so there's a there's like a bunch of callbacks happening here because Mouse pressed when you press on it triggers start timer which triggers set interval which triggers time it so when do we call stop timer so the easiest thing for you to probably do right now would be to create a second button which is stop timer and then the call back for that second button Mouse press would be stop timer but I think an interesting thing that you might do is what if there was only one button right what if there was only one button I just call this do Tim do timer and what I'm going to do is I'm going to say button. HTML is stoptimer so that what this is what's happening here is now when I look at this when I click Start timer it's going to go here click start timer it's going to go here start the interval and then change the H HTML to stop timer so you can see the timer is going and the button text is actually now changed to stop timer so the next time I press the button I want to clear the interval and change the timer back to start timer that text so I need some sort of Boolean variable or some sort of way of checking if the interval is going or not and if it is going I should clear it and change the che text to stop start if it wait if it is going I need to clear it so that it stops and then change the text to start if it isn't going I need to start it and then change the text to be stopped because that would be the next thing so I'm going to leave that as kind of an open question uh I will gladly in the description of this video where I link to the code that goes with this video I will gladly put the solution in there and if you're following along and you go and you go follow the links it's not there right in the comments of this video because that just means I forgot and we'll add it right in so hopefully this gives you a sense of of of how set interval works and how it might be useful to you but I thought of one more thing that is going to lead me to another video that I don't know whether or not I'll make it today but it's an important question technical difficulty but I'm back and the point that I wanted to make is here we are with this very simple scenario of a single Dom element uh Sor sorry a single Dom element and animating uh with counting up every 500 milliseconds so what if I wanted to make another what if I wanted to make another Dom element called timer 2 and what I want is I want this one to also animate or also count up but maybe at a different rate now certainly I could then have two counter variables and I could also have uh in addition to two counter variables I could have two functions I could have time at one and time at two and then I could call set interval time at one at 500 set interval time at two at 1500 but there must be a way to just generically say this idea of having a Dom element change over time based on set interval I should be able to do that in a generic Way by calling a function like animate Dom element with this value at this range and to do that you need something called a JavaScript closure so is a topic I've been threatening to cover at some point in a video and I slowly been wrapping my head around this like weird strange concept that is actually quite elegant and simple in the end but is a bit confusing to get used to this idea um so that's something that I will cover in uh the next video I guess U because I think in my idea of making a video about using uh set timeout to play a Melody um this idea of a closure excuse me will also be relevant in that okay so thanks for watching and I'll catch you in the next one