hi okay so what I want to look at in this video is a few different scenarios where we might start to have more than one particle and more than one spring and the thing that I really want to emphasize here which this is a like really fantastic example of so if you're not familiar with this project I think it's worth me taking 30 seconds of this video just to point out to you the existence of Nokia friends so Nokia friends is a project by Karsten Schmidt you know the creator of toxic lives and what you can see here is that looks like this is a kind of network of a whole bunch of particles connected with Springs and there's kind of this like skeleton here and you can see that skeleton what is that skeleton for skip ahead timing wise you can see here's a whole bunch together right it's for creating these cute little cuddly wonderful creatures that you just want to you know be friends with and happy with and dance around together with so so here's the thing there'll be a link to this video you can watch it on your own the point of what I'm talking about here is that we don't have to be so literal in the way that we think of these physics engines right we could design a box 2d even if we're thinking about box 2d we could make this sort of circular body and put our own PNG with eyes and nose and little hair on it ourselves we could also start to make structures skeletons out of you know circles and lines spring connections etc like for example you know what if we made a whole bunch of particles oh I've gone off the deep end here right and then connected them in some arbitrary way right to make this kind of like bug like creature with legs and antennae but a bunch of cross springs to keep the center from like collapsing onto itself but instead of drawing it this way right we drew a nice polygon with some colors and a image texture and we put some free hair here and we we added all sorts right we can just use this as the behindthescenes skeleton for our structure another great example of use of this with as a particle big screams which I will also include a link for which uses box 2d as a sketch as an engine to create these skeletons for these features you know as the interactive system you call it on your phone and you shout into it these creatures make all sorts of do crazy things boy I explained that horrible bad way you'll find it then you'll like it and you'll be inspired okay so how do we even get to the point where we can do this so I want to just look at a couple example so there's really three there's a few different options here number what's two options I'm sure there's more options but two options are we can start sort of manually setting we could make let's make twenty particles here are all the locations we need 15 Springs to make all the connections the spring is between P one and P five this one's between P 3 and P 7 we could do that we could also come up with some algorithmic way so what I want to do is and again this video is kind of short I'm just going to show you a few examples and kind of look at the code a little bit and maybe someday I'd be worth kind of like having a longer version of this but I think there's no like answer to this problem what is your exciting idea and how did you do it you need to sort of kind of piece together the algorithm yourself I guess but I'm here to help so so one exam one scenario we can look at that I think is a good one to look at is what if we took just a whole bunch of particles in the linear fashion and connected the first one to the second one the second one to the third one etc etc etc what would we get doing this so this is really great for like jellyfish tentacle simulation there's a great project I better include that below too so I have this this new system in mind by the way stuffs gonna if it's not anyway pop up as I'm talking that you could link to it's gonna be really thrilling definitely gonna do it for this video and so you it's great for jellyfish tentacles I'll kind of string what if you're making a balloon simulation with a dangling string this could work really well for that so let's take a look at how this could be done in toxic lives so if I come back over here to my friend goodbye friends I can go back to processing and we have I'm gonna look at this is now I'm looking at example 5.11 so if I run this example and I made a few changes to it you can see what is this oh that's weird those aren't the changes I made but we're just gonna live with this right now you can see there's a whole lot of circles and there's lines going across the circles so I want to emphasize to you these is exactly what we did before it's just particles and springs but remember we can choose to draw it in any number of ways we want I can go into this chain class which is drawing oh right this is so weird I totally change this before sort of this example but it was just drawing all these circles and I can take them out and I could just connect all the particles with vertices so in this example there is an ArrayList of particles right this chain object is essentially just an ArrayList of particle objects what are these particle objects just like what we had before but look with inheritance we get to add variables so now our Verla particle also has a radius of 4 so if we look at this it's super exciting and we have this display method down here ok so but the chain class I maybe I might redo these the other next time but ok edit that up ok the chain class is just an ArrayList of particles and we have to figure out how are they spaced out so we need a total length we need to rest length we need to make a spring for each one one of the things that we can look at here is what are we doing we're making a spring between each particle and the previous particle so as we're counting through this ArrayList we can i is our current particle I minus 1 is our previous particle make a spring between current particle and previous particle if then when we go to draw them we just draw them as connected series of lines what we get is this nice stringy looking like thing so you can see that even though there's all these particles there we don't have to draw the particles we're just drawing it as a line we could vary the line thickness we don't have to make it a line we could make it a curvy thing there's so many things you can do should remember that you don't have to literally visualize the physics you can use the physics as this underlying engine for your motion and design whatever design you want on top of that so this is a nice example you can take a look at to create kind of like a soft string pendulum another example that we can briefly take a look at here is and we looked at this and in the first video is what if we take all of those particles and Springs and instead of just connecting them with a line we connect them we connect them in a gridlike pattern so if you look at any image processing example you say for every act right for every Y let's look at every pixel X and every pixel why we're doing the same thing here let's make a particle for every X and a particle for every Y for every particle connected above connected down connected to the left connected to the right so if we kind of look through the code we can see one of the things that I wanted to mention about this example is if we so choose we can also write our own class that extends Berlitz spring 2d so here we have our own connection class and the reason I'm doing that is because I want to have a display method for those connections which here's just as a line so this is a nice thing you can see our particle extends verlan particle we're not drawing any of the particles we're actually not calling that display method instead we're just displaying all the connections to see that mesh a great exercise for you if you would like one is to try to render this not as just two connected lines but see if you can make it make a kua each as kind of quad polygons where you could put an image texture on it so what if you could make a blanket that has you know a sunflower on it or something like that so this is another example so another thing so another thing that I think is useful to think about with these types of projects is you could think about doing something called a force directed graph so what is a force directed graph so I really feel like that question out that I am I am making this video so I could kind of keep going it's hot tired these aren't going very well but I'm doing my best ok so what is a force directed graph so let's just think of a scenario where you have a world and you put a whole bunch of stuff in that world and what if those things have relationships to other things and you want them to arrange themselves in some pattern that visualizes the data behind those relationships a classic example of this is think of any social network you have friendship connections these are all the people in a social network and this person is connected to this person this person is connected this person this is this person this to this person this right you could imagine this could be the set of connections what if the ranks of those Springs the rest like those Springs were tried to other properties location gender you know closeness of the friendship we don't want to get into that right if you can what you have are particles and connections and if the data if what you're visualizing is data about connections between entities could you map that data into the properties of spring objects and if you if you do that you can just plop everything in set up the spring relationships and let the graph arrange itself according to forces and so you know it probably would be smart for me to make an example that's with actual data and maybe that's the exercise for this video or now I'm thinking of my own personal exercise that some that will do to make a better example but when I have for you that you can take a look at our two examples these are five twelve and five actually five twelve and then one of them is an exercise for exercise 515 so this example just shows a really simple scenario where it makes a random set of particles and every particle is connected to every other particle with Springs with certain rest length and rest lengths and strengths now what's interesting about this is every time I click it and the graph will arrange itself into some kind of nice symmetrical pattern I'm calling this a graph but the the particles it happens very very quickly are given random locations initially so this kind of arrangement happens according to those forces it's a very purely symmetrical arrangement because I'm just making random particles every particle is connected to every other particle but what if those connections weren't just perfectly symmetrical based on some data that would be interesting to look at and you can look at a second example which is exercise 515 which just takes it a little bit of a step for a little bit of a step further there are a bunch of these clusters that have their internal connections and those clusters are connected externally to other clusters with different kinds of sprints you can start to see how this this kind of graph is I'm calling it a graph but this sort of system is arranging itself into some kind of stable pattern after a period of time and one thing that's interesting about this is I personally think it's look at this visually if you hide the actual particles you can kind of just look at here we're just visualizing those connections or vice versa we can hide the connections and only show the particles so you can see there are nothing in this program and there's no kind of leadership here saying like the particles should arrange themselves into this pattern there's just a bunch of particles with a set of connections so I would say as an exercise for you for you you have kind of two choices here one is design a creature or some entity use Springs and particles to be the skeleton for that creature that's one idea another idea is actually it's actually used this simple cluster or this example as a model for building a force directed graph but pick some real data whether you kind of make that data up or handwrite it into a text file or hard codit or actually get it from some API but see how that works for you as the kind of project okay so great I think this wasn't as horrible as it was for a period of time in the middle and I've enjoyed I'm enjoying doing this and so that's that's something I suppose and I will talk to you later