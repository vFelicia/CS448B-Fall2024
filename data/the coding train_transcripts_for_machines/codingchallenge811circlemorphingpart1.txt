hello you're watching a video where I'm watching a video look that's goal on and that's me last week look I trim my beard I'm the ID if you didn't watch this video before goal on a guest here on the coding train you have a wonderful lecture about interpolation in art history and art historical perspective and then showed 10 different ways of morphing from a circle to a triangle so now in this video I'm going to close that and there's a github repository which I will link to which has 10 different 14 different ways why don't I say 10 so many different ways of transforming a circle into a square no actually I haven't looked at the code for any of these and so what I want to do and I have done this before I failed that it miserably I'm going to do this twice I'm gonna just try two different techniques in this video I am going to try to transform from a circle to a triangle and the the constraint that I want to give myself is that I only want to work with begin shape and end shape and a perimeter of points around a circle and then I want to be able to take that perimeter and make it a triangle come back there's lots of different ways I could do that the first way that I'm going to do that is just work with the exact same number of points but define the shape of the triangle and then move the points around and this is what unlocks a ton of creative potential as the points could spring back and forth they could mix themselves up they could use some kind of fancy bouncing easing algorithm they could twirl but I'm just gonna like move them from one spot to the other so I'm gonna set up a template from which you could be creative and you can make your own circle morphing example you could tweet it with a gif or whatever any way you like okay so let's get started doing this alright first actually before I go over there one thing we could notice here is that the points of an equilateral triangle rest on the circle and if I just for a second think of this as zero degrees this is 120 degrees this is 240 degrees so again I have a think of it as maybe I this is negative 90 I should be a little more thoughtful about the math but I think this is going to be useful because as I'm calculating these points I want to calculate these points as well to create both of those perimeters at the same time and there's so many different ways you can do this don't get me wrong I'm trying to pick the simplest not the most elegant beautiful or accurate just the simplest maybe it's not the simplest I'm sure you could think of some simpler ways but let's come back over to the code now so the first thing that I need to do is I need to have two arrays I'm gonna say let circle path be an array let triangle and look I don't know why but I'm feeling like I want these to be the same number of characters so circle path and triangle path I want a raise I'm gonna put vector objects ap5 vector object is just an X and a y so what I could do here in a really sort of simplistic way just for a second is I could and let's let's change angle mode to degrees just to like save ourselves some some pain so I'm going to say for let angle equal 0 angle is less than 120 angle plus Plus now I probably want to have some sort of variable to keep track of like how many points so maybe let's just make a variable called it's spacing right now I this is not great but let's say we're gonna do something every 10 degrees just have it be kind of low resolution right now so I say angle plus equal spacing so to get the points along a circular path I can use polar to Cartesian transformation which means that if I have a certain angle and a radius I can calculate the X Y here as x equals radius times cosine of the angle y equals radius times sine of the angle all right so that's something that I definitely can do that's how I want to create the vectors for every angle with a certain radius now here's the thing I really love to derive these formulas for you but I will point you instead toward a video where I do that it's a polar to Cartesian coordinate transformation video pretty sure I made one so now if I come back over here I'm gonna say circle but let's let V and let me just make this a so that it's not as long winded V let's say V for vector equals crea let me actually let X equal and I need some sort of radius so radius let's just say 104 right now x equals radius times cosine of the angle let y equal radius times sine of the angle let V equal create vector and being very longwinded here XY and now I'm going to say circle path dot push V so if I run this code and I look at circle path I can see I have 12 vectors and these are all the points 100 comma 0 ninety eight point four eight comma sin blah blah blah like so you can see all these points here now in theory the next point right with the angle at exactly 120 would be and this is a little bit silly that I'm going to do this because I definitely don't need to do it as three for loops but I'm just gonna divide it into three just for right now because I think this will help me and then and again absolutely all of you can think of magical ways so now this should give me all the points and honestly let's you know let's comment these out because let's just go what happen to get to that let's go to the draw part and because let's at least look at how do I draw that perimeter so now I want to say stroke 0 no fill begin shape and shape is it there's some fancy new es6 way I'm supposed to iterate through an array equals 0 that's not even for each I is less than circular path length I plus plus and now I'm going to say vertex so let me say let V let V equal circular path index I so I want to look at each of those vectors one at a time what am I doing here I wanna say begin shaping and shape to draw that path and I want to say V X V dot Y so let's see what do I get here well there it is that's part of it why is it up there I want to think about everything relative to the center of the of the canvas so at the beginning I'm also gonna say translate width / 2 height divided by two all right here we go there look that's 120 degrees part of a circle now could I possibly get the triangle path as well let's see if I can so I know that what I could do with the triangle path right here is I could say let a start equal zero let let a end equal 120 and then triangle path dot push I guess I could I'm just sort of working this out in my head right so I have X start Y start and this is very silly what I'm doing x and y and I'm just working this out so I want the start and end of this line that's the side of the triangle I want to start at 0 degrees at 120 degrees and so I need to do the start angle for the starting point and the end angle for the ending point and then I want to say create vector X s Y s and x and y n so I just want it this is just me working out the math right of how do I get I just want to get this is like this point and this is this point so if I do that a path between those I'll just draw a straight line so I'm this so many ways this could be improved but let's just see if this is right okay well I have to also draw the triangle path and yeah I guess I'll just do that as a separate loop triangle path and triangle path there we go so you can see now this it's going all the way I didn't have that loop go to the the next angle but the triangle side goes all the way that way okay so I've got both now here's the thing what how do I want to do this I want to figure out these points inside of this loop as well so I think what makes sense is for me to actually say start angle equals zero end angle equals 120 start angle end angle then I want to say start V equals create vector radius times cosine of start angle I just want to get those those points I'm gonna kind of do it in one line radius times sine why is everything so complicated start angle alright so I want to get that start V and that end V which will be end a and a so I think I created two vectors and they're really I could just call them start and end okay I wish I could there's so many ways that could be proved but I'm working it out I'm working it out okay now what I want to do is let's just say just to like sort of see what's going on here what if I just say triangle path dot push start so I'm just gonna put that start in a bunch of time so we don't need this anymore this was me just working it out so if I run this okay nothing but now what if I use oh there's a lurk function so there's alert function right if I use the lerp function if I have a start and I have an end and I lurk between those two values by 10% it's going to give me this point right here and I could do that with a vector I could use a lurk with the vector function linear interpolation to get ten percent from one XY to another XY so what I'm going to do now is say let so this should be the circle vector and the triangle vector equals start start I think if I say start lurk it's gonna give me a new vector hmm hmm I don't know let's see start lurk end and I need you know what I think I need to do I need to say P five dot vector when I say P five dot vector dot lerp and I want to say I'm going in between the start and the end and what is that what am I what's how far along am i the purse I'm a certain percentage a / n de start a so the the amount to lurk is whatever that angle is / start end angle start angle that's triangle vector triangle vector okay so this is now how I'm getting whoops kind of crazy so I'm getting the circular path the traditional way by calculating these points one at a time and then while I'm doing that I know this beginning point in this end point so let me calculate these points along the way and let's see if this works so let me try to run this whoops hit refresh Oh uncut type error hmm sketch that jazz line 19 Oh vectors that's an easy one it's just spot vector okay I see the circle hmm so circular path it has a bunch of vectors in it that looks like it makes sense let's look at the triangle path it has a bunch of vectors in it they all look like they're the same point oh I forgot to say the amount well I spent all that time calculating the amount I just say between the start and the end by a certain amount who myself a little more room here now let's try this one more time there we go yeah okay so it looks like I have the side of the triangle oh this is a lot of work by the way the nice thing about this if you just do the path stuff once you've gotta have it done for all the different ways you want to do your morphing but that said here we go so now there's gotta be a clever way I can go all the way to 360 right and I could probably use modulus to change the start and the end right yeah and so by the way there are all these great suggestions in the chat about how to do the morphing in a smarter way and I'll get to that but I wouldn't do it this way just this is this is gonna unlock or like a lock all the potential weight oh I guess I could just like copypaste this but I can't bring myself to do this so what I want to do is this I want this to go all the way to 360 right I want this to go all the way to 360 and then I want the if angle mod 120 equals zero again this is only going to work from multiple some number that's going to like get to 120 but that's gonna be a multiple of one that's gonna divide into 120 with a remainder of zero if the angle mod 120 equals zero then I should be able to say start a equals start a plus 120 and end a equals end a plus 120 right I know I could do plus equals right I should be able to just move those and then I also need to redo these right so by the way I should really make a function let me just make a function polar Karthik polar to Cartesian and it just takes there are and an angle and it returns a create vector this is going to make our life so much less awkward R times cosine of the angle R times sine of the angle and I'm sure I could write that I should write that with the arrow notation but I'm not going to all right so I just want to make this function because that way now I can just say pole I could just say polar polar what did I call it puller to Cartesian radius start a and end this is at least and radius end a and then here also I could say polar to Cartesian radius a right so this sort of makes things a lot less weird so hold on let me let me just put this back to 120 just to see if this still works yeah what I do polar to Cartesian ah saying is not define I did some crazy typing oh I pasted something in there I didn't mean to there we go that's still working now what I could do is I can make this 360 and I can just do this again and reset these variables what will this do yeah yikes I got close so first of all that's the wrong place what is going on all right this is not correct I have to debug this I actually just debugged it and now I'm in the future kind of go through what I do bugs it but it took me like Alma probably like 45 minutes you know one wants to watch a 45minute video let's figure out what's wrong so first of all I'm gonna make the spacing I'm gonna make this facing 30 so that it's less there's less points to work with I also just want to I think I'm just gonna not bother drawing the circle so no circle so I could just say the triangle is messed up and okay so what are some of the things that are wrong here ah okay this is definitely wrong this doesn't make sense a / n de start a so let me figure out why that's wrong so if I'm going from zero to 120 that's gonna work because 60 is 50% of the way through now I'm going from 120 to 240 180 / 240 minus 120 what though I'm wrong so I need to take 180 minus 120 actually but another way of thinking that is use the modulus operator so because really what I want to do is go 0 1 2001 2001 20 that's what I want to do go unleavened made a whole video tutorial also about the modulus operator that I will link to that you can watch all right so this let's take a look at this yeah that is not a tropical no no alright so one thing we could do here that'll help a little bit is I could let me just do this again and let me draw a little circles just to sort of see where those points are then we say fill 0 yeah look how interesting these points are kind of in the correct place but the path is going crazy all right hold on hold on a second let's look here and let me conside like because if I just go change this to 120 oh that's not even right Oh hold on a second let's comment this out cool that's right there's something wrong with this modulus thing okay let's think about this let's think about this let's say what are the angles they're 0 30 60 90 120 150 etc what is zero modulus 120 zero so I don't want to all of a sudden add 120 to start end right there at the beginning well that's a problem so actually what I want to do is they anticipate it I don't want to do it here I don't want to do it here I don't want to do it here I don't want it here ah before I get to the next one I want to I want to reap because I want to go from here to here that's the first part then I want to move start and to do the next part so actually what I want to do it's much simpler than all the other things I've been trying what I want to say A+ spacing modulus 120 that looks right yeah that's right and so now I can do this what thank you thank you very much good night that's the end of this video goodbye thank you thanks for watching alright I can't believe I don't what am i yet like how long have you been watching so far I haven't gotten to the morphing yet but this is good we can come back over there we're getting there I'm sure Levin did not have this much trouble I can now put the circle back in and I don't need to draw these little ellipses although they're useful to see and we now have the circle and the triangle now it's a little bit a little bit off I could probably think about the angles more thoughtfully but I'm just gonna I'm not I'm not really feeling it right now I'm just gonna rotate everything I think by what is it 30 degrees here we go so and now you notice that those things haven't closed that's no problem I could just add this closed parameter to end shape and now I have the triangle and the circle and I can go back to spacing of 10 and there we go we now have the circle and the right oh thank you thank you thank you alright so now I need to do the morphing well guess what remember all that time I spent figuring out how to do well I can use lerp here what do I want to do I'm gonna have one more array which is the mo I'm gonna call this more path for morph and what I'm going to do is I'm going to just decide I'm just going to decide that in the beginning I'm going to just make it a circle so more paths push more path push that circle point so I'm just going to make them more that I'm just going to start as a circle so actually what I'm going to do now is I don't want to draw either of these I just want to draw the morph path I just want to draw the morph path and I'm gonna do that like this morph path and now okay there's the circle now what are we going to do I am going to say and I'm going to use the lerp function but I'm gonna do the lurk for each x and y instead of the p5 dot vector lerp I almost wish I had done that before but for example what if I say V equals V X equals lerp oh I need the okay so hold on let see circle V let's just I'm gonna use some sort of bad variable names but see V is for circle path index I T V is for triangle path index I I guess I could make a new vector each time but I'm gonna say V dot X equals lerp C V dot X T V dot X and let me put 0 in there I'm gonna make a variable amount and let's have amount B happening up here let amount equal 0 okay so I'm gonna lurk the X by an amount and the Y by an amount and you know what this is so silly I don't actually need a whole separate array that's all this extra nonsense it could be useful but I'm gonna do this in a really simple way I just want to get an x and a y so I'm gonna say let X equal this let X equal that so I want to get a new x and a y which is some amount in between those two X comma Y so with the amount at 0 what do I have all right a circle path where am I using more path still sketch line 20 get rid of the more path I don't need that anymore so ready my amount is 0 semicolon people are yelling at me semicolon semicolon oh and this should be a Y these should be wise circle with the mount at 0 it's circle with the amount at 1 it's a triangle with the amount at 0.5 it's kind of halfway in between okay now we're kind of done we're kind of done I could just I could do whatever now um what I'm gonna do though is I'm gonna let smoothly oscillate between 0 and 1 so I'm gonna make a global variable just call it I'm gonna call it theta because I not using theta anywhere else and I'm gonna use the sine function I'm gonna say amount where do I have that amount variable amount equals sine of theta the sine of theta and theta plus equal zero point 1 so the sine function is a gives us a value that oscillates between negative 1 and 1 negative 1 in 100 I want a number that oscillates between 1 0 and 1 so what can I do there I could use the map function but probably really easily I could just add 1 and divide by 2 negative 1 to 1 adding one becomes between 0 and 2 dividing that by 2 becomes 0 and 1 so here we go oh what's happening here everything was going so well but oh do I have like no loop going or something I forgot I'm in angle low degrees and everything I was thinking in terms of radians so let's go up by five there we go woo let's make the stroke weight a little bit wider thicker this is the most basic way the thing is this is all of the work I think because now I could do all sorts of other ways of moving the points around I could cafe them I could start deleting things out of the array added things to the array there's so many possibilities I hope this is a video that makes some sort of sense that you find useful in some way I I am going to do one more you're gonna see one after this that will be released at some point where I'm gonna do this you know really another way it's one of Golan's versions which I'm not sure which one where I'm gonna start just I'm gonna take one array it's sort two leading points so I'm gonna try that next but but make your circle morphing we're gonna this will be on github you can add to the readme too to link to your own version of this you can tweet with the hashtag circle morphing lets you could try more from a circle to a square or other shapes so many possibilities I can't believe how long this took me and how many problems I had and I hope you enjoyed watching this video thank you thank you thank you very much thank you thank you and good night