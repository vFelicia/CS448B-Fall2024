okay here I have back I did a video about a binary search tree I don't know how well I did but I tried my best and now I'm going to definitely not do such a good job but I'm going to try to show you some steps on how you might think about visualizing the tree and I'm kind of good enough to observe this like a bunch of times but but I just do it a very simple way and I'm asking you the community those of you with visual challenge with creative ideas to make a more beautiful animated version of this with some kind of creative possibilities that I can't even think of so here we go let's try to get started here so first of all I have two p5.js library because I use nothing from p5 Jeff other than setup and no canvas but now I'm going to say create canvas 600 comma 400 and I'm going to say background 51 and I'm going to do this oh boy that's a big canvas okay that's better zoomed in a little bit okay I'm kind of running out of space here but let's move this a little bit over give me a little bit more space here okay so this is the canvas so now whenever I create a node let's actually have the node also get an x and a y and say this x equals x and this dot y equals y then perhaps well we could keep the Traverse I might I could also store all the nodes in an array to iterate through them but let's not do that okay so what do I want to do whenever I create a node where do I do that Oh add value okay if if root equals null so the root node should be the X should be width divided by two and so I'm not actually using the constructor here height divided by two so I'm just setting it directly so I have this option of when I create the note I could pass it in x and y or I could just set it but here I want to set it because I want to make the root node there now let's use this Traverse so the Traverse function in the node is right here which is visit so instead of in addition to console logging it let's just do Phil 255 text this value this Dex this not why this is sort of no stroke so let's just actually draw the text so let's run this look at this that root node is right there 68 now it's hard for you to see it but that's fine and I realize that I don't want I want the root to be at the top so let's make y 16 so we can see the root node is up at the top 4 which is all times to be the lowest node that's just a coincidence 76 is the root ok so now whenever I add a node so now when I add a value through otherwise I go to this top root add node so in add notice here where is that add node aha so this is where I actually set it to be this node left or this nodes right so if I want to do that now I could say if it's to the left if X should be this nodes X I don't know 50 and it's Y should be this knows y plus 20 I'm just making up stuff and then when I create the right node it should be to the right but it's Y is still down so this is like a kind of rudimentary way of doing it right the root node gets the location and then I do the same thing whenever I add a node I look to where I'm adding it and I just grab that other nodes location and move it down to the left there's a lot of problems with this but it'll give us a basic idea look at that so and would be nice now to draw some lines between them and you can see how of this these are on top of each other so here's where I think I put it stop ah here's where I think I want to stop because I'm tired and I want you the community to figure out more interesting solutions so first of all what would be a way let's see if I draw the line even can I at least draw the line let's try to draw the line where do I where do I visit so I visit how do I know which one I previously in my Traverse where am i drawing it I heard he forgot underunder visit so this is where I draw it how do I know where it came from I don't so I would have to pass in here when I visit I would have to pass in a parent like where it came from in order to draw a line from the two different locations so visit from me visit from me and then in the tree visit from this dot route let's see if that works then now I could draw a line which goes from Paris ex parent dot Y to this dot X just out why and I need so this would need a stroke there we go so you can see this isn't so great let's at least draw like oh you know I should do I should say textaligncenter and let's also draw a little ellipse and let's give it like a sighs whoops what do i do that's wrong here the lips the lips wait what's the error undefined textalign spelled textalign wrong text the line whoops no fill so we can see here I'm kind of getting started here ah this is good so you can see this is now the tree but I haven't done such a good job because you know these things shouldn't be so maybe they should be far apart and then closer a bit depending on the level you know if this has a lot of numbers in it like if I were to add a hundred numbers to this like this is a mess everything all overlapping everything else because the nodes next to each other have left in the right so here's where I'm going to stop this is giving you an inkling of an idea so what I am asking you the community watching this video this code will be on github will be a readme file there you can add your versions of it how can you do a more creative or effective way of visualizing this tree with proper spacing what might be some algorithm to figure out the proper spacing you know you could use physics even like what if you use spring forces between all these nodes some kind of repulsion forces to like have it figure itself out that's known as a force directed graph by the way I also think it'd be really wonderful to see an animation so what if you created here something you could do you create a sketch where there's nothing and you have every time you press a button it adds something to the tree and you see it animate to its correct spot and then you could hit a button called Traverse and it animates through the tree in the recursive fashion so what type of animated ways could you explain trees so I would love for anybody to do that share those projects would be if you want to this is actually if this is also a video that's with a course that I'm anyway just look in this video's description there'll be links to all the places to look to contribute your stuff ok so an algorithm get n items per level and separate them evenly yes so one thing you could look at is can you look through the tree to figure out how many items are our perks level and that's how you figure out the spacing so that's a great clue there and thank you Alka from the chat alright I will see all of you another time in another video in another place not too far in the future I hope and have a good I would say weekend because right now it's gonna be a weekend for me but you who knows you're watching this like from some bunkered some underground place where it's Tuesday morning or something or maybe you're just on in a field I imagine the fields with flowers around you in the wind blowing if that's the case play some frisbee frolic smell the roses forget about this binary tree stuff see you later