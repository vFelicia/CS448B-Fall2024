good morning welcome here we go oh boy it's another Friday and that means it's time for the coding train now what's going on today here's the thing I have something to admit something to confess it the date is April 27 to Friday April 27th I as you may or may not know happen to have this fulltime job working Here I am in a closet because I have a building inside of New York City which is part of New York University Tisch School of the Arts ITP and soon to be ima next year as well and this is probably our busiest time and so this week has been a little bit crazy next week will be crazier still the week after crazier so the things are gonna be a little bit in flux here for the next three or four weeks I'm just checking the chat few people are actually seeing me but I'm excited about something which I have a plan for this summer which is not to break this elbow you've been watching my channel you might know that this elbow was broken last summer now it works pretty well I would say 80 90 90 some percent of what it used to be and so I actually took a twomonth hiatus last summer but I don't plan to take that hiatus this summer I spent I plan to take to spend June and July focusing on something called can you even hear that I don't know if you can hear that machine learning a JavaScript and primarily the primary they're the primary vehicle for this that I'm going to use is oh no no no don't look at that spoiler alert I have a little little stick planned that I didn't rehearse I probably should reverse that tensorflow gjs so what I'm going to try to do today I have a limited amount of time I have about an hour to and I'm gonna try to just sort of introduce a little bit about what tensorflow Jas is and my sense of it in this world as well as talk about this other library called ml5 which is a project being developed here at at NYU and ITP and Tisch School of the Arts have to remember to name everything and so on today I really want to set the stage for what I hope will be many tutorials and adventures throughout this summer okay so where to begin well the other thing is I'm kind of I'm wrapping up here this course called the nature of code spring 2018 I was kind of like trying to remember is there anything on here that I meant to do a coding challenge or tutorial about oh and I didn't put my cloaking device on this extra laptop let me see if I can find that oh here it is by the way so I have there's a little mystery we have to solve which is that there's been some activity in this room some things are in different places this should go here oh boy but this I need another piece of paper my my original cloaking device is missing but here is some more I'm very tired today by the way yesterday was national take your children to work day I had a really fun time learning about all the different things that happen here at Tish kids were here they were doing like teepees stuff I learned about making sound effects for the movies oh it was great get anything done or get do any of the preparation that I had hoped and imagined to do for this life so this is gonna be a little bit of a bust this morning I would like to do I was trying to come up with like could I at least do like some interesting short coding challenge oh I think I might have an idea for one so somebody should should give me a knock on the head virtually at about I shouldn't do this towards the end I was gonna say maybe like 1145 in an hour and I should maybe move stretches to a kind of a fun coding challenge alright so I was saying how things in this room by the way yes I was learning fully sound effects yesterday I was trying to remember what the name of it was fully I learned up that we had like a thing of dirt and there was like fake grass stuff and there was we made a raindrop sound effect with like a little like piece of leather and just doing this on it I don't really think like I want to go to the film school here that's really fun what else we learned it but some about photography there drama department we did some improv games that was fun a bunch of seven to twelve year olds doing improv games okay and oh wait hold up so I'm looking at Twitter here supposedly the people are tweeting that I'm here to talk about tensorflow DJ s which I am I should give a fair warning I have a very bad habit of wasting about 45 minutes at the beginning of my live streams before getting to any actual useful education I don't know if there is any actual useful educational content ever but if there would at least when I'm attempting to do so because I want it but so before I'm gonna try to get to this in a minute but before I begin so I was saying how like things are in different places here in this room it was the this I found here written on the whiteboard dan Shipman is a figment of our collective imagination also kittens so now we have a mystery who wrote this was this written this week is that really how my name is spelled where are the kittens are there kittens I would like to see the kittens are they small kittens cute kittens am I really a figment of your collective imagination to exist we will solve this mystery the mystery of who repetition though on the whiteboard in this room who has access to this room there's a door here the door opens people can come in people can go out but it is locked in order to enter the room you must have an NYU ID keycard that is authorized for the thing that you put the ID on so that clicks open yeah it didn't keep going you didn't get to the good part oh oh well oh the bad house good ideas come on bad okay do you want even know what that I that reference is so dated but it's still in my head look no idea what that what that was but wait why did that hold on a sec here I didn't go to the we didn't really uh what does it say they know hold on let me just put this back here my here my all right well I'm gonna workshop that you know I took this like theater class yesterday with a bunch of seven to twelve your I didn't actually take a class I sat in the corner and watched because I was a parent volunteer okay um so let me move on now and let's try to let's erase this note let's erase this note I'll read it to you one more time Dan Schiffman is a figment of our collective imagination also kittens alright okay here we go oh boy come back over here now I need to get set up with a few things here I want this website this website right what I need to actually look for here is let's go to this YouTube channel called the coding train and let's go down to it's not here neural networks and machine learning so this is what I've got so far and what I have always said in working on these video tutorials what's the idea here is that I want to talk about the idea of artificial intelligence in the broadest sense machine learning in the broadest sense deep learning in the well I think people are turning out for a second artificial intelligence and machine learning in the broadest sense then I want to create a set of tutorials where I implement simple examples to demonstrate particular topics in the 11 neuro evolution playlist should be in here as well and so that's what these playlists are doing so for example if if I come here into this playlist 10 for the don't whoa this is very confusing and I look at this playlist this is an entire set of video tutorials that I have made to discuss the idea of a neural network building something called a simple perceptron which is a model of a single neuron no network what it means to then take that perceptron and make a MOLLE multilayer perceptron with say Network then look at some of the matrix math that is behind the different algorithms that happen when data is fed forward through a network as well as when the error is sent backward through the network to adjust the network and then finally build a neural network library and ultimately then make some examples for example this I made an X or coding challenges in that neural network library I made this doodle classifier which is using the Google quickdraw data sets so these are the things that I have done to date and more recently if I come here to playlist number 11 boy what you will see here is I went off on a slight different direction for look at training a neural network with something called the genetic algorithm for the purpose of reinforcement style learning to Train and so I what example and actually there are five parts here so those have to get added to train an agent to play this flappy bird clone game thing okay so that's what I've done so far but I really wish I could have gotten organized yesterday look at this I'm logged in as myself so it has a playlist of liked videos fascinating let me go back one more time and so here's the thing it is time now for session 6 section 6 technically so chapter 11 should be here open what's really confusing about this let me try to I'm gonna try to map this out for myself I have two courses that I'm designing in my head now all these video tutorials that you know I want them to kind of stand alone and let people mix and match them as they please but in my head I have two courses I have nature of code and I have a course that I called it did a sort of version of this course at NYU called intelligence and learning okay so nature of code is a course where the first half I look at physics simulation and then to some extent also some like generative algorithms then this course moves to looking at neural networks oh I should put genetic algorithm this is a generative algorithms not to be confused with genetic algorithms and then after this the last topic of this course is now neuro evolution so this is playlist number nine for nature of code this is playlist number ten for nature code this is playlist number eleven for nature of code okay now my intelligence and learning course which doesn't really exist yet but I hope that maybe teach it next year and prepare a lot of and make a lot of video content for that over the summer it starts with this is kind of a we actually look so what it was like calling this so let me try to find it when I did it last year spring sixteen intelligence learning so this was a version of it that I did but it's it's really not okay so what did I algorithms and graphs so I started with also and I made a bunch of videos for these already this idea of algorithms graphs search and like kind of thinking about something called Big O notation I don't know if that's really if I do this course again if this fits exactly right but this is a sort of first part of that course so the reason why I put that there is with this idea of taking the broadest view of the idea of artificial intelligence what does it mean to create the illusion of intelligence or the actual practice and thoughtfulness of intelligence in a in computer software in programming with computation and so things like the a star path maze a star path finding algorithm to find the shortest path from bits start to end in a maze like graph structure is something that can fit into this so that was one then I did genetic okay okay okay so people are complaining in the chat that's fine uh maybe I should one of the things I actually did this is why people are complaining probably because I kind of promoted this a little bit I never really schedule or promote the live streams because I kind of I'm afraid for people actually tune in because I and I sort of said tensorflow dodgy a switch probably so I'm gonna get to that really soon what time is it 1100 okay so the other part of this course then let me just move on is genetic algorithms and neural networks so these this crosses over and now this is what leads me to believe to what I want to do today and so if I look back at here session one session to session three session four is somewhere sufficient five who knows this by the way this needs a little work I need to clean up these organizational structures what I want to do is all of this stuff about genetic algorithms neural networks in neuro evolution all of that used my own JavaScript library which were in these two files neural net and NDIS and matrix chess and so that what I want to do here is now well I want to look at actual oh boy that turned off yeah let me just write it here tensorflow das so the point of me doing a lot of this stuff with just my own javascript code well a lot of that for me was my own just like let me try to figure it out try stuff make some educational content have people look at it see what what gets made this should give me a foundation and basis with which to understand and start to work with a more sophisticated machine learning framework made by someone else and the machine learning framework library made by someone else that I am going to use it's tensorflow das so the very first thing I'm going to do is talk about what is tensorflow Jas the sort of core API this layers API and also this other library that I'm working on with some folks here at ITP called ml5 so I'm gonna erase this in a second and get started then what I would like to do I mean I don't know if I can get through all this today but I want to look at the basic oh you know just boils are alert the idea here is that ml 5 is the sort of highest level layer let's go to speak on top of the layers api and tetra fluro Jas which will provide some simple and easy to use examples to do some common machine learning tasks but I and so in some sense the reason for the ml 5 library is to and I'm gonna repeat myself in a second so I should probably stop talking about this is I know I want to make a lot of standalone videos and tutorials with just ml 5 but for me what I want to do is actually start with looking at some of the lower level stuff that's actually in tensorflow da Jas and build some examples so the two things that I want to do is I want to redo the XOR example which is a little bit of a trivial example but shows the sort of full story of a machine learning project where there's training data a model gets built and trained and then there is new data that comes in and the model makes guesses according to that new data we could visualize that and then I also want to do this that doodle classify are over again but using tensorflow das rather than my kind of goofy ridiculous toy javascript neural network implementation okay let me turn off notifications on my watch because they're bothering me let me come back over here and check the chat oh this turn this on and so we're going to get started so I'm gonna take a this is I'm gonna just want to leave this here so I can have this later to remember and now I am going to get started so first I need to erase this I needed to sorry than I if anybody watching was to do this part I needed to do that for my own sanity also Maxia who helps with video editing and managing the channel hopefully this might help you understand my thinking here so that we can reorganize some of these you know the websites and the different orders and playlists of different things okay okay it is 11 o'clock so seriously though this would be session six now I'm gonna consider this other place where you can find this stuff let's seal this show up here so we got some work to do on this website okay never mind if you by the way if you all haven't seen this emoji scavenger hunt project it's totally awesome I kind of want to play it right now but oh I'll do that a little aim here I'll do that the end okay so hold on there's actually a couple other things that I think would be useful to bring up here tensorflow dev summit tensorflow Jess YouTube I'm looking for the here we go this is what I'm looking for there we go okay okay and then we're gonna go do a little history lesson here okay what what what what this can't possibly be true oh I know what it is ah god I check this I was having some issues on this computer and I shut off WebGL which will really be a problem for this set of tutorials that I'm an attempt to do today where is that in in Chrome settings anybody know where are the worst of WebGL settings advanced system no wait isn't this all right in the right place hold on let's go to pro maybe I want preferences ah yeah no that's the right thing GL no somebody's gonna tell me I know GPU thank you I turns it off what I was ok GPU GPU where do I just where do I enable it no this is just the report hardware acceleration Hardwick van settings hardware acceleration okay advanced where's it van advanced advanced hardware Excel relaunch Chrome all right thank you everybody for your patience we need a picture of both Nikhil Daniel okay there we go we're back we're back everybody okay all right everyone flags that would have been another place thank you okay all right here we go everyone hello and welcome to another session of my street oddly organized perhaps hopefully somewhat organized set of videos about intelligence and learning so this where are we right now I am in the moment where I have finished a whole set of tutorials about neural networks and some basic machine learning types of things that one might do with the neural network comprehensive but a few demonstrations I built a little neural network library in JavaScript and went through some matrix math stuff so I'm ready finally at the time I've been saying this all along that I'm making this neural network library and kind of looking at how things work and trying to make some creative examples but later eventually someday I will use a more robust thoughtful welldesigned framework as the guts as the as the foundation from which I will build all of my examples and projects I'll use somebody else's machine learning code and so today is the day that I'm going to start talking about doing that and the foundation that I will be using for almost all of these videos is a project called tensorflow tasks so let's discuss for a moment where where did tensorflow jas come from so you might have heard of something called tensors weird to write this down ten sir flow now first of all you might even be asking yourself huh why is it even called tensor flow what is this thing called a tensor and now this is gonna be really important because when I start to actually look at the code for tensor flow gosh yes there's going to be stuff in there called tensors and the tensor is actually a mathematical thing it's a structure that holds numbers in it and it's really basically I mean I should look at the Wikipedia page for tensor probably and it'll give you a good I'll link to that in this video's description but we've been I've been referring to things as vectors well we have scalars which is like a single number like three we have this idea of vectors which is a list of numbers like 3 1 4 etc and we also have this idea of a matrix or matrices if I'm being consistent about singular or plural this idea of a matrix and a 2dimensional matrix might have a grid of numbers like 3 4 1 5 so a tensor is a structure a data structure essentially that really can store any ndimensional version of these types of things so this is the and because the building blocks of any machine learning algorithm are matrices of numbers this idea of tensorflow let's flow with the tensors insert animation of me flowing down the river of tensors well that happened in postproduction I seriously doubt it this is where the name tensor flow comes from so tensor flow is Google's open source machine learning library it is written you might be surprised to hear this because you might think ah tensor flow it's Python right well yes kind of sure there were people who are watching this who know more about me so if you're watching the recorded version of this check the video's description for called the correction I'll go look for all I'll try to met make any Corrections at the end but the tensor flow is actually a library written in C++ it is a lowlevel C++ library with a lot of functionality for doing machine learning now the reason why you might have thought to yourself oh isn't it Python well there simply is a sort of bindings for pythons so to speak a Python a wrapper so to speak for pi so python being a programming language that's primarily used not primarily use but it's very popular in the world of data science it makes sense if you're a data scientist and working with data and you want to do some stuff with machine learning that you would and you're already in Python you'd want to be able to access something like tensorflow so every most all in every example that you would see working with tensorflow is you're just kind of operating the lowlevel tensorflow stuff from Python in fact there are also Java bindings for tensorflow and probably other languages as well and in another youniverse if all this JavaScript stuff had never happened oh it's travel back in time and stopped JavaScript from happening maybe what would our life be like should we try that but I don't know a better or worse I would probably be investigating here right now talking about the Java bindings for tensorflow in an attempt to maybe go and use them with processing and actually this is something that I really I know that Gough read hater who is the creator of the Raspberry Pi arm version of processing has done some investigation of this and this is actually something I really would like to do but that aside this project tensorflow has been around for quite a while let me go look and find out how long it's been around and then I'll come back all right thank you apparently there was a super chat from Sam Graham taking a little break here let's look at first look let's look at tensor Wikipedia to see if I got that right geometric objects that describe linear relationship between geometric vector scalars and other tensors examples of dot product okay so I kind of got that right I kind of got that right then tensor flow let's let's look that up open source math library machine learning bubble developed by Google brain for internal Google Zeus was released on November 9th 2015 okay and let's say C++ where it where does it provides a Python ia API as well C++ but am i right about that that ultimately tensorflow itself is written in C++ even if you're using it in Python you're just kind of controlling the lowlevel math operations from Python is that right that's my understanding of it Haskell Java go rust boa and look at this March 30th 2018 okay all right I don't see anybody yelling at me Oh tensorflow documentation is oh wait okay first of all the keel is in the chat welcome thank you hello Nikhil oh boy oh no oh no I'm in trouble now Nikhil is one of them with danuel smoke off and many others that are part of the Google brain team and the big picture research group up in Cambridge at Google are the developers and creators of tensorflow digest which I'm going to get to in a minute anyway oh yes Alcott gives me a quote Google built the underlying tension flow software with the C++ programming language but I know I'm usually not so here's the thing I'm so unsure of myself with all of this machine learning stuff it's very different for me to do these tutorials like the nature of code physics simulation and steering behavior stuff like I had worked on that those examples and educational materials for like years I'm flying blind oh I was really just trying to look up the year sorry matcha for creating this edit 2015 okay so it was started in 2011 and was open sourced in 2015 okay okay Nikhil is giving me positive positive feedback I very much appreciate that okay thank you thank you all right okay I'll have to go look that up tensorflow actually started as a proprietary project at Google in 2011 and it was open source under the Apache License in 2015 so I don't know we can say open sourced in 2015 and it's a it's a project developed by the Google brain team who as I've learned recently I am NOT an official representative of Google in any way so don't get all this stuff wrong you could be up there doing a fine job over there I thought that can stay from the live street but I just now I'm not gonna turn red in a second I'm getting very embarrassed let me let me let's let's just do that little bit over again sorry for you live viewers I really try to not do this but since I had this like break moment anyway okay so I'm back I had to look that up tensorflow was open sourced in 2015 so tasteful actually is a project according to Wikipedia started in 2011 was a proprietary machine learning library used at Google for doing all sorts of stuff with neural networks and deep learning and more and then it was open sourced in 2015 under the Apache License so here's the thing last year I actually spent some time making some Python examples in tensorflow and I wanted them to talk to JavaScript so what I actually did is I wrote something called a flask server which is a Python flaps kiss kind of like flask is to Python as node is to JavaScript I'm sure that's wrong in many ways and then what I did is I had my p5 sketch talked to that flask server the flask server did Python stuff with tensorflow and then I could do machine learning tasks from within p5 and this is what I want to do I want to be able to demonstrate and make examples and show things about how in a beginnerfriendly programming library like p5 or just didn't native vanilla JavaScript or using three Jas or whatever JavaScript world you live in I lived in the p5 world most of the time I want to be able to try to do some tensorflow East stuff and so this was the way I was doing it last year in the nature of code intelligence and learning course that I attempted to teach over the summer I think it was last summer a project appeared a project appeared and it was called deep learned is now this is a my sense of this project is that this was a speculative project the idea behind deep learned digests is haha can we do this kind of stuff in JavaScript and if so how so one of the things that's special about doing machine learning in today's modern era with tensorflow is in addition to this whole landscape of all this stuff where these operations that are written in C++ actually get executed they you have this question of do they get executed on the cpu or do they get executed on the GPU and why should we care about this well the CPU the processing unit the computer's processing unit is the C stands for go out so is a little thing that chugs along and kind of does most of the work that your computer has to do some time some time in days of your video games and special effects and graphics needed more and more processing and computing power so graphics processing units were created graphics processing units were created and optimized to work with pictures images pixels what are images they are matrices of pixels remember though is talking about how matrices are important to tensors and deep learning all of the mathematical operations that happen in Network our matrix based operations multiply these matrices together add these matrices sum these matrices past this activation function over this matrix that sort of stuff so the fact that over years and years and years that graphics processing units got optimized heavily to work with twodimensional arrays of color information pixels it so happens that all this matrix stuff could be used with GPUs as well so this is really it's is why we deep loop the term deep learning from my point of view it's kind of in a way of like a rebrand of neural net machine learning with neural networks but now we live in an age of big data sets and really powerful GPUs and a lot of this modern research is coming from the fact that these older algorithms that we didn't think could do as much can do more now in the context of where we live now ok why am I saying this so how is this gonna work if we have a JavaScript implementation of tensorflow is the idea to just have another set of bindings so you're really just controlling C++ from JavaScript well that is certainly a possibility and I believe that exists or at least is in development there is a node dot J S package for working with tensor flow that actually connects directly to the C++ implementation it has a relationship to the attention flow just enough that I'm going to talk about here but that's not what I'm talking about here what the creators of deep learned is Nikhil and Daniel more information about them and the rest of the research teams that they work with in this video's description and want to miss credit anybody important they didn't actually write something to control native C++ GPU they actually just rewrote all the C++ algorithms loosely I don't know about all what's implemented so far not in JavaScript and isn't that gonna be really slow isn't that a terrible idea well first of all if you're me I like things from slow who cares I just want the stuff to run I want to play with it I want to learn about it I can always use something else to get it to run faster later but maybe in JavaScript alone it would run just way too slow there happens to be something in the world javascript called WebGL WebGL is the browser's interface to OpenGL for doing operations on the graphics card for drawing and making graphic stuff happened the browser so if the math operations of tensorflow in c++ can run on the GPU why can't the math operations inside of this thing called deep learn one via the GPU via WebGL so that's really the magic in my mind of what was accomplished with this original project called deep learned uh chance so let's go look at that website for deep learning as first second look here it is this is deep learn J's or don't go there why because deep learned digest has become tensorflow dot yes so this speculative project that I believe was started last summer 2017 while getting that slightly wrong looking in the chat clean Oh Nikhil was there central processing unit oh shoot a little correction here C is for central central processing unit Thank You Simon oh I've written stuff off the screen to hold on would I right off the screen oh it's just some question marks that's fine hold on looking in the chat here on March 30th less than a month ago deep learn Jack J s became adopt this speculative project of doing these machine learning stuff in JavaScript was adopted by the larger tensorflow project itself and there and and has become this vert this project called tensorflow j s woof so tensorflow j ass this is now the project oh we can write that over here by the way if you can't see what's written up there it's just some question marks sorry about that tensor flow is so we're gonna circle that we're gonna put some hearts on it and a few stars on this is now the framework that I am planning to use in my ended set of tutorials that you may or may not choose to and I may or may not choose to make coz eyes of right now I haven't made them yet but that's my plan there's some more stuff I want to say about this I wonder if I should move on to another video because I want to talk about the let me just mention it briefly here I don't know if you want to edit around this match yet but so there's two more things that I want to mention about this and I'm gonna get to a lot of this a lot more later but tensorflow Tijs isn't actually just once I mean it is one thing it's a project but there are two pieces of it oh yeah actually this is important for this video you might have also heard of something called Karis have you heard of Karis where can I put that let me put a Karis up here can you see that no you cannot let's try this again okay I probably should just point this camera a little bit higher since I tend to write alright alright what is there something I can erase here what I'm gonna do is I want to talk about Karis the layers API and ml5 all right I think I can erase some stuff let me just let this sit in a video for a second so they're gonna be a picture of it case I want to the question parts are very important yes okay where are we timewise here 11 oh my god so little time all right alright there's something else that's important as part of the picture here that I want to talk about and to do so I'm gonna just erase this area over here so okay so we have this terminology in programming high level versus low level and I actually saw a discussion about this going on in the chat there are low level programming languages there are high level programming languages one way to think about that is low level is actually you're manipulating the RAM and the data in the central processing unit like you just you're all the way in there and the deepest part of the computer moving the numbers around yourself versus high level is something like really high level is like the scratch programming environment for kids where I'm like moving puzzle pieces and blocks around to try to create an algorithm so that's one way of thinking about high level low level so it's kind of there could be this sort of a level of abstraction so tensorflow if I were to make I guess I should put low on the bottom tensorflow in terms of working with machine learning operations tensorflow is a lowlevel library to do the actual matrix math and gradient descent learning training algorithms all yourself written into the code yourself with tential it's common operations that are implemented for you but this is really lowlevel control of the algorithm itself you could invent new machine learning models by writing them in tensorflow yourself then in between that there previously was a proper still is sorry this project called Charis Charis Charis Charis I don't have pronounce it can't laughs I always think everything is French for some reason so and that's probably not even a French pronunciation of that word but that aside sorry sorry that you had to watch that caris was meant to be a higher level API built on top of tensorflow and in fact Kerris was actually originally designed to be a higher level API that could sit on top of a variety of other lowlevel machine learning frameworks so for example there's something called Theano is that what is called I think it's called Theano there's like pi/2 which is maybe well pi/2 is torch and then there's pie tortoises Python story so there's all these other lowerlevel machine learning frameworks that clearly am NOT an expert on we just say that again there's all these other machine lowerlevel machine learning frameworks I clearly have not an expert on but Karis the idea of the countess's you could kind of write your code make a machine learning thing and it could it could operate on top of any of these so Karis though however more recently became part of the tensorflow project itself and so Karis is actually intensive lower linked together so this is a higher level API that's written on that's built on top of tension flow and it exists as part as tensorflow Jas and it's so in tension flow digest there's no actual concept of Karis specifically but there is the core API and then what's called the layers API and the layers API is something that I'm gonna use much more in my video tutorials although I'm gonna start with a few that just look at the core stuff because it's kind of important to have a sense of what that is and how that works but layers so layers intensive logic is the equivalent of this thing called Kerris now a project that's being developed here at new york university with some collaborators from ITP and guests and researchers and students is a project called ml 5 the 5 in ml 5 is an omage homage that's French right to the 5 in p5 in the sense that I mean this is flawed for many reasons but in p5 you could think of as like a wrapper on top of canvas and Dom to jeju's like common creative coding functions to make drawing and making pictures and doing creative sketching projects a bit easier and friendlier in JavaScript ml 5 is yet another layer on top of well sorry I shouldn't put this it's it's only for JavaScript as a layer on top of tensorflow Jas to do some common to allow to kind of like even abstract the concepts even a bit further and you know I think one of the goals of ml5 is for it to be a library that high school class could use a kind of weekend workshop for artists could use these sort of context of people wanting to get a basic understanding and try some machine learning stuff out so anyway so this is all the stuff whether it was a long introduction to all these pieces this is all the stuff that I'm hoping to cover over the next several months here on this youtube channel called the coding tre it's really it's like embarrassing that I keep blowing this train whistle you know that's what I do and so that's the plan so you can kind of pick and choose ultimately you might be able see what's available for you at the time of watching this but ultimately you might want to skip ahead and look at some of these ml5 tutorials because you don't necessarily to do the ml5 examples you don't necessarily need to have a knowledge of the core api of tensorflow chasse or the layers api even but I'm gonna start even though I might but the goal for the ml5 Biggs librarian examples is to give people a starting place that you don't need to have gone through all the lowerlevel stuff for my own kind of sanity and figuring this stuff out also ml5 doesn't actually have a public release yet whatever that means but the goal is sort of like have a quoteunquote public release in June with more documentation examples and features my I'm gonna start very first thing I'm gonna do in the next video is just look at the core API in attentive flow yes and see like what some of the things you can make do with it what some of the functionality is and that kind of stuff all right how am i doing I think good I probably made a bunch of mistakes and missed a bunch of things so check the video's description cuz I'll write corrections and stuff in there and also I will in the next video if you continue on whatever the Google's YouTube machine learning algorithm tells you to watch we'll hopefully have some anything that needs to be corrected alright thanks for watching this I hope this was a helpful picture of my of all these pieces and my thinking as it relates to them look Wow okay goodbye all right um well this camera went off oh okay all right so I don't know I'm looking for questions now don't be so okay thank you thank you to what the web who said that I presented the information very well don't be so hard on yourself I appreciate that all right it's helpful to have the friendly feedback in the chat I appreciate it oh this computer the one that's invisible to you is about to die no that's not it for today I'm gonna keep going I have I have about another hour yes so maybe there's some new viewers I do a little bit I have a sort of weird workflow it's actually not that weird anywhere I've been noticing other people do something similar but which is that I do these live streams and the live streams are what used to be my own private recording sessions basically where I would like record a tutorial and then upload it later so now I just broadcast those live and then though the pieces of this that are and have some value will get edited down to something slightly shorter and uploaded and put into a playlist so that it could be used as part of a course or us just for you know for people when it does watch it just watch that that particular part so that so whatever all that the live stream will remain archives forever well as long as not forever I mean I'll be dead but if you're like really really let's say it's like the year 3000 and you're watching this maybe you could revive me somehow I don't know so I couldn't know that you're watching this somehow in the year 3000 with your maybe it's like actually like appearing you don't even have eyes anymore anyway I'm talking to a creature from the year 3000 that I had now on YouTube that makes no sense at all so the live stream would be archived and then also the edited videos will be in different playlists okay don't forget any semicolons today Ricardo asks will you teach web assembly in the future I guess I would have to so two options there are one I learned web assembly and then teach it option number two is I just attempt to like look at it during the live stream without knowing if it and they think about it cuz I don't really know whether sembly which is actually what I'm kind of doing with those machine learning stuff it was like honestly like I as much as I've been looking at tensorflow das and talking about it and I did try to make a project with it actually earlier this week so this isn't totally true I haven't really done the stuff that I'm about to talk about okay okay ah different Nikhil in the chat asks Dan will you go for dialogue flow dialogue flow is something I'm planning to cover next fall so I have a course that I teach called let's see if this will program from A to Z ooh look at this oh boy Oh electron that's another thing oh so many things anyway this is a course that I teach I'm gonna be teaching it again a tizzy f18 doesn't exist yet that'll be this coming fall and I'm planning to add dialogue flow as a module for that course so whenever I get to it I'm definitely gonna use it alright alright alright looking at the chat I'm getting messages from the future which is that maybe somebody traffic could travel back in time no no here look did you invent time travel and somehow you invent a time travel and you're watching this video travel back in time go to well maybe I shouldn't reveal where I am right now that sound like a wait you're smart you're from the future you know where I am now it's 1135 a.m. Eastern Daylight Time finally knock on the door if you have an issue with security downstairs tell them you're here to see you're from the future and you're here to see how do you pronounce you gotta get this very tricky to pronounce my name it's Daniel she's fun say you're here to see Dan Schiffman on and and they'll let you up you could figure out my phone number because you're from the future you could look it up in the archives alright so maybe somebody will knock at the door we'll see Wow suspense I could try my wait not this one okay never mind I was trying to get the serial music again okay um so let's see what do I want to do now I wanted to do a coding challenge today just to have the code maybe I could come back this afternoon maybe I'll so I'm gonna keep going with this oh I forgot to mention the whole point of this was I was gonna mention I had this video here for people to watch oh okay hold on alright this is the thing that I forgot I'll just do it in the beginning of the next video let me answer two quick questions that I see in the chat bridge fee asks how do you tell someone to learn Java scripts from scratch using what resources well I mean I don't want to toot my own train whistle but I do have a set of videos that are for total beginners to learn JavaScript and the p5 library acts as kind of the conduit for that maybe that's not for everybody but that certainly would be an option there's a book this is not really for beginners but a book that I really love is uh maybe this for beginners is eloquent JavaScript this is a wonderful book and I always used this as a reference to try to learn about how stuff in JavaScript actually works those would be two thoughts oh there's another question Jack goes too fast I was like there was a second question I was gonna answer but I don't remember what it was what was it we learn JavaScript and I can't remember okay okay so let's move on here and let's try to do a little tutorial about so I think I can get rid of all of this yeah so the next thing I'm going to do is just look at the core tensorflow jsapi so do you think one thing I want to do is let's find some better definitions what a tensor is and that was yeah let's so that'll be good for starting us out here let me get basic books p5 sketch going oh I'm in the wrong screen p5 tensor flow and Adam and oops what is this here the whiteboard totally needs a fresh coat of paint I know let's open this up in the Adam editor and let's run where am I let's run a little web server should really I don't know should just use the node one I should use the live server two but it's the reason the live server kind of makes me a little bit crazy and then okay so this is good actually I'm gonna I need a new template for the p5 manager really badly v5 CDN let's just do I mean I'm probably not gonna use p5 so I don't know even why I'm bothering with this very silly what I'm doing very very very silly one of these days I'm gonna just spend some time oh no so now this has to be 8080 and here we go yeah look at this okay alright so I think I'm just about ready here now okay so what do I need I want tensorflow touch yes and now five orange reference this okay alright alright somebody told me that the tensorflow what is a tensor the tensor flow documentation itself well look at this I would like to know this what is the difference between a matrix and a tensor Oh Oh general eyes matrix that's what I thought ah I wish I had said that but I think I sort of said that okay all right fine this is good this is helpful for me though this makes sense okay I'm good with I think I'm fine but I explained all right okay it's 1145 timer that thing I wanted to do yeah maybe I'll come back this afternoon if I can I have to leave well hold on let me just determine what time I have to leave okay Oh interesting you're interesting so I could okay okay all right that's fine okay sorry no this is sorry I'm like now I'm looking at my email which I was trying to check this where my schedule today so it's possible today between like three and four that I might be able to come back for a coding challenge let's see yes come in L you through the type of thing I don't I yes thank you Ricardo in the chat who is giving me helpful tips that I will never probably follow because I'm an old person with a calcified brain and I can't do anything but just type clear okay so we want to be here want to be here won't be here want to be here all right all right here we go so it's guilt Liz de asked is it possible to use GPU with tensorflow dodge ass not only is it possible it is impossible to not use the GPU tensorflow dodge yes as far as I know only works with the GPU so if you are working with a web browser does is that that does not support WebGL it will not it will not you will not be able to do it okay hello I'm back to for another video where I'm going to look at the core API of tensorflow dodge as and in my introductory video I totally forgot to mention and link to this particular announcement video machine learning in JavaScript from the tensorflow dev summit where Nikhil Thorat and Daniel smilk off the creators of tensorflow TAS talked about the project and you should watch that because it'll give you a lot more background and also that show interesting demos and other things that people are working on with it okay so I wanted to mention that now okay so if you didn't watch my previous video which is kind of an overview of the landscape of all the pieces around working with machine learning in JavaScript you could go watch that or you could just be right here because what I'm gonna do in this video is I'm just gonna go to this API reference and in this API reference what I want to do is talk about the basic building blocks of tensorflow jazz now here's the thing again I just want to mention I just want to mention that you don't have to be here right now anywhere else in the world than watching this video and ultimately I am going to be using something called the layers API which is part of tension flow digest which is a bit of a higher level abstraction then the stuff I'm going to start to look at in this video and I am also going to use a project called ml 5 which is a separate project being developed here at New York University which is built on top oh I guess oh boy this why what timeout timeout not time up we'll write that lower down ultimately I'm going to start using something called the layers API which is built on top which is part of tensorflow Jas so there's court enter flow Jas ultimately I'm going for projects that I'm gonna make I'm too useful the layers API which is a higher level abstraction and then even higher if I'm going inverse like down is higher level eventually I'm also going to use something called ml 5 which is a project being developed here at New York University which is a JavaScript library separate project from tensorflow GS but uses tensorflow J's behind the scenes to do some to show demonstrations of common machine learning tasks like image classification poetry generation and and things like that ok so but for me for my own sanity I would like to learn the basics of the core API of tensorflow yes and I think it's useful as foundational knowledge for moving along and looking at some of this other stuff but if you just want to get to like getting your webcam and trying to classify the images that are in your webcam you can you could find some videos that aren't made yet but they will be made maybe I don't know it's very confusing I'm gonna make them within they'll fly when we get it to that ok core API what is the core core core building block of everything in tensorflow it is something called a tensor and I talked about this in my previous video but just to recap we have this idea of a scalar which is a single number we have this idea of a vector which is a onedimensional list of numbers and we have this idea of a matrix which is really a two dimensional grid of numbers a tensor is a sort of more generic term that refers to any ndimensional thing of numbers and also the operations associated with those things like matrix multiple caishen and so this idea of this idea of a tensor being this building about it's a thing you can make and perform the common mathematical operation it's actually quite similar to in p5 if you watch my p5.js tutorials I use this create vector function so this create vector function is making a vector and actually three to two or three dimensional vector so it's always just like an XY inventory it's always just an X or Y and sometimes a Z and so then you can make these create vectors and you can get their magnitudes and normalize them two common mathematical operations the tensor is exactly the same thing so if we now go and look at the at the API here we can see here it is TF tensor so how do we even make a tensor let's just make a tensor so first of all I have some code I have some code not very little code I have a single file called sketched out JavaScript and you would think like okay let me just go and take this and let me just put it in here I'm gonna hit save then I'm gonna go back to the browser I'm gonna hit refresh and uncaught reference error TF is not defined so why is TF not defined well it's not defined because I need to import the tensor flow dot J's library so a way that I can do that I'm actually just going to Google I'm sure it's like in an obvious place but tensorflow J s CDN and then oh it's actually right here on the home page right here this is what I'm looking for I'm gonna grab this bit of code right here because what I want to do is reference the tensile voce has library file via a CD and a CDN is a content delivery network I could download the library include potential ojs javascript file in my project it's a little easier for me right now just to go into index.html you can see I'm actually referencing P 5 and P 5 Dom libraries to see the ends I don't know that I've been actually to use the P 5 library in this video but I can just add one more here and now I have tensorflow tachi s imported as part of my project and I'm gonna go over here I'm gonna hit refresh I look at that ha ha it's our first tensor we made a tensor we paid a tensor just take a break now for a minute I'll be right back okay yeah so people are mentioned require I mean maybe it's worth noting oh there is a cpu backend I'm told ok other laptop could use a small adjustment oh thank you oh yeah where's is it here there we go so better I think that's better but I can't really see it now ok so where are we now all right so I'm taking a break ok always what I'm going to do next a scalar 1d 2d ok ok shaped candy go with the shape now if I make a 2d 3d what I'm confused about here is or D buffer hold on a nested array of numbers flat array or type 2 right okay shape so what's interesting about this is I understand the idea of a shape and datatype well let me let me experiment for a second here I'm gonna come back to the video in a second but let's say if I make actually let me not make this a Const cuz I'm gonna wanna like alright actually I'm just do something ridiculous cuz I'm gonna want to like do this over and over again oh all right TF dot tensor so that's the whole thing so this we can see the datatype the shape is just to the size is 2 so I can okay hold on so if I make a tensor 2d see this is what I meant to do yesterday I was going to like look through all this stuff more detail tensor 2d requires the shape to be provided when values are a flat type oh so it has to have a shape because the values are not got it that makes sense so the shape could be because it's 2d it could be like 2 by 2 and then it would be this right so this would be a 2 by 2 tensor with four numbers right that makes sense and then we're seeing it like this that makes sense so what I don't understand is what if I want to have a because I could have like four of these now what work I see so if I wanted to have a 2 by a 2 D tensor but I wanted four of them so there could be multiple dimensions but ultimately the data itself is 2 by 2 is that sort of the idea so like for example if I want have two of these this would work and I've got yeah two to two by two tensors that makes sense and right because otherwise if I didn't give it if I just said it was two by two it would give me an error I see and then and then sorry I'm just talking myself through this before I go back into this like try to like make sure I kind of understand this oh oh nikhil is giving me feedback thank you Alka for pasting those in okay so I'm just and then I see so if I want it will be it could be inferred the shape can't be inferred right if it's flat but if I did this this would work no I would actually if I wanted to infer the shape completely I've got to actually do this just curious just trying to understand this will be okay I know I don't need to go into all this detail I just know that didn't work I guess you really need to you really need to pass the shape in the product of the entries in the shape must equal the number of values okay wait Nikhil is giving me actual information the product let's write that down the product and the number all right well that is our the project so I just was curious like when can it infer the shape it really can only infer the shape if you're making a single tensor that matches 2d 3d right r 1d I think okay all right so let's come back here and we're I forgot where I was leaving this off all right oh I need that thing where I copy/paste tensor TF tensor 2d all right yeah yeah okay so this yeah cool okay all right it can infer if you do this yeah yeah okay thank you all right shape is important I'm not I'm gonna not worry about the the the the okay so okay here we go let's let's keep moving now okay so I've made my first tensor now one of the things you'll notice if I go to the tensor flow documentation whoops is that in addition to just TF dot tensor and there's also by the way oh look at this I need to talk about shape and datatype but just for a moment I want to just look there also is this o TF scaler we're going to talk about that TF tensor 1d 2d okay so here's the thing this funk this idea of a tensor TF tensor is a generic concept that will work for any ndimensional tensor but if you're working with tensor flow Jas you want it to the extent possible use the functions that specify something about the shape so what do I mean by shape oh boy so here's something a really important concept a shape this shape refers to the dimensions of the tensor so for example we might this right here this has a shape that's 2 by 2 I could write this this now has a shape because you always say the rose first with matrix this is 2 rows by 3 columns 2 by 3 so one thing that's important when creating tensors is to also specify the shape like why does this even matter what we're just kind of in the lowlevel land here just to get a sense of how these things are the reason why this matters for example imagine if what I'm ultimately going to do is feed in image data into a neural network for some tasks like image classification well I want and what I have are lots of images maybe all those images are 28 by 28 pixels so my shape is going to be 28 comma 28 and let's say that I actually have a hundred of them I have a hundred 28 by 28 images this is exactly what I'm gonna have for the doodle classifier example that I'll make at some point then the shape of all of the data is 100 comma 28 28 because I have 28 by 28 images and I have a hundred of them so this is a really sort of important piece this idea of the shape is a really important piece of defining a tensor so let's take a look at that real quick so if I come back to but I have no plan for what up to it here really should play it these out so let's come back and let's go back to here and let's just do this in the console so I'm gonna say by the way one thing I didn't I mean I guess I could keep doing this in my code let's keep doing in my code so I have a record of it so um one thing I didn't mention by the way is why am I saying TF dot tensor and first of all I'm gonna write this in a different way I'm going to say constant nums let me call it data data equals let's write this out like this and then data dot print so let's look at this so one thing that's a key here that I'm using the the way of declaring a variable called Const for constant which means I can't reassign this object and so this is what you're gonna commonly see in the tensor flow to tutorials I could say let data but in a sense I'm using consequence I'm protecting myself from reassigning the variable data to something else later so I'm gonna say Const data then data dot print will go back here and we'll see there's the tensor now incidentally what if I say console dot log data so the tensor that print function is a helper function in there to let you sort of see just the information the data that's in the tensor but if I actually say console dot log data what you're actually gonna see is look at this whole thing so a tensor itself is actually this complex object it has functions associated with it look at this there's that shape the shape is just for right it's one dimensional and there's just four things in it its size is four meaning there's four right so this is really an and somewhere in here I probably could find the data if I looked hard enough rank one Strides object boy where is that data time out for a second right if you so if you pass a flat alright by the way this is great that Nikhil isn't the chat correcting everything so hopefully people are actually learning something from the Kiehl's comment I appreciate that and thank you Alka for pasting in the Kiehl's comments yeah I'm actually just curious here is can I find the data somewhere in here where would it be values no this is interesting is it just like pointing to like a memory address in WebGL or something like that this shows how little I know all right well I'm not going to worry about this ten start to strain will gives you that pretty print from print oh that's good to know okay okay okay what time is it twelve o'clock oh I'm doing terribly fine this is gonna take me a long time to get through all this stuff alright alright I'm gonna move on so so this is useful for us to be able to see those are a properties of it but most of the time we just want to look at the data so another thing that I could do here is I could say console dot log data to string so data dot print just takes the string version of the tensor and puts it into the console so if I do this hit refresh we can see there's that tensor as well okay now here's the thing what if what I want to do is this these are pixel values oh let's actually say these are pixel values like 0 0 127 255 and what I want is for these pixel values to be a 2 by 2 image to represent a 2 by 2 image so I want to create now I want to create the tensor with a 2 by 2 shape time out for a second my calendar is giving me alerts cuz I have meetings and things coming up it's very hard to make all this stuff happen ok ok so now let's look at what we see in the console now that I've defined a shape look at that we can see that it's basically a twodimensional array and what I could do is what's interesting about this let's say I had two of these images so now there's eight values and we'll make these like totally different numbers now what would happen if I try to turn eight numbers into a 2x2 a tensor a 2x2 tensor look at this I'm getting an error so this by the way this is an error you're probably gonna see throughout your life if you go down this road now not exactly this error but constructing tensor of shape for should match the length of values 8 so this means like hey you gave me eight values but you're trying to make a sense a tensor that only has four values I can't do that and this is actually quite a common error I was trying to work on a doodle classifier with tensorflow da Chasse earlier this week and I kept getting all these errors because I was trying to train my dataset what didn't match the size of what the machine learning model expected so we're getting a little baby steps into that this idea of if I'm preparing data as a big of I'm loading it from a file a spreadsheet and I have a big list of numbers I better have the right and a lot of numbers to put it in the right size tensor and so this can now be corrected in the code because I can say well actually what I want and it's awkward that all these numbers are just two but hopefully you're following me here is I want to have two by two and I want two of them so now if I add the shape is really and let's well I'm gonna give leave it as an exercise to you try to redo this but use like a three by five and so now I'm actually gonna do that myself I'm gonna hit refresh you can see there we go there's my essentially this is the shape now it's two by two by two and actually what's interesting here also is I really am thinking of these as two dimensional tensors so one thing away hold on no no stop roll that back for a second I'm gonna go in a slightly different order okay yes size means total number of elements I believe all right okay okay so let's do a couple more things here let's say console dot log data just so I can see now so what I have here is that the sort of pretty version of the data there it is those are all my numbers now shaped into these arrays now also here look at this I can see that the shape is two by two by two the size is eight meaning there's eight total numbers the type this is something I haven't talked about type is important I'm putting floatingpoint numbers in there so this that's the default type for example this could be 1 27 point 5 and if I'd run this again we're gonna see one twenty seven point five is in there however I could have changed the type to if we go look at the documentation int 32 so for example I could say you know what I want to be more I don't need to have floatingpoint numbers so I could change the data type to in 32 and that's just one more argument for me to add here in 32 now let me run this again and you could see it actually worked fine it didn't complain that I tried to give it a floatingpoint number but it just took off the decimal place and my assumption here is it's not going to round it like if I make this one twenty seven point nine 99 we're still gonna see 127 there it's always going to floor that value meaning taking take off the decimal place so we can see now in making it what's it why is this off there we can see now in making a tenser we have three important properties essentially we have the values these are the numbers that are going to go in the tensor we have the shape which is defining the dimensionality of the arrays of data basically and then we also have D type or data type which is saying what goes in that tensor and the only possibilities are floats intz or boolean z' so you can imagine just like if you know you only need integers you're gonna save some memory or some GP Younis by using integers instead of floats so this is what it means to make a tensor so I want to do two more things before I move on to the next video we'll start to look at some operations on mathematical operations on these tensors and and and also I need to talk about the difference being at so let's do a couple more things number one is let's let's um let's do something a little more interesting let's make a a tensor that had that is um five rows by three columns five by three so I need fifteen numbers so let's let's make an array well I'm gonna I'm gonna be a human who uses the constant at values is an array and I'm gonna just say I equals zero eyes less than fifteen i plus plus I'm going to make up some pretend data and I'm going to use P five random function I could say math dot random if I wasn't using P five between zero and 100 and then what I want to do is and then I'm gonna then I'm going to make a shape and I'm gonna say the shape is five by three then I'm going to say Const data equals TF tensor with the values and the shape so this is perhaps a bit more like how you might want to do it right for example I load this is me loading in a lot of data from a spreadsheet or another API or loading image files and converting them to pixels there's actually from pixels function intention flow digest that will just take pixel data and turn it into a tensor but so basically so so I have 15 numbers I set the shape and now I have this tensor and now we're gonna look at it down here let's take a look and see if this worked so now we can see now there's a little bit awkward to look at cuz of all but there we go look at this it is five by three five rows three columns so this is working this is good now what happens if I were to have 30 numbers I get that error but again this could be 2 by 5 by 3 and now you can see I have two chunks of 5 by 3 data so now at least we're able to see how this kind of shape stuff works and if I wanted to I could also add back in int 32 because maybe what I want are just integers and you can see it looks a little nicer there now here's the thing all this time I have been using just a generic tensor TF tensor but if we look at the API and this is the last thing that I wanted to point out here if we look at the API what you'll actually see is first of all it's scalar so this is rank of 0 meaning a single number rank 0 there's a idea of a ranking here tensorflow 1d is rank 1 that means a vector tensor flute atf tensor 2d is a matrix that means a matrix and 3 so even though you can just use TF tensor it's going to make your code more readable and you're gonna protect yourself for more errors if you use in here the actual if you actually specify the rank that you intend so for example if I just go back to the console for a second and I hit clear I could say scalar 4 so this now num dot print is just a tensor with a single number that's scalar now again I could have said num T equals TF tensor four and then I could say dumb t dot print this is exactly the same right TF tensor for or TF scalar but I've have possibly more legible readable code by saying TF dot scaler that's good right okay now let's think about what's going on here well this is really I really thinking of this as a 2 D tensor but I have a rank two but I have more than one of them will this work for me if I say tensor 2d let's take a look it does now if I were to say tensor 3d with this work yeah why is that bit but not if I went back to 15 right oh no I guess it doesn't wait hold on yeah okay well hold on let me think about this well I have to stop for a second this is where I oh wait hold on I got a look at the chat here yeah oh people are talking about in 32 versus float in 32 versus float I should have mentioned that let me let me mention that in the chat so wait I'm I don't know why I've really confused myself about 2d or 3d so let's look at the let's look at the documentation here for a second let's look at 3d example yes so this is really okay so really 4d yeah so really I'm really I'm like dude so that's my question here is that's my question here let me think about this for a second which is correct in this instance let me go back which is correct here I think this is really this is correct right because it's rank three I guess it just works anyway because I'm specifying the shape I see so if I didn't give it the shape but no it whoops oh did I oh whoops I lost the I think you found a bug sensor 2d the shape should have two values tensor 3d the shape should have three vows oh good I have woohoo I did something useful today should we file it as a github issue let's follow does a kid hub issue everybody even though I have to go in about ten minutes I haven't even finished making this one tutorial okay let's file this is a github issue let's go let's be good citizens everybody tensorflow J ass github let's go to issues and let's figure out this bug so hold on a sec we're on the server here so write this 30 30 30 30 30 30 30 all right hold on so okay so let's let's go back to putting the shape oh no three shape to be okay it requires shape to be provided that makes sense when the values are a flat array of course there's no way it could infer the shape if it's a flat array so that's fine so a shape shape let's do this so that's this is correct and this is the expected behavior this is incorrect this should give me an error yes okay oh they're already working on a fix all right so should I not file the issue is this good this is good it's good this is good to file an issue I know you're already working on a fix let's do it okay new issue oh my goodness okay 2d 2d were tensor 2d works with a shape of with a with a rank three shape okay so the tensor flow version is this one so by the way this if you're filing an issue this is wonderful the tensor flow J's project has a template for the issue so I want to say TF just version browser Chrome and then I'm going to go to my browser and we get the version version is chrome okay okay while making a video tutorial I found that TF tensor 2d does not throw an error if I pass it a rank three shape ie so let's go grab this code now and let's paste this in here let's clean it up a little bit let's do this because this code won't work without p5 so I'm going to change it to this so by the way a couple little github tidbits you haven't seen this these back ticks are for a code block and if you say what language the code blocks in it will syntax highlight it for you we can go to preview here so I put my TF jazz version version of Chrome I wrote a little explanation okay so I think this is probably pretty good and so I'm going to file this issue file this issue okay there we go all right this is fun times okay so where was I in this tutorial I'm gonna shoot let's let's I remember I was so this is where I was okay alright Sam the krail thank you for your super chats it is very kind of you I appreciate them advise that the YouTube has this feature it's very nice that people want to support while they're watching live stream I also have a patreon that you can join if you're so inclined and that will get you an invite to a slack channel where we'll discuss stuff what's commented out in my bug report shoot oh sorry let me thank you let me fix that okay great okay thank you Sam the Grail okay actually Sam yeah Sam the Grail okay alright let's go back to here alright everybody all right I got it now so I'm gonna come over here hours I talking about this I don't remember not yeah I'm sorry again so even though I have I know I know I remember I think okay so even though I am talking about I'm making these things as a generic tensor if I come back and look at the documentation if I come back and look at the documentation I will actually find oh we don't know I talked about that then I did the scalar thing okay sorry I did all this already then I went let me go back from where here yep this and okay this is where I was this is where I want to go from okay so now if I go back and look here even though I'm also just using the generic TF tensor this is really a rank three tensor a three dimensional tensor so to make my code more readable what I want to do is and and also to protect myself from errors what I want to do is come here and use TF tensor 3d so again if I know I'm just making a one dimensional vector I'm gonna want to use tensor dot 1d if I'm just making a single number TF dot scalar 1d so I'm just gonna change that here TF dot tensor 3d I am now going to go back to the sketch I'm gonna hit refresh and we can see there it is here is my tensor which is 5 2 by 5 by 3 okay so this I think this concludes this particular video tutorial where all I have done is show you what is it what is it answer how do I make a tensor what is shape and what is data type now that I have this building block finished in the next video I need to actually talk about something these tensors are some are known as spooky music immutable whoo spooky whatever I'm not gonna bother this music they're immutable I cannot change the value so there is something called TF variable and the distinction between TF tensor and TF variable is important and I probably want to look at reshaping tensors although as well as I want to look at the operations so what does it mean to multiply tensors add stuff to tensors square tensors what are the kinds of operations mathematical operations just like there are a whole bunch of mathematical operations with a p5 Ector what are some of the mathematical operations with a tense below GS tensor ok so that's what will be coming in the next couple videos alright everybody I did not get nearly through nearly as much as I had hoped to get through today but this was good I think I have a better sense now actually of what a tensor is and and how to create them I do oh and I want to look at one all these things well I think though mostly things random oh this is so useful random uniform I got to come up with this but the most that stuff is gonna come up zeros as I that's really so you there's all sorts of stuff here by the there's all I would encourage you I have to go in a minute so I'm gonna I'm definitely gonna be back next week doing a lot more of this but if I can make it I was gonna come back this afternoon I have this sort of weird idea let me I might put a little thought experiment out there so something that I've been wanting to do a coding challenge for is the water ripples algorithm this is a water ripples algorithm that I used probably like 15 years ago in a project and it was used it was this wonderful webpage and I preferred to do this too it's hard for you to see so let me just and it has this interesting algorithm trying to think like would it be crazy to do this with tensors and it makes these nice like water ripple patterns I mean there's no need to do this potential oh yes and it's a little bit crazy probably to do that but anyway I was thinking of doing this as a coding challenge making this 2d water ripple based on this particular algorithm so so yeah so I didn't get I guess to match yeah I made two two videos edited videos will come out of this one is my overview thing and the other is the basic introduction to tensors and then I need to come back and do the rest of the stuff let me see if there's some questions people are asking I don't see any useful questions in the chat thank you Nikhil for watching helping answer a lot of questions and people were asking in the chat and answering my own questions and correcting all the things that I got wrong noob phobia asks how long did it take you to learn all the languages you know I started programming in really in 2001 so you could do the math from there a long time I guess I actually didn't start programming until I was 28 also which is I think important to mention because I get this question a lot like oh is it too late for me to start learning programming and no I don't think so good tensors be advantageous to use in non ML programming over matrices and vectors yes yes and no so I mean I the event I mean the concept of a tensor is the same thing as a vector or a matrix it's just more generalized and the the advantage you would get to using tensorflow j/s to have tensor operations in non quote unquote machine learning applications would be that you get the WebGL hardware acceleration so the real work that the creators and developers of tensorflow chassé have done is magic of here's my arbitrary array of numbers make that fit into a WebGL texture because what gel just knows about image textures which are matrices and it does fast operations with those so how does this generic thing of numbers that I want to have this shape fit inside a WebGL texture that's what tensorflow digest is doing behind the scenes so that can make things really fast that issue is and we're gonna see this later is there is oh it is expensive computationally expensive to copy the data onto the graphics card so when I've done some experiment experiments where I'm kind of like doing things one at a time like I have this bit of data copied on the graphics cards in another bit of data copied on the graphics cards I'm running into performance issues whereas if I can get a whole batch of data and copy it all at once what the program's gonna run a lot faster so you have to think in terms of scale and batches and and how you're using it but yes there could be some advantages what is your math background dan amateur interested in math person that's my background I did actually technically major as an undergraduate sort of in mathematics my major was math and philosophy so I did take a lot of math courses many many years ago but I don't none of which do I remember my background is more recently in stuff that I've been trying to learn and reteach myself can you use Tesla Digest for decentralized ml in the browser probably not something that I know how to do Oh someone can teach me about decentralized ml what are the languages you learned okay so the languages that I know programming wise are well probably job lingo I started with the lingo programming languages Macromedia director check out John Henry Thompson's guest video on the coding train creator of the lingo programming language so into Java pretty pretty well from working with processing for many many years I know Java learned JavaScript just a few years ago to start working with p5.js and other web stuff that's I mean maybe I kind of like I can tiptoe around Python not and kind of get my way to the end zone if I have some good examples but I have to look every when I'm working if I have to Google will get the documentation I don't know any of the Python stuff inherently at all C++ I used to do a lot of C and C++ I forgot about that oh and I took a course once or I had to program in ada 95 alright everybody so I hope this was useful I hope these two chunks of video tutorials that I made will work if I can manage it if I can manage it I would love to come back this afternoon just to do a coding challenge that would the earliest that would be would be 3 p.m. Eastern Time and oh I should say one of the reason why I have to go is because I have an appointment to fulfill patreon rewards so I apology if anybody's watching there's a current patron of the coding train and I haven't sent you your book or stickers yet my apology apology is I don't have a good system I'm pretty pretty slow with that but a whole new batch of those is going out this afternoon that's it so schedule wise I will definitely be back next Friday let's look at a calendar I don't think I've like logged into my Google account so I don't want to um so let's look at a May April May 2002 this is going to incognito window right can I get with Google just a generic calendar no you have to sign in April 2000 18 all right so this is good oh wait May next Friday is me all right so looking at the calendar here I will be back May 4th this week is thisis week at ITP where I teach the 7th through the 11th there will be no live streams this week however if you go to ITP NYU edu slash thesis this is the schedule of thesis week and this whole thing is live streamed so I will tweet about it I'll try to make a post community post on YouTube but I encourage you to tune into ITP so thesis week there are some really exciting projects let run the gamut of so many different topics there's some machine learning ones that I definitely think those your interests in that topic will want to tune in for presentation schedule here's the presentation schedule so you can tune in during all these times to see all these theses so there will be I'm not livestreaming this on the coding train I wonder if I could like rebroadcast it somehow but so that's happening next week and then this is the ITP end of semesters show I usually try to do a live stream walkthrough interview things so that will happen on the 15th or the 16th and then the summer summer winds blows sweetly in from across the sea so then I'll be then I'm gonna really be diving into this content hopefully starting the week of the 21st of May through June July August I'm gonna be away quite a bit so August might be a month hiatus we'll see but that's kind of my friend alright so thank you everybody again for tuning in I localstorage anyway local storage I definitely need to do that hold on hold on this is where I'm gonna remember this stuff because this notes for next time oh yeah okay hold on let me just do this oh let me just add notes for next time local storage so these are things that I want to like cover next year that maybe don't have videos on okay so I made a note of that there alright um thank you everybody supposedly one of these days I'm gonna get one of these like altro videos to play here I'll just play my weird trailer thing as the outro video so to play the weird trailer thing as the outro video I'll be gone just follow the channel subscribe with the alarm bell will tell you if I'm going to come back this afternoon because I will set it up as an event with set the time for it or check my twitter twitter / twitter.com slash Schiffman i'll tweet if i'm going to be back this afternoon depends how today goes a lot to do okay there we go Mike creation you