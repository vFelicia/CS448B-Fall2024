welcome to part two of making a shared collaborative drawing space thing in the browser with p5js node and sockets so what I had before was just a simple node program the only thing that it does is spit out my socket server is running but our job right now is to actually add code to this program that starts a web server and makes sockets available for the p5js drawing thing to connect to but here's the thing I missed something in my previous video where I talked about the fact we're going to have this node server we're going to have this p5js sketch the p5js sketch is going to connect to the node server with sockets but interestingly enough if you could just forget about sockets for a second there's another reason why you might like to write your own node server to host your actual files as well right when you do client side programming the JavaScript code executes on the browser but the browser has to get that JavaScript code from somewhere like when you type in google.com and there's JavaScript running on your browser that Google wrote you know the JavaScript is sitting on Google server gets sent to your browser via an HTTP request hypertext transfer protocol so one thing that we want the server to actually do Beyond just sockets is host the HTML and JavaScript files for the sketch itself so before I even get to the sockets I want my server to be come to be a web server and I could write some node code to do that but an e a way to do that that's a little bit easier than writing node code from scratch is to use something called a node framework a node package a node framework or package I think are good words something called Express so the first thing I want to do is show you how to install Express use express and write some Code Express is a like guess a minimalist web application framework a lot of things that you want to do very commonly like host files or set up you know query or route or all the kind of stuff that I might get to in other videos instead of having to write all the code for them you can call on some functions and express that handle a lot of that stuff for you so let's come back over here and I'm going to the computer's over here I'm going to go back to terminal and one thing I want to do first I'm going to attempt to be a proper citizen in the world of node programming and I'm going to run you don't you my node program worked without doing this but it's often a good idea to to to uh to write this command called npm init what npm init does is it sets up npm stand for by the way node package manager and I'm going to need the node package manager to install Express and what npm init does is it allows me to um sort of set up a configuration file that says some stuff about my project and you know what this looks good my project is is going to be called sockets coding rainbow uh can no longer contain capital letters so I will rewrite that without capital letters version 1.0 is good description sockets example Live on YouTube Mak s entrypoint server.js test command I don't worry about that I'll worry about that later uh sockets p5js node author is me and license I don't know figure that out later yes this seems fine so I went through this npm init thing and it what that actually did is it created this new file called package.json and what package.json is is it's a Json file with information about my project again I could probably do this without this completely look at that how does it know that the dependencies are expressed in socket.io whoa some crazy internet thing just happened did I put that in oh no I'm in the wrong place I opened the wrong I opened my earlier example okay this was my earlier example by the way I'm not I did this earlier today I'm not just figuring it out right now okay close that I should go here this is the package.json file that just got created and you can see here there is the information that I typed in the title The version and you don't see what you're what you don't see are dependencies so the first thing that I need to do in order to be able to add this thing o dramatic moment to add this thing called Express is I need to put in this package.json Json file that I'm going to use a node package called Express only I don't actually have to type it in there because what I'm going to do is I'm going to just say npm you see this got to move this over npm install Express now I want to do one more thing I want to dash I want to write D saave and what this command is going to do is it's going to say put save Express as a module that should be associated with this project I'm going to do this it's going to blah blah blah blah magic magic and then if I go back to here you can see now in this file it has a dependency on Express so this is just a lot of I mean this is like the least interesting thing I could probably ever do with my day is talk about like package.json and packag manager Express blah blah blah but these are the steps you want to do to kind of set up your project before you write code you'll also notice by the way that there's this new directory here called node modules so no modules is where the all the code and stuff for Express actually got placed by when I typed um when I typed npm install Express okay so later I'm going to add the socket module but right now I'm just going to keep the express module okay so I hope that cough wasn't too loud into the microphone uh what's next everybody so now we can start to oh that's the that's my secret code no not here so now we can start to actually write we can actually start to write some code uh into our server itself so one thing that I'm going to do is I'm going to say VAR Express equals require Express so this is a way is that that what I wrote over here yeah this is a way of importing the module that you're using so the module name is Express and I want to require that Express is something that I have access to in my node program and essentially I want to import all that is the live all that is the framework Express and I want all of that into a single variable called Express the reason why I can do and that variable by the way is a function call I mean the variable is a variable but it's it's it's storing a function a JavaScript function you know what that JavaScript function does it makes an express application so I can trigger the express function and store the result of that in a variable called app and then even better what I can do is I can say um server equals app. listen Port 3000 so now dare I say if I run the server my socket server is running and look at that it didn't go back to terminal something's happening something is there on Port 3000 and I can go to my browser and say Local Host right this Local Host being the server is running on my local computer if this server were running on you know the New York Times website I would go to New York times.com colon Port 3000 but I'm not the New York Times in case you were wondering and now I'm going to hit enter and now it's like ah it doesn't know what to do but this is reasonable right because I haven't told it what to do there's no files there's no instructions for it to follow but this is the basic idea the basic idea is that I want to and and by the way you could do this without Express but it would be like 10 11 12 lines of code so I'm using Express to set myself up for the future of Life of less worry Express will give you less worry in your life so I require the library I create the app I listen on Port 3000 and now what do I want to do what I want is when the user goes to my website I want them to see my p5js sketch so the main thing I want to happen is I want to send my HTML file along with my Javascript file and everything else so they can EXP experience my sketch well one thing I need to do in order to do that is I need to go to this directory right this directory has a lot of stuff in it right now it has both the node stuff like server.js and package.json and the node modules and also has the p5js stuff an HTML file sketchs and a library I don't like this everything's mixed and a mess so I want to make a folder and I'm going to make that folder called sketch now truth be told probably if you see examples most people are going to call that folder public let's call it public the reason why I'm going to call it public is this is like going to be where I put files that I want the public to be able to see when the public goes to my web server they get these files and so what are the things I don't want them to see my server code but I want them to see my p5js sketch so I want the HTML file the libraries and my Javascript file and I want to put that here in public now what I need to do here is add another line of code which allows which says I want to host those F whenever any goes to my website I want them to see those files so the way that I do that I'm just going to copy it from over here um and I'm going to put it right here so this is what the code looks like app.use express. static so what's the word static for so the word static here is hosting static files so those are files that aren't Dynamic and changing they're just like here's an HTML file here's a Javascript file here's some images I want to host everything I want I want the app to use to to host everything in that public directory so that when the user goes to my website they see what's in the public directory so I'm going to hit save and now I'm going to hit control C I'm going to run the server again my socket server is running I'm going to hit refresh and look at that I don't see cannot get anymore but I don't see anything in there why don't I see anything in there well I don't see anything there because there's no actual sketch so let me go into public let me go into sketch. JS let me say create canvas 200 200 let me say a background 51 let me say ellipse like Mouse X Mouse y 660 and Let me refresh again and you can see there we go so now I actually am hosting a P5 GS sketch from node with just with Express with just an uh you know four four slash five lines of code so by the way I have another video which I would like to reference somehow with a link where I looked at how you can run a local server on your computer using python simple server well now here's another way you can run just a local server on your own computer with node with Express with four lines of code so we've got the basic idea now we know what node is we've installed it we've got Express we added a little bit of code we are now seeing our sketch in the browser the next thing I need to do is add the socket package I need this server to be able to make socket connections to the browser the client itself to be able to send M messages back and forth and that's what I will do in the next video