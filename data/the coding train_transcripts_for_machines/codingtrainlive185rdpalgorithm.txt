testing testing 1 2 3 and we are here and live good morning it is me the coding train I again this does happen very often so I have to tell this story once again I just realize I told the story before but somebody on 4th Avenue in South Slope Brooklyn said hey coding train that's me I am coding train good morning you are watching the coding train with me coding train would stop setting that over and over again this was a little touchandgo this morning whether or not I was going to be able to be here because I feel even more unprepared than usual usually I am very not prepared for this today I am just completely not prepared for this but I didn't want to get too far behind it is my goal it is my mission to stream once per week not every week throughout the whole year but during the fall season during the spring season and during the summer season so this coding train happens according to an academic calendar I have my fall coding train season in my spring coding trades season and then the summer and this fall is what you're seeing right now which is mostly going to be focused on content related to my introduction to machine learning for the Arts course however I am still doing coding challenges got to get back into the rhythm of that I do have a coding challenge video that not you haven't seen unless you are a coding trained member which will be released later this afternoon if I can get my act together as soon as this is over and finished sure the captions are working and there's like a thumbnail and all that nonsense so I'm very excited to to release that video later this afternoon so stay tuned for that if you want to see it now it's it's sitting there as a like membersonly video if I Naboo who wants to paste that into the chat you could take a break from watching people I've enjoyed and watch that but I'm really not I'm not I'm not here plugging that you need to join or anything look it's a mug coding trademark I found it in the kitchen here at NYU where I'm live broadcasting because I bought it and then I put it in the kitchen and it's still there no one stole it and took it home which is very nice hello to India Jarmo bin smoked rights I usually watch him in 2x speed but can't increase the speed in live video oh yeah here we go welcome to the car degrade good life became that I do from NYU every murder when I did come to them no it didn't work I can't do it by the way the the new video series that I'm launching today I'm not spending way too much talking about this because that's definitely lower your expectations first of all the I messed up some stuff that I didn't do very well in this first video that I think I could improve but I'm trying to go for a more like relaxed meditative vibe whereas these live streams tend to be Reaper phonetic as you might be aware of I'm also once again I was like moving some furniture tweaked my back a little bit so I'm moving a little bit more slowly today but I think I'm gonna be fine alright what why don't you make a video on making the pacman game maybe you can add AI to it later right Soochow I want to make a video on the back I think that some of the games that I want to eventually do like pacman Tetris are involve quite a bit more than say flappy bird chrome dinosaur game even pong was like quite complicated it's for me at least so I haven't figured out a good way to approach that I need a full like to our live stream to do it probably or I need to do it with this alternate way of creating a coding video that I'm doing at home and which would then just be sort of edited so it would be more digestible but yeah what do i what else do I have to say so what's happening today first let me thank I have I just want to say I have the corrected brilliant dotorg link here thank you to coding trains live streams sponsor of last stream and this stream and the rest of the streams this month hopefully friendly org slash coding train brilliant org is a website with a lot of interactive courses and puzzles all later during this live stream go and look at the what the daily challenges today and try to solve it and all of you will solve it much more quickly but check out brilliant organ org slash coding train if you have not ok look at it I by the way I'm not a sponsor but I love this Elgato stream deck it is so much fun I just got to fill it with more stuff so today I would like to I have a few things I want to try to attempt to do today and I put them in the title of this video can I find that anywhere my list I want to look at the body pics model ml5 I'm a little bit torn about this because I hear through the grapevine that a brew body picks model is coming and it's gonna be much you know faster more accurate better so I probably should wait but I want to try to make a video with that and look at that in comparison to the unit face model that I looked at earlier this week next week I should point out that if you're trying to like figure out what kind of stuff I'll be covering I tend to make videos that go along with a course that I'm teaching so if I go to github.com /ml 5j s are you seeing this yes am i standing in front of it yes over here if you go to intro ml arts IMA and i'm gonna look here on the syllabus here this is the syllabus for the course and one of the fit most of this stuff everything that is weeks four five and six it's not really ready for me to do the video tutorials cuz we're still adjusting some bugs and some of the function names so i'm gonna come back to four or five and six everything that was in one two and three i've actually already made videos about there in the beginners guide to machine learning playlist except for you net face model and body pic so I'm going back and that those were those were things that were in week two here and then next week in my course I'm gonna look at the sketch RNN which I have already made a video about and this magenta model which is a melody generator um I want to look at that as well in theory I would like to do that today but I think I might need to do a little prep for that so but one of the things that doesn't work so well with sketch RNN is drawing interactively so sketch RNN if you I made some videos about this previously is a machine learning model trained on the Google quickdraw dataset and it will try to make a predictive vector paths to say draw a cat or draw a snowman or draw a rainbow well there's a there's like three hundred fortyfive different drawing categories so one of the demos that you'll find if you go look at the sketch RNN model is you start drawing the user starts drawing stops and sketch art and finishes the drawing and I'm trying to make a version of that with ml 5 and P 5 and David Hoff is one of the researchers that Google explained to me that when you're capturing the users drawing you're capturing at a certain like basically the sample rate of how many you know Mouse positions are you capturing per second and you need to lower that are raise that resolution of the path relative to what the machine learning model is expecting and this is something known as Rd no there's not there are many algorithms for doing this that I have recently learned as I read the Wikipedia page for this stuff on the subway this morning and one of the more wellknown ones googling RDP does definitely not come up with this um let's try gar DP algorithm and again I'm going to need your pronunciation help Ram's Douglas puker I assume that's how you pronounce it is a algorithm and if I just like zoom way in here we can see it happening here so there is this pairs equation e to the negative x times cosine 2 pi of X which if you graph it as this gif returns back it looks like this nice curve and as you adjust this parameter epsilon you're changing the resolution of the curve so I would like to try this out because I need it in ml 5 I want it to be a part of ml 5 that when you're feeding the points it will adjust the resolution of the path and make and have the model work well so I won't do that today those are my two things body pics and the Rams Douglas puker algorithms so this presumably would be a coding challenge or just trying to do this algorithm and then that would hopefully be like foundation and help for myself or anyone else who wants to contribute this algorithm to like the ml 5 utils package Simon is writing to me did you see my text file with your plan in it Simon is often like taking notes coding terrain viewer Simon is taking notes as I speak and often helping me remember things that I've said before and yes Simon is pointing out that brilliant work has a brand new website design and then apparently I had to plan it so whatever my plan was before I don't know what it was but this is my plan now okay so let me get set up let's I probably should do this first to be perfectly honest let's do this for this is not I just thought of this right now I was going to start with body pics but let's actually just do this first because this is a fun coding algorithm and I think I could do it in processing yeah let's do can anybody tell me how to pronounce oh I think keep saying Rams RAM or Douglas puker do we know if this is pronounced puker pucker poker I would look okay I would love to know so I think what I'm gonna do right now very but for a starting point is just actually program very quickly and I don't think I'll include this in the edited version of the video but I'm just going to program a processing sketch that draws this curve there's got to be in Java a constant for the for the for oh wait for natural number e right it's like if I do like mat Java e how do I do this natural number math dot e okay let's try that because I don't think it's in processing math dot e let's just see I have to import math wait Oh Oh I can do oh no no but I can use the exp method hyperbolic cube right math exp double X right that would be e to that that's what this is right e to the e to the negative x so I can do exponent is that in processing negative x it is weird is that let's go look at the processing reference yes e to the one exponent one is the number okay perfect that's much better and cosine of two pi X I think I don't need the two pi because Oh X goes between 0 and 500 I see cool maybe I should do this and do this in the videos this is so like little but x cosine in this so go between 0 and 5 cosine 2 pi times X and then why I should map that I'm gonna call this Val map Val which probably has a range I don't know what's the range of this I'm just gonna make a guess it's between negative 1 & 1/2 between like height the bottom down to zero oh and I need to draw it and set the vertex XY stroke 255 no fill oh oh I wanted to oh my goodness I've like lost my mind tier X this is X and X has a value between 0 and width in this equation this is actually like pixel X all right fine I don't know uh X Val y Val let's do this and this is gonna be pixel X pixel I mean I'm just gonna use X and Y for the pixel X boy this is confusing map X between 0 & 5 then the Y Val this formula with X Val and then the actual Y is mapping Y Val there we go and this has to be X plus plus there we go there I've got it that took me a minute Oh Simon's giving me the the the list of coding challenge possibilities I do need to spin the wheel before I leave so by the way I have to leave at around 1130 so that's an hour and a half from now and I do it's gonna be actually a really difficult part of this I believe the algorithm I've never done this before I didn't try to do this in advance but sometimes I'll do which helps but I believe part of the algorithm is looking for at the distance between a lot a point and a line so I'm gonna need a formula or algorithm for doing that I think in RDP I read the Wikipedia page a few days ago that's the extent of preparation I've done okay so this is good and I'm gonna save this as our DP algorithm did we get any somebody in slack did anybody in the chat help me with this pronunciation oh I'm gonna think about how to do this but I'm not gonna worry about it right now okay so this is look at that that's kind of pretty let me make it stroke wait for just to like I sort of see it there I like that I wish that processing I used to do this and there's a way to get it to do this I can't figure out how I want it to every time I stop and run it again to keep the sketch in the same location how do I do that there was a way now I'm gonna go off the rails here and look into that for a minute would you like frame set location No processing windows set location I used to framed outlet location set up at work repositioned canvas right this should work I've done that before but I think something changed this is from 2014 maybe I need to do it in settings does anybody know it's really bothering me I really wanted to do this tutorial but I feel like if I every time I run it if I'm kind of like scooching it over here that's gonna be a pain I find something more recent doe 2019 frame moved if frame move frames if not frame huh this is like a court this is like a post from though asked four years ago active eight months ago surface that's what it is it's changed the surface yeah look at that that's good I'll work for me you can see how it like and I assume No oh okay you can put it in set up great so it's a little bit of a flicker I wish I could get rid of that little flickering thing but that's fine okay okay deal with it Dan focus on algorithm no you know I sometimes I need things to be neat and tidy in a way that's I can handle my time is atickin before we begin the range rammer Douglas euchre algorithm it is time to read some random numbers sixtyfive thousand and seventy six eighty seven thousand nine hundred sixty I need progressive lenses I have got to go in the eye doctor ninety two thousand thirteen I cannot read these numbers sixty thousand 16949 thousand one 76 by the way I think I look much older in this new studio it's like whatever the lighting was or something in the previous studio and like washed out my gray hair hair could see the like imperfections if you get those like soft focus filters you know that the soap operas will put on the lenses here because that don't make me look prettier I went down an internet rabbit hole by the way and I'll talk about that another time Redfoo are you watching no maybe say hi in the chat if you are I doubt you are cuz you're in the West Coast that's 6 a.m. a thousand four hundred seventyone 15700 ninety four sixty eight thousand six hundred and twenty two fifty nine thousand one hundred sixty one fourteen thousand four hundred and seventy six 75074 2465 thirty four thousand nine hundred and seventy seven forty eight thousand three hundred nineteen fifty three thousand 26 fifty three thousand six hundred ninety one eighty thousand five hundred ninety four fifty eight thousand eight hundred and five seventy six thousand nine hundred and sixty one sixty two thousand six hundred and sixty five eighty two thousand eight hundred and fifty five forty nine thousand six hundred and eighty nine eight thousand three hundred and forty to eighty one thousand nine hundred and twelve it's it might seem weird to you but this actually really relaxes me and I feel much better my back hurts less I think I probably should get some new music but it's something alright it's pronounced poi rhymes with TOI ker like the start of Kermit poker oh that's great Ramar Douglas poker rammer Douglas poker okay Rafa was saying I must buy this book you can actually go to amazon.com slash shop slash coding train maybe know the coding train yes and you could go here to the trains unicorns and more category and right here million this is the book a night but I really want to find something I've been looking for and I haven't searched recently like on eBay is like original print like eBay maybe if I look on eBay this is dangerous ah here we go um 1955 so is this authenticated I'm bidding on this right now $29 for 12 months what is at least a dozen missing pages no see tape on the spine but readable not super fragile I want this I would definitely use my coding train funds to get this copy but it has some few dozen missing pages Buy It Now Add to Cart 20 what does this mean this like I can like look at this go away this is why I don't like I'm I logged into all my accounts usually the point is I'm not so other information I'm gonna come back to this later let's look at some pictures what's caught like writing in it I really want to find a complete a complete of version of regional print of this especially because I am coming up on I don't know if we'll get there at this point everybody's probably unsubscribed or nobody new is subscribing but I am kind of the momentum is going towards 1 million subscribers you know if we look at a graph a Rus is saying it wouldn't pay that much for missing pages so I would really like to have the original version and I want to read the entire book on a live stream but I that would take a really long time I don't know how to how to make that happen so if you have ideas if you fump anyone can find somebody on the internet selling an original print hopefully without missing pages the condition is acceptable here and go back and see these are all just you know reprints what I already have originally published in 1955 fulltext downloadable so this is good because I could do some kind of clever at least I could do a coding challenge where I create the audio book weird Oh interesting there's a fluorescent light in this room I have some actual like LED lighting for it to illuminate myself but there's a fluorescent light in this room that I have not been on how to figure out how to turn off there's like buttons on the wall they don't work with it but it just went off and then it went back on okay Ramar okay Ramar this is awesome then by delaying and stalling tactic has worked went off again is that can you are you noticing it going on and off alright if I'm being honest this is trying to do this is probably gonna take the rest of the livestream but let's see because let me read this over before I start coding it to understand it the starting curve is an ordered set of points or lines and the distance dimension is epsilon greater than zero okay so I have that I don't have an epsilon variable the algorithm recursively divides the line initially it is given all the points between the first and last points okay it automatically lat marks the first and last point to be kept so I'm probably gonna create an array that has all the points and then a new one of like points in a minute keep then find to the point that is farthest from the line segment with the first and last points as endpoints this point is obviously furthest on the curve from the approximate line segment if the point is closer than epsilon to the line segment then any points not currently marked to be kept can be discarded if the point furthest from the lights I mean is greater than epsilon from the approximation then that point must be kept ah all right I understand this I understand this I will definitely need distance from LA but I'm having a major case of deja vu here googling this exact algorithm on the coding screen before and I've done this distance from a point to a line I I feel like I've done this in a way where I just like took the formula for Wikipedia and some people complained I've done this in the nature of code book program for long enough you learn stuff and you completely forget it and then you have to go look up your own tutorial on it it's really funny how that happens dot product I think I can use the dot product here for doing like scalar projection and don't I have a section in this book on that so maybe I should just okay yeah this is it here right so if I have I have a function that does this it finds the normal point and then that's the disc the the distance between those two points is the distance but do I have this as like processing code in an obvious way right start and predicted location a B I think I have this in my examples ooh this is somebody else's github repo this is mine examples processing agents a path phone let's go with path is there a like a an example simple scalar projection alright yeah this is what I'm looking for let's see what this does ah okay look at this look at this processing example that I made at one point in my life so this is going to be very helpful to me let's alter this a little bit a B and mouse so let's call Mouse actually C and let's do the following a B and C let me just make this demonstration a little bit better okay see a B yeah could be worse let's put the points let's also put it down a little bit and let's make text size 16 okay great so this is gonna be and this is gonna be super helpful I'm recording to disk yes the light going on and off is noticeable there's some interference in the audio randomly I did it in ray casting Oh so I also have it in the Ray casting example let's look for that but I think that was just testing well let's see let's go to Ray casting coding challenge oh I forgot to do community contributions I'm really trying to do that more regularly a download view code processing let's see where is it in this particle look walls probably in there the walls are a line segment a boundary object cast wall ray cast wall and then this okay so the function I'm looking for is cast so this might actually be a better place for me to pull it out from boundary is not array oh wait cast yeah uh oh I see right this is when I did it before and I just used this formula so could I just take this maybe I should take this formula and wait x1 y1 x2 y2 is the wall oh but I'm casting a ray in a particular direction so this is not giving me the normal this is giving me the distance this is two line segments so actually this is not what I want this is not what I want ya to see if two lines intersect it yes so this is not what I want the the nature of code example is what I want and I presume ibly that's also in here my distance of a X plus py mom I'm yet presumably that I'm doing this which is the same thing that I derived and explained in so I'm gonna do that here I've got this I don't need I've got processing open and here we go great so I've got the scalar projection example I have got sketch how do I do this the RDP coding challenge whoops how do I why is that not switching shouldn't if I go here at switch all right just do that huh interesting that's like why is this bug happening where it's not switching well a lot of people keep asking about doing like log averages I don't know what I did to like a cause this desire for so many people to comment about a video on log averages I think that has to do something with like the ukulele tuner which I did in this weird way of the machine learning model yeah so I'm so many things I want to do in and have a list to do so I can't get to everything I would like to thank you for the suggestion okay Ramar douglas Ramar douglas poker that's how I'm choosing to pronounce it is everybody okay with that Aneesh Chopra guy writes I know nothing but I'm still watching I don't know why hopefully maybe yet and then mr. kamikaze writes you'll learn something hopefully maybe you'll just be entertained or soothed soon there goes the light again back on but I would say that if you are interested in following along I might suggest going back to the playlist which is just called code and introduction to programming with p5.js that will be the place to get started from scratch ok it is time let me make sure I have this whiteboard camera going I love this whiteboard I need to do like the white balancing and stuff and focus with this camera and I just didn't get to do it I don't think this is gonna work as an eraser this should need some water to go with that shoot how do you spell this Ram's Douglas Raymer Douglas boy crack you think Ram's I don't know why there we go today it's coding challenge thumbnail probably not it's the audio okay a Bueller asking where does the whiteboard start and end so the whiteboard starts right over here it's actually beyond the cameras view and it ends you can see this line right here ends right here and it's not paint this is a wallpaper and in fact I'm so excited about this I don't know when I'm gonna make use of this but is magnetic so if I had something like I don't know if it's strong enough these magnets wait we would I could keep like a little green cloth like there we go see it's magnetic I don't know it's fun by the way does anybody subscribe to the Curiosity box if you got a curiosity box this month go and look I don't know if you know what I'm talking about I'm sure if you google curiosity box you'll find it go and look in the little magazine there's like a little there's a page about the Kodi train and I they sent me one of the Curiosity boxes since I was in there and it's like so great there so I think you scrapping not a processor but it's like so cool there's like I have got this crazy like ruler and a Newton's Cradle someone actually bring those things they're fun okay all right it's time it's been a really long time I've been live streaming for almost an hour have not coded anything that's not good but this is how it goes okay hello and welcome to a coding challenge in this coding challenge I am going to attempt to program the I always just have to just started over one more time Victoire writes I'm alone in University studying discrete mathematics thanks for the company hello I'm so glad that we can be virtually together today you studying discrete math Maddox me trying to remember something that I might have done or studied years and years ago 46 minutes says Yan or Jan if I've pronounced that incorrectly all right here we go hello and welcome to a coding challenge in this coding challenge I'm going to make what you're seeing right here which is a curve lowering its resolution I'm the same curve is being drawn over and over again with fewer and fewer points this is known as the Remo Douglas poker algorithm now there are many different algorithms for doing this same exact task but this is a particularly wellknown one the reason why I want to implement it is hold on and pull this up our DP hold on here we go this is we're looking for okay hold on hold on everybody we're getting there we're getting there which this did cats but snowflakes will have to do maybe I'll just go to the cat one even though it's not sketch our and nno oh right okay hold on cats oh it's yeah cats there we go these are actual cats but Joshua Noble is it that Joshua Noble hi Joshua no ho right snowflakes are really just abstract cats which is quite true by the way if you haven't followed my cats on Instagram it's mango and goose all one word mango and goose if you like cute kittens are now getting kind of big they're not gonna be kitten so much longer follow manhood goose on Instagram okay I am working on a new example with the ML v JS library that allows you to draw with the computer or with a particular machine learning model that model being sketch RNN which I've used before in a video about snowflakes and that model was trained on the quickdraw data set so here is an example of redrawing doodles of cats from the quickdraw data set that I also did in a previous coding challenge and in order to draw along with it I need to capture the user's path the you say that again cuz remember I don't like to say user anymore correct myself I need to capture the person the person whose drawings the the path of their mouse and the resolution of what they're drawing might be capturing so many points along the way that that's going to confuse the machine learning model and researcher at Google who worked on sketch RNN explained this to me on on github and so one of the things that I want to add to ml 5j s is this RDP algorithm to be able to reduce scale the resolution of a path that's being drawn so in this coding challenge I'm not going to worry about ml 5 or sketch RN or any of that I'm just going to try to recreate exactly this I'm gonna start with this formula I'm gonna draw this graph and then I'm gonna vary a parameter called epsilon and see if I can lower the resolution of this particular graph I think lucien the right term that i have to use here hmm will this algorithm reduce unnecessary points on the drawing yes yeah there are other applications of this kind of algorithm certainly if you're want to increase the performance of a graphics out application you can use RDP to basically remove unnecessary points I mean that the what's necessary what's unnecessary is a complicated question but you can reduce the complexity of a drawing to maybe speed up performance of a graphics application without the viewer the person watching really noticing granularity fidelity I'm not really I'm not really sure if resolution is the word I'm looking for here people in the chat are suggesting granularity fidelity but I think I think all of these words kind of describe what it is I'm going for the number the distance between individual points along a path point granularity I guess maybe is the technical term for this let's see if it says find a similar curve with fewer points yeah and on Wikipedia I think a nice way of describing this is the purpose of the algorithm is to find a similar curve with fewer points so depending what that epsilon is let's say can we approximate that curve with the least number of points you know fewer points turning the epsilon up more points turning the epsilon down okay okay point density is another term lots of terms let's see here this is what I'm starting with so I've written a little code before if you want to okay I wrote a little code before hand to get so that I wrote a little code beforehand so that I had it to get started if you want to see me write this code you can find the link to the live stream associated with this edited coding challenge it's not edited right now as I'm doing it but it will be later and so what I've done here is just taken that mathematical function which is right here f of X equals e to the negative X of cosine 2 pi X where X between 0 and 5 and I've graphed it in processing so you can see I'm doing a loop here between 0 and the width of the window in pixels I'm mapping that x value between 0 and 5 then I am doing that exact formula e e to the X is with the X exp function and processing cosine 2pi times an x value and then taking the result which is range between negative 1 1 and mapping it back to pixels so if I run this we'll see I have this graph but what I need to do now is create an array with all the points in it and I think I'm gonna end up using an array list which is always a little bit awkward but let's do that so I'm gonna say array list and let's call that it's gonna have P vector objects in it and again why not eventually if I make a JavaScript version of this it's much simpler to just have a plain array but a resizable array in Java is a little trickier so I like to use array lists call this all points is a new array list with P vectors in it that is empty and so now I can say here all points dot add new P vector and in p5 would be create vector X comma Y I think it's an interesting question of should I perform this algorithm on the units that are the in the sort of range of 0 to 5 negative 1 to 1 or should I perform the algorithm on the pixels I don't think it really matters but I'm gonna do it on the pixels because that's gonna be closer to when I do it with like user drawn paths so I don't know how long I want this coding challenge to be or how much time I have but ultimately if I can get this to work the next step would be have a user draw a path and then play with that curve maybe I'll leave that as an exercise to you the viewer okay so now let's actually not draw here let's get rid of the drawing here and let's put that into draw itself so I'm going to say for every P vector V in all points of vertex and and shape and I can get rid of the drummer by the way if you're wondering what this surface that set location is it's just so that when I run the sketch it'll appear over to the right every single time with so it's not obscuring the code a little it that's how you can set the prospect window to a fixed location clean up some of those white space here because that's that's how I roll okay now we have all the points in a list what's the next step will actually implement the algorithm let's read together the algorithm for a moment no maybe I'll just describe it now that we have all of the points in a list we can iterate over that list presumably and implement the algorithm so what is the algorithm you can find a narrative description the algorithm here and you can also see another nice visualization of it happening let me try to diagram for it and sort of explain it in my own words the way that I understand it well I don't know if that'll be better than you're just reading it you know skip ahead a minute and read this instead I leave it up to you by the way I doing more things in silence now when I don't need to be necessarily be talking through it and in the idea that when these coding challenge gets edited you could kind of speed through me drawing this and it'll just be there I don't know if that's a good idea or not it also gives me like a moment to breathe here do I think I probably want more points than this oh this is not a good eraser that's not gonna work so I'm using this right now just add a couple more points okay I don't know how well this is gonna work as a demonstration we'll try it so here's a path with 1 2 3 4 1 2 3 4 5 6 7 8 points now presumably when I actually do the algorithm there's going to be lots and lots of lots and lots of points very close together but to be able to describe it through a diagram I need a very low resolution or low fidelity a curve or path so the idea of the algorithm is a recursive algorithm what I mean by that is we're going to be dividing they set this like continuous series of points into subsections and applying the same algorithm to those subsections which they'd get divided and we applied to those subsections as well it's simply gonna make it hard to program but it is also it's quite elegant and lovely alright so the first thing that you do is you we need a list of points that we're gonna keep so we're gonna keep start and end that's the first part of the algorithm keep start and end so this is the start and this is the end so we know at a minimum we need those two points right because in a way this is an approximation of that curve it's like the lowest fidelity approximation but an approximation nonetheless so now we have you know if I label these a b c d e f g h now we have a list with like a and h in it the next thing we need to do is we look for the point along the curve that's farthest away from this line segment by that i mean we look for this distance the normal from all of these points to the line segment and just eyeballing it it's either B or G let's I mean obviously we can compute this and I think it's G I have to take a break for a second thank you to new member dis tensity No thank you very kind of you Oh dark Sider says I seemed gloomy today I don't feel I do feel a little tired if Friday I'm always tired it's gray it's cold it's a little chillier but I don't I don't feel gloomy and I said fidelity yes okay I'm gonna just repeat what I said before I I kind of want F I think this is like beard beard G is a bad example to pick cuz it's kind of like just the end point so let me let me do something where I adjust this so there's a slightly better demonstration and let's just say that F is up here just to make this a much more obvious Hut what am I saying just to make this a much more obvious well say it again try it again just to make this more obvious I'm putting F up here actually because that way we don't have this it's also like I kind of want something more in the middle if it'll be a better demonstration of the idea okay so I found the point farthest away from the line so that now I think I then test that point against this epsilon value but let's come back to epsilon in a second I'm not entirely sure I'm gonna go back to the Wikipedia page but what I do is I say I want to keep that point so I'm gonna keep that point and now what do I do I have two more now now this is the recursive part now I have another path that goes from A to F and one that goes from F to H and I apply the same algorithm again so now I take this line segment and look for these distances from C D and B and I would say eyeballing it C is probably the one that's farthest so I'm gonna keep that and we can see how now if I stopped here this is my approximation I go from A to C to F to H and I think epsilon has to do with this distance threshold I think at a certain point we realize the point that I'm keeping is within a certain distance from the curb itself that I can just stop and discard it I think that's what epsilon is let's go back and confirm that and here's I mean let me actually just do this for a second and here's the highlighted section this is exactly right if the point furthest from the line segment is greater than Epsilon from the approximation then that point must be kept so the album is going to recursively saw call itself over and over again as long as the points it's keeping are far greater than Epsilon once it finds they're less than Epsilon it will stop so it's not about an exact number of points it's about a threshold of approximation to the fidelity of the curve Simon is telling me that E is farther from C than the line maybe he is maybe Simon is measuring with a ruler oh I didn't see e there I forgot about e quick correction thanks to Simon in the chat I sort of forgot that I had this point e here which if I if this is my approximation this one is actually the farthest one so this is actually the one that I would be keeping next and then I would be recursively subdividing the segment here and checking these but the idea was correct I just forgot about the point e let's go try to implement this hmm so I'm trying to think how I'm thinking about how I want to do this do I want to delete point I want to make an object that like is rapsa P vector and then has like a true or false flag for whether it's been checked or not it should be kept I need to like I think I want to like use the index value into the ArrayList probably so I want to start with start and end the index values and then I iterate over and find the index value of the closest one I put those all into a new array yeah I think that'll work all right I think this is gonna work I'm not entirely sure the best way to do this but I'm gonna try with creating another array and I'll call this like our DP points is also a new ArrayList and I also want to have a variable called like Epsilon and let's just set that I'm gonna set that to like 10 pixels right now this is a kind of maybe that's a high number I don't really know let me do that okay and I want to make this ultimately interactive so that I can change the epsilon but let me just do it right now with a fixed epsilon in setup so I should have two curves so for example if I say RDP points you know if I say P vector start equals all points get the first one what's going on here global variable what's going on oh semicolon yes no I don't wanna ask Syria it's a missing semicolon so this is the first step give me the start give me the end and add start and end to this new array then presumably I could also draw the new array and just make it a different color so yeah Oh No so here we go that's my low super low fidelity in visualization of this curve as a line just from the first point to the last point I'm set up to do this I think the way to implement a recursive algorithm the way that I'm thinking about it is to have a function that returns a point so I'm gonna call the function RDP I'm gonna get a list of points I'm gonna get us into index index values I'm gonna get I'll just call it a and B so a being thus beginning B being the end and then let me just so it doesn't give me an error let me just write return null here and the idea is that I am going to find the / iterate this is point a this is point B I'm gonna iterate through all the points and find the one that is farthest from that line segment so I want to go from I equals a to I is less than B I plus plus and I'm gonna have a distance I'm gonna have like the record distance I want to find the furthest one so the record distance can start at zero I can make it negative one just for the sake of argument and then I'm going to say the distance and I need some sort of I need some another function that's going to give me the distance between a point and a line and a way that I could do that is if I think of it this way I have a point a I have a point B I have a point C if I take this line segment find this normal point and find the length of this normal point that would be the distance so I need a function that takes three P vectors and gives me the distance between the line between a and B and the point C so hoho let's try this float I'll call this line oh I'm the wrong camera don't worry everybody so I'm gonna create a function float distant line distance let's call it line dist between a point C and the point a and a point B and that's gonna return some value just put one there for right now I'm gonna have to get the code to do that at some point so if the okay so the start point is start is points get a and is points get B and then actually I'm gonna go from a plus 1 all the way up to B minus 1 and I'm gonna get the I need to get the you know current or just call this point let's just call this point no that's bad that's a key word and in processing I mean it would be fine but current point is points get I so the distance is lying distance between current point and start and end if that distance is greater than uhoh camera whoa camera went off these cameras don't go to sleep what just happened loose cable loose cable I just wiggled the cable and it came back I don't know why that happened 1048 okay if if D is greater than the record distance then that's the new record distance and what I want to do is return that point I'll call it result I'll call it furthest and furthest equals wrecker equals current point and then return farthest okay Oh am i cured Oh weird focus weird okay I could fix this thank you everybody let me just focus the cow was weird why is it go out of focus I'm focusing on the mug which is about where I'm standing better I think probably I don't need to go back it's okay if I'm like out of focus for a little bit I'm gonna wait till the cat chat realizes that I fixed it since you guys are 30 seconds behind and also to tell me that it looks okay now you know I could put the camera on autofocus I just worry about that this particular camera oh whoa this one went out too they both went out there we go this one is set to autofocus which is why I can walk up here and you can see the individual hairs in my beard which I kind of like but this one I have not autofocus okay okay all right everyone's telling me it looks okay now so I'm gonna leave that just in there is blurry and I'll just sorry the camera went out of focus there I fixed it now do they reset after 1 hour and 15 minutes maybe they do maybe they do I don't know these are this so these are Sony cameras somebody could look it up for me sorry I was out of focus there I fixed the camera now okay so this is my algorithm it's gonna return that furthest point and where am i calling that function oh right I want to call it with the RDP Oh P vector next point is RDP right this is going to be busy this is where needs to be recursive so I want the next point so I'm gonna call my RDP function with all points and starting at the index zero and total minus one starting at the index zero and total minus one oh I need the index when it comes back I actually wanted to return the index so I don't want to return I want furthest index because I want to add it here for this index is negative one and then return furthest index this returns an INT so int is next index he is our DP all points so then I would say our DP so the rdp points add all points get next index and then call our DP again between okay so I should also say start index is zero and index is total minus one start end index rdp between and I haven't I have to make this recursive but I'm just thinking this through right now our DP all points just need some start index next index and next index end index let me breathe for a second here I think I might need another function Simon is telling me this would be a good time to do this in JavaScript because I can use a generator function it's true start index I probably fix that already why am I getting a irate start index this has to be start index thinking about this so this is something that recursive function but how do I want to do the recursive call do I want to call it in I don't want in here I don't think so I think I want another function that's that's basically like all of this stuff I mean just this part and then that's what gets called start and yeah he doesn't eat could be passed in array equals yes right right yeah I think I have a flaw I have a fatal flaw here which is that I need another function people in the chat are just explaining what I'm doing I'm reading the chat when with the edited version of the video being uploaded to YouTube yeah next week sometime within a week it's sexy I feel sort of longer process now unfortunately is the way that I'm doing captions takes a little longer but it makes for more accessible video all right I'm sorry I need to like I kind of need a drink of water actually let me take can I take a break now and get some water I'm gonna come back to this because it is 11 o'clock and I'm gonna finish this definitely but I think I need to need a short break so so I'm gonna come back and finish this in like a few minutes dowhile loop yeah that's enough once again to do oh no you don't know about my dowhile loop returning array yeah that's definitely what I want to do everybody say return array so let me take a short break for a second cuz I have I have some new tricks up my sleeve to talk to you about today's sponsor say sponsor is brilliant org you can go and check out brilliant org by going to polenta org slash coding train brilliant work has an entire new homepage design which now you are seeing this video playing I pressed a button and this is coming up so um you know what hopefully if you watch the coding train you are discovering at least through my lens that doing programming and trying stuff with math it's it doesn't have to be dull and it can be fun and interactive and so brilliant is a problemsolving website I also have an app that has that that has a look a similar vibe to it I would say with a handson approach so me here you're just like having me talk at you Wow the camera went off again but unfortunately you're not seeing the camera right now so it's fine but brilliant has all these handson interactive lessons and one of the things that I'm really excited about that I'm trying to dig into more are the courses so now what you're seeing here are all the horses that are currently on brilliant org so there's a lot of math courses there's a neural networks course artificial intelligence course there's computer science fundamentals course which is you know goes along with a lot of the content on this website so there's storytelling there's code ring there's interactive challenges for curious people who want to excel at problem solving and understand the world so you can sign up for free at brilliant org slash coding train but if you want to unlock all of the courses you can get a premium subscription and with with that link it'll give you 20% off so what I typically like to do if I come back to this view of the cameras again is off I'm not sure why this is happening I think there must be like a loose cable I'm just gonna unplug it and plug it back in which is what did it before what I often like to do is try to solve and once again the focus is off ah it's so weird why is it changing the focus every time I turn it off and on if I spent more time learning on brilliant org I might come up with some algorithm to autofocus the camera so what I like to do on the coding train I am a little bit short on time today is go to the brilliant website and look at the daily challenge it's funny I went to my son is in fifth grade and I went to his curriculum night into school yesterday and the the math teacher put up this problem has to do is chip counting apparently chip counting is this way that you can learn like base three and different number bases and I was like oh this challenge that the math teacher in fifth grade at the school just put up on the board is exactly like a daily challenge in brilliant org I took a picture of it and thought maybe I would but so this is a daily challenge that I think math and logic that I think goes along with the channel I'm gonna put it as a challenge to you actually when I take a break and get some water so let's look at the challenge together cryptic or puzzles were capital letters stand in for the nut digits of a number if the same letter is used twice it's the same digit in both places and if different letters are used the digits are also different so so here B obviously what is the value of B wait what keep reading oh this is just showing you a demonstration of an example puzzle keep reading ah what digit in place of beak would make this subtree I was like oh there's a read more button so looking kinda I couldn't figure this out B plus 6 ends in two ones we must have B equals 5 oh this is not AI look at me on my mind this is why I like looking at these challenges I very in a very silly way was looking at these as two different independent operations it is not this is a you know a number 15 plus 56 right 15 5 plus 6 is 11 carry the 1 5 plus 1 is 6 plus 1 is 7 so 71 so that's how this works this idea we can do it with multiplication and we can keep looking at these so here's today's challenge he is even C is odd what is B even odd or could be even or odd so I'm going to give you five minutes you can sign up for billion torques will add flash coding train and put your answer in there and I'll come back and read one of the equations are all thinking through a little bit and we'll provide the answer so I'll be right back in just a few minutes commuting my mic and disappear myself first actually if you have an answer to this rather than Esau but today given I maybe I could get a nice like chat message that explains the answer very quickly and I'll read it I see people are discussing it which is kind of fun so I'm gonna come back now just because I want to get back to their RDP algorithm but so this is there's some great explanations in the chat so let's think about this for a second see okay see is odd he is even so a has to be odd a has to be an odd number now the question now becomes if see let's see oh look at this whoa so that's good that's a start Simon is thankfully Simon is going to help me out here I think typing out his solution I think they thing you have to think about is you there's a carry the one possibility here so for example if there were if this was something like there was no number none of these digits ever added up to anything greater than nine then we would then there would be one only one possible answer because if we just said that sorry what did I say a is C is odd he is even a has to be odd C is odd a is odd that means B has to be even B would have to be even but not necessarily because if there were some set of numbers where you carried the 1 then B could be odd I think I mean without doing an example I think you could do it either way right B just does that make sense I'm I'm intuitively I think it's even or odd you know that even plus even equals even and odd plus odd equals even and even plus odd equals odd well lots of answers in the chat or stream saved after ending yes they are right but my intuitive understanding of this which I think in which Nilesh just wrote could be both as there can be a carry on the leftmost digit so I don't even have to worry about the middle because I just know that a there there can't be a carry on the rightmost digit cuz that's where we're starting so a has to be he is even see azad a has to be on a has to be odd C has to be odd so B would have to be odd unless there's a carry than it could be even all right I'm gonna say both I hope I'm right but Simon just wrote in the chat he can be even or odd so if Simon got it I know I'm right let me say I'd be better for me to get these things wrong actually because that's really what learning is is getting things wrong and having a discussion about it actually and just a shout out to the math teacher at my son's school this is what he did with the student so he puts a problem up on the board all the students do it they write the answer in a piece of paper without their name everybody turns those in and then he picks one randomly that was incorrect so what's what I loved about that idea is it's not singling anybody out but it's then having a discussion about what was wrong which is so beautiful so there we go thank you once again I'm just very proud of my technology here brilliant work for being today's livestream sponsor ok so back to back to the RDP algorithm I have some water which isn't right I think I need to eat a bigger breakfast on if I'm in a live stream in the morning so I'm feeling a little bit woozy all right I think I understand what's going on here I think that me I think I have an idea for how I can make this happen I think this isn't actually the RDP algorithm what this function is should be called is find furthest right this is a function to find the furthest point given a list of points with a start and end index the rdp algorithm should be an algorithm that returns or I could actually just pack and pass in the array so even though it makes sense for it to return it since it's recursive I'm gonna actually just pass in the array I'm gonna have a function called RDP which gets all points and on the another point array called RDP hmm how do I want to do this I think I want to pass in in a way I just want all points to be global will make things much easier but if I'm doing this correctly I really should have the array take it so I'm gonna I'm gonna stick with that already P ArrayList of RDP I can't think of a name for this variable that's not already P points but I guess that's fine no but I wanna oh I'm so lost here we get this line distance out of the way recursion is hard especially when you're live streaming and I feel a lot of pressure I hate how long these are have fun spiked 500 so I'm gonna call this point function oh yeah uh no but this is silly now I do want to call this over and over again and then like basically what I want to say is yeah let me let me think about this for a second comet is not for a second I'm gonna call this find farthest all right that's the index and then next next point is all points get and then if next point if the oh I need that distance okay record distance if record distance is less than epsilon greater than Epsilon if it's greater than Epsilon return farthest index otherwise return negative one right I need an exit condition so as long as it's actually got distance is greater return the furthest distance and then here I'm going to say if next index is not equal zero then RTP points the next point then RTP points add all points get next index and then okay so I think the promise I have to go both ways so this why am I stuck here the holy holy Schiffman I did not invent that you can tweet at Redfoo who came up with that sound effect I was about passing the new array as input/output in my pseudo code yeah yeah I'm having trouble like finding the recursive moment here so then what I want to do because I have to do this because I could just do this right while next index is greater than zero RDP points at all points get next index and then I could just say this all points we start index and next index and next index and end index so but this doesn't work this is where the recursion needs to happen so this has to be a function yeah okay let's try making this a function just for a second called RDP and it gets start in the camera went oh why is this happening why why why so sad this is like the old days I thought I was all my new equipment I just unplug and replug it in it doesn't work is it like overheating do we think that'd be an issue and now of course at least I know what's going on here close enough okay not function sorry void RDP start index and index then I want all points and RDP points I mean I could just keep those global but let's let's do this correctly and then okay so start index equals zero I got it I got it I got it got it got it I got it I think start no no no no so now let's add those then let's call our DP 0 a start no zero total minus 1 all points are DP points and then next index is find the furthest if it's greater than 0 then then call there we go our DP this star next next it is all points I mean it's all silly have these arrays here but I'm going to just keep going with our DP points and this Oh what start index next index and index all right I think my logic is sound here so there's the fine furthest function which just gives me the index to the point that's furthest away between in a list of points between a and B so first I'm going to just call it and go and do the whole list then as long as it's a valid point I'm gonna add it and then check the other two ways and I should also say I mean this is a little weird but if as long as start index I they're probably more elegant way of doing this but let me just write it this way for a second if start index is not equal to next index like if they're the same I don't want to do it and same thing here if end index is not equal to and I could probably do a greater than or some things I don't want to go past it but this is all I'm protecting myself here like I want to make sure that I have it'll exit even if epsilon is 0 so let's just say like this should actually work if the distance is always 100 right so I don't I need the actual but if I run this right now I believe my RDP should be the reduced fidelity lying the curve should be the same because I'm not actually actually calculating the lying distance right at both of these cameras are going off do you think they're overheating is that a thing it basically I'm creating a basically I'm creating like a fake scenario where all the points are always within 100 pixels so they're all above Epsilon they'll always all be kept I think so I can test if my recursion is working mmm infinite loop recursion not working stop timeout yay stop I'm so close to being having this there we go oh it can't oh it can't I so my exit conditions are all wrong if nexted this is bigger than negative one you return negative one on failing zeros of valid index though the first greater than zero is bug ish weird uh oh yeah oh this shouldn't be while this should be up first of all first name problem this shouldn't be while I had a while loop in there because I was thinking about it looping but the looping is the recursion so this should be an if I should also just say just to be like really specific about this right now as long as it's not equal to negative one also I don't know that these are going to become equal no these are always going to be not equal because no it would be negative one if there let's see let's just try this now so I find the one I find the one yeah let's yeah ooh there we go let me go back to that just give him more clean correction there this is definitely the problem here I I had a while loop in there before because I was thinking about the lard EP Luke do this again and again and again but that's before I implemented the recursive algorithm of the function calling itself this is just an if statement as long as I get a valid index then then ad then then add the points and call the function again and this should work now why do I still have this line in there all right I should just have it's not closing it I'm adding like let me take out let me take out adding start and end for a second yeah do I not need to add the start and end point interesting oh it's sighs let me debug this for a second no I'm missing two points oh I know why I put them in the okay here we go ah the camera but I figured this is making me crazy gotta be it's got to be something to do with temperature right I need like a I knew better ventrally it's very warm in this room I need better ventilation because they're not theirs I gotta look up the reason why it was drawing this weird extra line is because I put I put the start point then I put the end point then I put this point so I my actual line is drawing like this so what I actually need to do which is quite lovely is first add the start point then perform the rdp algorithm then add the end point there we go so I have this working where the rdp algorithm the Raymer Douglas poker algorithm just adds all the points because it's not actually calculating the distance luckily for me I have worked through this line distance problem before and in fact if you refer to my nature of code book in Chapter six I work on a particular algorithm that is related to path following so in a path following algorithm I have the start I have a line segment that has a start in an end and I have a vehicle that's moving at a given velocity so part of the algorithm involves projecting out its future location and finding the normal from the point to the line so I actually have already written a code example that does this and I would encourage you to pause here maybe go look at this chapter if you want further explanation but in the interest of time and I can come back and do this I actually already have this example ready to go here which shows this scalar projection so I this is showing if I have two points a and B and of another point C I can always find the normal point of the line this is called scalar projection because you can imagine if I bring this down here for myself if I had a light if this were a flashlight I can't do this up if this were a flashlight shining down it would cast a shadow there and I would find that's like a projection onto from 3 from 2 D into 1 D really ok so I should be actually be able to just take this exact function which is called scalar projection which gives a starts with a point P which is C in this case and calculates the scalar projection between a and B so let's do that scalar projection and it has to do with the dot product and all this sort of stuff so I'm gonna come back here and I'm gonna paste this in here the code I can give us a four room here so I want to find I'm gonna call this the normal point is the scalar projection between C a and B and then I just need to return the distance the P vector distance between C that point C and the normal point so that's actually the line distance give them give me a minute here to erase hold on I have this thing if I use some water it's just actually taking the water that I'm drinking yeah wash it how we doing on time everybody so again if I have point C I have point a I have point B my function that uses the dot product calculates this point which I'm naming norm hi norm you're such a nice point norm and then that is the normal point so now the distance between C and norm is exactly this particular distance that I've been looking for so I dare I say that this is gonna work let's run it why not especially I'll use this the drum roll that means it's not gonna work I got sad trombone ready Oh what definitely did something that is nuts that is amazing it worked let's now okay so it does it just once let's try different epsilon epsilon of one oh it's adding stuff in the wrong order that's weird so the same problem I had with adding the start and then the end this is now happening over and over this is now happening for every single one okay so I need to do the adding do I can I just do it in between if I just do it in between well that oh the camera god I definitely gonna have to figure this out oh well let me make sure let me get back to where I was sorry everybody I wish I knew what this does not happen to me before but I have I was gonna say haven't livestream this long but I certainly have I'm very frustrating I'm getting good at focusing if you look at where I'm adding the point I think if I just at four I think if I add it in between these two checks then everything's gonna like to ripple into the array in the correct order let's see I need to add the point there yes yes yes yes yes yes yes yes yes yes okay okay we've really got it now so now I need I want this to animate so let me how am I going to animate it so I need to do this this particular algorithm in draw and I don't need that's actually interesting to see there were 43 points so you can't see that there were 43 points left okay this is so exciting I love doing an algorithm that I've never done before and having it actually took me like two hours the version you're watching is hopefully much shorter so this needs to happen in draw and already P to be recreated every time that's a new so I'm doing this over and over again so I'm every every time through draw I'm starting with a fresh array before I draw everything and then so that's good so this this should not work right now all I need to do is change the epsilon so if I start with an epsilon what happens if I have an epsilon of zero there we go and now and if I go back to the Wikipedia page Epsilon they're kind of showing an animation oh and it's showing n the number of points epsilon is kind of well that's why I mean I'm just make up my own thing so I'm gonna have an epsilon I believe ten by the way so you remember ten pixels was the correct epsilon for the sketch or an N model I refer to at the beginning of this video but so I'm gonna start with epsilon at zero and I'm going to say here epsilon plus equals zero point zero one and then I'll just say if epsilon is greater than ten let's just set epsilon back equal to zero I want me to see what happens here are we seeing it change it's very hard to detect this but we are it is there what did I do the stroke weight of 2 stroke weight of four nor if I actually would be better if they were the same and here's the thing there's let me get rid of this and let me say fullscreen oh and I should draw let me just draw just to really finish this out to polish it let me say fill 255 text size 64 point 64 point font text Epsilon and I'll just put it sort of arbitrarily in the window and then I'm also going to say RDP points dot size and I'll put that like 100 pixels further down and I should say you know Epsilon let me just clean this up a little bit and I'm using number format let's it's not super visible maybe what I want actually is this one to be pink yeah we can see this happening now I'm trying to think of a way to make this visually more obvious I guess I'm just maybe I'm overthinking it what time is it by the way oh I'm perfect timing zoom into viewport like like do I just want to have them actually be like stroke wait one maybe a different curve I guess I could shift it a little bit there I like seeing that that's kind of cool like what if I did this is kind of interesting translate what if I did like translate zero negative ten and then like what if I just shift them by like 10 pixels yeah that's kind of interesting and set the stroke weight back up to floor all right so I offset the drawing of each of these curves to try to make it more visually apparent what's going on you can see the epsilon value is being displayed up there it's gonna go up to ten I shouldn't let it get much higher actually and then you can just sort of see the resolution of the curve slowly changing the fidelity of the curve as epsilon increases let's just to throw the sake of argument let's just so you can see this let me actually just for the sake of Ireland so that you can see this I'm gonna have it go up whoops just for the sake of argument so you can see this more easily I'm gonna have this go up much faster and then I'm gonna let epsilon go all the way up to 100 so this now we should really see the approximation of the curve a go way way way way way way and in fact maybe that offsetting is silly so what I've done here to really demonstrate it is I have epsilon going up much much faster and all the way up to 100 pixels so you can see I'm now approximating this curve with only seven points and I don't know if it's gonna ever get less than seven as it gets up to 100 it starts over so now you can see it very very quickly reducing the number of points in the curve thank you so much for watching this coding challenge Ramar douglas poker algorithm stay tuned for how this gets implemented hopefully into the ml5 JS library and a example of an interactive sketch are an end drawing application makes use of this particular algorithm and so what i would encourage you to do is make an you find a creative use of this as a technical exercise make a version where the user draws and you alter the fidelity of what they're drawing but maybe there are some other things you could try that are more artistic by layering different Fidelity's with different colors I don't know I can't imagine I hope that you come up with something share it in that the coding train calm in the link that you'll find in this video's description and I will show community contributions on the next live stream we're going to keep this in because something's going wrong with my cameras I'm so frustrated I'm back the cameras are shutting off again that's always a mystery here on the coding train see you in the next coding challenge goodbye all right yes me I am so me right is it the point of the algorithm to make it not visually obviously different yes so I think the value of Epsilon is really the question but I want to be able to see that it's working Simon's telling me once again to animate a recursive algorithm much easier to use a generator function okay I'm gonna just say a few things before I go I really want to hear a couple things one is let me let me look at one community contribution because I really want to do that every live stream and so I think that I'm gonna figure out new systems for doing this but this right now is the current system that and let me just do that whoa hit refresh and I'm gonna spin this so this is the current system I'm gonna come up with some new systems but this is going to pick a number and that number is tied to a spreadsheet with a list of community contributions and when we land on one I have no idea what it's going to be it's number 46 it looks like i'm gonna click view selected and we got oh nothing makes me happier than a 10 print variation and let me view it here oh is this is a youtube video and it's got music Crawler function to solve the maze are you kidding me I hope I'm not gonna get a copyright strike with whatever this music is I'm gonna mute it just in case oh look at that is so cool wow I have no I guess I have a example that does the like a star algorithm this is not an action but what I love about this is I thought like well you could never do this because it's not an actual maze it's a maze like pattern but it's just has lots of you know dead ends but looks to me my guess here is that the creator of this both agon has made a decision that whenever it gets stuck at a dead end to just leap over the wall and pick a new color and this is really I think there's a lot of beautiful possibilities that could come out of this this is amazing so I'm so goodlooking unit II contributions or I try to but I don't remember them all and this is actually just like discovering them as these delightful things is amazing I love this I want to try to make this I'm not going to because this is something that this person made and I don't need to make it it can live here as this person beautiful work thank you for this wonderful contribution speaking of which am i a member of my own youtube channel just curious here this is the live stream right now that you're watching 308 people are watching well press my 2 to button if I go and switch I shouldn't do this hold on a sec just for a second here I wanted to give you a sneak preview unless it's already been like tweeted or anything like that I have all these messages okay never mind just don't worry I was trying to sneak preview something oh I can do this hold on don't just wait a second I'm gonna give you a little sneak preview cuz I'm so excited about this those are watching this live can enjoy this here we go sneak preview okay now we'd hold on I wanted you to hear this sound so I'm just all changing my sound settings for a second multi output device and and I'm gonna bring myself back all right so this is video a a new style of video that I'm doing from my home in Brooklyn it's called it's a new series I know I only need one of these maybe it's terrible everyone will hate it in that double eagle actually I made two yeah so at a minimum I'm just gonna take myself off here at a minimum so you just gonna hear me talking sorry at a minimum there'll be two unless ever really hates it then I won't bother to publish the second one but this is a coding challenge that I'm doing in a different setting and I'm just gonna play you the first couple minutes of it and then I'll later today release the whole thing I'm not I could play the whole 13 minutes but that seems silly oh there's an ad on it but I'm logged in as myself so I'm logged in to myself I have premium I can't hear this can you hear this no you can't hear this oh it's muted cabaña hold on let's try this again hello and welcome to the pilot episode of a new series on the coding train choo choo don't hit my train whistle called coding in the Here I am seated in the Cabana I've got a camera here I've got a camera here and what I'm going to attempt to tackle for you today it's something all right oh I'm not visible so that I'm gonna do the more rows it's about it's edited it's about 13 minutes I guess I could put the camera back on to say goodbye but I've got to go now I've got a meeting in 15 minutes and I encourage you to check out that video later here comes the choochoo so here we go goodbye I'll try to answer a few questions while I whoa what is going on so much louder all of a sudden gliding that down so goodbye everybody I'm gonna save this quit this I'm gonna hit to stop recording can you still hear me I think you can and so thank you everybody sorry that I've disappeared I don't feel like dealing with the camera again oh I could I could go over here I hope you enjoy today's livestream oh this is nice I can come I hope you enjoyed today's livestream I it's to talk to you I'm looking at the confidence monitor which is slightly above but if I look here I'm talking to you thank you so much you're I hear from people about how they watched the channel and now they made a project or they learn coding and it really makes me very happy I feel so honored and humbled by the amount of people who have been watching stuff and enjoying it so I really appreciate them all the viewers thank you to members and patrons for their extra support but everybody in my eyes is making a contribution even if you just never even heard of the coding train and you're at home and you're you're doing something good for the world you're making a contribution but just just by watching or by sending me a nice message is really nice I don't know what I'm saying I'm gonna go and so I'm next week next Friday morning I don't know it's only gonna be what this week was an exception of two streams to me one per week and I don't haven't established a regular time yet but probably I'm next Friday goodbye let me see if there's any questions Ace of Hearts asks will you make a 30minute version of this livestream so I don't know so yes definitely there will be an edited version of called the coding challenge RDP whatever that's maybe that's what I'll call it and that will be edited down if I had to guess maybe more like 45 minutes you know it's always a complicated balance to like trim it down but the point of the coding train is to show you the whole process from start to finish so I don't really like to cut out debugging but I cut out the like the cameras going off and me taking a break to go use the bathroom all that stuff so yeah that'll come out it often takes at least a week for that to come out Thanks yeah are your lights heating up the camera I think they might be I think that might be what's going on this dog this dog the start that this starts I'll never forget the Vista somebody composed that song for me you