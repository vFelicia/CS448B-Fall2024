hello I am back for a part four of the 2048 coding challenge should I be here I'm not really sure but there was at least one very significant bug in this current version and I think there are some things that we could improve I have actually already made a list and this is my list I want to fix that really important bug I want to add a condition that knows when the game has been completed when you've reached 2048 there's anything that I see I should refactor to make nice while I'm doing it maybe I'll do that maybe I'll come back another time because really I kind of I'm starting to realize through feedback that I've gotten from you the viewing audience that possibly considering doing this in a more objectoriented programming manner where each tile is an object that knows about its neighbors this will really actually I think really lead me to be able to do animation more easily so animations I really want to get to but that's I think becoming a big project I really need to refactor so that's gonna wait save for later but I think at least if we add some colors and specifically notate which new tile when there's a new tile like the two or four that just magically appears is a different color like purple then I think that will really help so this is my list I'm going to go do the first thing we do is just fix that bug now this bug was not discovered by me it was discovered by thank you to deng cojocar on github that i had a bit of an issue here if you'll notice here in my if statement if options dot length is greater than zero that's not how that's busy if statement was completely ignored the whole time that is just ending the if statement and the code keeps going so I really need to fix that it's actually already been merged on github but the new version um this part four is being recorded I'm back thank you apologies for that interruption right here this code was not even getting executed at all so oh I was saying that this video currently right now me I make recording this a few days later after I did the original version of the coding challenge that's why there's been this little hiatus so I need to get rid of that and I need to put some curly brackets in here and now I think we fixed this very significant bug so we have check fixed a bug I should probably test the code be nice if I had some use by the way this game I've recently made a video tutorial series on unit testing wherever that shows up this game would be great to add some unit tests too as I continued to prove it to make sure the game itself doesn't break okay so let me zoom back out let me at least just this is my live human being unit I'm unit testing I'm just gonna like make sure it kind of still works and it still kind of does okay great now let's add oh now that I forgot to mention the one thing I did in between the recording of part three in part four is I did at the very least just kind of break I had all of my justice code in one file sketch that Jas and I broke it up and put it into multiple files so all the functions that deal with kind of iterating over the grid I've got here and functions that have to do with some of the game logic I put in a separate file so that's gonna make things a little bit easier to manage and for the time being until I implement some build process that would then like put them all back into one file I just need to make sure I reference all three of those files here in my HTML file all right back to end game condition so in grid are maybe in game I'm game right is that where I had I had a function called is game over which was incredibly awkwardly insanely written to determine if there were no empty if there are no moves possible left so I want to write a function now called game one and I probably could I could probably have both of these be one function right the game is over it also if you've won but like I could check for it right here but what I'm gonna do is I'm just going to do a totally separate because this is gonna be super easy to do I'm just gonna check if any anything equals 2048 return true and then otherwise return false if you get to the end and there was nothing equal to 2048 so this is a nice function just to check is anything equal to 2048 and someday I might refactor these with some higherorder array functions but for right now just iterating through everything and checking okay now let me test know how am I going to test if this foe first of all you need to use this function I'm going to go back to the sketch and down here is where I check is game over and now I'm going to also check game one and maybe I should call this is game one that's a little bit awkward phrasing there if game one console dot log game one now obviously I would want to maybe include like a nice animation or bad Dom element or something but I'm just giving you this Gump it's putting in the skeleton of this here so let's go back and change this to is game one to be consistent with my excellent function naming and then now how can I test this well I come to something a little bit ridiculous which is that I could say in the ad number function where's my ad number function where did I put that would be good look at all these different files so I have no idea where anything is I think that's a grid I would get ad number so what I could do is instead of adding a two or a four I could add like a 256 or a 512 that would probably make it pretty easy for me to get to 2048 pretty quickly so let's create a version of the game I'm gonna refresh I'm starting with just 256 and I've got 512 whoa something crazy happened where I made the 1024 tiny I got to figure that out so I should also fix that and now 2048 game 1 so I got a 2048 so why all of a sudden is my sizing completely insane where this is ridiculously tiny where did I have that here is where I have my sizes 64 64 52 well I don't know let's make this I don't know let's make this 36 and this 18 let's just try that it probably would alright that's I'm liking this a little bit better but ah but really if I could just add some colors than here but it could pop a little more because I would see that 1024 of the 2048 has this nice bright color so wait and game condition that wood is now completed so let's go to the colors let's go to the colors right now and then we'll revisit the sort of idea of refactoring so let's go to the colors so we're refactoring as we go so one thing weirdly I have here's the sizes this is kind of strange I have four sizes I should really make some kind of lookup table right so this could be in a JSON file but let's just put it up here let's put and really this this is why I probably want this objectoriented as well but let's put let's let's make a JavaScript object we're gonna call it styles I know that's no good tiles colors and sizes let me call it tiles colors and sizes somebody will think of a better name okay so let's say this is what we have right we have the numbers can be two the numbers can be for the these are all the options right eight 1024 we're almost done 2048 so now each one of these whoops I didn't want this to reformat it this is they look up to is the lookup for what do I need I need a size font size which will be 64 and I need a color which would be I can think I could probably just do this as a hex value it's a string so let's just say so I'm gonna do this so I would love to make this like a config file that I load or something and now so now all I need is to put this after every single one of these so I'm gonna put this in a separate file and take this whole thing colors and sizes and I'm going to make a new file I'm gonna call it config J s and I'm just gonna add that one also here in index.html and now if I look at this let's take a look at this okay 2 is 64 4 64 8 is 64 16 is 64 32 is 64 then I'm gonna go down to 36 36 anybody who's watching this right now if you could possibly give me some suggestions for colors then I'm gonna go to 1024 I'm gonna go to 18 and 18 oh I'm back so I now just went to the the Styles files for my coding training website and here's a bunch of colors so let me go and grab these it's probably not enough colors but we can figure something out so I'm going to now come at this out let's use the red for the whoops and the 4 okay so now that I have this crazy colors and sizes variable let's just call it colors sizes colors sizes I'm gonna now go back to this code where I draw everything and I don't need this anymore in fact I don't even need this anymore because I'm not really concerned about the length I do need this because I want to look up its size and color based on its string so now I'm gonna say sizes colors index s really not really indexed but property s dot size that's the font size that goes here and the color goes here it's just possibly going to work refresh okay sizes colors not defined because I'm a lunatic and I forgot I know let's see colors Isis okay colors five colors sizes there we go that should fix that wrong name oh I forgot I want to make the rectangle have that color not the text although that's kind of interesting so where is the rectangle so this really needs to be up here and the fill should be here and the text size can be here now this is gonna be a little bit of an issue because Val is not defined up here the Val has to be up here also and if Val is not equal to zero I'm gonna have this fill otherwise no fill just do that so now s is not defined put that up here okay whew weird weird Oh me weirdo me did some horrible something to create a bug yes so I guess I could say Val to string I'm being told in the chat might be a more elegant way of saying that and also the stroke should be zero no matter what and let's try this okay I've got oh I've got a color there oh look at this fill 0 I need to put a fill to make sure the text appears looking good got some colors oh yeah let's go back though so why did my color for 512 doesn't seem to be appearing so let's go down did I forget it 512 oh it's so that's why I don't have a color for 512 let's give it something like this one everyone who cares about color is just going completely insane right now there we go okay so now I've got some colors now let's go back to the ad number function and let's have it ad twos and fours again and let's see how it goes okay so I feel like two and four should have a different color and they should probably just start with something much lighter so let's again I'm not gonna get too worked up over the design of this because I've already done like a horrible job and I'm going to just make that I'm just like oh there we go yellow let's have two in for be a bit different or maybe a bit different there we go okay very greenish in yellowy okay so this is good this helps already and by the way you know one thing that might be nice is just to emulate the design a bit more there's no reason why I couldn't this is a littleknown fact p5.js I can use rounded rectangles the rect function in p5 can actually draw a rounded rectangle and the way that you do that is by giving it a value at the end that's basically the v argument is the radius of the the optional radius of the top left top right bottom right and bottom left but I believe if we give it just one radius it's going to do the same for all of them so I'm going to in where I draw the rectangle I'm gonna give it a fourth argument wherever I draw that rectangle right here and I'm gonna say let's just say 30 the side of curiosity what does that do there we go now I've got some nice rounded rectangles so I've got it's a little design me feels a little more like a game that I might actually want to play so what I want to do is I want to each time if I move if I press to the right this is the new tile for I want to be able to indicate that somehow this is where I could really really really use objectoriented programming and I'm so tempted to just refactor the whole thing with obscure key programming but I've kind of wait I'm gonna hold off that's gonna add some day be part I don't know 734 of this 2048 video series apparently that's now gonna be about setting you know 64 hours long but what I'm gonna do ridiculously is I'm gonna have a duplicate grid I'm just gonna have grid oh this is the worst grid also equal a blank right I can't can't live with myself but Caleb might love going grid to grid I just called grid underscore new grid underscore new equals a blank grid okay grid underscore new equals a blank grid and then whenever in where do I add a new tile add number is in I believe it's in grid J s and so here whenever I add a new tile to that spot I can just say grid new and have that equal to one okay so I have a total this is exactly what I was going to program to be good for because if there were actually an object sitting in that array then I could just give it another property instead I'm creating a whole additional array just for another property so again the more I want to add the more I need to refactor but let's keep going with this to see if this works now when I go to draw it when I go to draw it which is right here right this is where I draw let's change the outline if grid new of I J equals 1 a 1 for it being new I could have put true in there which probably would have made more sense then I'm gonna change it to stroke you know like 200 0 200 so give it a different color otherwise I'll just put the stroke 0 and an else to be a bit more clear about this and then once I do that I should also just like it's done it's no longer new for the next time I probably need to reset it back to zero so now we should see look these are the two new tiles oh boy you really can't see that visually can you so let's do something to also stroke wait you know like 16 I don't know what the stroke weight is that I've been setting was it like 4 or something so now oh boy this is a really awkward I'm so bad at design but you're gonna leave see what the new one is this is why I have a youtube channel because then other people can make this stuff better because what would be the point ok so wonderful so this is kind of working there's so much awkwardness here this is sometimes above the other ones because it just depends on the order or it's below so there's so much I should do to fix this but at least the functionality is there so I didn't really do very I mean it kind of maybe by accident did some refactoring mostly I caused more things that need to be refactored by adding new features but let's look through and let's fix a couple things first of all I'm being type I'm told that before actually right now in my code when I add a new number if we look at the add number function in grid Jas I now have a 50% chance of it either being a 2 or a 4 and I'm told the 4 actually only happens at 10 10 percent of the time so this should be a point 9 if the random number I pick is greater than point 9 no no it's greater than 0.1 because gonna be greater than 0.1 90% of the time that will give me a 2 otherwise a 4 and we can kind of we could sort of just eyeball that and see like oh I'm really getting twos beak have you seen a new four not yet but at some point one out of about ten times there's a new floor so that's fixed that's good there's a lot of refactoring I could do in terms of what I'm doing here Simon points out that from some of the ways that I'm dealing with this I could actually you know instead of flipping it I could actually just change the way that I add the zeros to the to the arrays add them on the other side instead of one side the one thing that's pretty offensive to me in what I've written so far is this kind of craziness so what I'm doing here right is anytime I flip it or anytime I rotate it I need to before I go back and draw to you to flip reverse the flip or reverse the rotate and by way of and you could also rotate another word for this would be transpose right I'm transposing the grid and instead of just transposed to get back I could just transpose it three more times so let's at least let's at least fix that and so this is an example of refactoring in a way I'm adding more code but I'm going to go to this rotate grid I'm gonna call this transpose grid and actually let's do this kind of in a sort of interesting way what if I say transpose grid and have direction like a variable called direction so maybe one means one way and negative one means the other way and so if Direction equals one then I want to do this kind of transposition otherwise I think if I just say J I right this would be this would be undoing what I did up here a little bit confusing but see what I mean like I'm setting the new grids values to do the opposite of their indices and I'm doing the same exact thing here but with starting with J and I so this should undo it if I'm right and now I should be able to look for the reason also why I want to rename this function is to make sure I find everywhere where I call it so now if I wherever I say rotate grid which is right here I want to say transpose grid 1 oh and actually then I could just transpose it the other way right without this flip negative 1 right transpose grid grid negative 1 right I don't even need to flip it now because it's rotated and it's not flipped anymore but interestingly now what I need to do is I need to keep track of which way it went so let me add a variable called direction equals 1 so here I'm going to rotate it by its direction or and by its direction but I'm gonna set direction equal to negative 1 here and then if it was rotated I should be able to just call transpose grid grid direction times negative 1 to go back the other way right so this is a little bit again looks good this is just one like tiny little improvement here there's so much I could probably do but this is at least a little bit nicer this just flips it back and this just transposes it the way the up the opposite way that it was originally transposed all right so let's try to make this a little more readable with a switch statement switch key code this is a nice way of writing an if statement a chain if else if statement with a bunch of different options and I can say case I've got these different cases down arrow case up arrow case right arrow case left arrow and then all other cases I forget how to do all other cases and then I need to open each of these I need to make sure that I have break at the end and here we go so now I need to get the stuff now in this case I don't do nothing right down arrow it's it's done then here up arrow I'm gonna flip the grid and right arrow I'm going to transpose the grid left arrow I'm going to transpose the grid but the other direction and then otherwise nothing otherwise I didn't actually press a key wrong placement oh right the color goes afterwards okay so doctor fix all the colons if anybody ever watches this I'm gonna be completely amazed there we go I knew something was wrong I'm getting some weird it doesn't like that I'm not doing anything there let's just put down arrow here oh no the colons in the wrong place here that's why alright so now I this is great oh this is so lovely and what do I do if I want nothing else what a case default or do I just say default just say default oh yes it's amazing that I've gotten through years and years of teaching programming and I cannot give us a which statement in my mind played equals false okay so I think this feels better now though look at this look at this lovely nice switch statement it shows everything down arrow up arrow right arrow left arrow or some other key alright alright alright this is still kind of insane and this really needs to this really needs to be thought rethought but let's let's take a deep breath and see if this is still working yeah I don't think I broke anything be nice to have some unit tests right whoa something's going on here uhoh I broke something it's not going to the left hold on a second stop the presses miss like three hour long part seventeen so the problem is while I had this wonderful idea that this would undo the transpose right this does in fact undo the transpose but undoing the transpose isn't actually the same as transposing originally in the opposite direction for that I'd actually need to well I think in the end here it's going to be much simpler if I just keep that flipping back in so really what I got rid of that thing yeah I had simplified it so I don't need to flip flip tout trust me right now but really what I need to do here is I don't need to this is always going to transpose in this direction the difference is I can get rid of this variable what I need to do in addition when I'm going to the left before I transpose it is I should just flip the grid so the fact that I have these functions already I need to flip it then I can transpose it and the same thing here I can untranslated but if I'm I've written my code to swipe down so if I'm swiping up I just need to flip if I'm swiping to the right I just need to transpose if I'm swiping to the left you flip and then transpose and then I can transpose back and unflinching then flip and then here I'm gonna want to flip and then run transpose so let's see how this goes down works up works down works right works right works left works down works left left alright so I'm back in business I have fixed that terrible bug that I introduced and I want to think about this all I want to do this in an objectoriented way so badly but we've come to the end of this as I mentioned before it's 24 hour me fumbling through making 2048 with support chosen colors and designs and you the viewing audience will now take this you will take this and make your own version of the game and submit it and submit it to be so you can find it at the coding train comm there's on the coding challenges page for this coding challenge which will be linked in this video's Direction description there's a way you can submit your contributions and I look forward to seeing what you make and someday maybe someday if enough people tell me that they actually might be interested in seeing yeah apart 79 of this series I will come back refactor this in an objectoriented way and add animations okay thanks everybody oh there's this weird extra console log in there from when I was debugging before I go let's just get rid of that console a little direction I don't need that anymore okay okay very good okay good bye everybody