hello in this video I'm going to talk about something called p5.js instance mode what is that why would you want to use it what's the point of that well ok so by the way this is also sometimes we related or refer to as name spacing in JavaScript so what do I mean by name spacing instance mode that sort of thing so look at this a p5.js sketch a single global variable X a function setup and a function draw I hit run and we see this nice purplish circle moving about kind of painting on the screen you know this is the kind of stuff we do every day in our lives make these little p5 sketches with these purple circles that type of thing so where might this need borer then just this instance mode why would you need instance mode ok so here's one scenario let's say I wanted to do this create can't and let's make this canvas smaller 200 200 and let's make it what if I wanted to have two canvases in the window so when I run this sketch and I look at the browser page I would see somehow like two different canvases well clearly that doesn't work p5.js in its default global mode plain old regular way it's written you can't actually add two canvases to the page so this is one reason why you need instance mode here's another reason what if I were to say something like VAR window equals hello Oh wonder if this will break everything it's giving me a warning by the way let's run this okay so this happened to work but it's a little bit dangerous and let's see what the warning is right look at this redefinition of window so window is a very important key global variable that just exists in javascript in the browser it's a variable is referring to the window object this window that's the whole sort of like browser window itself but I want to have like a window variable in my p5.js sketch because I like the weird window and it's what I want to name my variable this is a problem because I don't want to mess with the global namespace so that sounds like a horrible thing global namespace and for the most part in your life I hope you don't have to worry about the global namespace but sometimes you do and in the way that you write p5.js code saying function set up function draw var X all those things are global variables that exist across all of your JavaScript code so if you also are incorporating other libraries like d3 or popcorn or some other thing that you might have variable names conflict with other things and this can be a problem so in essence name spacing is the act of saying all of the variables and things associated with my particular program are going to be under a particular name like I'm always gonna say instead of var X I'm always going to say Schiffman X instead of var window I'm always gonna say Schiffman dot window so Schiffman dot window can never conflict with the global window because it isn't the global window it's Schiffman dot window so these are the main two reasons if you're in some kind of complex scenario where namespacing having everything in your p5 sketch under a particular name becomes important to you or simply if you need more than one canvas on the screen Minh the screen in the window itself these are reasons why you need instance mode so hopefully that makes sense let's actually look at here's the thing though if you don't really need instance mode maybe you don't want instance mode because it's like a lot of extra code to write and it looks a little bit confusing but it is interesting and you might learn something you're still watching this video ok here we go so what I want to do is go back to this sketch just the way it was now where's the bottom of the editor window I'm zoomed in no wonder so let me move this back over here we look at where I am I'm standing next to the code great so the first thing I want to do is figure out how we're gonna write the instance mode oh I was gonna use the whiteboard I forget it add a new whiteboard I was gonna use but this video doesn't really merit it we'll see so basically what I what I want to do is I want to say something like this is the idea of namespacing I want to create a actual object right this is a p5 does this kind of magically before you you shouldn't be able to do what we just did just like write a SAP function and somehow it magically gets triggered and write a draw function and somehow magically it Luc's p5 is written this way so that you can kind of get started quickly and behind the scenes it's like looking for a global set up function looking for a global draw function but ultimately what exists is like a p5 object and I'm calling it my p5 excuse me I want to make a new p5 object and that new p5 object should have in it all of the variables associated with my sketch and all of the that all of the functions associated I sketch the set up the draw all that sort of stuff so awkward edit just happened because I messed something up and went off on a tangent but I'm back now and the point where I left you was and I also made some changes in the code the very slight you know pause look at it nothing important but the point where I am at is instead of having all of this stuff in the global namespace a global X a global Y a global set up a global draw what I want is to smoosh everything inside of this object this new p5 object I'm making which I'm storing in a variable called my p5 so how do I do that well we see that there's this line of code that says my p5 equals a new p5 and then we're passing in this thing called sketch so sketch the variable sketch is actually going to serve essentially as the template the template for the thing that's actually going to run so I make a variable called sketch which it actually equals a function which is a little bit weird but this is just kind of how things wouldn't you don't know it something should be in JavaScript it probably should just be a function it's actually this is a closure and I don't I mean I'm just even saying that that's where I that's why I had to stop the video and start over it's over to go down that road but you can think of this function as the template for creating the p5 sketch so the line of code that says VAR my p5 equals new p5 is actually making the p5 sketch causing it to run and this thing called sketches where I'm going to put in all the pieces so without I need both of these things without the template I can't have the sketch but I can't make a sketch without the template so let's look at how we do that so notice how this function takes an argument and I arbitrarily called it P because P is the thing that I'm going to attach all the stuff that's gonna go in the sketch to I'm gonna say px equals 100 and py equals 100 and then I'm going to say P dot setup equals function and I'm going to say P draw equals function so now this you can see I'm filling in on name spacing everything I'm putting everything under this variable P P dot said eppie draw px and then we can see what's the other stuff that goes and set up I can copy this and get it and I can say P dot create canvas and P P dot background I can zoom out a little bit I can go down here and get all this stuff that was in draw and I can delete all of this now I don't need any of this global stuff anymore and I can paste this all in hearing say P dot fill P dot stroke and P dot ellipse and px and P dot y + PX I should make this in a song in P dot y and P dot random in P dot random but I don't need to say P 10 because 10 is a number okay and now I run this this work would I get wrong is there an error no error okay so hold on let's look at this this looks pretty good to me what I did is I created and you know what I wonder if this actually needs to be below yeah uncaught reference err so so interesting enough I Jenna I feel like muttering under my breath the mistake that I made but I need to declare the template first and fill everything in before I can actually make p5 object now I did get an error uncut reference our X is not defined line 14 look at that x and y are no longer global variables they're named spaced under this thing called P P dot X P dot y and there we go now we have our sketch and I I wish this sketch wasn't so long I can remove a few line breaks here just so you can kind of see it all on this one page but you can see now here's the template for the sketch everything name space and now I'm creating that sketch now there's some interesting things going on here for example what if I'm gonna do something totally insane but what outside of this what if I were to say set time out this is a JavaScript function by the way a JavaScript function that allows you to do what a trigger event like I'm gonna reset background I'm off on a little bit of a tangent here but that's okay and I do that in 3 seconds 3,000 milliseconds then I'm gonna define that function reset background and in that function I'm gonna say my p5 dot background 2 v 51 so look at this that sketch that p5 sketch is now inside of this object my p5 so elsewhere in the code right this is how I might use p5 in connection with another library if I'm in some other piece of code that's completely outside of the whole set of a drawn p5 thing I can reference that sketch call functions on it execute variables in it by saying my p5 so if I say my p5 dot X I'm talking about this particular X up here but remember in the template everything's getting attached to P which gets put into sketch and sketch then gets made into my p5 and after the fact now everything associated with that sketch is in the variable my p5 so let's see if this works and I can run this and we can count to three one one thousand two one thousand three one thousand right and if I change this to set interval we can say one one thousand two one thousand three one thousand background 1 1203 1,001 1,002 thing went off you know what I should do is I should also say my p5x is in the middle now look at this my p5 dot y now look at this what's wrong with this something is horribly wrong here not horribly wrong here right remember everything is namespace width and height don't exist in the global world so I need to say my p5 dot with my P v dot height and I can run this now one one thousand two one thousand three one thousand one one thousand two one thousand three one thousand okay so you can see that this works and it's kind of a nice thing that you've got and you know it's hard to see on that camera went off but I'm gonna turn it back on it sorry it might be a little bit harder to see the the value here just in this sort of like trivial example but you could imagine if you've got a lot of code that this could be useful but one more thing let's do before we go in this video which is probably about 12 minutes so far is let's look at how this can allow you to have two canvases on the same page so what uh so let's look at that so one thing I could do is I could rename this to sketch one actually insanely you're something that's kind of insane before I even do that let's call this my p51 and let's just do this my p5 to look at this and I'm gonna run this look at that too on the page opera so I could just duplicate that sketch by the way without oops and you know only one of them let's do this this reset background thing so I duplicate that sketch but notice only one of them is getting its background reset because I'm only referring to that one I'm after your following because I just like I'm thinking of this weird stuff on the fly but this is actually kind of great about instance mode I made this template for a sketch objectoriented programming hello I made this template for the sketch right and then I'm baking copies of it and I don't have to rewrite that code I could just duplicate it and we could write this in a loop but suddenly have hundreds of these on the page all the separate canvases but you'll notice that I could also say I could call this sketch one and I could call this sketch two and I could I'm gonna do something totally uninteresting here which is just basically have it be the same sketch but with different color and you can see now I have two sketches two canvases on the same page I can refer to them as my p51 I don't like my names here my p51 in somewhere else so what instance mode allows you to do is take all the stuff that you would normally write globally and put it inside of this like function this closure function this function that and attach everything to this variable P px py p dot senate p draw then you have this template for making versions of that sketch that will appear on the page and you can control whether they get made yes or no so hopefully this makes sense to you and as you might find this useful in different scenarios where you need it I I'm often saying like oh I do that I think you need instant and now I can point people to this video and so ask your questions in the comments of trying if you make something like you know you're looking to do some kind of weird experiment maybe like fill the screen with a hundred copies of the same sketch and see what happens that way and also you know what happens when you start integrating the Dom library with this stuff that's kind of interesting to think about using p5 in conjunction with another library I mean spacing if try this stuff out if you do anything I share it in the comments below and I look forward to seeing you in another video in the future