oh there's a big lag between your video and your sound seems to have froze technical difficulties okay am i back now uh yes okay and i think we're broadcasting but how do i get the link of where we're broadcasting if you go to your your page and you yeah i see it i've got it now but email oh it's muting my mic because i'm typing your video so i i don't know how to send this to myself can you see it like if i go what do you want that url yeah the url if you're oh you did you chatted i just put it in the chat yeah okay thank you uh so now uh voice is going well so far chat here so i also have okay i'm gonna leave oh oh foiled by my power i only have one power cord oh no and i have two laptops going okay i'm gonna have to switch back and forth okay because the hangout like is sucking the battery okay oh uh okay here i can bring stuff in there i'll i'll i'll come help you well there's trust you can't even open the door because i moved all the furniture to the corner it's fine it's fine this laptop has 33 battery so we'll just sort of charge back and forth all right hello um i have a chat room here oh antonius is in the chat room hi and he's also in the google hangout hello antonius okay welcome this is a test of the emergency processing broadcasting system and uh what's happening here right now is that um in the um in the fall i'm planning to do a regular live broadcast from this office uh and allow people to uh call in or send questions and uh to help people with processing programming questions and it's very hot in this room right now i have a chat room here oh i'm hearing myself because shoot are you hearing yourself yeah where would that come from i don't know where that came from okay um and uh let's see how many viewers do we have does it say if anyone's actually watching the problem is this is gonna be recorded um well i feel like the last test went better than this one um off air on this side for me it says off air huh i think it's broadcasting let's see no it's there it's showing up something is broadcasting um uh okay so we the i was saying something really important which is this is just a test this doesn't count when we really do it they'll be like music and you know credits and an opening speech lots of things like that so the goal is to sort of attempt to see if how can work to answer people's processing questions programming questions either via um yeah but alan partridge writes in and says maybe the sound came from someone else's computer and i think that's quite likely thanks alan um uh i by the way if you're watching the broadcast you're actually watching like a few minutes i feel like something's gonna light on fire in here because it's much hotter than it normally is but anyway i'm just gonna keep going alright so um so we're gonna see what happens with people asking questions live we're gonna see what happens if people ask questions over the chat um as well as perhaps even questions on twitter which maybe i'll try to check so um antonio are you still there yeah i'm here oh awesome okay so um can you i um uh you you wrote in a question um with a nice diagram can you ask it and i'll try drawing your diagram while you're i would like to wrap a sine wave around a circle but then i'd like to transform it to a different kind of wave like maybe a sawtooth or triangle wave smoothly so i'm drawing this poorly but something like this right yes you have this wave pattern around a circle and it maybe you can undulate it can do things that can transform to another pattern transform back exactly okay so this is very strange i don't know what i'm doing okay so i have an idea for how this could work so first i think before we can even approach this problem so this is probably by the way a question i think see i want to look at i got to turn this off i have this instinct to look at the screen over there which is where i see an antonius's face in other people's face but really the camera is where i should look so um the first thing i think we need to establish is simply how we would draw a pattern around the the outline of a circle so for example um how would we even now we know we can draw a circle by saying ellipse right in processing so we know we can draw a circle by saying ellipse but what is a circle other than a series of points on a radial path that are connected and depending on the resolution of those connections the circle might look more like a polygon versus a nice smooth circle so one of the things we can do is we can use polar to cartesian coordinates you know in the context of doing these videos it's an interesting question of like okay well what you know have you people watching might have just started using processing they might have used it for two years but at this moment we're gonna have to just assume kind of basic knowledge of understanding polar coordinates polar coordinate is a coordinate that is defined by an angle known as theta and a radius which is different than the cartesian coordinate which is defined by some amount along the xaxis and some along a yaxis antony so you're familiar with polar and cartesian coordinates can i say yes so we can move on yes yes yes okay excellent so now if i come over here if i can wake up this computer i think what we'll do is make a little simple sketch for a second that implements this so here i've got processing 2.0 and what i'm going to do is i'm just going to write setup i'm going to make up some size and i'm going to have draw and i'm going to have a black background and what we need to do is we need to say okay let's make a loop where we walk around and look at every single point um where we where we walk around and look and find every single point along this path and draw it on the screen and the way that we do that is we might say hey we need a loop that goes for every angle an angle called a all the way up to two pi uh where we go up by just like some small amount and we have some radius and we can now we can use that polar cartesian coordinate transformation let's see what this does and let's just we're still looking at the whiteboard thank you we can just draw a little circle there if we run this uh let's run this little piece of code and oh okay so we can see we've almost got something right right we kind of like we have a bunch of circles that are kind of in the powder circle but we forgot they're all around the corner so one thing i'm going to do just with this sketch is use the translate method to translate to the center of the window and we can see now that we've drawn that circle hooray but uh and we can see the resolution is based on how you know how how how fast we increment that angle around and we can see here's a bunch of points right angle point one point one point um etc um et cetera et cetera et cetera so this is where we're starting right we need to draw a bunch of points to create this circle we haven't even i think there's like a big question i'm now realizing it's gonna take some more practice figure out how to make this stuff work okay so one thing that we need to figure out how to do is to at least connect those so i can use begin shape and end shape and say uh stroke 255 no fill and instead of drawing a circle there i can then say put a vertex at each one of those points so now we can see we have this uh circle that's connected we we've connected each one of those points that we've calculated around the path of a circle we have now connected with a line okay so uh we want to say close here at the end i think i want to say stroke weight 2 so you can see it a little bit better and maybe we want to make the resolution a little bit better and we can see what have we finally gotten we've drawn a circle manually now we now actually have that circle by connecting each one of those points i was kind of going to like time this and figure out what i'm doing here um okay so let's think about where we are now okay so antonio in the way that you asked the question you may have already been that at that at that point already i don't know if that's the case or not but let me ask you a question do you have did you did you get this far and did you um figure out uh how to turn drawing uh this circle path into a sine wave no i did not okay good excellent so this is a really interesting question so let's let's ask ourselves the question now what is the difference between say like this circular path you're doing ship consuming a live thing yeah right hey sean you're uh you're uh there's only three sections you know you're broadcasting this hi scott you're muted hi how are you hi scott how are you all right the one issue one i don't know sean what we can do about this because um whenever anyone new joins the hangout it immediately resets my machine and like logs me out and i have to log back in wow so i killed your broadcast yeah that's okay it's trust me this thing is like long dead okay so we were discussing and tony said we're discussing scott you can uh pipe in at any point that you like is sean still there i'm not sure hope see now i'm just looking at this screen you got to turn that off okay we were discussing the fact that one of the things about drawing this circular path is that every point along this path the distance from the center to that point which we think of as the radius of the circle is the same so the radius is identical right if we think about the case of like a sort of squiggly circle or a sine wave a circular radial path this radius value is going to be different might be 10 might be 9 might be 12 might be 8. so the major first step in kind of implementing this kind of circular radial path that is a sine wave wrapped around or a square wave or no pearl of noise or whatever randomness is oh hello i'm over here now is the fact that the radius can't be constant so if we look at this code you can see here we have this radius of 100. for example if i were to just write in here say radius equals a random value between 50 and 100 you can see what we're getting already can you does that come through that's really cool that's really awesome that's exactly the direction i need to go to right so but you don't want uh what you you don't want is random here you want sign so one thing we could do is we could say hey let's use the sine function we already have an angle so let's map sine of that angle which goes between negative 1 and 1 to a radius between 50 and 100 and the thing is that angle is probably not going up fast enough so it's multiplied by five you can sort of see now we have that pattern you know kind of doing this somewhat haphazardly uh let's multiply just by two let's not make it as extreme right yeah i guess four was good anyway you can see five was good there we go make it twelve so you can see do you see how this works what we're doing is we're having a variable radius so as you go around as as you're kind of marching around here sometimes you're out here sometimes you're here sometimes you're there and we get this wave okay so that's kind of step one to this problem and i think um uh uh i um i don't know how far to check like twitter or the chat room i don't know maybe we just need to shut this off now but um let's go let's go a little farther so so let's ask the question i don't know from the audience i suppose let's all discuss what's the next step let's say we figured out like oh we like this pattern and we also like i'm gonna do another one i'm going to use purlin noise so i'm going to use purl and noise of that value purl noise goes between 0 and 1. i'm going to set that between 75 oh i need to map the noise value sorry and uh we're going to make this a much more extreme right so now i used pearly noise right so i got this with pearl noise it's kind of random but a smooth remnants we get this kind of globally globally cloudy right i think it's an island what i think it's an island it's an island yeah it kind of looks like an island so with this line of code with this perlin noise line of code we get an island and with this line of code we get a nice like flower like shape with a sine wave how do we how would we smoothly transition from one to the other it's an interesting question will move over here i will i await your response antonius is showing us his oh i can't i can't see anything but you guys oh okay thanks dan i got to the sine wave circle fire and i have to head out now but i'm gonna keep working on it and see if i can figure out how to transform it smoothly excellent thanks so much thank you for participating antoine is here very nice thank you professor shiffman i'll see you later bye oh wait should i not log out or is it going to destroy your no you can log out it's fine we need to know what go what what happens when people log out anyway so hey dan can you show the code again yeah it says there's six viewers six viewers it's massive we've really hit the big time now oh seven there's five people in the chat and hang out i only see three people in the chat anyone in there let's see what's on twitter here oh so sean you were able to invite somebody yeah i invited scott oh that's interesting that's really good so there could be somebody in theory somebody who's um scott say hello hello there could in theory be somebody whose like job is to like manage the hangout and invite people right right well you're gonna need the person's email address to do that yeah or they're gonna google plus hang out hang out it feels i mean i you know google hangout has served me beautifully on many an occasion but it feels kind of clunky for this yeah i can't get the glass to join this because we don't have this associated with a real name and google destroyed our profile scott do you have any questions about processing you would like to ask uh at the moment no um let's see what we got if you'll excuse me for a moment i'll mute him you can mute him yeah well i don't know if it needed for you but he muted for me um okay so looking at twitter and i don't see i don't see anyone okay if anyone is out there watching okay josh there's lots of people in a chat here oh joshua davis is there itp burns and richard gill yeah or e uh let me write this down dot info slash channels slash processing is that cut off that's pretty good you can also tweet at shiffman now is the part of the show where i juggle we need a puzzler do you have any uh do you have any challenges for the audience put up the code again somebody yeah that's true okay so oh so maybe i should continue with this because we didn't finish this discussion okay so he where we were before is that with this one line of code we've got this pattern with this second line of code we have this pattern now what we need to do is figure out how to interpolate between the two now there you know there's probably a very kind of advanced sophisticated way of doing this which is we should make these shapes objects and they can keep array lists of vectors which are all the points and then we have one set of points in an arraylist and another set of points between the arraylist we can interpolate between those two and this is actually how i would probably do it but we could kind of do it in a much simpler way right here for example what if i just called this r1 and this r2 and then i said you know float r equals r1 plus r2 divided by uh what would what would this result in shawn it would it would it would give a little bit of noise to the sign right so it would average an average between the two we get we get halfway between the two but there's no reason why we couldn't just say like hey give me ten percent of one and ten percent um ten percent of the ninety percent of the other one right right much more of the noise and a little bit of the sign do it the other way do it the other way processing has a function for this called lurk so let me give the a value in between r1 and r2 so with lerp this is really what this is this is a wonderful thing to talk about this brings me enormous joy hey i have a question can you wait with lerp the way you did yeah you can wait with lerp okay you mean wait like weight right yeah yeah so that's exactly what we're doing we're going to uh with lerp we're going to have value r1 and we're gonna have value r2 and we could say hey give me sort of the value in between there give me the value over here give me the value in the middle and now if we slide back and forth we're going to see us we're going to see interpolated we're going to see this sort of transformation between those two shapes so let me um let me put a value here like if i put 0.0 no switches code sorry if i put 0.0 in lurk we have the sine wave if i put 1.0 we have 100 r2 if i put 0.5 we have 50 of each now watch this so i'm going to call this uh uh i don't know what's called a call i can't think of a variable name um uh percentage i call it percent and at the top of the code here i'm going to say percent equals map mouse x which goes between 0 and width between 0 and 1. so i'm going to use mouse x to set a value between zero and one and use that value in lerp but now you can see here as i move back and forth it's transforming between those two different waves hey this is actually the question that antonio has asked and we did it we solved it in this code i gotta save it and put it somewhere i don't know how to do that i mean i know how to do that i think but hey uh um what does lerp stand for uh lurk linear uh oh whoops this camera shut off let's turn it back on um lerp stands for a linear interpolation so it's a linear interpolation between two points meaning uh if these are the two values we are we are somewhere in between them in a linear fashion as opposed to like an exponential interpolation or a cosine interpolation or something like that um oh somebody answered the question there that's nice um in the chat in the chat and ah okay i got a question over twitter yes joshua davis has a question in the chat ah okay i don't see it how come i don't see it and richard gill wants you to save the files yeah i definitely will how come the chat is not showing for me this maybe this joshua just go ahead and ask the question in in the chat and i'll relay it to dan i i will do dance moves tai chi or some sort of like break dancing while i'm waiting it's weird how i don't see any messages in the chat maybe you need to refresh i did refresh and it cleared everything but there was a question on twitter which says how would i make a disc spin okay this is from uh noel murphy at vdu hey dan question for you how would i make a disc spin like a record deck using mouse down and drag to spin the disc reverse okay this is interesting so if i understand the question correctly we're asking if we had some type of thing on the screen that looked like a record how would you make it spin and then how could you control the spin by like moving turning it like kind of like i guess like scratching like a dj would like this or something like that right um okay so let's think about this for a moment um yeah see it really i feel like what this show office hours broadcast needs is uh people's live voices right right right so people people they what we need to do is have them enter into the into somewhere and then we can invite them to the hangout right or just not use a hangout but yeah like you need to enter their names into a field or something but anyway okay yeah all right but let me i guess i'm going to talk about this spinning thing so one thing that you need actually is you need to know something about there's two things that you really need to understand to make this work one is you need to know something about transformations so the first thing that you need to do is use translate because you're going to translate to a certain x y which is where you want the center of this spinning disk to be so if this is your processing window and this is the point 100 100 you could translate to 100 100 and then draw that disc however you're going to draw a circle a polygon an image you're going to draw it at 0 0 with some width and height right because what translate does is it moves the origin translates the origin which always by default starts from the top left to a certain location on the screen in this case 100 100 and you can draw that ellipse the reason why you need to do that because to have this record spin you're going to want to use the rotate method the rotate method will rotate uh the transfer the the the view the sort of transformation space the what you're the drawing context will rotate it around the point of origin so if you want the disk to spin around in the center you move the origin to where you want to draw the disk rotate by some amount and draw that disk at zero zero so this is really the first piece of information that you need to implement this the second piece of information that you really need to understand is this idea of angular velocity and also i would say angular acceleration right because what's going to go here you're going to rotate by some angle why is that angle going to change over time maybe it's spinning at a constant rate it's spinning at some speed or velocity maybe it's speeding up as you flick it it's accelerating maybe it's slowing down it's decelerating so you need to figure out these concepts and actually it's lucky for anybody who might be oh 10 no 10 somebody just that's very sad i looked over here and it said 10 viewers and immediately said nine viewers very sad um if this comes back on oops here i am over here um if i go to i believe rather than try to make an example from scratch right now oh the camera shut off the hijinx by the way there's so much stuff in this room like i can't walk anywhere um the um i believe if i go to um in in processing examples under books nature of code chapter three i'm gonna look in here i'm gonna find a uh angular motion example and uh i'm gonna fix a few things up i thought i updated these i'm gonna fix a few things up about this example and run it so you can see that's really what's going on here we have this line in these two circles and it's spinning and look how it's getting you know maybe faster and faster over time that's because there is an angle that is being that you're rotating by some value that angle is being changed by some angular velocity um and so for example if i take out this idea of acceleration and i just give it a constant angular velocity and i run it you can see hey it's spinning at an angular velocity of 0.2 0.05 it looks like this but this idea of acceleration is pretty interesting because one thing i can do is i can again mat i can create a dynamic acceleration where i just map the mouse's value which goes between zero and width to something between like 0.1 and 0.1 if we run this math mousex what's wrong with this line of code oh it's angular acceleration if i run this okay that's way too big values spinning out of control so you can see now i can kind of slow it down it's very hard for you to see probably they're going to make this even smaller you can see that now depending on where i move the mouse i can kind of like decelerate it and have it starting to accelerate back in the other direction slow it back down so i can now sort of get gain control over how fast it's spinning in what direction i have this angle which is the actual rotation at that moment i have the angular velocity which is how fast is it spinning at that moment and acceleration which is what the change in its velocity is it speeding up is it slowing down and i'm just controlling that and your velocity arbitrarily through the mouse here in this particular example so that's the spinning disc question nice hey do you want me to relay the question from joshua davis yes he said he's using he's using the kinect okay and he's noticed that um the left hand and he's got two transparent pngs i guess mapped to his hands and the left the left hand the transparent area the png knocks out any info on the background whereas the right hand the png transparency is fine so one of them is knocking out part of the background and the other one is not oh i see so there there's one image and transparency is working and there's another image and transparency is not working something like that uh my guess is to try adding let me go uh this is where we need to call andres calubri it's probably in p3d i would assume obviously a lot of this depends on but it tries to do with like z depth sorting um in terms of the order of stuff that's being drawn and if i go to um dynamic i think this one yeah uh try adding um try adding this line of code see if that fixes it um what this says is if we read the comments from this processing example is it says writing to the depth buffer that is disabled to avoid rendering artifacts due to the fact that the particles are semitransparent but not zsorted so i'm pretty sure that this will help uh i think that this um hint will kind of like fix the rendering if you're not drawing the the stuff that you're drawing in proper zsorted magic way so i i don't know if if you're probably watching the stream and this you're going to like see this moments after i say it and then try it and then you could type another message in to see if it works i'm going to try going to the chat again just uh with a new window yeah sean when you look at the chat how many people do you see in the chat um uh eight and it's channel slash processing oh you know what you know chef shep redirected me to channel itp so but i don't see anybody in there either oh i see you now in itp yes stay stay there you'll see joshua davis says he posted some images so you can see oh i see the chat now i think that's his image and he says see how it goes the actual transparent area but i want z depth i don't know what that this is too advanced for me i can't handle it what is the oh z depth from uh connect i guess okay now i see the chat again this is very confusing to me um how long have we been doing this by the way let's see oh there are 13 viewers our viewership is going through the roof you could do a filibuster this way just keep going yeah um okay so we had some nice questions let me check twitter i always feel ridiculous whenever i say that cheers oh thanks oh good so hopefully um i don't know if it's noelle or nol but hopefully i answered that question in a way that was helpful uh does anyone want to join the uh if anyone wants to join the hangout you can type you i guess you could type your gmail address into the chat and sean can invite you in and then you can actually talk and speak otherwise you could go back to some of my juggling tricks they're not very good though it's very hot in here i don't have any water i can't get to the doors i'd bring you things but i can't open the doors um all right so uh wait there were other questions hold on there were questions in the um there were questions in the gist too many okay uh um how to embed a sketch on a web page was an interesting question that came up i really just realized like oh my god i can't believe i'm about to go down this road but um hold on let me find i'm just going to show you yes okay perfect so um i wanted to um since that question was asked you know the world of processing.js is a complex and interesting place but i'm going to show you a url um which i highly encourage you to take a look at if you're interested in this topic if i lost my internet connection know that i'm about to run out of power over here so um aaron sherwood who is a secondyear itp student worked last year last year to create a really nice tutorial that showed you the basics of okay you have um standing in front of it i should make it a little bigger actually yeah we can't read the url yeah okay so the url is there we go there's the urls aaron sherwood aaron sherwood dot com slash processing.js and i i don't know i guess um you know i'm more just pointing out this tutorial exists to the world hello world this tutorial exists i think it's great if you're interested in kind of figuring out what it means to you've got some basic processing code you want to embed it on a web page here's some of the stuff you need to stick in your html file here's what that all looks like here's what the sketch looks like running in the browser but aaron goes on to show you um quite a bit more which is actually how you can start to have a sketch interact with a web page so these are actual dom elements that i'm clicking on and that are actually changing what's happening in the sketch so you can communicate between the um the processing by standing the right place you can communicate between the processing sketch itself and dom elements as well as i think even maybe in the bottom of this tutorial goes on about how you can use um html5 audio in combination with processing.js so if you're interested in kind of advanced level you know we have processing which is java you know it's a desktop application you're writing code it's compiling it's executing your desktop processing.js for the core processing api will allow you to run that core drawing stuff in a browser canvas anything else you want to do you know beyond what the core drawing api does you've got to dig into html css et cetera javascript et cetera yourself but there's lots of things that are possible and aaron's tutorial is a nice helpful um place to to start i think what might be useful is if i have an actual like agenda i should get a teleprompter script so does that does uh that processing js tutorial that's only for javascript uh what about embedding of a javascript applet well that you know i you can do that if it's i i don't know that i would recommend doing that anymore sort of java applets are not well supported across operating systems and browsers but you can um there's a tool that you can get um there's a little known fact about processing is that uh and this is gonna be hard for you to see but up here in the same way that peop a lot of you might be familiar with the fact that you can add libraries so there's core live there's builtin libraries there's libraries you can in with the contribution manager you can go to ad library and see this really nice list of all these libraries that are out available that you can just install right through the ide itself the same is true of tools i can go to add tool and i don't maybe you can't see what i'm doing because i don't know what i'm doing and uh there is a tool right here called applet maker so if you're interested in like nostalgia and ancient technologies you can still export applets from processing that get embedded into a web browser uh okay i think you know we this is almost an hour i feel that this was on a scale on a i would rate this show uh from one to ten would give it a 2.3 no i think it was actually pretty good yeah maybe it gets like a four or five but so um any case if you're still listening or if you're interested in this kind of experiment this was kind of the last test for the summer um once we get back to september and itp is in full swing we're going to try doing this every week hopefully we can polish it up a little better we can figure out better ways to let people call in whether that's using still using the hangout or custom develop our own thing um more text chat more using twitter i'm not so sure but i'm going to try to do this once a week probably on thursdays for one hour every week and you'll be able to submit questions in advance or ask them live and i would guess that with the school semester starting though maybe there'll be more people out there with kind of beginner level questions which i think this format is maybe more well suited towards it's not so well suited towards i got this big complicated processing sketch and i want to like it has a problem that i need to debunk that really needs you know kind of quiet sitting down and walking through things but like little simple questions or little drawing ideas or how do i do um you know especially that's something to do with like motion animation and physics that tends to be what i know a little bit better as well okay so before i sign off before i do the uh ending song um i'm gonna just check and see if there's any other messages in the chat um i see joshua davis is probably maybe trying to install hang out oh okay that's sad that maybe that didn't work 12 viewers i was just 11 viewers people are signing off now look that's like i'm just gonna wait until it goes to zero that'll be like that just stand here and wait until it goes to zero twelve oh it came back to twelve again i almost don't wanna leave but it is it is almost four and uh okay i'll still be here but anyway okay so thank you you're very kind and you're a lovely person i like you very much and i i i appreciate the time that you spent here in this um mediated space and thank you sean for helping figure out how to make all this work and for asking all the questions and participating thank you antonius for calling in live for scott scott fitzgerald everybody everybody uh my mother and father thank you um anyway don't forget aliki okay i'm gonna um i'm gonna just i guess what i have to do now to sign off is hit end broadcast hi everybody hi everybody