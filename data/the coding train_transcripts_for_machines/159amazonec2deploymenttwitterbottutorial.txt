hello in this video I'm going to look at how you can deploy a twitterbot written in node.js to an Amazon ec2 instance in particular one of the reasons I want to use an Amazon ec2 instance in this case is because not only is my twitterbot written in node.js but my twitterbot triggers a processing sketch which is a Java program to create an image and that image is posted to Twitter so if you want to uh make a image producing twitterbot this is one solution for you this is not the be all end all solution of course there's lots of ways to write Twitter Bots and there's lots of ways to make images but you can see here so I'm in a moment I'm going to start going through those steps but let's just kind of get a lay of the land here for a second so here you can see this is a particular twitterbot it posts an image made from processing you can see the image here this is the processing sketch if I run the processing sketch here you can see it just draws this particular image uh it also saves it to a file and exits um because here now is the code you can see the code in node is triggering that processing sketch here uh and now if I run that code the image bot is starting it says it worked and if I go back to Twitter we can see here I got another one now these two images are different even though they look remarkably the same remarkably similar um but um they are they are different right someone doing a quick pixel analysis they're different they have to be different otherwise my whole understanding of the way the universe works is faulty okay so now we see this is how we you run this stuff locally this is what I did in all the previous uh videos in this playlist about node Twitter bot things now we need to look at how do we uh how do we uh deploy this stuff to an Amazon ec2 instance you know basically you know any of any Linux uh uh Linux server um you could all these same steps and I'm just going to happen to use Amazon and I was able to do this with a free account now at some point you might discover you have to pay but for the most part seems like you can run this using uh free credits at least for quite a long time okay so I do happen to have these notes online on a web page which will be linked to in the description of this video which presumably you are watching at some other time than the actual moment that I'm speaking right now um but the first thing I'm going to do here is go to this link Amazon ec2 but actually I can just type in Amazon e C2 probably into Google and uh I'm going to even just uh go down here and click on the first result and what I want to do is sign into the console the console is where I'm going to get to configure my server so that's the first thing I want to do sign into the console and then I have to enter in my password uh and I don't want Chrome to save it okay ah I'm presented with this terrifying page of like 50 zillion things we could do I there's so much here I have no idea what any of it does but up here in the top left ec2 virtual servers in the cloud floating in the air um so uh those servers which are more likely in an underground bunker somewhere not in a cloud but uh this is what I want I want to run a server somewhere else where I can run this particular bot so I'm going to click on ec2 and I get an ec2 Management console and oh good oh no I do I have I currently have one running instance which is I guess probably some previous test that I did at another time but I'm going to just click launch instance uh and now I'm presented also with a terrifying set of objects of op of objects of options so I'm going to go back to my notes page where I said this is the one that I happen to use so there's different versions of Linux operating systems and different kinds of and uh um the the the key things that I'm looking for one is free tier eligible I'm going to see if I can get this running on the free tier the other is I need one that can also not just run node but run Java and so happens that this ubut server 14.04 it happens to also be able to run uh Java I also want to make sure I pick general purpose free tier micro and then set review and launch so I'm going to do that I'm going to look for that one which is this one I'm going to hit select over here I don't know if you guys can see this I should make the but Ubuntu Server 1404 I'm going to hit select uh a general purpose T2 free tier eligible I'm going to hit review and launch and now it is launched um great oh no launch now I'm gonna hit launch and ah okay so ah so here's so if okay so here's the deal this is the weirdest part of working with Amazon ec2 is how you're going to now authenticate and log into it and you need to create this secret file that holds the keys to your server now apparently I've been here before and I've made a bunch of these because I was showing different uh examples so you likely won't have any previous Keys you can use so but I'm going to create a new key pair so I need to give it a name and I'm going to call it coding rainbow if you can see that and I'm going to then click download key pair oh yikes ah what happened I'm zooming like a I've completely lost my ability to zoom effectively so I'm going to hit download Keir and we should see hopefully uh that ah you can see here uh oh I'm standing in front of it but down here under my downloads uh in the downloads there is now this file coding rainbow. pem you must have this file I now need that file always and forever to to log into uh this ec2 instance in a variety of different ways that I'll show you okay so I have that file now and uh now I should be able to now finally say launch instances now that I have that file I can say launch instances and I'm waiting your instances are now launching and now I can go to view instances and uh I don't I'm not worrying about that right now so you can see this is clearly one that I made a while ago uh when I was doing another tutorial or another test or um and you can see this one hasn't actually completely launched yet um so this is the problem of making these videos in real time where I I I I sometimes uh I just stand here like completely awkwardly like dumbfounded I don't know what to do it's pending let's go to the next steps and when we come back hopefully it'll be um hopefully it'll be working so okay so uh I I followed these steps I did this part now aha okay so what I need to do now is use that key that file to be able to log into that instance so the way that the first thing I need to do is actually change the files permissions so files on computers have permissions some files are like locked and you can't edit them some files are applications that can be executable this particular key file needs uh CH stands for like change modif actually what does it stand for somebody tell me somebody write I'll do an ation here say but I I need to run this command to change its file permissions so what I'm going to do is uh first thing I need to do is I need to go to where that file is so actually I'm just going to put that file on the desktop you can come up with a better place to put it uh and I'm going to go to the desktop and I can see there is that file and uh I guess I'm zoomed in or something uh so now now what I want to do is oops type in this particular command chod 400 and then that file name which is was coding rainbow. PM so that's the first thing I've done I've now change the file permissions to 400 for that particular file and then now I can you do something called SSH ssh secure shell um so basically what I want to do is in the same way that I have my I'm here in terminal on my computer and I can look at the files by saying LS I can run the files by saying like node what I want to do is be able to remote into that Amazon ec2 instance so that the terminal I'm looking at the commands I'm typing are actually not running on my laptop which is here that was dangerous to pick it up not running on this laptop but actually the commands are executing on the server floating in the Cloud that's buried in the underground bunker okay so uh let's see here if ah so me rambling for a long period of time we're at 9 minutes here has actually caused this this instance to be running I don't know why it doesn't have a name here let me give it a name so um and one thing I can do here uh if I zoom in and rightclick see this connect option this is going to be really useful to me because actually it gives me all of right this is the command it's got I've got the command right here uh this is like the public this is like the I the address essentially of that instance and then here it's actually giving me the exact command to log into it so I don't even need to figure out what it is uh I can just copy this and go back to terminal and paste that in here hit enter and okay this is the first time that I'm connecting so my computer is saying H I don't know about this I haven't connected this place before is anything is there anything that I should be afraid of here it's nothing so I should hit type yes and now it's added and then I just sit here and I hope I wait and I hope that the internet will oblig me and connect ah there we go so look at that you can now see here that I am connected I have logged in under my new name Ubuntu to my new address IP 17231 34179 so now I can do things like say uh PWD with print working directory here I am in home/ Ubuntu I can type LS and I can see there's nothing there so now this is great right this bot which I have here locally on my computer I want to be able to get it over here on my Amazon ec2 instance so how do I upload files there so the way one way to upload files to your Amazon ec2 instance is with uh uh FTP or file transfer protocol secure FTP so the way that I could do that is you can use any any FTP software and all sorts of there's probably a way to do it through the web through a browser but I'm going to use something called cyberduck uh which you can Google and download I already have it installed here and so I'm going to run cyberduck apparently I and what I'm going to do here I have a cyberduck open what I want to hit is this open connection so I click open connection and now I have this window where what I need to do is put in all the information for that Amazon ec2 instance so first thing I want to do is make sure I do SFTP it's got to be secure shell F transfer protocol and then the server address if I go back to here should be this right this is connect to your instance using the public DNS it's this so I'm going to copy this and go back to cyberduck paste that in here now there's this interesting question here which is what's my username and password well I don't have a username and password I have this weird coding rainbow. PM private key file it turns out in cyberduck under here under more options I can click that and I can say use public key authentication so I click that and now I go to the desktop and I select this file and now I um I've now have this file selected as my way of authenticating and I should be able to just say connect oh maybe I need to write Ubuntu here just in the uh username and uh ah it works okay so that was one little step that I had personally forgotten that I need to put in the username I need to say Ubuntu but now I just have this window here right this is now a view into home/ Ubuntu so what do I want to do I want to go and I want to just go here this is this folder here node five is where I have all of my stuff and I'm actually just I'm just going to take um bot config and package.json I'm just going to upload those files right now so I can drag them in here drag those files into here and they're now uploading Windows telling me progress they're transferring I can see that those files are listed here right now and now I can go back here and I can say LS and you can see those files are there yay these things are working so now running out of breath here um now I can type in node and you no this is going to not work because I I've I've missed a set of steps here but node bot. js and so what's happening here the program node can be found in the following packages node nodejs Legacy so and then saying pseudo app get install selected package so one thing we first have to do is at least configure node to work that the way that we want it to work and I believe that I have mentioned that here uh and these are some steps that you can do so let's actually just run through these steps the first thing I want to do is call WR uh do pseudo apt get update so what that does is just says this apt get thing which is a tool to like get things like node and other software I want to make sure it's updated and has all of the most recent stuff so that's done then the next thing I want to do is install nodejs which say pseudo app get install nodejs so I'm going to run that uh my audio is still working uh this is asking me if I want to use the disk space which of course I do um so I'm going to run and install nodejs which is great then I also want to make sure I have npm installed which is node package manager which you might remember from the previous node tutorials uh and this needs 130 megabytes of disc space so hopefully this doesn't take too long um so um this is installing now the next step while it's installing let's talk about the next step for a second um this is now a a command to make sure that the particular version of node that I installed is now the actual version of node that will run when I type in the node command um so I am going to grab this command here and hope that this is done it's done and I'm going to because watch what happens if I just type node right now it doesn't actually know what node it can be found in the it's like well which one should I run nodejs Legacy or this one node so I want to make sure that I run this particular one with that command and now when I type node you'll see I'm in node so now I have node running on my Amazon ec2 instance and I can oh wait if I say clear here oh it does still work I can say uh node bot. js now first error I get is it cannot find module twit this is going to be notice when I uploaded my files remember how I said I uploaded the files I didn't upload the directory that said node modules I could have uploaded that directory but it makes more sense for me to just let those modules get installed by Amazon itself so I can just type in npm install and it's now going to install all the modules that are needed for this particular bot we went through this locally now I'm doing this on the server so if if we looked here and I said I refreshed you can see that now there is a directory called node modules which has for example that twit module in it so now I should be able to say node bot. js and it will run now here's the thing it runs so these are all the steps you need if you just have a plain old bot that only runs in node but the reason why I got an error now is it can't find that image file output.png the reason why it can't find that image file output.png is because that's the image file that's created by the processing sketch so while this part the video I've now concluded like you could if you just have a node.js bot you're kind of done although there's another step of getting it to run after you log out which I will get to Let's uh but let's get the let's get the image itself to let's get the image making processing sketch to run as well so let's look at how we do that and there's a lot of like sort of uh awfully scary looking weird commands to do that okay uh oh but um actually so um yeah I'll come back to the forever thing okay so the first thing we need to do is make sure Java is on our uh server so first thing I want to do is install Java which I want to say apt get install default JRE uh so I'm going to put that in and run that and it's going to take 209 megabytes of disc space I'm going to say yes so now I'm installing Java and I'm going to wait for that to install let's go back while we're doing that to the next step The Next Step okay so look at all these like terrifyingly weird looking commands so what's the weird thing that has to happen when you work when you work with processing on a computer your computer is typically connected to a monitor a screen and you're seeing the output of processing on that screen your Amazon ec2 instance has no screen it has no goey interface it's just a server that you can SSH into or FTP files to but it's known as headless meaning processing actually when it runs it breaks because it's like I don't know what Graphics thing to draw anything to there is no Graphics thing so these next steps are steps that create a fake display essentially the ec2 instance has this display you're tricking it into thinking that it is connected to a display because we don't need to see it we just want the graphics to be rendered to a file so the first thing I'm going to do is install something called xvfb which you could uh Google to find out what it is uh I'm going to run this particular command which will install this tool for a fake display the other thing I'm going to do is uh give it a now I'm going to give it an actual screen which is has a resolution of 1024 by 768 why not so I will do that it gives some weird little errors but you know big deal so this seems to be running a process that um um uh I need to like now quit out of so I'm going to hit control C to do that uh and then I'm ah okay so this was this was the command that creates that screen and that screen was there only while it's running um but I also now need to export it and and assign it to be display one so so actually these commands are no good so this is the command let me uh let me explain that again so I'm going to run this Command right and that screen now exists for processing to draw into but I can't type in any other commands here because it's like running so what I needed to do is I needed to run in the background and a command for having things run in the background is no hup so I'm actually going to say this now and now you can see I'm back to my terminal but that screen is now created and I also just want to assign it display display number one that's what processing will draw to display number one so that's done so now we're in good shape now here's the thing if we go back to the code you'll notice here this is the code that I ran locally on my laptop for triggering processing to run processing Das Java but actually now that I'm on a Amazon server boy this is I'm 20 minutes is anybody still watching this 20 minutes into a tour about uploading stuff to Amazon ec2 but I have now um I'm now on an Amazon ec2 instance which is a Linux machine so there's actually a different way that I can do this I can go to my processing sketch and I can go under file export application so export application is something you can always do and it opens up a little window and what I want to actually do is check Linux okay I want to export it as a Linux application now there is this embed Java option which I'm kind of confused whether I want to select did I I don't recall whether I need to select that or not let's try unselecting it uh I probably should keep it selected but let's try unselecting it and I'm going to hit export so you can see here now I have um the Linux application incidentally here's a version that you could run on a Raspberry Pi which we'll get to later so now um I should be able to go back and uh upload this um to okay so I I I'm going to have this application which I want to include so oh no ah boy this tutorial is not going very well that light went off camera went off I don't know why this light keeps going off um so I'm going to now now what I need to do is I need to take this folder and I'm going to upload that folder to oops my server so I'm G to upload that here so I'm uploading that Linux application it's there now I'm also going to rename this file this folder and call it rainbow uh and I want to I do want to do that um so you can see here the application is now here in this particular folder so the first thing we need to do is figure out does this even work so remember here I am now on my I'm now logged in to the server and you can see there is a directory called rainbow so I can go into that directory we can see what's there this is actually the application and the way in Linux the way that you execute something is with Slash rainbow and it's going to say permission denied so I did miss a step there which is that um the the the permissions of the file I have to set the permissions to be executable which I can do by saying chod 777 uh rainbow and now I should be able to say do SL rainbow and run it and it did something it finished and now let's type LS and we can see look at that there is a file in there now called output.png so if I go in here and hit refresh and we go grab this file and I download it to my desktop and I take a look at it you can see this is the image that was now generated on the server so now we have the um processing sketch as a exported Linux application running on the Amazon ec2 instance boy this is I I know this is like 20 some minutes into this long tutorial but we're so close now to actually making the thing run it's very exciting okay so now if I go back to here one thing you'll notice I'm going to go back to the code is remember this this was the command that I had for running on my Mac to execute a processing sketch using processing command line processing Das Java but now that it's a Linux application the only thing I need to do is actually just I changed that command to this/ Rainbow only that's not exactly right because it's in a different directory and so I'm going to go here and um I just need to make sure uh um I I have the folder so I think actually I can just do this rainbowrainbow and uh now I've changed the code and since I changed the code I also need to reup upload the code uh to the server so I'm overwriting it continue so now that new code is running on the server and I should be able to go back a directory so now what's here we have bot. Js which triggers the processing application which is in rainbow and communicates with the Twitter API and post post a tweet so let's see if this works image bot is starting it worked and now if I go here and look at the bot we should see 7 seconds ago this particular image now I want to make sure it's really overwriting and making a new image so the only way I can think to really do that is to um go into the processing sketch for a second and uh change this to like a green value so let's make um oops you can see now the color should be green and I'm going to uh export this export application as a Linux application go into here take this and I probably shouldn't be doing this right right now I'm going to upload it so I'm replacing it here we go so now I uploaded the new application and I'm going to go into that directory I'm going to whoops change the permissions again you don't ever need to do this I just want to really make sure it's working which is risky because it might not be I'm gonna go back up a directory and I'm gonna say node bot. JS image bot is starting it says it worked but I'm not entirely sure it overwrote that file I have a bad feeling it didn't ah it did okay that's magical so it does work so um and I can run it again now this particular bot by the way you noticed it just quits it only does it once and you can see we got another one these are two even though the this the same color scheme they're different I I should just make a a processing sketch that makes a much more recog ible image but here's the thing um uh what you want probably is your Bot to be running continuously so the one thing is just to add set interval to the code um but the other thing that you need is to use a tool known as forever so this is the last piece that's on um that's on this particular uh walkth through so in other words what you want is for the node app to run forever in the background even when you log out of Amazon your instance and forever we saw that this no hu thing is a way of doing it um which is also a way but node has its own way of doing that which is something called forever so um I can say pseudo npm install forever G so this is a node module that's not associated with a particular node application but a sort of global thing that you would run across a lot of applications so if I copy that here that's going to install this tool called for forever and then um it's gonna do my in Forever install dance uh and then uh and then I can now um start and stop things I can say forever start bot. JS which is running it uh and you know you can set all sorts of parameters like you know how long should it be up for how long should it sleep and all that thing but I'm just letting it use the default and another thing I can type now is forever. list I think and you can see um uh let's let's hold on let's make this a little bit more easy for you to see uh forever. list and you can see that uh this is the particular process that's running no JS bot JS so if I wanted that one's just running now forever it's not tweeting forever because the process is not set to do that but I could um I can do things like say forever stop all I believe which just stopped everything so now if I say forever list again there's no forever processes running and I can say uh forever uh start again um so there's lots of different ways so so this is what you want to do you want to and so if I set that running and I log out my bot is now going to be running Forever on that Amazon ec2 instance W this is like probably one of the longest tutorial videos I've ever made it was completely sort of like frantic and a little haphazard this is probably hard to follow probably to be honest with you this page of instructions might actually make it easier but let me just review to recap what I covered at this particular very long tutorial which is that first thing you want to do is create that server instance right you need to get a key pair a file so that you can log into it once you've logged into it you want to SSH into it mean connect to it from terminal then you want to do things like install node then you want to connect to it with FTP SFTP cyberduck being a tool for doing that that allows you to upload your files there once you've uploaded your files there you can run your Bot but if your Bot also runs a processing sketch you want to also install Java run these commands to create the fake display in the background then export your processing sketch as a Linux application and upload that once you have all of that there then you can use forever to run your node bot that triggers the processing sketch this is like the um the kick the cat that my father bought for tuu Z but anyway that that that that runs the node that runs the processing sketch that creates the fake display that runs with forever my father bought for anyway whatever um so uh all those steps and you've got your thing running so I if anybody actually watched this entire video and actually has a node bot running on an Amazon ec2 instance successfully I don't know please send me a tweet or something or to let me know because um uh uh because that would make me happy um to hear that okay so I'm going to stop recording now uh I will in the description for this video link to the written instructions link to all the references you need and hopefully this will be something that's useful to somebody someday somewhere in the universe