hello good evening did you hear that sound that's the sound of me actually getting here a half an hour early and hooking up an iPad with some sound effects in it which is maybe not the best thing for you watching right now but it is the best thing for me welcome good evening afternoon morning this is the coding train my name is Dan this is a whenever I get to it kind of weekly live stream I'm just checking to see in the chat if people are seeing me can you please let me know I'm gonna just click this button over here oh this is so terrible I was had some momentum here okay please let me know if everything sounds ok if you can hear my sound effects because I want it to be I don't know where anything is no is it I forgot this one over here okay all right so what I was saying was my name is Dan this is the coding train I try to be here every week every Friday in the in the midafternoon Eastern time to appear on the YouTube to program code make things embarrass myself all of the above and that's what I'm here to do today please increase the sound a little bit so increase the sound of my voice my lyrical gentle soothing voice or increase the sound of my music background voice a bit low okay let's see what we can do about this alright fortunately I have so many new technical achievements first of all this is gonna be real you guys really gonna enjoy this this is a green piece of paper which I'm going to put this laptop my voice okay let's see here I am in three so if I turn three up a little bit okay tell me if that is better and hopefully there's no distortion or peeking or anything like that because I can keep turning it up I just don't want it I want to make sure there's no distortion oh yes very good very good question about the sound is too loud now the music is too loud we say sound it's just not specific enough for me okay I got me more now it's too loud okay I'm gonna turn it down I forgot what it was that I'm gonna just I'm gonna leave it here okay I'm gonna leave it there I'm going to get some tape I turned it down now everyone saying now it's better but you're probably 20 seconds ago so tell me if I need to turn it turn it back up better music I don't I I don't know what anyone is saying anymore I'm going to I'm gonna split the difference it go into the middle yeah okay alright so let me put this nice oh no this piece of paper is not big enough they did it okay let's see I guess I will do this side I'll do this side know what to do papers not big enough I need two pieces of paper what a mess okay let's put a piece of tape here and a very little tape left also this is it it's all that's on the roll no tape left at all than this okay let's put a little piece of tape here I didn't really wasn't very thoughtful about this technology is falling apart let's do this you know what I do have another piece of paper it's a slightly different shade of green doesn't work as well but good enough I should put this one underneath let's see I'm just looking at the chat yet no nothing's happened yet you haven't missed anything you just missed me I could have done this before I started ok let's try putting this year and I don't know what I've done that's better than nothing or maybe it's not better than nothing just do this ok move the paper further forward put it on stand move the paper further forward that's a very clever idea you guys are much too and move this higher although I'm really I really want to get this just right so bear with me for a second this this is going to be perfect oh yeah this is good ok wait you can see the blue tape there's some blue tape picky oh I'm gonna get some youtube comment complaints about having to sit and watch this here we go ok all right good enough all right welcome to the coding train I'm gonna set that aside for a little bit so what you might not know today's date is April 28th yesterday April 27th was poem in your pocket day just so happens that I have a poem not on a green piece of paper in my pocket so I'll read it to you for to celebrate poem in your pocket day oh this is kind of a long poem this is by Alison parish I will say a bit more about Alison and her work and this particular poem after I read it looks weird when I step behind it yeah it certainly does right oh my goodness everything's going wrong I thought it was so like technically adept today is a cable dangling here let's move this over here um okay me me me me me me me Star Trek true to the wrath of calm then each day was like a year in the warship of way NOLA now they that go down to the sea in ships then why not Kent as well our treaties draw there I met an old man that wouldn't say his prayers His Dark Materials to create new worlds too and her 16 there were ninety and nine that safely lay give half his years if but he could saying thus that alpha and who hath him sent how when she hears her son is dead not by their hands who vex the patient ground it is not possible that they old dame whose mounts a Sicilian fountain to the day where many a hero has found a grave such arms their last necessity provides yet could not speak or move but on its base but every coast is clear go where he will though hidden now from all our eyes not thus the foe his javelin aimed above and sensor from the Senate I displaced if his message was for sinners he could a vital change your work seemed incomplete to blaze those virtues which the good hide the mischief after all could not be great time cannot Amy my griefs are immortal but never could they warp my constant mind giving me pain which I do not value until the time when every mighty power could force that passage now and they too died and overall with one blast and the same who is resolved to venture his vein life and what between hem is of space a little ship goes out to sea that's my favorite part of the whole poem actually it's just I'm to give the little ship going out to sea okay this poem is not by me this poem is by Alison parish I'm going to open up the internet here I'm gonna go to Twitter Alison parish is a programmer artist poet writer teacher educator many more things I'm sure I'm pretty sure Alison's Twitter account is at a parish and if I go down just a little bit we're going to find this poem here it is why is my browser so small so unnecessary and let's take a look at this okay so this is the poem it is here and a tweet from April 26 and Alison writes replacing each sentence in a plot description with its closest semantic equivalent in my Gutenberg poetry corpus Soilers so I encourage you to follow follow Alison on Twitter she makes a lot of wonderful quirky and interesting BOTS probably most famous for the every word but which tweeted out over a period of years every single word in the dictionary I don't remember which dictionaries use the source one at a time over a certain period of time and Alison from what I understand following her on twitter has been working on creating a corpus of poetry and using something called word to vac likely to look at distance between lines of poetry so this is actually the idea of taking a plot description and taking a sentence from it and finding a line from a poem that's closest in this word vector space to that particular problem it's kind of the results of a particular line from the plot description it's kind of amazing the results that she's being able to get and I also want it I'm going to make a little plug for tonight if any of you happen to be I think if I just google RW ET this is Allison's course at ITP where I teach also it's called reading and writing electronic text if any of you happen to be in the New York City area it is 415 p.m. right now at 700 p.m. right here at ITP there will be a reading of all the students in the course and various computergenerated poetry and other language experiments that they have created so I encourage any of you to come we start coding now I will I will you know me I can't just start coding I got to warm up to it I got to use some tape got to talk about poetry and totally other some other unrelated things but I encourage you to check out this course and if you're in the New York City area come see the reading tonight okay let me close out of this what else do I have to announce I have added some new coding trade merchandise to the coding train store let me briefly do a little plug for that it's another way that you can support the work that I'm doing if you feel so inclined so this is the coding train store there's a new tshirt style with just this single train logo that people have requested that seems to like I'm going to get myself one of those yellow ones there are some zipper hoodies I just ordered myself this charcoal one over here there are some kids tshirts and some new women's cut tshirts that I didn't have before I just had the unisex tshirts so if you're interested in any of this stuff I'm not going to belabor the point it is coding train store Envy calm everything is fulfilled by printful printful is a kind of printondemand company and by the way there's a lot of other stuff I could make available via printful and so if you see something on the printful website that you want me to make available I will try to do that and I'll have them requesting a Vista tshirt so I think I need to do some logo branding clever design with a sort of this dot thing because people really like the I don't know where anything is Wow so if anybody wants to propose a design for this dot tshirt I'm all eyes cuz ears would be listening to it I guess anyway let me know send me a message on twitter at shipment okay uhoh I'm out of food you're talking about the foot you guys I saw some comments in the chat dancing I saw some focus is definitely an issue and I was worried oh my god I know that I'm a little scatterbrained and I have trouble focusing and I go all over the place and I'm not very organized and I'm often late not prepared but you're saying I'm out of focus like actually out of focus like I'm fuzzy that is quite possible let's see let's see how can we do this what can I do I need I'm going to focus the camera I have an idea so I stand about here so what I'm going to do is I'm going to move this laptop backwards backwards backwards as far back as I can okay that's that's about as far back as I can move it without it falling off the table oh I can move the table back and I can move it forward ah let's see if I can focus on this laptop uhhuh so I'm going to attempt to do that now and see if I can improve the focus what happens when I do this nothing wrong button mmm used to know how to do this oh this button know this but no this button no don't do it up read my camera I thought it was this button I was trying to zoom in to do the focus and doesn't see no one let me do that alright I'm just going to uh look did I just okay let me try let's see how this goes make it really out of focus it's way out of focus okay now I'm going to folk and probably what's more in focus is my hand over here hello no my name is no on the groaning tree okay right now I am going to focus focus focus focus wrong way wrong way focus focus that's already come into focus starting come on focus that's better I'm gonna go a little bit past it a little bit past it because I'm gonna stand behind okay let's see have I improved this at all I hope that I have oh I think I have I feel like just looking at it I could see in my preview that I am a little bit more in focus okay I'm going to hope that that's better I'm moving the computer back here let me know if that's a problem ok let's see what else I don't have I'm almost ready to do some coding but I got a couple more things which are related to coding so you not be wondering what's the topic today so I'm going to mention something to you guys which is that I have been teaching this course at ITP called nature of code intelligence and learning and the course is actually basically finished now next week are the students final project presentations and it was my intention to keep up and make videos about the topics in this course all semester or it's a seven week course so all seven week long however you know I missed it there was a conference I got sick things have been busy I've been a little bit behind so right now I am still on week two but I have examples and material prepared for each and every one of these weeks for example if I just quick click on convolute this week five convolutional neural networks and tensorflow I'm going to click here and you're going to see look at these these are some of my examples here's some resources and terminology some things that I'm doing so you can take a you're welcome and I encourage you to take a peek ahead on what material I have published here I am just going to slowly over time you know I'm probably going to miss one more week when it's either thesis presentations here or the student show but you know other than that I'm going to be here all of may all of June and week or two in July I'm going to be away for a couple weeks in July but I'm going to be here all this time and I'm going to just plug my way through all this material and I hoping to get through the end of it this last all this content to get to the end of it by the end of June so that's kind of my goal right now I know it's been a topic that has been highly requested and I'm just going to keep working through the stuff what I'm going to do today is actually continue with evolutionary algorithms and I am going to it's I had a coding challenge from a long time ago which worked on the traveling salesperson problem it was actually a series of several different versions and I kept saying and we could use a genetic algorithm I never got to that so that's what I'm going to do today in this particular livestream okay now what else do I want to say ahha here we go I got something for you guys okay so over the course of working on this course I used a variety of different tools and investigated a lot of different libraries and frameworks for doing artificial intelligence and machine learning however just to you know practice and learn I did build a very small sort of toy simple implementation of a neural network library in JavaScript designed to be used with p5 so I just want to show you that that exists right now I'm going to go to Schiffman repositories so that and I'm going to at some point in a coding challenge build this library from scratch so I'm going to go through the steps to make the library but the library is already there you could actually make use of it I'm going to click on it here there's a little bit again I don't by any means suggest that this is a robust platform for high performance you know superamazing hard moving fast paced which is learning algorithms it's just a sort of simple toy neural network library to do some experiments and you can create you know I recognize a lot of you watching this might no idea what a neural network is these are topics that I will get to but you can create an instance of a neural network object you could pass it some inputs you could give it something that you think it should output and so train it against that and you can also ask for it to make a prediction off of some unknown data so I've been using this I have a few demonstrations I have a demonstration that uses this of the sort of classic amnesty data set which is a this is using my library by the way I should mention that most of my library was derived from Tariq Rasheed's excellent book make your own neural network so basically i ported his code from python to JavaScript and i've changed a bunch of things and added some features but mostly it's the same so one thing that I really want to do is I want to have another I really really don't like using em mist as the sort of default the demo example but I did want to try it M NIST is a sort of wellknown dataset that's used to test different machine learning algorithms it's a collection of many many handwritten digits and what you can see here is boy this is I must have changed oh my goodness I've got a terrible bug so I changed a whole lot of things in the code yesterday and never rechecked this particular example so I'm going to fix those and if you want to pull request me a fix I'm sure you could find it so I can't really actually demonstrate this to you right now because it's not doing anything better than like just a random guess but oh look it did guess that that's a zero it's always giving me it no matter what it gives you a zero so I've got I've got I've got this taken this good thing good thing I discovered this live on YouTube okay let's look at what some of the other examples this is an example that's based on actually a chrome experiment called flappy learning by x vignette on github and i made a similar implementation of it using my library this is whoops this is a whole bunch of agents flappy birds trying to learn to play flappy bird so let's let it let's speed it up let it go for a while it's going to try it over and over again it's going to try is this is actually an example of neuro evolution which is a way of combining a genetic algorithm with a neural network to evolve to a it's using a genetic algorithm evolve an optimal neural network and you can see here now I have my little flappy bird this is a very sort of easy version I made the game kind of easy but so it's able to do it but this is a oh boy I'm getting nervous that's going to fail but this is good job artificially intelligent clappy bird flappybird thing it said clappy bird because i have another example of making a clap okay and then I have one more example which I want to show you which is also here as part of the library called neuro evolution in steering and that is a variation on my last genetic algorithm coding challenge which used a genetic algorithm to evolve a steering force to collect food and now I'm doing something different where each of these agents has a whole bunch of sensors attached to it that can sense the food and a neural network processes all the sensors as input and then decides what to do about those inputs and over time if I let this run for a while we would hopefully up achieve some sort of optimal state of being able to collect the maximum amount of food okay so I just wanted to show you anybody watching that this stuff exists because if I go over to issues I've got a long list of stuff I'm hoping to make a version of this for processing and lots of stuff that I'm working on but it's going to be a few weeks before I get to actual video tutorials that make use of this but that is coming ok let's see I am taking a look now I'm going to take a minute here by the way I have some new I have some new sound effects so I'm going to take a moment to see if I can answer any questions in the chat and then I'm going to do two more thing one more thing which is show some community variations of my last coding challenge and then I'm going to get to the next code okay just me asks what math do you need to learn or programming engines and lots of people are saying go code down you know I hear ya I hear ya it's a good good point um that's a good question uh you know so if only I had an answer to that question you know working with computer graphics it helps to review and practice topics from geometry in particular a trigonometry also to just have a sense of you know looking at triangles and angles and rotation lines and did this sort of stuff so I would say a kind of geometry trigonometry those are two subjects that I would certainly review you know building an under all Network system that uses something called gradient descent to learn requires some understanding and some basic knowledge of a thing in mathematics called calculus a lot of books and tutorials will explain and cover how to build a neural network through what you know an intuitive understanding of how it works intuitive understanding of calculus and that's kind of the approach that I'm going to take when I eventually get to do some tutorials okay yes okay so let's see what else we got I'm going to look for some other questions have you ever thought of doing coding challenges in react or node frameworks and then I think there were something about es6 this is a very good question and it's something that I'm really struggling with so I have never thought about doing just about anything I don't I don't use react in my daily life or work it's something that I would have to learn and look at to do some video tutorials it would be a good subject to have a guest come onto the channel to do some tutorials I have a guest hopefully coming soon to do some phaser which is a JavaScript game engine tutorials node I certainly have done tutorials and plan to do more using node it's definitely a piece of the puzzle in creating interactive creative coding applications if you need some serverside network component and then es6 I just don't know what to do about that I feel like all my examples are es5 syntax p5.js is using es5 syntax I don't know when or it makes sense to move over to es6 and I just have no idea what's about that so I'm always looking for feedback and advice about that at the moment I'm not ready to do that today but at any point that's certainly possible okay oh it's 430 I've been streaming for 25 minutes 30 minutes is my limit before I've got to get started with a coding challenge I'll see if there I think view is better than react you know who's a wonderful wonderful educator and programmer who does amazing stuff I think with view is Sarah Dresner Sarah Dresner was a guest on the coding train and Sarah Dresner also has a book that just came out who's promoting things that I think are good things in the world book by Google Sarah Dressler book SVG animations from common UX implementations to complex responsive animation I feel like Sarah does if you J has tutorials and workshops I don't know about that okay somebody could tweet this image to Sarah maybe okay will you do Tetris as a coding challenge I would love to do Tetris you know my most popular videos are actually these simple coding challenges where I make quick easy games the snake game that Purple Rain challenge those are my two most popular videos which is sort of surprising to me but maybe it shouldn't be surprising so I would like to do more of Tetris I think has got to be like a many part challenge right that's such a common so simple game to play a complicated game to build I would think okay all right thank you for those questions I will try to keep an eye on the chat I will also just mention that I have a patreon which is you know I usually feel awkward about plugging this but today I'm feeling just like plugging it so I have a patreon patreon comm slash coding training if you would like to support the work that I'm doing you can join the patreon I have a slack channel that you will get an invitation to that I am looking at right here and at different levels of scientist stickers or books and things like that okay so I will just mention that Baltimore Orioles jh2 k12 18 go O's go Danny ocean and go to a nose game okay all right uhhuh here we go um that's for all you Boston Baltimoreans out there alright uh there's all this stuff going on in the chat okay so as you might be aware when I do these live video streams can you hear me talk over the music what I it's kind of loud for me maybe if I turn it down you when I do these live streams I'm not really so advanced into anything so I need to take a minute here to kind of gather my thoughts and find some old code and I'll sort of talk you through what I'm doing and I'm going to get to a traveling salesperson so you probably are less interested in eine kleine Nachtmusik as you might be in the distance on as always I always forget the dis stop this stop it stop just stop this so first thing I'm looking for is the coding challenge is playlist anyone see coding challenges playlist you thirty more I should know how to use this it's not just God here we go this stop this got this so I'm looking for traveling sales okay it stopped so looks like thirty five point one thirty five point two thirty five twenty three that's where I last left off this stop this stop pistone ow oh I forgot about the community variation okay so now I'm going to rainbow code so one thing I like to do is I like to share a work that people have done variations on things that I have made in previous coding challenges and live streams and I have a new system I by the way I would really like to turn this whole repository into a website and there's been some discussion on that in the issues I don't want to contribute to that boy that would be super great join us but I haven't figured out a good way to do that but right now if I go to my most recent coding challenge which was steering evolution and I click on it all coding challenges now if they don't one should be added have a readme file associated with them and that's where you can add your own oh no oh no I think I forgot to merge and I'm not signed in to merge this but I sorry I'm just going to go so this is exactly what you can do you can create a pull request miles miles Elva did shut up miles LV Elvidge create a polar crest add a link to my variation and you can see that that link is right here with a link to miles this name github repository the project and some instructions about it so I can submerge this from a different computer where I've logged in on github but I can easily just get to the link right here so I'm going to do that and download that while I am doing some other stuff so let's download this so let that download okay so now I'm going to go back to the actual readme file which is right here right okay so we can see a few here now first of all I often do this when I create the readme file I'm too lazy to link to the YouTube videos and the original hive stream anybody wants to help out you see missing links here you can actually just go and add the links for me that would be wonderful and here we go so set up and draw created a variation let's go to the dam let's read let's go to the demo and here's the demo so this looks at first glance very very similar to my original implementation I imagine there are some things that are different here next generation automation based on vehicles healthiest survivor and some finetuning to the genetic algorithm press alt for switch debug on and off Mouse press for adding vehicles future implementations maybe in the future so it sounds like there are I can click the mouse and add some vehicles it sounds like there are some improvements in thinking about how the evolution works for us to be able to see that we'd probably have to let this run for a longer period of time but I encourage all of you to do so and take a look and maybe compare and contrast what setup and draw has done in this version that's different than mine okay I'm going to go to the next one which is by Carla de Beer press enter to toggle visibility and perception radii and display current fittest Boyd click on the screen to create more food whoo that's as interesting so let's take a look at this so what so this this is great this is a variation from Carlota beer one of the things I love about this as you can see there's a key here so this is food this is poison healthy boy dying boy and this is the radius and then I can do things like oh I want to feed this one over here let's give some Oh little extend oh and you can see the other thing is it's highlighted so the one that sort of maybe the healthiest gets a little highlight and there might be a way to you can see it you can actually see its health value over here so I love this I love there this is great variation is taking the core algorithm but adding a lot of adding new interactivity and new visual elements to describe what's going on and I have a feeling that if we go and run this other one from miles I'm going to delete this and I think this one is actually oh and this one is ported to processing which is kind of amazing so let's see how this hopefully this is going to work Cookie Monster asked what's the difference between CNN and RNN stay tuned I'm going to be covering that on this channel as I get to it but short answer is a recurrent neural network is a kind of neural network that's designed to process sequential sequential information convolutional neural network is a CNN can do a lot of different things but one of the things that works really well with is images because the word convolution refers to a convolution image processing filter so these are things that I will you can you get there's a lot of resources on my class website but I'm going to get to that in the videos soon enough okay let's take a look at this whoa first of all this is fullscreen that's kind of Awesome okay I feel like I got out like I this is a proper look at these in advance or at least look at the instructions let's look at the instructions so let's go back to pull requests and add a link to my variation and files changed press D to dogle to toggle debugging information F a and more information in the readme okay so d sa let's try those so if I press do Wow look at this so this has all sorts of metadata with each one who's giving them like a random name how long it's lived for what its current health is that's pretty cool and then what was it a I think is it a or a right I'm not getting a to where s ooh look at this s maybe a was saving it s shows more information about so I love so yet again we have another really nice implementation of annotating what's going on one thing it's nice to see about this running and processing is the sort of speed and power of having this as a fullscreen Java based simulation or probably this is going to run faster you could have a lot more agents on the screen and do a lot more with the sort of graphics and that sort of thing so great these are wonderful to see thank you for all these variations I hope some of you will make some variations of what I'm going to build today the traveling salesperson simulation and share those with me via github Twitter and all that sort of stuff ok ok I'm now going to okay right back back to what I was doing that's always a song started oh this stop this stop it stop this duck and then beating this stop this stop this disco so what I will get is smell like a big repository but I want to start stop by building on top of this traveling sales we're gonna throw uh lazily down okay just stop no I probably have this code somewhere we're gonna have to waste a doc you guys this stop this stop and then this this stop it stop hold on can you do this stop we'll stop is our waiting sighs doc just us and then you this stop is stop this stop this doctor stop where we left left off in our coding training story 90 5422 did it finish its downloading excellent okay here we go okay so I think we're in good shape now this needs to be a little higher this is way too low for me is that a problem for you guys this is too high okay so now what I want to do is where did I download this downloads and even though I downloaded this giant thing all I want are challenges and what was it 30 something 35 30 something anybody remember that okay all right so that's good let's look in here there we go odd TSP ga in progress and let's just let's put that away somewhere else so I think what I want I think probably what I want to do is just start with this one here and but I do want to do something first which is I'm going to do a new algorithm for pool selection let me do this in multiple parts and so I want to open up the atom editor which the editor I've been using these days and I am going to go one directory up and open this in the atom editor and let's go here sketch this is this is where I'm going to start we can delete all this okay and I'm going to run a server so I can look at my stuff in the browser and I'm going to go to traveling salesperson and run a server I'm standing in front of all the stuff that I'm doing which I shouldn't do I try not to do and now I need the browser and so this I believe I'm going to have this be a so where am I here let me go back to YouTube for a second and I want to look for my let's see let's look at this nature of code collection this one I think I want this video to be a 9.10 or 9.10 I guess somewhere in here and it's going to be improved pool selection and so that's what I'm going to do first okay today I'm looking at the chat looking at the camera I'm really not looking at the camera very much today I'm out of practice by the way this is totally off let me turn this back on I have washed this whiteboard unfortunately there's some lying spots that I just can't seem to get but um how's the focus on this can you see that okay I'm gonna go walk over to my monitor to see how it looks could it be improved I think maybe it could be let's see if I can improve that where's that button why do I not know where that button is anymore I it's not this one no I guess I'm gonna have to give up on this and figure this out later this is the button I used to press the zoom in to do the focus all right let me look in the chat and see how people say it is clean ish whiteboard yeah there's some great suggesting that a chat about different ways to deal with sort of like live coding and people following along and I have tried to use code pen and Co pen has some great features for that there's another editor environment called glitch that I've been looking at recently that I've also been interested in looking you would say it's InFocus okay I'm going to trust alko's note there and I'm just going to get started okay so let's see um oh I'm in the wrong thing here we go alright so I am going to oh interesting that's a good suggestion oh and Harvey thank you increase the font size of the code I think this is fine this font size of the code yes eight out of ten just press ok button to zoom in I'm on a Canon mark 3 5d mark 3 okay a button where is the okk I don't see any okay button oh there it is no yeah a way maybe it's over here cuz I know where all the buttons are on the mark oh I figured it out I figured it out okay so let me see here if I can see okay I'm going to focus this I don't know if you guys can actually see the zoomed in thing I think you do how do I focus oh that's that's not focus oh my god what horrible things am i doing focus must be has to walk over here manual focus this must be focused have a different lens on this one is it locked oh this is it there that's where I focus yeah oh good okay I think that's as good as I'm going to get it I'm gonna hit this and how am i doing ooh Oh am I totally walking crooked looks like the camera is all like on its side now this is not my skill well if I which way am i straight I can't tell I think it's just gonna have to do do I look like I'm like the leaning tower of Schiffman or something let me know okay oh yeah strick in the chat says we'll be good to have dance starting point for this exercise okay so if you want to get if you want to take a minute to follow along the starting point that I'm going to use and I will mention this when I actually do the video as well I am doing a video now but when I get into it no rainbow code there goes that camera I'm coming back to turn it on just hold on oh and I'm in the wrong boy I'm just a mess today it's gonna be like an hour before I do anything I really got to get better at getting started faster as much as I like to own my lane stick okay so this is this is where coding challenge 35 TSP coding challenge 35 point 1 TSP if you grab this code that's what I'm going to be getting started with okay all right maybe someone who has a quick sorry everybody it's very good points okay so we are now going to talk about pool selection okay here we go I'm not I believe is not watching today so Alka or anyone else was in the patreon slack channel if you can kind of do a little like time check on me that's kind of useful just to have a sense and you know every once in while just went you know say you're at five minutes you're at ten minutes or 15 minutes that's useful for me if you don't mind if you can okay here we go hello I'm back for another genetic algorithms video although this video actually that you're watching right now is not just a video about something you could do for genetic algorithms this video is ultimately about picking from a list of things randomly but picking some things more often than other things and this is a thing that you do have to do who is my research over here yeah I'm coming I'm coming good this is a thing that you have to do it would you like algorithm because we want to we want to have a population of elements and we want to pick certain members of that population that have scored a higher fitness score to have their genetic information more likely passed down to the next generation but let's let's let's let's erase our minds of the wonder that is genetic algorithms and just start with a very simple scenario I'm going to create a JavaScript object and it's just markers very interesting smells and it's going to have a things in it like mango five blueberry three cherry one and apple one so what I want to be able to do is I want to be able to pick one I want to pick a fruit randomly I want to function that says pick fruit and I call that function I'm going to get out of it return a particular fruit maybe mango maybe blueberry maybe cherry maybe Apple and I am going to get mango five times as often as I'm going to get Apple I'm gonna get mango and I wrote these numbers very specifically to add up to ten because it's very easy for me to just sort of do the math here but I going to get Meg want to get mango 50% of the time blueberry 30% of the time cherry 10% of the time and apple 10% of the time this relates to so many different kinds of scenarios that you might do in computer programming if that makes sense okay so how do we do this now you've been watching some my other genetic algorithms or other videos I've done this a number of different ways one way that I've done this is I've built a separate array and I what I've done with that array is I've put I just said hey let's put mango in it five times I'm just going to write em mangoes in this array five times and then I'm going to put blueberry in this array three times and then I'm going to put a cherry and at once and a plant at once so if I had a bucket full of all these letters and there's five M's in it 3 DS 1 C 1 a and I shuffled around and pick one out randomly I'm going to pick M more 5 times as often as I'm going to pick a so that's one way of doing it now there's a bit of an issue with this way of doing it this works really nicely for this but if I have thousands of elements and thousands of different problem like a vast array of probabilities some of which are very very very very small probabilities I did have to build this array they're just so much stuff in it it's not a really efficient performance good performance solution and that's actually if you look at a lot of my examples that's the solution I'm using doesn't work so great so I'm gonna propose I'm gonna I'm not proposing this I didn't invent this I'm just talking about it I'm going to look at another solution now there is another solution to this problem which is Mac in a way that you could sort of pick random numbers twice so what two random numbers so each one of these 0 1 2 3 so on the one hand I'm just picking a random number 0 1 2 or 3 and I could do that easily by saying it depends you know in JavaScript or in processing actually floor random 4 and this will give me 0 1 2 or 3 so this is one way that I could do this but if I do that I'm just going to get each one of these 25% of the time but if in addition to picking one of these randomly I picked another random number just between 0 and 1 so is the fruit that I'm picking and this is kind of my like a test number if I pick another random number that random number has to be less than the probability in order for me to for this first random thing to qualify so I might have to do this a bunch of times like I might pick three than point seven and then two and point four and then one in point eight and then zero in point six and then three and point O one or you know ah Apple qualifies so you can see mango is going to be able to qualify if I pick zero 50% of the time this second random number is going to be fine but if I pick Apple only ten percent of the time is this second random number going to be fine so that's one way the problem with this way is you know again with a lot of elements and a lot of probabilities I can be stuck doing this over I kept knew that Luke could take many many many many times before it finds a qualifying random number so this video I'm going to program an entirely different algorithm was suggested to use this algorithm in a github issue I will link to that github issue in this video's description which is no description down there I'm trying to get used to where things are over there is something no movie over there is like an ad you know what you don't know I don't know don't click on it maybe click on it I don't know I'm all stressed out okay uh never mind all that there's stuff around me I've got a person in a YouTube video but um there was a point to all this wasn't there ah okay so I will also I didn't bring up that kids habits you to look at it on the computer because I do have a computer over there which I will get to eventually okay so what is this other algorithm well one way you could imagine is let's say I created I don't know what this is a tube a pipe a rectangle some sort of twodimensional space and I said ah 50% of that space is mangoes space and 30% of that space is blueberries space and 10% that space is cherry and 10% of that space is Apple and this down here is 0 and up here is one so what if I just pick a random number between zero and one and it's almost like throwing a dart I could be over here and I'm going to throw a dart let's do it ready 1 2 3 I missed but actually it landed over here blueberry I'm going to be more likely there's more space for me to hit with mango than there is for blueberry than there is for cherry and apple now I know I'm not going to build some whole entire like dart throwing simulation thing my sketch so I need a mechanism to do this to pick the random number and figure out where I am and actually a way that I could the way that this could work is I can actually start up here you can pick a random number then start subtracting values and find out at what point do I sort of exit this space so hopefully I'm going to program that algorithm we'll look at it hopefully it'll work and we'll come back here and see if this makes more sense to us then okay I'm going over there now you want yeah okay I think it just on it'll be fine okay pause for a minute oh wait is there a weird sound issue probably I'm guessing that people having sound issues that they're just related to individual internet connection issues but I'm going to just pause for a second to make sure there's no big issue turn up the volume that's weird okay I can turn up the volume I will turn up the volume seems okay now okay I'm just reading the chat right now to make sure there were no significant issues okay I'm going to turn up the volume one more level and see how that see how that does okay all right good the good news is at you know for those of you who aren't aware I mean most of your watching probably watch before what happens is I edit these into shorter tutorial videos and we can play with the sound levels you can always pump up the sound level as the sort of like postproduction for that slight fuzz when you walk away like you mean you hear some distortion as I walk in and out interesting uh Mike was rubbing against my shirt okay so let's see let me try to know if it'll be better if I actually just look it here I know that's worse I could button up my shirt but I was trying to advertise my tshirts so I could you know I don't know if people would buy them makes me so when I see a purchase of something I don't know why this was a some chemical brain thing okay all right second laptop is quite fuzzy yeah this second laptop is invisible you can't see it I could type on it okay let me find that it's five o'clock already I got to keep moving here issues pool selection let's see there's two here oh this is one that I okay so let me look at both of these yep okay and okay so let me look at this okay alright so um sound is fine hello mr. bubbly it's 11 o'clock now how long is the stream going to go the stream is going to go at least for another hour hopefully not much longer because I am going to a computer poetry reading downstairs at ITP that I mentioned earlier so I don't want to be late for that but I do want to finish this example okay so I'm going to keep going now how long was that so far do you think anybody in the patreon chat have a sense anybody keeping track at the time okay thank you Alka seven minutes that's good okay okay here I am back in this bit this screen with my computer so this is the github issue that I was referencing there's a link to it in the video's description spectrin thank you for this original suggestion and then also sinclair's e81 this is from Affleck oh I took me a while to get to this has a very like fancy crazy look at this unicorn implementation of it that uses like es6 and all sorts of cool interesting JavaScript syntax that ooh I don't fully understand uh but I will understand someday okay so I'm gonna do my own to only close those and let's let's write some code okay so first of all let's quickly I should have done this in advance you know somebody I'll figure out a way to like fastforward time lapse this video this could get edited out maybe I might just appear haven't typed this in fruits equals mango five blueberry three sherry one and apple one okay so one thing that I want to do mmm good doing about there hold on I do I want this is how do I want to set this up so I'm not looking at the chat right I'm looking for the check I'm gonna give the challenge I should not look at the chat it's distracting me I'm looking at the screen on the code is over here and look at this code over here what do I want to do here I want to create an array of normalized scores and then I want to pick one randomly and hold on second here I've lost my train of thought I like I just like go away for a second come back I can't because this is like a lie yes always forget okay this is gonna be fine I just try to I got when I let me let me talk this through in the genetic algorithm examples I have this object and it keeps track of his fitness and all each object is in an array this is actually an object and so really what I want is this I'm thinking this is going to get a B to edit this out of the tutorial because right this is really what I want because I'm going to pick randomly from an array so the data structure is sort of irrelevant here because I could redo it in any way that I want I'm just trying to see if this is going to be so awkward to look at let's keep going here what do I take these out okay so now I just need cherry and I need Apple so this is blueberry cherry Apple okay and that's an array I don't I think the way that this has like Auto formatted it blueberry should be three I think you're just behind so like I just feel like can't I I really want to I'm like it I'm Way too neurotic for my own good but I just I want it to look like this and the problem is as soon as I hit save it's going to reformat it because I have that turned on I'm not can hit save I'm going to turn that off this is going to get edited out if you don't hit safe don't hit safe don't hit save don't eat saved up it save preferences ah beautify where do I where do I maybe it's under editor hold on file edit Adam Preferences where my user preferences key map yeah this is a command T but I have where's the beautify preferences when I hit save it auto it auto so where do I where do I find that anybody use beautify no packages no that's not packed this is just the packages I want the beautify upon save where is that I'm looking for somebody bindings no no that's where the keys is I could turn off beautify just temporarily I'm looking settings packaging search for beautify settings where settings I see preferences you guys are so nice $2 ate me in white insanity config in preferences ooh packages settings I know it's in the back of no settings beautify command T command alt B user that's the packages beautify oh I see I see I see settings thank you I'm just being dummy here settings how about just disable got it got it disabled disabled disabled disabled okay I'm just gonna disable it its if this works please don't go away okay alright I just want it to look like this okay uh yes look watch thank you okay here we are you're just this is my process it's process it's a process whoo I got a little sweaty there this is my new favorite sound effect okay stay hydrated good point some water that's gonna help okay all right here we go ready I'm back okay okay uh there's a little pause there where I decided actually I what I want to do is write the information I want to pick one of the it's easier for me to put it in an array because what I want to do is pick one of these elements from the array and then I want the probability of how I pick it to be something relative to its score so the first thing that I need to do by the way is I need to normalize all of these scores to values between zero and one and so that they all add up to one I want them to be a percentage and so the first thing that I'm going to do is I'm going to just loop through every single fruit and what I need to do is I need to add up all the scores I need to find out what do they all add up to some equals zero and I'm going to say sum plus equal fruits index i dot score then the next thing I'm going to do now here's the thing I might want to retain that score value or I might I be could just overwrite it but ultimately what I want to do I'm going to say fruit index i dot score equals fruits index I and I know I could say divide equals but I'm just going to write this all the way out fruits index a high dot score / some so the idea is I want to normalize all of those scores so all I need to do is add up the total and divide each one by the total that's exactly what I would have done here I get ten five divided by ten is fifty percent three to five minute thirty percent you know and the mass is never going to work out that's perfectly but who cares because the computers doing it not us okay so what I'm going to do here is I am going to go back to the browser and I'm going to refresh you know this canvas is here for no reason I'm just and I'm going to look at fruits and we can see here that now the scores are normalized point five point three and I could if I want to it might make sense to say actually I'm going to add a new property to each one of these object I'm going to say like norm score for like mmm just call it probability for probability fruits index I probability so now I'm hit refresh I'm going to look at that fruits array and I'm going to see here now it retained the score and has the probability of 0.5 and as you can see if I were to go here and add you know one other fruit like melon and give it a score of you know seven point seven then if I hit refresh and look at fruits you can see now I've got five and it's worked it out like it's the math isn't so clean because it doesn't add it to ten but mango now has a twentynine percent chance of being picked and melon has a forty one percent chance of being picked so this is good so now how do I pick one of these randomly according to its probability this now is now it's time for me to write an algorithm that implements this particular rates and code that implements this particular idea in this particular algorithm we throw a dart and find a place in here so the way that I'm going to do that is first I'm going to write a function I'm going to call it a pick one and it's going to receive a list so I'm going to have a generic function that could work with any list of things now it's going to be set up to work in such a way that the list of things is made up of objects that have a property called prob for probability but you know obviously it could make this more generic in other ways as well okay so the first thing that I'm actually going to do is I'm going to say VAR index equals zero so I'm going to sort of assume that the one that I'm going to pick is the first one then I'm going to pick a random number between zero and one point O and I'm going to say as long as R is less is greater than zero then I'm going to say R equals R minus that particular objects probability so let's think about this for a second what I'm saying is that let's say I have something with a probability of 0.9 and I have something with a probability of 0.1 okay that I shouldn't draw this right time out I shouldn't draw it right next to this because I'm gonna do something different now so I'm gonna use but where's I don't have any space I'm gonna come over here this is fine let's just say a simplified arrangement where I this is my like bar here and I have something that has a as a probability of 0.9 and B as a probability of 0.1 the first thing that I did is I picked a random number somewhere between 0 and 1 and then I'm going to subtract 0.9 from it because point 9 is first how often am I going to pick a number between 0 and 1 where I subtract point 9 and now I have a value less than 0 90% of the time right only if I pick a number greater than point9 if i pick point nine five and I subtract point nine I'm going to have a value of point zero five so 90% of the time and when I subtract this I'm going to be less than zero when I'm when I'm out when I'm done out I'm out you're out when I below zero that's the thing I'm left with ten percent of the time I'll pick that number like point nine five and then I go and subtract point one and I'm out so ten percent of the time I'll be left the last place I was I'm starting up here I pick some random number somewhere I subtract this am I already below zero or or should I keep going if I subtract this then I've got less so this idea of just I keep subtracting these values and it doesn't matter what order right even if this was B was first and I'm always subtracting point one first I'm only going to be less than zero if I happen to pick a random number that's less than point one so hopefully this kind of makes it some intuitive sense do I feel like there's a very smart way to diagram this that I'm not doing but I've said it enough times I'm hoping it makes sense let's come back to the code so what do I need to do let's say so if so what I need to do now is say index plus plus so I'm going to just keep doing this I'm going to go through the list until I have now gone below zero now there's a little bit and then I want to say return list index except for the fact that this isn't exactly right this isn't exactly right because I like how this bracket is highlighted down here anyway forget about that this isn't exactly right because I actually want to I want if if I say index plus plus I'm going to go one past the one that was actually the one that I wanted to pick makes it sets so I've got to very quickly just say index minus minus let me talk you through that right in the scenario where I just have 0.9 is the probability the first of index zero is 0.9 so I pick a random number I pick point eight I say R equals point eight minus point nine so that's negative point one then I say index plus plus so I go to one and I go back to Luke I don't loop again because I'm now below zero so I didn't I don't want to pick one I want pick zero so going up is just if I'm continuing but if I'm not continuing I've got a backup one so this should work I hope and so I'm going to hit refresh here and I'm going to say pick one fruits and I got mango and I got mango and I got melon and I got cherry a cherry and I got melon I'm gonna get melon most of the time right and so what I could do right now just to sort of verify that this is working I am going to say I'm going to write a little loop here for VAR j equals zero I don't use I again I equals zero I is less than 100 I plus plus and I'm gonna save our fruit equals pick one fruits and I'm going to say I'm going to do var melon count and if fruit fruit dot what is it named fruit dot name equals melon melon count actually you know what I'm just going to do that's fine something I could do is I could actually just create a count fruit dot count plus plus so I'm going to give all these while I'm over here I'm also going to say fruits index I'm going to give them all account of zero so I'm going to count how many times they've picked and if this is correct but doing it a hundred is a small sample size we should see that they're picked proportionally to their probability so let's take a look at that let's run it and let's look at fruits so fruits the first one is mango which was picked thirty times at a probability of twenty nine that makes sense blueberry was picked ten times you know its probability was seventeen cherry was picked seven his probability was five percent melons pictures forty seven so this is this to me is working obviously with just picking it a hundred times it's not going to map so perfectly you know I would suspect if I made this a hundred thousand then those probabilities are kind of overt I'm going to even out and be the counts going to be much closer to the probabilities okay so hopefully you have enjoyed this particular video which is just about how to pick elements from an array with different probabilities and this might work in ever and it what the nice thing about this particular algorithm is two things one is I didn't have to create a separate array with lots of duplicate versions of all these objects in it and I didn't have to do this thing where I have to pick random numbers multiple times and hope that one qualifies and it could get stuck in an infinite loop this is going to happen every single time this is going to always want a pick and return of value you know sometimes it's going to have to run through this loop a few times sometimes just once but it's going to this is this is a pretty efficient and fast algorithm for doing this okay so what did I miss what questions do you have did you apply this in something I'm going to apply this in something in just a moment so if we look at this video's description there's a link to a video where I program a solution to the traveling salesperson problem solutions a little bit strong I don't know if it's really gonna be a solution and attempt at a solution to the traveling salesperson problem in JavaScript with a genetic algorithm I'm going to pause for a second just to see is there anything nobody I think I think I know what he's telling me I did something horrible in this video so people are some stuff about sound okay okay thanks about to you're trying to edit this so thanks for watching I will see you in another video oh good bye okay what if the first elements probability is zero asks and or talked to Cox in the chat then it will just never ever get picked it can't get picked so probably a zero will never get picked Oh low battery on my soundboard oh no what most they do I'm going to get a charging cable I'm going to to add air I rely on the wireless internet here if this can be plugged in somewhere else I'm just going to to unplug this it's going to be fine hold on a sec Oh ignore this it's trying to connect this iPad to this computer okay here we go let's see all right I'm looking at the chat somebody I'm seeing something about the sound in the chat when I'm near when I'm near the when I'm when I'm near the board if that's a wireless mic there might be some distortions so you guys are noticing that over here whoops over here that there is some sound distortion if I'm standing over here by the whiteboard is that correct yes no sound Distortion maybe maybe not okay all right okay so I now okay so let's see now what I want to do let me take a look at what this is doing okay so I'm going to just remind myself what's going on here so this is the boy I really should have gotten a better green piece of paper 520 mmm hopefully I can okay this is my particular oh let me click here sorry everybody this is my example and so what it's doing is it creates a array of cities copies it if it's okay so something I need to do you know what I need to use okay so I I was wrong this is not a good example to start with I it's better for me to start with I'll show you which one challenges 35 I should start with thirty five point three so I'm going to start with that as the code base that I'm starting with so this is going to be coding challenge thirty five point four maybe it's in multiple parts I don't know so I'm going to delete this because I really need so let's see now oh and I can get my auto format so packages beautify and we enable it close this and let's see what I've got here yeah yeah order so I need a the reason why I'm moving to this one is because what I'm trying to evolve is in order of the cities and the first example didn't take that into consideration and so whoops so if I look here okay here we go so let me get this into a state that'll be a little easier to look at here and here as always I always forget the dis stop it stop it stop this duck and then DZ this stop this stop I'm using this this stop this dot this dot and then use this stock will stop using stop this stop this stop this stop this dot this gun never forget this this stop this stop this this stop this dot just uh forget this this stop this dot this dot and then reading this stop stop and you lose this dystopic stop this done and you do this stop just stop this stop is adding some stuff to this and a little tired so I'm just gonna stop let's do it music playing this time this dock thud never forget to this stuff I'm gonna do this stuff this stock this die I just moved to the dots are center stand it down here but somebody compose that song for me and finished okay so what else can I do here just to make this a little bit bigger and because a lot of this visual stuff is going to probably carry forward so I just want to I think I could probably compress this oh I see okay I don't know I don't know okay so I think this is good okay come on let's get rid of this okay so I am rainbows and kittens and kittens okay does it not go to 100% let's see all right let's fix the hat why doesn't it go to 100% so total permutation is factorial total cities and what I'm doing is I am when I'm where am i counting next order this is count divided by total permutations and then I probably it starts at 0 and it goes up by one so count should really start at one and then it should go to a hundred percent there we go so I was just starting in the wrong place let me move this over so you can see it there we go and I could make that just because while I'm doing this there we go okay great so I think I'm ready now anybody have any thoughts or questions are anything important between goodnight those of you have to go to bed now because it's really late at night okay so I'm going to just give us a try now so actually no idea what I'm about to do but I guess I'm going to figure it out as I go that's how this works so I'm hoping I'm assuming this is probably going to be in two parts so I think what I'm going to do in the first part is do a genetic algorithm without any crossover and then the second part I'll implement crossover and don't forget to talk with the guys from the future now so that's item number one now I suppose even though I'm doing this almost a year later in theory this follows directly from the previous video and it also depends on other videos that already have genetic algorithms in them so all I need to do is mention this playlist and then let me also go to oh and also the and this playlist down here is what I'm looking for okay okay so here we go yes this is a final this is finally a followup to my traveling salesperson coding challenges where I'm going to attempt to create a solution to the traveling salesperson with a genetic algorithm this is finished I'm going to drink some of this water and I'm just going to get started ok do it now it's why okay Oh missed okay here we go here we go hello I am here to do Oh hold on we start this over so let's make this like 700 thing I that's like the worst configuration ever that's better okay hello I am here in another video to attempt to I don't know find a solution create a interesting different hopefully good way of solving the traveling salesperson problem with a genetic algorithm so this is a previous coding challenge you can find a link to the video for it in this video's description where I used a bruteforce algorithm to look at every single possible configuration of a path between a bunch of points in a twodimensional space or cities for the traveling salesperson problem okay okay okay okay just the review the traveling salesperson problem states what Oh give me another chance everybody III know I hate it when I do like start over over and over again but boy I just got a little lightheaded too let's let's do this again hello I am here in a coding challenge and this coding challenge is a follow up on a previous one where I looked at something called the traveling salesperson problem now I would suggest if you didn't watch those videos they're linked in this video's description go watch those find out what the traveling salesperson problem is but just quickly just in case you don't what the traveling salesperson problem is is you create a set of points cities in a two dimensional space it could be three dimensional could be four dimensional but in this case two dimensional and you try to find what is a path that connects every possible City starting from any city ending with any cities that is the shortest path what is the easiest way to visit every single city and get to every single one what's the shortest path through all the cities okay so this particular program which I did in a previous coding challenge is looking at every single possibility even just with one two three four five six seven cities it's taken quite a while to check every possible city it will get there eventually every pup not every bus will City every possible order but if I just go and change this to like ten you know this is based this is really just never ever I mean we'll finish at some point if I change was 1112 there are 10 factorial possibilities with ten cities 11 cities 12 cities 15 cities so is there a way we could do better so the strategy I'm going to look at here is using a genetic algorithm so these are the traveling salesperson previous videos that I would recommend you take a look at and if you haven't seen or looked at any of know what a genetic algorithm is then I would recommend this particular playlist so this video that I'm making is not on this list right now because but it will be in the future when you are watching it it will be there it's not there now but like it is now because you're watching it anyways look into mine so what was it saying yes so this is going to go in this playlist so if you don't know a genetic algorithm is I recommend maybe you check out some of these videos first and then come back but I'm just going to start programming this straightaway so the idea of the genetic algorithm is what I want to have is a population so right now I'm checking but I have this idea of an order which is an order through all the cities so I'm just going to use the code I had from the previous coding challenge and just start from there I'm gonna this is going to work there's a bunch of stuff I'll be able to get rid of but one thing I need is a population so in the population I need a population of many orders so what I'm going to do now is I'm going to create that population so let's let's I'm going to so a couple things I don't need let's get rid of some stuff I don't need this total permutations or count let's just get rid of this stuff I do want to keep track of the best ever I don't think this individual order anymore there's not just one so I have the city's I have the total number cities let's reduce that to five so we can see if it works or easily and I have a population okay so I need to create the cities first so first I create the cities now what I need to do is I need to create the number of the population so let's just start with ten so population index I equals what so how to do this so one way that I could do this is I could create I'm going to create I'm going to create actually a variable called order right here which is just order index I equals I okay what am i doing so this can get edited out because I guess I will erase this now and then I will magically appear here so this will get edited out later now I'm gonna go pretend to walk over there again okay so the idea is that I have an array that keeps track of all of these vectors that's called cities now what I'm going to do is I'm going to create an array called order and what I want is just to have an order of how we're going to go through all those cities and so I can start with just this right so with their five cities zero one two three four now my population the idea of the population is I want to make a whole lot of these and I want them to be random nobody can't have zero right I can only have one number I think so how do I so how do I create a whole bunch of random configurations of this well I could start with this regular order and then I could just shuffle around elements a bunch of times to randomize kind of like shuffling a deck of cards so let's do that so this is just the standard order this array is just 0 1 2 3 4 and now population is going to be order slice slice I'm pretty sure the slice function in JavaScript is a function you can use it you can give it arguments to slice out a part of an array into a new array but what I'm doing here is I just want the whole thing so it essentially makes a copy of that array so if I just did this right if I just said population I equals order dot slice and I said console dot log population let's go to the browser oops and let's run this okay what's not defined there's lots of other stuff that but I can see here that look at this 0 1 2 3 4 0 1 2 3 4 0 1 2 3 4 that's what I've got so what I actually want to do a stop go away what I want to do now is I want to shuffle it so how do I shuffle it well let's should I make a separate function shuffle population index I why not so I'm going to create a function and there's probably a surprise that there's an array function that does shuffling maybe not or we could add it using prototype but anyway I'm just going to write my own function so I'm going to go down here to the very bottom I don't need this is something from the previous example that I don't need anymore I'm looking for the swap function where is the swap here it is so what I'm going to make use of this swap function so my shuffle function is going to receive an array why don't we give it like a number shuffle ten times it's like shuffle the deck ten times so I'm going to say four and so this is numb for VAR i equals zero I is less than numb I plus plus var so let's use n because what I want to do is I want to pick two elements I want to say pick a random index and you don't actually we can use I and then I'll just say this is like index 1 or index a is a random index into the array and index B is another random index into the array and then all I need to do is say swap array index index a index B so the idea is that I shuffle by saying ten times swap ten spots in the array or 100 times or a thousand times so now if I were to come back up to the beginning of this program there's all this extra stuff that I don't know what I'm going to do with here so I'm just going to comment it all out what I'm going to do here and I'm going to comment this out too is what now if I look at this when I look at the population I should see them all shuffled orders okay Oh p5 had problems creating the global function shuffle there's a p5 function called shuffle whoo interesting well first let's see if my shuffle function worked and that's the first one oh it doesn't look like it worked hmm okay so what did I do wrong let's let's just make our own array did I not give it a number oh I forgot to give it a number I have to say shuffle a certain number of times so shuffle a hundred times let's try this again and let's look at it now there we go so you can see these shuffled into random orders so now I have a whole bunch of random orders perfect okay now what do I want to do here first I want to go look up what's this shuffle function shuffle p5.js reference because maybe this does what we want it to do oh yeah array function to shuffle look at that shuffle and array randomizers the order of elements and right implements Visser Yates shuffle algorithm so this is a much fancier oh and look at this we're on this wonderful this is a beautiful Fischer Yates shuffle this is a great tutorial by Mike Bostock the creator of d3 with a much different algorithm for shuffling an array which is maybe it's just different than mine but anyway let's just use it so let's let's get rid of my let's comment out my shuffle function learns and let's just leave the p5 shuffle function and see what happens run this again let's look at what we've got now they're not shuffled why are they not shuffle well I have a feeling that what it does is it makes a new copy of the array so actually what I want to do here is just say shuffle order so I'm using the p5 shuffle function I want to just take that array order shuffle it into a new array and put that in the population perfect and now if we look at this we can see there we go so both are good ways of doing it now I'm at the point where I have an array and I have a population of orders and I've shuffled them next step I want to find the best one in the population okay actually what I want to do is give each one a fitness score okay so I could do some kind of like objectoriented programming here where I create a wrapper object that stores the order and its fitness but for simplicity right now I'm just going to create another array called Fitness and so for every element of the population I'm going to put a fitness score in the corresponding spot in that other array so what I'm going to do is now I'm going to loop through the entire population and I'm going to say what is first thing to say what is that distance the distance is and don't I have a calc from my previous example I have this calc distance function which is right here so this calculate distance function already calculates the distance of an array of points in a given order so that's perfect I don't have to add that code again I already have that from the previous coding challenge that's really nice so I'm going to say D equals calc distance cities in the particular order of the population and then I'm going to say Fitness index I equals that distance now that's not exactly right because I don't have to do some mapping to the fitness because a smaller distance is a higher fitness but let's just leave that for right now and let's also write we have this idea of the bestever record distance so I'm going to start with a record distance as infinity and while I'm doing that I'm going to say if distance is less than record distance record distance equals that distance and bestever equals population index I that particular order okay great so now I'm going to take out this let's put this all this draw stuff back in to sort of see the best ever oh I'm going to leave the shuffle function the swap function calc distance and now let's see what happens let me run this okay order is not defined sketched at J s line 46 okay so this is this I don't need I just want to look at the bestever so oh so I could say this should say bestever dot length sorry and this should say bestever dot length whoops I don't need two of these sorry I'm just going to there's all this extraneous stuff that I don't need and would take all this out so I just want to draw the best one so you can see it's you know it's making however many and drawing the best one now interestingly enough if I were to increase the population size to 100 you know it's probably just out of a hundred possibilities you know what's 5 factorial 5 times 4 is 20 times 3 is 60 times 2 is 120 so there's only actually 120 possibilities in here but if I were to make the number of cities something like 10 and I just have a hundred possibilities you can see it got something better than just a random order but this is clearly not the best order okay let's pause for a second I'm at 13 minutes and I just going to drink some water and kind of figure out where I am this is going to take forever it's 545 it's going to speed up you'll see because we've done a lot of the pieces already okay so next thing that I need to add to this I'm at about 13 minutes is I need to map the distance to actual fitness score and then I need to map those two probabilities and then I need to build a new generation with probabilities so all right okay here we go alright ok so one thing I want to do right now just because I'm good time seeing things starting to get as I already have all this code I'm adding new code I'm going to create a new JavaScript file I'm just going to call it GA for genetic algorithm jf and then I'm going to add a reference to it in my index.html file and what I want to do is I want to take some of the stuff I don't need this next order any more function this should go away that was from the lexical order version calc distance swap these can all stay but I want to I want to have this other JavaScript file where I can start putting functions that are particularly relevant to the genetic algorithm itself there so all I do okay so all I have so far you know I just said this but I got to recap this for myself is I create a whole bunch of random orders I try all of them out I pick the best one so for the genetic algorithm to work what I want to do is after I've done that I want to generate a whole new set of algorithms Beit chart a whole new set of orders based on the orders that did better so one thing that I need to do here is where I am calculating those those distance values and I'm actually going to take all of this here and I'm going to make this in a function I'm going to say calc fitness calculate Fitness so this particular algorithm that goes through and assigns of Fitness what I'm actually going to do is I'm going to map the distance you know that is a value between the Fitness is a distance that's a value between what should I do here what would be so this is kind of an interesting thing to think about you know what I'm going to do I'm not going to do that I'm going to invert it so if I have a number if I want to take if I want to make a number that's a high number and make the higher it is a the higher it is a lower value the lower it is a higher value I can actually just say 1 divided by D now I could worried that D might be 0 and so I could say 1 divided by D plus 1 that way if d is ever 0 like this 0 being the you know absolute best distance ever you know which is unrealistic obviously because you're never unless all the points wrangling are right on top of each other but then everything's going to be 0 but anyway then the fitness would be 1 and everything else would be lower so I'm going to add that in there just as kind of a nice little extra thing and that's the fitness value okay then what I want to do is I actually want to write a function called normalize fitness because for the way that I'm going to pick them what I want to do is I'm going to mention another video that I made recently as I want all those fitness values not to be just some arbitrary value that's higher or lower but I want them to map to a probability between 0% and 100% and I want all of them to add up to 100% so the way that I do that is I first need to calculate a sum then I need to loop through the entire population again and I need to say sum plus equals fitness index I so I want to get the total fitness and then all I have to do again and by only I can say fitness dot length because that's really the array that I'm working with although Fitness and population are gonna have the same length I'm going to then go through it again and say Fitness index I equals Fitness index I divided by sum so this is the process of normalizing all those Fitness values ok so if I go back to the sketch this is something I'm going to do every frame so now I really have my genetic algorithm the first thing I need to do is calculate fitness then I need to normalize fitness ok so once we've done that a calculated fitness I've normalized fitness now it's time to make the next generation and you know I suppose I could draw the best before I make the next generation but I'm not worried about order too much here right now right now okay calculate fitness normalized fitness make the next generation so how do I make the next generation okay let's go back to here and I'm going to write that function next generation so I'm going to make another array I'm going to call it new population and what I want to do is I want to create something like this I want to say for every I want to say for every member of the existing population make a new member of the new population so I want if I have a hundred to start I wanted then the next generation has 100 the next generation has 100 so just as a little experiment here just to make sure things are working I'm going to say new population index I equals population population index i dot slice so what if I just this is like not a genetic algorithm at all this is me just making an exact copy of the previous generation in the new population and then at the end I can just say hey guess what population equals new population so make a new population that's a copy of the previous population and then have that being the new population so I should be able to do this over and over again so I just want to see if this doesn't give me any errors it doesn't give me any errors but this is now this is now running in a loop the thing is I'm never going to have an improvement because my new population is just the same as the previous population so now here's what I want to do here we want to have a genetic algorithm so what I actually want to do is I want to say the new population is pick from the old population and I'm going to say and I'm actually going to say I'm just going to call this var order equal because I'm going to need to add something called mutation pick one from the new population how do I pick one member of the old population according to its fitness value the things with a higher fitness I want to pick more often the things with a lower fitness I want to pick less often I want to just copy the ones that were good and not copy the ones that weren't so good okay so how do I do that so I've already knew Matt I've already calculated Fitness and normalized it oh I know how so guess what I just made another video about this a particular algorithm for doing that so I'm going to link to that video in this video I'm going to link to that video in this video's description and right now I'm just going to go and grab the code from that so that code is here in this particular sketch that I programmed earlier today called pool selection and I'm going to go and grab this function called pick one okay so I'm going to grab this function and I'm going to bring it over to my G ajs so what this function does it's a particular algorithm that I go through where and I'm going to just describe it to you briefly oops okay I'm going to describe it to you briefly if you imagine this as the population and this has a fitness of 70% this has a fitness problem map to probability of 20% and this has a fitness makkya probability of 10% well I could draw that almost like as a twodimensional space with 70% being a 20% being B and you know I didn't draw that very well to scale ten percent being C so how can I pick a random number between zero and one and whenever I pick from zero to 0.7 I'm going to kind of land within here whenever I pick from zero to 0.9 I'm going to land within here and when I replay 4.9 to 0.1 I'm going to land in here so you can see that 70% of the time I'm going to land in here and that's what this algorithm is doing and I go through it more detail in the other video but I do have to make some adjustments here because I'm picking one from this population and okay and I think I need to erase here so lists and probabilities so I need to pick one from the population according to the fitness values so I need to just change this R equals R minus probability index and then return the index value that defines with that list so let's see if this what this does okay and I think I also want to I just want to make a copy of them it might be because I'm going to start messing with them so it's good for me to create a copy of it so get that order and copy it so return a slice okay I'm not seeing any errors but again no improvement why is there no improvement well even if I pick better ones more often if they never change whatever the best one is only the best one that it will ever be so this is where I'm going to add a function and I'm going to call it mutate so in next generation I'm now also going to say mutate order so now I need to write a sorry yeah mutate oh and also I didn't I also have to actually put it in the population in the new population which I forgot to do so let's make sure things are still working when I do that whoops new population equals order and let's refresh okay ah uncaught error F is not defined G is line 45 hope there's like an extra straight character there okay okay great so it's working same problem with now so I need to add mutation what I want to do is add some subtle changes to the ones that I want to take the ones that did really well and just change them a little bit how am I going to do that so I'm going to write a function called mutate and it's going to take an order and what I'm going to do is though now we have to think an a mutation rate so let's think about this mutation so how do i mutate an order well one way to do it would actually just to be to take two or two random elements and swap them so this order was pretty good 0 1 2 3 4 but maybe 0 4 2 3 1 would be even better so let's try that so what I'm going to do is I'm going to say and I did this already in my shuffle program I'll do it again index a equals floor random border dot length I'm going to pick index a and index B and then I'm going to say swap order and remember swap is a function that I've already written index a index B so in my mutate function I'm just always going to swap just one let's see how that does okay so I'm not seeing any improvement one thing I realized I probably forgot to do so let's take a look at the sketch is I'm not actually this thing where I check where do I check I need to actually check to see if I've got a new best one where is that did I lose that by accident where I went to find the best one somehow I lost that oh no it's right here oh no it's not okay so what I need to do is we have this record distance so I don't know where that went I have that coated already but what I want to do is I want to look at the distance did I put that in G ajs somewhere oh it's happening and calculate fitness actually so sorry hold on hold on a sec hold on a sec I don't like the way that I wrote this I've confused myself so even though I'm doing it in calculate Fitness I feel like this is a problem and so I am going to say a separate function called find best it really makes sense to do it there because I don't this is an expensive operation to calculate the distance so I'm going to leave it never mind so in calculate distance it should be finding the best ever and I should get and this should be drawing the best ever so I would think that with mutation let's just make sure it I don't let's make sure this is running yep so this is doing this over and over again and let's uh let's look at let's let's try to debug this don't know what I've done wrong here let's look at the record distance so it's finding the same record distance over and over and over again you would think that through some swapping so let's take a look it do I even have like a population the new population yeah so population has stuff in it let's make sure that what's in it makes sense hold on let's just pause for second like the guy need an edit point here because I this is like so awful the way I need to like move this over so I have more room to look at here this stuff and I need to like okay I need to debug this in a different way let me just see oh good yes that's correct K week Mon in the chat about the dividing by two plus 20 minutes okay uh yeah yeah yeah yeah very good Alka thank you for that okay uh guess what okay come on back where's my uh so it wasn't working because I had put in the mutate function but i i i didn't uncomment it because I wrote the function and uncomment it so let's add that and now let's see and I got some console.log in here that I probably want to get rid of or maybe I don't let's try refreshing it and see what happens uh yes so it's getting better over time this is working look at that how wonderful okay yay all right so now what have I done have I really solved the traveling salesperson problem I don't think so so first of all is this the optimal order looks pretty good it's kind of hard to say like wouldn't it be better maybe to go like from here and then here and then there wouldn't that be less but I know it's hard for me to eyeball it but only way for us to check for sure would be also have the brute force solution going and have a check every possibility which I would love for somebody to contribute to this to add that functionality back in but let's just go to total cities equals five and we can see that vary and let's make the population size let's make that a variable and let's make that let's just make that ten right now and so we're I'm going to put that here and so you can see it kind of like finding it over a short period of time let's make this six so we can see that this is working for small numbers and even with ten like oh that's not whoa that's the population size sorry and what I have it at a total even with now with ten cities you're going to see like it's doing really really terribly but I only gave it a population of ten so let's give it a population of 300 and you can see me with 10 I don't know maybe that's is that a good or No you could clearly see that you could get a much shorter order by going up those three and then across you can't my handles oh there it figured it out so it's look at this ah maybe there's some optimization here that could be done I don't know so you can see that this is working and I didn't even do cross over all I'm doing is mutating swapping some points in ones that did well I didn't even make the dist the fitness function and exponential function so there's a lot of improvements we could make on this what I'm going to do in the next video and then lambda mutation is a little bit awkward what I'm going to do in the next video is see I can improve this so this is part one it kind of got something going I'm going to right oh and I'm going to try should really what I would like to do is also draw just the current populations best one down here and should add that in so what I'm going to do in the next video is I'm going to try to add some things to improve this and namely do crossover between two orders which will not be so obvious how to do that I don't think I'll have to think about that in between when I hit stop recording and recording okay see you in the next video okay alright how am i doing 604 that was probably 28 minutes but you know maybe it'll get edited maybe matchy I can do some editing match to get that magic to get that down to 20 I have to tie my shoe 28 minutes is not so bad though definitely need to go soon how long is this going to last I'm hoping they'll be done in about a half an hour I just have to add crossover I have to add crossover and I should make some improvements as well what improvements that I say I want to draw just the best from one population at the bottom and then and like maybe put the number of generations or something maybe the average fitness I don't know the average like or the you know add some annotation to it and then add crossover and think a bit more thoughtfully about mutation okay this is the point of the livestream start to get the nervous tic it G thing okay I'm just going to jump right into this because I want to keep going here hi okay I'm back so this is where I left off in the previous video I have a genetic algorithm attempting to find the shortest path between all of the cities which are these just two dimensional points innocent and the traveling set with the traveling salesperson problem so what I'm doing in this version that I made in the previous video is I am just looking at the borders the paths that had the shortest distance and I am cloning those for a new generation and then kind of like shuffling some about randomly but I am not actually applying crossover so then what one thing I want to do in this video is apply crossover so in other words I have a set of points like 1 2 3 4 let me write those again 1 2 3 4 and 1 order might be something like this and another order might be you know something like this so what I'm doing right now is we can see I don't know this it's hard to see these are valid so let's say this has a distance of some number that maps to a fitness probability score of 0.6 and this has a distance of some number that maps to a probability score of 0.4 what I'm going to do for the next generation is I'm going to make 2 if I only have a population of 2 I'm going to make two new orders can you guys hear that so loud noises in the hallway ok I'm going to make two new orders and I want to pick I'm going to make these two new orders out of the ones that have done the best so I'm going to throw a dart at the wall and oh I hope I don't ruin this mark this beautiful marker I have a 40% chance this isn't really where I really have a 50% chance of hitting either I have a 60% chance of picking this one a 40% chance of picking this one if I pick this one I'm going to clone it to the next generation but maybe swap two points so instead you know the order goes from here to here I'm going to go from here to here to here that or something and then I might pick this one so I'm just doing I'm creating new elements of the next generation from the previous generation by making a copy what I want to actually do is have a mechanism for how I combine two of them into a new order and that's what I'm going to look at in this particular video now before I do that let me see if I can just add some simple little improvements to this so for example one thing I want to do is I'm only drawing the bestever and so what might be useful for me to also draw just to sort of see how this is working is what I could do is translate to the bottom of the window and I'm going to do this I could also draw just the current best so where am I evaluating the best one I'm doing that here so I could have another variable which is just sorry where I have a variable called bestever I'm going to have like a current best and what I'll do is here I will also say current record equals infinity and if I will now say also I will also check if d is less than current record then current record is this and current best or best current I can't remember what I called it what did I call it current best current best is this so I don't know if this is that useful but I thought I would add it so I can also see now this is me drawing this is me drawing the bestever and now I also want to draw the current best so let's run this and we can see so we can see that it's you know the population is doing a lot more stuff internally but every time eventually as it's trying new eyes sometimes gets a better one so this is a little least we have something more to watch here to sort of see like that it's continuing to animate continuing to try and guess future options okay so now Ken how else could we improve this let me look and first of all one thing that I did kind of weirdly which doesn't make too much which I feel like needs the mutate function needs some improvements so what you taped does is every time it clone something it just swaps two elements but I do have this idea of a mutation rate so I don't know I sort of feel like what might make sense is for me to say like well let me have a loop that goes through the total number of cities and then just says like if a random number one is less than the mutation rate then perform this swap so this is just a way for me to say like if there's ten cities then maybe I have a chance of like doing ten swaps but maybe I only have a 10% chance of doing a swap or something at any for any given city for any given spot I don't know this I'm not sure if this really makes a lot of sense but I am going to I'm going to try it this way and then where I say mutate I could give it like a mutation rate so if I give it a mutation rate of zero we would see that it's never ever ever going to get any improvements if I give it a mutation rate of one we're going to see it's just like really really really making a lot a lot a lot of swaps all the time I don't know if that's so optimal so maybe I would try something like a mutation rate of 0.1 and maybe that's like a little bit better so I don't know what's going to be an optimal mutation rate but at least I have some structure for saying do more random shuffles or less random scruffles and that can probably be improved okay so now what we need to do is add crossover so first I got to think about how we're going to do a crossover algorithm but right now what I want to do before I do that is just buy the place in the code where I'm going to do crossover okay so we're this is where I make this is where I I create a new order from I pick one from the population based on its fitness and then you Tate it and add it so really what I want to do is I want to change this now to be order a and order B I want to pick to order a and pip order two and then I want to save our order equals cross over order a and order B so what I want to do is I want to pick to cross them over then you Tate and then get a do now whether this is actually going to improve the performance of this it's unclear to me but certainly this would be something that's typically found in a genetic algorithm and worth giving a try but here's the really tricky thing so I'm going to come over to the white board and now we have to discuss how we're going to do crossover so remember let's say this these were the orders 0 1 2 3 these are the index values 0 1 2 3 so one order is 0 3 1 2 that's one order another order is 0 2 3 1 okay so typically if you've watched any of my other videos about genetic algorithms the way that you could perform crossover with two arrays of genetic information is to take half of one and half of another and put them together in which case my new order would be 0 3 3 1 but there's a major problem here this is invalid in other genetic algorithm examples that I've done there's no such thing as an invalid DNA array because it's just a bunch of numbers but this is a special kind of DNA array that must have every single instance of each index or once and only once so this kind of splitting it halfandhalf won't work you know the flipping a coin algorithm won't work I can't say you know pick a or b 0 pick a or B okay I pick B to pick a or B okay pick a 1 okay pick a or B be one once again even if I'm flipping a coin I now have ones in two places and I don't have three so one I'm sure there are lots of different approaches to this and I would love to hear from you guys anybody hold on let me I just lost my train of thought for a second let me go back and edit that I would love to hear from all of you as if I'm actually editing let me just start over per second I'm sure there are lots of strategies for doing this kind of crossover and I would love to hear from any of you of your own ideas of what might be a good technique but here's one that I'm going to try one way that I could do this oh I shouldn't have erased that stop I can put two hours in is where I start to lose it okay I erased okay not to please save me okay well one order again is zero three one two another order is zero two three one so what if I take some random part of one of these so let's say I just randomly decide I'm just going to take 3 comma 1 and I'm going to start my next order 3 comma 1 I have two empty spaces I need to fill well what if I then said ok I'm going to take oh this was a bad example because I'm going to let's let me just pretend this order is a different one because I want to make an example that's a little bit that actually has something you can follow so so this is 0 1 2 3 and I'm going to go 1 3 0 2 1 3 0 2 so what I'm going to do is I need to fill in these last two spots and I'm going to take them from here if they order that they're here as long as they aren't a 301 this is again I don't like this order can I just please have it be it's fine it's fine you guys are going to get the idea uh what should I put a 1 here no it already exists three should I put a threeyear no it already exists zero should I put a zero here it doesn't already exist should I put a two here yes doesn't exist so what I wanted this to be is in order that's something like 1 0 you know 3 2 I would still get the same thing right because I would say one can't go there because it's already there zero can three can't go in the next spot but to Kent so I'm going to just pick a random part of the order and then filled the rest from the other I think this algorithm has a name for it I don't know what it is maybe somebody watching can tell me okay so let's actually implement that now okay let me let's look at that so what did I do I need to write this crossover function okay so coming down here I need a new function I'm going to put it above mutate somebody's playing some music in the hallway crossover order a order B so the first thing I want to do is I want to take a random slice of order a so I'm going to say start equals floor random 0 comma order a just random order a dot length and then I'm going to say end equals some value between start and the end of random a I could always just take the first half or something but this is just I'm getting a random spot anywhere in here so maybe I pick this spot and then I want a random spot anywhere between here and here I probably should say plus 1 right plus 1 did I go over to that others did I go to the whiteboard just then can somebody tell me I have to wait 20 seconds it's fine I could have used a drink of water I did okay thank you guys you got it goes about 20 seconds behind me in real time okay so I'm just going to come back okay so now I should probably say start plus one I think because the V when I'm about to use slice so I'm going to say new order equals order a slice start comma end and I'm pretty sure that was slice if I give it three as the start and three is the end I won't get anything let's let's actually just look in the console to sort of see like if I have an array that's 0 5 0 1 2 3 4 a slice 0 comma 3 what do I get I get 0 1 2 I get I don't get 3 I get 0 1 2 and if I set a slice 3 comma 3 I get an empty array so I always want at least get and if I would say a dot slice 0 comma 5 that would be the whole thing so I think that makes sense ok now what I need to do is figure out how many things do I have left so I have a total number of cities new order length so this is how many I need to add right because if the total number of things should be 10 and I get this slice of six then I have four more that I need to add so I know I have a loop I equals 0 I is less than left actually but here's what I want to do actually though is what I want to do is I want to say var I want to I want to actually loop through I want to loop through the order B's everything in order B right because a city equals order B index I I want to know if new order concludes I think this is a JavaScript function that will tell me if it already exists in the array let's see so this is my array a a includes two is true a includes five is false so this is going to work for me I can say if new order includes I'm sure there's some fancy super JavaScript es6 array up friction way to do this and I look forward to hearing about that in the comments if new order includes city if new order does not include city then new order push city so I guess I could just I guess I don't need this left because by definition this should just work if I've done everything correct if I if I've done everything correctly then this should have the right number of stuff in it I think what I'm going to need to do is is definitely just try this function how so and then at the end I want to say return new order so let's try this so the program still running as it ran before I haven't actually introduced crossover or did I I don't think I actually put crossover in yeah oh I did so it's actually doing it but let's let's see if if this actually works a equals an array like 0 1 2 3 4 and B equals I'm just say 4 3 2 1 0 so what I want to say is cross over a comma B let's just see what I get 0 4 3 2 1 does that make sense I mean it worked it's a new random order but how is that a crossover it must have only picked 0 yeah only pick 0 from a and then it got 4 3 2 1 okay that makes sense then it got it got 1 2 3 and then it got 4 and then 0 so this is working this algorithm appears to be working so now is this actually improving anything unclear let's uh let's I think now we could really reduce that mutation rate because crossover is going to give us a lot more variation and I would love to just increase the population size to the point as blar jazz I can increase it without it running too slow so let's try 500 so yeah this looks um this looks pretty good like I'm kind of seeing it slowly over time improved you know how many cities is this ten cities when I put twenty cities let's give it some more space let's give this canvas like a bit more room to work with and see what we get now yeah let's take a pause here I'm going to come back in a minute after I've left this run for a while so this is going to be an edit point what time I have what time am I at oh I would use es6 is includes so es6 it includes is only es6 next best path along with the current yeah okay so I think I should make the fitness function exponential and I'm looking at other I should teach how to dance not how to code I think that makes sense so I think that I'm going to let this run for a little bit longer while I'm thinking here what else do I add to this so a set is something that I could use it's a unique array okay so I'll mention that is a set bs6 or is a set available in in es5 sorry I hope that wasn't really loud I know it should view did my microphone let's see here set JavaScript so does this tell me if it's like es6 or es5 said is es6 okay okay and did that blow out everybody's ears I don't know what ASMR stands for but I shouldn't ask thank you everybody for your nice comments I I just wanted to get a little further along to see if I could at least get it something with that doesn't like crossover anything but this to me feels like there's maybe too much craziness going on but yes yes Rubin asked a good question so let me make a list of things that I want to mention so es6 set this pencil is no good es6 set I want to mention distance squared optimization there was something else Oh includes this baby es6 and then it's got to be better ways to visualize this I don't know what those would be I really wanted to improve just a little bit past where it is but it might not seem slower than the poetry example but it is tsp I guess yeah intra ask well at least it is improving but how much better is it than just choosing random paths I'm pretty sure that this is quite a bit better choosing then choosing random paths but it's not it's clearly not good enough I would think that choosing random paths if you went back to like my first example with something like 15 I know it's how many cities I have right now 20 cities 20 cities is a lot that's 2.4 with 18 zeros so if you're just picking randomly there's really a lot of possibilities I would I would I would guess that you're not going to get the result that I have with just random now the only way for me to prove that would be to just also put a random one side by side but but yet mutate should swap neighbors not random indexes oh that's a really good idea you tape swap neighbors maybe I'll try adding that okay thank you I know I was that sacrifice productions thank you for that suggestion calculated 100 yen also calculated once and then cashed absolutely yeah okay so caching distance yeah I'm less interested in adding optimizations right now to run faster I'd love for people to contribute those and more interested in making it work a little bit better which I like the idea of swapping neighbors okay so I'm going to come back into the video now what's a good okay I'm having a little rest there with my lullaby that's and I back so I let this run for a while you can see that it's doing pretty well it seems to this is the best one it's found and sort of sticking with that for quite a while so I'm going to see maybe we can do one or two more small improvements and I'll give you guys some ideas of things you might do with the code to improve it and then I'm hoping you're going to submit some user submitted improvements okay so a couple things one is that includes function that I'm using is actually part of es6 which is a newer version of the JavaScript syntax that I'm actually using in most of my videos and es6 also has something called a set which I guess is a which could be a data structure that would be useful here other than just a plain old array the other thing that I want that I should mention is that the distance function that I'm using to actually calculate the distance which is right here this is a pretty inefficient or slow algorithm because it uses the square root so one thing that I could do is add my create my own distance function that doesn't use the square root but just uses the squares of the differences because I all I care about is relative distance so I or the other thing is there's a fixed number of cities I'm only ever looking at distances between them so I could create a lookup table that just pre computes all those distances so I'm just summing up what it is but anyway that aside those are some things you might think about adding there was a great suggestion in the chat from Cole noxee the second what that name is but that may be what I should try in mutation is instead of swapping to randomly actually swapping to neighbors so where do i do mutate so what if I pick index a and index B is actually index A plus 1 so it's the next one and I could say if index B is greater than total cities dot length then I could say or greater than or equal to right if I've gone off the edge then I could say actually index B is index a minus there might be a nicer way to do this but so what if I only swap two that are next to each other would this be a better algorithm okay so let's run this we're going to lose everything we had from before but I'm going to run this okay so I made some sort of error here can't read property X of undefined calc distance so that this there's something wrong with my own octo city's not length total cities is just the total number of cities let's fix that okay so let's hope I'm gonna I'm gonna take a little nap again and I'll be back in a while now let this run for a little while what did you guys think of that swapping neighbors did I do that correctly can I program a dancing unicorn with box TV ooh I like that idea yeah there's all sorts of higherlevel topdown ways I can analyze like a two lines are crossing that's obviously a bad thing modulus I was going to do modulus but couldn't I not want to swap the end in the beginning well I guess that wouldn't matter that would totally be fine output top fitness to the window yeah that would be a good okay so I think that I want to be at 630 I have to go this has been a two and a half hour livestream so I'm going to just be done with this but I'm gonna so by the way I'm letting to let that continue running but I realized this would this would be a nicer way of doing this would just be to use modulus operation so that I could just because I could swap the last one with the first one and so this would actually I think be just sort of a cleaner way to write this little bit of code I don't want to say rerun it because this has been running for a while I don't know did that improve it did it not 20 cities is a lot let's feel better about ourselves and the world of the traveling salesperson problem let's just get 12 cities which twelve cities there's a lot of possibilities 12 factorial is how many that's a nine million 479 million possibilities which would take quite a while to iterate through all of the possibilities but I have a feeling that if I run it with 12 we're gonna get something pretty good pretty soon like really fast that was like a pretty good I don't know if this is optimal found something even better oh I'm pretty sure oh you could definitely make it better by going from here to there then to there so anyway hopefully it's going to get even one job talking but we've done something that works pretty well so here's my request to you the viewer please once I post this code go to the link to the code there'll be a readme file there if you make an improvement add a link to your improvement in that reading file with a pull request if you don't know how to do that I do have a video about how to make a pull request but just write a github issue comment or tweet at me at Schiffman I would love to see a couple things number one I would love to see what kind of efficient what kind of things can we add to this to make it more optimal maybe there's a better way to do mutation a better way to do swap a better way to do crossover so what can we add to this to make this optimal the other thing that I really have to think is what is a better way to visually tell the story I don't have this isn't really so great I'm kind of seeing like a bunch of random stuff and sort of the current best but could I see the full population of everything could I watch a graph of how it's improving can I see some annotation is there some interactivity to sort of speed it up and slow it down so I would love to see variations and ideas for how you can tell the story of this problem and how the algorithm is working so thanks for watching these videos I finally did it I kind of I have completed I think the set of videos about the traveling salesperson problem and I look forward to hearing your comments and questions in the comments on youtube I think oh I just somebody told me I should remind people to LIKE and subscribe so please like and subscribe there could be like an end screen thing popping up around me maybe we'll add that in like and subscribe maybe you watch these next videos and I'll see you in a future video I hope okay talk to you soon or you know whatever this is that we're doing here on the Internet did it fix that no oh then wait like maybe it got better no no it should go up here and then there that would just be so much shorter okay I'm gonna tickle and watch it I'll tell you what happens another time goodbye okay alright that was lucky how I finished that right before the camera shut off okay what I'm going to do now if you guys will tolerate this I could do this not in a live stream but because I'm trying to create videos for this course I'm going to create an intro video and an outro video so I can't remember so I'm going to create a video too just to say like hey welcome to session two of intelligence and learning this is a long session about genetic algorithms really yeah I guess I will and then I'll do one about like a homework assignment so okay all right I don't know if this I don't know if this makes sense to do but I'm just going to do it and then we can never edit this into a standalone video on YouTube but I'm going to do it hello pic hello welcome to session two of nature of code intelligence and learning so I am making this video in 2017 these are videos that go along with a course that I'm teaching at New York University ITP on this video it's going to be very very short and you're here in session two so the topic for Session two is evolutionary algorithms so this this there will be a link to this particular readme file on github which has kind of a little outline of a lot of the topics some additional reading that you could do about the topic links to various examples but mostly if you're in this playlist if you're seeing this video this is part of Session two intelligence learning playlist there's going to be a lot of videos about genetic algorithms that you can watch this is a long session they'll be it starts with about four or five videos that just explain the idea then I go through a kind of a scenario known as the Shakespeare Monkey scenario if that makes any sense to use a genetic algorithm to evolve a monkey that type Shakespeare it's not really what happens but something like that and then I try to pick a variety of other approaches looking at something called interactive selection where the user plays a role in the evolutionary algorithm by making Fitness selections of what the user likes or doesn't like or what that sort of thing and then also I'm going to look at an ecosystem kind of simulation where you just have a continuous system of agents moving around the screen that try to try to eat food or escape from a predator and that type of thing so there's a lot of videos watch them all don't watch them all but I would if you get to the end there will be a video that gives you kind of an exercise or assignment prompt so if you get to the end and watch that video and you make something you create something please share it with me at Schiffman on twitter or in the comments here there anywhere and I look forward to seeing what you make normally in this introductory video I might sort of introduce the topic genetic algorithms but this video is really really short because the very first video in this particular playlist which should come up next to you actually does that so genetic algorithm introduction so you can just walk right into that video I don't know if you walk into a video but you can go right to that next video where I'll actually talk about what a genetic algorithm is and how it can be applied ok thanks for watching this short video that I don't know if it ever will actually exist but I'm making it so maybe if you're watching it then it does exist ok see you soon ok shortest video ever and then I'm going to make one mmm let's go to assignment oh I never made one for an assignment for session 1 mmm did I I don't think I did so let's go to homework 1 and I'm going to bring this up here okay let's get a try we're going to try this okay I need some I need some boost of energy this I really like you know I have okay here we go homework about it like 77 degrees Fahrenheit in this room I need to send an email to son about the temperature control near this by the way was a closet before I said if some cameras in here this the filing cabinet everywhere I think it's a big room it's very loud music okay you know I'm I would like to have a better selection of classical music but these are some public domain free recording so that god that's a the overture for the marriage of figaro oh it's starting over that's not the popup okay okay hello welcome to a video that comes at the end of session one of intelligence and learning this is a video that goes along with the course that I'm teaching at New York University ITP to School of the Arts okay so I'm making this video just if you happen to have watched this entire playlist you're following this course on my youtube channel now's the time where you could try to make a creative exercise based on the variety of different search algorithms with graph systems that I've showed you so this page here I will link to it has some of these exercise ideas I'll maybe talk you through some of them so one of the things you could really do is you could take any of the examples that I made mais generation with depthfirst search binary tree and just visualize them in a different way in an artistic way in 3d your really interesting to see could you do a star path finding in 3d you could actually even have a terrain that's 3d and you're trying to like you don't want to go up and you want to go down this was a viewer actually submitted a project like that which I will try to link to in the description of this video and so so I'll talk you through some of these possibilities so you could make your own visual design you know just as a technical exercise one thing you might try to do is have there's music in the hallway again take that binary tree example which just puts ten random things in the binary tree but allow the user to enter numbers and have those appear in the tree so it builds up slowly maybe it animates in some interesting way add some physics to it the six degrees of Kevin Bacon example I used a sort of dummy small dataset you could try to use build that exact same example but with a much larger dataset maybe it's not movies and actors the animal guessing game is so is oh that's what I didn't make a video for I should make a video about that so if you look at this animal guessing game example it's just a little node program that tries to guess an animal that you're thinking of and it uses a tree like structure to do that and so making an interactive version of that you know something that I think if you look at the astar example and you know all it does is show you that path that it solves for but what if you actually used some of my autonomous agent examples that have steering agents moving through a space actually look like they're little mice trying to find the finding it oh this was this idea of you know how do you think about the space that you're pathfinding in you know it's really just my examples are just a pure maze I should pull one of them up pause I'm gonna pull one of them up okay there's like a talk or some sort of thing a lot of people left yes yes no I I fifteen minutes it starts at seven I lied I said it was 630 because I kind of wanted to have time it starts at seven so I definitely have to go I do have it please bow but this doesn't have them does it have them I need quick access to all my examples can you guys hear that music I'm going to go into the hallway so you can really hear it okay I asked my train of thought I need to say I need to have online versions of all these examples running so I could just get to them this is very distracting probably not so loud for you it's very loud for me I downloaded that whole rainbow code repository perfect oh no is that going to copyright me is it was it loud enough that I'm going to get a like oh that's gonna that I'm going to get a copyright notice now this video is going to be monetized not the edited ones okay that's a very interesting point that challenges I'm looking for like a star or the maize pattern yeah okay and where was the DFC the maize generation okay DFS I mean okay this is the a star one this is the maize generation one okay okay now I even forgot where I was or what I was saying so with any of these example okay so I pulled up the a star example and also this Mays example now first of all it could be interesting to think about combining these two that's an exercise I actually have a solution to that if you look at the links I created a solution to that but here you know you could really think about the maze in a different ways that wall is it a river so I think just re imagining other ways to visualize these spaces and thinking about this as a terrain there's a lot of possibilities I think that you could that you could explore just using this the algorithmic verb 8 verbatim but thinking about the actual space that the algorithm is playing out in a completely different way and putting your own design spin on it what else do we have here so you know another thing you could do is I never made a video about like say for example Dijkstra's algorithm and you could investigate that and create something so if you do any of this if you do any of these assignments and you're watching this video share links to what you make in this videos in the comments or tweet them at me at Schiffman and also it's a variation on one of my examples that's on the github repository you can add it a link to it in the readme file in that directory I gotta have a better system for this so I'm working that out thanks for participating in this session one of intelligence and learning and maybe you'll move on and watch Session two with genetic algorithms ok I don't know I don't know if these are if these are worth keeping but I'm I'm just figuring this out let's go to homework 2 okay let me look at this hi did you actually watch every single video in this nature of code session to intelligence and learning thing if you did I'm kind of amazed and you're here at this if you're following along with the playlist you're here at this video where you could now synthesize some of these concepts and make your own creative project and do an assignment so I will link to this page this is a page where I have some particular exercise ideas I think one thing that you could do so here's something that you might consider doing you could take the Shakespeare monkey example as a model I should really have these up see what I what these should really be are links to the example running in the browser so that I could just click on them so I could just click on them and show them do I have easy access to the Shakespeare monkey 1 I know I've got to get another repository hold on I have an idea maybe there is an interactive version here maybe that I can't remember if I made interactive versions for this page here we go no I just just screenshots I'm working on it the second edition of this shoot I'm just oh oh no I know nope I don't mmm okay I only have 10 minutes am i in the desktop I'm sorry my brain is like totally fried maybe I'll come back and do this a homework video for I'm on the desktop no I'm in documents no wonder okay I'm just going to down I'm sure I have this downloaded somewhere else but I'll just lazily download this again and this isn't downloads so and another web server okay here we go so I have this up and running now I have the homework assignment here what else might I want smart rockets let's get that one going let's try to do this in a way that makes sense okay it's that example the evolving phases and then I want to also look at have this I need one more server did I put this on the desktop I put it in downloads don't know if it's here and you guys are if anybody's actually still here on this livestream I'm going to be amazed you should win some sort of prize okay okay these are some good things to start with okay I'm just going to start this video over two minutes and 22 seconds still here okay here we go I would love to do by the way like a tshirt giveaway you know obviously I have the patrons and I send patron rewards but anybody has a good idea of how I could do some sort of fun but totally fair and equitable tshirt or something giveaway I'm open to that and I'm anyway okay here we go I'm just gonna start this refer alka don't worry about the time for these because these are just so short doesn't matter okay hello this is the last video for Session two of intelligence and learning a course that I'm teaching right now in 2017 but you a Elian of the future watching I am Daniel Schiffman human being of Earth okay anyway um so I've got some sort of evolutionary problems good that's a anyway you're here you could do a homework assignment so there were so many videos in this session did you actually watch all of them if you did thank you that's wonderful now I'm curious to see what kind of creative projects what's kind of interesting new innovative or just experimental or fun useless ideas can you implement by exploring genetic algorithms and other kinds of evolutionary algorithms algorithms so one thing that you might think about is a starting with this Shakespeare Monkey example which made up the first four videos of this particular series and what if you were trying to evolve a target something that wasn't text what photos music or perhaps imagery what if you think of each character as a vector path in like an SVG kind of shape or even each character as a pixel there are some really interesting ways actually I'm gonna just write here in this video I'm going to Google this project evolved Mona Lisa genetic algorithm I hope this is going to come up with the right thing that I'm thinking about yeah so this is a wonderful explanation and I'm going to actually maybe click it click on this one I'm in the wrong place time out ever to go to the future and actually because I I'm forgetting that on this page I think I think this there's links to them here yeah these are the links I'm looking at I will link to these no don't close that that's fine close this ok I'm back I what I actually just found the link while I wasn't making this anyway you get the idea I did little edit there so you could think about evolving an image by having the genetic material actually be a list of polygons with certain colors positioned in certain ways and look at this over time if I run this for a while and this is an example of evolving an image to look like a Mona Lisa and of course you could pick any other image to go input and this is also a oh this is implementation this this this is a is an implementation of Roger all Singh's idea which I'm going to click on this particular link and this describes this is the process and how this was developed so that's something you could explore I love to do a coding challenge actually trying to implement something like this but you could explore that and you've got the tools for doing that right here in this in this particular example okay some other homework ideas that you might consider you might think about improvements you could make on the smart rockets example maybe just adding you know just simply from a design idea like this is my smart my smart rockets example you know the design leaves a lot to be desired and what are some other more complex ways you could think about the obstacles the target does the target move around what's the design of these rockets this is something you could certainly explore and then really I think how could you think about the interactive selection problem so if you remember my interactive selection example is simply just these like really crude designs of faces with a couple squares and a circle but what's how could you take a design a font a shape a drawing and how can you encode that drawing and be it as virtual as digital DNA and how could you have users then rate those drawings those designs to evolve towards some other and get new imagery out of that so I think that's an exciting possibility thinking about music evolving music in that way a user listens to music rates music just even MIDI sequence those are things you could you could try so anyway um finally I would encourage you to think about I'm going to go to this particular example I would encourage you to think about continuous systems and improvements that you might make on steering agents autonomous agents moving throughout through a space you know this is just food and poison but what if you add a lot more other elements to the environment predators what if you add the idea of mating so they have to be near each other to produce a new creature for the next generation there's a lot of possible things I think you could explore so anyway this is me randomly giving you some ideas of things you could try if you mixed up please let me know in the comments share them with me at shipment on Twitter and I will see you in session three which will which session three is going to be about classification and regression so I'll see you in those videos if you choose to watch them okay goodbye okay yes Nick Nick 9 2 3 thank you for providing me I I will follow up with you about that in the slack Channel I've sent out I would say about 50% of the patron rewards and I certainly haven't sent out anything for anyone who's joined after January 1st so almost through everyone who joined through December 2016 and then I'll be starting on everyone who joined after in 2017 which is a smaller number so that should go pretty quickly okay all right I think that I definitely have to go it's 7 o'clock I will yeah solo solo solo anonymous penguin asked what is the slack channel I guess I will do a plug if you want to support the work that I'm doing and join the slack community you can do that by joining the coding train on patreon which is a crowdfunding system patreon.com slash coding training make my other plug that I added a lot of new coding training merchandise to the coding train store which is at coding train store Envy calm and I would like to make at this stop tshirt which I got to do at some point all right I'm gonna try to I don't I definitely definitely cannot that will not do that um okay so I should be back next Friday it's my plan and hopefully I'm going to start on session two next Friday I'm just reading the chat to see if anybody has any questions I don't know I don't know if I'm gonna keep I don't love anybody like and I'd love to hear your feedback about those homework videos I think I was just too tired and I think it was maybe sort of like not really thoughtful or useful I'm not sure if I should publish those Voronoi diagram is a great topic for a future coding challenge would like to do that I've got a minute and 20 seconds left hi Henry no don't no dabbing and you're like tempting you to do it I think it's a bad idea right you shouldn't do it yeah sacrifice productions I added you as a mod so you should be but maybe you're not let's see if I can do it yeah I agree Pogo I'm sure it's definitely not easier for me to do it right now there's no way for me to do it here sorry ah now I've lost the child I try to get it back do it back okay I'll do the bat back look definitely ready 1 2 3 something's you some CGI please there we go edit that together some green screen action stuff this is this this is probably a better view for you yeah I can do my back flip down with the actual green screen maybe see my harbor if ik tape job this is like this is another laptop with the tape on it okay I think I might have pulled something there Lucas you know okay go back to here that was closer to adapt okay thank you guys I hope this was useful these are exhausting but fun and I really appreciate everybody watching and all the feedback in the comments and everybody support just on youtube all the liking and subscribing and sharing and patreon support and nice comments and constructive feedback I'm going to see you guys next Friday I hope I'm almost certain but just check back check my Twitter I always usually add schedule the live stream if you go to youtube.com slash if madhab slash live okay good bye thanks everybody