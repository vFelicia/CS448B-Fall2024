(whistle sound) Hello and welcome to a very special coding train coding video. What you are about to watch is an edited version of what was a live stream just a few days ago. And this video is sponsored by Spell. Spell is a cloud computing service where you can train machinelearning models and that's exactly what's going to happen in this video. If you want to sign up with Spell to follow along, go to spell dot run slash codingtrain. Okay, so in a moment, I'm going to disappear and Yining Shi will be here. Yining Shi was a guest for the live stream. She has previously been on the coding train. She made a brick breaker tutorial which I will link to in the video subscription. She's an artist, a researcher. Check out all of her wonderful work at her website, also in the video description. Now, there are a couple of prerequisites before you watch the rest of this video. But you can just watch it anyway. But I made an intro to Spell, the platform video. You can go back and watch that which will get you started in signing up and getting yourself configured. You might need to have, you do need to have a Python environment running on your local computer. The one on the Spell cloud computer will be set up for you if you watch the tutorial. And I am, I have made, well I haven't made it yet but I will make a Python environment tutorial that you can watch as well. Finally, if you don't know what style transfer is, this is the whole thing. This is all about, this video and the next video is going to show you the entire process for training a style transfer model and then running that model in the browser to style images. Style transfer is the process of taking the content of one image like this one with the style of another image like this one and taking that style out, applying to this content and getting a new one. So, hashtag this.style, after you watch these videos, train your own style transfer model. Style it off your webcam. Style your face from your webcam and upload those images and share them with me. And so without further ado, her comes Yining. She's going to show you how to train your own model using Spell. Finally, we're going to train our style transfer model with Spell. There are four steps so at first, we're going to prepare our environment. We're going to download to the dataset. Because we use the vgg model and the coco dataset; the coco dataset is large so it might take one hour to finish this one and then we're going to run this style Python script to train the model. I think it will take about two hours and six minutes. And then in the end, we're going to convert this TensorFlow saved model into a format that we can use in TensorFlow js and in M15js. And here is a detailed instruction here. If you are curious, you can go there and read the read me there. And for step one to three you can also check out Spell's transferring style transfer tutorial. And you can also set notifications on Spell to tell you if the run takes a long time but I will talk about this later. And you can also customize the environment on Spell too but I will also talk about that later. Yes so the first step is to set up the environment. So we are going to go to our terminal. And we can go to one of the directories. We can find a folder. So on my computer I would just go to cd dev/livestream and it's an empty folder. There's nothing there yet. And at first I need to install Spell. Before I install Spell I need to install the pip package management for Python. It's kind of like MPM for Javascript the note package management. So if you don't have pip installed we need to do that. We can do it together. But I think I already did it so it might be faster for me. So I'm just going to switch to this page to see all those steps. So at first to install the pip, we are going to download this get pip. I will make this bigger to you. We are going to download this get pip Python script. So in my terminal I'm going to I have dots at the end. So this, we download this get pip Python script. And now if I take a look at my folder there is again pip Python script. And then I'm just going to run my script. Python get pip.py. If you're using Python three you can do Python three get pip.pie. And I guess because I already installed pip so it doesn't take too long. But if this is your first time that you install pip it might take one minute I guess. And after this is successfully installed we are going to pip install spell. I also have done this so it might be faster for me. So here it said all requirement are already satisfied. Because I already did it once. So now we have Spell installed. So if I type in Spell, I should be able to see a set of commands that I can do. I can do Spell cp to copy a file. Or I can do Spell run to start a new run. And I also can do Spell login. To log into spell from my local computer. My Spell username is yining. My password is this. (laughs) And now I can say hello Yining Shi! So I'm successfully logged into the Spell. And I also can do spell who am I to check who is logged into Spell. And it says username yining and this is my email. Created August 13th. And now we have successfully set up Spell. And then we can do prepare our environment. As I mentioned before we are going to use this TensorFlow implementation of fast style transfer made by Logan. So now I'm just going to go ahead to clone his data repository so I'm going to do get clone. Cool. And then I'm going to go to his folder. Cd fast style transfer. And now I'm here. The next step is to create some folders. And then put in our style image. So at first I'm going to create a folder that is called ckpt checkpoint. And I'm going to create a gitignore file inside of ckpt folder. And I'm also going to create a folder card images. Here. And I'm also going to create another folder inside of the images card style. This is the folder where our style image will live in. Okay. So now if I take a look at this (mumbles) I can see this is the new folder that we just created. And this is also the new folder that we created images. And the next step is to find a style image that can be trained down. And when we are choosing style images, we need to make sure that we could use this artwork and also we can use that image. And we need to give credit to those images. Because we don't want to run into any copyright problem. I have one image here. This is an ancient Chinese painting called Fuchun Shan Jitu. And I got this image from Wikipedia. So I can use this image. What I'm going to do is to put this image into images/style. So I'm going to go to the folder. I will just quickly put that style image into images style. I'm going to copy this image. This image is called fuchun.jpg. And I just copied this image here. So now we got our style image. The one thing that we need to do is to get at those two folders. And also commit these changes to let Spell know that we made all those changes. So here I'm going to do git add images and also add in our folder checkpoint. And then I'm going to commit these changes. Cool. So now we have prepared our environment. This is done. We can move to the next step. We need to download the dataset. So in order to train this model, we need some required dataset for fast style transfer. Everything is in the set up script. So we can actually open the fast style transfer data ripple here. So next we are going to run this script. Set up. As you can see in this set up we are going to create a folder called data. And then go into that data folder. And then get this vgg model. Convolutional neural network model back. And then also make a folder called bin and then download this coco dataset. Then unzip this coco dataset. So do you remember, before we had talked about the vgg here? This is the Convolutional neural network that is trained for object recognition. It can get the internal representation of the image for us. That's why we are going to use this vgg model. And also fast style transfer uses this coco dataset. It is trained on a large batch of images. This coco dataset is an object recognition dataset of 80000 images. So we also need this. Because this coco dataset is huge. So it might take a while. But we are just going to do it. So this is what it look like in the setup script. And next we are just going to run this setup. So next we are going to run this setup script. And we are going to use Spell to run this. So in our terminal we are going to do Spell run. And this is the script that we are going to run. But here we can also specify the machine type by using this flag machine type CPU. A CPU is free to use. So we're just going to run this script. And then you can see this emoji casting spell 15. Number 15. This number is really important to us because later we are going to use the output of this one to do our next training run. So it's my, oh see it's downloading this vgg model. Let me make it a little bit smaller. And I think after downloading the vgg model, oh it's so long. (audience laughs) It's also going to download the coco dataset. But here I'm just going to do control c to exit. It wouldn't stop this run, it would just stop the printing of those logs. I tried to run this run on Spell and it takes me one hour and 30 minutes to finish it. I can also login onto Spell to see more detailed information about each run but also in the terminal we can do Spell ps. It will list all those runs that I have done before. So I have 15 runs and the last one is running. And this is the command that I put. And this is the machine type. We are just using CPU. But we can also log into the Spell website. And here I can click on this run. And I can see all those, all the informations about each run. This is the run that we just did, run 15. And it will output a folder called data. And this is all the logs. And this is the CPU usage. CPU memory. So this run will take about 1.5 hours. But luckily we have another complete run. I think it's run 13. So on run 13, I also ran the same command to setup. Here. And it's already completed. And it output a folder called data. And we can click on this data to see what kind of output did we get. See we got this, let me make it bigger. We got this vgg model. We also got the coco dataset. Here it's called train2014. So next we are going to use the output from this run to train our model. Okay so we finished this second step, downloading the dataset. And we are going to move to the next step. Training with style. Our script. And this is the whole command that we are going to run. But let's talk about this command before we actually run it. This command starts a new run. And it used this mount flag to mount the output of our previous run which is run 13. For run 13, the output is a folder called data. And we are going to use this mount flag to copy this data folder into the file system of our next run. And we are going to call that folder datasets instead of data. So this is the mount command. We can see more information on Spell's documentation. And then we are going to specify the machine type. I used the V100 machine. We can check more detailed machine type here. On the Spell run/docs/core concepts here it talks about all those available machine types that you can use. And here there is a pricing table. Then this is all the machine style we can use. The one that I used yesterday is called V100. And normally it will take 12 hours to train on this K80 machine and it will take four hours to train on this V100 machine. But I tried it four times, it only took me two hours to train on this V100 machine. So this is the machine type. And next command we specify the framework is TensorFlow. And also we are going to get some actual package for those are two extra packages there for radio transfer. And you can use apt pip to get all those packages. And this is the actual Python command that we are going to run. We are going to run the style Python script and we are going to this script that we want the output to be at a folder called ckpt checkpoint. And we are also going to tell the script that this is the path to our style image. And this is the style weight. This is the style (mumbles) of that model. Which is 150. But you can read more about it at Logan's (mumbles) poll about how those, about the default style width and other information. And we also need to specify the train path. This is the path to our coco dataset. And this is the vgg path, the path to our vgg model. And we don't need to change any of this. The only thing that we need to change is our run number which would be 13 because 13 run downloaded all those dataset. And we are also going to change the style image link to our own image name which is fuchun.jpg. Okay let's do this. So I copy paste this command. And here. I'm just going to replace I will just go to a code editor first. I'm going to replace this with my real style transfer style image. Which is fuchun.jpg. And also I'm going to replace this the run number of my set up run to 13. Because that is the run that we use. And that's it. So now we should be able to copy paste this command and run it in our Spell. And by running this we are going to start a new run to train the model. Let's just do it. And this says casting spell. Machine requested, done. Run is running. Mounting is done. We mount the data folder to this run. And it says Tesla V100. This is the machine type. I think it will give more information. I'm just going to do control c to let it stop logging all those logs. And we can also do spell ps to see our run. So now I actually have two runs running. The first one is the set up. I'm still waiting for that to finish. And then this is the training script. On this V100 machine. Oh and the one thing that I forgot to mention is because it takes awhile to finish this run on Spell there is a place that we can set notifications. So it will send us emails when this run takes too long and will cost too much money. So on my Spell account if I go to settings and the notifications here, I can set some like email notifications saying email me if the run exceeds $20, things like this. In case the run takes too long. So we can do this. And also if you're curious about the versions of packages and frameworks that we have in this Spell environment, one thing that we can do is to do Spell run pip freeze. It will log out all those installed packages for us. So this is a new run too. Casting spell 17. And this is finished. The total run time is 10 seconds. And we can see all those installed packages. TensorFlow 1.10.1 things like this. If you're curious about the versions of the frameworks. Yeah so let's go back to see how did our run, runs doing. So this is the run that I just started for training. It has been running for three minutes. And it's still running. It will take about two hours to finish. But I have a complete run. Which is run 14. Run 14 also takes like two hours and six minutes to finish. But here I trained another style image. See I had this exactly the same run. But I trained this model on this lotus image. And this is the output of this run. So when we are waiting for our run 16 to finish we can use this run 14. This run 14 output a new folder called ckpt checkpoint. And if we open this folder, we can see there are let me make this bigger. If we open this ckpd folder if everything goes well we should be able to see four files in this folder. The checkpoint, dot data, dot index, dot meta. This is a format of TensorFlow's saved model. This dot meta stores the graph information and this dot data file here, it stores the values of each variable in that graph and this dot index identifies the checkpoint. And this checkpoint file actually only tells us the model path. But for next step we are going to copy those folders back to our local computer. We can use Spell ls to list all those output for us for one run. So I'm going to do this Spell ls runs. And the run number is 14. The completed training run. So if we do this, Spell will tell us, oh the output is a folder called ckpt. So I also want to see what is inside of ckpt. So I can do Spell ls runs/14/ckpt. And then it lists all those four files that we saw on the Spell website. And what we're going to do is we want to copy paste, to copy all those files back. So I'm going to create a new folder called spell model. And then I'm going to go inside to that model. And then here I'm going to copy all those four files. And the run number again is 14. So we hit enter. And it will say copying this file. This is finished, we successfully copied all those four files. Which is the model, which is a TensorFlow save model. Back to our local computer. So, oh, I created a wrong folder inside of this (mumbles) but it's fine. So now if we list out all those files we can see all those four files are on our local machine. So this is how we can get the trained model back from Spell's remote machine. Actually we can open that to see what do they look like. I'm going to that directory. I just created this new folder called Spell model. I'm just going to drag this model out to the desktop. And as we can see we have four files. This is the format of the TensorFlow save model. And if we open this checkpoint file, there's only two lines in this file. It tells us the model checkpoint path is fns.ckpt. This is an important information because we are going to use this path for our next step. So just remember the model checkpoint path is this. Okay so. So far we set up the environment. We download the dataset. We trained the model with the style Python script. We copied our trained model back to our local computer. And then last step is to convert the model to a format that we can use in TensorFlow js and ml5 js. Alright thank you Yining for that wonderful tutorial about how to train your own style transfer model using Spell. Okay now, the next step, ooh this is exciting. Once you've trained your model and maybe it took you like a long time to do it. Well once you've got those model files you can now bring them into the browser. Loading them with the ml5 js library which is built on top of TensorFlow.js and style real time live images coming from the webcam. And that's what Yining is going to show you in the next video, okay. So see you there. (upbeat music)