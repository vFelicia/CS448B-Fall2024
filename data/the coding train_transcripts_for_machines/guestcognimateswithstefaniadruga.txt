Hello and welcome to a special episode of The Coding Train. What are you are about to watch is an edited version of a livestream that happened a couple weeks ago with a guest, wonderful guest, Stefania Druga. If you want to watch the full livestream archive, you can find that link in the video description. Stefania came and presented on her work on Cognimates. Stefania is a recent graduate of the MIT media lab and she is the creator of Cognimates which is an open source educational platform for AI. So while her project is something that's well suited for kids, this video is really more an explanation about the project that I would imagine that maybe parents or teachers, educators, caregivers that work with children ages 7 to 10 might be interested in. So, Stefania's work is wonderful, I hope that you learn something new and find it interesting and if you want to learn more about the project, all of the things that she talks about are linked in this video's description. So thank you, Stefania, for being here and thank you for watching. (ding) Thank you so much for the kind introduction. I'm actually amazed because Dan pronounced my name correctly, never happens. I'm Stefania, nice to meet you all. I am just graduated from MIT Media Lab and during two years there, I've been working on this project called Cognimates which is like a playmate and a learning mate and the goal of this platform which is open source, by the way, is to teach AI to kids and allow kids to customize train their own AI models and teach program smart devices they have in the home and learn more about this technology. So the overall mission and goal of this project is really to democratize who gets to create with AI and if you're going to ask me why are you doing this and it's kind of crazy to teach, AI is complicated, machine learning is complicated, why should we teach it to kids? And I'm going to say that it is necessary because for the first time, we have a generation that is growing up with this technology, just like I grew up with internet in my small town in Transylvania and we have more than 47 million smart devices in homes right now that kids are talking to and when I started my work at my media lab, we did a lot of research to actually understand how do kids perceive these devices? Do they trust them? Do they want to learn from them? Do they want to program them? And we published a lot of this research and then we figured out that actually a lot of the kids thought these devices, like Alexa, or I don't know, Google Home, are more intelligent than they are so we were like what if we give them tools to actually show them how they work and in that process, they would learn how to demystify a little bit what artificial intelligence means and how smart are really these smart toys. So we built this platform Cognimates, which is available online, that's the link, cognimates.me. It's research projects, some of the things I discovered while preparing the demo today don't work but some of the things do work and it's open source so you can help me fix it. It has, it's building on scratch which was developed at MIT Media Lab as well and it's open source but we created an entire series of extensions specifically for AI education. So when you load, when you go to Cognimates, the cognimates.me, you're going to see this website, let me make it a little bit bigger and then if you actually want to start programming straight away and trying it, you can click on this launch Cognimates which will take you to the code lab. And in the code lab, on this plus button, you can kind of see what are some of the extensions we created. So anything from programming your Alexa, if you have one at home, to actually play with the camera your computer or tablet has to do color detection or just program a robot like Cosmo, if you have one, we wanted to provide extensions that are a lot of fun for kids and usually kids love Lego and we can do, Lego we do as well, but we also wanted to allow kids that don't have access to an Alexa or a Cosmo or a JIBO to be able to learn these skills as well. So some of these extensions are just web based and others are also for IoT and robotic platforms. So before talking too much about this, I can show you what are some of the things that we can do and on our website, we have collection of projects. I'm going to start with the first one which is called Make Me Happy and in this project, if you click on it, you can download it, download the starter project and then go to the code lab and upload it, file, upload, and then let's see where did I put it, and in here, you will see what are all the elements of this platform which as I mentioned is building on Scratch. So on the left side, you see what are all the blocks that we can use, oh yeah, I forgot to say that (laughs), the way we do coding and the way this platform works is by using this blocks which is like visual programming language, it's called, and it all builds on Blockly, open source grammar from Google, and it's very similar to Lego so just the way we plug and play with Lego, we can plug and play with this blocks. So the idea for the blocks is that you don't necessarily need to know the syntax of a programming language like JavaScript or Python but you can just read what's on the text of the block and start to create your program in here. This is called the stage in the middle and then you can start to put them together and when they, it's actually very satisfying, when you put two blocks together, you get a sound, I don't know if you can hear it, yeah, you get that beep. So on my left side, I have all these different blocks, I have a library of different blocks that allow me to control my program. In the movie, I'm like the movie director, I put these blocks together and I can start to create a story or a game or an animation and on the right side, I have this output where right now, you can see me and a character. I don't know why that's the case but we'll figure it out. I think we added too many extensions. So right now, what we are going to do is basically go through the steps of this project and I'm going to show it to you just the way I do with kids. So we have this character which is Nary and Nary is going to react to messages we're telling it. So if we're telling Nary, we're going to start with something very, very simple. So, Dan, what should we tell Nary to make her happy? Give me a phrase. [Dan] Would you like something to eat? Okay. Would you like something to eat? So, right now, we're going to go when we click the green flag, we're going to have Nary be thinking because she doesn't really know what we're going to say first and then we have a block where she's asking us to tell her something and my answer, I'm typing here, is going to be, would you like something to eat? It's very thoughtful. [Dan] I guess I answered with a question. Yeah, no, it's very thoughtful, we could do it like an entire chat bot and then let's see what happens when I click enter. She should be happy and she is happy. Also if you want to have just interaction, we can make this bigger and do it again but, you know, this kind of program only works if we say that specific phrase, right, would you like something to eat. [Dan] The chat's pointing out a typo. It says something to it instead of eat. Oh yes, thank you. Eat. I ate the letters because (laughs). I would like some letters to eat. Yeah, so this is very limited in terms of how much we can interact with Nary. What if we want to tell her all sorts of different things and make her react happy based on that? So for that we actually made this other extension called feelings. We used to call it sentiment and then we realized that kids don't know what sentiment is but they know what feelings are so that was interesting. So we have this feeling extension and in here, there is a block that it's saying what is the feeling of the text so in here, I could just try it out, let's see how this block works. So if I would copy paste the example we just had in here. What do we think, do we think this is going to be positive or negative or neutral, what do people in the chat think? Most people are saying positive now. Positive. [Dan] Couple neutrals, only one negative am I seeing. And it looks like this is not a scientific poll but it looks like the most comments I'm seeing is positive. Okay so let's try it, do you have a guess? Do you think it's positive, negative or neutral? [Dan] I'm going to guess neutral. Neutral, I'm going to guess neutral true but let's see. It's positive, oh my god, that means our library doesn't work very well. No but it is, this is what we do with kids, is like what do you think made it positive? What word and how can we probe that, right? So, we see now that this block can actually pick up sentiment of phrases we're typing or saying so in my program, going back, if I want Nary to react all sorts of things, all sorts of messages I'm going to give her, we can just go in here and instead of saying I want to see if the answer is a specific phrase, I'm just going to always check what's the feeling of the different answers we're getting and if that feeling is positive, then I'm going to make Nary happy and if it's negative, I'm going to make her sad. And you know, this kind of conditional, all of this blocks we're using here, it's already a bit complicated so sometimes when I start with kids, I don't even start with this, I just, we have this block that is called a hat. Oh yeah I forgot to tell you that all of these blocks have names based on their functionality so this conditional I just used, this is called pants because it has, it looks like pants and then this other block here is called a hat because that can trigger an entire action. So I could do this in many different ways, everything with code, we can do it in many different ways. So I could be when text is positive, just make Nary happy and when text is negative, make Nary sad or I could do it with a conditional and the other cool thing with these blocks is that it's very, very fast to remake so I can just duplicate that entire collection of blocks, let me just make it a bit smaller so you can see, so like this, I can make Nary react when it's positive. Oh I already have an else but I could also like right now, we're only dealing with positive and negative, we don't have anything with neutral. So in that case, we can say if the answer is neutral, then Nary should say something like, oh I'm still thinking or we would make her still be thinking and I don't need an else here, I can just do a simple if. We'll start from the beginning, click the green flag, and we can say to Nary anything. So, do you want to give me a positive or negative or neutral? [Dan] Um, all aboard. All aboard. [Dan] I didn't actually unmute my microphone to say that. Well they probably can hear me through your microphone but all aboard was what I said. Okay, so let's see how she reacts. All aboard. And that should, yeah, so that was neutral and now, I want to try something positive. The Coding Train is fun. Let's see. Yay and she's happy. So we don't have these things, I just want to show a very quick, simple example but as you can see, it's much more fun if we do it together. So because I want you guys to give messages to Nary, what we're going to do now, and this is like where the modularity of extensions and doing this interplatform connecting everything makes a lot of sense and it allows us to play with many different parts of the web and the physical world. So what we're going to do now is we're going to add another extension so instead of me giving Nary examples, I'm going to ask you guys to do that. So for that, we're going to use another extensions we built which is the Twitter extension. So instead of me typing here and doing typos, I'm going to let you do typos, no, if you tweet to The Coding Train, train, we are going to analyze the feelings of your tweet and based on that, make Nary react. So I'm just going to add that in here so instead of asking a question, we're just going to put the tweets you guys are sending and actually because we want to see what the tweets are, I'm also going to make her say the tweets so we see them on the screen. So I hope people are going to start tweeting with The Coding Train and yeah, let's give it a try. [Dan] So to be clear, they should tweet @thecodingtrain or just the hashtag #codingtrain. We could do both. Both, okay. But for now, I did it with the... [Dan] 'Cause I'll do one for at least. Yeah. (laughing) I did one with @thecodingtrain. [Dan] Okay, okay. We can also do a hashtag Cognimates afterwards or The Coding Train. [Dan] Okay, I sent one. People, again, people, they're about 30 seconds behind so stuff... Okay. So let's try it. Let me make her say that's, so we can give her a personality so if it's neutral, she can say okay, I like that (giggles). And then if she's happy, she can say that's awesome. And... If it's sad, it's like oh no. Tell me something else, all right, I think it's only getting the ones from The Coding Train so let's do the hashtag, that's my bad. Sorry, guys. (laughing) If you can use the same tweet you had but use a hashtag instead of @ so we're going to try that instead and oh yeah, this works, so actually if I just change the @ with the hashtag, it should be seeing the tweets that you guys have sent so let's give it a try. Tell me something. Ooh, do you guys see what happened? It was so fast that we couldn't see it so we need to add a wait time so we can actually read what you guys have tweeted. Tell me seomthing. TGIF, thank, oh she likes that, she's happy. Okay. We, are we getting a new one, let's see. Choo, choo, choo, Cognimates rocks. (laughs) I like that. People are too nice, we only have positive examples. Thank you playing along. So this is kind of like how it works. You saw we started with five blocks and then initially just kind of give an example and make the character react with specific phrase we said, like what would you like to eat and then we wanted to create a more natural interaction, like talk to Nary the way you would talk with a friend. So for that, we used the feelings extension so we can analyze the feelings of different messages that we would send and then we added the extension which makes it social like the tweet extension allowing all of us to play this game together and you can imagine doing this with kids is much more fun than trying to deal with the lag and all the other complications of live coding but the idea is that it opens up a world of possibilities and you saw right now only a character on the screen reacting but when we have also a Lego robot reacting to what we're saying or a Cosmo robot or things that are in the physical like a micro bit showing a heart, you can imagine that the world becomes a playground and all of these things can be combined in many different ways. Now from an AI perspective or a customization perspective, if we play with this a little bit longer, you're quickly going to see what are the limitations of this feelings extension and then we're going to start to think okay who trained this extension, what kind of examples did they use? Why does it pickup, why doesn't it pickup sarcasm or why doesn't it pickup more like backhanded compliments and things like that so that comes like a natural transition and question for kids as they're playing along and poking with these things so we build also on the Cognimates website, you're going to see this link for teach AI, basically once they tried existing AI models, it could be for vision or for text or for many other things, then they can start to teach their own. And maybe a child would want Nary to laugh at his jokes or get a very specific insider joke, message that he's sending so he can go to the teach AI page over here and this is building on top of idea watson and it allows kids to create their custom classifiers so if they don't want to use already pretrained model that exists online, they can make their own with their own examples. So in here, we could do this make me happy, project, and start write examples. It's like what kind of text I would like Nary to recognize as happy and what kind of text I would like Nary to recognize as sad or maybe I want to add another category where it's not neither happy or sad or neutral, it's more like, I don't know, weird messages, right. I like weird stuff so (laughs). So we can kind of give much more nuance to, instead of black and white and cats and dogs, we can start to add our own examples and then once we have five examples for each of these categories, click on the teach me button, this will create a classifier that we can use afterwards in our Cognimates game by adding this text extension. All right, thank you so much, Stefania, for being here and presenting your work on Cognimates. If you're still watching this and you want to learn more, check this video's description for links to Stefania's website, the Cognimates website and other resources to learn about Cognimates and AI education. Thanks, goodbye. (upbeat music)