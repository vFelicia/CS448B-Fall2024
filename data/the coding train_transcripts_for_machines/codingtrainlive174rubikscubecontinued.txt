hello happy Wednesday it is the coding training with your host me Daniel Shipman thank you to brilliant for their sponsorship of this livestream once again if you go to brilliant tot org slash coding train and sign up for free there that will let them know you found brilliant from this video and the first subscribers towards subscribers will get 20% off so I'll talk a little bit more about brilliant later I'm gonna try to solve one of the puzzles the daily puzzle for brilliance today in JavaScript but what I am here today to do is work on my Rubik's Cube problem because I am totally obsessed my house now it's not really a house apartment whatever we call it's the small box in New York City actually in Brooklyn New York is full of different cubes I've got the Scoob the pyramix the pyramix duo the 2x2 the 3x3 so many of these I don't know I don't know if this is a good thing but at least you know if I'm gonna get be looking at something while I'm walking down the street so much better to look at a cube than my phone which is really just not the way we should all be living as my mic working yes are people watching me I think so so here's the thing let me just get this shot up over here so I can see it welcome everyone I have a bit of a problem which is that I want to continue working on my Rubik's Cube code but and I have this new cube which is so much nicer but it's not solved I meant to solve it and I just ran out of time this morning so I'm gonna do the really awful embarrassing thing of trying to solve it relatively quickly I think I can do it within five or ten minutes I mean I know the discussion and the chat before I went live was all sorts of people talking about how they can solve a cube in 30 seconds or 20 seconds or 45 seconds and there's C fought but bebop and we bop all sorts of different strategies I don't know any of that stuff but I want to learn I want to learn teach me about the ways of the cube I'm really obsessed but I have to stick to my thing that I do in life which is coding and livestreaming and I do think this is an interesting example that's getting out so much that has to do with arrays and multidimensional arrays and 3d rendering and eventually machine learnings I want to look at seeing if I can get a genetic algorithm to evolve the solution given any given a gift given a specific opening state and then see if there's any way to apply maybe neuro evolution or a neural network as well to optimize towards solving the cube without sort of preset algorithm alright so apparently the worldrecord holder of solving the cube is watching right now I'm saying that I can solve it in three point two six ten seconds all right so let me see here the let me see if I can get this solved this is the worst thing ever you can all shout at me in the chat about how I'm doing it wrong but I won't I won't be able to hear you I lost track of what I'm doing I'm solving the cube yes solving the cube how am i doing that like this where's that yellow side ah I dropped it what it might even what am I even doing with my life I can't okay I have to stop talking okay I got to go into my solving two cubes oh no no contest this week that's the Oh I really I this is the step as soon as I can get to the part where I have this in the corners or as soon as I get the part we're gonna have the yellow I can do this instantly and I can never get the yellow side solved this is the problem I knew I should have done this because I really want to get to coding but I'm only ten minutes in things are things are going I'm starting to sweat all right let's just try yes there we go okay there we go okay I think I'm gonna get it now way ahead of the game okay there we go okay where do I turn this camera off there we go okay oh wait hold on look here's my cube this cube has a purple side isn't that interesting strange purple side or maybe it has an orange side all right stretch everybody stretch let's find the code I'm gonna open up my Rubik's Cube code I'm going to alright so here's the thing one thing I want to talk about very briefly is this is what I made last week and if I did things if I did it correctly the green side is now facing me and as I look to the top I see yellow as I looked at the bottom I see white as I look to the right I see orange as I look to the left I see red so I programmed this correctly now the thing is there is no such thing you know went the way that I learned to solve the cube in the last week basically is by thinking of the white as the top and so a front turn would be this or a turn on up clockwise turn would be like this counterclockwise would be like this but of course and yellow could also be conserved the top a tower could be the bottom and I could do everything relative to the white and the yellow side but of course you can do it any which way you want you could do this you could consider the blue the top and solve it that way it's symmetrical perfectly symmetrical on all sides but I think for me to be able to figure out the next step in terms of like actually doing some rotations of the cube I'm gonna stick with this white as the top convention and what I actually want to see then is when I run it when I run this code I want to see white there on the top so why what have I done in the way that I've programmed it incorrectly like I one thing that I could do because the zaxis Z would be front back is blue on the Y up is white I guess I could just always consider it yellow since that's how I have it maybe I should just do the top it's yellow since that's what everybody wanted anyway yes no it doesn't it doesn't can like do a weird like forehead erase my forehead with the cube thing all right because what I want because when I turn it clockwise I want to see a wait a second when I turn it clockwise all right so that's fine so this is Z here's the thing that I want to do let me let me add something to this just to figure out what I'm doing oh I'm gonna completely need to redo this this is ridiculous the way that I programmed this by the way is just totally not gonna work so I have to refactor this maybe I'm going to do that at the start of the next part okay all right audio people are telling me audio is everything fine because I'm gonna get started with some coding oh because they have unique first letters Oh interesting that's useful to know so I could actually do this this would be probably terrible would this be bad if I did it this way oh the audio is out of sync yes so if you're if this is the first time you've watched the live stream I have an audio syncing problem and it's on my end it pops some of its on the probably YouTube or your head but there is definitely an issue on my end because it consistently is out of sync even in the video that I recorded disc it has to be fixed and some people say oh no it's fine some people say it's way out of sync I don't know how to correct that so apologies for that hopefully best that I can that's what it's going to be today alright so let's get going so what my goal for today is to is to it is to code a rotation so I'm gonna do that and alright so let me just let me just actually get going woo oh I forgot that peezy cam has this thing where I can zoom in and out okay I think I should just for the sake of argument give it like a little maybe just like a little bit of rotation just so when I well that was a lot of rotation a little bit more I want to see the top that's useful to me I just want to see like a silhouette I start the program I want to see a slightly like skewed version of the cube okay all right here we go hello welcome to part 2 of my Rubik's Cube coding challenge I think if all goes well what I just want to have in this particular video is a single maybe clockwise that's counterclockwise clockwise turn so I want to be able to turn this sort of top row of the cube and once I figure out how to do that that it should be very easy for me to mop very easy but should be somewhat easy for me to extrapolate how to do all the different kinds of possible turns that one might do so that's well I'm hoping to get from the start of what you're watching right now to the end don't I have sort of a vague plan in my head of how to do this I'm sure that I will kind of do it in a weird way and you will have a more efficient or more logical or more elegant way of doing it and I can't wait to hear from you about that in the comments because I'm really excited about getting this project fully finished but I've just got to admit to myself that this is gonna be many parts so a lot of steps to getting the full Rubik's Cube simulation so I'm just gonna do it in parts so I have a simple goal I said it already 1 turn I definitely need to do some refactoring of this code before I do that because there's some things about it that I think are pretty weird and what are these things don't use the greenside for showing what you want to do it's a really good point all right so let's let's uh let me not have the green yeah let me switch to right because when I'm creating the cute oh you know what I should do all right I see let me think about this I'm gonna refactor this a little bit I'm gonna come back and start over let me let me a refactoring this is down should be fixing the Y and updown so if up is white then a wonderful peasy cam that's interesting oh I see now this is gonna be wrong that's right that's right should be read and that should be to the right but it's oh the yaxis is flipped this is the problem yes I know in my real life cube I know but I think that I want to see I also I want on the real life cube I want to have maybe what didwhat would be if yellow was considered the top what would you typically what would you consider to be the front I'm just gonna consider it blue just blue show no blue is kind of transparent to orange you can see I could do red yeah let's do orange I forget that the world is flipped here let me keep it as is I just want this to be this is so good this is I gotta get going it's a coding part to reorient my brain okay as I'm looking at it backwards also so if yellow is up let's just do this yellow is up yes this is really oh this is making me crazy yellow is gonna appear up so this is up right oh no wonder I'm just losing my this is really actually the down side and this is the up side but I want so that's fine I'm just gonna switch that I'm gonna keep white as on the top and then I have that wrong of course because everything is flipped but it's okay yellow is up white is down oranges right left is red that's good back front is green back is blue okay the yellow is now the top I fixed what I wanted to fix up down up left right back front back I just want to have it in that order here we go let's rich let's rotate it a little bit along the Y also why why a little bit more great that's what I want to see ah don't break the cube okay here we go everybody no no hello welcome to part 2 of my Rubik's Cube coding challenge this is gonna be a whole bunch of parts this is a much more complicated problem than I originally envisioned so I know where this is going or how well if this is gonna be successful but here I am and in this part I want to do one thing I want to be able to figure out how to take the data of the cube I have everything in this threedimensional array a threedimensional array of cubie objects and I want to just do a rotation so if I were to do the rotation something like this I want to do this one like clockwise or one counter clock that's clockwise that's counter clockwise rotation so I've got to figure out how to move all the cubes around and make sure the colors are on the right side when I move them if I can do one then I think I can extrapolate that to do all of them so I have a kind of vague idea in my head of a way of doing this I'm sure there's a more elegant approach I don't know this out as I go but I've looked forward very much look forward to your comments in the video description because I'll be coming back and doing part 3 and I will see your comments before I do part 3 so thank you thank you in advance for that okay so I definitely need to do some refactoring here and I think one thing that I want to do I'm thinking about this is I want to have yeah I want it that these colors are gonna have to change so the way that I programmed it right now is that all of these colors well let me sound is lagged everybody's talking about how fast they can solve the cue a 5d oh my goodness all right all right how am I doing this how am i doing this these are gonna change okay up down left right front back up down yeah this should be it so hold on left that's fine up down right left front back down this would be first then okay so here's the way that I'm thinking about doing this right now I have everything drawn in the Kyuubi object as four different six different quads and I have them in this specific order up down right left front back and those are up being yellow down being white and then I don't know if it's of course the orientation doesn't actually matter I can consider anything up or down or anything left or right but I'm picking something just for my own sanity right now so but that's those are gonna change as I turn right in a way like the cube even though the cubes physically move for me to move the data around I just need to move the colors around and then I might do some kind of animation with it but I think that's gonna be the way that I want to do it so in other words the cube is actually going to have like a configuration which is an array of all the colors and what colors are in which positions up down left right front back and of course in the real cube there's not colors on the parts you can't see but I'm gonna again willfully ignore that for right now so then I would be saying colors config zero and actually let's make this an object let's make a configuration of the cube I'm gonna call it a config maybe it's an order or something and it has this this sort of like array of the sides which is six six things and when I make a new config object actually I don't need to do that I just say sides equals an array 0 1 2 3 4 5 ok so that's and I guess I have to say new int to say it's a new integer array so that's the config the reason why I'm doing this is because then I can make a config object and when I make a QB it gets a new config and then maybe I will say write a function like int get int index and this is really this is really the side right and then I'm going to say return sides sides index aside so in other words I can say here now colors config get up config get down config get right and you know somebody told me that the reason why they're called up this is probably a terrible idea but the reason why they're called up down right and all of that is because right left front back is because those are unique letters so let's change it to that l AR l front did I say was that front yes front and then back okay so now and let me change these to just you d r l f b and again the fact that it's up down left none of that actually really matters i just need some kind of way to think about the cube i think this is a little bit crazy okay so that's the original configuration everything gets a config and then there we go still correct perfect okay so now what I need to do is I need to move the cube pieces around oh this is actually do i I just need to rotate them right because I don't actually what is it to to do this is actually not rotating the cube it's just turning all the pieces right I mean technically this piece goes I mean technically the way that this works I maybe I'm doing this in a horrible way I mean I should move the pieces uh I am gonna want to move right so so what I mean is if this is the one side of a cube and if I give them these index values for example 0 1 2 3 4 5 6 7 turning the cube you know if this is 8 this this piece doesn't move turning the cube on this face clockwise would result in 0 1 2 3 4 5 6 7 so I could actually move those cube objects maybe I should put not sure that this is necessary but let's try this let's try doing this let's try taking all of these cube objects and moving them around and I'm actually not going to move the cube objects I'm just gonna move the config cuz the config is the thing that I want to move the things they're all the same let's let's try it I'm not really sure let's try moving the config so in other words I'm gonna make a tab another tab let's call it like just moves and I'm gonna make a move which is turning the oh boy the green side is the worst side for me to use cuz you can't see it is that have to be facing forward I'm looking at the chat moving them won't rotate the layer yes it will yes well you'll see you'll see you'll see okay I wish the green thing maybe I can turn off the green screen for justices there I could there could do a hotkey to turn off the green screen and then I could see a turn or I could redo this right now so that blue is the front so I can demonstrate this but whatever I think it's fine all right we're just gonna have to live with the fact that the green side you're seeing is purple you can't see me turn it no that's no good whatever yeah I do okay people are writing image shot okay that's all right I'm realizing I need one more thing so one thing that might be useful is to keep track of this order which is zero zero one zero two zero what is this what is this 2 1 2 2 2 2 1 2 0 2 0 1 all right so this is this is the order of how I'm going to move the cubes and let's put them all in an array so let's actually let's make something called an an index pair and let's just call it a and B maybe I think I'm overengineering this and then and then I need an array of all those nerves so it's 0 0 0 0 1 0 2 0 2 1 2 2 2 1 2 1 2 0 2 0 1 am I going to need this order so this is an array of the order so the reason why I'm doing this is because let's say let's say what I'm gonna do is I'm going to create I'm gonna create a rotation I'm gonna call it Z because I'm thinking in terms of Z I'm gonna take a clockwise z rotation so I'm going to say turn Z and what I need to do is go through the order and I want to make an array of configs for all eight of those and I want to say give me configs index I equals the cube I so a equals order I a B equals order I dot B and then I don't explain this in a second I'm thinking this through while I'm doing it and configs I is the cube at a comma B and then the Z is just the front would be to if the back is 0 the middle is 1 the front is to dot config what I'm the reason why I'm doing this I'm just grabbing I'm just saying hey here's the cube give me all the configs in this particular order going go going through this way going put them in order the reason why is because then if I want to move them I can just do this I can do exactly the same thing but I can say cubes instead of an asset this would be me this would this is me just copying them over right this is me just saying hey take all the or the configs and put them in back in where you got them so if I were to now in setup call turn Z I should still see the key you exactly as is nothing has changed now what I could do is I could say I plus two see this is what this is what I've been building I plus two modulus order dot length because what I want is I want each one to get I guess I'm going the other way than I did here but I want like for example I want this spot to get to this gun I want to and end up here three would end up here that's counter I'm doing it counterclockwise but that's fine doesn't matter the counterclockwise or clockwise I just need to do it in a given direction so I'm just moving all those spots the thing is I don't think I can actually just set the configs one one is in the middle I did something wrong here my order is wrong someone in the chat is telling my order is wrong zero zero one zero two zero yeah yeah there shouldn't be any one one here oh and I don't have a one one okay I'm fine never mind headed that out all right over doing this but it's fine I said I in the back of my mind I feel like I'm overdoing this but it's fine I can peel some of it out later if I don't need it because another thing that I'm going to do here to overdo it is I am going to make a function which returns a config object called copy because I'm a little bit afraid of having the same pointer to different arrays all over the place so I want to say int int I'm just gonna make a temporary array that has the same number of things as the sides and then it processing has an array method called array copy a copy method where I can copy the sides into temp and then I can return a new config with temp and then aha I could overload the constructor and have another way of declaring it with so this is again this might not be necessary but I'm setting myself up for success later by having as much this is not usually how I work I usually just try to like hard code a lot of stuff in there but I'm trying to disorganized okay so I can make a new default configuration I can I can copy a existing configuration I can make a configuration from one I should probably actually just what I probably should do is just always copy it there but whatever such either six of one half dozen of the other so what I'm gonna do now is say configs I equals config start copy so in theory I have moved all the pieces the thing is while they're moving right while this seven is moving in a way I did it I'm doing a counter clockwise while this seven moves to here it's also turning so the config actually has to the new config has to move the sides the side that was here the caller that was here needs to end up here the color that was here needs to end up here let's just make sure that moving is actually working I have an idea for how to do that let's add let's add an extra color I have this this is a goofy idea what's a cos I'll just use black so I'm gonna add an extra color for which is index six I only have six real colors the seventh will be black and then I'm gonna in the Box in the QB function and they in the QB function I'm in a QB class I'm gonna write a function called highlights not really highlighting to turn it black but and I'm going to say config equals zero zero six six six six six six six six six so what this does a new config this is a little bit ridiculous but I'm just gonna like overwrite its configuration with all black so in other words what I can do now I'm going to comment out turn Z and I'm going to say cube zero zero zero which should be top left dot highlight so now I should be able to pinpoint any given QB okay it's back that's the back right that's right zero zero zero I want to see the one in the front so I can change this Z and that's that now if I put turn Z this one should end up down here turns e that should move that two spots this way counterclockwise I worked so that cute move down and by the way if I wanted to do it clockwise right a clockwise rotation is just counterclockwise twice right that's the same thing one two boy I'm confusing myself hold on a second my my watch is beeping at me incessantly I'm gonna have to take it off right is if this is my cube this is counter clockwise this is clockwise one two I gotta do it three times three times would be the same right of course so no no so counter clockwise is one turn to the left three turn to the left is the equivalent of just turning it clockwise I could also move the pieces in another direction but I'm just curious let's just copy paste turn Z three times and I should see whoops that right over there good good good okay so now what I need to do is if I am going to call turn Z and move the pieces I also need to as I move them rotate Z I'm gonna that's a processing function but I basically need to take the configuration and rotate it so that what is rotating its Z mean it means top moves right right loose bottom bottom moves to left left moves to top and up so I could in the config class I could write a function called rotate Z and what I'm doing is I'm just oh I hope the order is the order is gonna be different let's do it this way I'm gonna now hardcode something I'm gonna say what was I saying I was saying sides is I'm getting up from right from right the color moves then I'm getting right gets from bop down and down gets from left and left left gets from up however not real however that's a problem because I overrode up so I need to just make a temporary variable to give me the color that's in up and then set that here so these numbers are really standings for color in the end ultimately they're not about being up down left right front back those are the actual colors those are the integers indicating the colors but it's easy for me to think of the orientation in terms up down left right front back so now if I do this I think that's right let me get rid of that highlighting let's look at the actual cube whoops let's look at the actual cube so you can see it oh this is like in the way here we move this over here let's look at the cube here so looking at green with yellow on top and then I made a counterclockwise turn that's orange there's a red and white yellow and red that worked that worked I turned it huh guess what I made a turn that's exciting I mean I may have overdone this like I don't know that I think this might actually work without with just doing the rotation like what if I just rotate the sides oh I got a null pointer Oh cuz I didn't put anything in well let's not worry about that right now no need to move them i spaghetti or shipments all right so the chat is telling me that there's no need to move the pieces which i think is correct so let me comment that out now that I did that that was kind of like a useful way of thinking about it for me I still need to know but so let me comment that out so what I can do is I can comment this out comment this out and I'm gonna say configs oh just cube a B index 2 dot rotate Z right oh no dot config dot rotate Z so that's the same great so okay so moving the cubes was interesting and maybe I'm going to need that later but I don't need it for right now that makes things a lot simpler so turn Z let's make a boolean for clockwise or counterclockwise clockwise so clockwise so what I just did here is this is a boolean if clock if clockwise do it this way otherwise do it this way and if it's clockwise we just need to go the other direction so down and up or switched right whoops shoot did I do that right no down and then up yes that's what I meant to do okay so that should be clockwise that should be counterclockwise there's got to be a way to refactor that into like a nice little loop or something but let's just let's just do that okay so now if I'm saying turn Z I need to say true would be clockwise and what did I do I turned it this way is that Orange no wait that's red oh wait no that's right what was my configuration to start with yep that's right red is with yellow yellows with orange oranges with white and white is with red I think that's right okay and then so actually let's do this let's now say let's do key pressed and I'm gonna say if the key equals F then I'm going to turn Z clockwise otherwise if it's I don't know capital F will it actually detect that key key equals capital F then I'm going to turn the counterclockwise okay did I turn it already wait no it shouldn't be turned when I start the program wait oh no it's not okay good F F so doing that four times gets me back right and if I do F back F lowercase F capital F so it's attorney I want to animate it that's gonna be I'm gonna animate it in a separate video I just want to I just want to get the turning working and guess what now I can do this as I can also have a index so it's not really a so in other words back would be back would be instead of having the number two here having zero so I'm going to say an index and then that will be here index so in other words I'm going to say that will be with two else if key equals B turns e0 true otherwise otherwise if key equals capital B turn Z with to false off with zero false so why does it not like that int index oh no in pulley and there we go okay so now I should be able to say so look at this if I say B it turned the back if I say F it turn the front if I do capital F I turn that back capital B turn that back ah okay people are telling me to use a switch statement all right we're gonna edit the part out of where I change this to a switch statement but I will do that I could never switch Java looks like I don't know why I have a mental block with switch switch key so I would say switch key and then then case F right case at case F and then dua case F and then a semicolon no case F semicolon turns E break right I should also do well and then I'm going to refill the second okay case B and then break case be false mmm break it's not right it's not a switch statement F is true wise capital F is counterclockwise and and B is right Oh wait I told you I don't know a switch statement switch month yes what how did you wrong it sauce to be indented but oh where's the break yeah okay okay all right the chat complains and I switch this to a switch statement and actually I'm gonna take this and put this on my moves tab where I'm kind of working out all the moves stuff I don't know F and capital F is a little bit awkward but that's fine right that actually could work as maybe I'm gonna pick random moves config get int is redundant yes I know why is back backs not inverted Y is be wrong be false I think I I think half true yeah I think people are seeing the old people are behind everyone stills telling me that B is wrong but I it was a full tummy back is going the wrong way let me look clockwise would have red on top well I'm I don't know what you're what you're all thinking but I'm gonna leave it the way it is I mean sure you could say that if I'm looking at the cube and then I want to have the back facing me but no no the point is I want the back facing away and I want to turn it clockwise which is what that would be okay okay fine I'm believing it the way it is lowercase B is true and in fact let's do this all right let me add another thing to refactor this a little bit let me just say boolean clock what CW for clockwise equals true and boolean CC for counterclockwise equals false so I can say this is clockwise this is counter clockwise this is clockwise this is counter clockwise okay now oh I'm wrong all right everyone is telling me that it's wrong all right so I'm not all right that's fine and now the chat is telling me that according to cubing notation the back bead clockwise if the back was facing you so these should actually switch so this would be counterclockwise and this would be clockwise or whatever it doesn't really matter or yeah so I don't know what I'm gonna do I'm gonna leave it it doesn't really matter as long as I could do it one way or the other way my shuffling it randomly is gonna work out but I'm trying I'll try to be correct in terms of cubing notation okay so now if we did turn Z all we need is turn Y and and I can get rid of my extra code that I didn't need and turn Y is I don't need this anymore I don't need this anymore I don't need this anymore turn Y is gonna do exactly the same thing but the Y is going to be fixed and I'm not going to be rotating Z I'm gonna be rotating Y and so now I need an config I need a rotate Y this is now becoming very hard coded but that's fine and Y means if I'm rotating why I'm rotating from front to right right to back back to a left so front right right back back to left left to front or back to right right till right to front and left to back so that should be rotate Y so now if I go here let's try left which would be turn y0 and right which would be turn y2 so let's see okay let's look at this all right right oh no that's not right I turned the bottom did that do a real move no wait no that that's that's wrong okay hold on Oh left and right is not turned Y left and right is turn around the xaxis left and right is turn left and right is turn along the xaxis so actually what am i doing now if I'm doing left and right I'm really wrote this is rotate X what did the let's but let's go to rotate Y which would be rotate Y would be front goes to top top goes to back back goes to bottom front goes to top top goes to back back goes to bottom which is down and this is up not top I could never remember that and down goes to front and then if I were to go the other way I would be going from back goes to up and up right back goes up up goes to front and front goes to down back goes to up up goes to front front goes to down that's right so hold on let's just put everything in there I'm sure I have something wrong now I need now I need four more moves four so I did I did what did I do I did front back I did left right which is turning along the X left and right is turning along the X and turning along the Y is up this is horrible this is no way I've got this right okay turn oh there is no turn X because I didn't make a turn X okay turn X is here keep that fixed and then rotate X okay okay let's see good chat telling me everything's wrong let's see okay so let's just see if my first ones are right the first ones I did was front and back front and then turn that there and then back back went yeah okay back when correctly turn that back whoops now all right so now let's try up which would be this no that's not right so up is wrong can I at least get it back yeah okay down two down actually nope down is wrong oh that that's weird down is wrong did I get right or left right right no it's totally wrong okay all right moves line 66 and 75 are wrong oh look at this look at this why what am i doing I have rotate Y twice in there for no reason at all rotate X twice in there okay let's see so let's try let's try right again does come back of it Wow whoa that's really interesting what am i doing look at this 1,400 people are watching geez Louise very sweaty because this is very stressful my sweatshirt okay so somehow I did the first one correct so let me even though I had all this extra stuff in here oops let me save this down at the bottom should have practiced this before I got here let me take all this out okay so turning on the Z which for me is front and back is working correct so let's double check that yeah that's working you can do four turns in the back I can do I can do the turns along the back as well okay so that's working so this code is right for doing that rotation along the Z now turn Y turn Y is turning around the y axis which is pointing up so that should be top and bottom top and bottom top and bottom I'm shift people are giving me lots of interesting comments okay top and bottom so let me check am i doing top and bottom with turn Y so turn Y and up and down sorry up is turn Y for zero down is turn Y for to so that's correct it must be the shifting that's wrong so let's be more thoughtful about this this this is clearly where it's wrong it's got to be right so if I am rotating the Oh top there should be no up or down oh there's an up and down in there that's wrong I should be going from left to front from front to right right to back they're just wrong these are just plain wrong I should be going from left left to front front to back back to right then I should be going from left to back back to front and front to right I don't know why I had it like that okay so let's try rotate Y once the cat is up and down yeah there we go there we go I'm rotating the top and let's rotate the bottom there we go I'm shuffling it around I don't know if that's gonna keep working yeah and then here we go so now let me fix rotate X rotate X if I have my cube X is the horizontal access so I'm turning right and turning left which is going from front to up up to back back to back to down and so I'm going front to up up to back back to down yet front note back yes yes front to up up to back back to down or back sorry back to up the be I keep thinking his bottom I just can't get a back to up up to front front to down I might have my clockwise and counterclockwise mixed up so let's see so this is now right should be I should see green go to the top and white come to the bottom and I should see blue something went wrong no that's right blue oh wait a second well I went the other way wait what I can't get my cube oriented like it is here yellow with green on the right no wait how did I do this I have yellow they turned the green so it's white blue and white yellow and blue yellow and blue green and yellow that's right all right now do these all so first of all let's check my clockwise and counterclockwise will you please I need to just keep the cube in one place and I need to think of front clockwise back clockwise in the same direction could I please do that I right do I have to move to cubies it's not up to back what's wrong front goes to up up goes to back back goes to down back goes to up up goes to front front goes to down rotate why is wrong good luck editing this Mattia okay why what time is it I got like I gotta take a break in a minute do something slightly different rotate why is wrong left goes to front yeah that's wrong left goes to front front goes to right right goes to back how did I get that wrong or left goes to back back goes to right right goes to different yeah so what was wrong why so why should be up and down right red goes to here orange goes to here Green goes to here red is back down mr. dare okay making a cube class would make this a lot easier I sort of did that's what this is I just have this weird config array which makes no sense okay okay this is not gonna extrapolate particularly well to higher dimensions but fine let me think here the question is do I need to move the cubes around or will this continue to work as I shuffle all right so hold on now I'm gonna check to see if this works with multiple moves so let me do up let me do right no that's wrong of course okay I have to move the Q's I have to move the Q's so I do need moving the cubes good thing I have that code in there I have to move the cubes okay so if you're just tuning in this is the code that I wrote earlier that sorry and this needs to be index this needs to be index what's wrong here duplicate method right of course if you're just tuning in this is the code that I wrote earlier that actually moves the cubes whoops if you're just tuning in this is the code that I wrote earlier I don't know if I'm saying just tune to tune again this is the code that I wrote earlier that actually moves the cues which it appears that I also need because I could just turn the faces but once I start doing multiple turns they're not things are gonna be in the wrong place so I actually do need to do this shifting of actually moving them around I knew I needed that for a reason I knew it I knew it I knew it okay coming back coming back let's actually so let's get rid of turn Z where is that so this is my old turn Z come on camera come back on but Y is wrong still or people in the in the past so I'm just tell me why is wrong but I think people are in different parts of the stream which is the problem Y was fixed it was wrong now it's fixed so now I should be moving the cubes and adjusting the faces correctly so let's see if I do the only thing that's correct right now is turning along the Z which is front and back and that's wrong because my turning is not matched with my clockwise this is why I need to yeah so this is actually not this is booting this by definition is moving them counterclockwise oh look at this so this has to change this is for this is if not clockwise shift them ahead to modulus how many spots there are the other way what I would need to do if it's clockwise I would need to say I plus order dot length minus 2 modulus order dot length now this is something that I've encountered a lot right you can't do a minus and modulus to wrap around the front but if you add the number all the way so you're sort of like a head of the array then you shift back and then use modulus you'll be in the right place so this should be right now with front and back so let's see this should be front clockwise no it's switching everything all right let's hold on hold on a second everybody let's go back to my original debug let's go back to my original debugging method to comment to highlight one cube as black then I'm gonna take off this rotation thing actually I don't want to rotate it here that's maybe the problem take off that rotation thing so now if I call move this it should move to there wait why are they is there still a rotate happening somewhere oh there's a rotate I rotated twice no wonder I think I might have this right so this is the cube moving clockwise that's how it should move this is the cube moving counterclockwise that's how it should move now let's see if this moves the faces correctly white comes up yeah that's right okay I think I have it right does it is it doing counterclockwise correctly counterclockwise is a capital F yes okay it's working this is right so this is right now I just need to do this this is unfortunate but I what I'm gonna do is and boy I can't wait for somebody to tell me in the comments how to turn this into one function but I'm going to actually just delete these and make a y1 and why the only thing that changes here is this becomes index and this becomes index and this becomes index and then rotate should be rotate Y think that's everything and again this really needs to be refactor I'm copying pasting all this code it's making my skin crawl but if I can get it to work I'll be happy so that's why and now this is X so turn X so the only things I'm changing our index goes here a and B are what's changing index goes here a and B are what are changing index goes here a and B are what are changing and then this is rotate X okay okay okay turn oh this is turn x and duplicate method oh because I what how many times if I am I have so many copies of the function no what did I do okay turn X this is turn Z what have I done that's turn Z this is me copying turn Z and then not using it well let's get rid of this this is turn Y right y yes rotate Y this is turn X yeah okay I think I had some extra copies of the function okay so let me just make sure turning turning Z still works okay that works and and turning so let's try the black cube is on the left so let's try left goat went down oh that's not right right right because if that cube is coming down yellow should be coming with it so the the rotation of Y is backwards so one way to do that is you know who knows what's clockwise and what's not clockwise but I could just walk these to look this is X actually sorry left is turning along the xaxis so I should be changing it here so let's just for whatever reason I wrote these differently okay so now let's try turning left wait did that did that actually work oh yeah that worked it just went the other way yeah it's going it's going the right way read staying there oh that's actually working it's just going that's who knows is that clockwise or counter clockwise what's the cubing notation I don't know but I can make it go the other way yeah okay that is working that is working okay and now let's get this back to here so now let me see if I did front I did left let's see if up works yeah that works so what if I do up and I move that there and then I do right and I move that there and then I do bottom whoops that's back B is back and then if I do left I think it's shuffling correctly I think it's shuffling correctly how do I get it back well I could shuffle it and then just play all the turns in Reverse right and I've solved the cube oh I got to get it to animate I think this is right let's I think I'm done with the turning phase the next part is going to be the animating but let's see let's see if I can follow along okay I know unfortunately all right let's do this this is way too big let me make this smaller so this can be back here put this here and put this here all right okay so let's see if I'm the red unfortunately didn't I can't do it this way facing you I've got to do it facing me so let's first do a front turn okay let's do a right turn let's do a back turn let's do a front turn again let's do a left counterclockwise turn it might not actually be kind of clockwise we're gonna do capital L so that move out this way alright let's see is the cube correctly configured yes on that side it is on this side it is on this side it is I dare I say that this is actually working yes okay I think that's working I mean if I code is terrible but I got it to work oh wait no I have to suck I shuffled my queue but that's fine I'll solve my cube later let's now this video is just about done but let's at least do a demonstration of well actually I don't know what else there is to do so left has counterclockwise and clockwise mixed up yes I will I'll deal with that later I'm gonna I'm not so I'm not leaving I'm just gonna be I'm gonna talk to you about a sponsor of this livestream brilliant for a minute I'm going to take a five minute break and then I'm gonna come back and when I come back I'm gonna do the animating which will make it much more interesting if I can actually watch it animate in turn I think that's gonna be famous last words slightly easier but we'll see we'll see we'll see okay people are telling me clap clockwise and counterclockwise are shuffled that's fine I don't care I'm so happy that I got this working okay we get rid of the okay hold on this is bothering me okay all right so before I go I'm going to change this key pressed function to move and I'm gonna give it the argument key although int I guess that's car key and then I'm going to create an array car moves equals up up down down whoops front front left left right right so these are all the possible moves now in draw I'm going to set the frame rate to one I'm going to pick a random number which is the zero between all the possible moves then I'm going to say the move is moves index R and actually I'm just gonna call the move function moves index R so what this should do what happen to my frame rate one its shuffling it how come frame rate one didn't work does it not work with PZ can hold I have a feeling it doesn't work with PZ cam no it's not the problem I know what I'm gonna do let's keep the frame rate and just say if frame count frame count module is 60 equals zero then move so it's doing a move and I can get rid of highlighting this cube and I think we can make it move a little bit more quickly and then let's put the move on the screen also so let's say fill 255 and I'm gonna I'm gonna have a character called latest move which will be nothing to start and then I'm going to say text latest move I don't know put it in the top right I'm sure Pete this is gonna totally be messed up with PZ cam oh how do I have text with PZ cam this is gonna be a problem let's just let's just print line latest let's just do print line so I'm gonna figure out drawing text later I'm going to print line no moves index are so you'll see that in the console down here one with all these weird error messages and forget about the latest move and here we go so now you can see this is the end of part two this 741 our video that you just watched and hopefully had some editing in it that made it somewhat tolerable to look through in theory if I've done everything correctly what I'm doing now is I am playing a sequence of rubik's cube moves if I could follow it along and there I'd have the exact same configuration here there's no reason why I couldn't undo it and play it in backwards to see it solve and I really should try to do that to make sure this works maybe I'll do that real quick I'm gonna take a break I really should try to blend play moves backwards to let it solve I'm gonna do that in the next video I'm you could try that as an exercise if you haven't gotten to part three yet in part three I'm also gonna animate these moves because it's really hard to see if it's doing it correctly so let's see hold on people are talking you have my move list wrong up up down down front front left left right right I forgot back one two three four five six seven eight nine ten eleven twelve that makes sense six times two sorry I forgot back and back so now if if everything is correct this Rubik's Cube is shuffling and I am in the next video going to just quickly to make sure everything's working correctly I'm gonna have it play it backwards to see if it can solve itself that's not really solving it's just playing the sequence backwards and then I am also gonna animate it so once we animate it will really see the Rubik's Cube come to life thanks for watching and see you in part 3 people Oh is something definitely wrong I'm not leaving I'm just these videos get Edit for those everyone who's new watching these videos get edited and uploaded as separate things later so they're there I don't know if they're more watchable or not but but that's why sometimes while I'm doing the livestream act as if something is finishing I will leave at some point in the next hour or so okay don't say goodbye I'm still here is it doing weird behavior that's impossible yeah oh no no no that's just if it's you're seeing multiple cubes change if it's a front move if it's a front move then it looks like a lot of cubes are changing and different rows but it's not it's just the front moving so it should be fine yeah the center point that that Center read should always be read is it ever gonna change it should never change it hasn't changed so I think it's okay I'm not sure lip all right so I need to take a I need to I need a minute I need to take a break from the Rubik's Cube so I was like to tell you about the sponsor of the coding train our friends over at brilliant org brilliant org is a website that has a lot of courses and puzzles and learning materials and forums for discussion I don't know if forum is the right word but you can have a discussion about the solution to various puzzles and I've been enjoying using it with my son who's 10 let's go to the brilliant website real quick and I'm what I would like to do is what I would like to do today is actually pick one of the puzzles and just see if I can whoops I'm on the wrong website I don't know what I typed in but I misspelled brilliant I think I'm on the website here and what I'm gonna do is go to the daily challenges these are the one of the favorite things I like about the brilliant website if you want to follow along and try to do this challenge with me you can sign up at brilliant org slash coding train you can sign up there for free there is a premium subscription for certain aspects of the website and the first 200 subscribers who sign up from the kodi train will get 20% off all right so let's go to this what's the overlap puzzle daily problem and let's let's read let's read it over this I looked at this on the subway this morning I haven't tried to solve it yet I do you think this one is a relatively simple one run there's a lot of really difficult ones and easier ones I wanted to pick one that I felt somewhat confident I could solve and so let's look at this so how many so this is about set theory and intersection of sets so we think of the sets of even numbers so let's let's diagram this a little bit where is my eraser so if I think of the sets of so one set is all the numbers from 1 to 100 another set is all of the perf all the even numbers just put that over here this is all of the even numbers this is 1 to 100 and this is like a Venn diagram we've got going on here and then perfect squares so what's a perfect square a perfect square is any number that if you take the square root of it you'll get an integer not a not a not a decimal number so something like for something like 25 these are perfect squares so this actually shouldn't be too hard because we can basically say we know that this this has every number in it so this probably this is like the least then we may still want to say what are all the even perfect squares so the maximum number we can get one the 10 squared is 100 so 10 is definitely in our intersection here 9 squared is 81 so that's not even so yeah I think it turns out that it'll be any even number that we square sorry so 8 6 4 2 not 1 squared is 1 so we have 4 8 36 64 100 so this is our these are all of our numbers that fit in each one of these categories right about this let's go over here and let's I'm I logged in hopefully I'm logged into my account I am I'm going to pick 5 and hope that I got right get it right Oh what are you streak golf or from tomorrow to extend my streak I guess like alright so I'm definitely gonna have to extend maybe next week when I come to my livestream you'll see I have an eight day streak that would be nice but let's do a little bit more with this let me go to the p5 web editor because I think what could be interesting here is let's say oh I'm not how come I'm not logged in here that's irritating what I want to do is I want to post a link to my solution and then see if I can get some comments from you and and in different and different examples of this so let's just say I'm gonna have make a canvas that's 200 by 200 so what I want is I want to visualize every single number so I need a 10 by 10 grid so I need to have in processing land I am now in JavaScript I'm now in JavaScript I need to have a number of columns which is 10 a number of rows which is also 10 and then what I want to do is I want to say for let I equals 0 I is less than columns I I plus plus and let me just let me name this as a brilliant challenge then I want to say let me keep auto refresh on why not well that's a little dangerous here if I'm writing a loop let's do J goes from 0 J is a number of rows j plus plus so this is a nested for loop that allows me to if I'm doing everything correctly I'm gonna say stroke 255 fill 0 a rectangle from I times well and then I'm gonna have I need to have a width this is a square so I'm just gonna call it like just W for width and I'm going to say with divided by columns i x WJ x w with with i mean i can just use this because it's a square I can actually use the square function let's keep auto refresh on there's my grid what I might actually like to do is say with minus 1 just so I can sort of see it and then let's put let's do textaligncenter text and then so what is the number the number is I plus J times the number of columns right that would give me every single number and let that'll give me every single numbers it's going to be 0 through 99 and I want 1 through 100 so 1 plus that and then let's also let's put x and y in variables because i'm going to need to use this a lot so x and y and then i want to draw that text at X comma Y and say fill 255 no stroke text size 32 so there's the oh but all the numbers are in the wrong place so we need to shift them over that's all so let me give myself a bigger canvas to work with and then let me shift the numbers over so X plus W divided by 2 y plus W should put it on the bottom let's see W / let's say text align our said Center close enough so I should really be more thoughtful like need to shove these down a little bit let's just actually like do this manually let's say Y plus 16 no y plus 24 y plus 32 that's what I had y plus 4 feet there we go that looks good so now I have a grid of all the numbers so now what I want to do is let's determine if it's a even number so well if it's a number between 1 and 100 so let's say the range range equals the result of the number being greater than 0 and less than or equal to 100 greater than or equal to 1 and less than or equal to 100 this boolean value what kind of job scrip do I have wrong here am I like losing my mind shouldn't this evaluate to a boolean unexpected token I don't need Oh num num means here yeah sorry okay so if it's within this range let's draw the rectangle let's draw everything after so if range if it's in that range fill and I haven't calculated the number yet so this has to move up here if it's in that range fill zero okay so now is it what's the other one is it even even equals M nom nom modulus 2 equals 0 else if it's even let's give it like kind of a dark greenish color what have I got wrong here Oh Armour and the chat is telling me I could say textaligncenter Center and then I can do this thank you for that that's perfect but why am I not seeing green green for even oh I forgot about fundamentals of programming I forgot about fundamentals of programming here which is that I forgot about the fundamental program here which I need they're all gonna be true range yeah so this is what I wanted to do I I don't know what I'm doing here really I just was gonna like so let's check for even first range there we go so now I can say okay those are all the even numbers now this is a fun one let's try to detect if it's a perfect square I'm sorry to say perfect equals so this would be true it's a perfect square if the square root of the number is a whole number in other words if the square root is equal to flooring the square root I think this would do it so I'm pretty sure and only give myself a little more space here I'm pretty sure that this would give me that that's the way to detect if something is a perfect square you take the square root of the number and if it's the same as flooring the square root then it's a perfect square so let's chest if and then let's so let's do if it's perfect else if it's even else if whatever elf else if it's F if it's in the range this is sort of silly because what I want to do ultimately is just show the intersection so I'm gonna say if it's a perfect square fill 0 alright so that's a perfect square but it's got to be a perfect square and even and in the range and there we go is that what I had for 836 64 100 where's 8 wait hey why don't I get 8 that's fine what did I write 8 oh no no no for 8 3664 wait 16 I had the wrong number there all the time I had the wrong number here all along I'm sure you were all telling me this this is for 1636 64 for 1636 64 100 that's 5 and so now let's just say otherwise fill like let's get it kind of we can see there we go so this is my solution to the brilliant problem so now what I'm gonna do is I'm gonna I'm gonna go to the brilliant website do I have that still here or did I did I lose that let's go to brilliant org well camera went off and I'm gonna go what's the overlap I completed that challenge let me see here okay I programmed a little visualization in JavaScript with p5 GS that you can enjoy here and then oh I can upload an image so let's also do let's do a save save brilliant dot PNG no loop and so I have my PNG here now that I saved which is this and now let's let's see where is that downloads here it is let's upload that lets it preview there we go oh that's probably not a link so let me make this actually a link so I think oh it's markdown how nice so I think if I put this here and do source code and then do preview this should take me whoops this should take me to here I said take so long oh because I still have that save in there I don't want to keep no why does it take so long my browser is just being slow I think I'm not gonna worry about that and so now I am going to post this explanation and so now I'm going to ask you to if your so if you're interested if you feel like you have a few minutes right now to just help support the coding train go to brilliant org slash Kotick train sign up for a free account come here maybe make a version of my code post it post a comment on it give me some helpful claps I'm sure I got something wrong tell me about it but I'm sure you can make even you could be more thoughtful and beautiful about the visualization that you make so thanks I'm gonna be back to do animating the Rubik's Cube I'm gonna be back in about five minutes or so so what I'm going to do maybe I will leave this up here normally I just go to the coding train wallpaper but what I'm gonna do is I'm gonna make myself disappear which is this I'm gone now I'm going to put on some music I'll be back in about five minutes please you have a few minutes I took the time to sign up for bleed or get blade under 23 I'll be back as always I always forget the dis stop this stop just stop this stop this stop this stop and then read this stop this stop this this stop this stop this done and we do this stop just stop this stop stop stop this stock the stock never forget this stock I'm gonna do this stuff this stock this dad the star this stock song never forget the Vince dot misses somebody compose that song for me okay my mic is back my face is back up whoops my camera is off hold on a sec okay all right I'm back I hope you had a chance to sign up for brilliant and maybe share with me you were let's share with me your version of a solution to this challenge look at this we already got some comments that's people are watching the live stream awesome that's great to see you here thanks so much thank you to brilliant for the opportunity to talk about brilliant have the sponsorship of this channel it really helps me out and thanks to the audience for participating in this little quick challenge alright so I am going to put this away now and I I'm gonna save this code here I will post a link I guess I post it on the blame website to this code in the video's description but I'm gonna close out of the web browser and I don't need this anymore I don't need this and Here I am people in the chat are talking about a discord so let me let me say something about that so I believe there might be I'm like an old person so I really know about this stuff I believe that might be an unofficial discord for the coding crane which I would be happy for the community to selforganize I would point you to the coding train code of conduct which is on the github repository for the coding train even for an unofficial community associated with the this YouTube channel I do have an official slack channel this is by invitation only and the way to get an invitation is to sign up as a supporter of the coding train through patreon or through YouTube membership there's a little join button that you probably actually see right below watching this fair enough it's on mobile or desktop or whatever but YouTube has a membership which is basically a monthly subscription and I'm using and that's helping me maintain this channel and do this stuff so if you're interested in that whoa I think the stream went down all right up mmm yeah okay I think a green light so I think I'm back I don't know if anybody heard anything I said about discord and I just realized well let me check something you lost me after mentioning discord okay so I'm afraid to jinx myself and talk about it again but what I was going to say is a wait I'm getting okay um what's going on ah all right so I was saying something it's working now I see the green light I've shown about discord so I believe there might be an unofficial somebody might have spun up a discord that's a coating train I'm I was saying that I'm an old person I don't really know about this stuff I don't and but I so I support that if a community if the community watching the channel wants to selforganize I would point you to the code of conduct that I have in the github repository to adopt as well I do have a slack channel this is a private slack channel for patrons who sign up through patreon comm or joined as a YouTube member so there's YouTube has membership so I'm kind of using both of them maybe I need to think about if that really makes sense but that's what I'm doing right now so there is a smaller discussion group there that you are welcome to join if you have the ability to do so and I would thank you for your support okay so here we are going to see where I am here this is where I was before okay Oh I'm seeing red again now I'm seeing green I think there are some issues with the stream shoot how's it working for everybody yeah I'm seeing I'm I'm seeing in the open broadcast studio dropped frames so I might have to stop for today if this is I maybe I'll restart the computer that's about had this issue before yeah let me I'm going to I'm gonna restart the computer that's one thing I can try I'm singing Yellow and red still mmm not a good sign continuing close this yeah so I'm seeing red in the which is not a never a good sign let me ask let me is is everybody you can hear me but you can't see me let me hit record yeah this isn't good this has happened to me before in which case it seems to be some bottlenecks somewhere when I've checked my internet speeds everything seems great maybe this is the end of the stream for today well lost so many viewers so sad we had like 1500 people watching yeah I know the stream is freezing Oh green I see green all back to orange back to yellow back to green let me just maybe the problem will go away and I will while that's happening I'm just gonna play around with this code for a little bit let's see here so for example these are the moves so let's do a string oh wait but my clockwise was wrong so let's look I hold on let's keep keep rest let me not have it move automatically alright let's see let's see if we can fix lower the bitrate yeah let me just see here so what what I would like to know is if okay if that is my cube is not solved all right let me solve the cube a run has 20 moves yeah so for me is that clockwise so I would say for me that's not clockwise that's counterclockwise so what is my convention oh yeah lower case is counterclock lower case u is counterclockwise so that's right upper case U is clockwise okay now down that's counter clockwise lower case D upper case D is clockwise okay great now let me try write to me green being on top would be clockwise so that's clockwise so if I want to be consistent lower case these are backwards hold on lower case are up lower case up is counterclockwise clockwise okay so write lowercase R should be clockwise which is not so cc these are going backwards clockwise is wrong on turn X so where is turn X so two things are wrong rotate X is backwards and this is backwards so let me switch this and then let me also go to rotate X and put this here and put this here all right so now I should have clockwise so clockwise green should go to the top whoops no no caps counterclockwise yeah clockwise is capital R perfect that's good counterclockwise is the other way here left clockwise its capital L that's not right oh but what's counter on the left oh oh I see this is the front and back problem right because cuz right clockwise left clockwise is the other way well that's kind of annoying so I need oh it's green again it seems to be working I think it should be okay right now no that's a little bit better than it was before back to red Kevin is writing that's why you need consistency in what it means clockwise counter clockwise so yeah I see so it should always be opposite clockwise should be one way on one side and the other way on the other side so technically speaking this even though like this is clockwise this would actually be clockwise for the right even though this is clockwise the bottom this would actually be clockwise that's so weird though maybe I shouldn't call it I'm trying to figure out what's the right notation here that I should use so right now up and down clockwise clockwise so should clockwise here's my question and give me the answer in a full sentence its relative to the faces center so up and down would be clockwise in the same direction but right and left would be clockwise in opposite directions as well as front and back clockwise is always clockwise when you look at the side you're turning but what about for up what about up and down so by the way when you just write yes you're writing the answer to my question like 30 seconds later then I asked it there's a lot of chat so I can't actually determine up and down or up though so up and down are opposite because it says if I turned it to have it look at me yeah so clockwise clockwise clockwise ah so they are opposite okay great imagine looking directly at the face got it so how do I do that here because that's not how I thought about it but I can get this I can get this okay then let's get this right let's get this right but at least I know what it should be now so the only thing that what's right right now is I'm looking directly at the face and I'm gonna go clockwise great so that's correct counter clockwise now that's for now I'm not looking directly at the face am i yes looking directly at the face so now if I'm looking directly at the face for back and I want to go clockwise I didn't did I just go clockwise hold on I'm looking at the face for front and I want to go clock ah I switched it here I see so that's what I'm just gonna do my this is kind of wrong but I'll just do it that way so I see I see I'm gonna do it I don't love this but it'll work so I'm looking at this face and front clockwise back clockwise clockwise so now so that's right now let me do left left does that gonna go clockwise yes counter clockwise yes now right right is that gonna go clockwise no so right is wrong so I'm just gonna switch it why not right so left and right or right and now I have to do up and down so up if I'm looking at it is it going clockwise no that's counterclockwise so up should also switch and down and down am i going clockwise yes am i going counterclockwise yes okay how is the stream going still lagging I think I have it right now so front back clockwise should be actually counterclockwise if I'm looking at this direction yep right clockwise left clockwise should actually go the other way but it's that means and then top clockwise or up sorry so I just do up already up and then bottom or down yeah okay I've got it now yeah sorry about all the lag so this should be fixed now all right let's see if I can I don't like having the characters as a move because I would like to make a move class that has because that's way that's also gonna help me to animate it I don't know if I should do the third part with the terrible lag yeah the lag makes the livestream unwatchable which is very sad to me it could do the challenge anyway and it's being recorded to disk I also could move on with my day hums are your friend yeah Dheeraj is being kind saying i should go have lunch alright let's let me try doing the third part with the rotation why not I hope by the way I forgot to record two discs that first part usually I can still make the edited version by sucking it down from YouTube there was no lag or issues in the first part of the livestream right that was fine hopefully that works alright I'm seeing a lot of green now so I'm gonna I'm gonna push forward alright let me put this back in okay let's do this I'm recording two discs now okay okay hello welcome to part three of my Rubik's Cube series so so far what I have is I have a simulation of the Rubik's Cube and I'm shuffling it with all possible moves up down left right front back both counter and clockwise and counter clockwise now I'm not a hundred percent sure it's working correctly one is because they're not animating it it's I'm not I'm not a be able to visually just like see oh for sure it's working but also another way for me to test to be sure it's working is for me to do the a random move sequence in Reverse so if I were to pick 20 moves and then do those 20 moves in Reverse I should have the cube back in its original state so I do want to add the animation but I also want to make sure what I'm doing is correct before I add the animation so right now I just have an array with a character for each possible move as I am overengineering this I think I might actually like to have a move class right so the move class would have a character for like which move it is and then it would also have a direction maybe one being clockwise and negative one being counterclockwise because that way I could and maybe let's make this as yeah I'm trying to but I want I need I need a function to be able to say do the opposite and if I just have lowercase and capital and I think if I could use math that would be ezel easier if I could multiply it by negative one so I'm gonna say a move is made with a character and a direction and I think what I would like to do here is I did have I did have these blends clockwise and counterclockwise let's just use one I'm gonna use the convention right now that one means clockwise and negative 1 means counterclockwise so rather than use I'm just gonna one is clockwise and negative one is counterclockwise so I'm just going to put a note up there so now I can have the move which and I'll use I could use this or I'm just gonna use underscore so that's the move and then what I can do is I could say I could write a function reverse which basically what that does is it returns a new move with the same the same face but the opposite direction again this might be over till but I think this will be this will be nice so now what I want to do is I want to create this is still fine no no no I want to create an all moves array that has how many moves did I say it was 12 and I'll just manually set this up I'm going to let's so let's write a function that's like in it moves and I'm gonna say moves 0 equals new move up with clockwise and this should be all moves and realizing there's a little bit of a flaw here but so I have one two three four five six again this there of course would be another way to do this without hard coding it and if I ever want to make a cube that's not 3x3 I'm gonna have to refactor all this to think in terms of to automate this too to have algorithms that generate all the booze have everything indexed numerically but I'm gonna have up negative one and one down negative one and one right negative one and one negative one and one I'm doing what negative oh it doesn't really matter it doesn't matter the order I mean it should be consistent left negative 1 and 1 well up up down down right right left left front front what did I do wrong here something is wrong I have the real 1 0 1 2 3 4 5 6 7 8 9 10 11 that should be 12 how the heck am I ran out of space back there's not 13 of them back back up up down down right right left left front front back back 0 1 2 3 4 5 6 no there's no 6 in there 6 7 8 9 10 11 1 negative 1 1 negative 1 let's just be consistent 1 negative 1 1 1 negative 1 1 negative 1 1 negative 1 1 negative 1 ok there's all the moves look at the chat is just 6 6 6 6 6 6 okay those are all the moves now I want to change this now to oh oh this is so sad so how could I turn a mu I could do that I need a unique code for each move this is why I would be nice to have a number all right let's do it this way each move also gets a number 0 1 2 3 4 5 which is just its index 6 7 8 9 10 there's a thing in programming called a for loop 10 11 okay and now my move object needs also an index and so let's also give it an index and that way the move so crazy is the order of the moves is up up down down right right left left front up down right left front back so this should be where's up down turn i have XY z and Z's and ups and downs I notation is insane I can't wait till somebody like redoes this in a completely logical way but this is up and down so up and down let's take this out here up down is first and index switch index is 0 up up down down now I want right and then left this is so crazy what I'm doing up up down down this is now very hard to read I've made a mistake here down down I'm gonna do right left that's turning axes right up let's put some comments in here up down right right up down right left so let's go get left here's six maybe this part shouldn't be in the video six seven left right left front back okay I think I'm good so I just numbered all the moves up down right left front back everyone got me to try anon you can't use email effectively in processing you could use X or with 32 to flip the letter case that's a good idea okay now all right so I have all my moves they all have an index they have a up down right left forward or back and a direction clockwise or counter clockwise and again all of the notation is completely arbitrary and this really means okay so now what I'm gonna do is I am going to pick let's just make sure a random index of all moves and I'm going to move that one according to its index and I'm going to print out its character its direction and its index just to see and this should be all news and what do I have Rubik's Cube move car int oh this is very silly but that's fine and index so the car is now completely unnecessary the character is completely that necessary I need a mapping of integer to character with enum but no pointer exception all moves are all moves length oh did I forget to call in it moves so I need to call in it moves to create those moves all right now we're back hopefully to what I had before shuffling the cube I swear everybody get to animating this at some point we're shuffling the cube okay now what I'm going to do is I'm going to count up to 20 so I'm gonna create an ArrayList I'm gonna call this an ArrayList of moves called sequence so every time I pick a move I am going to say sequence dot I'm add the that move so I want to say move M equals all moves index R then I'm going to move based on that index number then I'm going to print out the stuff now that I have this em just to see it and then I'm gonna add that to a sequence and then if if sequence dot size equals 20 then and I'm going to have let's see state equals zero then I'm going to say state equals 1 so if state so always every if state equals zero otherwise if state equals 1 what I'm going to do is pop every move out of the array so I'm gonna say move n equals sequence dot pop that should get me the last one can I say pop with an ArrayList Java ArrayList pop because there's no pop function for getting the last one and removing it I guess not I could do remove the last one your else is on the wrong if a non pull request there's already an email or request whoops this is by the else's in the wrong place thank you chat so I guess there's no pop for a ray list but I can remove the last one by saying sequence dot size minus one that would remove the last one and then the move that I actually want next move is m dot reverse and then I want to say move next move M and so index and so I'm gonna say if sequin as long as sequence is not empty then do this right as long as sequence is not empty do all the moves in Reverse and then when if it's empty then say state equals 2 so it'll stop doing this there's no way this is right so in theory what I'm doing is I'm racking up a bunch of random moves 20 of them then I'm doing all those moves in Reverse and then I've done in it moves except I have some error somewhere I'm missing a curly bracket so what's wrong you know I'm missing a curly bracket somewhere ooh look here I think that's a missing in curly bracket okay what's the chance this was gonna shuffle the queue and then uncouple it back to the place I would you might probably like 10% it's going backwards now maybe oh it can't be the same index as the current move all right the index is revoir on O because I did my ridiculous index thing what a terrible idea oh so it's always plus all right oh oh boy my direction idea is like pointless all because all because I did all because I'm using a switch statement all because I'm using the switch statement I just had my if statement is there any way to do it and with a switch statement really what I want is really what I want is I want an if statement I'm going back to my if statement by golly because then I can get rid of this whole index nonsense that was the whole point of this matter we can like fastforward through these little segments I'm gonna when you do an edited version even when I'm talking I think it makes sense to do that getting rid of this if index thing was a bad idea you don't like it don't like it at all I'm doing it and then where else are they using move forget this index nonsense it's such a bad idea let me have let me have my if statement please right if I could just move based on which move and which direction this will be so much easier if which oh I could still do it with an if statement inside of the switch statement switch which if the case is up turn oh and it's a silly just put the direction in there look that's what I should be doing put the direction in there oh this makes so much more sense case down turn why with the direction up or down this could be up no no no no no no no case down is with the direction case right case right is turn x2 and the direction oh no no but I have these all flipped no this is a bad idea because of the because of me wanting to conform to precisely clockwise and counterclockwise I'm gonna use my if statement I look forward to all of you re writing this code in a smarter way well somebody's telling me somebody is telling me that I can do a switch statement but I let me just know for sure that this is working correctly here we go I'm going to rewrite this with an if statement now and doing this in total silence because I want this to be fast worded in the edited version so I don't want to say anything important by accident all is right with the world ah look at that isn't this lovely look at that beautiful code up down down right right left left forward four back back yeah I think I got that all right and now now okay so what's what's wrong here so I'm still I'm making all the moves but there's a syntax error here where's the syntax error somewhere and there's no such thing as m dot index anymore that's good so I want to move m dot which m dot direction no such thing as index anymore and then the next move is I don't even have to make then I could just multiply it by negative one see I don't even have to do this but let's let's do this reverse thing anyway the next move which next move direction so that should be doing it backwards I have some error somewhere oh I forgot a semicolon okay let's see if this does it all right I want to actually hold on sorry I need to see some reporting about where I am so let's just do oh but text is text not going to work how do I use text and PZ cam that's the badges have to print print it so let's print so I don't need to print out the moves let's actually just print line a print line sequence dot size so we should see this count up to 20 and then back down it's shuffled it and solved it I mean it didn't actually solve it it just did it backwards so now I could do like you know forget the whole frame count thing just do it every frame and do like a hundred moves this is fun to watch shuffle shuffle shuffle shuffle shuffle shuffle and I can still spin around it while it's doing it and then BOOM thank you oh my god that's exciting alright remember how I said I was gonna animate it the whole point of this video is to animate it so how am I ever possibly going to do that so first thing first let's comment out this whole movie shuffling it thing so I'm actually let's put that in a function I'll call that function a shuffle so I have that code shuffle on shuffle okay so shuffling shuffle that's what that function is doing now this one the one hand animating it is really easy let's say I just want to animate one face well basically like what if I want to animate the front face the front face is the Z and when the front face is every cube when Z is equal to two so I could say if K in this case K is in a equals two rotate by some angle push and then well this is a little bit silly but I'll do this anyway pop and then otherwise show it anyway without that so I think this would be and then if I have an angle some angle if if I increment angle by some amount and I have to say rotate Z no Z what am i what's wrong here pushpop k equals to push rotate show pop otherwise show that's what I meant too many if statements all right there we go so on the one hand it's as easy as this right this is me spinning one of the sides you can see how it's coloured the other colors are still there okay so in the one hand it's as easy as that so what I need to do is let's say basically what I need to do is whenever I trigger a move the move is associated with a given I J and K oh boy this is tricky thinking about this that's front right so let's say I only want let's let's only do the move for front so what I think is that this angle this angle variable I think I can use this move class no yeah because I'm about to do a move first I need to rotate okay so I do this angle is gonna get reset to zero and I what I want is a boolean variable called animating so let's get the bear with me I think I have an idea here animating is false no when I'm about to do the move there's a function called start which animating would then be equal to true then there's a function called update where I would say angle plus equals zero point one if angle I only want to go to 90 degrees if angle is greater than or equal to half pi and this by the way this would be the direction so this would this is gonna also work for the direction I think if angle is greater than equal half high then I want to set the angle back equal to zero and animating equal to false and then I want to actually do so I want to do this fake animation and then manipulate the data and this is purely for the purpose of animating it fake animation then manipulate the data so let's just say that what I want to do is I'm gonna start with a move which is a new move which is front clockwise right I'm gonna make a front clockwise move and then and then I'm gonna say at in setup move got to start so this will be the current move we need a variable that's like current move so I'm going to say move current move start so I'm going to say here if current move animate as it was it animate animating animating so one thing would be if so I could always say current move update so I'm always updating the current move if current mood is animating do all this rotate Z current move dongle and I don't need this anymore so this is now doing it in that move little ki if current move current move start animating is true update angle it's coming out in it moves I don't want that doing anything with that array oh right only if it's anime but it isn't yeah this is really what I want if current move is animating and only I'm gonna have to figure out where I'm doing it but that's actually makes more sense otherwise show so update this should be if animating oh why why why let's look at current move animating true false false so quickly why was it false that quickly oh there we go point one was just too much great okay so look at this that was weird why is 0.1 to fast Oh am i inside the loop where I'm up no update current move animating rotate by the angle this should still be once per frame what's going on here I really like stuck here why is point one too big of a number yeah I could do I could lurk lerp would be actually a nice thing I like the idea of doing lerp but I still understand why this doesn't work I guess it was just that fast crazy hmm like I guess maybe it's angle initialization but I said it's a zero and this should really be up here yeah Oh yeah all right I'm stumped uhhuh I shouldn't be livestreaming for three hours it seems to start the rotation too late right there's a delay when starting up that's what the issue is okay anyway alright so there's just an issue where it's taking a while to render before but it's working the thing is you'll notice is when it finishes rotating it puts the angle back to zero so one thing is I could do is I could take this off oh but I'm sending up one thing you'll notice is it it turns animation off and sets the angle back to zero so even though it moves this stuff it's not in the right place so this is why I need another function I'm going to call it execute which is actually execute the move and what that is is call this move function that's the global move function move with so now if I do execute here it would actually animate it and then actually execute moving the data let's see if that works yeah see okay okay so now the only the thing that's hard coded here that's a big problem is this like I need each one of these moves to know which dimension its operating on which dimension its operating on and then I need to test for that here and then alright so so there's three oh there's three there's three possible dimensions so so this is only if this is if current move I think actually so I could do this which is up so up up goes with K equals two so there's three axes here so now I'm going to do the same thing well o could be down down o down would be if K equals zero again there's a better way to do this it's really up or down I'm thinking about this this dream is long and frustrating more hardcoding I know I feel like I'm so close to finishing this that's why I kind of want to keep going thinking about this the move could have the the move would make sense to have the number two in at zero or two the question is how do I have the access okay here's I've got it I've got it I think I've got it this could have an ayah J and a K bear with me and for any given move we're gonna set so which this which thing is actually false what I really want to do is up is our front is zero zero two back is zero zero zero right I want to not zero but it's it's so I'm gonna use a negative one so what I'm going to do is so for example this is there's redundant information in here but okay so every moves gonna have associated with it and I a J and AK a quaternion attorney ins is definitely the way so when I make the move this move that I'm making is negative 1 negative 1 2 okay so what I'm saying is here if current move is animating let's just ask that for a second then what I want to know is if if I if current move dot I is not equal to negative 1 and I is equal to current move I this would be that would be for moving and in this case I want to do K so let's do okay current move K is not equal to negative 1 and K equals current move K then rotate I probably should be doing this inside the cube but whatever otherwise just show it without the rotation and if it's not animating just show all of them there's a lot of redundancy here it's kind of hate this code but I think I'm getting somewhere right what I'm saying is if we're animating check to see if K is the thing to rotate otherwise just show it without rotation okay oh okay so let's not worry about this right now this is would be the same it's just changing the direction okay so that works that rotated it and left it in position okay so now pretty sure if I were to say here right here so if current move dot J does not equal negative 1 and J equals current move J then do all of this but for the yaxis so that should do the yaxis and then oh this is like kind of the worst obviously I want to clean this up to not have all this redundant code but let's do the xaxis okay so that I wish it wouldn't I wish it would wait let's do current move to start e'en mousepressed okay so now it should do oh I click the mouse right I didn't mean let's do that again let's do that move boom that's clockwise front okay now let's make the current move the current move should be back which would be the same but zero index that's right I haven't accounted for the direction yet let's do right so right would be to Z 2 negative 1 negative 1 yeah that's right yes this is working left is the same but a zero oh that's not right ah because the left look at that it's wrote left his counterclockwise right it should be going the left clockwise should be going the other way so left is technically negative one would well no this doesn't do anything yeah that that's right so going counterclockwise is its default way oh oh I've really botched the whole clockwise counterclockwise I think I need to give up on trying to be clockwise and counterclockwise and just have everything go in the direction of the axis like I need to forget about reel clockwise and counterclockwise that's going to make everything so much easier so where are these if I comment these out where are they being used like what if I just did what if I just used I'm just going to use the direction I'm gonna be consistent so this gonna make life so much easier this is so silly I am just gonna use the direction and by the way now I could just use the index but let's not let's not worry so we just need up down right left forward backward so much nicer up down right left forward backward so now just the turn functions the turn functions should just have a direction and then here should be I'm gonna break so much stuff by doing this but I'm gonna like it so much more and now okay then the rotate functions need this to be a direction it's not working oh where am I I've lost I'm lost I gotta go this is part three I'm gonna have to come back and do another time I should have just stuck with part one today let's go back to what I know sort of works what I started with front oh this should be negative okay front is working I can keep moving it awesome can I make it go counterclockwise now can I make it go counterclockwise so let's make a move go the other direction so it's still gonna rotate that way but the pieces interestingly enough are not turning correctly so let's make it go counterclockwise so what that should be is it should be plus equal 0.05 times the direction so it should go the negative way now there in this case it's going the right direction but it's going to spin forever because if it's greater than half pi or if angle is less than or equal to negative half pi that should be fine or I could have just done the absolute value of angle is greater than half pi let's try that that should work for either direction right so this should help me with the negative direction but why are the pieces when I do execute so it is turning the right way but the pieces are not moving so execute move which direction and so now if I go into that move function which is front so I get to oh I've got how easy I have all this nonsense here oh this is not bad oh I've made my life so much easier so much easier oh ok ok there we go now I can move it that way there we go and now I can move it the front face the other way there's just one in negative one there's no counterclockwise clockwise oh this is so satisfying ok great so now let's try some of these other moves like so let's go back to all moves all moves are up is negative 1 negative 1 to negative 1 negative 1 2 and by the way the character here is now irrelevant the character I'm like making irrelevant is just for me that is like to have that there to remember down is negative 1 negative 1 0 and I'm going to fill out the rest of these oh that's up I was just doing front that was front oops I'm doing these wrong I was doing front front is is this mmm negative 1 negative 1 to negative 1 negative 1 back and then up is why so that is negative 1 to negative 1 negative 1 down and and then right left front back okay so let's just do current move equals all moves index D let's try these one at a time let's hit the moves and say current move let's try them all I'm going to try them all one at a time zero what all right which one's work let's see if any of them work all moves front should work front so 8 9 10 and 11 let's try 8 9 10 11 where did I set that 8 okay that works 9 9 works 10 pretty sure that's doing it correctly 10 is working and 11 11 is working okay okay yes that's working now how come why is what is this supposed to be this one is supposed to be up so x and z are irrelevant up is to along the y axis and that should be where and that should be so J so that's actually bottom but so Oh bottom is rotating oh it's right and then the top is moving the top is changing its values while the bottom is moving I missed a direction equals one somewhere somebody's telling me this is so crazy because oh it's early up is why look at this up should be two there it is this is this is the problem up the top up is two down is zero in just the way that I've done it so now so but the the wrong the cubes are rotating in the the the rotation is happening and that's actually I have it all out of out of whack because Y is pointing down so really up should be zero but it doesn't actually matter I just need to be consistent and now the place where I'm not consistent is here so this should actually be four oh no this should actually be four going counterclockwise so now there we go so up is now the bottom but that's fine so this works so I've got okay so zero works let's try one this should now actually be the top I know the uploads no wait zero works I think I have to give up on this and come back to it because it's like two o'clock now the top if of the move function as an Direction equals one okay where's that top if of them oh sorry thank you there we go okay that's what I missed there we go I left this direction equals one here and everyone's been shouting on it that's why this move one is not working which is now the bottom the down whatever so all Moo's wait all moves zero let's just see this should work it's actually that bottom and then now if I do one this should be the top no counterclockwise yes yes yes that's that counterclockwise great and then two should be the other should be this that's working oh my goodness I think we're there I just check them all three other way amazing for yep four is working five other way yeah yep yep six six is working six is working seven just debugging at its finest seven is working eight eight is working nine I'll retry ten and eleven nine works ten 10 is working and then 11 sorry about the lag everybody 11 is working ok all right everyone yes I have got this now here we go so I'm going to go back to my sequence and what I'm actually going to do now is I'm gonna create I'm gonna do the sequence in the set up so let's comment out this shuffle function it's sort of useful but what I want to do I what I want to do is that I want to just create I want to create the sequence in advance and just play it out so what I'm gonna do is create a certain number of moves so I'm going to do int total moves I'm just gonna say equals 20 and then I'm gonna say for int I equals 0 I is less than total moves i plus plus we're gonna pick a random move I'm gonna say sequence dot add all moves are then what I'm going to do is I am going to say for INT iyslah I is less than so I'm going to start it now I'm going to start the end of the array total moves minus 1 I goes all the way down to 0 I plus plus then I'm going to say move M equals sequence get I and then sequence dot add m dot reverse so this is me picking 20 moves putting it into this sequence and then doing although and then adding those moves back in Reverse from the last one down to the 0 down to 0 that should work okay now so that's my sequence then current move and then I need a move index is zero the current move equals the sequence get move index so I and then I should say current move dot start so let's just think this should just do the first move oh I've got some sort of infinite loop what just happened here ad hold on this must be like some weird infinite loop in here okay that's fine so I got to there total moves is 20 so go up to 20 and add and then start at 19 oh this is that has to be okay no wonder so I should just see the first move there we go that's the first move now if so let's call update here then I could say if current move is finished right then move index + + current move equals sequence get move index current move start so this should do the moves one at a time but I don't have a finished function so if the move after it's executed I can say finished equals true and then I can just add another boolean I mean I think animating is kind of the same is that is the same variable but let's let's just use a separate variable just now to be safe so if I say boolean finished and then return finished and I'm gonna say boolean is finished just to make that a function and that should now get me going to the next move oh boy it's doing random moves oh no that was wrong Oh something bad is happening yeah some things that happen some of them are correct what's the chance that even with my mistakes it'll solve itself oh okay no shoot okay let's look at execute there couldn't take thee maybe my reverse function no no it was right it was broken even without like the moves just don't some of the moves don't work what's working wait oh no okay so all of a sudden they're which move was wrong so let's actually let's let's do let's do all the moves so let's change this to what's let's do all moves dot length and add all moves I I'm going to do all the moves one at a time one two three four five six seven eight nine ten eleven twelve okay so huh so they all move they all move one they all move correctly but if they're in the different order oh oh oh I think I know what the problem is I think I know what the problem is I need to make a copy of the move if I use the same move more than once the variables are not necessarily going to be reset correctly I mean you'd think it would be but I think that's not the case so what I should do is I should say when I'm calling the moves in the sequence okay let's let's go back to here I should say add all moves copy so I should make a function it's much like Reverse but it's really just making a new move object with all the same stuff I think maybe because like the finished variable or something so let's see if that fixes it so I'm going to add a whole bunch of random moves but if I'm using the same move twice let's see it this works now oh no no I know it's lagging everybody which move is wrong yeah all right I'm gonna end this livestream since nobody can watch it anyway let me know that I've got a no it's not any better