okay welcome to part three of making Frogger in a way that's terrible and I'm doing a terrible job I'm just trying my best here but hopefully you're learning something or you will make a much better version of this what I have so far in parts wanted to I made the Frog that moves around in parts in part two I added the cars and I also may implemented that if you if you hit one of the logs hit one of the cars I can't get anything straight you it resets the game now there's a lot of nuance to this and you know in terms of visual design and there's a lot of ways this could be improved but I'm just kind of keeping it simple and I look forward to everyone's creative improvements of this but I do need to add something to this all the cars are moving in the same direction and that's not actually how Frogger works on some rows the cars move in the opposite direction so let's before I get into the logs let's at least add that so let's just say what happens if I in Row 2 gives the cars a negative speed so negative 3.5 instead of positive you can see that's working but I don't have the code for them to come back so what I need to do in the car in update is if speed is greater than zero so if they're moving to the right check if they get off that edge else by definition they're moving to the left else if X is less than negative grid then X then x equals a with plus grid right so this is just the opposite of checking instead of checking if they're off that edge if they're moving to the left and you can check if they're off that edge and now we should have yeah there we go so this is much better already just sort of in terms of what's going on okay so then there should be a sort of safety so I'm going to I'll draw these there's like a safety row at the bottom again and really this this project really needs a lane object and the lane keeps track of what's in it and I think that actually I'm going to leave maybe I'll do it like a part four or something that I make that but I just want to visually draw something in for those lanes so I'm going to say a rectangle from zero height minus grid with a full width two with a height of grid and let's give that a sort of I don't know what what color to draw this let's try let's try this okay so we can see that's the safety Lane and maybe maybe I should give it some transparency actually would make more sense so you can see that's the safety laying down here I'm going to add another safety Lane which would be height minus grid times 100 we get you so far we had grid times to grid times 3 grid times 4 so now I'm going to add a safety Lane at grid times 5 there we go so we can see that's a safety Lane okay so now what I need to do is start putting some logs above okay are you ready for logs I'm ready for logs ready for Luke okay so what do I want to do I already have this whole car object could I possibly I think I could get away with having a log extend car right because a log is going to have a speed a log is going to have the same update function a log behaves exactly like a car there will be some difference so let's try saying and it could be a log or a turtle but I'm just going to keep everything along right now I'm going to make a class called log and have it extend car let's see how this goes then what I want to do is what's the car constructor look like this so what I'm going to do is just say super right because log log is created just like a car then okay so there's actually pretty good wait we don't have any different functionality just yet so what I'm going to do is I'm going to create yet another row which will actually be like row it's actually row five technically row I guess if the roads have numbering the rows of the rows are numbered by I let me let me look at what's what's here actually whoops what just happened comment this out my row numbering is horrible zero one two three four and I'm drawing them at but the problem is I'm drawing it from the top so it's really getting drawn at row plus one okay so again I do I can really keep to refactor this whole row Lane saying I'm kind of probably should do it now but I'm just going to keep going so the next one is not at times five that's the safety lane it's at times six but it is row five and I'm going to put two logs in it and I'm gonna say logs I'm going to restart index over at zero and I'm going to put two logs and this should be x not five but times six and we need to have an array called logs and right now I'm going to say I'm just going to say I'm going to just start with two logs and then a lot of people's a new what did I what did I get wrong here logs the log not logs how am i doing that I'm adding the logs now what I'm going to do is I am going to have the same exact loop here but I'm going to do it for all of the logs Blagh so I just want to see do I now have there we go so you can see that those logs are identical now let's change them up let's make those logs have a of that row have a whiff that threewide let's have them go a bit faster and let's space them out by quite a bit more okay so now we can see and to something else is moving exactly at two let's um so let's move them a little bit faster than that okay so those are the logs now I can't visually how come they're not coming back Oh cars are missing what happened so there was a pretty major bug that most of you probably for at least like five or ten minutes there were probably yelling at your TV television machine I don't know how you watch this stuff if you're even watching it which is that anything moving to the right actually never came back on because of the way that I have this see if speed is greater than zero and otherwise it could still be a thing with speed greater than zero if it's no longer over that so it gets like set back and then it's less so it gets set back over there so it's getting set back and forth so I really need to check it only only want to do I only want to move things back to the other side if there actually are things that are moving to the right so this should really fix that problem and there we go thank you now we have cars and now I'm ready to jump on a log so here's the thing oh my goodness I really need that Lane object right because now I need to know I really want if I mean if I am NOT intersecting a log and I'm up here we've got a problem okay so I'm going to do things very manually where I can really just check the frogs location right I only want to start thinking about the logs if the Frog is where above this safety line what value is that so let's just see if I could get this right I'm going to say if frog if frog dot Y is greater then oh no is less than what was that safety Lane it was grid height minus grid times five height great I really could have done this from the top sort of a site might think that's right hike grid times five background let's just test this out ooh I have to get through the cars to test it there we go okay so that's good this is the correct test now know the gain is over if I'm not intersecting a log so let's figure that out how do I check that boolean so what I need to do is check all logs and if I'm not intersecting any of them so let's do that inside this loop if frog if the Frog is up in that region I'm I'm going to assume that I'm not okay I'm going to assume that I'm not okay I'm not I'm not okay but if log intersects frog or if frog intersects log then okay is true right so now if all of that is done if I say if not okay reset game so one thing I want to do right now is I want to start the Frog in the middle so let me start the Frog in the middle which is is the frog starts at height grid times 5 right I will just start the Frog there and so if I jump just into the books if I jump into the river but should be able to jump on camera why can't I jump on a log what did I miss here my okay should be out of the loop oh yeah of course so the okay has to be out of the loop of course because I have to start I'm just doing this one time through draw with my frog I mean assume the Frog is okay and this also should be out of the loop right so after all is said and done so this now should allow me to hold on oh wait I'm trying to jump I got it oh I have a problem yeah I'm on a log and now I'm not I'm on a log you can't get so first of all I want to draw the Frog last so I can see what's going on here let me draw the Frog last so you can see I can jump on to the log now why can't I move do I have this wrong should this be times six why can't I move in the safety link Oh No so also of course oh my god crazy a silly obvious problem here now which is that I wonder if I should do this in a separate loop you know what I think I want to do this in a separate loop just for clean just for sort of clarity sake because I always want to here's here's the reason why I always want to show and update all the logs but only want to deal with this frog log intersection thing if the frogs within a certain zone so I'm just going to do this you know big deal let's loop through all the logs twice so I'm going to assume that I'm not okay because clearly I'm not okay okay but assume that I'm not okay I'm gonna go through all the log if I understand the logs I'm going to be okay and only in this instance if I'm not okay I'm going to reset the game so this only happens all of this only happens if I'm within this region over here so now I can move freely I can even move back down but now I I'm no good if I jump into the river but I'm good if I jump on a lot but guess what what's got to happen now if I jump on a log I should move with the log I should move with the log so I need to be attached to a log well this is great so let's have the Frog have a variable part of it which is an attached vlog then I'm going to write a function I'm going to call it attached and I'm going to say attached equals that log so this variable is going to be by definition no at first okay now what I'm going to do is if I intersect that log then I want to say frog attach blog so I want to attach the log to frog to that log I'm also going to need an update function so the Frog needs an update function and the Frog it's funny I thought this would be functionality of the log so far the log doesn't need any additional functionality I'm putting it in the Frog which i think is okay what I need is an update function and if attach is not equal to no so if this frog is attached to some log frog dot X plus equals that log speed it should move according to that log speed of attached speed okay I might need it I don't know that I need a detach function because when I can only be attached to one log at a time and when I jump I'm either going to end up in the river and so I'm going to be the games going to be reset or I'm going to attach to a new log so let's look at this now let me try to jump onto this there we go look at this I'm attached to it jump onto this attack but you can see if I try to jump off I'm reset there's a little bit of an animation issue I really should see myself jump off and see that I'm in the wrong part maybe animate and then and get reset with but let's add let's add some more lanes with some more logs okay so this was row five now I want to add row let's add one more row row six let's put three logs and those logs are less wide and they move in the opposite direction more slowly and they're spaced out by a different amount just like making up random numbers here oops and then if I add three logs I need to make the array have five in it look and those should be at up one more why location okay so now we see what's going on here the those are disappearing too early ah I have another error I wonder if somebody cut up I'm going to when I jumped back the Frog was still moving I definitely need to detach okay good point good point so reset game in reset game this is pretty easy I should just say frog detach also so let's add that function or you know what I can do I don't actually need a new function I could just say attach null so that's kind of essentially detaching it just set the attach thing to know that will fix that problem but I have a different problem I lost track of where I was the in car right if X is less than its speed is less than zero it's moving this way and X is less than negative grid no no no no no no not grid this should not be grid this should be this should be width plus that should be with plus plus grid because that's the X but I need to find when the left side right the left side is X plus width so W if it's less than negative W minus grid right it should get all the way off there we go okay so I just fix that so now I should be able to jump here and jump there and jump back down and jump back up look at that jump back down and jump back up I just computer solved a jump and then I get reset now the question is can I jump on to the edge of it let's try that can I jump on to the edge ooh come back oh it's still moving why am I still moving oh because when I jump down I didn't detach okay I got you everybody so if I jump back to the safety zone which is if I'm out of this zone I should also make sure to detach attach null Oh convoluted code we could refactor this there'll be a whole video on refactoring someday okay so now I can jump up and jump back down and I'm not still moving what I wanted to show you was that oh and I left I can hang off the edge which I think is okay let's make the Frog a little bit transparent let's give the Frog a little bit of transparency just so we can see that better you know visually I encourage you to think of a better way to visually do this but we can see kind of where the Frog is okay so I think we're kind of done I should add another row I should add the buckets at the top what am I missing okay so there's one thing we need to deal with this problem here goes to frog frog my frog is gone so the Frog can can't ever actually leave the window if the log starts to leave it needs to get pushed off and I think there's a way we're going to be able to do this I'm going to do this just in the update function I'm going to say frog dot x equals constrain the X can never go farther than zero on the left side and it can never go farther than with minus the frogs width on the right side so let's look at this what's going to happen now and it gets resetting I was so remarkably easy there we go and the Frog is now going to slide and then get n reset so if I don't jump off in time so if I let's see if I can jump off in time now there we go it jumped off in time can jump up so that fixes it oh my goodness I think I said one more row and then we can kind of be done if I just make my Frogger thing right a little shorter I mean I should do the buckets at the top but you could probably do that let's add one more row row seven row seven is going to have two more logs so seven logs it's going to have two more logs those logs will go in the other direction positive direction really fast or really slow let's just make them really slow let's make them super wide and spread out by a lot and let's look and they need to be one row up so much hard coding here there we go I made this kind of easy so now yeah so let's let's let's reset that frog back to the bottom and now let's play Frogger to do this to distribute to do hey doop doop do to reduce it what's the Frogger music okay I got to get past ah shoot it did it okay now go in this log on this log on this log and then Oh what the river is about I should be allowed to get to the top so the whole top should be another safety zone which is like I'm going to add another rectangle at the top there zero zero I'm just going to have the top be double height that's my safety zone and so now I should be able to say if frog dot Y is less than this and and frog dot y so the frogs really just keep track of which row it is in oh boy the grid system the time to refactor the whole tile based system of this frog dot y is or and it's greater than a grid times two so this should allow me to get to the top now okay yay that is Roger in three parts in what's probably like about 72 hours of programming time with just a simple result there is a lot of spaghetti as a in this code I think I would definitely like to come back this won't be released as quickly as you might I would like to come back and do a refactoring of this to make it better I look forward to hearing all of your comments about refactoring so what can you do to up so if you're looking for the code for this and you're at the end of this video you can find a link to it in this video's description there will be both this version this processing Java version there will be a JavaScript version using the p5 GS library and I encourage you to add your versions to the readme make levels make lives make a timer add visual design add sound make the frog green I will make the frog green at least I will make the frog green I will make the frog green right now we really have for hunger and I could very easily with inheritance that I have so far I could and also the actual game of Frogger has those buckets at the top let's look at let's look at this what did I miss so think about this visual design create your own visual design little animation make your own version of this thank you for watching this boy has this been a struggle I haven't really really struggled to make these what seemed like such simple games but I am somewhat pleased with this result if we put them side by side there we go Frogger Frogger Frogger ok see you guys in a future coding challenge and I will come back I think I would like to come back and revisit this after I get suggestions and feedback so look forward to that video and when it comes I will link to it in the description