okay uh here we are again we are at a very exciting moment we are so close so close to finishing with this introductory section where I have no I feel like I'm not really in control and maybe I'm screwing this all up but uh soon we're going to be getting to vectors and vectors is a place where I think we'll feel comfortable and we'll sort of be on a directed path knowing where we're going to create these um Rich Motion simulations in processing but before we do that uh there's an important topic that I think is actually probably the most important of all these kind of beginning introductory topics about random numbers and that is pearlin noise uh pein noise is going to allow us to create a Randomness in our code that is smooth that has a more organic feel to it that's going to allow us to do a lot of um a lot of uh uh create a lot of things in processing that that feel a bit more natural or um that's really just what I wanted to say trying to come up with the right words I should stop and restart but I'm going to keep going okay so pearlin noise what is pein noise first of all pein noise is named for Ken pearlin who if we just broke through this wall and kept going and broke through another wall and went into the next building we would fine uh Ken pein's a professor here at NYU in the computer science department um and he developed um pein nois I believe while working on the film Tron somebody correct me and write nasty letters that I'm getting this all wrong um in in the 80s in fact he won a an Academy Award for his his work in computer Gra graphics and with pein noise so pein noise was originally developed to create procedural textures for 3D models in computer Graphics meaning okay if we want to have a vase that has a you know sort marble leg texture to it would you have a vase with a marble leg texture I'm not sure um do we need to hand create that with with um through handmade techniques or can we create an algorithm that will make that texture procedural now how does it do this and what is what what are we really talking about here well first let's think about this moment of time for a second this moment this idea of time let's think about time in random numbers let's say this line represents time and time is moving along this is the beginning of time this is the end of time we're somewhere in the middle there I suppose time is moving along and let's say we pick a random number at any moment in time okay I I'm not going to be able to do this because I'm a human being and I am just destined for pattern but you could imagine it's going to have it's going to be a a it's going to look something like this it's going to be this graph that makes no sense at all that just looks like a lot of squiggly Randomness all over the place any random number that we pick at any moment in time has no relationship to the previous random number that we picked or the next random number we pick there's no smoothness here so what does pearlin noise look like well if you think of pein noise over time it might look something more like this isn't that soothing and relaxing and lulling a nice little graph there it I know I don't know if I how well I drew this but this is Randomness in that it's random you can't predict is it going to go up is it going to go down is it going to go blot down a little bit but yet there's a smoothness to it there is this idea that the a cur a random number over here is related to the previous and related to the next ones random numbers change slightly over time this is a very powerful concept if we can pick random numbers in this fashion then we could have something organically grow and Shrink randomly but in a nice kind of almost breathing or organic way I'm using the word organic way too much but you can see what I'm really trying driving at this has a more natural quality to it than this and peo is something that you know in a way I was saying earlier that Randomness is this crutch oh I don't know what to how to make all my variables let's just make them all Randomness my crutch my personal crutch in life is I just make everything with pearing noise ah it's random but it'll be smooth and so people will like it so we need to be careful here we want to use these different algorithms in the appropriate time for whatever it is what Behavior or what sort of expressive quality we're trying to achieve in our animations in our program but this is another tool in our bag of tricks that we can use so the question is how do we use pein noise and what do what do the results look like well again let's take let's take a scenario this pen by the way I'm going to need a new one in a moment let's take a scenario where what we want here is our processing window and what we want is to be able to um I'm noing looking over there too much I need to be looking this way more I shouldn't also be talking about this in the middle of video okay what we want is um to put a circle on the screen and every frame we're going to give it a random location so we're going to say hey float x equals random between zero and width and we are going to draw a circle at that at that location and we're going to see what that looks like let's do that together actually um let's press this button and come over here so I should have prepopulated this with setup and draw but that's okay I can type fast so uh uh background zero fill 255 I'm going to draw a circle and it's going to be at an X location in the middle of the screen and it's going to be a nice size circle and uh X is going to be a random value between zero and width and random noise thingy okay so let's run this and see what we get um you can see here um if I just slide all this over H I'm going to get used to doing this eventually you can see here this is Randomness every frame it's at a new random location and in fact uh we could maybe see this a bit more easily if I just slow the frame rate down to something like 10 frames per second and run it again you can see there's no relationship we just have this dot moving anywhere because it's random in every frame so what do we want to do is we want to start looking at code for doing this with pein noise we want to say float x equals noise something so this is an interesting question now crap I'm really botching this okay this is an interesting question now because with random it was very clear what the arguments to the random function are minimum and maximum range of Randomness what are the arguments the noise function it would be nice if I could just say Z comma with and if you type that in there it actually would accept that and run but it wouldn't work the way that you wanted to the thing about noise is no matter what this noise function is going to give us a value between zero and one pear and noise the noise pear and noise function in processing will always no matter what you do give you a value between zero and one you cannot affect the range of what comes out of that function we're going to be able to affect it quite easily in a moment using the map function of processing to map it to a different range but right now we're only ever going to get a zero between a zero and a one out of that function so what goes in there well remember how we had this idea of time well with Randomness you know there is sort of this idea of time maybe there's a pseudo random generator that's giving us a random set of random numbers in sequence but time didn't really play a part in our thinking about it with pear and noise we've actually created a deterministic sort of time space continuum I don't know where start Trek land that makes no sense we need to give time as this argument now time what is it for I like to sort of think of it as a time in terms of this graph like do we want this random number at this moment in time or do we want this random number at this moment in time what does that what does that mean well um what are we doing here well in fact we just need to create a variable and so let's kind of get rid of this stuff over here let's call it t and we could say hey let's ask for pearo at time equals z so let's go ahead and see what happens if we add this now to our code we know that we want if this is the beginning of time we want pero value at time equals zero and let's see what that gives us I'm here I'm back okay so uh we are now going to switch this to say x equals noise and we said at some Moment In Time time and I'm going to create a global variable called T and we're going to run this and where's our Circle well first of all our circle is at zero right because pearing noise only ever gives us a value between zero and one we can't get any other value but a value between zero and one so we want to use this function and processing called the map function boy I would love to just do a whole video just about the map function and you know what I'm definitely going to do that but right now I'm going to kind of assume that that exists and you've watched it and kind of just add the map function kind of quickly so what I want to do is remap the value of x and to map the value of x which we know goes between 0 and one um and actually uh yeah that's fine uh between zero and one and I want to map that between zero and width and I'm going to run this now I lost my pen okay so ah so look the circle's still over there but we got let's run it again it's over there now you can see we're going to get a random value ah there it is right P the pein noise space is seated at the beginning of the processing sketch and we're getting the noise value at the at time equals zero but it's not moving it's never changing because the noise value at time equals zero never changes it's the same always and forever more for that for this instance of the sketch running so what does that mean we need to do what we need to do is move through time we want in our sketch to say give me the pear noise value here then here then here then here then here then here we want all those values in sequence so we get a sequence of these smooth values and how far along we move through time do we move to here to here to here that's going to really be awful so I'm going to be just regular Rus or do we move very very teeny tiny slowly like a little tiny crawling thing okay very slowly we need to say t equals t plus something some value to increment should we go 0.0000001 or should we do 0.5 whatever we could just try that and see what happens so let's take a look over here and see if we add that okay so we want to say let's move through time let's try tal t+ 1 that makes sense right well uh that's sort of more just like Randomness and I had that frame rate let's take that uh let's let's let it run fast 60 frames per second you can see that's pretty much just like Randomness that t equals t plus one is moving really big steps through time and really big steps through time we lose the fact that this there's this nice kind of curve going on there and so if I come back over here let's do something much more reasonable and say Tal t plus 0.05 and look at this I want it to appear I I need to like redo my layout here but we can see look it's actually kind of moving um almost um more smoothly now maybe that's too big so I it's also running very quickly at 60 frames per second which so you can see now we're getting this nice sort of smooth motion because we're seeing this sequence of random numbers it almost looks like it's moving with some type of rules almost some type of physics to it we've just sort of accidentally created this phys it's random Walker so to speak with pearlin noise and so this would be kind of my exercise to you um if you want to try to um try to take this uh and kind of like link it to everything we've been doing so far there's so many places in all the examples where you'll be able to add pear and noise in but right now I'd say to you go to that random Walker and try to make a pearlin noise random Walker and I'll include at some point I'll watch these videos and see all the things I say and then I'll put these links on the Vimeo page or whatever it is to to examples but um you should be a actually you can definitely find if you go to the nature of code book GitHub repo you can find uh several examples of the random Walker with a perin noise um so there's more to pearlin noise one thing I just want to allude to very quickly that you could also do as an exercise is that right we have time here in one dimension and really this idea of time I just used as a a sort of way of us describing how pearlin noise works but this is really just onedimensional space right there's a value there's a sort of a string and on the string written lots of numbers in one dimension but what if we took that string and made it into a piece of paper and the number here is related to all these other numbers that are near it so instead of a number here just having some neighbor to the left and right it has neighbors all around it in twodimensional space so what if you could map noise values in twodimensional space to height values in a in some sort of top top top topology or if or pixel values in some type of texture for an image right you'll get this is where you can start to get procedural text for um for threedimensional objects so that's looking at twodimensional noise and how that can work is kind of an exciting uh possibility as well um and we'll see later on in the video series when we look at a flow field for objects sort of dropped into a space and moving almost as if there's these currents and rivers pushing them along with and create that flow field with twodimensional prolin nois um so um um yeah I I I have a list here and I would like to make a two 2D PE Noise video which maybe we'll do at some point as well okay so this video is done uh you're going to have lots of questions and confusing things and whatever we'll remake this video or add some links and all this everything will be okay everything's going to be okay right somebody tell me okay uh goodbye