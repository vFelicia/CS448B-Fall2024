and we are here this is the video in this playlist which really comes right after 10.7 matrix backs part two this is matrix math part 3 where I am finally going to look at okay matrix multiplication or really I should say matrix multiplication okay so if you recall what I'm doing I know it looked quite different but I already covered that we'll bring this one was made a while ago anyway if I have a matrix right and what I mean by a matrix is a grid of values and let's say I have one that looks like this a b c d e this is a 3 no no it is a 2 by 3 matrix we always refer to the number of rows before the number of columns now what does it need and and and previously with when i made some videos just about vectors i talked about this thing called a dot product but i'm gonna change that here and write the matrix product so first of all what does it mean to multiply a matrix by by something i could just multiply this matrix by a single number and that's what's known as well it's not really that's what's known as scaler sorry scaler if i multiply this by a single number then I just say if this was a whole bunch of ones multiply it by two I got a whole bunch of two's you know if I multiply by two double every value in the matrix and I think actually now I did that in the previous video I could also do what's known as element wise multiplication and that is also referred to as the hata mard i don't know if i'm pronouncing that correctly and breaking new somebody in the live chat that's going on right now told me that it also son is called a short product and what that means is imagine I have another matrix that's exactly the same size as this one and in fact I could kind of do that little small over here and I could say G H I J kl right so I could have another matrix if it's exactly the same size and mine if I multiplied these together I have a new matrix which is has a times G B times H C times I D times J elementwise each each element of the matrix get multiplied by its corresponding other element now I don't those are perfectly valid I'm looking for my eraser perfectly valid ways of doing multiplication oops but what I'm really interested in is the matrix product and the reason why I'm interested in the matrix product is because I want to use the matrix product for a neural network for example this node in a neural network is going to be the result of the weighted sum of all of the input nodes x weighted connections and this one is also going to be the weighted sum of all of the input nodes x weighted connections and so on and so forth and so these weights are stored in a matrix and the inputs come in in a matrix as well so if this is how I'm representing the inputs then you might discover that I have this matrix of all these weights that I need to multiply those inputs by to get the new values of the outputs of this hidden layer now anyway I kind of talked about that in a previous video and I'm going to talk about it a lot more in the next video when we look at this in more detail but the point here is that this idea of a matrix product is something that I'm going to need don't worry about the whole neural network thing I'm going to come back to that in next video and go through that in detail what I need to do here is just understand I know I need the matrix product how does it work and then we'll see how its applied in the neural network example ok so let's say that I have another I have a matrix a and I have another matrix B and that matrix is equal to g h i j k l I'm writing l like that so that I can see that it's not a 1 or whatever ok so I have these two matrices the way that I write the expression a matrix product B I'm gonna write it like this a dot B the dot is the indicator for the matrix product now what couple things that are really important here 1 the commutative property does not hold a dot B does not equal B dot a this is not true and you're gonna see why in a minute you know if I were to say 3 times 4 that's equal to 4 times 3 they're both equal to 12 but again this matrix product is a different kind of multiplication this commutative property does not hold so that's kind of key another thing that's really important is the matrix product is something you could only do if the sizes of the matrices match up and what do I mean by that now one thing you might have thought but realize like if I was doing when I have that example the Hadamard product that's only gonna work if I have two matrices with the same exact dimensions right because if I if I don't have the same dimensions how can I multiply each element by the other element because some elements might not exist in one of them but something even completely different it's going to go on here I need to have for this to be valid I need to have the columns right the columns of a equal to the rows of B and you'll notice I made these do that so I have to have however many columns I have here 3 I have to have exactly the same number of rows and B otherwise this won't work and the reason is what I'm actually going to do is the reason why I use this dot here is I'm going to use the vector dot product vector dot product so you might have to go back to one of my previous videos where I talked about the vector dot product or gonna do it here again but what the vector dot product does is it takes kind of like the sum of all the elements multiplied the element wise elements both tied to each other what do I mean by that so if I say a dot B I'm gonna get when I when I take one matrix the a matrix product B result is also going to be a matrix now how do I know the dimensions of that matrix it's going to have the number of rows of a which is how many followed by the number of columns of B what so in the enemy in a 2 by 2 matrix now this is gonna be different with any all different matrix dimensions and after you watch this video you can make up lots of different matrices and play a game with yourself to like do this matrix product with pencil and paper boy won't that be fine I'm gonna go do that later myself I'm sure um but here we can see I'm gonna get a square 2 by 2 matrix now what am I doing here how do I fill in each of these blanks so I'm gonna just put a little blank square here I know I need to buy two well what I do is I take the dot product of the row of the first one with the cup of the row of a with the column of B right so it's almost kind of like the intersection this first element right I gotta get the first row of a and the first column of B that's why they have to have the same number of rows and B as columns an a so what this actually is this value here is the dot product of these two vectors which is actually let me just come over here which is a times G Plus B times I plus C times I ok so that's this element here now let's do this element here well I'm in row 1 so I stay with Row 1 of a but now I'm in column 2 so I go to column 2 of B so now this particular value is a times H plus B times J plus C times L okay that's good now let me do this one this one is the second row times the first row the first column of B D times G + e times I plus F times K and then this one here is going to be the second row times the second column D times H + e times J plus F times L ok so that's the math for any arbitrary set of matrices you take the dot product of all the rows with the columns to fill out your resulting matrix product and you must have the same number of columns in a as rows of B ok so pause this video if you want try to draw some diagrams google matrix product google image search matrix product you probably come up with a million visual examples of this watch three blue one browns videos on lunar algebra which will probably teach dozen a much more intuitive and nice way but I don't link to that in this video's description I'm now going to try to implement this matrix product even code minor correction hopefully I said the right thing but I do have something wrong here a times G B times I C times K this should be a K right here okay so let's try to implement the math for this so where I'm gonna do this is in the multiply function and I had written that before to do scalar multiplication and I'm gonna do the same thing I did an ad where I'm gonna check what is the thing coming in is it a matrix or is it a scalar or etc so I'm not going to bother with the Hadamard product I'll add that into this matrix library if I ever need it but I'm just going to check is N and instance of a matrix if that's so then I want to do matrix product otherwise I want to do scalar product okay so now I need to write the code for the matrix product right there but first I must check are the columns of a equal to the rows of B otherwise I cannot perform the matrix product at all so I'm going to come over here and I'm gonna say if I mean the right screen yes if the a is this matrix object if this dot Rose know if it stud columns does not equal and rose I kind of don't like that this is called n here but whatever just then and I'll use this more strict equals here then I D to return like undefined or something like just get out of here this is no good and I'm going to console dot log columns of a must match rows of B columns now I could be more thoughtful and I can use a trycatch with some error handling but I'm just going to do this for right now just to be some and let's actually make sure this works so if I go back to loading that code and I said something like a is a matrix that is three by three and B is a matrix that is five by ten if I say a multiply B I get undefined and it says columns of a must match rows of B so that's working and I could just say B is a matrix of five by sorry three by three also then they match and I'm say a multiply B I still get under fine because I have done it yet but I don't get that error message okay so now I need to create a new matrix so I'm just say the result is a new matrix that has the number of what did I say it has the number of rows of a and the number of columns of B so it has the number of rows of a and the number of columns of B come on Adam keeps wanting me to put my password in okay all right so that's good now I need to do each spot so for each row whoops for each row and for each column I need to do the dot product of that lips first of all I have an error before I can do this I have an error here and what I want is if I'm at 00 I want all of the values I want to do the sum of all of the values well so I want let's just do this manually in this case it would be this dot matrix I times and matrix J sorry I I need yeah I need another double nested loop in here right because I'm going to take this and add I plus plus one but staying in J J plus 1 right is this right I plus 2 J plus 2 I mean this isn't I'm making this up because I don't I'm doing this an arbitrary way we don't know what the actual rows this this just goes up depending on the number of of rows columns there are all right right so maybe I only need one loop here because I need one loop so what's that know because these could be different yeah k week Mon is telling me in the chat another way of thinking about this is I could say and you know what would might be nice actually one thing that I could do here just at least I think it's gonna help me work this out is I could say let a equal this dot matrix and let B equal end just to have variables called a and B for the two different matrices and this is still the result but in other words what I'm saying is a and this is B so a I K B KJ so it's a little Olin let me with K sum over K so hold on so let me put this here did I get this wrong this is B is it yes so you know what's wrong about this so let's look now we can get this right here's what I'm doing here I want a I want to be increasing not the row but the column I did it wrong I did it backwards do you guys like watching these videos where I try to figure it out I don't know it could I could just get it right the first time I could just like start over and get it right but what I'm doing is I'm every column of a which column is I'm actually using yes it's Col it's all its row I but I'm iterating over the columns of course of course of course so it is this J so this is actually this is what I need so what I should be able to say is result I need another loop for let K equals 0 K is less than and I can use remember I could use a column Zoar B's rows those have to be the same so I'm gonna use a as columns yes k plus plus and then I'm first I need to say let sum equals 0 and then I'm gonna say sum plus equal a index I K plus B index K J this I think is right and then I have to put that in the result result result i J equals sum so if I was using like some other vector library I could like pull those out then do the dot product but let's see here let's make sure this is right I want to for every element in the results I want to sum the dot product of all of the column spots in a that's K with all of the row spots in B and then I've got the result and lying 50s I'm seeing deep space in the chat says lying 57 oh yes sorry this needs to be multiplied so these get multiplied I'm summing the product of all those yes and of course there are much faster ways I'm not looking for any any efficiency here I'm just trying to understand the algorithm and make sure I have something that works okay so now I need one more curly bracket and I think if i zoom back out here I think I am done this is the algorithm right I have a new matrix that has that is of the size of an this I should do this down here the size of A's rose and B is columns then I go through it and I do the dot product of a vector from of a row of a and a column of B store that result okay and B is here's another mistake B equals n dot matrix right because the actual two dimensional array is stored in a variable called matrix it's not it's not the it's the the object itself has the data inside a variable okay so how are we gonna test this I actually have a sketch here so I'm gonna in that's a p5 sketch I may not even use anything about p5 I'm gonna have a be a new matrix that's 3 by 2 sorry 2 by 3 I'm going to see the same for B which is 3 by 2 then I'm going to say a a dot randomized B dot randomized console.log a dot matrix and console dot log and not dot log table B dot matrix so let's take a look at that okay so now I have to make two matrices this is one and they with random values in them so now I'm gonna say let C equal a dot multiply B oh I didn't get anything there oh oh I didn't console.log it oh man console table C dot matrix oh I forgot about that part okay here we go again shoot all right so what's this error sketch that jeaious line 11 cannot did Isis forget to return it I forgot to return it didn't I okay you know what would be nice is that the end of this I said return result and this actually goes we're here right I got a return to return that result all right let's try this again no I forgot hit save uhoh I'm being told breaking news breaking news the return is in this for loop that's not good oh right because this just the return was in the for loop that's terrible and this says results and it should say results okay I'm feeling a little bit a little bit more confident now what what what oh oh oh my goodness I'm completely losing my mind here so it's very important to realize that result is the matrix object ah the matrix object has this array called matrix which actually stores the values and there's no like set function or anything so what I actually really need to put here is result dot matrix right equals this result dot matrix equals no and then return results right so I these values that I'm calculating this probably be like a set function or something like that and I probably should just created the 2d array here and then made a major but whatever this is what it needs to be I think we got it now oh boy oh oh this is the worst I'm really doing a horrible so I've done something terrible here but hopefully you know you're watching this video and maybe this is valuable to you I have really conflated the idea of the 2d array that stores the values with the object and I'm using it all sorts of terrible ways so let's think about this this is this is this is what I want a is this B is n now I can get the rows and columns but down here I really need to say a dot matrix B dot matrix right and and that goes into the resultant matrix so I hopefully this is clear too the issue let me try to rephrase it again in case it's not there is this idea of a matrix object it has three properties the number of rows the number of columns and the actual 2d array so where I refer to the variable that's the matrix object and I want to actually do something to the data I have to say the name of the object dot matrix and some I'm forgetting to do that in so many different places so what I'm gonna do what I'm gonna look at down here is I think now everything is correct if a and B are the names of the objects I could pull out the rows and columns from a and then I could pull out the values from a dot matrix and B dot matrix and set the values in result dot matrix okay how couldn't be confident I really should not be confident this is a terrible idea but I'm confident okay so we finally got three things if this is a and this is B this is a dot B anybody want a fact check from me for this coming the chat I don't I'm gonna pop in a wait now this will get edited out thank you thank you these numbers are in fact correct I took a little break there and check them they are right I encourage you to pause the video and check them yourself to see if you understand how the library is working one thing that actually could be really useful I don't ever employ tests never really but I should learn about tests and I should probably do some stuff with tests on this channel so I think I might come back and try to do some tests that would if I ever change the code for this matrix library to ensure that the math still works so maybe someday I'll come back and do that but and now yes there needs to be a lot of tidying up and refactoring I can use these array functions and I'm gonna get to all that but now we're ready the next video I can take this matrix library this matrix class and use it in my neural network class to perform the feedforward algorithm of taking all these inputs multiplying them by weights and getting new outputs which then go into other node they become inputs to a hidden layer of nodes eccentric search I've talked about that in the previous videos and now I'm gonna come back and actually do that címon in the chat makes a good point where if you look at this class all of these functions randomized ad multiply up to multiply they change the object that I'm calling the function on so if I say matrix a I say a dot randomized that matrix object actually changes but in this with this matrix product I'm not actually affecting the object when I say a multiply B I don't change the value of a I create a new a new matrix object and return that value so I probably should refactor the library to do maybe that mult matrix product in a slightly different way and I could use something called a static method so I'm like I'll come back maybe in a later video when I refactor this a little bit I wanted to mention that now but it also reminded me there's one more matrix operation that I need for the neural network stuff I think I don't actually need it for the feedforward so I could come back and do it after that but I do need it for the training aspect when I adjust and tune it based on the width the guess is well I get to all that later the thing that I need is to transpose a matrix so how do I transpose a matrix if I have a matrix a with a certain number of rows and columns start rows and columns the columns become the rows the rows become the columns so transposing this matrix would turn it into this matrix okay so I'm going to quickly in the next video write a function that does exactly that