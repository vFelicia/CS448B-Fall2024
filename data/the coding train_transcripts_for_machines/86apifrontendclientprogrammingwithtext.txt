hello okay so now what I would like to do in this video is actually add a frontend client to this particular API and now there there's there's a there's a kind of question in my mind just floating around here which is like well why am I doing any of this and so on the one hand I might be making a a kind of a build your own API in node just for one person and that's for myself like I might want to make an API for of a way of storing data and communicating and doing server siiz stuff for my particular front end I also might want to make an API that is open for other clients to be able to connect to and that's something that I've got to get to in this list so at some point I'll show you it's actually very easy to open up um your API to other servers to make requests using um a node package called cores but I'll come back to that for right now I'm almost thinking of this as just my own little project and some of my project I need server side programming and some of my project I need client side programming but I need those two things to talk to each other so the first thing that I want if you recall one of the pieces of this uh program that we've written actually uses Express's ability to host static files and all the static files are in this directory called website but I I called it website just to like call it something but often it's called public or you could call it whatever you want unicorn whatever you want to call it you have a folder with files that you want to serve and I have right in there I have this index.html file and all it says in it is hello so if I go back to the browser and I go to the root page I see Hello and so um what I want to do now is I'm going to grab from my desktop a P5 and a P5 sketch so it has an index on HTML file some JavaScript code and the libraries that I want to use and I'm going to actually go into um this particular uh uh API example that I'm making and I'm going to put that all in here and I'm going to replace so now if I hit refresh one thing is I don't have to restart the server by the way those server is going to be able to just serve up those files as they change and we can see now anything and I go over here and I can add some code I can say you know no maybe no canvas I don't want a canvas right now and I can say uh console.log uh running is your refrigerator running you better go and catch it and I can see ah so that sketch is working so now how do I do something to access the data that's part of this API so one thing is actually never mind that let me actually add a canvas and what I'm going to do is I'm going to say I'm going to say uh I'm going to say uh create canvas and I'm going to say uh you know 400 comma 400 and background uh 51 which is my background color of choice and we can see I now have a canvas wo it's huge uh no no no no keep stay large over there and small over here okay so now I have this canvas and what I want to do is I now want to say load Json SL all and I don't even know if I need that slash look at this if you've ever done anything with P5 or jQuery where you're loading something from an API open Weather map.org AI cityne York what I'm doing here is I'm querying the API but rather than the full URL the API is running on the same server that's hosting this JavaScript sketch so I could just say SL all or I can say slash search slash uh SL rainbow right I can go to any of the routes simply from the low Json function so what I want to do is do SL all and I'm going to then have a call back for when I've gotten the data called got data and I'm going to write that function and the data comes in as an argument to that function and just to see that it's working I'm going to say console log data so let's run this again we can see there it is I now have accessed in my client side code the all the data from that's running in the server and one thing that I'll do here just out of curiosity is get rid of this slash I think it works with absolute or relative paths so you can see that works either way okay now what could I do I let's say I want to um iterate all over these there's a kind of a trick this is an object so there's not an easy way to iterate over an object as if it's an array although there are plenty of ways to do that a way that I like to do it is I can say VAR Keys equals object Keys data and I'm going to just show you what that gives you console.log Keys what you can see is it gives you an array with just the keys in that object so you can see this is the full object but now I have an array with just the keys and that's an easy thing for me to iterate over so I can do something like four VAR I equals Zer and I know I could do a four each or whatever everybody always complains but I am like I'm just have like an old World style of programming like my for Loops like this and I'm going to say uh key equals keys index I I'm going say word actually and um score equals data index word and then I could say uh you know VAR x equals random WID and VAR y equals random height and Phill 255 and text word uh at X and Y and let's see what I get now if we run this we can see and let's make it bigger text size uh 64 and you can see there we go so obviously I could um I'm I'm seeing now all the words that are in the database kind of visualized in the canvas and I could of course like color them I could think about visualizing a thoughtful way I could make their font size and their color based on their sentiment score but I'm just showing you that I can access a particular route and then uh visualize that route visualize the results of the data that I'm getting through that route in a canvas But ultimately what I might want to do here actually even more importantly is I might want to add input ID equals uh word word and then input ID equals score so let's look at what that looks like and I'm gonna um I'm G to wrap that in a paragraph and I'm gonna say word and I'm going to put a line break and I'm going to say score uh and slash P so now we can see on my web page and something's driving me a little bit crazy here which is this uh default styling we can see here oops that I now have this little kind of basic form it's barely a form but it's like I made a little paragraph that has word and then a text input box score and a text input box I just put that in the HTML directly and then I probably also maybe want to add some sort of uh button uh submit button and I can give that an ID also ID equals submit so what I'm doing here is I've made a little interface that has a place for me to type a Word and a score and I'm able to hit submit so why am I doing this because what I want is the moment I click submit I want to send what is in those two text fields to the route ad right I need to go to if I go right now to add um I can't think uh sunflower uh 43 we can see that that was added and now if I go back to here uh we're going to see that sunflower shows up there I don't I don't really like what I've done here with this um visualization because it's sort of hard to see what's going on let's make that a little bit smaller and let's uh let's just make it a I'm sorry I'm going a little crazy here but just bear with me for a second unnecessarily uh there we go so now I can see like all the you can see that sunflower was added there but I added it manually only by going to the route the address bar but that's not really how anybody normally interacts with an API I don't know maybe I do that quite normally so now what I need to do is I need to handle that submit button so in P5 I can gain access to that through the select function so this is me using uh submit sorry this should say submit this is me selecting the Dom element with the ID submit and that button has the ID submit and now I have it in a variable and I can now attach an event like whenever the mouse is clicked on that button to uh I can say submit word and now I can write a function submit word where I get the word from the word element and I can just say value I can get the score from the score elements value so select looks for the text input box word score uh um uh and then then score and then the value function gives me the contents of what's in there so just to see that this is doing what I want it to do I'm going to say console log word score so let's go back so I'm not submitting it yet but let's go back and I'm going to hit refresh oh select is not defined guess what I'm these functions are part of the P5 Dom Library so I need to make sure I am referencing the P5 Dom library in my HTML which now I am p5.js and so now I can go back and hit ref refresh and now I should be able to type in uh uh cherry blossom two and hit submit and we can see that that I'm able to access those two values and now what do I want to do all I need to do is go to um load Json what's the route add slash plus word plus a slash plus a score so I can dynamically create this route in my code based on what the user is uh put into those two text boxes so now I want to now this is a little bit weird and I'm going to get into this in a future video where I talk about get versus post I'm actually doing something that's sort of against the traditional conventions I'm using low Json which is a get request to actually send data the word in the score to the server but I'm really doing that out of convenience because it kind of works and it's easy and it's simple you'll see in a lot of other scenarios if you want to send data to the server images large data private data you're going to need to use something called a post which cannot be done through low Json but I'll get to that in a future video but so and then um I'm going to just add uh a function called finished as the Callback whoops and then I can say um function finished data console.log data so I just want to see that it came back so I'm going to I'm going to send that data and see that it came back back and then I'm going to so I'm going to hit refresh and I'm going to add uh a blueberry uh 10 and I'm going to hit submit and we can see that this was sent to the database now if I hit refresh again we should see that blueberry is there why not though however once it's done ask the um ask the database for all the words again to like redraw what's in there so here this is what I did to like redraw everything I could actually put this in a function I could call this function like draw data and so when the program first starts I want to draw the data and then every time I submit a word and it's done I also want to draw the data again so now if I do this I can say hey let me add the word uh mango and give it a score of three and hit submit and now o look at that I one thing I forgot in my draw data function was to clear the background so because it it drew it again over everything so I'm going to take this background function and put it right here in the got data function and I'll hit refresh again we can see everything's in there mango flour blueberry sunflower all these things what's another fruit that is delicious a raspberry I only know how to spell raspberry now because of the raspberry pie and it's like that's like the password or something default typing it in all the time score uh uh four and I'm going to hit submit and there we go it runs and we see the result so now I have an interface where I can sit here and submit new words to the database and I also have this sort of goofy front end which just shows me a very poor visualization of all the words that are currently in this database and if I go look in the server code I should be able to see hey look at this this words. Json file it has everything so even if I now quit and restart the server and go here again I'm still going to see all of those words so now we have both now we have an API with routes that accept parameters we have a we have a persistence saving all the data to a Json file and now we have an even an interface that allows us to interact with the API in one way and so the next video that I'm going to do is look at how do I submit data to a server using a post and why would I need to use a post versus a get what's a get what's a post so that's what I'm going to look at in the next video that I'll make and then by the end I'll wrap it up and actually make this thing do some sort of uh sentiment analysis and give a scoreback when you post a large body of text to it okay thanks for watching and look forward to hearing what you think in the comments and all that sort of stuff