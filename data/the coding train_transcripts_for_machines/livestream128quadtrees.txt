hello happy bride hey this is actually the second livestream today but this is the official huh I don't know the answer to that question sorry my computer is beeping at me ah okay welcome everything is going wrong first of all hello how are you I'm out of sorts even more than I usually a.m. I had a wonderful trip this week I was in Zurich Switzerland which I I'd been to before but not in many years and I had a wonderful time and then there was this snowstorm in New York now I keep thinking every week is gonna be the week that I finally take away the snowy is this the snowy one yeah the snowy wintry themed coating trade background wallpaper but no there was like all the snow and my flight was canceled then I could got another fly then that was cancelled then I had had to change this and I ended up actually flying through a place I had never been before Iceland I was in Reykjavik for approximately one hour in ten minutes I did get a little picture out the window of the airport I night now I feel like I really got to go back to Iceland do I have any viewers from Iceland seemed I was listening to everybody on the plane talk about their vacations and I was only there in the airport so oops I'm in the wrong screen here hopefully everything is working fine so I'm operating at 50% and since I actually my brain capacity is that a normal day is really just like 50% of the average it's only 5% but I'm gonna I'm gonna make do I'm gonna I'm gonna put my energy into this and I'm gonna make do so what I thought I would do I got back late last night and I just didn't have the time to kind of get myself settled into the mode where I felt like I wanted to continue the trajectory of neuro evolution that's weird so I think what I would like to do is tack a topic I am sure oh there's a new print oh there's a new printer on my network what could it be what network am I on why is there a new printer well that seems suspicious to me let's turn off the WiFi here okay cuz I really just want to be on the ethernet network so I'm going to this repository rainbow topics which I think I should probably change to like train stations or something it's still so I've sold historically named a lot of these with the word rainbow and I want to look up quadtree it don't worry I will explain what a quadtree is and it is not an octree or a tri tree I don't know what other kinds of trees there are look at this coding challenge quad tree spatial distribution coding challenge quad tree emerges quad tree collision detection octree oh my capacity is definitely not eight times today alright so so let's let's let's look at this so I'm just curious let me just click on these three let's do some github maintenance here at the beginning of the coding train for optimizing 3d alright octree is what you would use for 3d right cuz quad tree for 2d ok so going to attempt this today closing in lieu of so what was the first suggestion I like to usually keep the oldest one which was August 5th 2016 so August this is a nice one August 5th so this one ok all right let's thumbs up this whoops no I already thumbs up it this is 144 going to attempt this today closing in Liu is that the right thing to say in lieu of 144 thank you it's mighty all right that's how I feel like woohoo let's copypaste this and gonna write the same exact message here and there we go so now I've got quadtree collision detection we're gonna go up to quadtree Wikipedia oh well whoo I like this image though so this is what we're gonna make this is a really nice image lovely image all right hexa Decca trees perhaps I'm just looking at the chat for a second I have never been I don't think I've ever been to Sweden there are so many places that I have never been to that I would like to go someday the coding train World Tour will happen but now I don't have a budget for that but we'll see we will see if we can work that out okay so quadtree know okay before I get to quadtrees let's do some housekeeping first I I'm gonna go to the Twitter account of cat small cat did a yeah I did a guest tutorial about the fazer j/s library this afternoon it is linked from her twitter at cat small this youtube link right here it is an unlisted video because I haven't cleaned it up and figured out how do what will done that sort of like LastPass over it but this link will work so if I click on this here this video should start it has me in it but eventually it has cat in it oh look the coding train is live now let's go check that out Oh live now oh all right sir I would love this recursive thing that happens we're now it's going to infinitely do this over and over again all right I have to stop that so I encourage you to check this out this was real a this was wonderful for a couple reasons number one is cat isn't amazing she is a super awesome presenter she gives a lot of talks at conferences she makes a lot of games so you should go and learn about her work if you don't know about her work and she was incredibly well prepared which is letting you know that I am not good at doing for my videos so and there's a thoughtful example there there's links to it there's links to code pen so I really encourage you to check that out oh maybe it's not unlisted great no reason for it to be unlisted it's listed wonderful so I want to mention that now so I want to mention that number to housekeeping wise I am here today I will be back again next Friday I have some exciting plan that I will be continuing my series on nerve neuro evolution and eventually we'll get this combination of genetic algorithms and neural networks all embedded inside this little flappy bird which will learn how to play this game and and and and wonderful things will happen I hope senses are not getting put together I think I need to work out something that's like just like a coding problem and I think things will start to click into my brain it's so warm in here again hmm all right so that's my housekeeping stuff I don't have any housekeeping stuff let's just get started I don't have a lot of time today to go to sleep Oh a Rodrigo says how do I tell him that he forgot to close a suggestion on github well today is your lucky day I happen to just peek at the chat that very moment so let's take a look and let's look for quadtree again I can't spell quadtree and this is the one that ah thank you to me I am so me for taking care of that for me oh the internet is amazing would love to come back to Finland who I have not been to Finland either I have been to Norway let me tell you about a place that I've been to in Norway mmm that I absolutely love it is an island called rune de and I apologize if I'm not pronouncing that correctly rune de Norway it is near the city of Ã¥lesund oh let's look at this and it is a little island you get to it by driving over a bridge there it is I believe it's known as bird island I don't know if rune de actually translates directly to bird Island but I have so many wonderful pictures and there's a what's that there's the rune de bird there's like a science center there I don't know what to call it bird somethingorother Environmental Center yes the rune de Environmental Center there's a little this is a nice panorama picture anyway amazing hiking story right now I there's a funny story not so funny not so funny oh we did the first time I was there was with my family we did a nice long hike took about a half an hour up to this top of this hill and got this beautiful view of all these birds went back down ask somebody Oh how's the hike to the lighthouse is it it's a little bit longer than that a little bit harder but you'll be fine the house was like hours and hours and hours and very steep as with small children at the time was we got there was like got there after hours hours of hiking and the lighthouse the only way to get there is by hiking and the only way to get back is by hiking but I did ask the proprietor of the lighthouse is there a boat it could take us back she laughed at me in a very friendly wonderful warm and welcoming way I highly recommend this wonderful little spot I hope to go back there again I'm kind of into the a birder into birding birding Bert Bert Bert ornithology is that the right term anyway I'm way off topic now can I get like a satellite view of this oh yeah yeah here it is oh look at this so this this kind of is where the road is there's a campground where's the lighthouse that we hike to is that it here this is the lighthouse here does that look like a lighthouse do you know there's like roads there so wherever we went to the lighthouse there were no roads I think I need some 3d going on here okay looks like the lighthouse was like out over here or something okay you're not interested in this oh I'll do this on my own time I heard a camera grow all right so it's making this anything in this livestream I don't know I'm procrastinating remember this afternoon when there was like a thoughtful prepared presenter let's come over here let's let me talk a little bit about quadtrees and while I erase the whiteboard so something I've actually been wanting to do this for a very long time and I'm embarrassed to admit well I shouldn't no one should ever be embarrassed about anything about coding and learning to code that I actually have never implemented a quadtree before I know what it is and I did actually write some code for one on the airplane so I what I when I say I haven't never implemented one I have hadn't until yesterday when I was on the airplane and I thought oh let me give this a try because this is what I'm gonna do without internet there's something very loud going on in the hallway you would think that noise was me watching the whiteboard but it was not but one of the things and I I don't want to get too far into this because I want to include this in the sort of edited portion of the video but one of the things that's a common thread in many of my tutorials and videos is a particle system that could be a system of like flocking Birds it could just be particles making fireworks or particles making a waterfall it could be particles that all have magnetic attraction to each other could be particles that are all bouncing off each other there's so many kinds of collections of things collections of particles and if I ever want to have every particle check every other particles location this is something that is very expensive algorithm to do and in fact it's an exponential algorithm because if I have ten ten elements and each one needs to check its location relative to the other ten that's 100 checks if I have 100 that's 10,000 checks if I have 1,000 that's 1 million checks so while the amount of particles is going up by 10 the amount of checks is going up by 10 squared I think that's right so so anyway I'm getting kind of aid to the X 2 far to the explanation so I'm gonna I'm gonna double back and start this over in a second but a quadtree is a solution i just want to mention that I do have another a the thing that I always had done before which is not as sophisticated and if I go to nature of code examples why did I pick this algorithm for today and if I go to agents and I think if I go into yeah bin lattice spacial subdivision do I have these examples on this computer I have the p5.js ones was know if they have anyway I have this example which you could take a look at which implements a particular algorithm that divides the canvas the window the twodimensional area into a grid and each element registers where it is on the grid and so what I can do is instead of having every element check every other element each element can check the other elements that are registered in the same area that it's registered in and this reduces the number of checks significantly but it has a big problem which is that it treats the entire space equally so it doesn't matter what the actual distribution of the particles are you know each cell of that grid is the same size what a quad tree does is it's a way of creating this grid of sectioning off parts of the space but get providing more and more detail where there are more and more particles to allow for the retrieval of particles within a certain area in a more detailed and efficient way so this is what I am going to attempt to implement so what do I need to implement this I need a brain that is working better than mine currently is I need some p5 stuff I also AM of a mind to turn I would like to you know I really want to make a tutorial about building a processing library and I was thinking actually I'm gonna do this in JavaScript today because I think it's actually this is but easier to implement in JavaScript just because javascript is so flexible in terms of what you can do with arrays but I was thinking that maybe what I might do in the future is make a JavaScript libraries for quad trees but make a quadtree library that you could basically just pass it a whole bunch of objects as those of those objects all had an XY point associated with them you could then also pass it like I'll here's an area give me the things that are in that area so I'm thinking about turning this into a library at some point I am going to just to this get rid of draw I'm going to do this ridiculous thing that I do because I can't help myself I don't need I don't think I need Dom or sound and then I want to go to the browser and localhost I guess I can take out these links right now from pi day and oh I should show some of one thing I could possibly do is just really quickly go to twitter.com hashtag hashtag hi train these are some things look at these they're some things people made for these are animated the first few digits of pi using processing this is a nice one they've got three more digits and modified them by shape another one here's another pi train visualization so these are some this is from something else pi train still so anyway i just wanted to show that some people were making things it's nobody really seeing anything in the slack group I guess that's the case all right so quadtree let me close this I've got the Wikipedia page up so the Wikipedia page actually has pseudo code for this algorithm and it's here it has like objects store in XY an object to store a rectangular area and then the sort of quadtree class Khatri object quad tree object that has a capacity so I couldn't I could maybe copy/paste and sort of write it from the pseudo code I think though I'm going to kind of program it from without looking at the pseudo code and I'll reference it if I need to alright okay just give me a second here all right I'm ready now officially ready brain power activate oh cool life headed that was a very long whistle coating train let's not have that let's let's start over here did my mic is my mic on yes it is okay really yes just like something that's weird is going on here no I guess just nobody's posting anything okay hello hello welcome to a coding challenge in this coding challenge I am going to attempt to make a quadtree now you might be asking yourself and it's a perfectly appropriate question what is the quadtree what is a quadtree and why do I care well let me talk about that over here so something that you might have noticed in many many many of my videos and various things that I've made is look at this beautiful marker how it really made a nice rectangle there that I create a lot of systems that have a lot of what you might call particles in them or little agents that flock around the screen or that bounce around or bump into each other have magnetic forces and one of the elements of doing it one of the elements of these kinds of scenarios is that for every particle for every dot for everything that's in my two dimensional space I have to check its location relative to all the other ones so this one I need to check relative to all the other ones this one I need to check relative to all the other ones and that is a lot of checks for example if there are ten if I have ten particles and I want to know the distance between each particle and every other particle I need to perform 10 times 10 checks which is 100 now of course there are like little optimizations there that I can reduce the number a little bit but but at its core this is the idea so this is what's known as an N squared algorithm because I have n elements and I need to do something N squared amount of times which means if there were a hundred then suddenly I need to do 10,000 checks and if there were a thousand I suddenly need to do one what million checks the pinkie maybe I'm not so sure so you'll notice that these are going up by a factor of ten but these are going up by a factor of well not ten ten squared and more right because this is a hundred times this and this is a thousand times this so it's it's exponential so this idea here that we can we do better well I have an idea for you because I'm really thinking about this my idea is well okay what if I know I know I know I know I got this what if instead of like for this particular particle right here instead of checking all the particles why don't I just check the ones that are near it like within a slight range around where it is okay but how do I know which are the ones that are near it okay let me check all the particles and see which ones are near it but I'm then I am checking all the particles again is there a way that I somehow could create these sort of regions of particles and then ask give me just the particles within that range without having to then suddenly go through all the particles and in fact there is such a way and that one way there are many ways is known as a quadtree now the reason why it's called a quadtree is that the idea is to take a space and section it into four four sections quad and each of those sections could potentially be sectioned into four and those could be into four and the reason why it's a tree is that the sections I know if there might be about the cells the tiles actually include references to their subsections and so it's like a tree and there's going to be a recursive algorithm here so we're gonna start with this idea of a rectangle and that rectangle will store a reference to four rectangles and each of those four rectangles will store a reference to four rectangles but here's the thing they only are going to need to store to store reference to these children rectangles if there are a lot of particles in their area otherwise they can just keep track of their particular particles so the idea is that I can take all of these particles register them inside of this quad tree and then the quad tree is something I can query to say hey think about this this part of the window is part of the canvas just give me everything that's there and it's gonna reduce the number of checks by a lot I'm pretty sure I like to go look this up I think this is most likely turning this into n log n so instead of N squared and this is has to do with something called Big O notation which is the way of notating how expensive or how long an algorithm takes based on the number of elements that are part of that algorithm so an N algorithm is wonderful because if there's only a draw I just want to draw ten things that's an N algorithm check everything against everything else that's N squared and log N is going to reduce that number quite a bit let's go to the Wikipedia page for quadtree and see if I'm right about that just pause for a second I'm gonna find ya oh oh just log n point quadtree constant time is it just log n not n log n oh but it is n log n because a lookup is log n but I'm gonna do it n times right can somebody confirm this for me before I moved on yeah it's 10 times 9 not 10 times n that's what I mean like we check the but that that's sort of not relevant I mean because I mean it is relevance re it's a good point but I didn't mean to that it's a very valid question and a good point I just mean that does this really does this idea change very much if this is 90 and this is like well hundred times like 99 thousand whatever whatever it whatever it is yes oh and log n ok so it's under there under point quadtree which is what we're going to do ok okay so this is the Wikipedia page for quadtree it this reminded me that I that are there that I didn't mention that there are also other kinds of trees like an ox tree which you might use for three dimensions and you could just say kay tree for any generic amount of sub sectioning but but I'm gonna really just implement the sort of standard quad tree also known I believe as a point quad tree and if you look here it says operating in o log n time so you might have to thought that I got this wrong because I said n log n but I think I'm actually correct here because the idea here is that to look up a bunch of particles for one for a given area that can happen in log n times but in this where I want to check every particle against every other particle I need to do the log n thing n times so this like let's just say let's just go for let's look at the 1,000 instead instead of 1 million this would be equals one thousand times log of 1,000 which is just three thousand checks this is a massive improvement woohoo alright pause pause pause pause pause a question has been asked in the chat wouldn't you have to restructure the quadtree every time an object moves and in fact the answer to that question is absolutely 100% yes this quad tree is something that work for collision detection that you have to build each frame of animation and there is a lot of time that it takes to build the quad tree but it's totally worth it because if I can get this 1 million number down to 3,000 and just think about it if I had 10,000 elements how much you're gonna be able to reduce it it's worth building the quad tree ok so what do we need to make this quad tree I'm gonna do make an example using p5 but I'm going to and let me make another JavaScript file them to call it quad tree Jas I'm gonna build the quad tree code oh let me just get rid of this message sorry we met you can edit this part out quick click update we install a fine I'm just gonna relaunch Adam thank you very much shoot I forgot what I was saying do this again I'm going to add a new file called quad tree quad fail total failure try this again I'm going to add a new file I'm gonna call it quad tree J s so this is where so I even though I'm gonna use p5 for this example I'm gonna write the quad tree algorithm in JavaScript with no p5 dependencies that way it can be applied you know to lots of different scenarios with other frameworks ok so what do I need to build a quad tree well I need a few kind of core elements here for example I want to have a point class and a point class is just going to be something that stores and x and a y together and again I'm gonna be doing a quad tree in two dimensions I also want to have a rectangle class and a rectangle class is going to be I could have a point you know what I'm gonna do something a little goofy I'm going to give it an X and a y and a width and a height so I need these ideas I need to be able to make and and I couldn't use a p5 vector for the point class but again I want to build this without any p5 dependencies so I need these data structures because the what I'm gonna the way I'm gonna make this quad tree work is by feeding it points I'm gonna say insert points into the quad tree and the quad tree is going to have as part of itself references to all these rectangular areas ok so now let's make a quad tree class so what do I need to make a quad tree now here's the thing I think about this a quad tree hoo boy you might go back and look at my binary tree video tutorial or some of my other videos that have to do with recursion because in what you might think is oh I'm going to have an array and the array is going to store a list of all of these sections or tiles or rectangles but I'm not the quadtree is actually a reference just to the large kind of parent the sort of root level rectangle that area and it's gonna have a reference to the four things the four subsections and those love references for subsection so that's a tree so actually a quad tree only has the only bit of data that I really need and we'll call it a boundary this stop boundary and that boundary is going to be a rectangle so for example in sketch KS I might say let QT be a new quad tree and I might say let boundary he be a new rectangle and you know what I think it's gonna make life easier if the rectangle is something that we think of as centered registered around its center point and those width and height values are actually just the distance from the center to the edge so not the full not the full length of each sides but the half length so I'm gonna say the boundary is at 200 200 well with a width of 200 200 that's kind of awkward but fine because it's 400 400 okay so I'm going to create this quad tree with a boundary console dot log Q T so this is like a beginning point a starting point so let's take a look rectangle is not defined because I forgot to reference my new JavaScript file here in my HTML file quad tree as a boundary of a rectangle it has these properties so so far no errors we're moving along now what do I need to do next the thing that I want to do with any quad tree is I want to say something like let me make a little loop and I'm going to just do it one time and I'm gonna say a point I'm gonna make a random point and a random area in the canvas and I want to say quad tree insert that point the idea is that what I want to do is I want to take all the points that are within this space and points might represent particles any type of moving agent or entity but right now I'm just going to build the static quadtree with static points I want to insert them into the quadri so an important aspect of the quadtree is a property known as capacity so how big is the quadtree when do I choose that I need to subdivide for example if I start putting particles in this section here oh maybe once there's 10 particles in that section it's gotten too big I need to subdivide it so we can we could typically might actually be to just have that actually be one as soon as there's more than one particle in that area subdivide but let's give it let's pick the number four it's kind of an arbitrary capacity and it might make sense to create a quadtree with a given capacity so when you create it so I'm going to say capacity equals n so now in sketch I'm gonna do quadtree boundary comma four so this is a quadtree with each section each rectangle having a capacity of four timeout for a second oh yeah so I have a mistake there I think I want to make the font a little bigger is the font seems a little small I don't know why if I like shrunk it since the last time I was coding when I can move this over here and then this needs to be height thank you thank you a hello who points out this needs to be height just pausing for a second here okay there is a little error here this should say height it doesn't really matter here because it's a square but just for the sake of argument and timeout my oh the yeah my autoformat on save is turned off let me let me go back let me do that too okay okay it's back thank you thank you thank you I know I muted that's so weird why did it mute all right that's Oh everything's okay that was really weird okay I'm gonna wait now until you guys catch up to me because I'm not getting the notifications on my watch oh they're on no that's weird okay okay the mic is back on sorry about that everybody let's try this again okay was just pointed out to me that I did have a mistake here this should be height you know it is a square so width and height are equal but if I want to set myself up for success in the future let's try to correct that put height there okay so now I need to go here and I need to what do I need to do I need to write this insert function insert and what do I want to insert a point and Oh what I need to do here so oh wait a second I'm missing something super important what is the quadtree what is each tile need to have associated with it well we know it needs its boundary we now know it needs its capacity but also needs to keep track of a bunch of points that are part of it so what I can do here is say as long as the length of the point's array is less than the capacity then I can just say this dot points push push what the point now I'm gonna just I'm going to come for a second I'm sorry but thank you everyone in the slack group posted these like animated colorful rainbow like kitty cats and I can't look it can you I can't look at that anymore it's like in the corner of my eye it's making me really crazy so you'll understand in minute why I am typing these messages okay great all right okay we're good we're good we're good we're good I'm just thinking about this for a second okay so okay so I've inserted the point now what if the capacity is full well if the capacity is full then what I need to do is subdivide so I'm gonna make this into a separate function I think if you look at the Wikipedia page the algorithm that's outlined there kind of does the same thing so I want to make a function called subdivide and what that function does is it takes any rectangle object remember that has an X Y and a width and a height and sub divides it into four sections over there and so all I need to do is compute these four points and these four within Heights and I'm going to store those in variables and a way that you could do this right I think I've done this as like top left top right bottom right bottom left another thing that I've seen done is on north so north east is this Northwest Southwest southeast and so that's the sort of convenient way I can refer to these styles these subsections as Northwest northeast Southwest southeast so just to be kind of concise about the words I'm going to use I probably should type these all the way out actually so let's do this this North West equals a new quadtree so I need to make all of these subdivisions south north east north I'm sorry that that I'm so easily distracted by things okay north east south west south east okay so this is gonna work so each one of these I'm making a new quad tree for each one of these set subsections but they need to when you make a Quadra you need to give it a boundary so what I need to do is say I'm going to say let north let North West equal a new rectangle that is so North West is up here X plus width divided by 2y minus height divided by two and then with divided by two height divided by two so I'm gonna make a new rectangle that's at this dot X plus this dot W divided by 2 comma this stop Y minus this dot H divided by two and then this w divided by 2 this H divided by two so that is the boundary for the northwest northwest quadrant and then I'm going to pass that in here and then I'm going to do the same thing for North East for Southwest and southeast oh shoot my mic is still working okay Southwest and southeast so now though northeast would be X minus and then Southwest and southeast R plus Southwest is X plus and the southeast is X so does this make sense right plus minus plus minus and then minus minus plus plus so I think I've gotten all the quadrants here so I've made rectangles out all the quadrants and put them in two variables now here's the thing I don't always want to subdivide right I only want to subdivide if I haven't already subdivided this quadrant this this quadtree so I could check I think what I'm going to do is I'm gonna make a variable called divided which is false and then I'm going to say if not if not this dot divided this dot subdivide and then this dot divided equals true now what I need to do is if I'm at capacity I remember I'm inserting a point the whole thing that I'm doing here is inserting a point all right hold on timeout hold on a second the chat is telling eyes of east west confusion west east west east north north south south I've made a pretty big error here I've gone off the deep end writing way too much code before testing it there is nope this refers to this particular quad tree there's no this dot X what there is is this boundary X boy this is gonna make this super longwinded let's do this I kind of feel silly doing this but I think this is going to make our life much easier just in terms of being able to read the code so I'm gonna make this is totally unnecessary but just to make the code more readable let's make some local variables to this function that are kind of like aliases to this longer way and then I'm gonna start over again and I'm gonna say X plus W divided by 2 y minus W divided by 2 W divided by 2 H divided by 2 and this should be H and now I'm gonna put these all back here north east south west south east and this is X plus X minus X plus X minus y minus y minus y plus y plus mi right finally West and Easter swapped Oh also West the Easter SWAT boy northeast I'm gonna do it this way northeast northwest yeah south east south west right because east west if this is the center right east to the west north to the south okay everybody I think I've got it now oh boy so now I'm gonna now I need to pass in those boundaries north east no north east north west south east south west really bad feeling that about 15 minutes of this video is me just trying to figure out north south east west the good thing is that parts done I think we're good now I'm just pause for a second to just check this code one more time No okay so in the chat the suggestion is being made to top left top right the suggestion is saying shouldn't it be W divided by four and that's actually not the case because I am and I am thinking of W and H as not being the full width but actually being the half width already that's good it just makes life easier to sort of sort all this out so I'm actually just moving over half of W okay yeah wreck mode set but I'm not drawing anything yet so I'll need wreck mode Center if I start to draw some stuff okay okay so I'm feeling pretty good about this code there still could be an error there but I'll find it later if there is so remember where we were we were checking if it hasn't been divided subdivide it and now what's the whole point remember the whole point of what I'm doing I was just saying this before I found all those errors are the chat found all those errors that I'm trying to insert to point so if I'm at capacity now I just need to insert the point in my subsections so I can actually say remember these subsections are all quadtrees so I can recursively call the insert function on those so I could say this dot northeast dot insert that point so let me do it to each one of these north west south east south west so think about this get rid of some of this extra whitespace the idea here is that okay if I have room I'm going to take the point and I'm done if I don't have room then I need to check do I have some children quadtrees if not if I don't I'll make them and then I'll just say add I'll just sort of say hey pass the buck here you take that point all four of you and all four of those will say do I have room but here's the thing I'm missing something important here should I really be taking that point night kind of made sense at the beginning that I just said was why vroom take the point but really I should be checking is this point something that's within my boundary that's the whole point of this because now that I'm gonna say hey all four of you only one of those should really actually take the point right those so what I really need to do before I even insert the point at all is I need to say something like if if this dot boundary contains the point and better yet something like if this stop boundary does not contain the point then just get out of here like I don't want to do anything if I'm ignoring I don't contain the point stop don't go any forward I'm the wrong path I'm the wrong section some other sections gonna take care of it this dot boundary dot contains well that means in my rectangle function I need a contains function that returns true or false based on some point so what I can say is I can say hey is or I can actually just return point dot X and this is going to be really long point dot X if it has to be within all of the bounds so it's got to be greater than this dot X minus this dot W and and I can put these I think on different lines just to point dot X is point dot X is less than this dot X plus this dot W and point dot Y is less than is greater than this taut y plus way this is a really exciting thing in programming and point dot y is less than this dot y plus h oh my goodness minus and plus right remember contain contains contains this is a function that checks if this particular point is within the boundary so is the point is a particular point within the center the width and the center plus the width the center minus the height and the center plus the height and I'm gonna stare at this code for a second to see if it's right nobody's written anything that it's wrong this is all gonna get edited out so I've frozen myself at this position okay I feel like that's pretty good so why not let's keep going here so if it's not in here go away otherwise if I'm not a capacity add the point if I'm not divided subdivide and then just try to insert to all my all these children points now I feel like I need insert to kind of like return true or false but I guess because at some point it's gonna be done but I think this is actually pretty good looking at the chat contains as a reserved word notes or it perhaps missing the point equals boundaries stuff break up the existing points well I shouldn't be reading the chat so much because it's distracting me from my flow I should just keep going and make all my mistakes I'll come back to them later as someone earlier mentioned subdivided needs to handle existing points and can set subdivided itself oh yeah yeah that's a good point yeah it could handle the points but I'm gonna I'm I'm gonna keep it the way I'm doing it but that's a good point okay I had a nice suggestion from the chat which that maybe it makes sense to in the subdivide function actually set this dot divided equal to true okay so let's let's think about this how am i doing here what is this gonna do let's let's actually try running the code all right so I have a boundary its capacity is four it has a points array and it got a point that's good that's great let's add four points all right look at this I've got a boundary I've got a capacity divided is false and I've got four points great so now if I add five points it's definitely gonna have to subdivide let's see how that works let's add five whoops let's add five points now I could have changed the capacity of the smaller oh we've got a problem so look at this when I when I set in the constructor this property n as the capacity but when I make these new quadtrees I'm not passing that in so I could like do something like this but I think let's just I made this a little extra complicated but let's pass in also the capacity so that capacity needs to continue to be there now let's try with five points all right look at this it's got four points where's that fifth point where's that fifth point it's not in the North West East it's not in the North West it's not in the southeast it's in the southwest because does this seem right the point is 104 354 that sounds like West yes Weston's this way South it's this way so I think this is working I think we're kind of getting it subdivided correctly let's let's try 50 points no errors I've got a quadtree with a capacity of 4 it's got four points North East has a capacity of four it's divided it's got four points it's got a bunch of subsections which of which have this one just has one point but maybe this one has no points so I think it's is working but here's the thing is this working looking in the console is only going to get me so far I think what would help me now to see if this is working really is to visualize it so I'm gonna break with what I said at the beginning whoops which is trying to purely have this eye I think what I want to do I mean I kind of want the quadtree thing to be independent of p5 but I'm going to give that up just for a second because I want to write a function called quadtree show and what I'm gonna do here is I am going to write out a function called show and what is this going to do I'm gonna say stroke 255 or let's a stroke 255 no fill and I'm gonna draw a rectangle at this dot boundary dot X and this stop boundary dot Y and this dot W times 2 I need to say times 2 because p5 expects the full with this dot H times 2 so I'm drawing the rectangle for the boundary and then sorry I'm thinking about this for a second and then all right then if then I want to recursively draw any of its children boundaries so if this is divided then I can say this dot North West Show so I want to recursively North East southeast Southwest doesn't really matter what order but just to be consistent northeast northwest southeast Southwest let's take a look a rectangle is not defined quadtree jsf wrecked in p5 w is not defined line 73 oops this should be two and then let's see here background zero alright what happened here oh I'm running out of battery timeout where is the power that's one power here's another power don't worry all right what mistake have I made thankfully the chat is here to tell me that this is this dot boundary right I'm always confusing and forgetting that the X Y width height properties are in the boundary object not part of the quadtree object itself so we can say this boundary H so let's see what happens now there we go Oh everything looks like it's right but off kilter and this is an easy one I forgot to say rect mode Center because I want to draw the rectangles based on the center there we go this looks good now let's actually draw the points point let's say for for let P of points this dot points and let's just say point O P sorry point P X P Y so this isn't very many points and it's very hard to see those so let's say stroke wait for and Stroke wait one up here stroke wait one and let's go to sketch J s and let's make 500 points and there we go this kind of makes sense right you can see for whatever reason there are not as many points here so it didn't need to subdivide but it did so divided here we never got anywhere to subdivide beyond just this size right is there any so what's kind of unfortunate about this is why not because I'm calling things randomly but kind of setting the points randomly the subdivisions are just like perfect it's so evenly distributed distributed that the subdivisions aren't that interesting let's change this I have an idea let's actually add let's get rid of this oops let's say let's add let's add the draw function and I'm gonna say if I could use mouse drag but I'm gonna say if mouse is pressed and I'm say because I have an idea here I'm gonna well first I want to always draw it and then I want to make a new point where the mouse is and I want to insert that point and I need the this to be a global variable now the quadtree itself I'm just gonna call it tree because I don't like cutie is sort of a I think it'll take a little bit more I could say I call it Q tree kind of like that Q okay so bear with me for a second what I'm doing here is I want to insert points where I'm clicking the mouse so at this huh show of undefined oh whoops I do not want to read to clay our cue tree with let so we can see as I draw it has to subdivide more where I am that's kind of cool what's why is the framerate seem so slow sorry hold on interesting questions in the chat yeah yeah yeah yeah yeah there's so many good questions in the chat here and I want to address but I got to come back too I got to try to remember the people are asking about the edge cases if something's equal are asking about should I move the points into the subsections but I just for a second here this is all edited out here Matt yeah I just it feels like it's running really slow whoops 30 frames per second no it's just that I'm not using mouse dragged so that oh yeah I need to do yeah I know I need to do greater than or equals on a couple of the edges okay I'm just trying to think of what else I want to do here because I was gonna what I was gonna do is insert a bunch of random points so let me actually insert what I wanted to do was just insert a bunch of points I think this will make it more interesting to look at like if I actually insert five random points whenever I'm clicking the mouse and we can just set these like a little bit randomly around one area and let me run this again yeah so you can see I'm just getting these like subdivisions and so now we can sort of see that what I'm doing here and is I'm getting a nice it's subdividing more where it needs more subdivisions if that makes it now I'm being asked a couple different questions from the chat number one is edge cases and what do I mean by edge cases what if the point is exactly on the edge of one of those sections I didn't account for that the truth of the matter is with these random numbers and floating points but this could really happen so what I think that I need to do here is in the insert function in the contains function what I need to do probably is just consider whether it's less than or equal to and I could do that on just two edges so that it would kind of but you know what if it's on the edge of the very edge I don't know what I could do is just kind of be inclusive how do you write these like this and this should take care of that because I'm gonna I'm gonna just say if you're on my edge I'm gonna I'm gonna I'm gonna take you don't worry and I probably could get not but I'm not concerned too much about the accuracy of this and you can see so it's same same thing and interesting it's really subdividing a lot in these areas I could so here we go so this is kind of this is kind of an interesting visual result like I almost want to go back to not drawing the points now like let me take out the points because now I'm able to draw I'm kind of like with my mouse I'm drawing this kind of interesting recursive tree pattern it's not doesn't seem like a tree but it's all if I were to unpack the way it's stored it's all this nested tree of rectangle objects okay so what have I really done here I have made the quadtree but I'm missing kind of a really important point because what I want to use the Quadra for is to query it I want to say hey this area could you please give me all the particles back that are in that area and I think what I'm going to do is make that part two of this coding challenge because this first part of the coding challenge is is like is is finished I've made the quadtree data structure and I'm storing the points in it there was I do want to address one question is oh yeah this will add okay so hold on I realized that so the thing is it is it is going to add it to more than one of these which is a problem well look just timeout for a second I should only do I forgot I do have to only do two edges the problem is the thing is I kind of want if it's added it to Northeast I want to just jump out of this so I mean this I'm intro like I want to say I think what would be nice is for this to do something like return false return true so that if I don't have to check the other ones I think that's gonna be I almost rather do it that way and it'll just take the first one Simon says you can have the points be a different color that's an interesting suggestion Oh like just make them random colors Oh a different color than the boundaries yes Oh be good yes okay okay boy I'm really making this an editing nightmare but so before I leave it was rightfully pointed out to me that the way I just did that with equals is that it would actually go into if it was exactly on the edge between lek east and west it would end up in both of these quadtrees which is a bit of a problem so there's a couple ways I could address that again though what I think what I want to do here is I want this function the insert function to return true or false whether it's succeeded in in in inserting the point so it should return false if it's not contained and it should return true it should return true if it is actually inserted into the points array and then I could just say if I can wrap each one of these I can actually just return the result of each one of these right so that way oh no no no no no no no I can't do this because they don't want I really have to say if it insert only if it's true return true if this is a little awkward but this is fine oh yeah you know you know me I like to refactor later so what this is gonna do is it's just going I could use an else at least I guess right because I so what I want to do is I want to find it's gonna you know I want to find where it's been where it's got inserted and then I want to return true okay so all this extra stuff I'm adding here maybe this is silly and I should have just used thought of the boundaries more carefully but this is going to guarantee that it's only ever inserted into one and it is giving slight preferential treatment to North East because it was on the boundary it's always going to go into North East as opposed will never get to North West but that's okay I think so let's just see if this is still working it is somehow I like imagining it's working faster but I don't think it actually is wonderful okay am I really at the end now ah there's a nice little there's yeah there's people are giving me all sorts of suggestions about how to improve this code I could use like an or and so I encourage you to make a nicer version of this in your own code I'm gonna leave it like this because it's really explicit about the algorithm I do want to write some comments in here so I'm gonna finish with this first part one of quadtree I've made a quadtree in like only four and a half hours it took me and I'm gonna do a part two and in part two what I'm going to do is ask for a selection of points within a certain boundary and then I can apply that to a collision detection out problem and make that collision detection problem much much faster okay so thanks for watching this part one and watch part two if you liked it'll be next and you can find a link to it in this video's description or in contains as much faster oh you mean just check if it's outside yeah yeah that's a really good suggestion so actually this is a good point someone in the chat now it's that it's scrolled past public am i so i could do it or right instead of saying if it's this and this and this and this i could just check this or the opposite if it's not anywhere within these boundaries it's not within the boundaries so let somebody else up i think i want to make this like even though this will go as a coding challenge into my github coding challenges repo I think I'm gonna make a standalone quadtree repo that'll have make this into a little library okay Simon the colors or things I encourage the viewers to add and make better Simon I would like to know had you ever heard of a code tree before I miss our quad tree a code tree I I bring this like it's barely alive 520 I can do the second part alright so how do I do this second part let me think about this for a second let me look at the Wikipedia page the Wikipedia page algorithm is insertion query range oh right I just check if it's intersecting and then I give it those points no points in range wait Oh emptiness right if it's not no I say if it's not intersecting then give it an empty array otherwise give it the array that it contains if it's not subdivided you're done and otherwise append the result oh yeah yeah okay just looked up this pseudocode algorithm that was very helpful so I don't have to just need it a little a little help there okay this is like totally what I'm gonna do is just change this to cuz it is just I really should have the whole time been doing this with mouse dragged because I don't need to recalculate it it's just like eating my fan is spinning the so let me just this is a bit better yeah I don't know why I didn't do this in the first place okay all right okay right that's a very good point so when I do this now to determine if I've done it correctly I do need to have the points to be different colors so I can see if it really works okay so let me put the points back in I put the points back in like I'm like picking my nose live on air thanks everybody let's make a color here okay and let's set the background here all right okay mic is still working okay here we go okay welcome to I'm taking this very seriously welcome to quadtree coding challenge part 2 I am going to in so in part 1 I implemented a quadtree meaning I made a data structure that tracks every point I'm why is it so slow I'm not going to worry about that right now is it the drawing that slow I think it's the drawing I got to come back and start this over but there is no frame rate now because I'm really I doing this and the frame rate idea is meaningless look how slow it became is this just JavaScript Oh different color per cell that's a great idea hold on maybe that's just that I'm adding so many points think something is going wrong here hold on I'm not doing part two right now I want to just let's I like this idea of a new color so let's just add this in for a second and I'll just make it a random one well let's make it to its gets let's put that back to four cuz yeah it's working as far as I can tell so why is this one green well the reason why this one is green is it was actually probably in the full one first then as more got added it had to subdivide so these blue you can see but these are probably these are within this so it's a little let's yeah but I'm pretty sure this is working right I just feel like it's weird that it's running so slow maybe it's not yeah I mean I guess JavaScript is slow and this computer is probably like oh wait a second now oh just have to color on this it's a good that's a good point so what another thing I can do is I can say as I can that's a good idea fill this dot color I need to give it some alpha though this is silly with it this is so silly what I'm doing move fun pretty colors D pretty pretty colors you know another thing I could do actually by the way is that it's not it's not so insane to make the capacity just one but it's sort of hard to figure out what's going on because I'm not it was mentioned in the chat before what if you subdivide you should add the parents point to the right subdivision so I'm not actually doing that because the problem we then I've got a capacity I guess you could make the argument that you should do that but I think the typical quadtree implementation doesn't do that because it's just I mean it you can do that but it's it's just it doesn't add any efficiency necessarily it's fine for you to just check those first four points always within the law in the higher level and you're only you're just getting more and more detailed as you as more and more points are added they're set the color on the cell and draw the point draw the point with the cell color to make sure each point in the right cell I'm feeling somewhat confident that it's actually working because each one of these only has one point that has none so right one point here I don't see what making the background white would do but I do like the fact that it's colorful all right I'm just I'm just I think JavaScript is just slow and it's actually not the quadtree that's slow it's the drawing like watch this so let's do something here let me let me add 10 points and let me console.log watch this frame rate I think it's just the drawing that's slow whoops so you can see look at this now it's going at like 4 frames per second however let me comment out the show function so I'm doing everything but drawing I'm inserting all the points into the quadtree so many times over and over again it's just not really I mean it's you know it got a little bit slower than 30 frames per second but at this point there's a lot of points because I probably you know I've added so many points so I'm now I feel okay about it it's the it's not the algorithm that's slow only draw the rectangle if it has no children that would make sense so that's a good idea battle that's interesting too let's let's look at that though because that'll be nice to see and then in show if not this dot divided draw the rectangle and the points else if this not divided whoops what did I do here oh if it's not divided else oh no whoops I think this is right and I made it let's make the capacity for yeah by the way I it's funny I Oh let's write it's hard to sort of see if it matches right because I put some alpha there that's why you're saying make the background white yeah you could see that it's right this is cool so you can see that there are right but interestingly why oh yeah right yeah this is cool watch so if I just kind of click it does a few points it's not subdivided yet now it's subdivided I don't see those other points anymore but I see those four here subdivided now there's only one new point in the new section yeah so I'm pretty happy with how this is working and in fact it's just the rendering that's quite slow p5 disabled friendly errors equal true at the top yeah that's actually let me try that just out of curiosity to see I forgot about this this is a little tip P 500 what is it P 5 disabled friendly errors disabled friendly errors equals true I think also if I use the minim fide version it kind of does this automatically oh yeah this seems to be running faster this is so lovely I'm kind of addicted to this pattern actually okay so I'm feeling pretty confident that the algorithm is is working correctly and so what I want to do is unfortunately I've done all sorts of craziness to this I'm going to take out the color stuff and I'm going to put this back I just want to put it back to what it was show if this is invited yep strokeweight one whoops and let's get rid of by the way this this is like a terrible thing to do that's really just slowed down also and put background to zero okay so I'm back to what I was before and okay okay all right so let me get to this part too now I'm actually pretty confident this is working and so what I need to do now I mean ultimately I'm going to want to use this with like the flocking simulation or just even like a collision detection example that's gonna be part three but what I want to do now is just arbitrarily check to see retrieve a certain number of points within a certain area okay so what I'm actually going to do is I'm going to comment this out put this back and add and one thing that I could do you one thing that I could also do is just make the campus smaller you know boy this is actually gonna just have it run faster now I have an idea that it's so evenly distributed I have an idea which is that is there a random I think at the mean and a standard deviation so I'm just gonna use this random Gaussian for a second to have the points cluster around the center yeah there we go I'll explain what I'm doing in a second yeah this is better let's put it back to this okay yeah this is good because it's showing me and let's make these stroke wait there we go okay okay all right so assignment asks why is this collision detection so I'm gonna have to get to that in part three time for today but let me at least do part two well I have to just check a message here all right well there's 800 people watching that's nuts all right here we go okay this is part 2 of my quadtree coding challenge and so I made a few adjustments I used something called a Gaussian distribution of random numbers to pick a whole bunch of random points that cluster towards the center so at least we can sort of see the quadtree is sub sectioning the canvas area in a way that's not sort of uniformly distributed so it allows us to sort of like check and see if this is working so what I want to do right now is I want to basically like pick a arbitrary section like I want to just say like you know some rectangle like down here like for example let me make a boundary so let me make let me down here let me say let the query be a new rectangle and I'm gonna make something totally arbitrary like 200 200 100 hold on hold on let me think about this for a second 350 let's start this video over can I hide this somewhere if I put this like you just I don't want that to I don't want anyone to see that what if I put this here well this actually work alright cuz I'm not gonna go look at this HTML file don't need this draw function well no I'm starting over starting over if I look to the right and yell does it not does it not blow up in your ear okay hello welcome to part 2 of my coding challenge quadtrees so what I want to do in this part is I want to look at how I can retrieve a list of points from a given area without having and this is going to I don't have to like I could tell like this boundary over here give me all the points in that area well I can just look through every points and see if that they're contained within that boundary but the quadtree is going to allow me to do that more efficiently by kind of looking at the sections that are that are near this particular range that I'm going to create boy am I not explaining this well let me explain this visually so what I'm gonna do let me just draw a rectangle let me say something like stroke 0 255 0 let me draw a rectangle and I think because I'm gonna say rect mode Center and I'm gonna draw a rectangle that's how big is the canvas 400 400 so I'm gonna go over to like 300 down to like 300 and then say 100 comma 50 so and that this is way too exact like so let's let's say 107 and like 92 okay so and I'm always really bothering me that there okay so basically what I want is I just want the points and there's not a lot of points there so let me move this over wasting so much time on it's perfect this is what I want what I want now is to say like just give me all the points that are in this area but I want to ask the quadtree for it because the quadtree is gonna have a capability of giving me those points more efficiently it's not gonna have to check every single point so let's see if I can do that so in order to do this what I need is in the quadtree I need a new function and I'm gonna call it query and let me put it above show show is just sort of a drawing stuff which is really for just for debugging at this point I'm gonna write a function called query and it's going to take as an argument or range and what that range is it's essentially a boundary I don't want to use the word boundary cuz it's gonna get confusing cuz the quadtree object itself has a this.top boundary whoa whoa did you guys hear that okay no nobody heard that there was like a really weird sound I'm like frozen in what you did yes what was that that was weird hey let's keep going Simon's saying make it random I'll make it random but later first I want to just use that fixed area okay it's query the range so the first thing I need to do is I just need to I I need to say does this range and this quadtree do they overlap if they do then there might be some points that I want to give you if not it could be ignored and if it can be ignored that means I don't have to check any of its any of the points that are in it or any of its nested subsections so that's the first thing I need to say is say if this dot boundary dot intersects range if it does not intersect the range let's just get out of here I'm done I don't need to look I don't need to look look away don't need to look any further I'm done I'm gonna have to change this in a little bit but but this should work now now here's the thing if I'm saying if this dot boundary intersects well it kind of got a bit of a problem here which is that the boundary is a rectangle object and I don't see an intersex function but guess what I can write one so idea I'm gonna write an intersex function intersects another I'm going to say range why not range so oops so there was there was another coding challenge where I had to do this I can't remember what it was is one of my early coding challenges where I had to test do two rectangles overlap or do they not overlap and I think there's a nice way of doing this with an or basically saying hey if any of these or conditions are true they can't possibly be overlapping for example if the X of this one is greater than well the X this edge if this edge is greater than that edge or if this edge is less than that edge or if this edge is greater than that at or if this edge is less than that edge if this is anywhere outside then they are not they are not not not not intersecting this is going to be so painful to write oh there's got to be a really easy way to write this if okay so let's think about this if range dot X plus minus range dot W is greater than right so if this is the rectangle range and this is its left edge is greater than this this right edge actually this isn't going to be so bad it's greater than this dot X plus this dot W or right range dot X plus this dot W is less than this X minus this dot W or so let me I think I can do this now with the Y's range dot y H Y H h Y H this is really you're watching a person here type this stuff H alright so and I want to return this not if I want to return so if they intersect if an if this is true they don't intersect so I want to return not this whole expression yeah I think I did it hate me stare at that coat again for a little bit I'm working to see a lot of people in the chat saying it's right you can move on Mattia maybe this is one of these moments where you can do the speedup thing i thinkit's without the negative width if the position is in the corner Frogger is the challenge I got this myself oh that's an interesting way of doing it all right nobody can seem to tell me that I'm wrong I stared at it enough time I'm sure I move on also it was pointed out it was the Frogger coding challenge where I struggled through this for a very very long time so I could go back and check my Frogger code and I probably could also use somebody else's library that has like geometry math in it but let's move on ok so now if this this should work now what if they do intersect if they do intersect ah here's what I need to do actually so I need to recursively go through everything and I'm gonna say I want them have a I'm gonna create a variable called found so I want to find all of the points so if they don't intersect return found it'll be an empty array so this will be an empty array otherwise now now if they do intersect let me look through all the points that are part of this quad tree all the points that are part of this quadtree and say if range dot contains P found dot push P so now and now I know that these the boundary in the range that this quadtree intersects that range let me check all its points and see if they're within the range then I can add them perfect I've added them and now what I need to do though is say if this dot divided then okay well basically what I want to do is I'm gonna return so then I should return those points right but before I return those points what do I need to do well if it has some children quadtrees that I need to check if any of those points are in there so what I need to do is say if it's divided so if it's not divided I can ignore this I can say return this dot northwest query query range but I don't want to return but I need to pause for a second here and you think about this what I'm going to do is now I'm gonna can can just concatenate ah yes alright I've got an idea okay I know it's gonna be easier here right I could pass the array and keep adding to that array reference which is what I think what you would normally do with recursion but for some reason the way that I'm thinking about this right now is I can say found dot concat this dot Northwest query range and then I can say north east south west south east what this is going to do and then I can return found here so what I can do is write I'm going to start with an empty array if it does intersect just return an empty array because and all this concatenate concatenate you're just joined two arrays together so what I need to do is if I if I if I if there's nothing here move along return nothing otherwise if there is something here check my points to see which ones I should add then if I've divided I should also add any of the points that are from my children and then when I'm all done finally I'm gonna return that array I think this is good I'm sure something's wrong here and get rid of all these extra line breaks so they don't need any more and now here I should have okay so I have this rectangle but this is actually I need to say a range is and I really should make this let range be a new rectangle that is 250 250 107 75 and I'm gonna multiplied those by whatever that's fine I'll make it bigger and then I'm going to draw the rectangle at range dot X range Y range W times to range H times 2 so let me just take a look at w is not defined whoops times two all right so I just make it a little bit bigger so now what I want to do is I want to say oh boy let points equal cue tree dot query range and just to see let me consult out log that array without even trying to draw stuff let me just see if this function even returns anything it gave me all three points okay so this can't possibly be right I've done something wrong which is that I only got three points so I of people in the in the chat again I can't credit everybody tell me the concat method is used to merge two or more arrays the method does not change the existing array but instead returns a new array this is from pierre in the chat so what the issue there is and maybe now i'm kind of don't want to use this concat because i have to write this right I have to say fad I think passing the array is gonna be better so apologies I'm gonna say return I kind of like passing the array better so query range array if if no array then I'll call this found then found is a blank array so I create the array if it doesn't exist then I can just return the empty array then I can push the stuff here and then now I can get rid of this crazy this concatenated idea was very silly I don't know who thought of this and we've got extra parentheses like mad here now I can say with the array and I could just pass the array so I'm just gonna let you know just gonna pass the array around and I actually don't even need to oh I do want to return found when I get mmm oh you know what yeah let's do this where I hmm hmm because now I want to return it but I only want to return it at the end of the very first so I think let me do it this way there's got to be a better way for this but let me just to get this work let me pass let me pass in an array I'm gonna think about how to return it better in a second but let me create an empty array and then pass it in and then be a little bit look at that array so okay this just gets me out of here etc etc etc okay okay here we go all right 160 that makes a little bit more sense there could be 160 points in there so let me now in the sketch let me say four let P of points and then stroke zero 255 0 I guess I already have that let me just let me draw the points and let me say point P X P dot Y so let's look and see if that worked hey this is looking pretty good day per day hey good all right let's make this rectangular range random so let's pick a let's pick a random point a random height and let's give it a let's give it some random width within a hundred actually let's just always make it a hundred 100 and let's see what happens all right so we're ever oh wait wait whoa wait why are some of the why are there's some points here not showing up something is wrong all right yeah not all the points are selected we're gonna have to look into this could be my intersects function this could be wrong contains function I'm pretty sure is right oh oh no that's right found push mmm oh we've told you a million times you've mixed range W with this dot W and range that H with this dot H in the intersects function intersects was wrong guess what remember this function that I spent like an hour staring at apparently I was looking at the chat the whole time there's a significant error in here that I have mixed up oh yeah look at that range dot X plus this dot W o range dot W range H range range range range range range range range this this this this this this this this I got to stare at that for a little more time so it's also being pointed out in the chat that you use the width as the full width instead of the half width and that I don't think that's true I think I being consistent about it's confusing because the only time I ever need to not think about the width as half width is what I'm drawing it so alright alright so I think that's corrected it we'll find out I don't I can't find any points oh look at that look at that beautiful I found all the points within that region now just out of curiosity right if I had to check every single point I'm just sort of curious here if I had to check every single point right this is where in the query this is where I am looking through all the points if I had to check every single point and I had like a global variable oh sorry sorry everybody pause if I had to check every single I should make the query rectangle move with the mouse that's such a great idea hold on if I had to I just want to I just want to check something for myself if there are 300 points so if I create of just I'm just gonna create a global variable called count right and if I were to check every single point I would if I would look through every single point to see if it's within that range count plus plus count would equal 300 but I am going to here just as a little sort of like hack check is I am going to increase the count here and I shouldn't have to look at all 300 points I should only have I should be looking at a sub set of points so let me console.log that count 31 2748 219 now course I've got to look at a lot with this big range because you know I kind of got picked randomly through the center but so but I never have to look through all the points and so this algorithm like you know if I make the range the whole canvas well then I have to look through all the points the point is if my range is something much smaller like even if it's like 25 by 25 right I have to do very very few checks even if it's randomly in the center and let's now let's get rid of this count idea because I don't need that count idea anymore let's go this is gonna be fun oh so much fun let's let's go put this in draw and let's make the rectangle a mouse X mouths Y count is not defined we're at draw sketch touch yes line 26 Oh quad tree line 87 sorry quad tree line 87 save so now you can see as I move the rectangle it is highlighting only the points that it finds I kind of want the count back because I kind of want to like know how many checks but this is great all right boo boo oh I think I've successfully now implemented the full quad tree because I have both an insert function and a query function let's quickly go to that Wikipedia page and if we look at the pseudocode right we can sort of match this up with what we did there's this idea of a point in X Y and AABB which is my rectangle and axis aligned boundary box there's the quadtree class and as the capacity has a boundary north west north all of those things will have an insert subdivide and query range right query insert yeah so I think that I have basically done everything and probably I did read this Wikipedia page the other day and that's why I think I started using concat because it's using a pend so but I think I like my so here's the thing ah I really should just this video should be over cuz it's taking way too long but I do kind of want I really sort of want this oh I know what I can do I want to return I want to return the points array let me fix it so it returned to the points array let points equals query that range I really just want to get an array back so now if I go in here so if found does not exist found should equal a empty array and then can I just say returned found down here is that gonna work that works I don't know why I thought it was so complicated the reason why I kind of was afraid to do that is that these are also returning their reference to the array but doesn't matter because I'm not doing anything with it so that's fine so we don't only really own the only return that really counts is the very very very last one which is the original call to the query function so so now okay that was that was much easier than I thought so now at least I have the function return that array okay I'm gonna be done there's one more video I need to make and I think though I mean there's many more videos I need to make but part three of its gonna come later hopefully by the time you watch this it might actually be linked to but what it's what that video is going to do is I want to apply the quadtree algorithm to a collision detection problem and in particular a really good one for me to apply it to it's not really a collision detection is my flocking simulation I also would like to port this to processing and make a Java version of this so those are all the things that I want to do I'm gonna so but if you're watching this video right now and the next one isn't available as a challenge to yourself see if you can take this and apply it to a collision detection and then I'll be back and doing that myself someday and and and that's what's gonna happen okay thank you everybody okay I unfortunately have to leave it's after 600 so I'm this is gonna have to be a very much of a to be continued anything that I have really please show the counter and target a single point pretty sure some points are counted twice or more I don't that's possible um something else asks would this be hard to expand to 3d it's called an octree so in 3d you would use an ox tree gives you to have eight subsections right if you think about a cube that you would divide into subsections wouldn't it be nine oh no eight I don't know whatever you read the Wikipedia page for octree my brain is dead right if I go down here to octree you can see you're right right ah octree yeah of course it's eight you can see this subsection recursive subdividing yeah the daylight savings hours are different I think between the US and Kate week Minh asked about daylight savings time which is something that I'm absolutely equipped to discuss I believe daylight savings it's now Eastern Daylight Time it was that was like a week ago so that's we're now at a five hour difference and then Europe when he and maybe you do it this weekend it will be back to six hours again I think that's right it is a time in Zurich it is 1109 p.m. that is the time that it is for me right now at least mentally and then but however in Reykjavik there's only 1009 but that's because there's an hour difference between those two places just case you're wondering KD tree is better yeah I should look into that yeah we don't change until next weekend right UK changes on Sunday night oh it's 10 o 9 in the UK oh my god really oh it's only 1009 oh so like Zurich already changed I'm so confused or Zurich is just an hour difference GMT plus one well London is obviously GMT all right so this is like way more fun than I ever expected I think you could probably make some colourful visualizations out of this so I look forward to seeing what comes of that let me try to answer a few questions in twoandahalf minutes so I'm now gonna take two and a half minutes of questions of course you're about 30 seconds behind me Jostein writes is this Jay s and P five only so well the algorithm quadtree is a generic algorithm that can be used in any programming environment this particular example that I have made is JavaScript the language is JavaScript I'm using the p5 library for the drawing aspect all of the quadtree algorithm none of that depends on p5 but the algorithm itself I'm sorry the drawing of it I'm using p5 is this exponential or linear as far as memory requirements so I think what you're asking for is the and it's it's neither so we're talking about the the order the Big O notation of the algorithm and this is not it if I was the way I want to apply this algorithm is log n just for that one if there's n element it takes approximately law on average of log n of those elements to look at all to find all those points within the square however what I talked about earlier in the video is what I want to do is I want to do this for each and every point arranged around it so that's going to be n log n whereas if I didn't have the quadtree it would be N squared I would never implement a quadtree if I only had like a hundred things because why bother but as the space grows really really big it can be much more efficient where did you get the music and the sound effects um it's sort of like there's some random stuff that I pieced together I would love for somebody to just like build me a whole like sound effects music board extravaganza but I have that time to do that myself you could add a function for changing the green rectangle size with the mouse wheel that's a great idea so I encourage somebody to add that to the code important question what's on page 99 of a book of random numbers thank you for reminding me I forgot to have cat read the random numbers also why could I never remember to get the guest read the random numbers my prettiest fried eleven thousand three hundred thirty nine nineteen thousand two hundred thirty three fifty thousand nine hundred eleven fourteen thousand two hundred nine thirty nine thousand five hundred ninety four sixtyeight thousand three hundred sixtyeight ninety seven thousand I feel like I'm in a black mirror episode or something but thousand five hundred forty two thirty six thousand two hundred fifty two twenty seven thousand six hundred seventy one that's that's one line that's one line of it okay so far the only guest I remember to read the Reverend remembers as blood Labrador they're random numbers his goal on 11 all right got a min and a half left here would it be difficult to add different shapes not necessarily I would need an intersect function so if I wanted to look at all the points contained within a circle I need to have an intersect function for the circle and the in the bounding box but that's no big deal like I just need that different contains function but that would definitely be possible read the book of Pi yeah what was I doing in Switzerland and do you do a meetup so I really I I haven't really done any official coding trade meetups would love to do something like that I mean I I was in Switzerland for a meeting that was at the Google office there that was really interesting and fun to be there and there just wasn't enough I was fooling well actually ended up being there longer snowstorm but I was only there for you know less than something like 36 hours so I would love to do especially because I know there's a lot of viewers there's a lot of viewers all over the world but in particular I do know that there are certainly a large number of viewers in Europe so I would I would love to do a meetup somewhere and I'm rubber my my coding train World Tour somebody that happen oh ok opinion on Java 9 modules Simek asked what kind of sounds would you like for your sound music board tweet me at Schiffman and I can I can kind of discuss it so tweak at Schiffman if you want to help put together like music and sound stuff that I can use I would love to hear from you alright so this is the end of today and is a last question Rick asks is Java more powerful than processing guess what processing Java completely 100% identically the same thing not really but processing is just a library for Java so Java itself is it more powerful than processing processing itself is it more powerful than Java processing is just giving you a set of functionality that you can call with a certain API in the Java programming language in that sense it's not more powerful but maybe it makes prototyping a bit quicker and easier getting you up and running a bit faster and do drawing stuff it with less less code ok the next stream will be next Friday so unless I unless I have some surprise extra live stream during the week thanks everybody I will see you next Friday I have a guest coming that's very exciting I'm very excited about so stay tuned for that all right this little little teaser there oh boy a youtuber one of my favorite youtubers it's going to be here I don't know sometime next week definitely alright see you then goodbye everybody