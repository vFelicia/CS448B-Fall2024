i've got one more chapter for particle systems video for you now you might have noticed in all of these examples that i show throughout the nature of code book there's not really a strong design point of view it's grayscale circles that's pretty much all i ever use and one of the wonderful things about working with particle systems is the kinds of visual effects you can create with them as a reference point you might look at some of my previous coding challenges where i simulate a rain rainfall or snow that's one thing you could explore but if you look back at that clip from the wrath of khan the genesis effect the particles almost burn off the surface of the planet it's a fiery effect particle systems can be used very commonly they're using computer graphics to create smoke or fire and often that's done through the use of rendering the particle not as a circle or a geometric shape but as an image texture a texture with fuzzy pixels or some kind of pattern and that's what i want to explore in this video now i'm going to keep it pretty simple and just hope that you watching this you're going to explore the full range of possibilities here and create your own image chapters and play with color and size and all sorts of things but i'm just going to give you the sort of nuts and bolts basic steps for taking this particle system and adding image textures to it but actually before i do that i want to make some adjustments to the code that i think will allow for a more smoke or fire like effect looking at the emitter class you'll notice i've hard coded this gravity vector in the update function that's not really going to allow me to experiment with a system of particles that respond to lots of different forces in their environment so i want to take this out of here entirely and instead add a function called apply force which receives a force and then just takes that vector and applies it to all of the particles so let's run the sketch oh wait what oh yeah so now actually i forgot that i give them an initial velocity so this is actually quite lovely in a way maybe i don't need anything more than this i figured out what i want to do i'm moving it to the bottom the idea here is that i want it to look like a flame or smoke rising from the bottom of the canvas one change i could make is instead of creating a random velocity that emanates out in all directions restrict that initial angle to be something that points vertically so that might create more of the effect of smoke rising but i just want to see if my apply force function works so i'm going to create a force that points upwards and then apply that force i don't know if i've improved the visual result here but we can see now i have these particles bursting out from the bottom and rising upwards incidentally i could add a little bit of a wind force as well there we go and now we see that the particles are not only blowing upwards but often to the right and maybe i would say like ah what if i uh map this wind to the mouse location i'm kind of off on a tangent here but let me just humor me for a second let me just add this one extra thing maybe a slider would have been better but now you can see as i move the mouse from left to right i'm adjusting that particular wind force but this is not what we're here for what we're here for in this video is to look at how can i make this effect look fuzzier more smoke like or more fire like what happens if i add an image texture to the way that i'm rendering the particle so first things first i need to have an image what you want in an image texture is typically a square image and something with alpha transparency you could make something in photoshop you could probably download image textures from the internet in all sorts of places i have chosen to actually create an image texture in p5.js this is a sketch that creates a canvas loops through every pixel of the canvas and draws a bright pixel towards the center and dark pixels towards the edges they're actually not bright and dark it's just the amount of transparency in the image so i've saved this image out to a png file and now i just want to take that png file and upload it to my other p5.js sketch in truth this actually opens an interesting can of worms which is that i could in setup in my particle system sketch generate image textures on the fly i could use purl and noise and all sorts of other things i'm going to restrict myself here and try to stay calm and just use this basic image texture i want to upload that png file to the p5.js web editor once i see that it's shown up there i can add a variable i'll just call it img for image let me add the preload function to load the image and just quickly to test let me see make sure that the image is there i'll just draw it in the corner of the canvas there it is we can see it up there in the corner just to make sure it's transparent let me just change the background to green for example and great you can see that that is in fact a transparent png now the dimensions of the image that i chose to use here are 128 by 128 which is probably too large ultimately your code will probably run the fastest if you create your image texture at the size you intend to render it but if i have a higher resolution image it might give me more flexibility later that i could grow and shrink the particle without losing the quality of the texture itself so i'm going to keep going with this larger image but if i feel like i need to i could reduce it later so in the particle class i need to find where i'm drawing it and it's right there i'm just drawing it as an ellipse comment that out and instead i want to use the image function to draw that image so i'm using the r value to enforce a smaller size for the image and i'm using the position vector as to where to place it i do want to do something though which is change the image mode to center because i want the center of that image to be at the location of the particle now stroke and fill don't apply to an image so i'm going to take those out and in a moment you'll see i'm going to add something else back in for the image itself but let's just see what this looks like now does this look more like smoke or fire to you i would say no let's try to make some adjustments one is i think i want that image to be much larger i've drawn it as almost a tiny dot it's almost indistinguishable from the point function in p5 this is starting to look more like what i would expect we can start to see the fuzziness of the image texture as the particles layer on top of each other but they're not fading away they're just flying up and disappearing so i need to add something to reduce the alpha transparency of the overall image the way i do that with an image it's much like with fill but instead of using the fill function i'm going to use the tint function so i want to not affect the color so i'm going to keep the tint at 255 but i want to affect the transparency so i'm going to use the lifetime variable which counts down to fade them away oh my goodness look how slow it runs now so here we've got an immediate problem this blending of the alpha transparency these images is incredibly expensive for p5 to do and this probably is where i want to think about reducing the size of my image texture to be exactly what i'm drawing i also could reduce the number of particles let's just do that first to see how much improvement we get i'm just going to admit one particle per frame instead of five that's already quite a bit better but i'm not getting the full effect of many particles so i've now made a version of the image that's just 32 by 32 pixels i've called it texture32.png uploading it to the editor swapping out the file name here and running this again this looks like it's running really fast but i'm only emitting one particle per frame oh let me make sure uh yeah so if r is 16 this is a little silly i'm just going to change this to 32 and then because it's not a radius anymore it's just the sort of size i'm going to remove the times to go back to sketch emit five particles per frame and let's ah cross our fingers and hope still pretty slow why is it so slow let's try two particles per frame it's still running rather slow i've improved it a little bit certainly one thing that i think might help that i'm going to do is have the particles fade away even faster and while i'm losing the sort of length of the trails of particles we can see that i've got something close to what might resemble a little bit of like a candlelit flame so this is where i'm going to settle for now just to have some optimal performance for the next step that i want to demonstrate what i want to look at now is the function blend mode i want to encourage you to fully explore the blend mode dot reference page and look at all the different possibilities and you might try a variety of them with your particle system but i want to zoom in on this one called add the sum of a and b so there's always a default blend mode when you layer colors on top of each other in a canvas and the default blend mode is actually just called blend it's a linear interpolation of the colors you can think of that as like if this is red i'm gonna layer some transparent blue and put it on top it might get something purplish i think that's right but adding doesn't blend those colors together it adds them together this has the quality of the more colors you layer the brighter and brighter the pixels get just the simple act of adding blend mode add to the top of draw so this is kind of interesting i don't know whether this is a bug or not i mean really it's not a bug because once i'm adding the colors when i layer in the background that's not actually erasing what was there before that's just adding zero color to it so in order to get the effect that i'm looking for i actually also need to add the function clear which will clear out what was there in the previous frame and now it might not be so obvious what the difference is here maybe if i zoom in you could start to see that it's slightly different i'm going to let me put them side by side but i think this will become much more apparent when i begin to add color so going back to the particle itself the tint can include a color so what if i were to just say tint 255 comma 0 comma zero so this is going to be a red tint so that didn't do what i expected and i'm realizing why i want to see this like white glow and i'm never going to see that white glow if i'm only ever adding zero to the green and zero to the blue channels there's nothing for it to add to so i've got at least give it something if i want it to be reddish or color now we're seeing more of the effect that i would expect as the colors layer on top of each other they're adding together reaching a sort of like hot white color and where there's fewer particles i start to see more the color values that i've put inside the tin function and you know i'm just playing around with this trying different tint values and and this is what i really encourage you to do and now that i'm using this fuzzy particle you might think there's this tiny little effect in the canvas i think i could actually really try to expand the size of these particles and already here i feel like oh i have this nice kind of almost burning flame that i can affect with the mouse blowing it a little bit to the right or a little bit to the left so i'm going to just stop here i can play with this probably forever i'm hoping that i by the fact that you watching this and trying this yourself and sharing with me your results i'm going to discover all sorts of possible things i didn't think about that you could do with image textures and blend modes and particle systems so please in the comments or go to the coding train website where there's a place you can actually submit a link to any schedules that you make i would love to see what kind of stuff um that you're able to discover through this technique there's also the possibility of using the webgl renderer of p5 to improve performance i'm not doing anything in a 3d space here so that kind of makes less sense but even in the sort of 2d world of the particle system that might be something to explore i will maybe try to investigate that and come back in a future video but if you are able to squeeze out additional performance by using the webgl renderer of p5 or improving on my code in any way i would also really love to know that so thanks for watching this video this wraps up chapter four until i make some extra particle system videos which may happen and i look forward to seeing you in future chapters of the nature of code you