I am back for part two of neuro evolution with flappy train I don't know flappy something you can see here I now have this neural network which is driving this circle it's not really working so the problem is I only have one I need to make a population of them so that I can pick and choose the ones that are making smart decisions somehow and making their way through this maze of pipes but before I even do that in the chat thank you Christopher mistake was pointed out which is that I forgot that my neural network library just like it expects as its inputs an array of values it expect it gives you back as its output an array of values and I forgot about that because even if it's one value it's still coming back in an array so I need to say index zero here so what I want to know is that first element of the array is it greater than 0.5 or not the truth of the matter is nothing's really happening yet kind of getting the same results but you can see things are possible all right so now let's see what we can do here the first thing that I need to do is I'm going to make a new JavaScript file and I'm gonna call this G AJ s so I'm not gonna make a population class or genetic algorithm class I have a would like to at some point refactor what I'm doing here into a more a package way that you might be able to just like use it as a library as part of the toy neural network library has some functionality for genetic algorithms built into it but I'm just gonna write all the raw code here and the main thing that I need to do first is I need to change the idea of having a single bird to many birds and I want to use cons it's so exciting when I use Const I'm going to make a population total total I'll just call this like total and I'll make it 100 so what I'm going to do here is I'm going to say I equals 0 I is less than total and I plus plus so I'm going to make a population of birds birds index I is a new bird then what I'm going to do here is I have let me just do this here for let bird of birds I'm going to use that for of loop to just loop through and have every bird think update and show now I haven't done that I got to fix this thing with the pipes so let me just comment this out for a second but let's at least see all the whole population going so you can see yeah that's kind of interesting it's definitely like there but they're doing different stuff now they really are alright so one thing I want to do here just visually I want to be able to get a better sense of the birds so I'm gonna look at the birds show function and I'm going to say stroke 255 and fill 255 comma 50 like I'm gonna give them some alpha so you can see that most of them are doing exactly the same thing ah there we go there's sort of a variety there I'm just kind of a little suspicious here let me try two outputs let me see if two outputs actually yields some more unique results so in that case with two outputs what I actually just want to do is something like if output 0 is greater than output 1 so let's try that for a second yeah it's kind of the same maybe I just want to have a bigger population yeah there we go just had a bigger population so I just want have a bigger population because I'm gonna need more possibilities ok so now here's the thing I need to do something else rather important I need to eliminate any birds when they no longer when they when they hit one of the pipes so now what I need to do is as I'm going through here I also want to say for let J equal birds dot birds dot length minus 1 J is greater than equal to 0 J minus minus and I could use filter or something but I'm not gonna use filter I'll come back to that another time and then what I want to do is I want to say I want to have this if pipes index eye hits birds index J Birds dot splice J comma 1 so this is now me deleting any birds that stopped living there let hit one of the pipes so let's run this and see oh sketch such as error oops oh I forgot a semicolon here okay let's try this all right so let's see here and see if we can get to any of them making none of them making it through that's not a good sign so I would like to at least kind of live in a world where so I'm going to make it a little easier for them right now in pipe I'm gonna make this I'm increase the spacing to 175 so I'm just gonna make that space between the pipes a little bit easier oh yeah one made it through because I just want to at least kind of increase the chances that there will be some that outperform others I and somewhat random but let's let's do it so this is good okay so we're getting somewhere now what I need to do is I need to think what are the things I need to think about when I have a genetic algorithm ok so a couple things number one is I know I'm going to need to have a new generation so let's actually let's let's let's write a function called next generation and just for right now I just want to get sort of like the process going here for next generation I'm going to say for let I equals 0 I is less than total I plus plus Birds index I equals a new bird a new bird and I know that in the main program if at any point whoops if at any point Birds dot length equals 0 then call next generation so now if I run this we should see that at least it's going to let the run as long as there are some birds and then uh nextgen next generation is not defined because I forgot to add it here to my index.html file so I need yet another JavaScript file I'm going to call it G ajs okay so now as soon as all of the birds run out o to made it through oh come on whoops did I forget to like it save next generation I put it in library slash GA okay sure come on let's move along folks alright one more time let's with feeling everybody oh look at those two birds maybe there that is a genius bird already okay so you get the idea here now I haven't involved as a Realty though it's very exciting for me that life is very strange okay so what I need to do though is this is no good I don't just want to make a whole nest new set of new Birds I want to evolve them from the previous generation so in order to do that I need some sort of fitness and so I'm gonna build into each bird object I'm gonna give it a score and also a fitness and I know it's probably not necessary for me to have two variables but the way I'm thinking about it right now this is gonna make it easier and so the idea that the longer a bird lives the more it increases its core so in update right every time update gets called it should get another point so I'm gonna say this dot score plus plus okay so every time update is called its score goes up and then what I want to do at the beginning of next generation is I want to calculate a fitness for every single bird and I want that I want all those Fitness to all those Fitness values to be normalized between 0 and 1 and add up to one and if you watch them my previous genetic algorithm tutorials you'll see why I'm doing that need each fitness value to be a probability that it gets picked for the next generation so the first thing I'm going to do in next generation is I'm going to calculate all the Fitness values so let me break this out into some functions calculate Fitness so in calculate Fitness what I'm going to do is for every bird I am going to first I need to do is get the sum so I want to say I know I could use a higher order array function here my brain doesn't think that way some plus equal Birds score so what I want to do is first add up all the scores then for each bird I want to say bird dot fitness equals its own personal score divided by that some so this is a way of kind of calculating and normalizing all the Fitness values now maybe I need to make this exponential in some way or be you know power law or some kind of Vince your way to think about how the score master fitness but this is I'm just gonna would use this sort of like linear way of doing it right now I could square the score so let's see Fitness equals bird score divided by some so this works for calculating all the Fitness values now I've calculated all the Fitness values I then need to I'm boy I'm moving right along here then what I need to do is I need to pick alright alright let's hold on for a second here so if you remember from it or if you if you happen to watch any of my genetic algorithm tutorials I go through this presentation which walks through the actual algorithm itself so what I need to do so I have evaluated the fitness of each element of the population but here if you look at the next step I need to make the new population I need to ever end times pick two parents with a probability according to relative fitness this is so that I can apply this idea of cross over take half of the DNA of one and half of the DNA and of others and mix them together here's the thing I'm gonna for the purpose of this video do a simplified version of cross over one way that I could do a simplified version of cross over is not to cross over at all instead of taking two elements and combining them I could just take one element and make a copy so I'm gonna take the ones that do well and just make a copy of them and the reason why this is going to be so easy because I already have as part of the knurl over here as part of the neural network class itself a copy function and guess what I have a mutate function and if I come back over here we're gonna see the next step is mutate you take the child's DNA based on a given probability so this is what's nice that I did this in a previous video I added these things to the neural network library that I'm using so now I'm gonna go back oh and let me just minimize this I'm gonna come back here and I'm gonna say instead of just making any new bird I need to pick one I need to write a function pick one that is going to somehow return one of the birds based on the with a probability map to its fitness so here's the thing we're all the birds where of all the birds gone I kept deleting them any time it hit up I deleted it I deleted it here's the problem I think I need a backup what's gonna be nice here is they let birds equal an empty array I'm having an array called saved birds and I guess what I could do is maybe what I'll do this is a little bit silly but every time I delete one I'll just say saved Birds dot push pipes like pretty sure if you delete something from the array it it it gives you it returns right if I say pipes index 0 dot splice 1 whoops sorry pipes splice 1 0 comma 1 right I get that pipe object it gives me that pipe object it gives it to me as an array so what I need to do but I think I can push the array into it and so this should work right if I now have if I make an array which is an empty array and then I say eh okay I know the picked one here hold on no loop thank you very much no okay now I can do what I want I can do whatever I want a dot so let P equal pipe splice 0 1 so P is this array with one pipe into it then I could say let a be an array a dot push P and so now let's do it a is Oh a isn't ready with one thing with a pipe in it so that works alright just testing out my idea so what I can do now is when I'm done back to sketch right as I'm removing the birds I can save them so that now when I go into the genetic algorithm pick one I can use I can pick one out of the save birds so let me just for the sake of argument just say let a child equal random saved saved birds return I just want to see that this works alright so I'm just gonna this is not I'm not using the Fitness yet as a probability but I just want to pick a random one just to see that the workflow works return child so birds index and then I'm also gonna say child dot mutate zero point I'm gonna have a 1% mutation chance so I'm gonna let it you Tate a 10% I mean if you take 10% of the weights of the neural network and then I'm gonna turn that so let's just see if this works and then after I'm done that I also have to clear the saved Birds so empty that out so this now the neck every time I want to make a new generation I should calculate all the fitness function values I should pick I should get however many new Birds clear out the SAV birds and go again so here we go as I'm waiting for the next generation come on birds are doing too well child youtaite is not a function ah child of course child mutate is not a function oh oh boy okay there was a little bit of a jump cut because I really went off something like weird direction though that made no sense I don't know if you noticed and we're yelling at the your television machine thing that you're watching me on but for some reason I put this down here I started adding the pipes to the safe birds so apologies for that this is not where that goes the pipes get removed just when they go off screen it's the birds that I want to add to these save birds also I'm not so sure I might be making an array of arrays we just run this for a second and let me let a bunch of birds die and let me look at save birds yeah I made an array of arrays we don't want that we want an array of birds so I could probably use concat but let me just push in the one thing that I'm removing just to fix that and we can see here is there's no birds in there and then now I have an array of birds alright so that's better at least now pick one is still gonna have a problem so why is pick one guy I sort of stopped thinking about what I was doing here I'm taking a that bird I'm not making a copy of the bird I'm taking that exact bird object and putting it back into the birds array which is fine but if I want to mutate it I need to mutate its brain the neural network so to do that I think what makes them I mean just as a quick I could just say like let's write let's put in the bird class itself let's write a mutate function and mutate function I would say this dot brain mutate zero point one so I'm just going to kind of have this hardcoded in here that when a bird mutates its brain mutates and I think I can get away without actually making a copy of the neural network Oh no no I wouldn't make a new bird with the same neural network I think that's gonna be I'm gonna be better off because otherwise I've got to reset all of these numbers and values it's velocities got to go back to zero so I don't I want to make a copy of the bird and I kind of want to but I don't really need to make a copy I just need to make a new bird with a brain so if brain right if I create a bird with a brain a bird breaking then I'm going to say this and I'm gonna make a copy of it just for it's probably unnecessary is brain copy so I'm gonna do that if otherwise if I'm making a bird without a brain I am going to I'm going to just make a bird with a new blank neural network and there's already a copy function that's this way I'm setting myself up for future success if I want to do crossover it's going to be a little bit easier then here what I want to do is in pick one I pick a random bird but I return and then I say let bird equal and then I'm gonna say let child equal a new bird with that birds brain oh this is very weird and then I'm gonna say child dot mutate okay and then now this should get me the right idea right I'm picking a random bird out of the save birds and making a new bird with the previous birds brain I could do cross over here right if I want to do cross over and then I mutating okay so let's give this a whirl here we go did it did they all die I don't have that console.log for yeah there we go okay so this is working I probably should clear out the pipes so the other thing I should do I think is that would make sense is when also as soon as there's a new generation I should probably say pipes I just just like let me just add one pipe and actually you know I'm gonna do I'm gonna make this my own counter this is a little bit unnecessary but I just want to reset the counter back to zero counter plus plus and I'm gonna have a global variable whoops hopefully can't type I'm gonna have a global variable called counter set equal to zero okay so I just want to do that because I want to like I don't want to I mean like I wanted the whole game to restart her to pipe so at the beginning for some reason why is that I'm looking at sketch J s because I add a new pipe in setup which I no longer need to do because as long as I put this first in draw now okay there we go okay so now there's one pipe all the birds are trying to play flappy bird as soon as they all go away the whole thing starts over so now we have the work flow we're actually good to go here we are good to go the problem is I need to pick them based on their fitness values here's the good news I have a function this comes from my traveling salesperson coding challenge it comes from this github issue that was filed on August 5th 2016 with this particular algorithm for picking an element from a population based on a given fitness so I'm gonna go over to here actually and I'm gonna grab this exact pick one function and I am going to bring it over and I'm gonna put it in this so if you want to review how this function works in more detail you can go back to my previous videos but I'm just going to paste this right in here and the idea here is that at the end list index is that particular bird that I want and this made it I know I have slice here I can't remember why I did that but basically this what I'm doing here is now instead of picking a I'm gonna pick it from that list now I wrote this function with arguments but the good news is I can take this stuff out and what I'm really doing is I'm saying okay birds index dot fitness that's the probability right I'm picking one thing from a list based on probability those were the arguments here I'm picking something for a list based on an array of probabilities so now wherever I see list what I mean is birds and whenever I see probability I mean birds fit Fitness the fitness of the bird so this is birds index and I don't know why I have that slice there and then so this is good I'm good there we go so this is an algorithm for choosing a random number and seeing words falls into the sort of spread of all the probability values and again you could go back to my video where I specifically talk through this entire algorithm but I think this is going to do it right now so let's now run this code that's really the last piece and I'm going to let this run for a little while and I know I'm not because cannot read property why of undefined so what what what did I mess up here let's take a look here all right I clearly made a mistake thank you I hor L in the chat I need to be using saved birds remember birds has nothing so I need to say saved Birds right save birds so that is something I definitely need to do is that the problem that I'm having I think I might have a different problem also yeah so I think because once all the birds are gone it's kind of doing this one more time I have two functions called pick one in the code I not even realize that so have a lot fun to fly a big array of undefined did I leave like oh oh my goodness I left this function in the code why is that there all right let's see if that was like using this other pick okay next generation alright alright we're getting somewhere now cannot read property fitness of undefined okay so here we go cannot read property fitness of undefined so let's take a look at saved birds and let's take a look at index all right here we go there's a lot of debugging in this particular video all right whoa what line sixteen oh it was going through all this it got through all of them weird ah are the fitness while are is greater than zero all right and then what happened and then we got to the end yeah of course because it never so let's look at the array of 250 first of all let's make our life a little bit simpler by just doing this with ten birds while we're trying to debug this in that way we can have an easier time of figuring this out because there's only ten of them so lift velocity there Phil I want to check the fitness values Fitness is values of all these are zero so my fitness calculations somehow messed up let's look at that so let's look at calculate fitness let's console.log some uh okay let's console look some don't wait wait wait zero that's not good bird dot score let's look at all the birds score whoops scores ninetysix scores ninetysix so that's right they're getting a score oh I need to do saved Birds here saved Birds so everything here has to be saved Birds I probably should do it the other way around okay there we go the Phineas calculation also needs saved birds probably everybody in the Chad's been telling me this for like the last five minutes now I feel pretty confident here I probably shouldn't I'm gonna take out my console logs and let's see what happens let's see can we get to the next generation yes we got to the next generation now am i seeing anything evolve I don't think so cuz I only have ten so let me give me myself a lot more Birds let me give myself a lot more Birds back here I'm gonna say let's give myself 350 Birds and let's run this sketch alright I'll be back in just a few minutes all right so this did okay they seem to be improving there's some good ones in there that are jumping but I'm gonna wrap up this part too or I finally applied the actual genetic algorithm part to evolving the neural network with a population of these things and what I'm gonna do is I'm gonna do one more part where I'm gonna improve this I'm gonna do a few things number one do speed up the process so I could get it to evolve a lot faster and I'm gonna change the way mutation works which I think will give me a slightly it will help me find an optimal solution a bit faster so come back if you want I will be