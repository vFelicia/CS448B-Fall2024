did you think that learning coding would be really rough throw your hands up in the air and say enough enough do you want to learn to and make some awesome learn that anyone can when you're cing with coding train good morning whe you're a pro this is all brand new learn the overarching concepts and some fun stuff to and with Dan is your guide come along for the 8,912 oh hi cing train oh shoot pressed the wrong button my joke didn't work I'll try it the next time make a crazy pixel mirror to reflect your face you can make it jump to light speed into outer space you can generate a maze that can go on for days you can make your own terrain and some purple rain you can make a retro game to see how it's done and then tweak a piece to make it yours for everyone make some fract trees or Twitter BS if you please and when the C are you can make them your own 53,000 what 86 oh coding train right of follow the road coding train good morning I know there's an echo I'm going to be able to get rid of that uh I think I have gotten rid of the voice echo good morning that was my attempt of kind of getting that theme song back in there uh please let me know if I'm coming through loud and clear through the inter interweb waves of air radio frequency tube things um and uh my name is Dan uh I'm I I I'm I'm playing that song in intro video as a reminder that the new the new official coding Train theme song will be coming soon uh with a new video that's the old one when I had a different name ah good times good times happy memories um so what is this thing that you're watching um this is a live uh stream uh yesterday I had a live stream I brought new meaning to the word live stream actually but uh today is a new day a new frontier it's going to be uh I'm here on the internet my name is Dan and I do this every week uh typically on Friday mornings my time which is New York City eastern time around 1030 a.m. although it appears to be almost 1100 a.m. which is usually about when I get started um so and what I do is is I talk about oh and I even have this up here this wasn't supposed to be up yet I talk about uh and present and attempt various uh things related to computer programming and code so uh that's what's happening here so I actually I'm like semi almost somewhat prepared if you could believe that in that I have an agenda it's in a Google doc which was up a second ago I also something really amazing has happened that's going to change my life on these live streams this is a box of tissues coding train brought to you by tissues when your nose is running you can use one to blow your nose into it and wipe your nose and then you will not find yourself throughout your entire tutorial scratching your nose and then having lots of YouTube comments saying why you keep scratching your nose and then you start to feel neurotic about it and it feeds back into your head and uh anyway so there you go that's gonna that's going to be that's a game Cher for me here on this YouTube live stream okay uh hello Switzerland hello Denmark I'm seeing people in the chat and I am seeing the requests that I get every week for a room tour and Studio setup please uh so I will do that today uh later today I I often do a bonus live stream Friday evening my time because I never get through everything in the morning I come back and try to do some more I don't know if I'll be able to do that today but what I will do is use the time that I often do do that to do a studio walk through okay so let's move on to the agenda where is it here it is where I need another button that I can press that goes because I'm obsessed with sound effects oop you don't like my sound effects then I challenge you internet give me some better ones or just tell me to stop okay um so this is what I'm looking at today um uh let me let me let me actually skip this stuff for right now and go over some announcements okay so two announcements about how things work about uh with some of my GitHub repositories number one is um if you would like to suggest topics for me to consider and approach and cover on a future uh in a future session um you can do so here at this um GitHub repository under the coding train organization rainbow Das topics really though I should probably change this to some kind of like train thing where these are all train stations and they're at certain times and there's a schedule and the train pulls into the station and then this topic is explored but you know anyway um and so um several uh viewers have been helping me organize and keep track of all these and there's some uh I want to thank Mi am SOI and um uh actually I don't know how to pronounce this name the username Callum in uh the patron group um and so um um you can see that there are some new uh tags uh and what I'm going to do is I'm actually going to go here and do sort by uh thumbs up and we'll see uh now uh some of these topics and also I should point out that when I cover a topic then uh the issue gets closed this is one that I did uh this is a coding challenge that I did maybe last week I think and uh then uh I post a link to the video so you can uh track this repository put your suggestions there um and I'm thinking about other ways of uh um I've had some great suggestions of other ways to maybe visualize this or or up voting techniques so that's that's coming so that repository is there ah the camera went off it wouldn't be the coding train without a camera shuts off after 30 minutes like I could resolve this problem probably but it's just part it's part of the way that we code we spend 30 minutes and then all of a sudden the camera's off then everybody the chat says camera's off and then I go and I turn the camera back on okay so that's that's actually probably less interesting of an announcement it's not really announcement it's more of a reminder that there is also um this repository rainbow code and this is what I'm more excited to show you um so this is the repository where I keep all the example code that mirrors exactly what I do in the videos now there's a it there's a bit of an issue with this in that sometimes I will produce code in a video that has bugs in it or mistakes in it or kind of terrible ideas in it for the most part I try to have the code in this repository mirror what I do in the live stream exactly so that if you have an improvement idea you can actually just you you can use the code that's exactly even with the mistake and kind of fix them as an exercise even yourself but sometimes I will sometimes the code in here if it's like really broken I will change it um but the more of the issue at play here is that I'm getting so many on Twitter uh over email so many wonderful uh variations on the coding challenges I'm going to um and I'm trying to figure out a good way to compile those and let people share them and I was getting them as poll requests and so it doesn't really make sense for me to take somebody's beautiful visual idea that builds on top of an example that I've made and alter the example code so what I've done here uh I'm going to go under challenges and I know one a challenge that has a particular I'm going to go to coding challenge uh 59 steering paths so uh I would pull this up if I had thought about it but oh I'm really like standing in front of stuff today um so this is a coding challenge if you recall that made a text with little particles moving around and it wrote the word the particles wrote the word train I would show it to you now each coding challenge will have in the directory with the example code a readme file the nice thing about GitHub is if you ever name a file called readme.md as a markdown file it will actually just appear on it it will be rendered the markdown will be rendered on that actual page so now what I'm doing is on that page you can see Community variations and um these are submitted by people um poll requesting so I don't know if I'm I'm not logged in right now so I I would kind of go through how to do this but um um sorry I'm just I'm looking at the chat um I'm stop talking show us code oh oh you must not have watched this before because I spend a lot of time just talking uh you come back in like 15 or 20 minutes I'll start doing some code but um I'm G to um so uh if you're wondering how to do a poll request send me a tweet um I'm glad to sort of help walk you through that if you've made something and want a poll request um but I also have some you might be surprised to know that I have some GitHub tutorial videos that you could watch okay now um so let's look at some of these so let's look at um changes to make the vehicles flow between multiple words so this is a version that uh it says hi so this is looks like almost exactly what I did in the coding challenge where a lot of particles uh uh they have a whole base a Target location they move that that are along the paths of a letter form and then they uh flee they use a fleeing Behavior to move away from the mouse and then come back as the mouse moves away so now let's what happens if I press it says press the space bar o look at that there press the space r again and also let's try clicking the mouse it goes to clicking the mouse looks like it makes it go to a random location and then pressing the space bar and so interestingly you'll notice there has five characters whereas High only has two characters look what happens to all the other particles they kind of go down to the bottom so that's an interesting solution another solution especially if the co if the text were something that a user typed in is that you might think about just looking at okay I have a certain number of particles right now now I get new text let calculate how many particles I need for that if it's more than the number I have add the difference if it's less then delete the difference then set all the remaining particles to a new location okay so that's great to see uh let's look at uh Joseph cuchar changes to make oh I love this one to make the vehicles visible as polygons this is a really and actually this is super oops oh okay but there is a version I can look at this is incredibly relevant to a coding challenge I want to do today which is look at this this is the same idea but instead of the letter forms being made up of circles particles white things these are actually now polygons that are triang that are you triangles actually looks like uh triangle strips in a way that the the geometry is made up by a lot of triangles and this is something I actually want to cover later is how to build geometry out of triangles complex geometry out of triangle pieces and then how texture those from an image so we'll look at that uh later today and let's see what else do I got here uh gawa variant word morphing and rainbow colors oo oh look at this ah so this is great so this there's a different font there's some rainbow colors and now I can also put the text in like hello YouTube and there we go oh and look at this let me just delete the E whoa look at this that is really cool I love this um so great and then I can change the dot size and I can change the resolution so uh can we really see this though with that so resolution oh that makes it even more I want to make it like less yeah so you can see that resolution variable is a variable that kind of how many dots per spot along the path and with 0.01 you can barely see the text with 0 one you can see it more oh this is wonderful wonderful work okay uh which so that's the other thing want to mention so if you're doing stuff and you want to share it uh in a place that people can find it share it with me um this is a system for doing that now now at some point it might be nice to have an even more elaborate system um but I'm boy this mug it's the invisible mug what is in this invisible mug you can all try to guess today okay so that's what I've got to say as always I always forget the this dot this do all right just getting got to get the body moving here to get some energy going uh okay what else do I have uh to talk about uh okay uh so I talked about these two things aha store coming soon I have had requests I forgot for uh coding train related merchandise so uh this is a tshirt sample that I received and there's a bunch of variations of that and some mugs maybe some other things eventually too so for those of you who are interested I will be uh sending out a link to a store where you can buy this sort of stuff if you are European or not just European but not from the United States um the the the system that I'm using currently is the shipping is a little bit expensive to outside the United States so um I'm working on also an alternative for people who are maybe not in the United States so uh but if if you have ideas uh the reason I mentioned European is just because I noticed it was particularly expensive to some European countries so um if you um and I'm also thinking like maybe I can use these for prizes and that type of thing at some point if I do some type of so if you have ideas for that I'd love to give some of those things away as a thank you to this wonderful warm and friendly and supportive audience who somehow tunes into this okay uh all right so that's another announcement I have aha okay now for all of you who have been asking me to do some tutorials that relate to machine learning the time has come I uh work at this uh place called NYU and uh I am currently teaching a class about uh simulation of natural systems in motion and animation code stuff based on the nature of code book that I've talked about probably a number of times but I am doing that the course uh restarts again um about two weeks from now so I'm going to go to github.com shiftman I'm going to show you two things number one uh repositories um I'm looking for ah this so I have a I have been working on a list of topics for a syllabus that's going to happen in the second half and as I part of the way that I do this is I kind of spend all week working on stuff here at this at NYU and then on Fridays I come and make videos about stuff that I was working on during the week so um this is coming if we look at the uh syllabus this is my current plan um week one I want to kind of just get started uh with um kind of thinking about algorithms and efficiency and maybe look at some kind of common uh almost computer science uh programming problems as a kind of I'm not sure if I'm going to actually do this the first week but this is what I'm thinking of then I want to uh kind of ease into the topic of machine learning by looking at some classic algorithms for doing two tasks that machine learning algorithms are particularly well suited to do one is classification so hey here's an image of a cat here's an image of a dog which or actually more like here's 100 images of a cat now here's here's a 100 images of a dog and maybe more like a million images of a cat or 100 million images of a cat would be better and then now here's a new image which one do you think it is that's classification um uh and then uh regression which is a technique um similar to classification but more about predicting it can be there's these are broad topics but I want to look at the the idea of regression as a prediction so instead of classifying it's either a or b here's a set of properties could I predict what um you know what the what the price of a house is going to be based on a set of inputs that type of thing the kind of classic or predict a stock price if I look at a time series so um after that actually you know I think I want to do this in another order I'm going to look at genetic algorithms which I've actually done a whole video series about already so this is one topic that I've actually done stuff about but I want to add to the genetic algorithms examples in particular by looking at evolving steering agents so Vehicles agents particles voids things that like move around the screen based on a set of rules how can we give them a virtual DNA and evolve them so that's a week that I'll do some videos about then I want to look at um neural networks in some ways from scratch like what are the basic mechanics of them a simple perceptron which is the simplest um neural network I want to look at um you know well what can it do what can it not do what happens if instead of we have this sort of like single neuron that has some inputs and an output what if we add a bunch of them together and kind of look at the mechanics of it and do some simple demonstrations but then ultimately the idea is once I get through that um what I would like to do is um uh move to using high so to get sort of like a foundation of understanding of how these things work but we're uh you know there's not realistic to implement super uh uh sophisticated uh neural network systems that you can train and do all sorts of stuff with that are already implemented and done in kind of a lot of Open Source libraries and tools so I might look at using something like tensor flow or other I'm I'm I'm happy to take your suggestions of other Frameworks for doing machine learning that we can make some simple examples reinforcement learning is something I want to take a really um big look at there's a wonderful example that was just uh here oh shoot this is a problem with using a computer in these live streams that doesn't uh steering wait I know self I'm just going to Google this driving car in the browser a Yan hum humon I'm not sure I'm not saying the the name correctly recently came out with uh it's actually on the here we go um this is a uh wonderful demonstration of this so this looks a lot like some of my examples in that there's a steering agent moving around the space and we could design a system using built on top of Craig Reynolds steering behaviors you know that I've gone through seek arrive path following flow field following and Reynold has a behavior that's obstacle avoidance which is very much a top down uh this is how you avoid obstacles let me give the instructions to the vehicle as opposed to a vehicle that's moving around the space it just sort of knows it's able to like just see is an obstacle in front or behind or to the left and the right and it's going to make a guess on what to do next and it's going to get some reinforcements like here's a little piece of cheese vehicle if you do a good job but if you don't do a good job like little electric shock so reinforcement learning kind of reward based system that over time uh an autonomous agent could learn how to and and universe is a open source uh system that uses re that uses reinforcement learning to train an agent or a bot to play a video game so these are some things that I want to look at okay thanks for the talk code now it's coming don't watch the lot just watch the released videos if you just want the codee part that's my suggestion to you I don't know maybe I shouldn't talk so much what else am I supposed to do oh dance some new music oh I should play the uh kitten song uh okay where am I is there yes kittens thank you very much kittens and rainbows and um so then I also want to look at um uh certain kinds of socalled deep learning systems that are Recent research to work with images and text uh convolution and recurrent uh neural networks if only I had the graph of the live audience I should really put that up I should have like almost like I've got like a you know I'm a QVC salesperson or something with that like live graph of whether people are calling in to buy the product or not I don't know what I'm talking about have that the YouTube viewers are all dropping off now okay so that's coming uh any suggestions ideas thoughts about this uh file an issue on this repository send me a tweet I'm looking for examples I'm looking for ways to do this in a simple accessible way um that you can pull and also work with tools like creative coding tools like processing and P5 okay the other thing I'll just mention though related to this and I've had so much help with this that I I would be remiss not to mention it is under uh coding train organization there is also a machine learning repo that is just somebody made this is quite nice thank you um that uh has a lot of different resources and things that I have been compiling and honestly there is the you know just to mention this I this uh is also this link has a ton of resources at at it and even more than I have here so this is stuff that I'm thinking of looking at and things that I've been compiling okay oh I wanted to put this algorithm in the syllabus somewhere anyway uh okay um so let's see how am I doing here how am I doing store I mentioned machine learning syllabus oh okay we're good I got through all this nonsense now it's time for that doesn't work it doesn't work the way that I wanted to but I'm going to work on this okay uh work from the community okay so I've had a lot of people submit things to me in the last couple days and I'm I I I am I at 30 minutes yet no I'm not at 30 minutes so that's okay I I if so but I'm going to try to just click through these um so I can start getting to the tutorial stuff because I know a lot of people are interested in that but I want to show some of these wonderful projects uh here is one uh made by Jerome Martinez called The Maze Runner um this looks like what are the oh themes look at this can I have a little um I love this uh different color themes I can change the size uh and it looks like it is um uh this is now running in p5js wonderful so this looks like quite related to some making a maze and solving the maze at the same time great work thank you uh let's now look at uh uh Arno has submitted a couple projects that are for uh kids um this is a web app to help your child Express uh his or her feelings and find a solution with you so let's look at it in French come uh can you hear that music I love it uh I think I'm supposed to oh yeah I am afraid per afraid right very afraid KES how can I help you right yes uh sleep I need sleep this is awesome okay I'm about to try this with my own kids later I keep and then uh Arno whoops has another project about uh teaching kids to tell time uh which is really I think a exciting uh Innovative use of some interface stuff here so I can like turn the minutes off and off um I can change the hours and the minutes and I can try to guess I guess is the idea so it's hidden um but now I can show the time to find my answer great work um uh lost GH bear somebody in the slack Channel let me know if that's working and I'll show it if it is if it got fixed let's go to Taco Bank on Twitter this is a wonderful uh this is what one of the things that I love about what's happening on Twitter and Instagram and um a lot of artists are sharing short little uh animated Gifts of simple algorithms and this from what I understand is made only with The Arc function in processing so uh I love seeing stuff like this uh so if you make stuff like this and share your work this way please uh tag me on Twitter so I can take a look at shiffman um so this is uh Taco Bank on Twitter um okay uh now um ala submitted a bunch of code pin pens um this is a really nice use of oscillating oscillating simple harmonic motion um there's so much Beauty you can find in just the simple sine wave through geometry design layering offsetting period frequency um so uh this great great work I love to see this kind of stuff uh let's look at this one uh this is oh yeah this is me this spiraling parrot got to love that all these links by the way when this video gets archived links to all these will be in the description and uh here's another one oh another this is really so what I love about this is we can see the classic sine wave pattern that we're used to but now we have these uh circles that are really just moving up and down along a single axis with harmonic motion we can see the relationship between the sort the the graph of the sine wave and the harmonic motion of a single um uh a single object moving up and down or left and right great work okay uh I'm seeing in the chat that lost GH Bears project is working so let's try this now one thing I'm worried about so I have a problem I'm gonna I'm going to do this I'm going to throw a caution to the wind but if if somebody submits to me a project that uses uh audio in it and the audio is not something that I have a license to use on the YouTube channel I will get a copyright notice in the video and the live stream so I just have to be careful about that but I'm going to throw a caution to the wind here oh it's this is using the microphone so it's no problem uh hello hello hello hello hello oh I should as always I always forget oh wait this is lost GH Bears project and this is lost G spar's kitten sonse yes kittens thank you very much kittens and rainbows and cupcakes notice that look what I get I'm really losing my mind aerobics is this like a this is like an exercise show okay okay so thank you um thank you lost GH bear this is great if you this one of the wonderful things you can do with P5 uh is u in the browser is get microphone input visualize that input uh frequency analysis volume analysis that type of thing um there's no audio oh were you not hearing that audio oh that's so funny did you not hear the song uh okay I don't know what's going on uh okay um I'm going to keep going uh and then uh this is uh from Robin who writes I also I love harsh feedback on this one it's supposed to be a dynamic logo for website usage um once design is approved it will be adapted to fit inside a small Dom element powered by a footer okay so let's take a look at it um and those of you in the chat or I don't know if uh um how Robin you want to receive uh feedback but so this is a um an interesting use of computational design which is to say I want to make a logo that is dynamic it's procedural it's maybe different every time or it's animated and so um there's a lot of examples of this and uh actually if you're interested in this topic a reference that I would really recommend is um what's it called programming Design Systems by run Madson and I'd love to have run as a guest sometime uh ah this is the class I want the book here it is programming Design Systems uh run I think I probably mentioned this before is writing a free digital book that teaches a practical introduction to the to the new foundations of graphic design so foundations of graph graphic design through the lens of computation algorithms code and uh you know even if I were just we we we saw ala's project about um where are the chapters about um I think there's one I thought there's one about the sine waves somewhere here a chapter but anyway I'll I'll let you guys dig into this more yourself okay uh okay here we go now uh ah so these are some things so the be nice equation which I'm now officially calling it The be nice equation because by you know we could solve all a lot of the world's problems if we could actually just write an equation that would help people understand how to be nice maybe that equation will do that uh whoops this is a uh so this was the um fractal spirograph um there's a there's a trash can over there it didn't go in it but this is the uh fractal spirograph um belly spice on the fractal spirograph code challenge that I did and you can see here that what I love about this is it's the same idea but has a lot of now an interface that I can change things so let's play around let's put the circles inside each other let's add a bunch more children uh let's change this value um I don't know what this is oh my let's do this I don't know what I'm doing here um let's change the size or the speed I'm doing a terrible job uh show circles show drawing Point shows points look at this path color so pause animation so I kind of messed it up let's refresh it just to uh children I thought if I get more and more children yeah there we go so um so anyway so I encourage you this is a this is a lovely thing that I this is a thing that I love to see which is taking an existing system evaluating what are all the parameters of that system and then making an interface to control all those parameters to come up with a kind of design idea and this is a really nice example of that uh so thank you to uh habl wgq on GitHub uh and uh this is from gako this is this is this hearkens back I like really I these tissues it's new stick here uh tissue stick which is probably not good um ah I didn't answer the question so uh I'm gonna I'm going to ask lost GH Bear's question in a second so um this is uh I don't know if this is built oh it does say it's um based on my example but last fall the course that I um the course that I taught at NYU and did a lot of videos about involved programming with text so what are some algorithms and systems to generate text and this is a a technique called a uh American poet Jackson mllo and the way that it works is you get a seed phrase and it uh picks up words based on the letters in the seed phrase from the seed text and generates a poem out of that so I can hit go and I can refresh and I can get different ones so um this is a wonderful uh what I like about this is just the kind of simple interface and design of it the playfulness of the algorithm and so this great to see so I encourage you to check out some of those videos um and check out this work by uh gako on uh GI okay um I'm I'm done with my community set but I but I forgot that um uh that a lost GH bear had a question so if if you recall back to uh this particular visualization uh of microphone uh lost GH bear asks can you give me any advice of new of new ways to visualize in addition to what is there so first I would just like to throw that question out to the chat so those of you who have ideas of different um things that lost GH May lost GH bear might try please uh write those in the chat and hopefully lost GH bear can read along I would say you know do I have any idea here's the thing to give feedback on a project I think as often it's too easy to say you know what I think is a cool idea why don't you try to do it this way and so you know what I would kind of more uh say in terms of thinking about critique and feedback on a project is more to kind of think about asking questions like well what is it that you're trying to make and what is it that you're trying to express and uh is the idea to um to create you know what's the context here who's the audience uh and so I would think through those kind of details a bit more to try to inform some of your design decisions at the same time I think there's a lot of value in just kind of experimenting so go through and find a lot of examples that you like like the fractal spirograph or the pein noise terrain and look at what the parameters of those systems are and then try to plug those parameters into um into the volume of the sound or the frequency different the frequency array of sounds and see what kind of results you get so I think on the one hand it's thinking about context audience meaning like what what are you trying to express with this project and who who is it for um which might give you some more specificity in how you design but also simply um just playfulness and like just trying out a lot of different visual ideas and you've done that here the are some you know the the graph is quite standard but look for some nonstandard examples okay uh so I'm just checking uh o my I'm getting a message from that my NES classic is arriving soon anyway um I'm just checking here because I want to make sure there's no urgent messages on my phone which there aren't okay so now we're really ready to get started with what today is for it is 1130 it's 35 minutes so I like the introductory stuff to not be any longer longer than 30 minutes um which I um ideally like 15 or 20 minutes so I apologize for that going on a little long today um okay now let's see what we can do so I am going to um I'm looking here okay oh that's very loud I love that okay so let me see this is now I'm I'm to here so this this is what I want to do oh first of all okay people are talking in the hallway I can hear them uh I want to pick up with uh oops this camera is off a topic that I started last yesterday evening this crazy person whiteboard because yesterday in yesterday's live stream I focused on uh the general the broad topic of physics engines what is a physics engine why would you use a physics engine what kind of features do physics engines have and what are some possible physics engines that work in different contexts whether it's a programming language or running something in the browser that sort of thing so uh I did uh uh and then I um hope this camera is now off uh hold on a sec and then then then if I come back over here I made um an example so let's pull up that example from yesterday is it actually I already have terminal here uh and I can probably just run the server again and I can go to um so if someone wants to tweet at Leah Brew I shouldn't say this cuz now everybody's going to do it I was just going to say the um the creator of matter.js which is a physics engine was watching some of the stream yesterday and sent me some excellent uh advice uh which I'm going to read some messages uh that clarified a few things so this is the example that I built yesterday which is a simple example using the physics engine matter.js to handle collisions and also the the the physics of the system and uh um and the and rendering with p5js so what I want to do is continue this now okay let's see if I'm back uh let's see I hopefully I'm back uh okay so it says to me that I'm streaming so I'm going to in assume I'm back now I don't remember where I left off I should have used I should have used that moment for a PE break a P5 Break um okay so one thing I want to do to this example is uh I want to improve it a little bit so I need to leave the code AS then I want to make some comments about it so I I need to leave the I want to um I want to leave the code AS is ah okay so I'm going to make a new folder matter JS I'm going to put this in here I'm going to call this uh 01 and then I'm GNA say O2 just going to do this so I I don't think this will get included in a so where where where how am I like I need to move this this can be over here okay so one thing I want to do is I want to create a um I'm just going to make a boundary object which is a little bit silly because um I could um I'm going to make a boundary object which is really just a um the same thing as one of the Box objects but with is static equal true uh I'm trying to think if this really this is UN necessary but I'm going to do it anyway because um uh because and so uh everything else can stay the same whoops this did not get saved where I thought it would get saved oh I'm in the wrong place uh I want to ah shoot sorry everybody I moved things around um don't say so hold on hold on hold on um if I go here whoa and open the console and move this out a little bit further here what What's happen happened ah what a disaster um ah I see this is where I want to be oh I made a new directory by accident of course of course okay don't worry everything's going to be everything's going to be back in a minute I just need to get myself set up here the way that I want to be set up uh hit refresh there we go I've got two examples going I want to then go to the desktop and I want to look at uh forget about this for a second and then I want to open up this in atom almost there and I want to go to the second one uh here um okay so what I want to do I just want to I want to improve on this example but there's a um so I'm going to O2 but there's a big there's a big problem with this example which is that I kind of hardcoded the floor so hard I what I want to do is be able to um adjust the uh adjust how the floor is give it an angle that type of thing without um without having to uh hard code and change it in a bunch of places so there's two ways I could do this number one is I could um I could just make the idea of a box more flexible and it could have static boxes and movable boxes but ultimately I kind of want to treat these things totally differently because I might this might change into something else later so I'm going to have some redundancy I'm not going to use this idea of inheritance and I'm just going to do save as in uh matter Basics I'm going to make a file called boundary. JS and I'm I'm GNA this won't be its own tutorial videos I'm just going to do this really kind of quickly it'll just be here in the live stream for you live viewers um I'm going to make a file called boundary. Js actually you know what never mind we're going to make a we're going to do we're going to do a part two here because this is worth what I'm going to do is change these into circles and change the boundaries okay why am I doing something that is a tutorial that I'm saying is not a tutorial okay so I'm in matter Basics okay ready everybody so this tutorial this particular video this is yes this is a continuation of what I did yesterday so I apologize to those of you who didn't watch yesterday's live stream it is archived and available in my channel you could go back and watch it but in the end all of these things that I'm doing will be edited into a sequence of shorter tutorial videos so for now just say Enjoy watch along you can go back and fill in the missing pieces later okay um because there's a bunch of things that I want to do and then I think um yeah okay hello welcome to a second video about using matter.js so in the previous video I kind of ended with this which is just a simple demonstration of falling rectangles landing on a ground so I want to do two things in this video to expand on our sort of knowledge and sense of what matter.js can do I want to change these falling rectangles into circles and I want to change the way that the boundary works in that I want to make the this bottom boundary I want to be able to put it as an angle and maybe put a bunch of them so there's one of the matter.js examples is essentially this let's just go to the website because I'm going to need I'm going to need the documents open for the documentation open so at some point here uh um one will come let's wait for it there no that's not it maybe that was it maybe it's not there look at all these demonstrations and there it is this one one I want to kind of make this that one do you see that one so let's um so what do I need to do so first of all in I did this sort of terrible thing where this bottom thing which I'm calling a boundary or the floor was kind of hardcoded so let's fix that um and there's going to be some redundancy here but I'm going to live with the redundancy I'm going to make another Javascript file called boundary. JS that's in the right place and then I'm not going to forget this time in index.html I'm going to add another reference to uh boundary. JS now what I want to do is this ground variable instead of creating the body right here I want to say new boundary which is my own thing and uh I'm going to use those same arguments 200 height uh and I'm going to get rid of options and then what I'm going to add under options is um in the boundary object whoops where is that boundary object oh it's says box here wait wait wait wait oh yeah box this needs to say boundary and I'm going to add is static true so by definition this idea of a boundary I mean boundary is probably the wrong word but is going to be something that's doesn't move that's inflexible that's in one place in the code okay so now uh I should then be able to say and let's make it a different color uh the the boxes are kind of like a white outline and a gray interior just so we see that it's something different let's give it a white outline and a uh I know I'm like afraid to use color a uh a black dark a black interior okay so everything should be the same right now I'm going to change things about boxes versus boundaries but now if I make the ground a boundary then I should be able to just say I don't need any of this down here I can just say ground. sh so if I ever change the way the boundary works then um I don't have to worry about that so let's see so this still works exactly the same way um and you know I'm I'm like annoyed with the fact that the outline is bleeding off the edge here so I'm going to kind of For No Good Reason uh change this to like you know what I'm actually going to do is I'm going to go into boundary and not have it have a stroke so I'm going to say um I'm not going to have any outline to that color I'm going to say no stroke okay there we go this is more like what I want okay so we're in good shape now here's the thing I want to demonstrate a problem that happened in the previous video let's go to this boundary uh where I'm creating it and let's it has a height right now of 100 pixels it's very thick I'm going to give it a height of like five pixels now you can see it's there there's like a boundary there and let's just see now now it's actually working just fine so we're lucky here one of the things I did yesterday was add the update upate time step in my draw Loop so there's sort of more up more physics updates per time that I draw it but I have a feeling that if I go back to what I did yesterday which is just tell the engine to run in the background rather than update it manually we might see the problem I had yesterday uh let's go back here okay let's see can I get this oh there we go so some of them disappear because that boundary is not very thick they're kind of like the physics gets confused and they're skipping over it so uh leab bruy uh the creator of matter.js sent me a message saying there's a so in the in engine. update that update function there's a correction fa okay I don't know what's going on today I used to have this problem where the stream the streaming computer uh would would freeze um and get disconnected and that problem I used to have it and just went away so I actually switch I'm using a soft piece of software called wirecast um and um wirecast um uh was it actually was having this problem so I reverted to an older version of wirecast and the problem went away now I'm having a different problem so I went back to the newer version so hopefully um hopefully this is going to be fine but uh okay so um let me I'm going to uh try to figure out where I was before and this will get edited eventually so um okay so okay so let me see here so engine update thank you so I'm going to change right now having engine I'm not going to say engine update in uh in draw I'm going to go back to having um engine. run in setup so this will allow with engine. update I'm manually telling the physics system to move ahead a moment of time every time through draw which is kind of good it's like move ahead draw move ahead draw with engine. run it's going to run on its own behind the scenes separate from how I'm drawing you'll actually these stuff appear to be moving faster because there's going to it's going to the engine's going to be running at 60 frames per second where my actual draw Loop might be less so let me just do that still works fine but you know I don't know what's better I I anyway I feel like I have more control but what I want to show you is the issue is if I now change the um that boundary at the bottom to something like it's only like uh three pixels you can see that some stuff is working but let me go up here look sometimes the the rectangles like fall through the bottom did you see that one oh I was standing behind it it fell through let me find it get another one ah come on happen bug there you go you see some of them are falling through so the reason why this is happening is because there aren't enough time steps it the mo it's checking where the object is then it moves it and checks again and it's actually jumped over the obstacle so um there are there's a number of ways we could fix this number one the way I fixed it is just like okay just make the ground thicker and now this problem can't happen um and so that's one way of of fixing it um but there's actually um there's I'm going to put engine. update back into the draw Loop if you look in the documentation which I showed yesterday there are uh variables here there are arguments you can pass through about time steps and leabu uh on Twitter the creator of the matter.js library wrote to me and said the issue of skipping is best solved like you did by using thicker floor or a smaller time step or multiple updates per step so that's something you can do but uh leabu writes there is a feature called continuous collisions that I am working on that solves the issue for any time step so that's coming forward so that was great to hear that it's so wonderful to like do a tutorial about a physics engine and have the creator of the open source Library uh weigh in and provide feedback so thank you for that leabu on Twitter okay so now let's keep going with this the next thing I want to demonstrate is I want to see if I can turn that obstacle at an angle so uh let's look at the boundary object so this is where I'm creating the re rectangle object and it's the variables in this do body so what I'm just going to do is I'm going to say console.log this. body let's look at what some of the properties are and here's a property angle so this leads me to believe that I could most likely just set the angle to a value and it would change it so let's try that let's try saying something like this. angle equals Pi ided 4 which is about 45 degrees in radians right pi divided two is 90 degrees so let's do that H okay let's see here let's try to look here console log uh angle did that come through ooh zero so why if I set it up here to an angle does it come out as zero down here what if I need to do it uh what if I do it after I add it to the world no what am I missing oh oh ah ah I'm just being silly it's this do body. angle so when I say this do angle this dot this dot this dot when I say this do angle I'm adding a property called angle to my boundary but remember my boundary object is simply a wrapper really for the matter.js body object so I need to say this body angle and that should fix this for me there we go so now we can see oh whoa weird stuff happening crazy weird stuff happening so what what have I missed here am I drawing it the wrong why is this I like what it's doing it's kind of like some weird crazy uh graphic thing that I didn't expect let's think about this I got to debug this what have I done wrong whoa so this is the classic thing that happens with physics libraries where I'm clearly not drawing it the way that the physics Library thinks it is um is it Poss possible that it wants I don't think it wants angles in uh degrees there might be an issue with setting the angle um angle previous angular speed angle Velo oh it has an angular velocity which it really shouldn't so did I give it an angular velocity by accident somehow uh is there an initial angle can I do this is this better if I just set it as an option at the beginning let's try that ah there we go okay so it looks like this is so this is a classic thing that happens with physics engine I violated the laws of physics by just setting its angle directly the only reason its angle would change is if a force some was probably added to it that instigated the oh I'm not looking at the chat um um so so I have a feeling that you just can't set the angle directly ly unless you kind of work with the mechanics of how the physics engine is behind the scenes so if I want to change its angle while it's running I need to maybe apply an angular velocity or an angular Force to have it turn so that's nice to see that that's uh fixed um so let's let's add a bunch of these um let's uh go to sketch. JS and let's say VAR U just call it boundaries as an array uh and what I'm going to do is I'm going to create um in I'm I'm going to create a bunch of them Let's uh let's say um boundaries dot uh boundaries. push so let me just push this boundary now here's the thing I want to give it an angle so let me give it an angle like uh the new boundary also has an angle of pi divided 4 so I can go into the boundary object and uh change add another argument like a for angle and put that in here and so what I want now is to um let's make it like pi divided by let's just you know Pi divide let's just let's just put some values in like 3 so it's at a slight angle let's not make it so tall 50 uh let's um so let's see here and uh let's um and then what I want to do is uh here say four VAR I equal Z I want to render all of the boundaries uh ah I I I for some reason today is the day where my code lines of code are so long and going off the edge uh boundaries. show so let's see what I've got going on here I have some errors sketch. JS line 20 what did I not do correctly here oops I got the semicolon in the wrong place uh matter Dess ooh type of undefined sketch 2 to um oh oh oh I don't need to add it here uh I wonder if that also caused a problem because I added it twice um but because it gets added the thing that I did is added here so I don't need that other that's been a mistake that's been in the code uh and let's see here okay so we can see here this is working I've got a boundary there and so now let's add some other ones let's add another one at uh height divided two uh and let's have it go the other angle the other direction so now and let's make these uh shorter with times 6 or whatever you know I could hard code values in and so now oh and let's move this one over oops let's like move this to 250 150 so you get the idea oh no that's not really right let's turn let's make this one uh you know let's what what's the size let's make this one 300 let's make this one 200 uh let's make this negative3 let's make this I'm sure I could make a clever Loop there we go uh this is kind of what I was looking to do but I want this one now to be much higher up uh which this bottom one uh this is the higher up one uh let's make that even higher up and let's make this uh then just like 20 here okay so you can see what I'm trying to do here I'm trying to create a system like now the friction is quite High look how much the friction is causing these things to stop so let's at least fix that in the boundary the friction is.3 I can't remember is it zero is no friction or a lot of friction that looks like they're sliding more or less I can't tell let's go to the box and also give it no friction there we go so now that's no friction but maybe I want a little bit of friction and maybe I want a little bit of friction on each uh and then uh also what what I said I wanted to do is I wanted to change the rectangles boy there that's really a lot of friction you can play around with those values um I'm going to put zero on the boundary um right look at all that friction uh oops I'm uh really was it really no friction with zero yeah um what I'm going to do is I am going to uh now also I want to change those rectangles into circles because why not uh so I'm going to go into the box and I could change the name of it from box but really what I want to do is change this is to Circle and I have a guess that what Circle wants is maybe XY whoops XY radius so XY radius I'm going to change that in sketch to just make when I click the mouse to add one with a single radius uh and then I am going to uh change the way that I draw it to be an ellipse uh with an r instead of a w and an H so let's do that and here we go uh what am I missing sketch. JS line 30 uh and I uh boxes. push push new box Mouse X Mouse y this closes random this I need another parenthesis there and here we go now it looks like my size is off so let's go look at the documentation it's kind of working you can see the circles are like hitting the uh they're they're kind of like above the actual um they're actually above the actual uh boundary so let's go to the matter.js documentation uh and let's fix this boy I'm spending a lot longer on this little example than I meant to let's go to the matter.js documentation let's go to uh bodies let's look for Circle XY radius I know what the problem is I was right all along but P5 doesn't expect a radius it expects a diameter so all I need to do to fix this is actually where I'm drawing and let me call this circle just to be uh consistent and in sketch. JS I'm going to now call this circles and I'm going to change this to New Circle and I've got to go through circles. length and change this to circles and now what I need to do I'm Gonna Leave This as box. JS just for right now I need to say this. R times two and now whoops uh sketch. JS line 30 I missed one reference ah circles. push so we can see there we go now these are kind of large so I know that let me just change this between five and 10 and I'm also going to do uh Mouse dragged so now what I can do is just add a lot of circles and we can see I mostly have that demo we had before and actually I'm kind of along the way of almost creating a kind of liquid simulation because if you could imagine if you were to change the way the behaviors of these kind of work make these really really tiny um you would almost have something that has a kind of like liquidy like quality to it okay so now what I've done is I did a second video where I showed you a bit more about how I can have two different kinds of objects the static ones we looked at did circles we kind of played around with friction a little bit so hopefully this helps you see a bit more about using matter.js and uh in the next video what I'm going to show you is how to actually have the mouse interact with this so I can kind of drag these objects around and toss them and I'm going to look at a concept called a constraint for that okay see you soon um in the chat c Manny um is uh telling me to increase the restitution to 0.95 in which in which object let's try it here and let's add it also in the boundary oh yeah it's more bouncy okay uh share the code the code will be shared so I always after every live stream I take all the code I upload it to GitHub etc etc how are we on time here it is noon it is noon o'clock that's not so bad I got lots of time left oh this is good I'm definitely gonna need a P5 break at some point okay so now the next thing I would like to do is look at um constraints so what I'm going to do to this particular example what might I do to oh you know what I really need to do here is is I need to remove the objects uh after so let me let's test something so I realized I forgot something that's kind of important here let's go to um let's change this to just add objects in the draw Loop and I'm going to add them at the top every frame so let's let this run for a little bit I'm expecting that eventually it's going to start to run really really slow I'm kind of amazed that it hasn't yet so the issue is of course that I'm creating all these objects and I'm putting them in an array and that array is getting bigger and bigger and bigger and bigger and bigger and now can you start to see it now it's really starting to chunk along so even though the stuff is way off the screen there's a couple issues number one my P5 code is still processing all this stuff but even worse than that probably is matter.js is still trying to do all the collisions for all this stuff that's way somewhere where we don't even see it so what I need to add to this is some way of removing objects so um I'm going to do that in the next in the next sequence um and so the things that I want to add are let me let me get myself ready here I want to go to constraint maybe matter. constraint I want to look for it Mouse oh Mouse constraint so I want to create a mouse constraint um uh I should look at this in advance Mouse constraint Mouse I guess I could just look at the example uh matter.js um um let me look at this uh I'm looking for where are the examples examples uh uh examples examples I think a lot of these just have the mouse constraint in them um let's just look at this one I don't know Mouse constraint look just in advance to sort of see Mouse equals mouse. create Mouse constraint okay I need to create a mouse and then create the mouse constraint with the engine with the mouse and some okay so I think and then add it to the world I think I'll be able to figure this out uh and so I need both to create a mouse and uh a mouse constraint okay so we're going to try that so let me um so let me first back up here and uh just put it back I want to save what it was when I last left off which was this and now I need a new 03 matter mount um okay so what I'm going to add now is the mouse constraint uh okay okay um so let's do that okay so I want to make sure I'm in the right one sketch I'm in the right one now and now I'm in the right one here okay here we go which is better to learn JavaScript python or processing these are some very good questions all of the above how about that Mouse constraint okay uh here we go okay I'm back for more matter.js it matter.js to me to make never mind it it was going to work but it didn't okay so what I want to do this is what I left off in the last video and the thing that I want to add to this is a mouse constraint but you know what there's something that I really should add first which is that even though um there's all of these uh part all these I'm going to call them particles circles and they leave and then I add some more I have never actually told my code or the matter.js engine that those circles have left the screen we can now ignore them so it's going to start to run very very slow after a while so first of all let me just change something here to demonstrate this which is to say instead of adding circles when I uh drag the mouse I'm just going to every time through draw I'm going to add a circle uh at the top um and just so there's going to be a new Circle every frame so now it's doing this automatically and you know I kind want to move that top one a little further down that's not really a good reason to do this but uh let's do that yeah so this is a little better to sort of demonstrate just s see so now I move that a little bit down so we can see after a while I'm sure this is going to start running very very very slow so two things I need to do number one is I need to remove those objects from my array when they're off the screen but number two I probably also need to tell the physics engine stop trying to calculate geometry with them so I know how to remove them from my array so let's let's do that first so here in this this is where I'm kind of looping through and drawing all of them so I can write add some code something like if circles dot is off screen then uh then circles. splice I comma 1 so what what is what is this doing so this is the idea here if not if Circle index I if this particular circle is off the screen then I'm done with it and splice is a function that removes an object from an array so I want to remove the I object from the array and I only want to remove one object so splice allows you to remove like I and then the two after it if I wanted to but I don't want to do that here so is off screen this will just work right no it has no idea what is off screen is that's not some sort of function that exists um but it's something that I can write so I go into box. JS which really should be called circle. JS um I can write a function called is offscreen and what do I want to do well first I want the position of the particle so I can say VAR pause equals this. body. position and now I can say you know there's a lot of things I could evaluate here but I'm just going to do something really easy if pause. Y is greater than height plus like 100 like it's not only at the bottom it's like 100 pixels below the bottom then uh return true and yes yes yes yes actually so let's do this here everybody always complains I like to write silly code like this just to really kind of illustrate exactly what's going on if this is true return true otherwise return false but notice the way I just said that if this is true return true that's kind of silly this whole thing evaluates to true or false so something I can actually do to make my code a bit more concise is just return what this evaluates to so return true or false is pause y greater than he so so now we should this should kind of work and it's actually I I'm expecting it to work so let's just look here at um uh What's this called circles. length 144 145 so that's it's got to be working right if it's 145 now oh whoa but look what's going on see all this like crazy flickering what's that flickering so this is why you need that what I've done there's a flaw in what I've done a major flaw and I do have a video where I go through but I'm going to mention it right now because you don't want to go find that other video oops so this is an edit Point Mata sorry um so what's going on here here's the I'm going to do a quick explanation of this here's the array here's all the spots in the array 0 1 2 3 I'm looking at spot zero it's fine I'm looking at spot one it's fine I'm looking at spot two oh delete it so then this moves over here what used to be in three is now here so now I move and check the next one let me explain this again hold on I realized there's a way that that that I that I like to explain this that's a bit better let me try this again I just realized okay okay so what's the issue here I'm going to I'm going to do a quick explanation let's say I have an array and it has circles in it a b c d and e and C is actually the one that's off the screen C is the one that's off the screen a b d Etc e are all on the screen so I check zero oh it's on the screen I check one oh it's on the screen I check two oh oh it's not on the screen anymore delete it so I remove it from the array you know what happens when you remove something splice something from the array this is what happens to the array that those two elements move down one that's gone so now check three it's fine what happened I checked a b c and then I checked E I never actually checked D because when I was checking index 2 I removed it and then D slid into index 2 so I just went un checked E so this is what's happening I'm kind of like skipping them and then I'm also like not rendering one because it like moved and it didn't get rendered which is why it's flickering so what I actually need to there's a bunch of ways I could resolve this I'm sure there's like a very fancy JavaScript using some kind of sophisticated array function that you all will let me know in the comments but a quick way I could do is just go through the array backwards I could also do something like just say I minus minus like let me just back up one let's add that into the code and now we should see we don't see that flickering problem anymore because I'm not skipping any so but I could also Loop through the array backwards um and now I can just check to make sure this is working you know it's growing but then it went down so definitely things are being removed now the thing is though I only removed them from uh I only removed them from the the array I think matter JS is still thinking about them it's still the world matters like this world is full of circles and I'm going to figure out if they're bouncing even though if they're like thousands of pixels below the screen so I don't actually know how to do this let's look at the matter D chest documentation uh this would be something that you would do in the world right because I say World um here I say uh world. add that's how I add a body to the world I'm guessing there's a remove function so let's go into the documentation world uh we see that there's an add function now add body that's add composit add constraint all bodies all compound all all clear that maybe clears everything clear uh how about remove ah remove generic remove functions removes one or many bodies constraints or composits to the given composite optionally searching its children recursively oh so there's all this kind of like ways that the bodies can have relationships that things can be like sort of tethered together if I remove one should I remove all the other ones but we're not in that sophisticated of a space right now so I'm just going to say I think what's going to work is is if I go to uh box if it's off screen what I might want to do is also do something like circles because I might want to do this in other place like uh remove from World okay you guys can think of a better function name for that remove from world uh so this do remove from World equals function and I'm just going to say world. remove World this. body so I'm pretty sure that that and there's a way that we can test this actually so let's um let's run this so there's how many and I probably shouldn't have let's hold on let's let's first comment this out so right now I'm not calling my own remove from world so I am going and what are I'm going to get rid of these console logging things that are are uh polluting my um um probably in the boundary yeah sorry uh okay so there's my array which is called circles 136 now there's also an array in matter which I believe is probably bodies dot or world do bodies I think the world itself keeps track of everything that's in it that's an array. link 9913 quick circles. length 147 so you can see matter dos thinks there's 913 things whereas I think there's only 147 so now what I should be able to do and let's be more precise about this actually let's just in draw let's console log these console log uh circles. length and then what did I say a world. bodies. length so let's look at both of these so we can see that they're kind of working together until they start to leave the screen my I'm deleting stuff but this just keeps going up and up and up and up and up so now what do I do if I put back in my function where I am additionally not only removing it from my array but telling matter digest to remove the body itself I think we're going to see this now be correct and there we go right uh uh wait hold on it's not exactly ins syane I mean it's a little bit off why is it off oh look at this oh boy oh boy something weird has happened look at this weird bug certain ones have stopped and been removed I have a feeling this has to do with the way that I'm going through the array oh I know what's the problem is look at this boy I've been really careless H splice it and then remove I removed it from the array and then the stuff slid down and I told to remove the one after it which wasn't actually removed from the array so that was a really bad bug this has got to be first so there might be a a different way I could think about organizing this to protect myself from that kind of error but this at least now we should see whoops we should see this fixed I'm in Mouse which I haven't even done yet okay so let's look Let me refresh here so let's see here now here we go once they start getting removed we should see that they're staying in sync uh there we go now one thing you'll notice if I just say no Loop here just to pause the sketch for a second you'll notice that the thing the number of things that matter doz thinks exist is always two more than what I think that's because there's two boundaries so this there's this is is I think an interesting question which is I've introduced a great deal of redundancy and that I'm keeping track of my like own arrays of stuff but matter.js actually keeps track of everything itself but I'm doing that just so I can have total control over the sort of visual design and and management of the entities and not have to rely on because I want to keep these things in separate arrays whereas matter.js the B's array keeps everything in one array but you know there's reasons why you might not do it one way or the other but okay so I said this was going to be that I was going to introduce the mouse but there was enough here just in looking at removing bodies from the world that that was a pretty good topic for this video and the next video the next thing I'm going to add is a mouse constraint where I can click on these things and drag them around so I'll see you in that video okay I looked at this chat uh uh but you guys I think I found yeah the chat was uh um okay the chat gave but I think I think what you're telling me in the chat is what I already figured out okay uh so now let's keep going here 1220 I'm good I'm good with time uh am I good with mental energy so this was matter do matter remove and now uh 04 matter uh Mouse the thing is the question I have here is this isn't the best you know what I'm going to do I'm going to do something a little bit different even though it's not what I said yeah I don't know what I'm doing here ah shoot I think I messed up whoa oh I renamed stuff and then it got confused a I think I can get rid of this um uh what I I think what I actually want to do is go into a different example so um this chat this chat this chat song ever forget to look at the this chat uh what I think I want to do let me go to matter Mouse is actually not do matter Mouse right now the mouse does not matter and I want to and which one I'm in I'm in ' 04 so let me go back to 03 and let me get rid of this uh console log or just comment it out and what I want to do make sure this is right um uh okay what I want to do actually and I'm going to say I'm going to start kind of over from scratch matter um constraint so what I want to do actually is I want to look at constraints between objects that aren't um that sorry I'm thinking I'm thinking I'm thinking that aren't the Mouse um and then do the mouse constraint after because that's going to make more sense uh especially because if I make a little like swinging chain thing that things are attached I'm going to want to swing that around with the mouse whereas this example isn't as this example is not as conducive to like clicking and dragging these things so um that's what I'm going to do okay I want to get to some coding challenges I want to get to the texturing geometry thing I have about an hour I have about an hour before I really need to get going so there's still that's still a solid amount of time uh okay so let me I need to start over from scratch a little bit um and I'm going to call I'm going to leave these as circles I'm gonna okay I'm gonna okay so let me close this and I'm going to rename this to rename a circle let me call it a particle I like the idea of calling it a particle because that kind of you know connects to other things um let me just see here um partic whoops ah particles sure I could do a find and replace I'm just being lazy and particle and index.html uh particle okay so this is the same oh I'm in matter. remove ah okay that's fine I want to look at matter. constraint and sketch. line 49 uh yeah I don't need this though uh okay great okay so now what I want to do is um get rid of this and I want to um just make one boundary that's more at the bottom uh and angle of zero oops okay okay so I've got a blank slate here so what I want to do is I want to create a swinging chain and here's the interesting thing and I I guess I'm going to say this again in a second but matter duts has this idea of composits and it has this idea of a chain that you can actually just like create but I'm not going to do it that way uh which may or may not be a bad idea but I would like to um so let me just I'm going to talk about this in the video I'm I'm I'm I'm out of water but I got a full box of Kleenex so think's going to be okay I might not be hydrated but my nose will not be running okay now uh okay so uh let's see what's going to happen next okay I need to uh where's my Eraser where is my Eraser where or where has my Eraser gone I found it over on the floor okay um I'm going to just erase all this oh my sad little friend there is gone okay okay uh here we go okay so now what I want to do is let's look at um let's look at okay probably should just look at demos here and change this okay to uh the one that I want to look at is maybe chains yeah this okay yeah see this is what I want to implement with then I can actually uh uh click on these things okay uh let's see here okay okay okay okay so where are we where are we where are we where are we composits matter.js and then constraint create options see the property section below for detailed information what you can pass body a body B ID label length resting length point a ah the offset constraint from the center of body a uh and then point B okay this is Trick there's a lot of tricky stuff associated with this so okay so uh uh C Manu WR clearly you ignored my HTTP over DNS idea I think you maybe see Manny is not talking to me okay um Adam has a console if I want not by default oh that's good to know I should um I should maybe consider looking at that okay uh let's get back to business here lot of things these libraries are always more complex and convoluted than I imagine okay um here we go oh boy my uh okay okay so here I am back in another video about matter.js the physics engine in this now one thing I didn't really realize is matter.js actually has a page on their website if you click on demos where all of the examples you can look at as demos and this is basically what I want to build I want to create a kind of like swinging thing like this that I can drag around with the mouse so and one of the nice things about the demos by the way is there's a whole interface here where I can play with a lot of these parameters density friction that type of thing so um so in that case um uh what am I saying in that case uh uh uh these are great to look at and sort of better than my strategy of like let me make the example like keep changing the values obviously I could like create a whole interface in my program but a lot of that is here for you to play around with so I highly suggest taking a look at that now here's the thing this demo I I I looked at it in advance this demo is actually created with okay I'm muted you know why I'm muted you got you guys can all since it crashed I used this moment to take a break okay um so I'm back streaming um no audio yes yes yes uh there I I there's actually an even newer version of wirecast than the one that I'm currently using and I wonder if um I so I'm going to download that and see if maybe that resolves the issue I haven't had this problem but now I have it anyway the good news is oops I didn't get oh look at that I didn't get too uh far where was I looking for chains I didn't um I didn't really get too far in that tutorial so let me just fix this over here and let's get going on this next one okay so I'm just going to jump right back in yeah and maybe I'll switch to using open broadcast studio OBS instead of wirecast and see if that resolves the issue only reason I use wirecast is it has some features that are really useful for me and that I can map uh hot keys on a keyboard to different shots so I can kind of like live change those and some other features I um but also I just need the time to have a day to like try setting up OBS okay here we go oh 10% battery hold on I'm gonna just bear with me for a second here I'm gonna do something I got to plug this in going to charge something here I this uh iPad that I use for sound the battery is about to die so I might as well charge it while I'm not using it where is a plug I need a plug I've used all my plugs that's crazy I could plug it into you know actually this is probably G to make something pop up automatically but I will do this for a second and I'm going to plug this in it's charging and I'm gonna yes that's good and here we go quick quit that okay oops I am back iTunes quit unexpectedly yeah I don't I want it to quit Okay um I just plugged it into my laptop okay here we go let's let's try to get this train going hopefully this train will have no further delays no further track issues that sort of thing okay uh here we go hello welcome to another matter.js physics engine tutorial video in this video I'm going to attempt to make something like this now you might be wondering huh look at that that's a matter.js page so one thing I didn't realize in my previous videos is that matter.js on the website has a page you can click on called demos where you can actually look at these different examples one by one and one of them is for creating these uh chains otherwise known as bodies connected by constraints and those constraints can be springy elastic constraints and so there's a lot of things you can build from this particular idea now another thing I'll notice about this demo page which is great is that it actually has an interface for manipulating a lot of these particular variables so you know I've been kind of in the code just changing numbers and refreshing obviously building an interface to sort of tweak and test different values is much better and this is built in right into the demo page so what I'm going to do is essentially what I want to try to do is recreate exactly this Chain by connecting a bunch of these circular bodies uh by constraints and here's the thing so looking I was looking at the matter.js documentation and it actually has something called composits so composits are composits module it says right here contains Factory methods for creating composite bodies so this is what you can use actually oh I just want to have a chain of things or I want to have a stack of things and there's even to composite for a car which is really just like a couple shapes and some Wheels maybe but um here's the thing I'm going to do this video and make this tutorial without using the builtin composits certainly if what I want is a chain using the builtin composite chain might make this easier but I want to build this in a flexible way that I could kind of make anything you know I could make a chain that has branches coming out of it so I want to have total flexibility to see what happens if I individually create all the particles and constraints one by one and attach them uh in a completely customizable way maybe this is a bad idea but I'm going to give it a try uh okay so what do I need to do so the first thing just to sort of work this out so okay this is my program currently this is where I am all it does all it has is a single ground body so it's the same ground body that I've had in previous videos I also made a change from the previous videos where that Circle object is now called particle but I haven't put any particle into the world uh I could however put one so I could say VAR P equals a new particle and I'm just going to make it at uh 200 comma 100 with a radius of 10 and then I could just say in draw p. show oh it's actually pushing particles into an array so what happened p is not defined oh yeah but oh well I should I'm using that array so let me say particles. push p and then uh let me actually uh iterate over that array with my non for each Loop uh and uh just say uh particles index i. show so let me just get one thing so there's my one particle now I want to add a second one what I want to do is I'm so I'm going make that P1 and I'm going to say P2 is uh two 200 uh 150 and I'm going to push both of those into the array so there's two of them now these have no relationship they bounce off of each other and move apart what I want to do is I want to use something in matter. and this ex same idea so it's called a constraint I didn't spell that right constraint like train is in there I think somewhere right uh con con strain um it's called that in matter. jazz but if I were in box 2D this would be called a joint if I were in toxic Libs it would be called a spring so there's lots of other terms for the same thing it's an entity that connects two bodies now it does not have any geometry so the idea is if there are two particles I want to be able to connect them with this thing called a constraint but one thing to note about the constraint is it doesn't have geometry so something will fall through it so there are other scenarios where what you might want to do is make like a bridge and but it's sort of like a a springy bridge where you could what you could do is make a bunch of rectangular bodies that abut each other and then you could actually put con con connect them with constraints but leave there's very little space between them um so that's another scenario that I could do in a coding challenge or something but here I just want to be able to attach these two bodies now this is always much more complex than you think because there's a lot of things I need to set I need to say body which which two bodies so body a and body B but also I say where is the constraint attached is it at its Center or you know I could I might want to do something like this where I kind of connect them from uh the edges let me finding the button finding the button finding the button so uh in uh I'm matter dos I'm pretty sure has a way of doing this and I think it's called point a and point B so there's the bodies and then the point is the not the location of the constraint but the offset of the constraint relative to maybe the center point of the body then I also need usually a property called like length which is often the rest length so you think about a spring you know if you pull on a spring it starts to but eventually it comes to a rest so what is it sort of resting point where there will be no Force um either contract or expanding it so excuse me the rest length there's also what else would there be uh maybe there's a kind of like strength per uh option like how is it very rigid is it like a rubber band that type of thing so all just to make this single thing that connects the two bodies I need to set a lot of parameters so let's go try to do that um over here okay um so what I want to do is now I want to try to make a constraint so uh let's go look constraint I have that page open matter. constraint module contains methods for creating and manipulating constraints grats are are used to specify fixed distance between two bodies blah BL all this sort of stuff stiffness Springs or elastic so I think this is all I want matter. constraint. create so I'm going to say um I'm going to just make a a variable called options then I want to say matter. constraint. create now what I what I could do here is say con I could add another uh Alias just constraint equals matter. constraint right I think that's what I want here and then now I can just say sorry constraint. create so VAR I'm thinking here VAR constraint equal I want to so now I'm just going to that word constraint the more you look at it the more it looks like it's spelled wrong I think it's right I want to create a constraint and with options so create options so I could certainly put the object with all the parameters right in here but I just want to have a separate object where I keep track of this so what are the options uh see what property see property section below for detailed information on what you can pass via the options object ah properties body a body B ID label these are probably things to keep try that I don't need length so these are things that I need so let's look so body a I want to connect P1 that's the first one oh but it's not P1 right my particle is my own object particles the body is the thing that matter cares about so p1's body to body B p2's body and then I also have point a which is that offset which I'm just going to make oh how do I set the offset the offset is an object maybe with an X and A Y so I'm going to just just have that offset be an X and A Y of zero it probably does that by default so actually let's just not put it in there but if I wanted to offset it differently I think I would put this in as an option uh and then uh length is probably good so let's do a length let's let's give that as like 50 pixels between them and then what was the last one stiffness uh one means the constraint is very stiff 0 2 means it acts like a soft spring so let's try that stiffness let's try like three four so now I assuming what I then have to do is do uh world. addor comma constraint so I've also got to tell the physics engine to put that constraint in the world so now I've created a constraint between those two bodies with a specific rest length and a stiffness I've created it and I've put it in the world so now let's run it oops constraint oh because it is spelled wrong the more you look at it the more it becomes spelled wrong because I spelled it wrong constraint yeah that's why it's spelled wrong uh so let's see look at that whoa so you can see that that constraint now let's let's uh let's offset it a little bit so we can maybe see more what's going on there we go so you can kind of get the feeling like they're constrained together now the thing is I can't see anything but I could draw a line between them so now in draw I could do something like line uh this is a terrible way to do it particles zero dot body. position oh this is like the worst thing I could ever possibly do right draw a line between this first ones X and Y whoops and the second ones X and Y and let's see what we get here no I've got a line so you can sort of see now it sort of feels more like it's working so this is the whole thing again I can't say this enough about physics engines there's the actual physics and then there's what you're drawing mostly you want those things to match but sometimes you maybe you want to not reveal what's connecting what or maybe you want to draw that in a different way so there's a lot of possibilities to how you think about this so now here's the thing what I actually want want to do is create a chain of these so there's a bunch of different ways we could think about approaching this but let's just build with what we have so first of all this idea of creating two separate particles and pushing them and then creating this constraint here I I I need a a kind of loop to do this and again I could use the the builtin matter.js composits but I'm going to I'm going to be stubborn here and do this in my own way so I'm going to say VAR let's think of it as going let's actually have it Go horizontally so let's start as an X at like 20 pixels let's have X go all the way to you know the width minus 20 which is like 380 and then I'm going to go uh I'm going to go every 20 pixels so every 20 pixels and I'm going to comment a lot of this stuff out I want to create a particle at X comma 100 so I want to put a whole row a row of particles across there we go now ignore the fact that that line is drawn there there's no I'm GNA I'm going to uh where where is that line drawn let's take that out comment that out and uh that's a lot that's a lot of stuff Let's uh let's let's move um every 40 pixels okay great so we can see here there's a whole bunch of things now we're not really it's it's there's not a lot of interplay here because they're all perfectly falling it's almost like there is a constraint but let's change this now so what do I want to do I want to also make a constraint and what I want is for uh I want to say VAR p and then I want to say VAR previous equals particles oh let's okay let's create let's create a variable before the loop called previous and it's going to be equal equal to n then uh after I create that particle and in theory create the constraint I'm going to say previous is equal to P so what I want to do is I want to connect each particles with the previous one that's all I want to do so every time I go through this Loop make a particle add it and connect it to the previous one however I don't want to do that for the first one right so I do want to say only do this if if previous exists so only make this constraint if previous exists so now if I were to do that we can see look at this it's kind of you can see oh they're definitely connected There's a constraint and they're all like moving along that's cool now so that's pretty good now here's the thing what if I were to allow uh what if I were to allow one of them to be uh static so I could say I could I could add an oh Statics a bad is a keyword in JavaScript so let me what's another word I could use for static fixed so I'm going to say is static fixed so I could uh pass in uh you know I could say here like if there is no previous make uh let's see uh I'm trying to think of like there's like I just wanted the first one there's this is kind of I'm doing this in there's probably there's a nicer way to do this I'm sure but let's just say um let's just say uh fixed equals false so I'm going to pass in none of them are fixed but if uh previous if not previous then uh fixed equals uh fixed equals true so I'm just going to make the first one if there's no previous then I want it to be fixed so if I do this oops I've got an error on on particle. JS line number five uh which is oh there needs to be a comma here because I added another property and there we go so you can see that first one is fixed so what I also want to do is now I'm just going to like kind of change where they are I'm going to uh start this one in um I'm going to start it more in the center and maybe I'll add more of them but uh make them smaller and do something like this so you can see whoa and maybe that rest length should actually be uh something more like uh 20 and there we go so now you can see there's what I was kind of looking to do I created this idea of a chain that are all connected and if I made it much longer like if I went all the way up to 600 to add even more right you're going to see it's going to kind of even uh it's going to collide with the ground uh and kind of stop there that's sort of weird oh you know what it went through the bottom because the B it's around the bottom because the bottom doesn't extend past the screen so anyway you this could be obviously fixed in a lot of ways but let's just leave it at this so this is what I was attempting to do now here's the thing there's a lot of improvements that I could make for this potentially number one is um you know I've kind of got a lot of code just in the weeds here in the main program so in the same way that I had this idea of encapsulating this idea of a matter.js particle a body into an object that keeps track of its own body and other things I could now make a chain object and a chain is an object that keeps track of an array of particles in those constraints also the way that I'm created these constraints I didn't you know I didn't the same way I wrapped a body into a particle I could wrap a constraint into a spring so I could write my own show function so I could draw lines between those things that might be a bit more interesting uh you know um and so you know because maybe what I actually want to do is is render this in a different way so there's a lot of possible ways but this hopefully gives you the basic idea now the thing that I want to add in the next video is how can I actually click on this and drag it around so uh and and you know the other thing that you might think about doing is what if I were to connect them from the left to the right and then make it a kind of bridge that Things fall in and kind of rest on so that would be another thing to me maybe try play with the spring Val so many things you could try here so hopefully this showed you how constraints work in matter.js to give you a basic idea of what you could do and in the next video I'm going to add a mouse constraint see you there okay um uh okay so um all right so how's this going it's almost 100 now I'm I've gotten far with this but I'm I didn't really get get time to do the challenges might have to come back later today okay so let's see I I should at least do the mouse constraint thing let's do that um let me see what improve I'm going to make some improvements to this uh or maybe I'll just leave it no let me make some improvements whoa um let me do them kind of quickly here so M constraint and what I'm going to do is do uh a matter Mouse so one thing I'm going to do I'm just going to do this like I'm going to whip This Together quickly and I'm going to go here there we go and I am going to uh I'm going to add a object called a chain and I'm going to make chain and I should probably some is hard to know what to do I was gonna like do the whole thing where I encapsulate the whole thing in a chain that's going to take too long let's just go and add the um forget about this uh forget about this chain thing uh let's make sure this is still working I'm I'm kind of running out of steam a little bit here so this works let's just change the parameters a little bit so it's easier to grab onto the stuff um I am going to uh let me let me just add some drawing here so let what I'm going to do is um make these a little bit bigger we go yeah I'm just going to do that okay um okay so I am going to in this next brief tutorial I'm going to add a mouse constraint so that you can grab and move things around and I will also um that's it yeah okay uh okay so let's do that um let me press the button on the camera I think it works if I just come back here and press it every once in a while it gives me another half an hour and it is 1 o'clock this might unfortunately be the last thing that I do in this uh morning which is no longer even close to the morning I think I could use some lunch and I've got a lot of other things to do today if I'm going to make it back to to make some more videos but um let me um let's get let's make this happen let's make this happen Okay uh all right okay one more possibly many more but at least right now in this moment one more matter.js video so this is an example that I made in the previous video which has this nice chain of these circles and that are connected with these constraints and what I really want to be able to do is I want to click on it oh I want to interact with it so one what there's a there matter.js has built into itself something called a mouse constraint and a mouse constraint is a constraint that's not connected between the um not connected between two bodies but connected between one body and the mouse now what's interesting about this is you know you might want to eventually apply this to something that's not actually the mouse but you could make an interactive system where a connect sensor is like doing hand tracking and you're able to move things around with your hand all that is possible but I'm going to show it to you with the mouse so let's see how uh let's see how this works um okay so what I need to do is I need to go back to the matter.js documentation and I want to look at Mouse constraint so Mouse go just as with everything we've learned right now uh everything's namespaced under matter. something so I want to work with the mouse constraint so I want to make sure I add uh I'm going to say uh Mouse Mouse constraint equals matter. Mouse constraint so now I have that and then I create a mouse constraint by calling the create function so I am going to make a variable called M constraint for Mouse constraint for short Global variable and at the end of setup I've added all my particles all of their constraints I'm going to say m constraint equals Mouse constraint. create now the mouse constraint gets created with attached to a particular engine right it could have multiple physics engines within the same sketch pretty rare that you want to do that but it's possible so I'm going to put in engine and then I'm going to what else options so once again I'm going to make a set of options for this mouse constraint now what are those options got to go back to this the following properties are specified for objects created by Mouse constraint. create so these are the options that I need a body what is it connected to oh do I really need that no no no no that's not I'm not setting that that's going to happen by working with the mouse Collision filter other some constraint Mouse I know I need this because I need to tell matter.js about the mouse so I'm actually backing up a second I need to go look under Mouse so before we even do mouse constraint what I actually need is to add a reference to Mouse equals matter. Mouse so now I also need to say VAR Mouse equals mouse. create now here's the complicated question create element element HTML element so this is really interesting matter.js is a physics Ed that's going to handle that a lot of the interaction stuff behind the scenes for you so I actually just want to say just just attach yourself to a given Dom element that's on the web page that's going to get mouse events so that you matter.js can get those Mouse events and so the thing that I want is my canvas so how do I get the actual HTML element associated with my P5 canvas well this is how uh the canvas is made with create canvas but there's no reason why I couldn't put that into a variable create canvas actually returns a reference to the P5 canvas object and inside that canvas object is a property called elt which is actually the HTML 5 canvas associated with the P5 canvas P5 canvas is just a wrapper for the htl 5 canvas with some extra functionality so I can say create a mouse that's attached to the P5 canvas and then oh uh okay well I need to do that first and then I would do this now this is a little bit confusing it's like the property is mouse but it's set to Mouse which is this variable so I might just call this like my C I might just just for the sake of clarity I might call that canvas Mouse so I can see those are the options maybe that's all I need what are the chances that's all I need uh cannot read property creative undefined sketch. JS line 54 undefined mouse. creat canvas. what's undefined maybe mouse mouse equals matter. Mouse no yeah what did I miss here I'm looking in the chat to see if somebody sees it before me uh console.log mouse let's make sure that's not undefined oh it is undefined so what did I do wrong up here oh this is capital M there we go case sensitivity you got us again there we go okay there we go now what's the chance I can just click on these and have something happen this isn't doing anything so there's first of all there's a weird sort of thing that I know can happen oh also I didn't add it to the world so this is easy to forget I need to say world do add World comma M constraint because I want do I need to add the mouse to the world I don't think so maybe I do but I definitely need to add the mouse constraint to the world so it's not doing anything if I click on them but there is an issue there is a very significant issue that could be at play here that I'm not so sure about but I'm going to let's fix this issue before I find the other issues one thing you might not be aware of is that a lot of computers that you might be using uh have a screen attached to them that is a high density display meaning like a Mac retina or a plenty of other examples of this but that there's actually four pixels per every kind of single Pixel I mean there's really the the pixels are the pixels but there's more pixels per what we kind of like think are the units of measure measurements for the window and in that case the the coordinates might be off and so I can actually uh I can actually fix this if I go to Mouse constraint Mouse and look for Pixel ratio okay hold on where is that or is that in the constraint I know there's a pixel let's Okay so let's look console.log canvas Mouse so it might not be in the documentation but thanks to leabu on Twitter who pointed this out to me I'm going to run this again and let's look at this let's ah pixel ratio so there is a pixel ratio property to that Mouse and so I need that I need to make sure that pixel ratio is the right number and it's going to by default be one but if I'm on a high density display where the pixels are doubled it needs to be two so what I can actually just do here is I can say canvas mouse. pixel ratio I could just alter it like this now here's the wonderful thing P5 actually has a function built into itself which will dynamically discover like what is the pixel ratio so I can actually just set it equal to that function pixel density which will return so this code will actually work whether it's on a high definition High Den sorry high density display or not I don't think that was the problem here but we're we're certainly going to need that oh it was the problem look at that my mouse so that was actually all there was so that's great to see so now my mouse constraints are working so I can click on these things and now I can't click on the fixed one you can see a lot of there's a lot of like weird stuff going on here so there's a couple things I want to fix about this but so far pretty good number one is this is really I really need to see what I'm doing it would really be helpful for me to at least draw something when I click so what I want to look at is the properties of the mouse constraint so I want to look at the properties of the mouse constraint because I'm going to console log Mouse constraint now so let's look at this look at this body null there is no body because I'm currently not there is the that that property of the object is going to be associated with whichever thing that I'm clicking on uh so what I want to do is say for example if M constraint. body this means if a body exists that means I'm currently I've clicked on one of them so I just want to do I want to get VAR position equals uh M constraint. body. position and uh I want to um just quickly highlight it so I'm going to say fill uh I'm make it green and I'm going to draw just an ellipse there I this is totally like a wackadoodle thing to do because it makes no sense um but just to sort of see that this is working so you can see that now whichever one that I've clicked on gets highlighted as green so this is a way to figure out what's being clicked on by looking at the M Mount M constraint and seeing if it actually has a body associated with it um but really what I want to do is uh look at look and mouse has pixel ratio to Mouse has a position there so what I actually want to do is I want to draw a line so I also want to look at varm equals m constraint. mouse. position which I actually know is M Mouse X and mouse y because P5 will give that to me but I might as well just get it from the constraint just to be sure and now what I want to say is I'm going to have a green uh outline color and I'm going to draw a line from pause X pause y to MX m.x m.y now we're going to have an issue here which you'll see in a second so but this should show me which one I'm connected to so I'm going to zoom in just so you can see this I'm going to click on one of them now look at that now it's working it's showing what I'm doing and how I'm pulling it but I'm G to let me go uh let me try to go up to the top here to show you a sort of issue I'm going to click on the edge there click really high up on it look it's pulling it from the center but it's actually not pulling it from the center so no matter what I'm drawing my line based on the center of that body but I didn't click on the center of that body so the constraint is not actually attached to the center so I need to find out that offset position so if I go back in here in addition to body under constraint point a I think is the offset or could be point B I don't really know I think a so I should just read the documentation but I think a is probably well let's find out so I want to go to body. constraint. point A or B is going to be that offset position so I'm going to say VAR offset equals m constraint. body Dot constraint no no no m constraint. constraint. point a let's try that and so now I want to draw the line from pause X Plus offset dox and pause y plus offset doy okay let's see if this fixes this for us so I'm going to click here oh something crazy has happened so that's clearly not right I don't know what that is so maybe that's doing something point a is associated with the Mouse so let's try point B maybe that was the correct one and I'm sure if I read the documentation it explains it but I'm just doing this through trial and error to learn how it works yeah there we go so you can see I'm now actually attached to the correct part of it based on that offset and I can pull it around now one thing that I'm not showing you here there's a there's an issue with using circles in with a physics engine because there's a lot of angular velocity and Ro um there's angular velocity to what these things are doing and I can't see it and it's sort of weird to suddenly see that line kind of rotate around the thing so one thing just in terms of drawing if I used an image Sprite to draw there that's going to have like you know eyes on it and a nose or something I'd see this more easily but just for sort of debugging one thing I want to add here is just draw a line from the center to this to this R so this and uh it's already 255 so so if I do this we can see that line there so this is going to give me oh more of a sense of yeah you can see these things are kind of like spinning and what they're doing um as they're interacting now one thing is they they do they they have Collision geometry so you could make the argument here that I actually want to ignore their Collision AR that's another thing I could go there are actually Collision filters built into matter.js where I can tell certain things to collide with each other and other things not to collide with each other and you know you you could make a case maybe where I um I want these to be able to pass through each other in terms of how the behavior of this is working but anyway you can at least see here now how I'm able to use the mouse to kind of uh toss stuff around and interact with the elements in the canvas which is what I wanted to demonstrate in this particular video so thank you for watching uh and um this this matter.js this I'm kind of not finished because you know you might be in the future and you might see they like oh my goodness there's five more matter.js tutorials after this but right now the time at the time that I'm recording it right now this is the last one um there's plenty more aspects of matter.js but I will do some coding challenges to kind of make uh certain little mini projects with matter.js one of which I want to do is maybe like a Plinko machine so you might see that up at some point soon but write in the comments if you have other matter Dutch ask questions and maybe I'll make some future video followups about that okay so thank you very much for watching and I'll see you in another video goodbye okay it is 110 p.m. and here are the things that I didn't get to today I didn't get to doing the Plinko coding challenge I didn't get to looking at texturing geometry in processing in 3D in Java so that's um something I wanted to do with a flag coding challenge so I'm going to attempt to come back probably around 5 or 6 pm and do those coding challenges to try to like finish that stuff off for today uh but I think it's smarter for me to take a well first of all I don't have the time right now to keep going but I can't see how long this has been going because it stopped and started so many times but uh um I will I I've been I've been here for what did I start around 10 11 so a little over two hours so I think I'm running out of steam uh and so ah but I also did not do the studio walkthrough so it's no this is what happens I really want to do that studio walkthrough but every time I have a free minute I'm like a but there's more tutorials I could do so we'll see maybe I can kind of do the studio walkthrough just in like 10 or 15 15 minutes from my phone it's like a mobile live stream quickly before I do those coding challenges um now one other thing I want to mention which is really too bad that I'm doing this at the end because I really should have done it at the beginning but I I did uh I did pick this tshirt which is from Google summer of code 2011 I'm not a I have no um I don't work for Google I do I do have I am participating in Google summer of code so I I do have some affiliation but this is not I'm not speaking for Google or Google sum of code here I'm speaking for myself but um I'm going to Google Google summer of code if you are a student this is a program that is now open in taking student applications um uh I want to go summer of code summer of Co code.google.com so this program works I I could there's a lot there's a lot to this program and I encourage you to read the website click on how it works go over all the FAQs see if you're eligible if you're not a student you might be you could be a mentor potentially um but so I'm encouraging you to apply I am especially encouraging you to apply if you are um uh a member of an underrepresented group because um you know one thing that these programs could really use is a diversity of voices so please if I can help you with your application um and encourage you to apply I would love to do that you can kind of make maybe tweet me at shiftman would be the best way so I'm going to click here on organizations and you can see there's a lot of opensource organizations that are involved in Google sum of code the one of the reasons why I'm bringing this up I would I would love to I would bring this up anyway because this is a great uh uh uh you know in case I didn't mention it if you are accepted into Google summer of code you work fulltime over the summer on an open source project and are paid a stipend by Google which I believe is $5,000 uh don't quote me on that you have to read the FAQ but I believe that's the fee and you can do this from anywhere in the world you do not have to be uh um you can do it from anywhere um maybe there are some countries I don't know if there um but any read the FAQ it's not it's not United States uh specific um okay so I'm I'm going down I'm going down I want to go down and find under P processing but it's not under P you've got to keep going and actually go under T to find the processing foundation so I'm going to click on that and I'm going to read you the processing foundation's mission is to promote software literacy and visual literacy and to make these fields accessible to diverse communities so I'm going to click learn more and now there's even more you could read uh our goal is to empower people of all interest and backgrounds to learn how to program and make creative work with code especially those who may not otherwise have access to these tools and resources uh we do this by developing uh processing which is a Java based platform p5js which is a JavaScript based platform and processing. py which is actually a python mode part of the processing development environment so I encourage you to read more about this here uh chat where does that go to uh that's going to take you to the Forum so if you have an idea uh this is the place where you should post it to get feedback I check this about once a day and um this is one I haven't replied to yet this is one I haven't replied to yet either but you can see there's a couple ideas here uh and again you can apply to other organizations uh and then contact email I don't know where that goes to Twitter I don't know where that goes to um so uh I encourage you to think about applying um uh I assume oh view ideas list this is another place this is an important place to to go if you go click on this view ideas list this is a uh wiki page on the processing GitHub that goes through it you know it has some information about Google summer of code oh I need to update this because it says we are in the process of applying to Google summer of code so I need to update this Wiki to have the to say we're accepted and have links to it um and then um you can see some past summers that we've participated in with projects and then here you can read through and look at different things that we're thinking about but I would do would like to say you don't have to have an idea that's on this list you could have an idea of how processing a library that you've been thinking about could be good for processing or P5 or processing dipy a feature that you think those environments could really use so you can come up with really with your own um own proposal uh and then the other thing I'll mention I have mentioned this before but we are also participating in something called rails girls summer of code so this is another and this you do not have to be a student to apply to so this you can also look into as another place to apply to work on processing and other open source projects over the summer so um I'm trying to think of what else to say uh if you are accepted you work I think it's supposed to be fulltime over the summer I don't know what that period is exactly and then you are also assigned to Mentor uh somebody who already works on processing or a related uh tool who then uh works with you over the summer to realize the goals of your project and evaluates your work um um but all the administration and the application process all of that is handled through Google so if you have questions about eligibility and what's a valid project versus not a valid project um in terms of um strict rules those are things you need to look at through Google okay um so I would like to take two or three minutes right now uh play my Goodbye music to answer any questions in particular if you have a question about Google summer of code um um and or anything I looked at today I'm going to I'm try keeping an eye on the YouTube chat and the slack chat the slack channel is for patrons if you're interested in supporting the work that I do uh you can sign up at the coding tr.com it's a monthly subscription fee to participate in the uh slack Channel where we discuss topic ideas and answer questions but everyone is always available uh to watch this stuff for free or you know whatever through whatever magical YouTube advertising thing that happens as well um room tour boy you guys really want that room tour okay I'm going to prioritize that uh I'm sorry if you asked me a a a message a direct message I'm not going to see those right now because I have to click around I just have a view of the live Channel right now um sorry lost J I will look at it and ask you after answer afterwards um so uh Daran asks I have lack of knowledge can I participate in Google summer of code so this is a very good question you you do not need to be an expert I encourage you to apply to Google summer of code especially even as a beginner one of the things we like to do with the processing Foundation is bring in new people to open source and you can't do that by only getting experts who have been working in whatever for many many years so to have new voices to have new energy beginners need to feel that they're welcome so I think it really then though if you're a beginner it's really about crafting a proposal around something that's reasonable so maybe you don't want to apply to revamp like a very complex part of the processing IDE but making a library that adds a sort of like mathematical algorithm that you know something about but maybe you're not as experienced of a programmer a mentor could help you realize that so I think it's really about crafting The Proposal with your skill set um I'm looking for more questions I actually don't see any more questions I'm seeing somebody say to that the question was I only see the last two comments is there a way to use keyboard with matter uh that um yes you absolutely can use the keyboard with matter but you're probably going to have to uh sort of an it depends type of thing because you can get the keyboard events are going to come through p5js and then you're going to call various functions associated with the physics Library based on those keys that are implemented uh processing yes where should I go if I want to Port processing to another language is it open source it's absolutely open source everything about processing is at github.com SL processing this is our processing Foundation uh GitHub page there's a repository for P5 P5 website the web editor processing Android pause for a second oh it ended processing do documentation sound so you can see there's a lot of repositories it's all open source uh um uh uh Michelle Michael Michelle in the chat asks you should add physics to processing uh so physics is not built into processing however there are many libraries are processing libraries that you can do uh with physics and I actually the reason why I looked at matter.js today is because I already have a whole set of tutorials about working with box 2D and toxic Libs which reminds me I should do an updated toxic Libs tutorial because you need to get the library in a slightly different way probably than I presented somebody help me remember that maybe I can just do that in a couple minutes later today um okay so thank you everybody uh it is 120 p.m. I believe this has been a 2 and a half hour live stream though it's hard to say because it kept crashing uh thank thank you again for your support for watching for your kind words your feedback for your critical uh uh for your constructive feedback about things that I could do better I'm always happy to hear uh share with me things that you've made um and do not forget to make a selfavoiding random walk in the future so I'm I would like to uh see C Manny I think uh is working on some ideas around improving my topics suggestion system where you know I can get a a sense of what the audience is really interested in through more upo voting so if you really want me to do that selfavoiding walk I'm absolutely happy to do it um go find the GitHub issue on the rainbow topics repo and put a thumbs up on it and that will move it to the top right now okay um see you guys and I'll be back this evening I'm excited for that uh I I'll definitely be back even if all I do is the room tour I'll be back and at some point I will do those other things on my list it's just a matter of when I get to it okay um I got I got I got to turn this off now how do I do that I just pressed a button over here it's always this weird thing uh it's always this weird thing to turn it off something you know what this YouTube TV thing I'm kind of interested in I know if you guys heard about this is this G to help what I'm doing here and make it available in a different way for other people do I need to be more professional in my production values uh okay stay tuned I'm hopefully going to launch the coding train merchandise store uh next week and maybe if you have some ideas for some like little contests or something I could run to like give away some stuff I would love to give away some stuff as well so if you have any ideas about that send me your ideas on Twitter okay uh um okay uh and I'm going okay one question one last question because sandep posted it twice although I shouldn't reward the posting the question over and over again uh in your Mosaic challenge how to do with RGB values at least a hint h boy and I read that question so I have a coding challenge where I make a photo Mosaic just based on grayscale values with RGB values I might do something of looking at what one way I could do it is look at the average value the average color of a particular small image tile and then maybe look at the distance between that color and the um so instead of having specific images for certain grayscale values I could just have a pixel and try to find the image that's color most closely matches it but that's only a small little inkling of a way of doing this there's probably a lot of more sophisticated ways of really thinking about the um not just the average color of your tile but like kind of where the color is and that sort of thing but okay so I'm going to go and I will um so if uh um Co um wwtf blah blah blah blah blah asks what is the time commitment for Google summer of code read their FAQ on the Google summer of code uh website it goes through that in detail my sense is that they would like it to be kind of like a fulltime activity that doesn't mean that you probably do the Google summer of code work I think in my eyes in like off hours but really you should read their FAQ there's very strict and specific rules about that I really shouldn't answer these questions because I'm not a representative of Google um and so you should there's actually a discussion gr list in a place where you can ask those questions about Google in terms of what those eligibility requirements are uh C Manny asked when is the World Tour I don't know I'm I would be love to go on a world tour I don't know what that means coding train live I there is a possibility that a coding train live might happen in a CT next fall because there's a thing that might happen that I could do something from with like a live I would love to do something with like a live studio audience I know that um there are people who do this there's like standup maths which is uh um which is something I think in the UK about like math stuff they do this I don't know if I'd be very good at that but anyway uh someday and Seb Seb Lee delile is an artist also in the UK who does some kind of like live coding stuff in live like in person um and actually I I do have access now with my subscribers to YouTube Studios which is there's one in New York there's one in London there's one in California there's a bunch and they have I think a theater there so maybe I should think about trying to do that so I could do a coding train if someone wants to help me figure this out or knows about YouTube Studios somebody works at YouTube can get in touch with me uh I would love yeah so I I might be in London over the summer in which case I would maybe try to do something there um U people are asking if that I don't know if that's really happening but so I would love to do I'm open to ideas love to do something like that I think that would be a lot of fun especially love to do it with like guests have other people come like kind of an evening different people doing coding stuff that's not just me in particular so let's think about that coding train Community choo choo we'll all take the train you know there's this thing by the way called Indie train game Jam train Jam train Jam hashtag let's look twitter.com I'm GNA go to uh hash train Jam I think look at this it's already 130 I'm still here uh yeah there's like a train Jam let's look at the which is which is like people doing making games on trains and I feel like what a wonderful idea I don't know that's all I have to say about the camera went off that means goodbye I'm out mic drop see you tomorrow oh no tonight later whatever it might be tomorrow your time