hello again welcome back we're in part 4 of this video series we're going to talk about particle systems here's the good news we're not really going to do anything new exactly I mean there of course there could be something new otherwise what would the point of this particular video but in this section of videos what I really want to focus on is just is is what we're really going to focus on is hey we learned how to make this thing move around the screen now we want to make lots of things move around the screen and wait and you know you might be saying to yourself and this is accurate that we already know how to do this we have a mover object we could make an array of movers we could have an array of a hundred movers and loop through those movers and have them all on the screen and while this is true um what with this section of videos we want to look at a I mean I kind of I don't know why I'm not just coming out and saying it I want to look at an ArrayList so what is perhaps a more effective way of managing collections of many objects sometimes we have nuns in this we have many as soon as we need to add subtract delete we need to manage systems what if we have a system of objects what if we have multiple systems of objects this is the kind of thing we're going to need in the future I don't mean like when the robots take over I just mean in the next set of videos later we need to we're going to look at flocking systems and evolutionary systems and many examples were you know crowds and paths fall all these examples where there are lots of things moving around the screen in groups subgroups inflicting forces on each other talking to each other interacting with each other we need a we needed some organizational principles by which to live we're looking to just in this section not create new functionality but just look at how do we organize our code in order to make examples of systems of elements and that's what a particle system is you know particle systems you know you people use them for certain things you see oh this fire effect in this explosion and smoke and all these kind of computer graphics effects are modeled with particle systems but this here right now in this place that we are somewhere in the video making land what we're really not we're not being so specific about particle systems for us a particle system is any time we have a system of many objects so this is what we want to look at so before we get to that though let's let's go back and sort of think about the history of particle systems you may or may not be aware I don't know if this is necessary but I'm going to try it you know particle systems were first will this play so not rehearse through this this is an experiment particles the term particle system was first coined for the movie the Wrath of Khan and there's the scene which is playing out right behind me the Genesis effect right here is the first instance of a computer graphics particle system right I believe this planet is being terraformed right now so what's going on here there are lots and lots of little dots emanating from this sphere all together with these behaviors and we're getting this kind of fire effect that's the first example of a particle system what's interesting about this kind of stuff is if you go to the nature of code website and look at further readings down here there's some links to papers you can go back and read the original paper particle systems a technique for modeling a class of fuzzy objects which I think this is from the early 80s and what's kind of amazing to go back and read these papers as you'll see it's all the same stuff we've been talking about okay we need to model the motion of a singular dot and we're going to use position and velocity acceleration and apply forces and then we're going to make lots of those dots and we know we'll blend them and add colors and all this kind of stuff but this is really the kind of history of what we've been what we're looking at doing here you can find in these papers and another great example of that is a work called particle dreams by Carl sins which I encourage you to go and watch all right now this is the title here but you can see I'm talking over this thing which is just playing it I guess I wanted to you can see that the kind of myriad of effects here here is a particle system of snow but you can see these are just dots responding to forces in a moment we look at this head this is a particle system lots of dots they have positioned now they're responding to gravity so these this and this is another great you can go take a look at the paper for this for that particular video as well and again you're going to see the same thing okay how do we model snow well we need an individual object that it's positioned last acceleration we're going to apply forces to it all this stuff in particle systems is what we've been looking at all along so for us what we first need to do to model a particle system is create that class to describe the individual particle class particle this is what we need if this is where I'm now making the point that we're not doing anything new at all in fact we've already written this class multiple times over and over again in chapters 1 2 & 3 only we called it a mover and now we're just renaming it to a particle what does it have it has location it has velocity it has acceleration it has all of those things has a dis update method it has a display function all the stuff we've already done but but now let's I need to bring up another point I didn't realize that I was gonna bring up this point before I started this video but I think I'm okay let's take a look at this example here which is example 4.3 a simple particle system this is where we're kind of looking to get to pretty much by the end of the second or third video in this part for section so the thing about this is we can look at this and say okay clearly there's many particle objects on the screen you might ask the question how many know you can guesstimate at any one time there's a certain number but if you think about this looking at this how would you do this with the standard array it's not a fixed number what we're doing here is creating this illusion of there being like this hose that's just pouring out particles and there's an infinite stream of particles this is what we're going to add to our mover class which is now our particle class this ability to kind of fade out and end right so we can have new particles new particles new particles new particles all particles die new particles come so before we move on to the next video which is really going to start looking at aha how do we organize all these particle objects into an ArrayList let's just add one piece of functionality to our what now is our particle class so let's look at our particle class which is over here in this particular example and we can see there it is a particle goodbye every time I run this would be nice to like a particle appears and leaves goodbye so you can see here we have a particle class location velocity acceleration we have an update method acceleration goes in velocity of velocity of the location we draw a display method we draw the particle this is everything we've done all all the time always in any previous example that you've seen in fact we've taken a step backwards and we don't even have the apply force function in this particle class it's simpler than that of course we're gonna add that back in later so one of the things I want to add to this is just this idea of a life span how could we have this particle have a moment where it's finished either it leaves the screen is one option that's what we don't need it anymore but or we could have it fade away how could we have something fade away this is a incredibly simple thing for us to do all we need to do is add a single variable to this particle class I can call it lifespan which has an initial value of say 255 and then what would I do and when the particle is updated velocity gets updated location gets updated let's also update its lifespan and we're in this case we're going to consider the lifespan counting down so we're born with a value of 255 and every frame that value goes down and down and down we can hold turn holder and holder eventually gets to 0 and we're done so every frame we're going to say hey lifespan minus equal and I'm going to say 2 so we hope we don't live very long now if I run this what's the difference nothing I mean that secret variable is in there counting down but we haven't used it for anything so we need to use it for two things the first thing we're going to use it for is we can use we can tie that value to the objects alpha okay so if we can add lifespan to the stroke and life span to the fill right as the second argument of stroke and the second argument of fill with a grayscale color is alpha so now if we run it again we can see it fades away and disappears this is excellent the second thing we need to do is determine when is that particle finished we need the particle itself to be able to know when it's no longer needed when is it no longer needed when we can't see it anymore when can we not see it anymore when that lifespan value has gone at once alpha value is zero what's the alpha value of that lifespan variable so we could actually write a method which says if lifespan is less than or equal to zero return true otherwise return false look at this this is pretty interesting here we have now added a function to this particle called is dead it's a boolean method meaning it returns true or false when it's done it returns true when we still need it it returns false when is it done when the lifespan value has become less than or equal to zero now once we have this method what we can do in the main draw loop is we can ask if the particle is done what should we do what should we do to that particle well there's lots of things we could do to it we could change its color we could print something out we could I don't know what we should do with it actually but let's just do something really kind of ridiculous I'm going to draw a red background on the screen this is just to demonstrate that we now are able to determine that the particle is fading away when it's done the background is now red so this is really key because when we go back to that previous sketch reason right when we go back to this particular example we are going to need to know when those particles are finished so we can remove them from the system we don't want this we have an infinite stream of particles we don't want to have an infinitely large list of particles we want to add particles when at moments when we want to add them and delete them on moments we don't need them anymore okay so we're kind of churning along here we haven't gotten very far this is kind of a little introductory video to the idea of a particle system the next video we're going to dive deep into the details of how to actually use an ArrayList in processing so to get yourself ready for that video find yourself an example of some object you've made moving around the screen a single object and and I don't know what I'm doing here like pressing buttons while I'm trying to talk find yourself that example of your single object moving around the screen and rename the class to particle and get ready to sort of take the leap find something what you want to duplicate many many times if you have been if you've been really working really hard on the motion of one individual object and you've been waiting waiting waiting for the time where you can make lots of them this is that moment so find that class bring it over to wherever you are and in the next video we're going to look at adding multiple instances of that object to an ArrayList okay so it's kind of a disaster but I'm going to press the button now goodbye