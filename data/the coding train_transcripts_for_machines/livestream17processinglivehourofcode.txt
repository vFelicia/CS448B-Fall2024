good morning welcome to the hour of code my name is Dan schiffman I'm broadcasting live from ITP which is a twoyear Masters program at Tish School of the Arts at New York University uh and I'm here to give you or anybody who's watching this will get archived so people can watch you later a 1hour introduction to programming uh the context of that will be something called the processing programming environment I just called processing and uh I'm going to talk I'm going to do like a couple minutes just to talk about the processing foundation and overall goals I got to uh turn off my um I have a preview of my stream going over here has some audio so first of all uh if you're hearing me and you can see what's behind me and if you can kind of see this uh whiteboard over here ah uh let me know that the audio and the images are good um but uh rather than waste a lot of time um I'm just going to Dive Right In so I've got my eye over here on a chat uh I see um I see that there are some people saying things in the chat which is great so people are watching and I'm going to get started so I I think actually the stream a minute ago uh it started late so I'm just going to reintroduce myself again somebody will edit this to start right from this point at some point if this ever gets archived actually you know what I'm going to hit the record button so this will I'll have a copy of this as well so I'm going to pretend now pretend I'm starting over good morning and welcome my name is Dan schiffman I am here broadcasting live from ITP two years ma twoyear Masters program at Tish School of the Arts which is part of New York University I'm in New York City live in New York City on Thursday morning I want to say Saturday night and like I'm any anywhere near as interested I don't know anyway that show whatever um put that aside uh welcome what am I here to do I'm here to do a 1H hour it is 1002 a.m. I'm here to do a 1H hour introduction to programming for the absolute complete and total beginner uh I'm going to take about five minutes to talk about what this thing called processing is and the processing foundation and I'm give you a little bit of a take on the hour of code that might be a little different than I hope than some things you might be reading or hearing about and then we're just going to Dive Right In I'm going to uh put processing up here I'm going to show you how to type some code make some stuff I've got a whiteboard over here so I can draw uh some diagrams if we need to I'll take little breaks I'll answer questions in the chat that's my plan so I'm just going to peek um uh yes so some people are asking if they can Skype in I didn't actually figure that out I'm going to do this again this afternoon by the way I'm going to do this again this afternoon at 130 p.m. with this other environment called p5js um so this morning is going to be processing which is the Java programming language and this afternoon at 130 it's going to be p5js which is the JavaScript programming language okay so I don't see I I'm looking in the chat I see it going there and I'm just going to get started so it is about 1003 I want to give myself just 5 to 10 minutes to give you a brief introduction so something that I'm a part of is called the processing Foundation it's a nonforprofit organization uh about an uh I had a mission statement somewhere in here but it's later but the idea of processing is to make programming more you know in a very simp listic way just briefly to describe is to make programming more accessible to a wider audience and there are three tools that we are currently uh developing uh one is called processing with this P here which has been in development since 2001 this is what I'm going to use today in the tutorial another tool which is new um um which is called p5js which is built on top of JavaScript and there's also processing. py which is a mode for this processing which allows you to type python code but I can't believe I'm starting this by talking about different programming languages here's what I really want to talk about um so I'm going to just borrow here from Mitch Resnik and David seagull somebody I'm sure could Google this and and post a link to this blog a medium Post in the chat um who posted a recent article called a different approach to coding uh Mitch Resnik and his research group at the MIT media lab are the creators of a programming environment called scratch which you know I I would say it's is is something for kids to get excited about programming and creation and creativity of course I use it as an adult and I find it to be a wonderful thing so it's not just for kids and I think what's important about what in this medium post is thinking about I want to talk today I want to spend this hour about expressing yourself with code creativity through code so the hour of code this is the code.org website is a wonderful thing many new people are discovering programming and thinking about code and may uh maybe getting excited about learning something new uh uh putting getting more people is especially a more diverse uh set of people of different genders and ethnicities and countries interested in perhaps majoring in computer science as a field of study and all of that is wonderful but one thing about most of these tutorials that you'll find on code.org is most of them are puzzles with a correct answer and if you've ever made a piece of art you know art is really about asking questions is one way of thinking about art so what does it mean to not have a correct answer for your code what's lost in all of these tutorials which are about solving a puzzle or winning a game type speak what if you could use programming for creativity and I I'll give you I'm going to quote from this medium post rather than I you know I wish I had written this myself but it really spoke to me when I read it for us coding is not a set of technical skills but a new type of literacy and personal expression valuable for everyone much like learning to write um this is this quote is talking about how this many of these coding activities the students are asked to program the movements of a virtual character navigating through a set of obstacles toward a goal so so this is about that puzzle Sol solving but in some ways this is like offering a writing class that teaches only grammar and punctuation without providing students a chance to write their own stories so this is what I want to expose you to today if you can learn the basics of code what ideas what can you express can you communicate through code um and so I pulled this really briefly this morning from uh Wikipedia I you know I think it's the other thing that I think is relevant here in this discussion there's a lot of energy around computer comp Science Education computer science in high schools Compu uh there's a in New York City we've got CS for all uh computer science for everyone this is a great idea in many ways I think let's have more people learn to code and more people learn about programming and what it can mean but this term computer science a computer scientist specialized in the theory of computation and the design of computational systems this is really important we need people to spend their lives deep in studying computer science and build compilers and systems and all computers and all sorts of things like that but what if you are a dancer a biologist a fashion designer an economist a journalist a musician a painter a poet a baseball player a game designer a teacher or a chef what if you don't want to be a computer scientist but code is important you know you might want to have a website you might want to uh visualize your own uh running data as you're training for a marathon there are so it's just like you are expected to learn to write essays but you don't necessarily and and you and you need to write if you're a dancer biology fashion designer Etc Etc what does this mean to apply code to the thing that you're interested in to the ideas that you want to express and I think that uh processing is uh an environment which is a great place to get started in thinking this way I'm going to look on the chat uh and people are listening to me uh and there's a bunch of people watching which is really exciting so I I'm I'm having a little I've have done this before with this many uh people so I'm trying to keep an eye on the chat but I'm going to keep going but I want to get to the code stuff first so the first thing I just want to mention is none of the these ideas are are really that new um this idea of art through code visual art through code expressing yourself through code you know I learned when I was a kid using the logo programming language was a way of issuing commands to a turtle that walks around the screen to draw pictures um there's something I never actually used this myself but there's something called hypercard which I know a lot of people discovered creativity through computers through hypercard which is part of the one of some of the original Mac operating systems um there is something called design by numbers which is really historically I think the uh the thing that came right before processing so designed by numbers was a programming environment for I would Loosely say for visual designers or graphic designers created by John maida uh who was a professor at the MIT media lab uh and was in fact the professor of Casey Reese and Ben fry who are the original creators of processing and they started this processing project in 2001 studying with John maida and looking at design by numbers and thinking about taking that even further so so and then of course there's scratch which I think is you know also developed at the MIT media lab uh with Mitch resnick's lifelong kindergarten Group which is a wonderful environment in particular for younger kids in the sense that you don't have to uh necessarily type your code but you get to put these puzzle pieces together um to implement programming like Concepts so okay so this leads me now I got to get started here it's 1010 we got to do some programming um um we got to really get into some programming but this leads me to the processing foundation so everything that I've been talking about in these last 10 minutes uh is what the processing Foundation exists for and I encourage you to go to processing foundation.org I'll put a link in the description of this video when it gets archived look at some of our initiatives look at some of our projects we've got this new Fellowship we're sponsoring as particular if you're an educator and you work with uh a a a group of of of kids or adults who don't necessarily have easy access to code and learning these tools we're looking to fun projects that bring programming and bring processing to a wider audience there's pigeons right outside my window hi pigeons I maybe I'll close the window it's just very very hot in here and I might have to open it again later maybe the audio is now better um so take a look at processing this is the processing foundation's Mission I want to just get started in in in in looking at code now but the one last thing I'll mention is um I think that if you're I'm going to move now to the processing website uh which I've got uh here uh if you're interested and I I would would love to spend the next 45 minutes just showing you exciting and unique and amazing projects made with processing and other creative uh tools that involve programming but I might encourage you just to go to the processing website to look at the exhibition uh and sort of if you're trying to think of like well I get what you're talking about but I don't like what are does this really happen or people really making things um there's a there's a nice set of projects you can take a look at there so um so let me make a note over here for you guys uh this is the URL where you want to go right now if you want to follow along and start typing code with me so first of all can everybody read that somebody say in the chat if you can read that I've got by the way Periscope going here which I'm just going to shut off um and I can erase this smiley face so this is where you want to go right now processing.org uh and this is the program environment I'm going to use we've got about 45 minutes to 50 minutes I I'll stay here all day but I think it's good to sort of contain this into an hour obviously I have um not obviously but uh if you if you're interested in more after today I have lots more video tutorials and at the end maybe what I'll try to do is point you towards some resources some books and other things you might look into if you want to learn more okay so uh coming back over here what you want to be on now is the processing website so if you go to just the processing website you're going to be he this like I've got some sort of inception thing going on here but there is a video of me talking about some of the new features of processing 3 this video won't be so relevant to you if everything here is totally new this video is really for people whove been already using processing and want to know what's new in processing 3 um but where you want to go is this link download download that's where you want to go next I'm going to go to download now one thing you'll notice here is it's asking you for a donation this is your first day perhaps learning to program all this is new to you I highly encourage you right now to click no donation um you don't need to take part of this like short hour and and worry about a credit card or something but I will mention again that these environments they take a lot of time and a lot of energy and mostly most all of the people who are building these things are volunteers essentially so we started this nonforprofit Foundation to try to fund fellowships and do more and continue the development so if you're interested in funding us uh wonderful okay so I'm going to now click download and you're going to see here now it's up to you pick your operating system are you on windows are you on Linux are you on Mac I am on a Mac right now so I'm going to show you this tutorial using a Mac um and so if I were to download it uh we can see that it is downloading here and it's got 8 seconds left now I'm going to be like the um a cooking show where I already had the thing in the oven cooking beforehand so assuming I've downloaded it and extracted it what I'm actually going to get is an application and the application is going to look like this you can see here this is the processing application it's got the three there this is processing three the actual version you're using right now if you downloaded that was 3.0.1 as things get fixed and things changes there'll be maybe an 0.2 and an 0.3 and maybe someday there'll be a processing four who knows um that's what's going on okay um so I see that there are people in the chat saying a few things you've got it you're able to watch it on your phone okay um it is a big file uh it's a large application it's also uh on it it's uh it comes with it has Java embedded in it uh because it's using the Java programming language okay so now what I'm going to do is launch processing now I just realized um you're going to I just realized right now that um hold on let me double click it this is like of course what happens when you're um oh it's already open ah so I'm going it was already open That's why nothing was happening so what what you're going to get now you're going to get a slightly different oh no I think you might get this welcome message it depends you're going to get a different welcome message whether or not you had processing installed previously on your machine Etc you don't really need to worry about any of this right now just click this get started button and you're going to have this window on your computer look at this so this is processing and guess what this is all you need to start coding to start learning about programming to start writing your first program this is one of the reasons why I just love processing because it's a single thing you can download it's a place where you can write your code it's a place where you can run your code it's a place where you can import extra code libraries it's all there all in this one package obviously not obviously but as you go further down your journey and life of programming you might discover oh my God there's all these different tools I have to learn I have to piece this together with this thing and connect it with this thing and then I have to download this and install this other thing so that all of that will come the nice thing about getting started here is this is all you need um yes uh could you wait until the down so people are asking me to wait until it gets downloaded so I'm going to um I'm going to sort of like I can to some extent yes I can wait and fact I'm going to I have I'm going to have a little bit of uh my tea over here you know I don't I have a sense of what the size of the audience is right now watching um uh it says 34 people which is really kind of amazing actually and I know some of you are large groups may be watching in a classroom which is really exciting to me um uh so but so I'm going to try to pause a little bit we're on an older version but that's fine to follow yes if you are using an older version of processing I don't think you need to upgrade right now I do highly recommend though that after this is over that you go and update to the newest versions there's just so many nice improvements but what I'm going to do today is really just using some of the basic core ideas of processing and none of that has changed really since 2001 just the interface the features a lot of the libraries a lot of that has really changed okay I hear from uh I think uh one of our viewers in India in Mumbai I think I can't remember I was like trying to see where people are from that they they finished downloading so let's get going so first of all here's an exciting moment you are now going to run your first program all you need to do is go click this run button run and there you go you have executed and are running your first program so what processing always does now you haven't written any code yet this is what's kind of amazing so behind the scenes a essentially an empty program has executed with no content no instructions that you've written but it has opened a window on your computer so what processing does uh is it opens a window in your computer and what you are going to learn what I'm going to show you today is how to write code how to write instructions to draw into that window so here is how every single instruction will look I'm going to say this is the command that you're going to issue followed by a parentheses follow uh closed with another parentheses and ended with a semic so this is the first thing that I want you guys to learn today is that programming is essentially the act of writing instructions for the computer to follow the difference is I could say everybody stand up you know everybody put your hand on your head everybody you know Pat your head and rub your tummy am I actually doing that or is that maybe it's the other way is harder who knows so this is me issuing constructions but I could have said please stand up or upstand even though that's weird and incorrect grammar you probably would have gotten in any way with programming you must must must follow the exact syntax I will show you what happens if you have an error in your syntax and this is one of the hardest things to get started with right when you're first learning is you a missing semicolon a missing parenthesis a missing comma these kind of things can be a problem and nothing will work so the thing that goes inside of here are AR this is not a good pen I'm going to let me try this one are arguments they're called arguments so if this is the command and these are the arguments that are going to be inside the parentheses arguments are things that modify the command so if my command to you is walk I could say the arguments might be walk three steps or walk 10 steps a three or a 10 that's a thing that modifies the command walk so for example and those are always separated by commas so here's a command that will do first size parentheses some number followed by a comma followed by some other number followed by the end parentheses followed by a semicolon okay and the question is what goes in these two spots think about that try I'm going to type it with you uh you can try it yourself put any numbers you want in there I'm going to be really conservative and I'm just going to say 640 by 360 I've done this before so uh I kind of not not that not that there is there's no correct answer here but now if I hit run something magical has happened this window is no longer that little tiny window this window is wider and taller now let's think about what those numbers could possibly mean 640 is describing the width of the window 360 is describing the height of the window what's the unit of measurement you might be asking yourself it's you know is that 640 in or centimet or you know some sort of strange other measurement that I can't think of it's not none of those things and you know you guys have probably all use computers before you probably anticipating what I'm going to say that measurement is pixels so if you've ever taken a picture with a phone uh a camera or downloaded something you often see like oh this image is 1,00 by 720 or you hear like oh this is HD 1080p video that 1080 is referring to the number of pixels of a width of a particular video um I'm going to just check the chat um do we need to keep an eye on app also yes everything is case sensitive so if you put a capital S for size it will not work that's a great question so what I want to do and we're kind of like ramping up here at 1020 I'm kind of keeping an eye on the clock um is that as we move over here um what I want to do now is talk about okay so I put 640 360 so let's think about now what that actually means in the context of that window that's being opened so here so if this window oh I'm I'm in the I'm in the wrong place hi everybody sorry about that I'm glad I noticed wasn't that long this happens to me a lot when I do these because I have a little button here that switches the camera um so just to recap for a second I'm looking I'm unpacking here what I meant by 640x 360 in that window so if this window is 640 pixels wide and this window is 360 pixels High there's a really important thing here that I need to show you to talk to you about which will which will then inform all the other functions I'm about to show you other commands that you can write so I was using the word command by the way to describe this the actual word this the programming term is this is really a function a function call is a function that I'm executing but I think while you're getting started sort of useful to think it as a command or instruction so if this is 640 pixels wide and 360 pixels High here's something really important that you need to know this pixel over here is the pixel 0 comma 0 it is the origin pixel so some of you might be familiar you know depending on what you what sort of math kind of classes you've taken or what you've looked at or you might have used a piece of graph paper you might be used to a coordinate system like this which has a0 in the middle an xaxis and a y AIS this is known as a cartisian named for Renee dekart mathematician a cartisian coordinate system a computerbased coordinate system the processing window coordinate system works in a very similar way but it's a little bit different here the Y AIS you might count up one 2 3 if Z 0 is here this is pixel one this is pixel 2 this is pixel 3 this is pixel one this is pixel 2 so if you think about it for a second what is this pixel here in the middle that pixel here in the middle is pixel 320 halfway from 0 to 640 comma 180 halfway from 0 to 360 so this idea of thinking of the window as a coordinate system is really key to all of the next commands function calls I'm going to show you I only showed you size so here's a list of some things that I'm going to show you next rectangle line you know triangle ellipse I'm not really wrting this all the way out so you can see the first thing that I'm going to show you is processing as an environment is a is a programming environment geared towards drawing pictures with code you can do a lot more with it and think Way Beyond that but this is a great way to get started so if you can figure out some function calls some commands for drawing pictures you can design your own picture on the screen using code and of course later animate it move it make an interactive all those types of things so let me come back over here I'm going to uh see if anyone has any questions um uh has okay people are asking has this just started I'm doing this my plan is I've got another 35 minutes so I you know my goal is to do this for an hour again uh those of you who are I I'm um some people are asking like lost my I do I'm I'm G to be doing a lot of live streams yes I try to do these every week but I'm doing this particular one to celebrate this hour of code thing okay uh and I do have lots of videos on my YouTube channel for those of you are looking for more okay so let's come back here now here we go what are some things we can type so um so let's say let's start I don't know somebody in that no you guys are like 20 seconds behind me so I can't I can't actually live ask you to like shout things out in the chat but let's start with um uh I'm trying to think let's start with let's start with line I think that's fine let's start with line so I'm going to say line 0 0 320 180 now you have to think to yourself what will this make happen so first of all line is the command the function call the arguments are 0 320180 what do those mean this is a question that we need to answer and you can see it comes right after size so again programming is the act of writing instructions for the computer to follow the first one will follow is size which we now know sets the size of the window the second one is line which you could probably imagine what it does but let's run this one to see and you can see there we go we've got this line and let's think about that what did we just say over here this is 0 0 this is 320 180 so that line function the line function connects an X and A ycoordinate to another X and A ycoordinate and here you go an X and A ycoordinate to an X and a y coordinate the first one being 0 0 the second one being 320 1880 so I could easily just now add a second one and I could just pick something whatever I feel like 100 comma 50 uh 600 comma 3 uh 300 uh comma 10 and let's put this one actually over on the other side and let's run this again and you can see now I have this other line here that I drew based on these coordinates 500 comma 50 to 600 comma 10 so you can see that you can write the line instruction as many times as you like with different arguments with different uh with different modifications to draw a line in a different place okay uh I'm looking uh yes if the width goes from 0o to 3639 the real middle one yeah so I'm kind of being Loosey Goosey about some of this stuff somebody asked and this is kind of an interesting question um you know if this is pixel zero and I'm saying it's 640 wide it's actually there's the last pixel is actually pixel 639 if you divide by two really but you know this is the thing we don't need to worry about these fine details right now I think they're less important than the sort of basic idea of getting things up and running and starting to make things so here's now another question how would you do this on your own if I wasn't here just like me as much as I might like to just forever be live streaming talking about the functions and processing if you were just by yourself or with some friends and you wanted to how do you draw a rectangle how do you draw a triangle wanted to look this stuff up how would you know like it's not so clear what those numbers would do just you can with some intuition you could guess and sort of figure it out so all of this comes down to looking things up in the reference so this if you decide you want to keep programming after today welcome to your life reading documentation reading reference materials reading tutorials so you have to rely on the language or environment having a good set of documentation and I I like to think that the processing uh processing project has excellent documentation so what I'm looking for here that I want to look at is the reference so on the processing website I'm back at in.org I'm going to go to reference and uh what I'm you can see there's a lot of different functions that you can call in processing what what we're kind what I'm kind of focusing on today are 2D Primitives and you can see Arc ellipse line Point quad rect triangle so let's look at the line page and a couple things you can see number one is it's showing you first an example so that's the syntax this is how it looks line is the name of the function and you can see if if you give it these arguments you get this in your window and you can see some other in some other uh examples there's even a way of doing lines in 3D which is a bit beyond what we're going to do today and you can see here look this is now a sort of generic way of thinking about so there's two ways to call the line function there's also this zaxis if you're in 3D we're going to ignore that for right now so this first way is what matters line X1 y1 X2 Y2 and if I scroll further down you can see here what do those arguments mean X1 is the x coordinate of the first point y1 is the y coordinate of the first point X2 is the x coordinate of the second point so what this page is doing is it's explaining this is the syntax these are the arguments you can put in this is what those arguments do so now if you wanted to say how do I do a triangle I could go back and I could click on triangle and I could see okay well here's an example and you can see what does a triangle do it makes a triangle and sorry this is kind of small it makes a triangle out of three points X1 y1 X2 Y2 X3 Y3 let's add that to our code so I'm going to go back to my processing sketch and I'm going to say triangle and I'm going to say uh I can if I can spell triangle uh 50 comma 50 uh 200 comma 50 uh 150 comma 200 and I'm going to run this and you can see oh and I just turned off because my camera turns off after a half an hour to save the power and that one turned off too you can see now there's a triangle on the screen and the triangle is made from those three points X1 y1 X2 Y2 X3 Y3 hooray a rectangle so let me so I'm just looking um in the chat to see if there's any important questions somebody's asking if I'm going to do today at 130 p.m eastern time I'm going to do exactly what I'm doing today but using P5 doing right now but using p5js which is Javascript programming environment okay so um let me come back over here for a second and let me turn this camera back on so I'm going to I'm going to take like a not a break but I'm going to pause for five minutes to let people who are watching this tutorial kind of design their own shape um so for example let me just show you a few things I'm going to quickly map out some of these for you we looked at line and triangle rectangle takes an x a y a width and a height so you define a rectangle by the point on the corner XY and some width and some height and ellipse which is a way of drawing a Circle or an ellipsoid elliptical uh round thing also takes an X and A Y and a width and a height the difference being that the XY is at the center and this is the width you can think of it's diameter across and this is the height it's diameter up and down so I might suggest to you right now there's Al that you now your kind of assignment in five minutes before we move on to the next thing is try to make a picture with some rectangles some lines some triangles and ellipses of course there are other functions there's quad there's Arc and there's a zillion things in there in processing but if you're really here and just being a beginner what I would do is um limit yourself to these functions look at them in the reference copy and paste the code examples from the reference into your code try playing with the numbers see what you can design uh and you know I'm kind of I'm I'm I'm loathed to even suggest what kind of thing you might draw because there's so many possibilities and I don't want to to send you all in one particular direction so as creative as you can expressing yourself but also realize just throw some stuff on the screen because you just got about 5 minutes before guess what I'm going to add color to this so let's see what you guys get um I'm I'm having a little more trouble than I anticipated like following the chat and that sort of thing but um uh now is a good time also to ask any questions in the chat I'm going to scroll back and read some of it um while you're doing this quick little exercise um and that sort of thing okay so I'm I'm going to be here still but I'm going to kind of be a little less talking to the camera for a minute I'm going to drink some more of this tea okay I'm just looking back to see if there are any other questions um Canada I'm sorry you're from Canada somebody said they were from Mumbai which was exciting um ah so someone's saying they have to leave soon for their school or their class and I so I'm definitely willing if you're a school or an organization and you want to do this again sometime and you have a group we can coordinate it I'm I'm game it's a very busy time of year now in December but I think probably we could look for a time in January or February for sure um and check here uh okay I see people are typing things in I'm just looking here um and oh okay uh and uh okay so how's that going everybody if you have a question type it in the chat uh you're from Mumbai okay Chris Chris Kris 1234 uh okay so uh guess what I'm gonna make something so I'm GNA sit here and make something you can follow along with me if you want uh I don't know what to make though somebody give me an idea uh um let me look at that okay I've got a oops Circle it's too big make a little circle in the middle why did I oh 180 is where I wanted that to be uh then I'm going to make a line uh at like uh let's put the line behind the circle notice the order that you're typing things makes a big difference uh uh and uh let's see okay I've got a I'm making a little like alien thing there we go there's my little alien it's going to be a oneeyed alien with a rectangle uh there we go this is my okay this is my design so you can see uh you know how this is going I'm going to look in the chat uh robot smile face trying to make an hour glass with two triangles and two lines these are all great ideas wonderful um okay I'm going to give us a couple more minutes and then I'm going to start I'm going to come over here and erase I wanted to get to animation so we don't have a ton of time but I think I can do it color is something we can add somewhat easily and quickly okay and let me come back here and uh okay so I'm I'm going to move on now and start talking about color uh you know realistically if we were doing this as a dayong workshop you would have had a half an hour hour to try to make something and there would been a lot of questions but I think in the interest of time here and trying to do this in an hour I'm going to move on now to the next thing so this is what I've got I made this for myself it's I don't know what it is but it's I like it and you can see this is my window uh it's 640x 360 I've got two lines and I've got three circles and one rectangle there in the middle of that Circle so um certainly I think what you're probably imagining in your head is it would be nice if not everything was black and white so one thing you might be noticing here is processing picked some default colors for you the default being that a particular object's outline is black but its interior is white so you can see up there the interior of that circle is white and the the background of the entire thing is this light gray so all of this is stuff that you can change on your own and the thing that you need to learn about to do this well okay so there's three new commands if you haven't done this before new functions that are key to doing color one is background and what goes in here is the question another is Phil what goes in there is the question and another is stroke the good news for you you is that what goes inside each of those functions is the same thing it's the information to describe a color so how do you describe a color so actually so first of all let's let's make one let's let's make one distinction here which is that let's say I'm drawing a circle on the screen the stroke refers to the outline of that Circle so this assigns the color to the outline the fill assigns the color to the interior of the shape and there's a way that you can have a shape that's empty in the interior with no fill or that has no outline with no stroke and those are things you'll find in the reference but I'm going to just focus on the basics here which is giving every shape a fill or a stroke now there are two ways there's more than this but right now I think a good way to start is there are two ways to think about color gray scale and what I'm going to call RGB color gray scale meaning that I have a single value that determines the amount of white in the color so if there is zero white in the color then I have black and if there is 255 in the color then I have white so this is the range so the range for grayscale as defined by default in processing is between 0 and 255 if you give if you say Phil zero you will have a black interior if you say fill 255 you will have a white interior let's go take a look at that and see that in action so at the very top here I'm just going to say fill zero and run it again and you can see all the shapes now have this uh dark black interior if I were to say fill you know 75 you can see they're still darker but not as dark so it's a Continuum zero being all the way black 255 being all the way white and in between the fact that it's 255 has to do with the way that things are stored in the computer and memory and bits and zeros and ones and that's an interesting discussion that I believe leave for some other time but this is the range by default between 0 and 255 and I could do the same thing with stroke so I could say stroke 255 and you can see here all the shapes now have a white outline with this dark gray interior so that's one way of doing color the other way of doing color is what I'm call not me I didn't invent this clearly uh RGB color so instead of a single number with RGB color color you need to provide processing The Fill stroke or background background functions with an amount of red an amount of green and an amount of blue each of these having a range between 0 and 255 so you can kind of Imagine exactly what this might do if I come back over here and I look at the fill I'm giving it an amount of red an amount of green and an amount of blue so what will this color be if it has a lot of red but no green and no blue RGB red green blue right so we can run this and you can see all the shapes are entirely red because it has only red if I were to give it let's give it a little bit of blue we can say I mix a little blue in there and you can see I can maybe give it even a little bit more blue you can see I'm getting this more pinkish purplish color because red and blue make purple so you know this now walks down the road of all sorts of an interesting long elaborate discussion about color theory and color mixing and the properties of light but one thing that's important to realize here is the the what's going on in in adding these colors to adding some red and adding some blue is is uh is is adding light together so you can think about it if you had a red flashlight and a blue flashlight in you shine them on the wall next to each other what color you get it's a little bit different than mixing paints there's a lot of similarity but you know if you mix like all like a whole lot of colors red green blue orange paint you'll end up getting like sort of brown or dark color the more you add color the brighter it gets so for example 255 255 255 is white and actually grayscale is just shorthand for the red value being equal to the green value being equal to the blue value so if I were to go back here and say 75 7 75 75 you can see now that I have what I had before but if all the values are equal I can shorthand wise just say 75 so now I can also add a background which I could say uh let's use that nice uh pinkish purplish color and I can have this fill and stroke and for these I can have this stroke for these lines the other thing you can notice is the order matters so where you put fill and stroke affects all the shapes that come after it so if I were to now say fill 0255 and I were to say stroke 255 0 and I'm not really you can see that the lines are white you can see here that the lines are still white but the outline of the circle is now red because this stroke here overrode the stroke that was at the top so what I might suggest is if you wanted to be really long winded about this is for every shape and maybe these should both be white and then I want uh uh I want this this ellipse to be this color and then you can start putting line breaks you know and assigning uh specific colors for every shape okay so you can see I could keep going with this and I'm going to go with I'm going to muck around and make my strange alien with whatever colors and things that I want so this is now it's 1045 I you know an hour would be just 15 minutes from now we're going to kind of wrap up but let's take five you know a little less around five minutes to have you guys try to add color I'm going to look at the chat see what questions came up hopefully people are still watching or listening or have questions um and then I'm going to add the last step we're going to add is a little bit of Animation to what you're doing um so uh let's take a look uh and I'm going to see if there's any questions in the chat so um okay great so people are um talking about what they are making an hourglass a snowman a cover stroke weight sure so somebody asked me to cover stroke weight stroke weight is a function that changes the thickness of the lines so you know I'll add that into mind for uh I'll put it here under the for these lines if I say stroke weight four and run it again you can see that the the thickness of the of the outline is much much greater it's actually Four pixels wide and that can be this is actually a useful thing to add because it makes it a bit more visible what's going on too in terms of the stroke and the fill um so somebody who joined here late oh do values wrap if you exceed 255 or are they capped um you know there's a kind of a bit of an it depends answer but I will say they are capped so if you pass 300 into the function you'll still get uh the white the value 255 um and uh somebody asked what is this programming I'm talking about so I'm using something called processing I guess I erase that is processing. org is the programming language environment you can download to follow along with this tutorial and this tutorial by the way will be archived uh on YouTube as soon as it's over so you can go back and watch it again if you if anybody really wanted to or if somebody else wants to watch it obviously the Live Chat thing won't be an aspect anymore but yeah okay so I'm going to um take a couple minutes to add some colors to mine I want I like the these antenna being uh um and so I'm going to make the uh so my alien should be green I like that with green but I'm going to make a like purple outline okay like that with uh let's keep everything kind of purplish there we go and that's blue there the antenna I think should be red this is very important some sort of uh reddish color and green on the outline let's keep this stroke I'm going to just keep the stroke the same for everything and uh let me make those a little bit darker there we go and then the this last rectangle is the ey which would be something nice and uh blue I don't know what I'm doing here and the background let's make it a little bit brighter there we go okay this is my alien now with some colors I I guess my outline was is too close to the let's just make the background a uh a light gray or maybe something darker okay anyway I'm clearly not a visual designer there's my shape with some colors now okay uh um looking here there's more people in the chat saying funny things uh uh and typing in their code snowman uh you did someone's asking I did not get a green color on the shape so it's kind of hard for me to debug your code from the chat as much as I love the idea of trying to do that but so comron I will I'm gonna I'm gonna I I don't have the chat open on this computer here with processing let me look Phil green ellipse ah uh Camron I see you have zero dot so the mistake I'm noticing somebody in the chat has typed in this Phil 0.255 comma 100 so this is just a typo but processing doesn't know it's a typo they think you're trying to put in the number 22255 so uh in that case you make make sure you need to have a comma there uh this is a good moment to just show you sort of what happens if something's out of place so I'm going to like remove this um I'm going to remove this whoa something crazy is going on down there I'm going to remove this semicolon so one thing you'll notice in processing that if you have a syntax eror you'll get a red squiggly line where the syntax error is and then down here on the bottom there's an errors tab so if you click on that errors tab you'll see missing a semicolon and it will also tell you what line number that's happening line number two I could actually even double click on that it'll take me right there I add the semicolon and there you go so is the you know most of the time the error processing can figure out what it is and give you a nice helpful suggestion sometimes it can't and this is just the life that you lead now okay 1049 um okay all right so by the way sometimes like the chat you should know you're seeing me about 20 or 30 seconds after something that I'm actually saying live just so you know because the way the delay works on YouTube okay we've got 10 more minutes here's what I've got left to do I want to show you how to animate something big topic 10 minutes no problem and I want to show you uh and I want to just talk about where do you go from here this is an hour it's all going to be over I'll go on with my day you'll go on with your day someday we'll meet again I hope but I'm going to try to give you some resources without just like plugging my own stuff too much of of how you might learn more of this okay so here we go um here we go let me come over here to talk about animation for a second okay so this is a big topic you know what we've been doing here and I said I was coming over here but I'm going back over here for a second all of these programs that we've been writing you and me together here on this day um have just been these static images programming I said is the act of writing instructions for the computer to follow there was a first instruction a second instruction a third instruction a fourth instruction it got to the end it finished the picture is presented you're done but animation programs or most programs that you write even your the email program you use Photoshop your word processing program these are things that run over time so programs need to handle interaction events that might happen they need to handle uh drawing over and over again to animate something so this is something that I think we can add somewhat quickly to the processing to processing today at least and you know I'm going to gloss over some of the underlying details but the core idea will be there and hopefully you will enjoy this somewhat so the thing that you need to add to your program looks like this and there's a lot of new syntax here not all of it will make immediate sense to you or even sense to you in the next 10 minutes but as I show you further resources and you go further into this it will start to become more and more clear but in what I'm going to show you how to do is instead of writing your code simply as a linear list of instructions right there in the processing editor I'm going to tell you put your code either in setup or inside draw these are what are known as blocks of code blocks of code begin with a curly bracket and end with a closed curly bracket so this is the way to say that the code that's in here is part of this thing called setup and the code that's in here is part of this thing called Draw and these things these are functions actually that you are defining the setup function the draw function they're special functions that processing requires you to write for an animation that setup is a function that happens once at the beginning and draw is a function that happens forever and ever looping over and over again draw the circle draw the circle draw the circle so if I come back over here and I'm going to um I'm going to save this as uh hour of code one so I can uh now I'm going to save it whoops I'm GNA save it as hour of code two so I'm because I want to just what I want to do now is only leave this circle in so you can see I simplified the program a little bit so it's just drawing a circle in the middle of the screen what I want to do now is say void setup void draw so I put some of my code in setup and I put some of my code in draw now what goes where is an interesting question there's really no right answers to these questions but there is sort of an answer for at least what I'm showing you right now so one thing that certainly should go in set up is size that is a thing you do when the program begins set up the size of the window if I want if my ultimate goal is to maybe have this ellipse drawn move around the screen I need to continuously draw that Circle draw it here then draw it there then draw it here then draw it there then draw it there then over there then over there so that is something that happens over and over again background is an interesting question should it be in setup or should it be in draw well first let's just run this and see what I even get so one thing you'll notice here is I'm not getting anything different it's still just a circle being drawn in the middle of the window the code is actually still running in fact it's drawing that Circle it's like draw draw draw draw draw draw dra dra draw but I see it as a static image because that circle is being drawn only in the same place every time but what if this number 320 what if that number could be something different every time through draw for example and I'm kind of rushing through this a little bit because we're running out of time but uh for example what if that location could be the location where the mouse is what if I could say draw the circle where that Mouse is where the mouse is where the mouse is and in fact processing and all programming language environments have a mechanism for doing this generally speaking not just the mouse it's something called a variable a variable is a word that stands in for a number and it's something that can change over time it can hold information it can hold and store data so very quickly something I can add here is mouse X and and mouse y you can see those words turned a pink color because processing recognized them as key words as variables within the system and if I do this you can see now look at this that circle is continuously being drawn wherever the mouse is and I already all of a sudden right now I have a painting program beautiful drawing it where the mouse is now remember I add this weird question of where should background be well notice that background was in setup so the background was drawn only once so I'm never erasing a previous Circle that was drawn and you can see I have this painting program what would happen if I take background and move it to the beginning of draw now you'll notice the circle is moving but I'm not seeing the previous one because every time it draws the new circle before that it erases the background so this is the way that you can create something moving along the screen that's interactive by assigning its location to Mouse X Mouse y but it's also important to remember that these are just numbers so I could for example put Phil in Mouse X and I could put Mouse Y in background so also you can see that the color is changing as I'm moving the mouse right as I move down it gets it gets it gets brighter as I move up it gets um it gets darker and and the circle value is changing I could also just keep the circle in the middle but I could use Mouse X and mouse y for its size and you can see here if I come in here as I uh as I move up and down the size of the circle changes based on Mouse X Mouse y so those variables are just data they're just numbers and you can assign them to anything in your program position color size you could put Mouse y as the exposition of something so it's that might be very confusing because as the user moves along the xaxis the thing moves down but that could be an interesting and different interaction so there's a lot lot of possibilities here and this is just the first step these are two variables that processing gives you for free but ultimately and this is this this is part of next steps really um you can Define your own variables you can make up your own variables give them their your own names the score for a game the uh speed of a thing that's flying across the screen you can make up your own variables too so um we have uh you know I'm going to go a little bit longer than just the one hour maybe by five or 10 minutes um so why don't I give you guys a few minutes to try adding Mouse X and mouse Y in your code somewhere um and see what you can change color or change position um and then I'm going to wrap up and have some closing thoughts and try to point you towards some other resources that might let you uh keep going and do more okay uh yes so somebody's asking um somebody's asking uh what button does the auto forting so one thing I'll just mention this before are asking about it is there is a sort of a standard way of indenting code code that's inside a block uh is typically indented a little bit to sort of see what's in but it doesn't affect how the code runs this exact program would run the same way if I wrote it like this it's sort of a mess to look at but a way that you can have processing automatically adjust all your indentation and everything to make it so nice and you know I don't know clean and easy to look at um is under edit uh Auto format so this Auto format button which is also command t or probably control t on a PC so if I now do command T you can see that it autof formatted my code to be nice and organized okay some people are asking questions um uh so somebody asked about mobile uh somebody asked about yes so somebody asked about transparency so you can give Phil or stroke a fourth argument which has to do with the transparency that's correct um someone asked about um mobile development so mobile development that's a big question there's lots of ways you can do mobile development um but one of because processing is built on top of java and Android systems are Java based you can actually do uh Android development in processing and there's something called processing Android which is essentially like an addon or a mode that you can add by the way you can also do all of your processing programming in Python uh by adding the python mode which is something you can add right here through ad mode so you can look at Android and python through here this afternoon at 130 I'm to do this exact tutorial again but using the p5js programming environment which is a JavaScript based so Java JavaScript and python are your sort of three languages that you can work with in this sort of world of processing in P5 um okay will you be starting Java so all by the way this is Java you are learning Java I mean there's some nuances and some specifics to the way Java programs are built that are being not shown here but uh you know if you're interested in Java you know I might suggest just looking at all of my back catalog of video tutorials that use processing that will get into all of those details um okay um so we're coming up to 11 o'clock here um so first of all I would like to encourage you to please share with me anything that you made from today uh probably the easiest way to do that is through Twitter uh SL shiftman I ffan um uh so I'd love to just sort of hear how this was for you or give get any feedback um certainly there's also this will be archived on YouTube and you can uh write in the comments there as well um so this is the question I guess what if you want to learn more so um I'm going to uh get some props over here oops the camera went off so let me fix that um uh so uh ah I knocked over a glass everything's okay everybody it didn't have any water in it it was my water glass but I finished it so um there are lots of books that you can get um this is a particularly wonderful one uh make getting started with processing a HandsOn introduction to making interactive Graphics written by Casey Reese and Ben fry the creators of processing I I really don't mean to be selling you guys stuff I'm just sort of showing you this is a my book learning processing which has a lot of information um and uh certainly on the processing website uh you can under here under books uh you'll see there's also the processing a handbook which is the uh which is also written by Casey and Ben and you can scroll down here and see that there are a lot of other books that you could look at um that give you a lot of different ideas of working with processing I would also suggest that you go here under tutorials my head is in the way here tutorials on the processing website um this uh hello processing tutorial is actually a kind of recorded version essentially of what I did today but we made this two years ago so it's still the same same content it's interactive it actually has a place where you can type code into the browser to try it out so I I would certainly recommend you checking that out and there are also um these text based tutorials that are here as well and right up here um at the top here under video tutorials there are a lot of wonderful video tutorials I'll mention uh Jose I think his is uh uh fun programming uh or maybe or the plethora project all of these tutorials are great I guess since I'm here if you like this video um I would suggest that you look at um let me just uh go to this link here um these are all of my uh playlists and you can see here that uh this section here learning processing and beginers and these I have probably like 60 to 100 videos that kind of go through all this processing stuff in more detail detail um a lot of the stuff that I also have are tutorials about um uh natural simulation and physics simulation and and and and generative algorithms that type of thing and I've also started a set of tutorials working with p5js which is uh JavaScript and some things with the connect um the Microsoft Connect in different sens to computer anyway there's a lot more there so uh you know I I now I feel weird like I'm like I did this like I'm advertising stuff which I don't mean to be doing but um so that I think would be a good resource for you um are all sorts of interesting um workshops and probably schools that you could think about attending uh one of one of my um uh favorite new Ventures is the school for poetic computation which is a a a uh popup School in a way I might call here in New York that does uh work with people with creativity and programming and electronics projects and they have kind of one week or 10 we programs things like that there's another one that happened in Germany last summer called some like make some somebody somebody remind me what that is I'll link to these so I don't know put your put your ideas for next steps um in the comments of this video when it gets archived or in the chat here and um and hopefully that will give you some ideas of what to do next if you're interested in this um so I'm going to look I'm going to look at before I say goodbye thank you for watching I'm going to look in the chat and see if there's some more questions I can answer uh how do I export processing sketches as a Java application okay let me show that to you uh here in processing under file under export application so this will actually export your processing sketch as a standalone application and if I do export application uh save changes yes and now I can pick like well do which platform do I want to export for do I want it to be full screen uh do I want to embed Java which I would recommend if you're intending to like send it or distribute it that's why it has Java embedded in it nobody has to have a separate install of java so I'm going to hit uh export and you can see here I have my Mac application which is there and so it also comes with the source and you can look at it sort of translated your processing code into Java which really just means it puts a few things around it and now I could run this when I run it you can see there it is my program just run so it looks like it's running with but processing is not open anymore so this is now just a standalone application that's running on my computer uh hello France um what do you think is programming natural comes or can we build that I'm sorry I didn't oh void setup is this can be call method to okay so someone so set up and draw there so many questions and things we could discuss and answer but I will let's try to let me try to talk about this for a second so set up and draw our special functions I was going to open processing back up just to kind of have that as a reference um set up and draw are special functions that processing uh asks you to write I'm going to get this open again open recent um and uh you don't actually execute so background fill and ellipse are functions that you are executing that are in the processing Library setup and draw are like the inverse of that they're functions that you're defining but processing is calling them for you it knows to call setup at the beginning it knows to call draw over and over again something we've missed in this tutorial but I certainly get into some of my other videos is how do you define call your own function and this is just something that comes up once you start to build larger and more complex programs um um thank you for some of the nice comments how can I program a function slide with Java so I don't know if you're asking about using a slider so interface elements are are are a tricky topic but there are different Java or and for Android in particular you can use you need to sort of use the native Android stuff to get the interface stuff and you could then combine that with some of the drawing things you have in processing but uh one of the things things about processing that's great that I guess I'll show you if I go to sketch import Library these under ad library because processing is built built on top of java and open source people can design and make addons for it essentially like oh processing doesn't have code for checking email I'll make a processing library that checks email so if I go click add Library what you'll see here is a very very long list of all sorts of additional code libraries that are available for processing and if I just kind of like scroll down here you can see um you know open connect for using the Microsoft Connect obj loader for loading a 3D model from another program uh QR code for reading a QR code uh SFTP for ftping a file super collider for working with super collider Sprites you can just see there's just tons and tons of midi for working with midi which is an audio thing on the computer so there's lots and lots of libraries that you could potentially add and use code with too um okay so it looks like the questions have ended and it's about 1110 this has been going for an hour and 10 minutes uh I will be back this afternoon at 130 p.m. to do my next uh hour of code with uh p5js so I'm going to go over here to my uh console and hit the stop stream button which means I will disappear I don't know how long it takes YouTube but this will probably be up and archived within the next hour please stay in touch share what you made give me feedback uh twitter.com shiffman is probably the best way to reach me for today and um look forward to hearing from any of you I'm going to hit stop streaming now goodbye thank you see you later