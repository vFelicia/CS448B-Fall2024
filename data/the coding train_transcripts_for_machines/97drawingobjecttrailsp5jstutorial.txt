hello welcome in this video I'm going to demonstrate how to take let me run this again how to have an object on the screen store a history of its path now this object just happens to be a bouncing ball it's bouncing up and down but you could maybe have something move and spiral pattern or something move along a sine wave or use something called Perlin noise or move randomly or maybe you've watched them on my other videos where I show how to have things respond to forces the point is you have something that you've already programmed to move around the screen what if you want to draw a trail or to have that history of its path for some other purpose I feel like this comes up a lot so on the one hand you might already say oh I know how to do this right because in the basics of using an environment like processing or p5.js there's this background function and the background function erases the background so if you were to take the background function from draw which is continuously erasing the background and move it in to set up now we can see this object is drawing a trail and you can barely see it moving anymore which is something that I should have considered probably but you can see that it's drawing a trail but it's kind of this is not really a good solution because a it's just continuously drawing its trail forever I can't have some things draw one trail something's not draw a trail something's draw a long trail something's wrong short trail I can't have the things in the trail changing color or moving according to their own set of principles so in order to do something anything any idea that you have that's a bit more sophisticated beyond just see the things sort of like smearing a trail of its path along the screen you're going to need to keep that background in draw and figure out a way for the object itself to store a history of its own path so let's think about how we might do that I feel obligated to use the whiteboard for a second even though I don't know that it's necessary so let's kind of unpack this a little bit we have on the screen we have a circle maybe it's moving maybe it's your program it's some sort of like ant like insect like creature and it's moving around and what you want is for it to have almost like this like body that it pulls along along its path in some type of well this would be a good topic for a video looking at inverse kinematics all that stuff to create like a skeleton oh that's going to be good but we'll do that in another video here we just want the trail so the object if we think of this object as called a particle as a very generic term for a thing moving around the screen this particle has an X this particle has a Y and now what is this particle deed in addition to the X and the y it needs to have something that I'll call a history and that history can be an array because what this particle will do is it stores its X Y as its current location but another property of it is actually an array where it can keep track of older x and y's and older x and y's and older x and y's so let's look at how that might be done so if I come back over here to this particular example you can see the basics of the code right there's a particle object it makes a new particle object in setup and then that particle object update and show where all of the code world the stuff for that particle object is is over here in this constructor function and you can see it's just got some basic stuff it has an X and a y variable it has a Y speed variable because all this thing is doing is moving up and down it changes Y by Y speed it changes Y speed by gravity it checks if it gets the bottom then if it gets the bottom it reverses its direction and then it also has a function to display itself so what I'm suggesting to you here is the first thing that we need to do is add another property to this object the way that we add a property this object is by saying this object this thing this particle thing that's going to be made through this constructor function this dot the name of that property and I'm going to call it a history and I'm going to make it an array so this is a wonderful thing about working in JavaScript I'm after I do this video I'll make a version of this code in processing and I'll upload both examples so you have the p5 and the processing version but the JavaScript version will be a little bit simpler because an array in JavaScript natively is a thing that you can just start as an empty thing and start filling it with stuff whereas in processing in Java I'll have to build the example with something called an ArrayList and I will link to other videos about how ArrayList worked at some point there so okay so this is our first start here we make this history variable so what do we do with that history variable every time the object updates its location every time it moves I want to store where it previously was how do I do that so how do I add something to an array so this is the update function right here right this is where the wat its X&Y location might change it's moving around the screen so what I want to do is add something here where I say this dot history and I want to somehow I want to like add something into this history so the way that you add something to an array in JavaScript a way that one there's many ways you can do it but one way you can sum to add something to the end of that array is with a function called push so if I were to say push dot X what I'm doing is I'm saying take this object's current X location and by the way I can't say X I have to say what JavaScript this dot X I have to take this object's current X and put it into the array so if I did this and ran this program every time an update it would say save it's X in the array save it's X in the array and that array would just become full of its X locations and we could do something amusing I don't know how amusing this would be I'm going to say print its history out and you can see here right I'm getting I'm printing out these arrays and there's just tons of values of 100 because it's X is never changing so why don't I put its Y in there and you can see I look the Y values are just being stored the history of its Y values are being stored in that array oh maybe I should put both the X and the y and you can sort of see now that array has XY XY XY XY XY so interesting the push function you can just push a bunch of things in the array by separating them but this is this while this is fine it's worth noting that's something that's going to make our life much easier to do this particular example is using something called a vector so let me come back over here for a second and talk briefly about what a vector is if you haven't encountered it before and I'm probably going to do some other videos that go through this stuff in more detail but let's say I have an object oh this pen is terrible let's say I have an object whose location is at an x and a y I could have separate x and y variables or I could have a variable that I'll call a vector and what I could do in p5 is I can call a function called create vector and give it two values can you see that you can I've gone off the here look live fixing live editing this is what I do a live editing just going to move the camera a little bit so you can see that so instead of having a separate x and y variable I can have a single variable using the create vector function to put an x and y in why does that work why is that relevant well a vector is essentially one way of to give a vector is as an arrow or directions for how to get from one place to another and here in this case an object's location is a vector for how to get from the origin to where it's actually being displayed and the you could think of this as a triangle with a Y component and an X component so this arrow is a vector so instead of that big array that I want to fill instead of trying to put an X then Y then an X then Y then an X than a y it'll be much simpler if I say let's put a vector an XY and then put another vector another XY so I can kind of group the history as its position is this X Y then its position was this X Y that history is a whole bunch of vectors so over here now if I come back to the code what I want to do is I'm going to say VAR v r v equals create vector this dot X this dot Y and I'm now going to push that vector into the array and run this again and so now as this program is running as this is running over and over again this history array is getting like bigger and bigger and bigger let's take a look at that let's let's look in the console at this history dot length so you can see as the program is running I'm just storing over and over again a vector for every single point that this object has ever been so right if I wanted to draw a trail of everywhere it's ever been then I can simply do that pretty easily because I have all those points in an array I feel like I pause fast questions but I can't pause because I'm just making this as a video okay so we've now we've got the core mechanic here now which is just this which is just like every time as the object gets updated take its current location save a copy of it stored in the array so let's do something with that now let's in the display function I could always now say I could have a loop to go through that entire array and I could draw and of course I'm forgetting to save this this and now this is a little bit what I think might be worth doing here's make a variable called position which is this dot history index I so here what I'm doing is right here this is an important little thing to look at for a second is I want when I'm going to draw this object in addition to drawing its current X Y I'm going to go through loop through the entire history and pull out each and every spot in history index 0 index 1 index 2 and those things are vectors and I'm going to store them in a variable called pause for a position and now if I want to draw another circle there I can just say paused at X pause Y and I'll make this a smaller circle and we can see now if I run this program you can see it is drawing a circle at every spot in its history and now you know what I had this idea where like all a bouncing ball is going to make sense and I just I just don't like it anymore let's let's get rid of this idea of Y speed and grab let's just be much simpler about this and let's just chain and let's get rid of this bouncing thing let's just do what I originally set out to do which I think will demonstrate this idea much better which is just to have it move randomly so I'm just changing this particle to instead of bouncing up and down to have it move randomly so you can see now as it's moving randomly it's leaving a circle everywhere it's ever been in its path and I do I am erasing I am erasing the background each time so this allows me to do lots of different things for example you know each one of those circles could be drawn randomly there their size could be random you know just so you can see here I don't I don't know what the value of this is but you can see that those things can be animated in their own way I don't particularly like what I've done with randomness but there's a lot of possibilities there so this is the simple idea right that instead of just drawing a circle at its location also store a and also keep track of an array that stores a copy of its location over time and draw something there so I want to add a few things to this number one is I think it might make sense to limit that history right so one thing we could say is if this dot history dot length is greater than 25 then this dot history dot splice splice is a function that allows you to pull out things from the array and the oldest thing in the array is the first thing index number zero and I want to just take one thing out of the array so this place function takes two arguments the index where you want to delete something and how many things you want to delete which is just one so now if we run it you can see and let's have it move at larger steps so you can see here and goodbye it left the screen those are too large let me I came back that was nice of it and we could do something like have its size just bi so you can see that come back okay well let's do something else okay so here's the amazing thing about doing this I only have one particle and this is like at first I have this like tiny window so just so we can see more stuff happening let's put that in the middle so uh what's oh and it's Oh ed etre you should have changed your size but you didn't so you can see that this gives you a lot more potential now in things that you can do in terms of having this thing store its own history I've like barely scratched the surface there's so many better ideas you probably have good ideas too but what I at least want to do is expand this now because the point of having done this and encapsulating this entire idea of the history inside of this object right the entire capturing the history inside of this object now what's possible is let me make this called particles let me not have any particles in setup and let me loop through I'm going to let me make an array of all the possible particles and let me say particles index i dot update particles index i show so now what I've done is I've changed the main program for having just this one single particle to starting with an empty array of particles and any of the particles that are there they all should update they all should show now of course there's none right now why because we haven't added any so now what's exciting about this is let's say anytime I click the mouse let's add write adding something to an array with the push function new particle and let's add it where the mouse is so now if I run this look at this I click there click there all of these objects are all storing their own history and I can just keep making many of them so this is pretty great because now you know and just to demonstrate that the background isn't 100% the background is not being erased I can have something else move I'm going to just move frame count modulus width I don't know if this is going to work but like a let me not do this I'm just going to say frame count zero frame count height just to see like there's something moving across the screen that is not drawing a trail so we can have some things draw a trail we can have a lot of control over that trail being that what's the size of that trail do the objects do they change color do they animate that sort of thing so let me like to addictiveness I'm like at 15 minutes you can just stop this and do something else but I want to do a couple more things with this so you see this basic example one thing that I think would be useful to demonstrate is to see that a common thing that you'll want to do is actually draw the trail as I'm over here now so a common thing come on button a common thing that you might want to do is with this object draw the trail as a continuous set of lines like that and a way of doing that is with a begin shape and end shape so I'm going to comment out the ellipse and I can say begin shape at the beginning of the loop and end shape at the end of the loop and just say vertex pause dot X pause dot Y so what I'm actually doing here is making a new shape that's going to appear on the screen and all the vertices of that shape are going to be made up of the history of that object so if I run this and click you can see that shape now weirdly enough that shape is closed and it has a fill so a couple things I want to do is I want to say no fill the other thing I might want to do is I think I want to make this let this be a lot longer let this be 100 and we can run this and you can see now you can see that it's drawing this like squiggly line and again if you change this to have it move more smoothly or some other different algorithm you can imagine how useful this might be and again I can have all of them continue to do this now here's the other thing that's amazing about this not only do we have this history stored as data but because we have this history stored as data in an array those things can change so there's no reason why I couldn't say while the object is moving in its update function right its update function does what it changes the X&Y location then it stores a copy of that XII location in its history but there's no reason why while it's moving I couldn't also loop through the entire array and have history always forget to this this I could say this dot history index I dot X move randomly and index I dot y move randomly so what I've added here is I'm saying aha in addition to the object's location moving its history those points also move as well so now if I draw something you can see that its history is kind of like undulating as it moves as well all those vert vert X's vertices have their own kind of motion so again I don't really like necessarily my own visual result here because the only thing I'm using as the driving force behind the motion is randomness but you could imagine what sort of possibilities might there be there in terms of a creature design in terms of color in terms of smooth motion in terms of oscillating motion kept boy like having all of those points like sort of oscillating is this if it's like a waving fish or something or waving snake there's just so many possibilities so I hope that I'm gonna upload this code example complete this upload this video upload the code example make a p5 version make a processing version if you make something built off of this example please share it with me in the comments I don't understand how this video became 20 minutes long but it did and I hope that you found it somewhat useful goodbye and see you in the next video someday