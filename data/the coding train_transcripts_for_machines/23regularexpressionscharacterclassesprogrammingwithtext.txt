hello welcome to the third video about regular Expressions I'm actually pretty uh excited about regular expressions and I'm especially excited about this video because now I think I we after this one I'm going to have all the tools that I need to match all of those phone numbers so let's look at the next piece here I've talked about position meta characters Single Character meta characters quantifiers and now I want to talk about character classes so character classes a character class is stuff that appears in between square brackets and this is one way I'm going to talk about two things in this video I don't know if this is the right term but I'm going to talk about character classes and alternation so alternation these are two different ways of saying of a of of having an or like operation meaning if I say this a b c match an a or a b or a c okay that's a character class match right this also matches a dash or a period now one thing that's important to realize and there's so much funny business and little things to remember and look up but mostly you're going to have to look up this stuff or mess around and get it wrong a lot but remember dot is a meta character dot is a meta character that means any character so why doesn't this match a dash or any character well it turns out that dot inside of a character class is no longer that meta character instead it's a literal Dot and I should also mention I really should have done this in the last video uh I just realized I just forgot that if I want to match a literal dot not in U that's not in a character class like if I want to match email addresses so I want to match anything that's like dot oh this is actually going to be perfect for this like so this is a scenario that I want to do what if I want to match anything Donnet or.com or.org now obviously there can be more than just that for email addresses but this is a good start so alternation is going to be a way to allow us to say or net orom or org but how do I match the actual dot back slash dot means literal dot so if you have a meta character um like for example a bracket is now a meta character so but if I want to match a literal bracket I have to say back SL bracket so it's a way of escaping it so I'm going to come back to the email address we'll get to that in a minute but so these are character classes match any one of these characters let's look a little bit about how this works um let me come back over here let me open up Adam again uh and let me try to like make some character classes so what I want to match is um let's think about the uh let's I'm going to make up something I'm going to match l y or I and K so what is this going to match L followed by the character class Yi followed by n okay and I'm going to type some stuff here uh the link is quite a link don't you think so you can see what did that do it matches both l y NK and l i n k based on the way that we have this character class so I could say or a space or a parenthesis you know all this stuff would work I don't know why I would want to do this but I could say l space NK l l print es NK uh I don't know why that didn't work oh um L I don't know what I got wrong oh other other other way parentheses right so I can use a character class to match any possible any any one of these characters okay so let's go back to the phone number for a second look now remember what I had before I had three digits followed by a dash followed by uh three digits right look what that's matching 9917 d555 now what if I down here change that to followed by either a dash or a dot dash or a DOT look at this now I've matched and let me put this back to make these phone numbers you can see now I've matched both of these phone numbers except weirdly I'm getting something weird here so let's we got to be a little bit better about this let's match now followed by a dash or a DOT followed by four four digits now look what I've got I've got this phone number and this phone number now I know you can't see the regular expression let me let me just show this to you again three digits followed by a dash or a DOT followed by three digits followed by a dash or a DOT followed by four digits we're now we're talking now we're cooking I can match any possible phone number where it's of this form in this article but look at this ah there's also these parentheses how do I deal with that okay well optionally I could start with an open parenthesis so let me do this optionally now look at this uh invalid regular expression why so a parentheses we're going to see in a moment is part of this thing called alternation so I need to say I want to match optionally a literal parenthesis and then after the phone number instead of the dash or the dot the first one it could also be a close parenthesis but inside the character class I don't need to escape the parenthesis oh boy uh but look at this this now I've matched all three of them so you might have had to have to pause this video copy that down and you really should just you should make up a song or talk yourself thly through slowly through a regular expression and I'm going to do it for you we're going to like have a moment here where we're going to read this regular expression I would like to match a literal open parenthesis optionally followed by three digits followed by a dash or a period or a close parenthesis followed by three digits followed by a dash or a period followed by four digits so this is the kind of thing you need to try to translate and one way of also creating regular Expressions is to iterate so I could have written this in a more long winded way and then shortened it and shortened it and shortened it kind of over time and maybe we'll see that process as I do more and more examples okay so we're moving through this I think I've kind of covered now for you what a character class is oh and I should ah I missed something really important this Dash is that a D okay so special characters inside of a character class are Dash and carrot uh let's look at how those work so even though this Dash in this particular scenario is matching a literal Dash it can work a different way so let me show you what I mean by that I want to match I'm going to try to get closer here I want to match um any Dash now notice in the character any Dash um or period so you can see I matching any Dash or period but I'm going to show you something else I want to match A Z if the dash is not the first character it does not mean a literal Dash instead it means any character A through Z so look at this I'm matching any any character a through C right I'm matching an A or a b or a c I can also say or any character 0 through five so now I am matching right I could say I want to match only phone numbers that have the number z0 through five sequences of three numbers only with the the numbers 0 through five so notice how I've matched 212 and 555 but I did not match 646 because 646 has a six in it which is not a character Zero through five let me show you something crazy remember how I said so Dash is a special character inside a character class carrot is also a special character let me come back over here and I want to uh show you what happens if I put carrot here what did I now match anything that's not a zero through five which is actually kind of insane because I in my mind you can easily forget these things I thought I was going to get sequences of numbers that aren't 0 through five but this just means anything except 0 through five so this means like any character except a b or c right I'm matching including spaces including numbers including periods including punctuation so you can negate the character class if the carrot symbol is the first symbol if the carrot symbol is in the in the middle it's just a or carrot or B or C it's literal and Adam is helping us along by color coding when something's a meta character and not color coding when it's not a meta character um okay so um I think I'm kind of all the way through the character class thing I did realize though that something is going on here which is that um I want to match let me just show this to you right I want to match any character A through Z oh look at this um notice that this matched capital T even though I'm lowercase AZ now usually the default is going to be the other way around um but and here the context is I'm using adom so in this case over here I can make this regular expression case sensitive by uh clicking this match case and now you'll see that I'm not matching any capital letters but if I wanted to match only capital letters I could say A Z so this by the way is now a regular expression here we go to match any fourl words only with characters in them so not and um right only with characters with them so this will not match oops L3 NK but if I change this instead of a to d W it'll match so W includes numbers and characters if I only want characters I need to include I need to write a character class like all capital A through Z all lowercase a through z now here's what I could do let's be better about this let's say I want to match a single capital letter followed by one or more lowercase letters so you can see now I've matched only capitalized words and I didn't match actually though if a something is the right I didn't match a but I could make instead of followed by one or more lowercase letters I could put a star there zero or more and now I matched a so you can see if you want to look oh there's a something going on here so by the way this was considered a word boundary right in here so we'd have to change our regular expression a little bit if we didn't want to allow something followed by an apostrophe okay um all all right so we're we're we're moving along here there's a little bit more that I want to cover in this video which is something called alternation so character class is a way of kind of stringing an or a or b or c or anything not a or b or c but there's another way to have an or and you need parentheses for that and you need a pipe symbol so remember when I was saying I want to try to match emails so I could say net or Comm so this is not saying n or e or t this is saying NE or c m so this pipes this looks a lot more like programming I I think this might be referred to as alternation having a memory of reading the word alternation in Jeffrey friel's ma during regular Expressions Book which I highly recommend um net or com so let's look and see how this works um I'm going to come back over here I'm going to write a bunch of emails uh Daniel shiffman domnet or daniel. shiffman gmail.com here here's all my email uh uh at nyu.edu there now I'm going to get a lot of emails from people I guess so let's try to match any of these email addresses okay I should have written fake email address here I'll just spell my name wrong no whatever it's fine um so let's think about this what I want to match is any word characters one or more I'm sorry I'm I'm I'm not in this I'm blocking one or more word characters followed by what an symbol followed by one or more word characters followed by a literal dot not any character followed by a literal dot back slash dot followed by net or Comm or edu and look oh look at this I forgot that an email address can have a dot in it as well so look what it matched H so let's try to fix that so in the in here I guess I can say any number of word characters or a DOT will it let me do that yes so I can put the that meta character in the uh so you can see now I've matched any email address if I took out this edu you can see that now I could have just done something like you know anyway we can make this more generic but you can see how this works right so this is um you can see how these these regular expressions in and by the way here's you know regular Expressions one way you can use them is like form validation oh you didn't type in a valid email hopefully after you watch these videos you're going to come up with some more creative and experimental uses of regular Expressions but that's one place that they are used certainly in code and that sort of thing okay so um uh d d d I think that brings me to the end here um some the side effect that we're going to that you're going to see in the next video is that when you use parentheses you also get this thing that happened that is called capturing groups and then you can do all sorts of interesting things with find and replace and something called a back reference and that's stuff that I'm going to show you in the next video okay so U thanks for watching this one and all there is is more regular Expressions to come