hello I think I am am live welcome to another live stream a little bit of some that's always technical difficulties welcome my name is Dan I see that I'm here um um let me know oops I got to turn my volume off here let me know if you can hear and see me okay um we're live for another session now I have something to admit a bunch of things to admit which is that the whole last week has been kind of a blur there a lot of things that have been happening in this country country um I missed last week week even doing a live stream things are very busy with my um other job which is teaching classes at NYU um so think uh and today I'm in a bit of a tight schedule it's 10 of two and I only have currently till 300 PM um eastern time oh lots of Noise Okay okay okay okay okay so far this is a failure with the mic glitching let's see what I see what I can do about that is that better is there is that better by any chance did I fix something talk talk talk talk or is it is it still bad I pressed a button no no it's not better I can't I okay um all right test test e e is this better am I good any better I'm watching this chat with baited breath better okay great yay okay I switched cables oh my goodness very very close to not having a live stream today everybody but so far uh hello Arvin I love seeing all those hearts okay so um let me say a few words in a matter of introduction my name is Dan uh I attempt to do weekly live streams and make programming tutorials in the kind of idea of inspiring and uh teaching uh people and to to be creative and think differently with code that's not a good way of describing it um today is Tuesday November 15th um a lot has happened in the last week um and I would like to before I begin doing some tutorials I would like to read from you the um so PE so first of all so one thing that's um always been a little confusing to me is that turn it up okay yeah all right I turned the volume up a little bit um is that I I I do a number of things I work at New York University Tish School of the Arts a program called ITP spent almost all of my time there um I also uh work on something called the um processing Foundation the processing Foundation uh is a non forprofit uh uh Foundation organization that uh whose mission is to uh promote software literacy in the visual arts and visual literacy in the technology roed fields and to make these fields accessible to diverse communities those are my two primary things that I do um this YouTube channel is a bit of an independent project it it has a lot of relationships to the processing foundation in that I do a lot of tutorials around processing and p5js um but what I want to do for just the first five minutes here is piggyback uh off of the p5js projects community statement and I think it's really important um uh after the um sort of election here in this country to make this statement as part of this YouTube channel and to um uh talk about just how I Envision and think about this community so this is the P5 J JZ community statement it was not written by me it was written by uh um contributors to p5js I believe it was created at the p5js um uh contributors conference that's I don't know if that's right somebody fact checked me on that um but I'm but this statement uh Works goes for this YouTube channel as well we are a community of and in solidarity with people from every gender identity and expression sexual orientation race ethnicity language neurotype size ability class religion culture subculture political opinion age skill level occupation and background we acknowledge that not everyone has the time financial means or capacity to actively participate that's referring to the open source nature of p5js but we recognize and encourage involvement of all kinds we facilitate and Foster access and empowerment we are all Learners and this is uh how I feel about this Channel I want this channel to be open accessible inclusive for um everyone and I would like this channel in particular to be a friendly place for beginners um and people who are new to coding and creative coding to feel welcome and included in part of the discussion so I want to make that statement at the beginning of this live stream um and um because I have I would love actually you should read this whole page I'm going to read a little bit more of it to you and then I'm going to move on to talking about node in practice we are not C snobs we do not assume knowledge or imply there are things that somebody should know we insist on actively engaging with requests for feedback regardless of their complexity we welcome newcomers and prioritize the education of others we strive to approach all tasks with the enthusiasm of a newcomer because we believe that newcomers are just as valuable in this effort as experts we consistently make the effort to actively recognize and validate multiple types of contributions we are always willing to offer help or guidance we listen we clearly communicate we admit when we're wrong we continuously seek to improve ourselves we keep our community respectful and open we make everyone feel heard and we are Mindful and kind in our interactions um okay so um so thanks for tuning in thanks for um listening to me as I read the p5js community statement and um I hope that you enjoy this YouTube channel and find it useful and I hope that you will be in touch in the chat and on Twitter and all the other ways that we can be in touch with each other and help support um everyone in their desire to learn more and create and uh communicate Express themelves through code the internet technology all that sort of stuff okay so um I'm a little bit it is 2 o'clock I have exactly one hour and um in my last session I'm just going to pull up the playlist that I didn't get to finish I I don't know if I'll get to finish it today um but my most recent uh playlist session eight which is um the topic was looking at how to build your own API in node and the API example that I'm building uh is um a sentiment analysis API since why not since this is arguably these these sessions from this fall are all about programming with text so that's useful so uh I I'm going to like kind of pick up right where I left and I've got a couple more little short tutorials to make now I'll say a couple other things about my plans for the rest of this uh 2016 year which as far as I'm concerned 20 2017 can't come soon enough maybe 2020 should come soon enough but um but um uh let me okay so if you recall what I'm doing right now in this fall is making videos for this course uh programming from a toz which is everything can be found shiffman Donnet toz these are all written tutorials on a various topics with um with videos so right now I'm working on this page which is building an API with node and express and you can see I've got some examples I've got some text descriptions and I've got some embedded uh videos so before the end of 2016 I hope to finish this page I want to do some videos about working with a database as service something called Firebase that you may or may not have heard of so I already have a written tutorial but there are no videos for that yet as well as um looking at Chrome extensions so those are the Firebase topic is a smaller topic probably can happen in a shorter session the Chrome extensions is a longer topic that will need a longer session so it is the middle of November and I have until the end of December to get through all this stuff I'm hoping that actually I'll get through this stuff relatively soon and return I would like to by the end of the year and maybe for like kind of like a holiday special just do some fun quirky coding challenges um some different algorithms that I would like to explore and as well as um my most popular videos which I've said before are the where I take an old old kind of classic arcade style game and try to make a JavaScript version of it so I'm I'm hoping to do those kind of things before the end of the year this spring I will be returning to the nature of code materials which is physics and animation as well as starting to look at machine learning topics so that's all coming in the pipeline uh um now another thing I'll say just as a matter of updating you to what what's happening is that I have started having guests and in fact a later today I just didn't get to do this morning I will make live a tutorial from TGA brain uh who is one of the teachers and alumni of the school for poea computation which is where I'm recording the videos right now um and she has a tutorial about doing uh working with physical sensors and p5js so that tutorial will uh you'll see that um in the channel in the Stream later today and then also if all goes according to plan at around 6 P 630 pm uh eastern time today I will be welcoming Jane uh Fred off into the studio and Jane frol is a uh creative researcher designer game designer um she does amazing wonderful work and she's going to talk about a game called Slam City oracles and how she made it and I'll ask her a few questions about that and if you're tuning in live you can ask questions in the chat so I'm also trying I have very limited time these couple weeks but as uh as time goes on I'm going to try to have more guests to bring you additional content and different voices and different different faces from just me in this channel okay so um I'm going to get myself set up here you can uh I'm I'm kind of keeping an half of an eye on the chat so if you have a question in there you can ask um but in the words of Jane let's make it happen Okay um so what I've got to do here and I don't have my sound stuff hooked up because I had a bunch of issues so I normally like to play backup music when I'm background music when I'm just in the let me get myself situated here um but let's see if I can find where I left off um Session 8 API 1 so let's let's copy that I don't remember where I left off let's copy that into API 2 I also have a little bit of an issue where my whiteboard camera I just went all black isn't working so I don't know if I'm going to be able to use the Whiteboard uh today but that's okay I think we can live with that so this is where I left off last time let me run Adam as a text editor um boy there's a lot of great questions in the chat um and um um actually I don't know if someone's asking about D3 you know in the hope that I would be able to make a video tutorial about everything and anything that exists in the world I would love to do something about D3 um but uh it's not on my list in a um in uh something that I'm GNA get into soon but that would be a great topic for a guest to come in and do a tutorial okay um so here is my node server here is the web page okay so let's let me open up terminal I'm just trying to catch up to remember where I left off and I should have watched the last video I made which was two weeks ago but um if I look at this example um uh where am I uh oh no no I want to be in desktop sorry oops um trying to get to the right folder right now and I'm going to API 2 and I'm saying node server and I'm running the server did I talk about node Monon I think I did I'm going to run that okay and now I'm going to bring up Chrome uh Local Host I don't remember what port I'm running it on 3000 hello oh but I don't uh the point of this is that okay so this is where we were last time we're creating a sentiment analysis API one of the things you can do with the sentiment analysis API API is add words to a quote unquote database which is here database is just like hardcoded in the code and so if I try to add something I'm going to add for example uh add rainbow uh five this I have now gone to I'm just reviewing where I left off I'm gone to this route add rainbow 5 I get the parameters from that route which are rainow and five and if I look now in terminal we should oh I don't have any console logging going on um it sends a message back that it was added and then I can also go to the route all and I can go to the route all and I can see H so I should oh rainbow is in there sorry and oh rainbow is already in there as one of the ones so let me add something else add right was using like purple three that is now added let me go to all and I can see that I've added now purple to this list great that's working and I also have a search route if I look for kitten not found but if I look for purple it's found and I get the score okay so this is what I'm doing I'm building a sentiment analysis API now what are the other pieces of this that I need I wanted do something about persistence so I want the the data to be saved um so I want to save the data to a Json file every time a new word is added and then when the server restarts it loads the Json file okay so that's one thing I want to do another thing I want to do is create a front end to interact with the API as a way of just being able to see how it works and see how you can interface with your own API that you made so that's two things and then I also third thing is I need to cover to how to post to an API the difference between a get request and a post request let me see if I can get this camera working because I kind of feel like I want a diagram for that oh that's promising I heard a click so I think if you would you just bear with me for a second if um you're gonna have to uh look at a blank screen for a minute but I promise I'm still here and I am now changing my view to uh pre to see the preview and then I am going to uh edit shot um and I need to go to capture device 2 and then I need to change this to 59.94 and um then I also is this the preview I also need to oops how do I oh I need to go to here and zoom it in a little bit and do this so that you can see let me zoom in a little bit more I swear this is going to be done in a second okay so not my finest work but now you should have a whiteboard shot and now I'm only coming in one ear right so I have to fix the audio for this this is really uh so much setup time um which is really a problem when uh left uh okay now if I am over in the Whiteboard you should be able to hear me in both ears now okay and I should be able to switch back and forth like this okay I am set up um okay so let me look for my Eraser uh okay so this is my list so I think maybe what might make sense to do first is talk about persistence so the uh very first tutorial that I'm going to add to that list today is persistence meaning how to save data over time now um what I want to do before I add this is I want to look at one of my existing examples just to review in my head uh how I did it um whoops so I'm going to the GitHub repository for the class um and I everything everything in my brain is broken today this is me getting back into this I've kind of I miss a week and I lose track of how everything works um go into my API examples into um let's look at the spell check one no um is this the one I want to look at uh read file sync yes that's what I want uh and then save file okay I don't actually need to look at this I can add this on the Fly okay and uh okay so um so I love seeing the chat going and I love seeing that there are so many people here I GNA just switch to a particular view so I can see better um who's there and the camera went off I will fix that uh okay okay so here we go I'm going to try to pick this back up and I'm going to start with have this screen over and we are going I'm going to talk about um how to save data how save data to a database except I'm not really going to use a database yet okay so uh here we go I'm gonna this will be so at for those of you who might be new cancel um what I do with these live streams is I um I have a lot of wasted time in them while I get set up and figuring out figure out what to do and then after the live stream is over the full thing gets archived but I edit uh I don't do this Mata who gratefully um does this one does this work really wonderfully edits together um uh portions of it as tutorials okay so um thanks for being here everybody thank for bearing with me I'm about you know at this point like 40 minutes later than I really meant to get started but here we are I've got about 45 minutes left and I'm GNA just hopefully something nice will happen in this session and just keep going okay so I'm trying to okay all right welcome so this video continues the series about building your own API in node and in this video what I want to do is add a very important very key piece of functionality which is persistence so right now this particular API that I'm building in node if you recall in the code at the top of the code just has hardcoded essentially a database a database of words and their sentiment score rainbow 5 unicorn 3 Doom neg3 Gloom 2 so that there but there and I can add um and I can add to it so I can I can go to a particular route and say add purple 4 and then if I go back to all I'll see that purple is there but as soon as I go to terminal quit and relaunch the server and go back purple is gone so I need some mechanism by which I can save the data forever whether or not I'm running the server quitting the server not just in memory and the way that this is done is typically with a database now a database is a big topic and I expect that in the uh what I imagine future amount of time that I have in my life to make videos I'll get into a lot of different facets of it so what do we have so far is we have just like uh data in memory that's what I have so far quit the program the data is lost one quick and dirty way to save data to have data persist over time is simply to save to a text file it's easy to forget that you could just have a text file as a database right I can have a text file that has a list of words in it word comma score word comma score and I could just save all this stuff and load that when I when I run the program a way to make this even easier is to actually save this to a Json file Json standing for JavaScript object notation so the stuff the stuff that's right here did I switch back and forth I hope I did was I in the right screen somebody in the chat somebody would have told me if I wasn't in the right screen mat edit this far out um uh I forgot I was had by momentum I lost um yeah all good okay um this data if you look at this this is this is Javascript object notation this syntax of having a variable full of key value pairs that's Json so I can actually nice option is just save the data to a Json file and then uh load that Json file every time the server starts so this is actually the way that I'm going to do it in this particular tutorial but this is very limiting first of all if I have a massive amount of data huge data set this isn't going to work very well I have to like load this like giant text file and like save this giant text file all the time that's not going to work very well you know if I if I care about security and I have like private data just having it all just sitting there in a big text file like text file full of everybody's like logins and passwords that's not going to work very well so there are a lot of reasons why this isn't a particular great solution but for a quick and dirty project for understanding how things work playing around in node I think this is going to be a great demonstration but I will be making videos in the future that look at other database systems namely one called Firebase Firebase is something that's referred to it's a Google product database as service meaning fireb you don't have to have your own server you're just a program and you're like keeping track of stuff and you're like hey Firebase can you save this for me I'll ask for it later and then later you come back and say Firebase got I have that data so you get an account you sign up you send a data you ask for data and it has a lot of sophisticated um features so that's certainly one thing you can do and then of course you could use a quotequote a real database or some type of database system there are other databases Service uh products by the way so you can find those but you could use something like uh couchdb or mongod DB uh or uh another uh database that I actually like which is very simple which is called nedb I think so these um are all database systems that you can use with node or other server side programming Frameworks so uh at some point somebody remind me hey Wen but I'm definitely I have a whole bunch of examples already for Firebase so I intend to do that but I'd love to uh look into this kind of stuff and make some examples with that as well but in this particular video let's look at even just what saving a Json file gets us okay so uh back over here I'm going to go back to the code and the first thing I want to do is let's just actually make that Json file ourself so right here I'm going to in my node project where my server code is I'm just going to create a new file and I'm going to call it a words. Json and in that file instead of um instead of having this in the code I'm just going to take this and I'm going to comment this out and I'm going to put this into words. Json so here is now a Json file uh with the initial data that I want for my program to start with so now what I want to do in the in in the program is instead of having VAR words equal the hardcoded data I want to just load from the file I want to do something like you know if I were in like client side P5 land I would just say like loadjson words. Json right I want just to load whatsoever in that file and stick into words but this is not node code this is uh P5 code so I need a different set of Syntax for that and the the package that I'm going to use node package file is called file system FS so if I come here to the file system package um I want to look for the docu well this is good enough for me you can see there are lots of functions for writing a file writing write file sync we're going to have to talk about that write File versus write file sync and what I'm looking for is really read file uh read file oh there it is um oh you know what I'm in the wrong package I'm in the file Dash system package the package I want to be in is like actually just called FS I don't know if it's the same thing or not oh well time out pause is this is interesting to me is it no longer called FS that's what I've always used is it called file system now file extend node FS origin like what's what's going on here does somebody know what I'm talking about uh this is a different let me look um node FS package this is going to be edited out this is where I want to be I was in the wrong documentation page let me back up and start over um because I don't want to use a separate yeah yeah yeah yeah I want the official no JJs so I don't know where to um go back to but I I think this can get stitched back together thank you everyone in the chat I've got it now um so I'm going to look for um okay I think this can get spliced back in somehow so to read and write to files I need to you I need to look into um all right I was saying I was saying I can't use this p5js code so how do I do that in node well what I need to use is the fs uh module so FS node um uh node I'm just going to Google fs and node which and here I'm going to get the documentation for the file system API which is builtin part of node it's not an extra thing I have to install so this is the document documentation for it there's a lot a lot of functions what I'm looking for is one called read file and right here so you can see first of all there's fs. readfile and Fs readfile sync so why would I use one versus the other this is something I definitely want to talk about but let's just at first and actually I'm going to start with using read file sync so what I'm going to do is I'm going to say VAR FS equals require FS I think that's right this is like importing the file system package it's builtin part of node I don't have to install it but I do have to reference it in an import or require statement and then I want to say words equals FS read file sync words. Json and let's just see and then I'm going to say console.log words let's see what's happening here ah okay so it runs and look I read the file there's the file perfect there's my contents what is that so one thing you have to realize is the node file system package is just reading the raw data of files and writing the raw data out it doesn't know oh I want this to be like Json and all of that so if I have that raw data from the file but I actually want it to be JavaScript and JavaScript object I need to parse it and there's a quick and easy way of doing that so actually what I want to do is I'm gonna say I'm just going to say VAR data equals that and then I'm going to say VAR words equals Json parse data so this is something you're going to see once I'm using a a local files when I want to read a file I need to interpret it as Json when I have a JavaScript I need to interpret it as a JavaScript object before I can use it when I have a JavaScript object and I want to save it to the file I need to convert it to just plain old text and then save it to the file so let's look how that works now and you can see there we go so now my server is reading that stuff so we' got step one in that everything should work as it did before all and I could add something but I'm still going to have the problem as soon as I quit the server and relaunch it anything that I've added will be gone so how do I now have persistence where in my code do I want to save data to the file itself well I want to do that anytime I add something new to this list and if I go back to the server program the only time I add something new to the list is right here under adword add word so this is where I want to save data now this brings me to another important point which I glossed over which I will come over here to discuss for a second sync versus no sync so there are both read file sync that's a function as part of the node file system package and there is also read file without the word sync there's also right file sync and just WR file what's the difference the difference is this is synchronous or also known as like a blocking line of code meaning if I come back here if I'm using the sync function the next line of code will not execute until that action has been finished and in this case that's what I want when the server starts up I don't want to do anything actually until the data has been read so I want to use the synchronous verion so I load the data and it makes I don't have to have a call back and it makes writing the code a little bit simpler however if I'm going to perform an action where I'm reading and writing to files while a user is making an API request I don't want to use the sync method because that'll actually lock up the server while it's waiting to do this operation I want to use the nonsync asynchronous version so a call back will happen and the server can still listen for other connections and that type of thing so this is now a moment where right here under um adword I want to write the data to back to the file but not but asynchronously so let me show you how that works so first of all um this is a little air handling that we built in last time so I don't want to write the data if there a score wasn't given so I want to write the data right here so I can say now write file uh words oh let's let's look at the documentation uh let's look for right file right file so it looks like write file I need to give it the file name and the data and there's some other options and that sort of thing so but I'm going to do it simply I need to say write to words. Json and now a call uh the data which is words and then a call back uh finished I'll call it and then I could say function finished you know maybe it gets an error or something I don't actually know I should look this up just going to say console log all set so let's look at this now and see what happens now now first of all I've made a a Big M I've made a big mistake already but let's just see what happens anyway even with my mistake probably going to get an error or something like that so the the server has restarted it's listening and waiting let's go to the ad route and I'm going to say uh I want to add the word purple and the score three now right file is not defined okay oops silly me I actually just made a mistake in my code where I need to say FS I need to refer to that file system module that package fs. WR file but that's not the error I was expecting uh the server should restart okay it has hit refresh H thank you for your word but let's look at ah crashed unexpected token blah blah blah object object it couldn't figure out how to write that to a file right because once a again just as if I'm reading data from a file I'm getting the raw bytes and I need to parse it as a JavaScript object before I can use it now what I need to do is I need to turn it into text based Data before I write it to the file and the way to do that I can say just VAR data equals json. the opposite of parse or the inverse is stringify so I can say stringify words and then write that data to the file so now that I've done that now one thing I want to do actually is I want to stop using nodon because nodon restarts the server uh every time um whoops uh I have oops what's going on here error uh undefined one unexpected token Json oh you know what I I messed up the file so this is what I wrote to the file because when I made my mistake so that's why it's not working um so the reason why I don't want use nodemon right now is because every time I rewrite that file it thinks like oh something changed it's going to restart the server which will mess things up so right now I just want to manually stop and start the server myself to make sure things are good so okay so now the server starts it reads the data from the file then uh what I'm going to do here is I'm going to now go to this route again and I'm going to hit enter thank you for your word I'm going to go back and I'm going to look and look it's there oh but I lost the formatting like my Json file is all just one long thing so one thing that that's I mean this is sort of like a small point and sometimes it it could matter in various scenarios but since we're talking about it I might as well talk about it um this stringify function takes the JavaScript object and kind of makes it a string with as few characters as possible so no white space to make it kind of human readable but I can use some other arguments um and I can add like uh I forget why you put null there to look at the documentation for stringify but uh two meaning that I want to use two spaces for for an indent um so if I if I do this and I restart the server and by the way purple is already there so purple's now there forever and I can go to uh Pink and add the number six thank you for your word and if I go back and I look at that we can see there we go so every time I go to that route it rewrites the entire file with the current list of words every time I quit the server and start the server back up it reads the list list of words so this is the full round trip you know there's lots of inefficiencies and is issues again with scalability and privacy but this works for a simple project where you just want to save a high score list or a table of words in their sentiment score you can do something like this and I'm sure you could imagine some other scenarios where just this basic idea is plenty good enough let me say another few things about this though before I move to the end of this video one is that I've kind of made a little bit of a mistake here which is that even if something goes wrong here I still send the reply like thank you for your word so really probably I should wait to send a reply to the client who added this word until that file has finished being written so I would say it probably makes sense to um to put that in here and I'm G to send the reply actually and and because I had this error checking I have to send the reply up here I can think about if there's there's a better way but I'm going to have if there's no score I send back a message score is required and if it gets the data if it gets the word adds it writes the file and all that is successful then I'm going to say and you know what I think is useful in an API is for a word to actually um for an API to just send you back the data that you've sent it and then I could say something like status uh success so in other words sometimes when you're making an API request or you're adding something you're sending some data to an API and you're doing that like many many times as a client when you get a reply back you need to match it with which one you sent so if you get some information back that you can match that can often be helpful so even though this is redundant and I don't personally need this information I think it's useful to add so and I did sort of a very awkward thing where my variables all have the same name but this will this will actually should work so let's uh restart the server one time we can see I've I've got all the words that I added before and now if I go back and I say add um uh um flower uh seven and I hit enter success the word flower was added and if I go to all we can see flower is in there pink is in there purple is in there and I can even restart the server I restart the server and there it all is again so this is the full round trip of how to receive from a get request through a route data from a user save that data to a file and have the server always keep track of that data so um I'm still got more to do in in terms of building this API which is actually like get some text and produce a sentiment score I need to look at well how would I build like a client a front end that would actually like interface and interact with the API but this at least now we've seen a little bit about saving data thanks for watching okay um um how did that make sense everybody there we got we got one one little extra tutorial in I have a half an hour um I think what I want to do in the next one is make a client for it um so because that's going to be necessary once we do look at doing a post electron tutorial that is a great idea I would love to do an electron tutorial if only I had so much more time okay so let me just keep moving here um I it's a little bit warm in here with the light on um so what I'm going to do now in a way is kind of like the easy part for me at least um and I'm going to go into here and we're going to start working on um working on the uh client uh the front end so I kind of I'm going to use P5 for this and I'm thinking about the best way to do this um so let me get um let me go to uh desktop A to Z um I'm sure I have some actually I'm gonna do the ridiculous thing that I always do which is P5 j.org download uh p5js complete I'm going to uh do this I want to get to the apan coding challenge today that's not gonna maybe if I can come back later and do it um tempted to just do the um coding challenge I had envisioned today instead because that in a way could be the front end okay fine I'm GNA do the the interface yes I can use P5 manager Tut tuber suggest I've just I'm I'm kind of like a terrible I have very bad habits but I can't help them sometimes okay okay so here we go I am going to joran pringer so how' I do okay um okay so this is probably going to be the last short little tutorial where I'm just going to add a little front end for this and I still have a a bunch of pieces to f finish up with this which if there's um time actually later I will in fact be able to after there's a class that starts here at 3 right in the room next to me so noise wise um I can't be talking and broadcasting very loudly but as soon as that class ends um I'm GNA have an interview with Jane that I mentioned earlier and then also if there's a little extra time I might do one more uh tutorial about this as well um okay um here we go let me cycle the camera okay um hello okay so now what I would like to do in this video is actually add a frontend client to this particular API and now there there's there's a there's a kind of question in my mind just floating around here which is like well why am I doing any of this and so on the one hand I might be making a a kind of a build your own API in node just for one person and that's for myself like I might want to make an API for of a way of storing data and communicating and doing server side stuff for my particular front end I also might want to make an API that is open for other clients to be able to connect to and that's something that I've got to get to in this list so at some point I'll show you it's actually very easy to open up um your API to other servers to make requests using um a node package called cores but I'll come back to that for right now I'm almost thinking of this as just my own little project and some of my project I need server side programming and some of my project I need client side programming but I need those two things to talk to each other so the first thing that I want if you recall one of the pieces of this uh program that we've written actually uses Express's ability to host static files and all the static files are in this directory called website but I I called it website just to like call it something but often it's called public or you could call it whatever you want unicorn whatever you want to call it you have a folder with files that you want to serve and I have right in there I have this index.html file and all it says in it is hello so if I go back to the browser and I go to the root page I see Hello and so um what I want to do now is I'm going to grab from my desktop a P5 and a P5 sketch so it has an index HTML file some JavaScript code and the libraries that I want to use and I'm going to actually go into um this particular uh uh API example that I'm making and I'm going to put that all in here and I'm going to replace so now if I hit refresh one thing is I don't have to restart the server by the way those server is going to be able to just serve up those files as they change and we can see now anything and I go over here and I can add some code I can say you know no maybe no canvas I don't want a canvas right now and I can say uh console.log uh running is your refrigerator running you better go and catch it and I can see ah so that sketch is working so now how do I do something to access the data that's part of this API so one thing is actually never mind that let me actually add a canvas and what I'm going to do is I'm going to say I'm going to say uh I'm going to say uh create canvas and I'm going to say uh you know 400 comma 400 and background uh 51 which is my background color of choice and we can see I now have a canvas woo it's huge uh no no no no keep stay large over there and small over here okay so now I have this canvas and what I want to do is I now want to say load Json SL all and I don't even know if I need that slash look at this if you've ever done anything with P5 or jQuery where you're loading something from an API openweathermap.org AI cityne York what I'm doing here is I'm querying the API but rather than the full URL the API is running on the same server that's hosting this JavaScript sketch so I could just say SL all or I can say slash search slash uh SL rainbow right I can go to any of the routes simply from the low Json function so what I want to do is do slash all and I'm going to then have a call back for when I've gotten the data called got data and I'm going to write that function and the data comes in as an argument to that function and just to see that it's working I'm going to say console log data so let's run this again we can see there it is I now have accessed in my client side code the all the data from that's running in the server and one thing that I'll do here just out of curiosity is I'm get rid of this slash I think it works with absolute or relative path so you can see that works either way okay now what could I do I let's say I want to um iterate all over these there's a kind of a trick this is an object so there's not an easy way to iterate over an object as if it's an array although there are plenty of ways to do that a way I like to do it is I can say VAR Keys equals object Keys data and I'm going to just show you what that gives you console.log Keys what you can see is it gives you an array with just the keys in that object so you can see this is the full object but now I have an array with just the keys and that's an easy thing for me to iterate over so I can do something like four VAR I equals z and I know I could do a four each or whatever everybody always complains but I am like just have like an old World style of programming like my for Loops like this and I'm going to say uh key equals keys index I I'm going to say word actually and um score equals data index word and then I could say uh you know VAR x equals random width and VAR y equals random height and fill 2 55 and text word uh at X and Y and let's see what I get now if we run this we can see and let's make it bigger text size uh 64 and you can see there we go so obviously I could um I'm I'm seeing now all the words that are in the database kind of visualized in the canvas and I could of course like color them I could think about visualizing in a thoughtful way I could make their font size and their color based on their sentiment score but I'm just showing you that I can access a particular route and then uh visualize that route visualize the results of the data that I'm getting through that route in a canvas but ultimately what I might want to do here actually even more importantly is I might want to add input ID equals uh word and then input ID equals score so let's look at what that looks like and I'm going to um I'm going to wrap that in a paragraph and I'm goingon to say word and I'm going to put a line break and I'm going to say score uh and slash P so now we can see on my web page and something's driving me a little bit crazy here which is this uh default styling we can see here oops that I now have this little kind of basic form it's barely a form but it's like I made a little paragraph that has word and then a text input box score and a text input box I just put that in the HTML directly and then I probably also maybe want to add some sort of uh button uh submit button and I can give that an ID also ID equals submit so what I'm doing here is I've made a little interface that has a place for me to type a Word and a score and I'm able to hit submit so why am I doing this because what I want is the moment I click submit I want to send what is in those two text fields to the route ad right I need to go to if I go right now to add um I can't think uh sunflower uh 43 we can see that that was added and now if I go back to here uh we're going to see that sunflower shows up there I don't I don't really like what I've done here with this um visualization because it's sort of hard to see what's going on let's make that a little bit smaller and let's uh let's just make it a I'm sorry I'm going a little crazy here but just bear with me for a second unnecessarily uh there we go so now I can see like all the you can see that sunflower was added there but I added it manually only by going to the route in the address bar but that's not really how anybody normally interacts with an API I don't know maybe I do that quite normally so now what I need to do is I need to handle that submit button so in P5 I can gain access to that through the select function so this is me using uh submit sorry this should say submit this is me selecting the Dom element with the ID submit and that button has the ID submit and now I have it in a variable and I can now attach an event like whenever the mouse is clicked on that button to I can say submit word and now I can write a function submit word where I get the word from the word El element and I can just say value I can get the score from the score elements value so select looks for the text input box word score uh um uh and then score and then the value function gives me the contents of what's in there so just to see that this is doing what I want it to do I'm going to say console log word score so let's go back so I'm not submitting it yet but let's go back and I'm going to hit refresh oh select is not defined guess what I'm these functions are part of the P5 Dom Library so I need to make sure I am referencing the P5 Dom library in my HTML which now I am p5.js and so now I can go back and hit refresh and now I should be able to type in uh uh cherry blossom two and hit submit and we can see that that I'm able to access those two values and now what do I want to do all I need to do is let's go to um load Json what's the route add SL plus word plus a slash plus a score so I can dynamically create this route in my code based on what the user is uh put into those two text boxes so now I want to now this is a little bit weird and I'm going to get into this in a future video where I talk about get versus post I'm actually doing something that's sort of against the Trad conventions I'm using low Json which is a get request to actually send data the word and the score to the server but I'm really doing that out of convenience because it kind of works and it's easy and it's simple you'll see in a lot of other scenarios if you want to send data to the server images large data private data you're going to need to use something called a post which cannot be done through lad Json but I'll get to that in a future video but so and then um I'm going to just add a a function called finished as the Callback whoops and then I can say um function finished data console.log data so I just want to see that it came back so I'm going to I'm going to send that data and see that it came back and then I'm going to so I'm going to hit refresh and I'm going to add uh a blueberry uh 10 and I'm going to hit submit and we can see that this was sent to the database now if I hit refresh again we should see see that blueberry is there why not though however once it's done ask the um ask the database for all the words again to like redraw what's in there so here this is what I did to like redraw everything I could actually put this in a function I could call this function like draw data and so when the program first starts I want to draw the data and then every time I submit a word and it's done I also want to draw the data again so now if I do this I can say hey let me add the word uh mango and give it a score of three and hit submit and now o look at that I one thing I forgot in my draw data function was to clear the background so because it drew it again over everything so I'm going to take this background function and put it right here in the got data function and I'll hit refresh again we can see everything's in there mango flour blueberry sunflower all these things what's another fruit that is delicious a raspberry I only know how to spell raspberry now because of the raspberry pie and it's like that's like the password or something default typing it in all the time score uh uh four and I'm going to hit submit and there we go it runs and we see the result so now I have an interface where I can sit here and submit new words to the database and I also have this sort of goofy front end which just shows me a very poor visualization of all the words that are currently in this database and if I go look in the server code I should be able to see hey look at this this words. Json file it has everything so even if I now quit and restart the server and go here again I'm still going to see all of those words so now we have both now we have an API with routes that accept parameters we have a we have a persistence saving all the data to a Json file and now we have an even an interface that allows us to interact with the API in one way and so the next video video that I'm going to do is look at how do I submit data to a server using a post and why would I need to use a post versus a get what's a get what's a post so that's what I'm going to look at in the next video that I'll make and then by the end I'll wrap it up and actually make this thing do some sort of uh sentiment analysis and give a score back when you post a large body of text to it okay thanks for watching and look forward to hearing what you think in the comments and all that sort of stuff okay um so uh so that um um I have about five or 10 minutes left so I'm not going to try to do the next piece of this um if I have time later today when I come back after the class is finished I might try to do that um but I do have about um five or 10 minutes if anyone wants to ask a short little question in the chat um I happy to um answer them if I can um I see that there's been some so AR ariani uh writes this is uh Way Beyond my head um so yeah so one thing that is tricky about what I'm doing which I've definitely gotten this comment before which is that um I've heard from people oh I I went to your YouTube channel I found it and it's all um it's too advanced for me it's ADV it's for advanced programmers and really my goal is for this to be um for um I would like my channel to be a place that complet complete and total beginners who have never done any coding before could come and learn and start to make stuff the tricky thing is that um um the tricky thing about this is that it's hard to find like where to begin and I need to figure out a better way of doing this maybe if I can eventually get my act together and get a title and a new logo and a new website but one thing I will just mention is that if you're interested in web programming JavaScript HTML CSS at least through the lens of p5js i al also get the other like frequently Comm frequent comment I get is like why are you using this p5js thing I don't want to learn that well sorry I guess but it's a platform that I invested in uh personally and also through uh the work that I do and so it's um I'm interested in U making tutorials with it and making it better so but by no means do I completely restrict myself to that but these tutorials here um one through six introduction these are for complete beginners who have never done anything before and then also this set of tutorials down here learning processing this is for complete and total beginners um looking at learning a processing which is a Java based platform for doing uh different kind of programming things um I don't know enough about scss and SAS to answer that questions um and I'll also mention here if you're interested in git and GitHub um this is a uh playlist that um is also for complete and total beginners if you've never used it before and most of the other playlists particular programming from A to Z and uh I'm thinking of this websockets one this Twitter B one nature of code all assume kind of what's in those two beginner playlists so if anybody has any ideas about how I can make um this stuff more accessible and easy um uh easier for people to find or get started and if you have a beg a friend who's a beginner like send them my way I want to see like how it works for them because most of the core audience I'm find at least tning the live stream are people who already know about programming I saw a great question um two questions one is um where is it where's I'm scrolling back uh oh coded in a full IDE Eclipse so um I do I I really want to make a tutorial about how to make a processing library and to do that you need to use eclipse and also just program with processing and Eclipse it's on my list please keep reminding me about that um I did an entire tutorial or someone has asking about marov chains um so I did a tutorial about marov chains uh it related to text text based Markov chains and that's part of the a toz playlist and I believe it is boy I guess um session five text now no session six so if you go here to session six there are a set of videos about um engrams Markov chains and I do a couple different uh challenges or experiments with them I don't remember what's in these but I did make them um Jason asks are there any benefits to using Json files versus something like now this is just what I think at this moment right now but I would say that the advantage to using a Json file over something like is you could just like it's just like you can just get started doing it really quickly and easily so I have a little bit of data I just want to save it just want to load it like I'm done in two seconds with just a few lines of code in the file system um U database is certainly going to have so much more robust and sophisticated functionality you know databases can be relational they can be really fast to do sorting and searching through them but you know you're going to have to spend a lot of time learning how the database Works how the particular node package for you using aod DB works so for a larger scale project and for a lot of time but for like something you're just making because you're making some like quick game experiment and you have this other Arduino cooked over here and it's talking to a node server which is hooked up to a sensor you just want to save like a bunch of readings to it using a text file a Json file I think is a great uh way of doing that um do you ever plan on making games in p5js or processing so yes um this is this is a question from minor Scotty I do plan on doing that I have a few um I I haven't I've been doing this kind of a toz course so I'm quite behind on my mental list of what I would like to do but if I go to my playlist and look for uh coding challenges uh where is that one um oh uh I'm logged in here so you're seeing all my private uh this is the video that I'm going to launch as soon as I um get um turn this off which is a guest tutorial from TAA that I mentioned I don't know why I'm not finding the coding challenges all of a sudden um here they are um so this particular video uh this particular playlist is where I will um typically if I'm going to do like a coding challenge to implement a particular game you'll find it so I did like a a Space Invaders one which uh and uh the snake game for whatever reason I don't understand wherever that is that is my most watched video which gives me sort of an inclination to do some more of them and I've had requests for uh Frogger and and uh Frogger and there was another one oh I did Flappy Bird also you can find that I did a a version where you clap too um I can certainly consider more videos about marov chains uh people are asking about python python is a really uh amazing programming language to work with in particular because of the access that you have to so many python packages for data machine learning data science text natural language it's not really an environment that I personally do a lot of work with which is a bit of a fault of mine but I do think it's an opportunity for me to look at how a lot of these kinds of algorithms and projects that are often made with python work and can be programmed in other contexts like processing and JavaScript but um um you know I certainly would if you're interested in the kind of topics that I do in this channel learning about python um and there's um a YouTube channel um um sj's YouTube channel which maybe somebody can post in the chat uh he does a lot of data science and uh machine learning videos with python and I am planning to do um some stuff on machine learning in the spring um Android development is not something on my list it's not something I know a lot about but I would love to have a guest come in and do some guest Android development tutorials for sure um okay so I think I am wrapping up for today I'm sorry this was a 1 hour and five minute live stream which is much shorter than they usually are so I apologize for that shortness um I might I am going to be back live in about three and a half hours with uh Jane frol I mentioned who's a game developer and artist and she's going to just show a project and you can ask her questions about it um and um but I might not be here unfortunately again next week due to the Thanksgiving holiday so next week's schedule is all crazy and things are a bit more tight now with the school schedule here and the NYU schedule that I have at NYU but hopefully by the time we get to I get to January I'll be back up and running with sort of like full uh weekly longer live streams but I I am really hoping to finish all the a toz materials this fall so hopefully that's going to happen um so thank you it's nice to see all these friendly messages in the chat um and I will see you if please come back and and um the everything I do would be archived so you'd be able to watch the video interview with Jane any anytime later but I but if you're um if you're around in not in like Europe in asleep or some other country where it's the middle of the night in uh in like three or four hours um come back and I'll post on Twitter uh uh time wise and I'll also try to make um the YouTube stream page show the time until that's happening as well okay thanks everybody and uh last thing I'll say is because Robert Perez asks is when am I normal live streams it was every Tuesday in the afternoon but it's been a little halfhazard if you go to coding rainbow.com um I I actually didn't send out an email notice for today because I've just been so but I posted Twitter and I also um if you sign up for this email list um you can um if you sign up for this email list you can um I do try to send out email announcements about the schedule and sometimes I just miss it but the other it's always archived and also um I'll just mention too subscribe and if you're interested um there is an opport you you there's I'm using a a site called patreon which is a crowdfunding site if you want to join that and join a slack channel that we where we discuss a lot of the videos and stuff okay um thanks everybody uh oh I'm going to play you out with my uh video trailer since it's the it's the edited one because of my uh legal trademark issues but I'll play that for you at the end you could since I didn't play it at the beginning and then I'll be shutting the stream off did you think that learning coding would be really rough thr your hands up in the air and say enough to enough do you want to learn to C and make some awesome learn that anyone can when you're with whether you're a pro this is all brand new learn the overarching concepts and some fun stuff to and with Dan is your guide come along for the ride on make a crazy pixel mirror to reflect your face you can make a jump to light speed into outer space you can generate a maze that can go on for days you can make your own terrain and some purple rain you can make a retro game to see how it's done and then tweak a piece to make it yours for everyone make some fract trees or Twitter Bots if you please and when the seeds are a se you can bake them your own ride the colors of code you can follow the road to