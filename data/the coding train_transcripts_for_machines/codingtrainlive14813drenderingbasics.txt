please somebody say hello to me somewhere it's been all 45 minutes since I started I'm having so many technical difficulties I don't even know if I'm just talking to myself people are saying yay yay whoo so that must be I don't have the chat so give me a second everybody welcome good morning good afternoon at this point my name is dan I am a person who likes honeydew melons it's gonna soothe me well I need to get the chat going so let me see if I can get that going over here and I live now see myself pop out chat close this I get a new member with the initial D welcome devs okay okay who take to everybody you know maybe I'll come back and do a little QA I'm not gonna do that QA thing again so if you for some reason you are watching this as a recorded archive I just live stream for a little bit I think that live stream from earlier it's just going to wander off into the unlisted category forever this will be the beginning of today's coding train livestream hopefully that nothing will crash I will just be here and I will enter the fourth dimension production values animations music all that stuff that I don't have alright so I'm still getting myself a little bit organized here and I I do like watermelon as is also being asked people say they don't like melon and I've mentioned this before a good freshly cut ripe melon is delicious it has very low acid it's soothing it's healthy what could what could possibly be wrong with I'm all about the fruit okay so let's just begin with the fourth dimension except we need to begin I got to work up slowly to that so let me open up the browser I don't need this do I need this one I'm gonna this ml5 thing that I was talking about I will come back to it another time and I'm going to leave up here understanding 4d this tesseract page actually I want this to like how do I not get it to autoplay off so I guess it's playing anyway I don't know I to just load the page with the thumbnail but that's fine we'll get a nice well make a thumbnail yeah this is pretty good all right then I need to open up process oh I need to get a new version of processing so they're processing 3.4 came out let me briefly download that if you're not familiar with processing it is a Java based program environment don't worry that's the usual problem that I have nothing new here you know we're gonna draw four dimensional melon that's a great idea did I break Facebook thank goodness what's what's what's what's popping up here nothing Mac OS X is what I am and oh it's already downloading I'm silly please support the processing foundation if you are so if you have the ability to do that all right let's move this over here place quit quit replace open yes okay here we go all right so the here's the thing I want to matrix no no no what's that website that I like matrix multiplication dot XYZ maybe yes threedimensional point and I want three want no no I want this I want three and then I want to this why won't it because it's to the columns the Oh does it need to be oh I'm doing this backwards and then whoops there we go that's what I want I'm sorry about that and can I make these any numbers I want okay all right everybody let's see if this camera is working nope let's see if this brings it back all right so I don't know where this might not have a place in a playlist anywhere but I want I'm gonna do two coding challenges one to render a 3d cube in two dimensions and one to render a hypercube of four dimensions in 3d which is actually rendered in two dimensions so those are the two coding challenges I'm going to do I need to have a function in processing which will do matrix multiplication for me in order to do these challenges so I am going to quickly iMessage actually before I started I'm gonna quickly code a simple function that just takes two 2dimensional arrays in and returns a new twodimensional array with the result of matrix multiplication all right so that's what this first video which may or may not even be a video separately edit a video I don't know yet but I might as well talk it through while I'm doing it hello this video is about just matrix multiplication that's the only thing it's about and I'm going to show you I'm gonna write a function to do matrix multiplication with simple twodimensional arrays in processing which is the java programming language so really I'm writing a Java function to do matrix multiplication now if you want to know a lot more about matrices and matrix multiplications I'll refer you to the three blue one Brown series on linear algebra but I also do have my own videos where I code a simple matrix library in JavaScript but this video is an anticipation of doing some 3d make 3d graphics in 2d so projecting a 3d shape into two dimensions and so to do those tutorials I need a function that will do matrix multiplication for me so if you're watching it if you're watching this this is why so what is what is the matrix that doesn't that was no good they headed that out alright so a matrix is a twodimensional table of numbers so for example this is a matrix now this is by the way what's often referred to as the identity identity matrix this is a matrix that when multiplied when you multiply this matrix by hold on where's my fancy new eraser people are complaining that job is about Linus is so much hold on I'm just looking for something I know I'm over here but just give me a second where I can't find that's fine I bought these new erasers here we go when you take one matrix and multiply it by another let's say this is the other and I'm going to write x Y Z here the number of columns of the first matrix must match the number of rows of the second Matrix and you can't see me writing that off my game here at least I'm not least the streams appears to still be working the number of when I perform matrix multiplication oh can you hear the furniture being rolled back and forth in the hallway let's see if that quiets down now ordinarily when we're talking about multiplication let me just it's gonna be amazing if I ever make it to the fourth dimension make it to the fourth dimension and then I'm just going to this is kind of interesting what this does what happens if I spray some water well that's good whoa this really cleans it well so did I do it what this side that's the like wet side and then this side is like the dry side maybe alright yeah take 479 all right don't worry this is gonna start to move along oh wait I'm getting an interesting comment from Adam Jay Austin doesn't that need to be the 3x3 matrix to be an identity yes that's the 2d identity make tricks though with just I guess let me look at what I did over let me check something here yeah but it's my sense of what I'm talking about and well not won't make sure that that this is the identity matrix for two dimensions so if I want to project a three dimensional point into two dimensions without stereographic perspective then this is the matrix I would use yes or square yeah good point okay fine well I'm starting over but I don't need this would yeah my identity would be so what's my terminology is wrong but because this would be oops no this would be the identity matrix but what I'm doing is I'm doing some for it to be a 2d identity needs to be a 2 by 2 matrix with ones down the diagonal and zeros in other places yes so this is the identity matrix for 3 dimensions so my my my terminology is incorrect this is this is a this is a projection matrix that just eliminates the Z so I know maybe that I can't call that an identity matrix but if I go to ortho graphic projection and here we would see oh I guess technically I should be putting but I feel like these don't matter right because that's just going to give you 0 so the way I always do it is just leave that out but and this is not identity so it's not an identity matrix and then actually this site this is for like the project there's more to it than this okay yes you write shade in the chat is making a very good point 2d shadow of a 3d object aka square all right all right everybody I won't use the word I'd am glad okay so alright so what is a matrix matrix is a twodimensional table of numbers for example this is a matrix and I could write on mass I'm gonna write three zeros down here just wrong no you know what you know what just for my for demonstration purposes I'm gonna leave it like this because this is actually a matrix that I'm going to use in my code itself this is a matrix it is two rows by three columns okay now I'm gonna show you here's another matrix here is another matrix and I'm just going to write X Y Z this matrix is three rows by one column right and so one thing that's very important is that when you do matrix multiplication matrix multiplication only works if the columns of matrix a match the rows of matrix B and you can see those match up here now what do I mean by matrix multiplication how do we multiply these two things normally when I say multiplication I might mean something like you know 2 times 3 which equals 6 or I could even like do something where oh I have these two what if I what if I did some like 3 1 4 and I just said two to one you can almost think of multiplying these and getting a new matrix that's 3 times 2 which is 6 1 times 2 which is 2 4 times 1 which is 4 but that's not matrix multiplication this is what's known what I just did here is what's known as element wise element wise multiplication it's not what I'm talking about here what I'm talking about here is matrix multiplication also relates to something called the dot product you know I'm gonna I there's too much to talk about forever and ever in this video I really just want a function to perform matrix multiplication with this and what this does is basically the way that this works is you matrix multiplication which I don't really like a good symbol for it so I'm just gonna write matmo right here basically I'm going to take this row and multiply it by is that right yes yes yeah yeah okay got confused here I'm gonna take this row and multiply it by this column sorry I'm just confused here if that had two columns it would still the number of rows hold on boy I already made a whole video about matrix multiplication and I like said to myself you never want to do this again I've done so many times but we're gonna do it again anyway alright let's actually so okay I want to do matrix multiplication let's go back to that webpage that I was at at the beginning and I'm going to I'm going to press multiply here let's see what happens whoa look at that it went up and then went sideways that's interesting let's go to next whoo look at that so what so what just happened there look at this I am going to take this row and multiply it by this column in a way that this number gets multiplied here this number gets multiplied here this number gets multiplied here and they all get added together so what I'm going to get is 1 times X plus 0 times y plus 0 times Z X now I'm gonna do exactly the same thing we can confirm this then we do exactly the same thing for the second row press this button I'm gonna take 0 times X plus 1 times y plus 0 times Z and I'm gonna get Y and then I am done so 2 by 3 matrix multiplied by a 3x1 matrix results in what a 2 by 1 2 by 1 matrix now so this is the basic idea this is actually the reason why I'm showing you just this one scenario is this is what's going to happen over and over again in the videos I'm about to make about taking a 3d point with an x y&z and projecting it into two dimensions and what this matrix actually just did is just eliminate the Z it's as if I am looking straight on at a threedimensional object and I just can't see the Z at all okay so now let's go and write the code to do this matrix multiplication yeah so Mobius in the chat just put it better it's a 2d shadow of what I'm looking at here is the 2d shadow of a point in 3d okay so now let's open up processing and let's so how am I going to make a matrix so I'm gonna do I'm gonna call this first matrix I'm going to make it a twodimensional array a projection and I can just say what I say 1 0 0 and I'm gonna format it in my own goofy way 0 1 0 and then I'm gonna say float point equals now this is silly but I'm gonna do 175 50 okay so let me just do this and let me do matrix multiplication all right what's wrong here and need another bracket all right so you can see and I guess if I want to be consistent I could do this and there we go so these are my two matrices I have this one and I'm just storing them as twodimensional arrays and I'm basically the first array the first index is which row and the second index is which column okay so that's what I've got right now so now I need to write a function I want to write a function which is going to return another twodimensional array to call it mat mul and it gets as its arguments to onedimensional arrays now here's the thing um I'm looking at the chat what did I do wrong yeah okay so this is my function for matrix multiplication now it's complaining at me what is it saying oh it has like some errors I don't see any errors my ate has an extra space oh thank you I'm just looking why no let me just see something oh but it's not void what's I'm like losing my mind because I don't know Java anymore okay it's just because I haven't returned anything right no it should be fine as a local why is I think it's a this is so weird if I just like forgotten Java completely oh oh oh it's just a weird processing thing okay all right okay ignore me I'm back oh my god our him nowhere close to this okay okay okay all right first since I'm in processing let me just add a set up function here because the idea is what I want to do is I want to say float result being a new matrix is is something like the result of matrix multiplication between the projection and the point Matt mole so I need to write my own function of course it's complaining to me because it doesn't know what this is I need to write my own matrix multiplication function so I'm gonna go ahead and do that right now and I'm gonna say this is a function that's also going to return a twodimensional array and it's going to take two two matrices in which are two and then it's got to return something so let me just add return null at the bottom here so now I should have no errors no errors so this is now this is what I want to do I have projection point I want to be able to matrix multiply both of those and get the result so how do I do that well one thing as I need to do is I need to know columns a is a dot right okay how is it a dot length and then rows a is a index 0 dot length does it not let me do that yes okay so in other words I first want to figure out the columns and rows of each one of these because that's going to be pretty important now it's a twodimensional array so if I say index 0 the length that's actually that's the number or no so this is the columns this is the columns right the number of things in it is the number of rows right we can see here like just a dot point dot length is three point index zero dot length is one so that's the columns of a and and now the columns and rows of B or B dot zero dot like now this assumes that there's at least one thing so an empty matrix this is going to give us an error but big deal now the other thing that I need to look at is I need to make sure that the number of columns of a matches the number of rows of B so if columns a does not equal rows B then I'm going to just like return null and maybe print line columns of a must match rows of B ok so now we have a little and then now assuming that everything is okay I can now say float result is a new array with the number of so hard the number of rows of a and the number of columns of B the number of rows of a and the number of columns of B okay so now we can just go through just pause for a second oh there's a great comment in the chat why would they be float I'm pretty sure not linked as an INT yes these should be integers there's no reason to make them a float in fact it's only going to cause me problems I'm just so used to programming in JavaScript I don't have to worry about this stuff and so to me float is like var let that sort of thing but great pointer Const okay so that's a really great point now pause again for a second what I okay so what I need to do first of all is I need to fill every single spot of the resulting matrix so I need to go through all of the rows and then I need to go through all of the columns whoops result oh wait wait yeah result this is silly cuz I could just use rows A's and calls B but I'm gonna owe these don't have sorry I need to go through all the rows which is rows a and all the columns which is columns B sorry I was imagining like in my previous and this is for I made this matrix library so this could be the beginnings of a matrix library potentially if you wanted to write your own fun have at it I'm like Sisyphus and I just programmed the same stuff over and over again and I make the same and then I get all the way up to the top and my matrix thing works and then it the matrix multiplication rolls all the way down to the bottom the hill I forget how it works if we lay and have to like push it all the way back up again this is my life alright so okay so now what I need to do is now do that dot product the reason why I say dot product is really what this is is it's the dot product of these three numbers with these three numbers so I need to take row from one and the the row and the column here okay so what I'm gonna do is so the dot product needs a sum so I'm going to say sum is zero then I need to go through all of the columns again I guess I'll call this K columns B and then I need to add up what do I need to add I need to add the the the J sorry I need to add this which is in position most in position zero zero but that's really positioned okay I think plus a I K times B K J does that make sense right because I'm going through all the columns of B all the rows of a and then K is just moving moving me along all the columns of a and all the rows of B right this is so I'm gonna go through I'm in column I'm in row I and I'm in column J and then I'm gonna take K which from row I times from column I times Rho Rho J right though I actually think I have this right but basically what I let me let me actually make this more clear this is row I column K and so row when Rho I is 0 K is the thing going up this is Rho K is the thing going up column J which is fixed here just zero so look at that this should be what I have here I want to take and multiply add all those things together and guess what you might have to pause this video and and and make sense of this yourself I shouldn't practice this the result I comma J is that son so now I should be all say return results results oops return results this is by the way what happens when you don't have numpy your life becomes I'm sure there's plenty of matrix libraries for Java I just can't bring myself to use them alright first let's just run this and see if I get any errors so no errors came up that's good I want to write a function I'm gonna call it log matrix or let's call it print matrix oh that's already a function in processing actually oh so great if we get to show that later all this is so exciting okay I'm gonna call I'm just called log matrix and it's gonna get matrix M and then first we're just going to get the columns and rows columns and rows and then I'm going to print line columns by oh no rows by columns then I am going to print line some nonsense and then I'm going to say I'm gonna do this nice little loop again this double loop and this is rows and this is columns and I'm gonna say print matrix row column plus plus a space and then when I get to the end I'll do print line and now what I should be able to do is I should be able to say to test if this works I should be able to say log matrix projection log matrix point log matrix result so now let's see if anything I did work correctly all right let's look oh no no no it's wrong well I've gotten close so okay first of all let's let's do an extra I need an extra print line in my log function let's do when it's done let's do an extra print line okay we run this again so I have some mistakes so the good news is this is right two by three this is a two by three matrix and that looks right this is a three by one matrix three rows one column that looks right and the result should be ups and there and the result should be oh wait hold on a 2 2 by 1 matrix 7550 now I oh we're not 7550 I used different numbers it should be 175 I mean technically if I want to match that web page let me go back how can I go back no whoops ah okay whatever you get the point I lost everything Oh what was I doing this should be we know this should be 175 that's what I should see right 175 X Y so something is wrong in my matrix math calculation so let's look at this I'm staring at it as if as if that's going to help hold on a sec here look at some other code I wrote the other day rose a rose a columns B oh this should be this is columns a let me just make sure that's right yeah whoops okay that's the mistake okay I found my bug this right here this is the bug this is the offending line of code columns B why is that wrong that is wrong that is most definitely wrong let's go over and look as to why it's wrong remember how I was saying K is counting through each column here and then counting through each row here that's the whole thing that has to be equal three columns three rows three columns three rows so that number could either be columns a or rows be either one of those things is that what I put in there no so this should be columns a could be rows B that would also work and I am now going to run this again and voila we performed matrix multiplication now I need I want one more I need one more helper function if you will bear with me what I need now also I'm going to need this for for the future in these videos that I'm intending to make I need a function because I'm gonna use P vectors a lot so a P vector by the way like P vector V is typically how I'm going to want to represent a point so if I want to represent a point I don't want to have to write it like this all the time my code that's gonna be a major pain but if I want to do matrix multiplication I'm gonna want a some tool to convert from a point to he vector to a matrix so I want to function Veck back to matrix that receives a P vector and then I want to function probably also matrix to bec that receives a a matrix and so let's write both these functions so this should be pretty easy I just want to create a matrix which is it has one no three rows at one column and then I mean I'm gonna be really lazy about this I'm gonna say M 0 0 equals V X and then whoops 1 I can't type 1 and 2 V dot yv dot Z that's useful and then I just say return M then I'm gonna write the other function here now which is I'm gonna say P vector V is a new P vector and V dot X equals M what am I saying here which is M 0 0 V dot y equals M 1 0 now I might get some matrices back that don't have that many rows so only if m dot length is greater than 2 2 then I can say V G equals M 2 index 0 and return V so assuming these helper functions are written correctly now I don't need this I'm going to take this out and I'm going to say we're set up I'm going to say float point equals Veck 2 matrix Veck to matrix V now I can do that then I also want to say just to be sure I'm gonna say yeah I'm gonna say now I'm also gonna say P vector V equals matrix to Veck result and then print line V also okay let's run this now and we should see what do we got so I have my two by three matrix my vector got so I really just to be clear about this I should probably say right up here also print line V so just to see that everything worked this is my P vector 175 50 this is my projection matrix this is my P vector converted to a 3 by 1 matrix this down here is the result of the matrix multiplication as a vector and this down here is that same result all of this to just take the Z component out but oh boy we're ready now we're gonna have rotation matrices I'm ready I'm ready I'm ready to move from the first dimension to the second dimension so I look forward to seeing you you can check this video's description for links to where I actually do 3d rotations in 2d and then eventually 40 rotations in 3d see you there Kelly asked can you just overload Matt Moll that receives a point then converts it to a matrix then calls Matt Mull they call the other one yes that is a great suggestion that is a great suggestion let's do that all right oh one more thing suggestion from Kelly in the chat in terms of making a useful helper function it would be really nice for this here to be right the first thing that's passed in the second thing is the vector so so I should have an option where this is a vector and then I would just say I could just quickly come over Liz's overloading the function I'm running a same version of function but with a different argument this is how this is done in Java I would say Beck to matrix B and then I would say return Matt mall a M right so if I do that then now I can get rid of this line and I can just say V here and I should have the same result and get rid of this log I don't think I need these logs anymore just to make sure it works yep so that that worked we can see that worked as well so this makes our life a little bit easier now again this is by no means comprehensive in terms of matrix mathematics but I happen to know that for the next video I'm going to make where I'm going to take 3d points and project them into 2d this is all that I need see you in the next video which I will link to through the magic of the linking of the things all right everybody we're getting closer so one thing I want to do is now just take all these functions and I'm gonna make a new sketch I'm gonna call it a 3d 3d projection 2d or I'm just gonna call it 3d into 2d and of course one thing you should note about processing because processing makes java classes you can't start a java class with a number so it actually renamed it for me sketch underscore which is absolutely fine then I'm going to make a new tab I'm just gonna call it matrix and I'm gonna put all this stuff back to matrix matrix Tyvek I don't need this here log matrix is useful and then the matrix multiplication functions alright everybody okay got a little momentum now I'm going to come over here and erase the whiteboard questions do I have any props if I had a nice like cube boy I don't know about this I don't know about this I was promised perfect clean whiteboard erasing sustainable ecofriendly perfectly clean whiteboard erasing doesn't seem to be working out but maybe if I now switch to the other side have I done this wrong for music was I supposed to use the other side first I don't know which side is which should read the instructions okay okay I'm curious with if anybody in the audience who actually happens to have been watching all of this never done matrix multiplication before but kind of knows processing were you actually able to follow that I would like to know all right I did Simon wrote a message about PZ cam which is interesting Luke writes yes so I did see that I'll have to research that thank you maybe share some more information with me about that after the stream get expo spray no no you see I bought these things because they say they don't need any special spray they just work with water and I want to not I don't know poison the world all right so now all right now have you need to code something up really quickly so what I'm gonna do right now is I'm going to create a sketch using the p 3d renderer and I'm gonna say box 100 and I'm gonna say float angle equals zero and I'm gonna say rotate X by angle rotate Y by angle two times two and rotate Z by angle times three and then I'm going to say angle plus equals zero point one we're gonna run this oh and I'm gonna say stroke 255 no fill and I'm also going to put it in ortho so I'm going to do it worth the graphic projection okay just to be clear let me also make the stroke weight a little bit brighter okay that looks pretty good I feel like this should be bigger let's make the Box 200 this for just in terms of people being able to see it okay great now I'm just curious I'm gonna comment out ortho for a second well actually I kind of like having ortho in there that's crazy Oh guess because I haven't really I didn't really set it back or anything but that's fine okay now let's go here all right great this is all I need okay I think I have everything I need this can go further over this way to here so then the browser can go over here all right let me know if I am back with the message in particularly in slack because I do not have I do not have the YouTube chat open although I'm about to try to open that back ok great sorry about this I really wish I knew what was going on I some days this just happens constantly in other days I stream for hours and hours in this dozen time I should mention that I have Ray casting eventually I should mention that I have a meeting at 200 p.m. I didn't imagine I'd be streaming from 1130 all the way up until 200 I will come back after that meeting I've come to finish this today I'm not going anywhere until I finish this but we'll have to take a break I think since I had to stop and start the stream so many times unfortunately I think YouTube will only blast to such and such Channel is live notifications per day so I may have used up all of mine so for when I come back I will create an event you're just gonna have to like check a little bit more manually go to the home page the code as soon as this is done I'll just schedule probably like 4 o'clock Eastern time is when I will return to be clear I'm not leaving now I still have another 45 minutes then I'm gonna take a break have a meeting eat something and come back yes ok ah oh my goodness I knew I should have never done 4 dimensions alright so I don't know where I last left off but I'm just ready to just move on ok hello welcome to a coding challenge and I can summarize this coding challenge very quickly in one sentence this is a spinning cube it is a threedimensional cube that you are seeing on your twodimensional screen I am able to create this threedimensional cube because I am using the p 3d renderer processing Java based creative coding development platform thing I can make 3d stuff using the P 3d rendering engine and then functions like box and rotate X and rotate wine rotate Z and that is how I get this but how does this really work how does the processing even make this happen I am going to do the most basic simple thing I am going I said what said something like twelve senses I'm like two hundred sentences am I being perfectly honest I am going to change this from P 3 D 2 P 2 D I'm going to eliminate all of the 3d rendering capabilities I allow myself to use any of them and yet I'm going to recreate exactly this same visualization I'm going to do matrix rotations projections those sort of things so this is not going to be comprehensive like how to build a 3d engine with ray casting or ray tracing and lighting and shadow and all sorts of like comp trains complicated stuff I'm gonna just do the basics just to create this 3d illusion in 2d I'm really because because if I can use the P 3d if I can create the 3d illusion and render to the 2d space what if I create a 4d shape and then render it into P 3d space right if I can project a 3d object into 2d space there's no reason why I couldn't project a 4d object into 3d space computers gonna melt and I'm never gonna make any videos again before I'll just stick with this that's what I'm gonna do in this video okay people are asking about the melon this will have to be a little edit point this my friends is otherwise known as space melon it is a special invisible melon that I like to eat but really oops shoot it just looks like this okay it's honeydew honey dew melon alright alright okay okay so let's begin coding so I am going to take out I'm gonna hit save and I'm gonna take out all this 3d stuff I'm gonna leave translate stroke stroke wait no Phil I'm not gonna be able to use these anymore I'm not gonna be able to use these anymore I'm gonna leave all this and I mean p2d I actually I'm gonna take out p.2d nice to say that the default render is also a 2d engine so I don't need to actually say P 2d now I should also mention that I in this particular video I'm making use of a few functions I've previously written I might have a video I definitely did it on the livestream so either way in the video's description of Anna link to where you can watch me code all these functions but what these functions are for are for certain matrix operations that I'm going to do don't worry I will I will talk about what they are when I use them so the first thing that I want to do is let me just get some points on the screen how am I gonna do this let me make a so I'm gonna make pretty pretty heavy use of the P vector object and I'm gonna say I'm gonna make a array of P vectors that just has four points in it and I'm going to say points index zero is a P vector and I'm just going to omit the little square so I'm gonna say the first one is that like negative 15 negative d and then then the second third fourth is at fifty negative fifty then fifty fifty then negative fifty fifty these should be the four points of a square so what I want to do here now is just say for every vector in points just draw a point at V X V dot Y so now oh oh but these are the whole point I do is I can't do this right all right these are okay so these are actually going to be 3d the point of this is they're gonna be in 3d bear with me for a second well all will come to pass those are gonna be 3d points but right now I haven't done anything 3d yet let's make the stroke wait quite a bit bigger so I can see them there we go so those are my four points so first what I won't need to do and actually mm well I'm not gonna worry about this part right now okay so what do I need to do to make a 3d engine okay here's the day I'm gonna search for some props bear with me for a second people what's the chance that I have a clip light don't think I have a bulb in it I'm looking for like this would be good like if I could like make a shadow oh wait a second have this also have this LED lighting fixture that I could potentially use look at this right right right I could use this to make a shadow it needs batteries one two three four five six only have four batteries okay that's not gonna work it does have a plug oh wait I could actually just use I don't want to mess with this mmm maybe I'm just going to I know draw let's good try to use props that's gonna try to use props but I think that's not gonna work what am I trying to explain here I want to talk about projection okay I'm thinking about this all right use your cell phone flashlight thank you that's a good idea I know everybody look I have a Coty trade sticker on my cell phone train whistle shadow let's see turn the lights out oh yeah can you see that kind of works I mean it works if I do this but does not square a random number book could be good okay all right okay I found some props and I should turn this light off too I'm gonna try to do a demonstration in the dark this is a 3d object it is the book a million random digits with a hundred thousand normal deviates the way that a 3d object is rendered on a twodimensional screen is through something called a projection that projection you can think of is basically like a shadow so if I have this book here and I shine this cellphone flashlight you can see that there's a projection on to the wall it looks like a square if I do if I rotate this it rotates if I rotate it around the yaxis will actually I'll have to do this if I rotate it around the yaxis you can see it starts to become thinner I can rotate it around the xaxis it does this so you know so this is the idea I need to create this same exact I need to create that same exact idea but in code and the way that that's done is with something called a projection matrix so the point the 3d point is actually something like this it's a matrix that has x y&z in it this is actually three rows by one column this is something that I've gone over in other matrix math videos and there's a kind of a summary of it a projection matrix if I'm projecting into 2d right if I'm projecting this 3d point into a new 2d point I don't know if using the tick or prime symbol there makes sense but what I need is a projection matrix now here's a really simple projection matrix this projection matrix has a 1 in the X spot a 1 in the Y spot XYZ XYZ and it has both zeros in this sort of Z column here of this projection matrix what this is actually always going to do is give a twodimensional matrix not to mention sorry a two column matrix with just the x and y this projection matrix just eliminates the Z and actually this will get us pretty far in fact this exact matrix is what's known as is what's used for like orthographic projection there's all different stereographic and all different kinds of projection matrices this one is going to work just fine for us so let's put this in our code okay okay actually before I do that let me just go back and I'm just gonna by the way ordinarily right if I were using p.3d let me just go back and put p.3d back in there if I say print mate all the while processing is keeping track of a matrix behind the scenes to do all this for you that's what p.3d is doing for you so if I had print matrix right here whoa look what we got oh wow wait why do I have this crazy oh it has more stuff in it because it's doing other fancy things oh maybe this is maybe I went off on a little tangent here Oh Simon is giving me Simon is giving me a good way to create a class called polyhedron yet that's going to be useful for me thank you wait a second I guess I don't want to reveal this yet because someone remind me why it's for dimensions because of the 4x4 and if does this translate do I have a rotate in here is that why I had some weird numbers there in the back yeah no what did these this is like the Z clipping plane or something the fourth element is the transparency really no but that's in the color all right I'm not gonna worry about this I'm not going to go off on that I thought that would be interesting to show the connection but I'm gonna leave that out okay Oh homogeneous coordinates okay such not a red point so that's totally right so I'm not going to use homogeneous coordinates because that's they allow common vector operations as a translation rotation scaling perspective to be represented as a matrix so I'm doing them separately I'm using separate matrices and this uses homogeneous coordinates so I wonder I think I know I think I won't open that up right now it's an interesting aside but I'm gonna leave it out all right let me just cycle the camera okay okay so the first thing that I need to do is I need to create that projection matrix and this is actually an easy thing now of course if I were doing this in a more sort of robust way I'd probably have like a matrix math library I just have a few matrix math functions that are in this tab that I wrote in a previous video so I'm going to say call make a projection matrix and I'm going to just make it as a twodimensional array so 1 0 0 comma 0 1 0 so this is my representation of a 2 row by 3 column matrix 2 row by 3 column matrix that is this right here represented as a twodimensional array now what I'm going to do here is I am going to say for every point for every 3d point to move this over a little bit I am going to oh whoops I have had I I was thought saying and I put p3d back in there take that out no p.3d I am going to say P okay I'm going to say I want to get so I'm thinking about this ah all right I'm out another helper function matrix Tyvek right because really if I'm I'm gonna change this right like this is the helper function I want because I want to receive the matrix and the vector convert the vector to a matrix multiply it and then convert it back to a vector yeah okay so what I want to do okay so what I want to do here for every single 3d point right is and this was sort of pointless that I did before what I want to do is I want to create a P vector I'm gonna call it the projected 2d vector and what I'm gonna do is I'm gonna say matrix multiply the projection times V so this is what I want to do to project a 3d point into 2d I need a projection matrix which I just made and then I need to matrix multiply the projection matrix and the vector now how the math for that works involves this times this Plus this times this Plus this times this goes here and this times this Plus this times this was refer you to matrix multiplication XYZ that website has a nice visualization and I've made other videos about how matrix multiplication works which I'll also link to but I'm just going to assume that matrix multiplication works and you can see how this makes sense this one leaves us only with the X this one leaves us only with the Y so now I'm going to then say point projected 2d x projected 2d y I probably could come up with a better name than that and now if I run this same exact thing right because in this case is that if the point light and this place that I'm projecting onto and the thing they're all like kind of in exactly the same spot so there's no skewing there's no skewing of the sort of perspective so if I were to move that light around and change the projection matrix different thanks guys but I'm not going to worry about that right now what I want to do is see if I can apply some rotation okay so how do I apply rotation well I know that I could I could just say like rotate by angle right if I say rotate by angle processing is going to do that transformation for me but what if I want to rotate X rotate around the xaxis I can't do that I'm getting some sort of error somewhere are nothing they should say not available with this renderer oh yeah rotate X can only be used with a renderer that supports P 3d I need to write my own rotate X function and guess what I need for that rotation matrix I think the ding is better after guess what I need for that rotation matrix great okay so now I am going to create a rotation matrix now how does that work luckily for me I already have this Wikipedia page open up look at this a rotation matrix is a matrix that is used to perform a rotation in Euclidean space this kind of makes sense right look at this rotation matrix have you ever done one of those things where you do polar to Cartesian coordinate transformation and you take the angle and you keep increasing the angle and then you convert that to X&Y points and you have this like spiraling thing I made videos where I do that basically to rotate in to rotate in two dimensions this is all I need so just out of just just for fun let's first just do this I'm going to say float I'm going to make another may I'm going to call this rotation and I'm gonna make another matrix and I'm gonna do exactly this it's going to be two by two and it's going to be cosine theta and negative sine theta and I'm calling an angle cosine angle negative sine angle and then it's going to be what was it sine angle sine angle cosine angle is that right so this is I didn't I didn't get this right there's a this needs a bracket I don't know what I'm doing here and this needs a bracket right twodimensional matrix there we go no semicolon there we go so this is my rotation matrix this is my rotation matrix so what now what if I were to say okay now I'm going to take out this rotate X not using the native rotate function and I'm going to say P vector rotated equals matmo rotation times projected projected 2d and now I'm going to draw I'm gonna draw the point at rotate it so I am projecting V is a 3d vector I'm projecting it into 2d and then I'm rotating it just a 2d rotation and if we run this okay what's wrong columns of a must match rows of be this little clever demonstration okay so I'm trying to be very clever but it's not gonna work because the truth of the matter is P vectors always have the Z and I'm not accounting for that so even though I just want to do a 2d rotation where is that oh I'm in the major sorry okay III something horrible happens I got I got this out of I got columns of a must match rows of B I made a mistake in my matrix multiplication thing here's the thing I'm trying to be all clever to show you it in 2d first the truth of the matter is P vectors they're 3d even if I'm drawing just the X and y there's always that Z component so I actually need to include this extra column of zeros in it to do this demonstration so now you can see that's me doing 2d rotation and actually I'm actually doing 3d rotation right because really what this should be is this this is what I would call X Y rotation I am rotating around the z axis by you know using the X and Y axis right look at this and I'm gonna say but so this is what and if I kept scrolling down this Wikipedia page we would see this we would find this right here this is the one that I'm doing rotation Z right oh I need a 1 there of course not a 0 there very important I don't want to lose the Z point I want to rotate her I want to rotate the x and y axes around the z axis but I don't want to lose the Z point so I need a 1 there in the 2d case ok so I need this here so this I'm going to call rotation Z and now I'm going to make some other ones let's call them rotation X and the rotation X is y + Z so I need to have my rotation values in the y and z spots so hard to do this I should just copy it from somewhere but this will work and I think this is right so this should be right you can see this is I don't know my spacing is off help me this should be this was rotation Z this is rotation X and let's do one more let's do rotation why so I need to have zero one zero in the middle the last one will be sine of angle zero cosine of angle and the first one will be cosine of angle negative sine of angle with a zero in the middle okay so this should be just should all line up nicely this is rotation why do I have any syntax errors rotation Z rotation X rotation Y okay so here's the thing I'm gonna do something terrible what if I just put like if I put rotation Z here oh I have an error oh I'm missing a comma here thank you so I'm I think I got it everywhere else right that's rotation Z what if I try instead rotation X Oh weird that that's working because it's what it's working it's working by accident drilling because my Z by Z points so but I've done something incorrect but you can see this looks as if those two points and I want my angle to move up a little bit faster you can imagine this as a plane almost spinning around the xaxis but here's the thing I should be doing the projection should happen at the last moment right I should really be rotating first and then I should project the rotated vector and so here so sorry projection and right so the really sir for it to be correct it's got to be in it's got to be in this order because what I need to do is first rotate and then work by accident because that my Z values are 0 but now well let's do something let's make eight points like I'm doing this in a highly manual way let's now have all these via negative 50 wonder if I want to put them I think this will be fine negative 50 and then now these all at fifty right I basically or if you think about it a point has zero dimensions a line has two dimensions with two points as the bounding box a plain square has two dimensions with four lines bounding it and then a cube has is in three dimensions with a eight no six planes but really I can kind of make the cube just with eight points which of the edges all of those connections so let me just run this for a second oh boy this works too fast I didn't want this to work so fast so now we can see let me just go back to rotate Z and look at this that looks now why do I not see eight points because I'm using orthographic projection as if the light is right there there's no kind of perspective I'm not moving the light source away to create this kind more 3d perspective look I can can't see what the points are right in front of each other they the shadow projects on exactly the same spot but if I were to do rotate Y now you could see you can kind of imagine that being a cube rotating and here's now where I can get fancy I can now say rotated equals mat mall rotation x times x rotated so I'm just gonna do this a couple times just like keep rotating by all the different so I'm gonna do this separate operations now there's a way I could probably combine all those but I'm just going to do all those matrix rotations and here we go now we have my cube spinning along all axes now it doesn't look like a cube line 37 time out people are telling me to check line 37 1 0 0 001 that's right wait there's an extra zero where ah here we go it's line 43 Oh time out I in all of my like futzing with this I left an extra zero here this rotation X should be one zero zero zero cosine negative sine zero sine cosine all right so hopefully that doesn't change much it still looks right so that probably was just being ignored I was ignoring it but I don't want that in my code so now we can see we've got this rotation the truth of the matter is I really want to draw this as a cube oh I want to draw this as a cube let me think about this there's as I could manually connect all the points I want to connect all so this is not the same size as what I started with so I'm gonna just replace every egg in every 50 with a hundred and every 50 with 100 that should work let's make that a bit bigger there we go so that's what I had originally and I also was doing something with the angles right I was like doing like I don't remember but I had liked angle x to angle x too so I could also vary the speed of the rotations this is very silly what I'm doing right now and pointless I just wanted to match match something more like what I started with okay anyway so you can kind of see that that's why it was moving so then I had it as like 0.1 okay so this should now match exactly what I started with all right um I'm thinking I want to draw the edges here I could really could have just replaced all the 50s with 100's that's a very good point brains melting it's 2 o'clock now I have 20 minutes how do I want to draw these edges I'm gonna do it the lazy way I think you only need to add division to make a perspective yes I know I'm going to add division but I need to add division I need to remake the projection this can't be global anymore I need to add that in here the code says how to draw the edges what code Oh your code oh wait I'm looking at Simon's code here how do I make the edges how do I make the edges I see how I know how to draw the edges by a line but is there a nice algorithm if I have all the points of the cube written 0 through index 0 through 7 he total 1 2 3 4 5 6 7 8 9 10 11 12 there's 12 right draw 12 lines with your vertices as an index yeah right I should definitely replace the 100 all right let me go back for a second as this is silly that minute matchy let's let's not do that part where I like change the angle and everything okay alright alright well let me do something that's gonna help us in the long run what I actually want to do is instead of using 50 all in here I'm gonna change every instance of 50 to just the number one so we kind of have like normalized they keep actually I kind of want to change it to 0.5 instead of one of them to change it to because I want the sides the lines to be a length one so whoops replace oh that's do I have oh I have ones in other places bad idea hold on I'm going to change all the instances of 50 to 0.5 ok so now if I were to run this you know I don't see anything here but very easily what I can do is that the last moment I can scale things up and again I could do this with some kind of I'm just gonna do multiply each vector by hundred and then I have this and if I multiply it by 200 then I have this which more closely matches what I started with the angle rotations are different but that's no big deal okay I wanted to do that because I also would like to show you perspective and I think if all my coordinates are normalized that's going to make a little easier to do but before I show you perspective let me connect all the edges so there's 12 edges so in theory highs less than 12 I plus plus right what am i connecting I'm connecting let me let me let me think about this I'm connecting look if I say connect what did I call the points let me just put 0 and 0 let me write a function let me write a function call it connect and it gets to P vectors and it just draws a line I'm gonna say stroke weight 1 and it draws a line between one and the other stroke 255 so if I were to say connect oh and it doesn't get to P vectors it gets to into and P vector a1 equals I'm gonna call this I and J P vector a equals points I and P vector B equals points J this is like so I should have a line between the first two points how come I don't see that oh wait wait yeah point oh oh I need to connect I need to connect okay so I'm going to make this P vector projects projected equals I'm gonna make an array that has eight spots in it and then instead of drawing this here I'm going to say projected so now I really need to oh this is fine int index equals zero I could just use now for loop but index plus plus projected index equals projected 2d so I'm going to put everything in an array and then I'm going to say connect zero zero in projected and then this will be an array of points and so now this should where's that line let me just make sure now if I say for P vector V in projected point I really didn't want to draw the edges this is why I want to just leave it as that Leggett leave it a viewer challenge to draw the edges projected 2d projected indexical projected 2d index plus plus P vector V where's all that strokeweight stuff this stuff should be here where am i drawing on the points so okay there are the points again now I want to connect 0 & 1 0 & 1 there we go I took me forever so now I'm connecting 0 & 1 then I want to connect 0 & 2 no 0 then I want to connect 1 & 0 that's the same thing connect one in one no no no one two good trial and error this is fun then I'm gonna connect 2 & 3 I just want to figure out if there's an algorithm for this and write because this is the plane this is the first plane 3 & 4 I see so this makes sense whoopwhoop whoops no 3 back to 0 that's the first plane and then the next plane is the same thing but at the end which is like 4 to 5 5 to 6 oh no 3 to 4 for it right because didn't I put the next plane would be 0 1 2 3 4 no no no yes 4 to 5 5 to 6 6 to 7 & 7 back to 4 okay so that's that now all I need to do is connect oh this is easy so there's definitely an algorithm for this because now I just want to connect 0 2 4 1 2 5 right 2 to 6 hopefully the algorithm is revealing itself to you and 7 to 8 no no no three dit sorry 3 to 7 there we go now III should really refactor this and I plan to do that but right now I think I need a little bit of a break alright so but this this is really actually no I don't I got to do it right now I'm sorry this video is gonna be really long I don't care I equals zero I is less than 4 I plus plus so what I'm gonna do right there's four sides I am going to connect I with I plus 1 modulus for then I also want to connected then I also want to connect I + 4 + I + 1 modulus 4 + 4 let's do that and then I just want to connect I with I plus 4 I think that's it that's these three little blocks I'm so glad that actually worked okay so this is connecting the edges this is going to really help but we have to do the I hope well we have to do the hypercube connecting the edges okay I should really go I only have ten more minutes in real life time while I'm recording this but let's actually add perspective let's add perspective how do you add perspective whoa so the way that you add perspective perspective projection basically we're going to add a variable whoops we're going to add a variable which indicates the distance remember my ridiculous experiment earlier like about four and a half hours ago if you are actually watching this video all the way to the end where I had this light source and I was shining the light source and you were seeing the shadow here that projection I need a variable which is the distance away from the object the surface that that light source is that's how I get perspective projection right somebody tell me that that's right and then I should be all right this is orthographic projection which I have done already weak perspective projection which is just plus a scaling perspective projection oh wait a sec I'm losing my mind here this is what I want to do the way I did it was so easy I don't want to do perspective projection I was gonna do it I just want to do stereographic hold on I might have to just not do this part right now because that's all I really need for yet this is what I'm doing here the value mine divided by one minus the distance that's what I was doing can I just do that because one minus the Z yeah I dare you to do 40 right yeah one minus Z distance that's what I want like I just right hold on like basically let me just do this for a second like basically what I want to do is change take this here and basically right before I do the projection this should be 1 divided by 1 minus V dot Z right and then Z Z right let me just yeah right and then this is like the distance right because right isn't this one somebody confirmed for me who knows actually knows this stuff I have five minutes like cuz if I change this to 5 yeah then the lights really far away this is like the equivalent of the distance whoa what did I what horrible thing but I guess I can't write right so this is like yeah I'm doing the tesseracts today I'm coming back this afternoon I'm gonna do the tesseract but this is like some buildup to the tesseract right so somebody confirm for me that correctly see I see very little activity in my reliable slack channel alko is watching this alchemist know the answer to this so this is this would be basically this is as if the light source is the light source getting closer like this is this called stereographic projection like I just want to see this formula somewhere it doesn't look right to me Thanks that's why I don't want to do it I don't want to get into all of the simple it's really like orthographic but just moving the light source away week projection weak perspective I can do weak which is just a weak perspective projections use the principles orthographic but requires the scaling factor to be specified thus ensuring that closer objects appear bigger in the projection viceversa because he is a hybrid between orthographic and perspective and so the weak perfect model does approximate perspectives using a simpler model similar the pure unscaled or unscaled so with these conditions we know all points that there are at the same distance Z from the camera without significant errors in the projection so basically what you're saying what this is saying is just weak weak projection would be just scaling everything by Z so actually like leave this like this basically No Z average constant depth oh it's just to be rotated oh whoops no wonder ah yeah hold on hold on it has to be the whole point of me putting this down here huh the whole point of me putting this here is to do this there we go oh whoops no no it's still worth the graphic I'm like why don't I see anything there we go that's stereographic projection now if I want to move further away yeah yes this is what I meant to show uh I got it okay this is why you should look at the YouTube chat more often yeah no kidding all right now I forgot where I was in this discussion okay I'm gonna come back to the code so I just did my little demonstration over here okay so so to create this idea of perspective right I want to move the light source or move the camera further away there's a lot of different ways to do this and highly sophisticated methods but basically I need to scale the XY positions by the depth right objects in this Amir er appear closer than they really are like things that are further away feel appear closer in things that are closer feel further out appear further out so to do that this projection matrix can't just always be constants of 1 & 1 in the x and y positions so I'm going to move this and I'm going to before I project right before I apply the before I project the final rotated matrix I need to dynamically calculate this projection matrix according to the Z value itself so one thing that I could do is I could just say float Z equals rotated Z and I could like just try like dividing dividing by it I'm sort of scaling it according to that Z let's see what that does that's something maybe it looks all weird and crazy that's not right well it's a nice formula for doing this is actually saying 1 divided by this is now the distance basically the camera distance the light source distance rotated Z so if I put that in here now and I were to say float distance equals 2 for example now you can see this looks much more like perspective projection so this is no longer orthographic it's more like perspective exactly sort of you know again I'm not saying that I've comprehensively solved every possible projection 3d way with focal lengths and all sorts of field of view stuff I'm just doing something kind of basic this is probably similar to like weak projection maybe I think but you can see here if I change this distance to 1 now this object appears a much closer it's more distorted if I were to change this to 10 and well it's so far away but you can see there it is those points are a little bit too big now one thing I'm not doing is changing like the stroke way to make it seem further or smaller but you can see I'm just altering the perspective okay we've done it where's my train whistle she's a train whistle no train trestle for me maybe a pea I'm gonna reward myself with a piece of space melon I have made this coding challenge so what can you do first of all if you want a challenge to yourself I just go make this in four dimensions now but that's what I'm gonna do next now that I have successfully drawn a 3d cube and just to prove the point I am in the P 2d renderer the P 2d renderer using my own matrix math and my own rotation matrices you know you don't need to do this I would probably just go back and always use P 3d but this should let me unlock the fourth the fifth the sixth to seventh dimension you know try making different shapes other than cubes try you know you can do weird stuff like I probably get something like super weird if I just like let's make the distance to again and let's you know change this like negative to positive just for rotation Y and like look what I've got going now like I can really start to like distort the world by like just messing around with these numbers like what if I say like five times cosine of angle down here in rotation Y okay that's probably a terrible idea so what kind of crazy weird distorted rotation perspective things can you do can you actually do this with vertices so you can apply fill can you think about color make some sort of weird pretend 3d world that does it that doesn't follow our own sense of three dimensions by playing with this code and share that with me and the comments are on Twitter and also on the Kodi Trang comm they'll be a link to the webpage where you can submit user made things okay my phone is ringing it says maybe Brian hmm I wonder if that's a Simone's tumor calling me okay goodbye continue to enjoy the insurer YouTube thing gonna go outside and do something else I'll see you in a future Karthik challenge okay I know I have to go to my meeting I'm just gonna be a little bit late okay really it went to voicemail okay boy what's the chance I mean it's downstairs mowing every five minutes late I don't think it's a problem what's the chance Doc's that could be edited into like a 30 minute coding challenge maybe okay all right I've got to go so what this is gonna end this is the end of this particular livestream what I'm gonna do really quickly cause I'm gonna go to youtube studio I'm gonna create an event let me just email that I'm running a few minutes late hello Marshall thank you for your contributions on github Marshall oh did I freeze no I'm still here oh my god oh yeah oh yes see you in five to ten minutes okay so I mean this is the thing I really wanted to learn for a long time this 3d stuff always seemed like impossible I am going to create and we go to live streaming Darin had your you live streaming right now house Trevor we could go watch I'm gonna go to events new live event oh wait wait wait wait actually something I can do is I can duplicate what I shoot I can say how do I do this there's a way to like duplicate new event from this one settings see you can't can't do that walks live I'm just gonna do a new live event the tesseract today at let's say 400 p.m. I think realistically I can be back here at 4 p.m. 4 p.m. to 6 p.m. tesseract coding challenge public advanced setting slow mode make archive unlisted create event ok so I in theory I'm pasting now into the chat the next I don't know where the chat went here it is this is the next event all right okay so alright so I'm gonna go I'm gonna be back later I'm gonna make this tesseract thing I think I mean this is so not gonna be true but in a way I almost feel like it's gonna be easier having done this first video so we'll see oh did it did it do for p.m. did I say it to 4 p.m. Pacific by accident let me see no 4 p.m. Eastern alright so and in slack channel patron sponsor member YouTube thing is called memberships now I could also potentially if there's any like filler stuff or intro or outro e stuff that I need to do I'm thinking actually maybe it sort of makes sense that there's three coding challenges there's a coding time so it's just matrix multiplication there's a coding challenge that's like 3d projection and 2d what's a good like SEO term for what I just did normally I don't like to think that way but I feel like people searching for a video about how to do the sort of basics of 3d rendering in 2d canvas it's kind of like a thing people often look for and there's maybe a term for that I don't want to mislead people that I'm like doing you know ray tracing for example that so if anybody has suggestions for that tweet that at me or it's particular if you're a member or patron I mentioned that in the slack channel and if match is around we can message Matt Matt you off and it's good feedback of like Oh record some extra intro outro e stuff alright so I'm gonna hit the stop streaming button and I will see you I got to finish my melon Oh No maybe I save it till this afternoon won't go bad will it and I will see you all in a little less than two hours apologies if I'm a little late to the this afternoon one OK when hit stop streaming okay Oh axe