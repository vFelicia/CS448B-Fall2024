hi yes you don't know what you're about to watch this is ostensibly just like a random video in the middle of a very long series of building and neural network and I'm kind of knowledge doing matrices and I already started in this is really just a video about doing elementwise operations with a matrix and adding that to the matrix little matrix library that I'm building but guess what an opening in this video is something really exciting that I just learned and I never knew Thank You Julito from the YouTube chat for pointing this out but what let let me set the stage of where I am we're building this matrix library the idea is to be able to store numbers in a grid and perform different mathematical operations with them and we're going to ultimately use this library to do weighted sums in a neural network and right now I'm about to add an element wise operation but I just did the basics of creating the matrix and multiplying or adding a value to it okay so now let's review I could say var M is a new matrix and it's 3 by 2 and then I previously was looking at it like this and kind of going like this and trying to like look at the values in it but I learned then I can say console dot table and then pass in and array look at this console table pass in an array my whole life has changed in an instant realizing that now I can have this nice little tabular view and so I could just say multiply Ahdoot add five and then I can look at it again and I can see that there's fives in there and I could try to do other stuff and there's so many things I'm going to need to do to like check if it's working this is going to make it so much better I got to fake my reaction right now good let's really the first learner than I was genuinely I know I'm still genuinely excited about it okay but for everybody watching live had to watch me get excited about it twice apologies for that okay so on you watching this video right now let's add the next piece so what's interesting here is one of the things I wanted to do right it's just saying 1 D for example adds i multiplies with add the number 2 to each one of these values but what if I had another matrix you know 3 1 4 negative 3 and what if I wanted to add this matrix to this matrix elements wise what element wise means is if I have two matrices a b c d and i have e f g h i get a resulting matrix that has a plus e b + f c+ g d plus h i just take these two values and add them together at these two values add them together these two values added together these two thousand together now this will only work the way that I've described it to you if these matrix matrices have the same dimensions the same number of rows in the same number of columns now there is there something in Python the numpy library which is the core you know matrix math library and python has extra what it's called I'm not it's called broadcasting in numpy so but we're going to live in a simpler world were we for this we have to have the dimensions match exactly so what I want to do now is I want to keep those multiply and add functions I want them to be the same function but I want those functions to be able to receive a single number and add that single number to all of the values or receive another matrix and add all those ads the values of ads those guys elementwise so let's go back and add this now there's some things that I need to do for example I first why don't I at least write a function called randomized and what this function will do and you're going to see this and everything is just give each value a random value so I am going to I'm going to do something rather silly right now we're going to say math.floor math.random times 10 so I'm not using the p5.js random and floor functions writing this library because I want this library to be able to be used outside of the p5.js library so I have to actually just use the native JavaScript random and floor functions so I should be able to now whoops syntax error line 16 oh this should say equals function I should be able to say here's a new matrix and randomize and then let's look at its values and you can see there we go one one eight three eight one four those are random values so now if I were to say n dot multiplied by two and look at it again we can see there we go to 16 6 16 to eight great so now at least we can experiment and use different values now here's the thing look at this function matrix prototype ad equals function and the argument coming in is n a single value but what if n isn't a single value what if it was actually a matrix actually what I can do here is say if and is an instance of matrix let's see is that right instance of what does that mean I'm trying to determine what the type of n is so I can look at that here write n an instance of matrix true and instance of what's another JavaScript object array false right so it's and if what I'm basically saying is here the add function receives an argument that argument might be a matrix it might be something else if it is a matrix what I want to do is add all the values element wise otherwise now I should probably check like is it actually just a single number but I'm kind of going to assume here that there's only two possible ways any reasonable person would call this function either with a matrix or a single number so if it's a matrix as the eval use element wise every IJ should get added to the corresponding PI J otherwise otherwise just adds the single value into every single value so let's now see if this element wise works because I still some more space here so I'm going to make a matrix that is I'm going to call it m1 and I'm going to say m2 is also a three by two matrix I'm going to randomize and one I'm going to randomize m2 then I'm going to say console I'm going to look at them both table m1 oh what's sorry let me clear this console table and one dot the actual array in their console table m2 so we can see here these are my two matrices six three seven two zero seven zero four three one seven three let's double the values and just to see that that works or like to add to the value sorry what I did this would add right so I'm going to say m2 dot add one let's add one to every value in m2 and let me make this font a little smaller hopefully you can still see it let's look at m1 and m2 so we can see yep every value to m2 increased by one now if I add m1 to m2 I should get a matrix that has 7 8 right 6 plus 1 3 plus 5 7 plus 4 2 plus 2 let's say m1 dot add em to let's do that up hmm cannot read property 0 of undefined what did I get wrong matrix Dutch is 29 what's wrong here n oh you know what I forgot probably a lot of you in the chat notice this or if you watch this you know is this the matrix object has inside of itself a variable that actually stores the values called matrix and maybe I should call that something else I'm not so sure about this this has to be n dot matrix right if this is an instance of the matrix object I want to add this matrix values to the n matrix size so unfortunately I'm going to have to redo all this I have one matrix I have two matrices now I'm going to add one to the second one and then I'm going to add m2 to m1 oh didn't get an error now let's look oh wait I didn't randomize that and they won't have the same value it's going to be zero belief okay give me a second here oh no m2 is going to have one in it so let's uh let's just let's randomize m1 let's ran to 5 m2 let's add one to M Oh takes a long time just to like get back to my test drives write this code into like a code example you'd be much nicer that way I'll do that in the next video now let me look at all of them console table m1 matrix console table and dot matrix okay 1 + 5 6 6 plus 5 is 11 so let's see what we get M m1 dot add M okay console table m1 I don't know dot matrix I think that's right I scroll back up I cleared it I can't scroll back up someone will have to confirm the map but I think we have successfully now written a function into our library that can do either scalar operation or an element operation element wise operation and it's the same function and if I go back to the library I could do this same thing with multiply however I'm going to leave that I'm going to just do that on my going time I'm going to leave that as an exercise for you so if you're following along and building this library with me now go and write the same code to make multiply work both scalar and element wise and we're yes there is expel so to speak the thing that's the most important thing that I haven't gotten to is actual matrix multiplication that isn't element wise and this by the way this elementwise matrix multiplication is referred to is commonly known as the hard Maru no I know so that's that's on Twitter Arthur on Twitter does amazing work but what's that product had Hadamard product let's go to the Wikipedia page so that's what this is called Hannum are also as the sure product that's the element wise multiplication but matrix multiplication itself is actually going to work in a completely different way it could be the fundamental piece of how you look at inputs and weights and how we multiply those things that add them all together in a neural network so so this is where we're building up to so in the next video I am going to look at matrix multiplication the sort of core piece and we're going to put that into our library there's some other things we have a look at transposing a matrix is something we'll need and a few other things too and then we'll be back into the neural network and starting to put those pieces together hoof there's a lot of a lot of elements to this a lot of videos but thanks for staying with me in this journey processed thing and hopefully I'm doing okay see you soon