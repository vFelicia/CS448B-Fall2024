do so so do do oh hello everybody i forgot to do my audio check uh can you hear me uh just when i thought i was ready to go i'm hitting a little technical snag but i think i'll be up and running and we will be beginning in about 2 minutes and 30 seconds see you shortly do do me ah i'm live it doesn't happen automatically but the music does end and i just like by uh reflex press the buttons to put me live but i was fixing something i'm trying to get this app up and running on glitch and i wanted to get it up and running before i started but uh i don't have it up and running yet but i've started hello hi it's me dan the host of the coding train coming to you live from brooklyn new york for the second day in a row which is not something you want to get used to oh gloria every time i start something live streaming my little pup over there gloria who's not so little actually she just like gets up from her bed and starts bounding over i think she thinks like i'm about to take her for a walk she's got she's got two hours to wait um i'm just seeing the chat here um and just finished preparing dinner uh and now daniel is on watch the coding train with a plate of indonesian food on my lap well that sounds delicious from new member mark boots if i'm correct joined yesterday uh welcome um so today is a bit of a continuation from yesterday i think i don't know maybe it's not but you definitely don't have to have tuned in yesterday to be participating today you don't have to have ever tuned in before in fact i know there are some new viewers in particular uh i saw before i started a couple messages in the chat which said i learned p5.js from your videos but this is the first time i'm tuning in live well do i have news for you um these live streams tend to be i think the word that i used yesterday which is quite appropriate a bit of a mess um there's not a clear plan for them i aspire to someday have more segments and uh kind of uh time box things and have a very clear trajectory as to where i'm going from whence i came but none of that exists for today i do have some items on my mental todo list probably the most one for me the most important one for me to get to relates to the tshirt that i'm wearing you can see here uh by the way there's greed in this tshirt so these aren't the actual colors unfortunately but it says processing foundation here uh the processing foundation is the nonforprofit organization that i am a part of um you know coding train is a separate endeavor but the two are intertwined in many ways um but and i like to use the coding train to support the processing foundation to the extent that i can but a processing foundation had an annual fundraiser and i meant to get the link up and running for that but i did not um and uh i'm seeing if i can find it uh annual fundraiser processing foundation 2020. come on it's got to be i think i found it i think i found it 20 20. i found it i found it all right so moving on over here this was and look at this look at this image do you recognize that image and you can see now that the colors have changed to white because it is uh whatever i am in front of uh there we go we can see the o from organization kind of entering my shirt um so one of the uh if i click over here one of oh and the campaign is uh no longer there but um we have stickers tshirts did you get one of these hoodies i don't have a hoodie uh coding train videos that's what and i have not fulfilled my obligation it's kind of like a wedding present i think you have like one year from the wedding to give your present so i feel like i have one year from the fundraiser to deliver on my coding train videos for the donors of to the processing foundation so i'm way ahead of the game given that i'm not even i guess june is about halfway through 2021 but i did intend to actually do them in january june june starts with j and january starts with j so it's kind of like the same month really i'm basically on time because of the j and july is my backup plan um but um the school year has wrapped up for me now so there's really no excuse anymore um what i uh and so the two topics for the two donations i have to make sure there isn't a third if you were a uh i see computational mama in the chat hi computational mom i love your channel everybody check out computational mama's channel if you haven't already um what was i saying i got a thing i was saying before i got distracted oh i'm so easily distracted right i know that there were two donors one the topic for one donor was uh requested was the bezier function and the topic from the other donor is the copy function if you are a donor who requested a video topic and you're watching right now or sometime in the near future remind me i'm going to go back to my notes and emails and i'll probably remember but i think there are only those two um and i so anyway so i want to take some time today it's this is not the fulfillment of that video this is my prep session where i am going to teach myself the inner workings of the bezier function in p5 try to make some examples with it and basically build a bit of a plan for a recorded short five to ten minute video tutorial about the bezier function and spoiler alert i'm going to be basing um my initial research off of this book called programming design systems by roon matson and i believe somewhere on this custom shapes perhaps yeah there is a whole section so i will be doing a dramatic reading of this section about bezier curves and kind of thinking about how i want to present it and oh wow this is really awesome um about how i want to present it and thank you simon for um oh um are am i having problems with this stream chat too oh you know i just forgot about this stream chat i think it still works i just didn't launch it i'll come back to that i'm very focused on the um um uh the new uh random number bot features that i talked about yesterday and i would like to return to that perhaps okay um so sorry about that just stream chat i should be um getting that back up and running i'm getting all these super chats which is so kind of all of you thank you to simone and there was one earlier i got to scroll back up uh thank you to simone and gary for your very kind um super chats it's super appreciated it helps to keep the engine running speaking of which something else that keeps the engine running here at the coding train is the sponsor of today's live stream oh my goodness curiosity stream um i love documentary films um curiosity stream which was launched by media visionary john hedricks who founded the discovery channel you know which is albeit a lot of other kinds of reality tv programming right now but uh curiosity stream is the you know awardwinning destination for documentary films and tv shows covering every topic from space exploration to adventure to the secret lives of wild animals so at that link curiositystream.com codingtrain you can wait i have a bit to do breaking news breaking news my script over here says a 26 discount on the annual hd plan which is 14.79 cents for the whole year i've just been told through my earpiece here and my mental uh brain thing mabob that's in my head that uh for this weekend only there is a special 40 discount it is 11.79 for the entire year i think if my math is correct that's one dollar per month for the entire uh curiosity stream uh a catalog of documentary films but wait there's more there's also something called watch nebula which is a streaming video service that i'm a part of uh made by educational uh youtubers um all together uh i'll come back and and show you some like uh make some documentary recommendations and stuff later but um the link up there if you're interested please uh sign up um i uh it helps me out a little bit and i i think i mean i i just i just love that i love all the stuff on curiosity stream it's really good so all right uh back to my um regularly scheduled programming bezier curves um i think i need i'm feeling a little bit discombobulated i don't see the chat anymore um and computational mama is asking does it work in india i don't that's a good question um let's be in touch um computational mama are you in the discord because i see you and also hippo viva uh have member uh supporter uh emojis next to your name um excuse me so if you're not in the discord let's uh let's get you onboarded in there anyone who is a member speaking of membership i talked about this a lot yesterday but i am producing these custom train whistles i don't think i need to necessarily go back again and i see that uh simon thank you you have some bezier curve related p5.js sketches uh coding trade viewer simon does maybe i can show those all right let's start with today's i don't know if i have a sound drop for this uh let's try this one it is time to continue the coding trains reading of the random numbers so as you may know i have a book called a million random digits with 100 000 normal deviates i like to spend way too much time on this youtube channel talking about my dear dear love for this book that's a little bit weird it's so weathered it's been i carry it with me it's been outside in the garden the page is falling out oh i really want to find an original print of this book but um newly implemented in the coding trains discord um newly i'm going to under bot demo let's see if i can come back to here this is the coding trains discord uh which um i'm posting putting a link in the youtube chat you should definitely join if you haven't already wonderful place to get some well so to get some help with your code we're planning some new community initiatives on discord this summer excited to tell you about those as they get going um but um one of the new things in the discord is that uh the bot the choo choo bot now will generate a random walk from a particular position in the book with a particular with a random sequence of five digits from that position so this pattern uh is from position 4687 in the book which i could try to find out of one million digits but also let's see what do i say i think if i say reading the bot will now tell me shiffman will continue reading the book at page one row one and column zero so that means it's my reminder to continue my project which i started yesterday so i've probably restarted again every so often to read this entire book will i get it through in my lifetime a mystery a wondrous perplexing unknowable question i mean will we all be around to see if i could get through this entire book in my lifetime uh i don't know it's quite a goal i've got but i now need to go to page one row one column zero and i will now read three seven five four two four oh let me start over i messed up three seven five four two zero four eight zero five six four eight nine four seven four two nine six two four eight o five two four zero three seven two zero six three six one zero four zero two zero zero eight two two nine one six six five so now i believe the next thing now that i've read that i can set myself i can say uh oh let me i forgot what the command is reading set reading um the command i want to say is set reading column no page one row two wait let's maybe it'll tell me valid page row and column yes set reading page page one row two column zero i have updated the book position to page one row two and column zero so when i ask for it next time oh you can't see what i'm doing here it is sorry i was typing all these commands um i will continue reading the book at page one row two column zero are you with me are we all okay do we have we found the system that works for all of us to get through this entire book i mean what percentage am i through i've read um a hundred digits out of one million is that right is that a hundred digits five times ten is fifty uh ten percent would be a hundred thousand one percent would be ten thousand point one percent would be a thousand i have read zero point zero one percent of this book in two days see if you can compute the predicted date everybody like you know we can all at once everybody in the chat like type in the date you think i'm gonna finish the book and hit enter ready one two no no i'm gonna do three two one and you enter but not on one three two one and then on the next enter you enter on enter you're ready oh wait what happened to my sound effect three two one enter so that's gonna happen i'm gonna see this now in like 30 seconds to a minute because i am in the future which is very strange you were all behind me in the past and that is correct mark boots maybe we can add that as a feature to the bot um so just to quickly um recap i don't i spent a lot of time on this yesterday and i don't want to spend so much time on this but you can um what are the commands you can participate in this in the discord in the bot uh testing or bot talk channel i don't remember you can ask for your number so if you say uh my number everybody can be assigned their own random number in the book with a unique position so nobody else can have this position 11 570 but me um but i believe you can if i um what uh i can set uh a set a new number and if i don't give it a command um it's going to uh choose a new one so i would like to know actually kobe i think this is another note so i think we should want the position here so here i would also like to have the position it's kind of interesting do i want all the information always the number the position the row the column i think the row the column and page number is really for me um october 13 2048 if you read run one row per day which you aren't simon i've impressed by the way i should use my everyday calendar hold on um if i bring this down here you can see this is the simone arch yeah church uh everyday calendar that i have here behind my green screen um so maybe i can use that uh to keep track of reading all of the random numbers so um anyway so i would love for you to join the discord to get your own random number a little bonus if you sign up for youtube membership is that you can actually set your own number so i think i could set like if i wanted my number to be 2048 um i believe it's successfully saved the number 32 679 uh maybe i can't i maybe i'm still not allowed to set my own number nicole has the book wow so having the page row column would be amazing okay um so yeah um um so let's get that let's um you know i'm not super organized here in keeping track of ideas i suppose um what might make sense is let's see if i go to this is uh whoops let's see let's go to the coding train github and let's find oh discord bot choo choo this is the choo choo bot source code as well as a link to all of my discord bot tutorials um and chris is asking a really good question which i'll answer in a second but i don't believe uh kobe correct me if i'm wrong i don't believe the code for the new random walk features are in this one there is some code for drawing a random walk so maybe we can but what i was gonna say is maybe we should have a place um a github repo that uh we can take issues and requests for this particular random number feature um if your coding experience would be your age how old are you asks davon raj in the chat that is a great question um and computational mama says three years old same as my son wow that's amazing so for me i am 47 years old uh if you didn't know that already but my coding age is la it depends on how you count i was going to say it's less than 20 um because i didn't really start on this path and journey of creative coding and everything that i'm doing now until i was so it's more than my math was off 27 so 22 years old but i did actually do some coding as a i think a second or third or fourth grader um i learned uh but you know i did it for like two weeks and then never did it again then maybe i did it for one week in middle school then never did it again so i don't really necessarily count those but an interesting story is and that i'm hoping will be part of the coding train programming maybe even as early as this summer is the computer that i grew up with was an apple ii plus and that exact apple ii plus that i believe we got maybe when i was 10 years old let's look at the date i'm not sure um i have to figure this out but that apple ii plus is in my parents house where they still live in the attic maintained and kept in a pretty good condition and i'm planning to retrieve it sometime this summer and uh set it up and actually like live stream the output of it to behind me so i'm really excited to try to do that um and um i love that there are parents here i love that there are kids and parents in the chat this is making me so happy um one of the things that always amazes me about the work that i'm doing here on youtube is the sort of range of people in the audience uh from young people who are just learning to code to older folks who are just learning to code to people in their 20s who have been coding since they were very young the whole range is there and i'm thrilled thrilled thrilled and uh nicole is saying i'm counting my geocities websites as the beginning of my coding life yay juices i i want to show you all something which um let's see if i can get this up uh editor.p5.js um coding train sketches i want to bring this up because this is maybe a project for next week's live stream pine yeah all right so is it this one probably it's one of these is it this one doesn't look like it nope is it this one yes so speaking of geocities this is a p5.js sketch that i made that is called the pine a eye bowl pine pine like pineapple get it like pineapple but pineapple and what this does it allows you to take any image like here's one of my the coding train wheels the mouse character from my mouse conference video and um it this image is rated at 99.96 percent pineapple so you know it's maybe not the most actually this kind of looks sorry no no don't talk to me watch this looks pretty pineapplelike um but this is related to the uh television show psych which i've never seen at a podcast about the television show site called i know you don't know and i guess in every episode of the television show psych there is a pineapple and i built this system for the podcast to be able to rate various pilots anyway i don't know if this is worth explaining but um but um what i wanted to say is the podcast i know you don't know is coming up at the end of their second season and so one of the things i would like to do is not just have a pineapple detector which gives a percentage likelihood that there is a pineapple in the image but i would like to do object detection to find the pineapple image so if anybody is interested in helping with that project come on into the discord and get in touch um that's a that's a project maybe for next week not for today all right i think i've got to move on from all this stuff that i'm talking about and i'm so confused because it's two o'clock and i thought oh have i been streaming for an hour no i started at 1 30 so just a half an hour ah and um oh wait wait questions there were some great questions in the chat uh the member chat i should let me see if i can get this stream chat up and running if you'll give me a second here i'm going to put on my hold music yeah it seems to be working clear can any of you uh repost your question if you want it featured on the screen uh to uh the member discord that'd be a little issue that's fine okay let's see um you did spell oh oh wait no these are old comments okay um all right well let's take them so uh chris's question was does everyone get only one number so yes i believe this is correct the idea for this is if i say set um if i say set this random number so here's the thing this number 1724 is not necessarily unique because the same fivedigit sequence of numbers and i realized that's only four digits but that's because there's a leading zero in that sequence um well it appears multiple times in the book so it is not that your random number is unique but your index there are one million indices i mean are there less because if we're giving people five digit sequences can you not get do we only have 999 995 indices but for putting that aside the in the ideas are everyone have uh their own unique index and the random walk um which starts i i feel like there should be ran like a command that's like random walk me or my random walk or if you just say random walk instead of giving you a random one it gives you the one associated with your number um but this pattern is unique to this position so if i were to now say random walk one one one nine we are going to get hopefully oops i spelled it wrong random walk four one one one nine we will be getting uh the same exact that's the same exact image now the interesting question is if i say random walk four one one two zero so that's one index later than four one one nine my expectation is that this is going to look the same um um right can you see the difference i can't really see the difference but it is different the reason why it looks the same is it's using i can't remember how over i think we're using one million all like some amount of random numbers um that's divisible uh so i think it's 250 did we do a two digit number i can't remember the details we worked all this out and like chatting about this forever but it's using one one number difference so if we could zoom all the way and blow this up we would see that this pattern is like actually different but visually in the end it's going to look very similar but if i were to say random walk you know from a very different position like one two three um i'm going to get something quite different so that's important for me to mention um yeah i'm not getting the comments in this stream chat but i'm gonna i'm worried about that later i will figure that out later um okay so that was chris's question the new random walk features are on separate branch okay so then let's so if um that's really helpful so if i go back to um discord so if you have questions or ideas or comments about the uh the choo choo bot um please uh put them in the issues on discord bot choo choo now if this the code here in the main branch is the code that directly corresponds to my video tutorials but i expect that if we go here maybe it's number db that's my guess or version two dash deploy i'm not sure kobe will tell us one of these uh is you can find the code for the actual new random number stuff but we want people who are following the tutorials to be able to find the code from the tutorials here okay that was one question other things can you let me know how many rows are on a page um that's a great question i will answer that later it looks like the uh it looks like it's a hundred and hold on i can look at the first page it is 50 rows 50 rows on every page um okay um just looking that's interesting the pineapple detection system always detects a pineapple with transparently transparency okay all right now guess what it's time for that's right it's time for community contributions it's the part of today's live stream where i somehow through some arbitrary system that could always be improved pick some things that you the viewer have made and created in response or to a particular video tutorial or example that i made um i noticed in the chat someone suggested that we should have a set of community contributions for retro geocities web pages that would be a fun video or live stream for me to do um version 2 deploy according to kobe so um yeah so here's my new way of doing this um which i think we're going to work on um doing this differently over the summer but i'm going to go to the coding challenges um let's go to coding in the cabana today um which there's only five of them but let's see some community contributions from my coding in the cabana video and i haven't made one of these since last july oh i don't know it was a good idea at the time but let's let's look at some community contributions um the other way that by the way i can do this which i'll i'll do let's do cutting the gabana first so i'm going to go to discord i am going to get a rant it's using numbers and pairs of two right the reason why we are using numbers and pairs of two to make the decision of the random walk is if i only used a d a random number with a d with one digit that's zero through nine or ten options that's not divisible by four so we would not have an even distribution i suppose we could do something like modulus eight would that work and then and then modulus four but the point is uh 20 options is divisible by four so like zero zero through four five through nine 10 through 14 15 through 19. each of those correspond to up down left and right one option in the random walker so uh the random walk is i think 500 000 steps if i'm right about that okay the music is way too loud sorry about that i will correct that let's now the music is much quieter for your community contributions so let's pick a random number from the book we got the random value from the book uh the nine four six three zero which if i say that number i mean i'm gonna get zero right modulus five because there's five uh um cabana videos so we're the random number that was picked was one so we're going to go to the mar rose and there are oh there are one two three zero one two three four five six seven eight so there's eight to look at so let's do random again getting a random number from the book uh four four one zero six uh modulus eight is two but that's the third zero one two index two so insane zero one two we are doing ah i believe we looked at sam lee's contribution yesterday also um let's um let's look at uh we'll look at i'll look at a few of these more rows linked to scroll so just to remember if you haven't watched this video this is the particular pattern that i create in this video which is the more rows uh right i guess i am varying some parameters uh in the formula that are in these variables n and d and as i vary those parameters we start to see this unfolding or blossoming so to speak of the more rose flower so let's look at what sam lee would did this particular pattern more rows linked to scroll i think i've looked at this one before i mean i've looked at it personally but i think i've looked at it on the stream oh oh right this is showing us a uh like essentially like there's a text a poem in this from presumably from shakespeare romeo and juliet and as you scroll this graphic up here in the right changes some of the parameters and we see it's a very subtle thing so it's like it's kind of like a flip book while you're reading a book by the a little bit of an aside here and i might try to do this with the nature of code book i wanted to have in the margins of the entire book a little flip book animation of like a flocking system or something like that so uh this is a little bit of a digital version of that this is really particularly wonderful thank you uh sam for this excellent community contribution uh let's go look at another one um uh david snyder i feel like we've looked at some of these i'll have to let me know i have to do it randomly um let's go to the um i believe actually the bot um if i say um the if i use the the exclamation point random um it gives a random number just using the javascript math.random not from the book so uh and if i were to say uh eight it gives me a random number zero through eight with a decimal lopping that off so zero ones are these i got five so let's look at index five zero one two three four five more rows with purlin noise this is a thank you by the way for writing a note here that this has flashing images so i will happily uh give that warning to the viewers now that if you're sensitive to flashing images i haven't actually looked at this but um this may have some flashing images on it so i'm going to click over to it to see and we can see oh look at this is my mouse controlling it or am i just imagining that but it looks like this is just a different way of varying uh the pattern i think if i zoom in you can sort of see some of the sort of beauty the beautiful geometric patterns that appear thank you for sharing that um let's go look at one more more rose uh let's get uh oh zero did i look at zero alright i looked at zero already no i didn't i can't remember zero was what i picked um oh i think i forgot to eat lunch today people i'm sorry i had very big breakfast this kind of brunchish meal i'm like getting a little it was friday it's been a long week it's been a long year uh let's look at the morrow rose with ui um and here we go ah awesome so one of the things that's a little bit of an issue here is that the way i have my high contrast mode makes it hard to see let's go back i think i can fix that youtube compression did not like that i was uh just told all right so we can see here up let's take a look at this this looks like what we've got here are um different uh a little nice little menu here so i can choose different things like i can draw the rose pattern which is all the little interconnected vertices or just the outline of that rose pattern um i can we can select loop drawing which will uh kind of show it accumulating over time then loop n d which is what uh or and which is what i kind of did in my um version but what i'm curious to see here is these are like different colors that i can pick that's kind of fun and what i love about this is now i can play with different values of n and d so let's go to the um wikipedia page for the more rows pattern what i would like to do here is just look at like so n is 7 and d is 29 let's make sure this is working correctly by putting in seven and we can see here that this is quite distinctly although with a slightly different rotation it's flipped you know p5 y value points down as in a traditional cartesian plane the y value points up so that's probably the reason for it being flipped there but we can see and so we can uh what's kind of fun is i can kind of go through different numbers and try different um uh possibilities and then we can sort of see it animate which is always fun so thank you this is a wonderful uh demonstration of how you can create a user interface to be able to explore a particular generative algorithm okay ah all right everyone it is 2 15 my plan these days i try to max out at a two hour live stream so i'm gonna take a break in about 10 or 15 minutes i'm going to see if i can find like a granola bar in my household somewhere give myself a little sustenance uh thank you to all of the folks who are saying things like um i you know that that you love the videos and you've learned a lot from the tutorials zach writes i would have failed in my class i doubt that i seriously doubt that if i helped in some way it was only to bring out what was already there so uh but thank you for that nice comment uh some people are commenting on the um length of the beard um i've been trying the the barber shop that i used to go to closed during covid and never reopened which was very sad to me um so i'm kind of like not sure where to go um but i'm gonna find a new one anybody got any brooklyn barbershop recommendations i will take them in the chat all right um what is coming up what is next what do i want to do i think maybe in fred wilderness i forgot that i used to call myself i was looking by the way let's let's just i'm just going to show you something insane uh coding train at home i called it this was about one year ago i was some reason one of these came up um which is a later one march 28th april 3rd let's look at this one um let's see if i can find this was a fundraiser see if i can find myself just in like large format here was this the one there was one of these i have like oh no i have like a haircut on this one trimmed beard one of these like i i saw myself and i was like oh my goodness where what is that beard maybe it was the fall okay i got i got uh sidetracked this probably would be a good time for me to take a break but i'm trying to think oh yes let's do the live poll let's check on the live poll i'll take a break come back and do bezier curves good plan good plan everybody thanks for that suggestion brain um okay give me a second here me yeah okay yes all right this is thank you i got a huge shout out to many different people but in particular uh foxy on github has done an incredible amount of work on this live poll system since my last live stream this is a web application built with node um it uses um something called any db to save information and basically um you you can go to this url but i don't think you will have access to this create a new poll so for example as a test if i create a poll and so like which function should i start with and i can say copy or bezier and i can click create so now i have this poll now this is a link you could actually go to to vote untested i have actually not tested this and every time i come to do this in a live stream it doesn't work so that's probably what's going to happen today but i think even better i think if you just go to i forgot all the routes and i know they are documented in the readme i think if i just go to newest it's going to show me this particular poll overlay mode is making it transparent um and so and then i don't know how to get the voting link to you um i think what i'll do is i'll post it into whoops um i'll post it into uh discord so uh and then somebody can take this and bring it over to the chat i'm gonna go to this links channel this is the channel i use while i'm live streaming to share links to things so if i post this oh incredible fox incredible fox in the chat in the house thank you incredible fox for all this tremendous work uh and you can also answer my questions that i'm not sure what to do all right so now i think if i go here you know um let's go to this vote view i personally think it makes sense to start with the bezier function so i'm going to click vote we'll see if it takes my vote and we can see the votes are there this is promising now the point of me doing this is i am going to go to uh the overlay here uh which should be here yeah okay uh oh timeout uh i think i need to refresh this did we crash it already how do i force a refresh refresh browser when scene becomes active okay there we go um but the view that i want is actually not this one i want the overlay one and i forgot what that is we talked about this um and um let's see where is it in the readme perhaps um newest q oh there's a qr code oh my goodness i forgot about that forgot about that view so one thing i should definitely show you is also if i just go to qr code this is actually uh you could scan this and it will take you to the latest poll um but there was a view we talked about in and i can't remember what it is now um i wonder if just looking at it for it in the code would be helpful or in our pull request discussion um does any do you remember what the sort of default for the overlay view is is it just like do i just say there's like a query string i can do i can't remember incredible fox do you remember let's oops see what's happening here um pole id compact equal true can i do that with newest let's hopefully i can do that with newest because i don't have the poll id over here uh so let's let me go to properties newest question mark compact equals true and then i can hit okay let's see if that works um i don't think that worked but that's fine um i could probably get the the uh wait uh did i i linked it over here in links so i can get it uh pull pull id so i can do this so let's add that to the newest as a new feature but i'm going to paste this in here pull and then what do i need to do is compact equals true let's see if this works there we go and it is transparent which means now i can put it in front of the camera look at this look at that awesome so now i can go and shrink it this has been my dream my dream is coming true here is the poll i am behind it it is live and real time happening i can also now i should be able there's no reason why i shouldn't be able to switch over to here and also add browser add existing this one and also have that here i mean i don't it's not as i mean i could also just bring it up i have a whole computer to bring it up but um and maybe this one i actually want it to have some background but the point is i can come here and i've got it going live now six there are 67 percent of you have voted for bezier i 103 votes there are occurred according to my uh youtube uh panel here there are 300 people with this browser page open so let's see if we can get some more votes going the camera was defocusing probably because i did this and i have it on autofocus and it's one of these sony mirrorless cameras that has a feature where it looks for your face and focuses on it i do feel like i'm kind of dark let me go check the camera settings oh yeah wow super dark i mean i could turn up my lights but i just adjusted i got the sun was out earlier and that's now i feel like i'm way too bright let me adjust my lights uh this is very important that i do this while i'm live streaming i'm gonna take a break in a minute and come back and do the bezier curve now that we have this life so this is great i can always the amazing thing is if i want to put up a new poll watch this i could just uh uh let's let's so let's consider this poll done what is something uh um um what's uh what's something i could do now well i could just put up a pole this is great i can always put up a pole and i could always have it um um uh here oh um ah no ah come on i think i should line it up with the top here and it could have more than two options so okay all right everyone um so i think what i would like to do is take a break um and come back and uh i think the results of this poll uh we'll we'll be looking at the bezier function um in uh p5.js so hold on just getting myself a little bit set up here um um no there we go all right so uh before i take my break i would like to thank today's sponsor and i have my list of recommendations up here already oh the poll is there okay hold on let's let's take two take two everybody uh take two before i take my break i would like to thank today's sponsor and today's sponsor is curiosity stream and i'm going to play a short video from curiosity stream it's about 30 seconds from the founder of discovery channel comes a new independent streaming service curiosity stream home of groundbreaking documentaries and awardwinning original series follow your curiosity this is curiosity stream so um curiosity stream and if you go to uh curiosity stream slash coding train you will see that the discount is 41 off annual plans and complementary access to nebula so what is nebula first of all so i've talked about this before i'm part of a group of educational creators that teamed up to build a platform where creators don't have to worry about demonetization or the youtube algorithm it's called nebula and we're partnering with curiosity stream nebula has adfree content and experiments with different kinds of content so let me just show you the nebula website watch nebula you can see that i don't know about you but basically all of the youtube channels that i enjoy are kind of all um uh here on this uh so many like amazing channels so one thing is like just as a for sort of discovery engine if you want to find content that you probably would like if you like the coding train i think you will find a lot of that um here on nebula um you know there's just so many things to highlight here there's also a bunch of nebula originals so tom scott has a nebula original called money and so what does this have to do with curiosity stream nebula you can get on your own it's a streaming service it has apps and for tv and all of that stuff but you can actually get nebula for free this is not like a trial or anything you get it for the entire time that you have it if you sign up for curiosity stream and i realize i'm blocking the uh note here about the 41 off um so um curiosity stream loves educational creators and supporting more edu content so if you sign up with you i got to sign up with that coding train link um not only do you get access to curiosity stream but you will also get nebula for free as long as you're a curiosity stream member so this is right now only this weekend so only like today through this weekend it's 41 off that's less than 12 like 11.79 that's like one dollar a month for a both curiosity stream and nebula um so there's so much what i wanted to do is i was like making a list of like things that i have like really enjoyed on curiosity stream um let's these are a whole bunch of them uh calculating ada the countess of computing i've talked about dr hannah frye who's the host of a bunch of these videos um the kingdom how fungi made our world is a really really cool documentary you know there's a lot of really excellent nature ones secret lives of big cats owls but i wanted to pull up um nature's mathematics um like there's just so much that's um really connected to the work that i do on the coding train um i don't think the audio is coming through for this which is something that i could enable but you can see um this is a wonderful series about the beauty of fractal patterns uh as found in nature so it's just the perfect complement to the coding tutorials and i get a lot of inspiration from um watching this so um i really really um recommend it and um it's a great it's a great way it's also like it's a wonderful way to um support my channel um and educational content as a whole uh again it's twelve dollars like one dollar a month uh which is really insane uh for the whole year so if you go to that link curiosity.com codingtrain um uh you will find that discount and unlock all that there is on curiositystream and watch nebula okay um i i'm going to leave that up i'm going to uh come back over here we see the poll is still going i'm going to take a fiveminute break find myself a granola bar get in a couple minutes enjoy eating it while i watch a couple minutes of nature's mathematics uh and um uh come back and explore bezier curves and try to make some uh an interesting uh example in p5.js and uh yeah so you know um um see you in just a few within five minutes okay uh put on this music and i'll be back do so do do do just one more minute we'll be starting all right i'm back that was a quick break oh look my my camera is in a weird spot like there we go hi everybody oh it is by the way um where i sit here in the attic there is a small window over there directly where i'm pointing and i can see um you know i'm in a a small building here in brooklyn and the attic is just like slightly above the buildings next to me um and i can i could see the trees and i could see the sky and it was like there is a terrifying looking storm cloud approaching and i don't know that i've recently uh ever live streamed from here with a storm going on so i wonder if it hits if you'll be able to hear the rain and the wind and it gets very exciting sometimes up here in the attic when there's a big storm going on so we'll see if that happens sometime in the next 40 minutes i am going to try to give myself a hard cut off at 3 30 p.m which is about 50 minutes from now um this is i've been looking forward to this weekend for a long time because it's been an incredibly busy uncomplicated uh you know last few months um but um and i've got a lot of stuff going on in june and a lot of plans for coding train a lot of stuff still to catch up on that i didn't finish in may but i do feel like this weekend with the end of the nyu semester um with it being it's a holiday here in the states on monday um it's going to be great so uh i'm i'm thrilled to be here with you i'm excited to look at bezier curves and then 3 30 begins the weekend um and nicole is saying i'm just getting the storm toronto just got i don't think that's like doesn't it go the other way are you in toronto that's a great uh i love toronto um i had such a wonderful time there a bunch of years back maybe i should go on about that right now let me come back over here thank you again to curiositystream for sponsoring today's live stream um and i am going to go to the browser and look at this what's here two sketches created by simon tiger so let me look really quickly at these two sketches uh i want to look i want today what i want to do in the next 45 minutes or so is understand more about the bezier function in p5.js look at some examples of like simon's here that use the bezier function and then also try to make my own example for it and come up with some ideas for what i might do in a video tutorial about it wow it's storming all over the world as i'm seeing by the chat so let me get um some of my links open that i want i want to get programming design systems custom shapes open so and i want to have the p5 web editor open and i'm going to put it back to high contrast mode so let's start here this is uh somewhat of a community contribution um which is so let's look at simon's bezier curve functions here so what does this do uh it looks like i can move these things around uh add point uh and then i can use this slide oh whoa this is kind of amazing to me i see add point remove point oh i see oh look at this so this is a this is a pretty advanced level use of the bezier function but we can see the the point is i think what we can start to gather from this is that there is a curve that is drawn that's the white line here and then there are all these other points that somehow define and control how that curve is being drawn so and this is a really fun demonstration of being able to do that so thank you simon for sharing this let's go look at simon's next one this is bezier editor oh my goodness whoa um so now this is more like what i'm used to seeing uh and the fact that there are four points here is really key um if you are somebody who has worked perhaps in a a program like adobe illustrator or name your other nonadobe related product um you've probably designed uh elements in a some kind of graphics context with this kind of drag and drop like mechanism and we can see mirrored there's different control mechanisms closed which is closing it control spacing is doing something export so this is great this is great to see so this is ultimately in many ways where i would like to get to i wonder if as part of the tutorial making a demonstration like this perhaps a little bit less sophisticated a more basic version of what simon has made here could actually work quite well so maybe i will explore that so let's do a bit of a dramatic reading here i like to plug um and roone matson's wonderful book online book programming design systems there's a lot to say about it but the main thing to uh understand here is that if you have you know you if you're not new to p5 you're probably familiar with the way that you might draw a triangle in a canvas so typically the way that you might draw a triangle in the canvas is by setting three points i made up some points there and we can see look i drew this triangle by three points here's an x y one hundred one hundred here's an x y two hundred one hundred here's an x y one hundred fifty three hundred that makes up a triangle and i'm calling the triangle function the same is true for line ellipse circle square rectangle these are uh kind of what are they they're the the default shapes they're the shapes with width to which functions exist to draw those shapes but if you ever wanted to draw a shape that wasn't a rectangle or a triangle or a line you know with two vertices or three or four you can instead use the begin shape at n shape function and what begin shape and n shape do is they allow you to say i'm going to start a shape i'm going to define a set of vertices and then finish that shape and whoops the result is ultimately the same but there's i don't think i can edit this code but there's a lot more possibilities look how cool this is though that i can drag and drop this and it updates the code that's a really nice feature of this book so these are nice examples right of different shapes oh and there it clicked me over to a github page that we can see all right now the question is do i want to approach the bezier curve through the um methodology of using begin shape and end shape or just with the bezier function oh guess what let's see i just like i like this idea of like spontaneous live polls so um just since we've got that going here um let's see if this can i want to see like what how quickly can i make a quick live poll that will be an overlay not very quick apparently because of how slow glitches um and i'm just curious if i go to here yeah yeah yeah oh come on glitch why do you why do you forsake me so let's go to the p5 reference i'm going to give up and so let's look for bezier so the thing about a bezier curve right like the weird thing i did one of the things and this is a criticism that i've heard about some of the the sort of like processing style api is that just looking at this it's kind of hard to know what these numbers do like i mean i the documentation tells you and i'm so used to doing this it comes somewhat automatically to me but i can see like what are all these different numbers x y x y x y the three x y vertices of a triangle the bezier curve is like quite like overwhelming until the bezier function is quite overwhelming to look at because it's one two three four five six seven eight numbers so we can guess if we're used to using p5 which we are and i'll keep saying we which i am at least that these are um four what did i say eight numbers four x y points and based on simon's demonstration um we saw that there looked like there were these four points associated with the curve and this is true let's keep looking here so first this is nice to look at a little history here the bezier curve algorithm was popularized by pierre bezier in the 1960s as a solution to a common problem in computational geometry drawing curved lines that can scale to any size interesting the bezier curve algorithm solves this problem in a very elegant way by introducing the idea of control points invisible gravity points that attract the line to bend into a curve a bezier a bezier curve with a single control point is called a quadratic bezier while a bezier curve with two control points is called a cubic bezier so this is so a bezier curve so this is a quadratic one there are two endpoints endpoint endpoint and one control point and as i don't think i can drag it here you can see how that control point is causing the curve to curve up and down here there are two two endpoints and two control points and uh i see this is now allowing us to create a more complex shape with multiple vertices the yikes i think what i would like to do um is it takes a bit of practice to to to to use the bezier functions and knowing how many beziers you need to draw a specific shape can be hard in the beginning it does not help that the control points are invisible so it can be helpful to spend some time playing around with the example above before diving into the code so i wonder if i could as an exercise without looking at one of these see if i can recreate one of these shapes without looking at the code i think though as my first example the way that i would like to demonstrate and i guess i can go from here bezier demonstration and if anybody wants to follow along i will post a link to this sketch right here in the links channel in discord but what i'm going to do is um and i think i'm going to do the bet do the points in a bezier curve do they typically um do they have names i think of those endpoints and control points i'm going to say um x1 y1 x2 y2 control x1 control x control y1 i don't know if this is i maybe i should use the vectors control x2 control y2 so let me use all of these and let's draw let's say that let me give them some initial points x2 y2 and let's say 300 200. so stroke 255 and um let's make this fun let's make it a little bit bigger give myself a little bit less space here a little bit more space here turn on auto refresh background 0 stroke weight 4 line x1 y1 to x2 y2 let's just start with this so this oh there's something by the way in my monitor over here that's really distracting me so i'm going to ah there i fixed that all right so here's some basic code to draw a line between two points now what i would like to do is set the control points so i'm calling that cx1 so let's just make one of the control points um 150 a 150 and then i want to draw a point at y cx1cy1 okay so what i'm doing is i'm sort of building the elements here and i should maybe draw all of them um x1 y1 and we can think about color and all of that but i just want to be able to visualize everything um let's make it a little quite a bit bigger okay and then i also want to have another control point cx2cy2 and let's initialize it to somewhere let's say uh 250 250 okay so this looks like um this looks like uh all of the pieces that i need and in a way maybe this line isn't even so relevant so i've got two end points and two control points of course you know this these could be endpoints and these could be control points it doesn't really it's all arbitrary but i'm trying to start with something that i know or have a sense of how it will ultimately look so if i were to call the bezier function and set first an endpoint then a control point then oops then another control point and then the last the last endpoint and i want to say interesting that it fills it there we go and what if i were to just for right now say cx1 equals mousex like if mouse is pressed if i press the mouse i can control one of the control points so there we go now i think in the demonstration um i and i see that wave is making a point will i go into the actual algorithm not just the prebuilt function that is a really i would love to do that i don't know if that's that's not necessarily my intention for the shorter video that i intend to make well that would certainly be something to explore here to understand it further but let me also i'm just trying to figure out how to annotate all the pieces of this let me say stroke weight one and draw a line from x1 y1 to the first control point i just want to basically recreate the default diagram that i'm always seeing which i think looks like this and then as i move this around you can sort of see how it is the control point for this part of the curve now obviously i would want to do something more sophisticated where i pick um different where i'm able to have maybe each of these points be an object that i could click on and move it around if i really wanted to build a tool to be able to drag and drag around and make my own custom bezier curve but that's not really particularly where i'm going with this i just want to understand the bezier function any questions that about what i've done so far i'm going to look at the chat um can you guys hear those birds singing the storm has not arrived yet i was gonna go for a jog today wonderful time to do that before it rains um okay so the next thing that i'm going to save this um and i'm going to duplicate it because what i would like to understand now is how to do and zachary macarthur saying the algorithm is far less complex than most of what you've done in the past all right i'll try to take a look at that in a little bit i mean i had my trajectory here that i'm thinking is i wanted to just understand how the bezier function itself works now i want to get to the point where i can use this same function the same functionality but with begin shape and shape and quadratic vertex bezier vertex etc people are interested in the algorithm so i i um oh the chair is making a squeaking sound yeah this is like a by the way i i hate that i'm sitting right now and my intention if it works out for me to i have a new spot where i'm gonna live stream from is to be standing um so sorry about the chair sounds um um what i was hoping to do was actually take the bezier function and look at it in the context of something like the selfavoiding random walk and visualize it differently but let me let me get one step further with this and i'll maybe i'll look at the algorithm as well which is that what i want to do is say begin shape and shape now what happens if i say vertex x1 y1 vertex x2 y2 and let's just make this a different color i want to figure out how to get this orange line to follow this exact path is it as simple as saying bezier vertex and then just giving it four um no what is it telling me here vertex must be used once okay so is that the control point when i say bezier vertex interesting is this how it works no actually no okay let's look it up so let's see what does it say in runes vertex oh bessie vero let's look at the draw more sophisticated curves let's look at bezier vertex reference page um alright so how does this work oh control point control point anchor point that's interesting so you give it a vertex which is so it's like it's almost like you chop off looks like the way that it works is you take this out and put that in as the vertex and then the bezel vertex is all the rest of it ah interesting so then if i wanted to keep going like i could make this another vertex and then i could continue on with two more control points to the next point that's interesting okay so i never never occurred to me to do this the quadratic vertex would just be is that just one then the quadratic vertex is one control point and then the next point ah fascinating totally makes sense okay i can't believe how long i've been doing this and i never really like bothered to check how this really works um fascinating okay so now i understand this um an easy thing to make it fun would be to animate a few beziers in a particle system and let them draw yeah you can keep going without without adding more regular vertices i uh okay can i like oh yeah look at that oh ah okay so what i kind of wanted to do is the following i'll show you so i'm gonna go to just sort of see how this works so this is my selfavoiding walk uh example and let's make the spacing like 50 just to all right so this is an example that i'm working with which is a selfavoiding walk and i've talked incessantly about this there's a edited coding challenge video it's about 40 minutes long where i code through this entire thing soon to be published i'm going to duplicate this and say with bezier because what i was curious to do here is you'll notice here that i have begin shape and shape vertex so what would it mean for me to start using bezier vertices to draw this path and i did this by the way there is something called curve vertex which you can see just kind of makes it a little curvy but i think we could get even further with this with a bezier vertex so i think the way for me to do this i need to have access to an index encounter i equals zero i is less than path dot length and then i plus plus and let spot equals path index i so this is the same but now i could say let control 1 equal path i plus 1 control 2 equal path i plus 2 and then anchor equal i plus three then i'll want to skip ahead like i want to use four points at once although can i just do if i can keep going i can just say ah wait wait wait i can start at 1 i can say vertex path index 0.x path index 0 dot y ah yeah yeah yeah and then the um this is i plus zero i plus one i plus two then i could say bezier vertex control one dot x control one dot y control two dot x control two dot y anchor dot x anchor dot y um can't read and then this has to be path dot length minus two okay but i also want to go up by three each time or by two i mean is this what i meant to do i'm not entirely sure does this make sense so i'm using three points and going up by three yeah so hold on let's um let's give myself a lot more space to work with here now unfortunately um the particular algorithm that i'm using it gets stuck quite easily and takes quite a while to get past being stuck and then i think i can also i think actually for the sake of argument i should um also it might be interesting just to try quadratic vertex but um i should also say here vertex like path uh index path dot length like i should do the last one also and let's give myself a lot more space see what happened i always like to do this when i've got something let's go here and see this is pretty interesting could be nice on the 3d version of this random walk bezier curves i quite like how this looks i mean it really looks like i'm making some kind of strange map terrain coastline like thing i think what i would also like to do just to because i have such a large space to work with is put this back in which um will like look for a lot more spots all at once let's see if i can save this come on i wanted to get yeah it gets super stuck so fast i wonder i want to have it start in the middle actually um which i think would be more effective also um and and maybe actually watching it is more fun than anything else sorry i'm like obsessively tweaking this now uh so floor columns divided by two uh floor rows this will have it start in the middle let's go to oh so small what if i um let's go back to like uh 10 just because that's really small and then see what we get what do we think folks oh let it jump if it gets stuck that's interesting we've we've got a little lucky start where it's not getting stuck too badly it's finding lot it's got lots of open space it's finding other ways to go looks like norway so true if you make it fill oh whoa okay um let's try having it fill um yeah it doesn't fill in the way that i want it to in that um but that's pretty nice like i kind of don't love this oh i guess i could do um clothes will that make it look you know that's kind of whacky it kind of look an interesting yeah it's really satisfying when it finds its way out of a corner unfortunately it's not continuing to go and now it's going to be stuck for quite a while now but i do rather love this shape that it created i think we've made something away so what the question i have is what can i apply this to that is i don't know that in the video like demonstrating this makes sense purlin noise um yes stig there's a family family you don't need to watch the coding train i'm just responding to stiggs messages in the chat about uh uh celebrating um his wife's birthday okay um all right i'm trying to think of where i want to go with this next can you make it go in both directions interesting it's europe can you make it go in both directions i don't know what that means well one thing that is interesting to try here i have an idea i have a unique idea it's not unique i i explored this before uh where is my code let's give it uh more direct more opportunity to go in different directions ah so let's give it that it can go also to negative 1 negative 1 and to negative 1 uh 1 negative 1. so it can go in all the diagonal directions as well or 1 comma 1 or one common negative one so now it will get stuck much less this will ultimately allow it to i believe cross yeah so it's not really going to get stuck as much doing this because it's got so many more ways it could go from each point both directions means grow at each end i got negative 1 1 twice negative 1 negative 1 1 negative 1. oh whoops thank you that's going to make a big difference all right let's see what we get here i feel like the fill might be oh i'm really liking this now i don't know how i feel about this giant line that's like continuing to draw it and the fill so i think i want to go back to um have getting rid of that close and getting rid of the fill and let's make it just a little bit whoa oh actually i kind of like that i mean i'm gonna like this so much when it's done but um let me put no fill back and then let me also make it a little thicker yeah this is kind of what i would now it's kind of doing what i imagined random coastline generator certainly is quite like that you know one thing that would be interesting would be to require it to do the all of the nondiagonal choices before it's allowed to do a diagonal um thanks to all of you who are watching so late into the night people are posting that they need to drop off and go to sleep so is it still a selfavoiding walk not really i would say i mean i think this is up for debate if only uh okay uh is it still a selfavoiding walk yes no i don't no create all right folks uh here's your new poll to vote on and uh now if we look at the results um and i go back where where where were we here is this still a selfavoiding walk now the issue is i have to get the poll id um so give me a second here i have a new poll id that's why i latest oh shoot oh life is hard uh here we go let's see if this will load oh oh yep there we go okay we've got the live poll going oh this is fun i love seeing it going live uh [Laughter] i really should have i guess i should put this overlay back on top of hold on back to here and then we can get it back where is it where is it here it is and i can uh oh i um unlock it and put it here okay is it still a selfavoiding walk that's the question get a little small i'm obsessively like there we go can you see that oh it's definitely stuck easy fix is also just to let it start in a new random position when it got stuck for long enough oh incredible fox has already fixed the newest thing [Laughter] uh amazing that's amazing so now i really can spit up polls instantly uh that's great i i uh since i'm only have 15 minutes left i'll i'll merge and fix that for next time um so i think the votes are in pretty definitively that uh no so far okay um what do i want to do here let's i've got 15 minutes left it might deepen my knowledge for me to see if i can implement the bezier curve mathematics whoa i want to look for um like just a really quick reference uh i don't know what did you use simon oh let's try this um given two given two distinct points p0 and p1 a linear bezier curve is simply a straight line between those two points the curve is given that's linear interpolation okay quadratic so maybe i should try quadratic first recursive definition explicit definition polynomial form am i going down a crazy uh rabbit hole i don't know uh um simon is saying uh important detail for beziers if you want to look smooth which is what they're for the control points must be aligned and any anchor point and two control points must form a line got it that's interesting so i'm certainly not doing that in this crazy demonstration and you can see there are lots of jagged parts although that quality is something that i quite enjoy about this particular pattern i think i can remove that right now so i'm just trying to decide how to best use i mean i think the particle system was a good example of possibly a way to demonstrate a bezier curve in a sort of like interesting arbitrary visual way i would like to explore the math but i'm a little bit afraid of that like trying to read this and implement it live so if i can ask for all of your help that would certainly be welcome animation of a linear bezier curve okay so let's let's see if we can figure this out now there's a helicopter now flying around above me all right let's let's do a little bit of this for like 10 minutes see how far i get to understand a bit more about how the bezier curve actually works so let's go back to this particular example let me duplicate this and let me see if i can recreate exactly this without this so i imagine what i need to do is have some iterative process where i say x equals lerp between cx well x1 and x2 by some amount y is lerp between y1 and y2 by some amount and let's call this let's call this amount it might be a better name for it and then i'm just saying vertex xy begin shape and shape so what did i do so far what i did so far is i figured out a way this is like um what i i did very quickly just this the beginning of this which is essentially like a linear bezier curve in other words a straight line between the two points i'm basically looking for a t so it's called t here oops i'm going to close these other sketches this is called t in right and i'm using the lerp function the question is maybe what i should do is not use t because not use lerp because i want to follow the formulas on this page and if i don't use lerp maybe it'll allow me to get there a little bit more quickly so if i go back to here and i say um just trying to fit everything onto my screen here which is very hard to do um right what am i uh so so if i'm saying uh what's the equivalent here i'm saying x equals x one and i guess i should call these x zero just to be consistent i'm not using the control points yet so um x equals x zero plus t times x1 minus minus x0 which is the same as that okay is that right and then y is y zero so and then these are sorry uh x0 x1 whoops this is one i can't get this right okay so that's good right uh what did i get wrong here oh c x x y x y x y x y what did i do wrong x2 on line 136. there's no line 136 oh here all right i don't need these lines right now there we go okay so i'm not using lerp it's just a percent t is a percentage of the way between this point and this point and i'm drawing all those as vertices okay okay uh a segment is a one degree bezier curve start there um all right so let's see if you look more closely at simon's telling me i i can find out in um uh his sketch which is great uh thank you all right so now quadratic bezier now i have a p one okay do i add a formula for this uh okay which one do i look at this one here there's just different ways to write it okay so now if we say um so ultimately this is actually i'm gonna i'm gonna follow its name nomenclature here this is actually x1 y1 this is now x2 y2 if for p and i honestly like i would like to do it this way p0 equals create vector 100 200 this is going to really help me out uh p1 equals create vector oh and i can't do create vector up here let's just do all this and draw uh p1 and then p2 equals create vector x 300 200. so i'm really following um and then i'm going to say this is p0.x uh p two two dot x p zero dot x p zero dot y p two dot y p zero dot x did i get it and then p 0 dot x p 0 dot y 1 2 one two p zero what did i mess up here oh this is y there we go you all with me so i've got p0 p1 p2 and the idea is that basically i'm extending this uh you know with the linear there is no control point to sort of suck all of those internal points away almost like a magnet from the linear path it's basically creating a quadratic path and so in addition there's like the um one minus t squared so let's look at i don't know that it matters which one of these that i pick um so let's let's use this one so if i can once again here now i should be able to do it make a quadratic one which is let x equals p1 dot x plus 1 minus t times 1 minus t times p0 dot x minus p1 dot x plus t times t times p2 dot x minus one dot x did i get that right and then if i do that with y uh no phil i think i've got this now let me say p1.x equals mousex i think i'm just going to do the quadratic so if i click the mouse so this is now not actually using um p5 bezier vertices uh and um mr phd is telling me that's a good point i could consolidate this by uh saying same right you could do this there's probably a less awkward way i could write this out but what i like about this is a couple things one is i've got total control over this right now so look at this if i do this we can sort of see and i guess i'm missing if it's not divisible it's funny how i'm not getting the last point i think i should do less than or equal to yeah so you can see here like like here it is this line segments i'm getting the curvature if i do 0.5 like really it's just doing that like the curvature is related to how uh frequently i got the other thing i like about this is i can draw a line from p0 dot x p0 dot y to x y no no no uh that's not what i want to do x y to root to 1. now there's just so many of them so this needs to be stroke weight one uh oh so um i'm doing i forgot but you know sometimes i just forget that i'm live streaming can't see the code i've kind of really made a mess of this but um um one minus t oh this will help thank you this makes it a little nicer looking what i want to do i need to do this twice let me do this twice i'll show you what i in a second you're going to see what i'm trying to demonstrate um i want to demonstrate um i basically want to show oops i lost the wikipedia page here it is i want you to see this kind of cool pattern oh it's doing it slightly differently i'm gonna figure out how it's doing that but hold on a sec i realize i misread that um p p one dot x p one dot y and um if i segment this out yeah i was kind of so what is it actually doing then oops it's drawing oh it's drawing the lines across these like the tangents it's just the lerp amount oh okay wait so what i'm actually doing is saying i'm doing the linear thing it's doing the linear thing between p0 and p1 whoops and then it's doing it's kind of crazy what i'm doing and then the same lerping between p p2 and p1 uh no the other way around there we go this is what i was trying to do there i got it i wanted to see that mesh i wanted to see this mesh i like how they colored it and um i'm at my time here i like how they colored it which is it's a little silly what i'm doing here but i'm just really fascinated to try to recreate this exact thing looks like it's just a sort of mapping a hue of a rainbow of colors so let's try that um and also i think i just want to be able to see this a bit more so hold on a sec it's also driving me crazy that as i move that point it gets reset whoops so really what i'm doing is saying let p0 p1 and p2 then initialize them all in setup also let's um let's give myself i kind of want in a weird sort of way i want to give myself more vertical space and change just so i have space for the code um let's just make this 600 and so i want the points to be 200 100 200 300. um and then i have this and then this should be like 500 and then i'm able to move this this point okay so let's um oh you hear the wind you can't hear that can you uh let's move these up even more okay so now all right i've got my quadratic um curve that i am manipulating with this little nice crisscross grid thing in a crazy sort of way now i almost don't want to draw this anymore like this is showing this is just demonstrating how you get that curve and if i go back to like this right we get that moire pattern effect did i pronounce that correctly but i also can't see it so let's oh it's raining all right uh what happened to the line uh what happened to my two lines i need to draw those lines p zero dot x p zero dot y p one dot x p one dot y okay we don't need that and then also p2 okay this is pretty cool all right now what i want to do next let's drive me crazy like i just need more i need more space now this code can sneak over here i can do this great all right so next i just want to try getting the color um hsb time hsb time yes it is hsb time now um color mode hsb and i can say stroke t times 360 uh 255 255. there we go we have our colors they're red on both ends and there we go so here's an uh so clearly what i should be doing is moving like p1 with purl and noise so i should be moving all the points uh but let's just try p1 p1 equals noise uh let t one let t two or no uh x off no i don't know what to say x off one uh i've got all these t's t1 and uh t2 and um t1 equals random 1000 t2 equals random 1000 noise t1 times width uh noise t2 times height t1 plus equals 0.1 t2 let's make the much less there we go i don't know what i made the fixed points are uh should be i think also now like zero zero and width height i'm not sure what i've created but it is kind of interesting i think i i have to i really need to stop but i need p1 and p2 p0 and p2 to move so i'm going to do this uh p0 dot so i'm going to say um let y speed let x speed p0 p0 p0.x plus equals xspeed okay then oh maybe i should just use like a sine wave uh p0.x equals map sine of t one negative one negative one to one zero to width and then what if i do p 2 x but use cosine don't know i don't know what i'm doing very strange oh they need to move up and down in the y uh they're moving into like a circle uh what if i give them well now we're moving along a diagonal no did i have it right before there we go this is kind of looking for i don't know what i'm doing oh yeah it should definitely uh make it sound reactive this is very strange keep the end points fixed and oscillate the control point so uh thank you everybody i think this is the end of today's live stream um we've made a few different sketches i can't remember if i posted this one into discord um i don't have a good mechanism right now for people to share variations off of what they make off of these like sort of more um uh uh kind of improvisational um live streams but i would love for you i guess you can if you join the discord or share with me at shiffman on twitter um that's a great way to share this stuff i don't know that i really settled on what i want to do for the bezier function tutorial but i definitely have a better understanding of how it works the thing that i didn't do um which is uh is i just did the um i implemented this quadratic bezier curve math and i got something you know somewhat like this so what i would uh certainly recommend and it wouldn't be it's not too much more work is i just need one more point and then it's 1 minus t to the third power oh but i'm going to leave that as an exercise so viewers watching i would encourage you to take my code which implements this particular this is it right here i'm going to take this out this is quadratic bezier can you um can you um uh uh add one more control point for cubic and the reference that you want for that is right here can i link directly to cubic i guess i just need to get to like where is it cubic yeah okay so uh please do this and see what you get so it's the same sketch take the code see if you can complete this exercise this is a homework assignment for those of you watching it's due on monday and you turn in your homework by tweeting at me at shiffman on twitter or um uh you can also i'm just to go into the discord here the channel would be um i guess you could use this share channel here i'll try to keep my eye on that um this weekend i would love to see your take your version of that um okay so um thanks everybody um that's it for today i've accomplished some goals uh i don't i don't know what i'm going with this i would love your thoughts and suggestions about what i might actually do in the tutorial itself but i think actually this helps clarify for me i think i just want to define the bezier curve show how to make a continuous shape with it and then do something where i move the points around algorithmically can you do b splines in the next session maybe that's definitely a possibility um by the way any notion users out there a notion recently released an api and i have an opportunity perhaps to um um to do some videos about it yeah i was thinking of trying to use this as a basic like data store um so i'm interested in pursuing this if this interests you i would love to hear about it i'm a little bit over time but i did okay am i going to be able to get a jog in or is the rain too much we will find out that's the question i've enjoyed doing two live streams in a row speaking of notion and nebula thomas frank um on youtube uh is also part of notion um thomas frank has a lot of subscribers um and so i believe he has a notion tutorials and templates so i was talking with um i hope it's not thomas messaging with him about doing something with the the notion api nebula has a channel that's interesting oh yeah this is one of the originals it's a thing called working titles where it's a bunch of videos about um different title sequences and different shows um thomas attractor what is a thomas attractor oh what what i haven't done this one hold on hold hold pause hold stop the presses this is it that looks simple enough oh i want to do this oh i want to do this not today by the way my middle name is thomas and i was talking about thomas frank oh my god uh it's all coming together oh i'm not signed in somebody file an issue for the thomas attractor here so unfortunately there won't be a live stream tomorrow uh we're gonna have it hopefully a nice family weekend i do plan i do hope to live stream once per week over the summer there's a bit of a tradeoff um you know if i if i really wanted to um you know um i mean i shouldn't i shouldn't ask this audience because you're all the you're the audience that's watching the live stream but the more i live stream the less i'm able to get the uh sort of like sequence tutorials and coding challenge videos out um our stark says go for a jog get some food and we'll see you back here at 6. i wish i i if i were 20 years younger i'd probably just be live streaming all day but oh and look wow this is wild what my shirt is doing that's really cool but please say to join the discord let's connect there let's share all the wonderful things we're making you should live stream your sessions maybe i can tune in all of that stuff uh there's eight seconds left thank you so much for being here with me today this was an episode of the coding train i'll be back next week stay tuned subscribe and all that stuff thank you to um curiositystream qrstream.comcodingtrain uh for being a sponsor of today's live stream and i'll see you next time as always i always forget that this stop this stop it stop this stop i'm gonna do this stop this stop i'm gonna do this this stop this stop this stop i'm gonna do this stop stop i this dot song never forget this dot somebody composed that song for me i'm going to say once again here we forward go cartesian coordination autotune and the internet will fix that for me sing it with me it's the new cartesian unicorns and rainbows and cupcakes what else is there yes kittens thank you very much kittens and rainbows and cupcakes notice that look what i get i'm really losing my mind okay let's do it the kittens kittens and kittens and kittens kids the kittens the kittens i feel just sort of like a nice feeling of relaxation everything's gonna be okay today dream is not broken it has not frozen this is a this is a wonderful thing okay we're gonna do it i'm really getting to something i need my sound effects that was invalid syntax i forgot uh there was one other thing here that i think is important that i will use continuously over and over again all sorts of text generation analysis things that i will use continuously over and over again first thing i need to do is yes i just noticed by the way i know this stream is over that i'm gonna and i'm gonna i'm gonna show this to you that um um this is a a beta or alpha e feature on youtube i believe this is now available for all of my videos i would love for people to try to use it so go back to a previous live stream any video clip and share i'm so excited to have this been wanting this forever um in some ways it might mean that i could just sort of double down on live streaming and then clip out sections i have no idea but that just got i've been asking youtube to add me to the beta for this i'm pretty sure that i'm i'm special and i just got added but it might be that it's just on every channel now but i don't think so so please if you're still here and watching that um please please go use that try that see what it see what it does for you okay goodbye everybody um that's it have a wonderful weekend