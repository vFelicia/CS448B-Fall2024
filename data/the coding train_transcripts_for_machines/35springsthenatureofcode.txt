hate having to enter but anyway hi Spriggs this video is gonna be about spring forces spring forces is Boeing Boeing Boeing okay so what did we just look at little punchy we just looked at a pendulum and what we're really looking at was an idealized pendulum the arm of that pendulum we didn't really simulate the fact that it you know it couldn't bend at all contributing well the spring is a similar situation to a pendulum which we could represent as a bob hanging from perhaps some origin point but instead of hanging from this idealized rod a fixed length instead we have this elastic arm this elastic arm that in fact can be expanded and contracted and thus a force is gonna suddenly you know it's a spring to pull it in Springs I think you know what I'm talking about right so we could represent that by drawing this sort of squiggly springs thing there we go that's nice okay what a nice drawing okay so this is what we're working with a spring now that we've established that let's figure out how would we simulate this how would we get this sort of springy motion oscillating up and down so we know we can do this with with with the sine function with a sine wave we spent a whole video a couple videos back looking at that and that's what's going on right here in this processing example right if we take the result of cosine of an angle and map it to some range then and we use that for the Y value of something it's moving up and down it looks like a spring the thing about this is while we have the simulation on the screen it doesn't integrate with anything we've done before what we really want is this spring coming up and down but in addition to going up and down a wind force could blow on it gravity could happen you could bonk it to it you could connect other Springs it could be a whole set of forces all being applied to this object so we need to look at instead of just kind of using a kind of trigonometry sine cosine trick to make that oscillating motion we really need to look at modeling a spring force how do we do that let's go over here shall we okay so spring forces are modeled using something called Hookes law wrote this down over there Hookes law in Latin is I can't pronounce but maybe nobody can pronounce Latin or whatever ooh tensio sic vis translates to as the extension so the force and it would be nice if like the letters just of that appeared in front of me but that's not gonna happen right now but what we're talking about is we're saying the force of a spring is directionally directly proportional to the extension of the spring right the more we stretch that spring out the stronger that force the more we contract the spring the stronger the force a spring it at rest won't have any force and Hookes law is typically written as follows F equals negative K times X so what are these values has with just about everything we were looking at in this series of videos about something we've got a constant right K is a constant you know it probably has some realworld numbers for different kinds of Springs but for us it's just allowing us to tweak tweak the behavior of our spring is it a really elastic spring or it's a kind of a rigid spring try a higher constant try a lower constant you'll see what happens deep breath what is X X is the displacement right we talked about the force of the spring displacement well that kind of says the displacement the force of the spring being proportional to the extension of the spring X is that extension how what is the difference between the actual length of the spring and the rest length so this is something that's really important a spring has a rest length that is the length of the spring will naturally kind of gravitate towards at rest that's where it will sit without moving without springing at all as soon as we displace it from that rest position will let go it's gonna spring back and forth so this is great now one thing that you know I just noticed something about this formula so this is gonna be a vector right we're gonna we're gonna have a spring that's in a two dimensional world and so this is actually really just telling us the magnitude of the force this is how strong it is the force that the magnitude of the force it's stronger with a high constant big displacement it's weaker with a low constant and no displacement but with as with any vector and calculating any force we need both the magnitude and the direction how are we gonna get that direction let's see let's see I think it's pretty obvious right okay so let's think about this for a second let's take me let me draw this spring again let's say this is kind of representing the springs rest link that's the spring rest length but we we've stretched it out and we've pulled it down to here well what's the direction of the force clearly visually we can see the direction of the force is a vector that points back from the Bob to the origin so we're gonna be able to do this we know that if we know this as a location origin and this we're calling the Bob and maybe this Bob is going to be an object with a location we can make a vector that points from the Bob's location to the origin and then we can calculate its magnitude by saying negative the display negative some constant times that displacement how do we know that displacement well look at this this I would say is the current length current length so we have the rest length and the current length what if X equal to X is equal to current minus rest what is the difference between the current length of the spring and its rest length here we can see it's you know it's going to be some number it's longer you can see here that if we were to kind of shrink that spring like push it all the way in right this is still our rest length we push the spring all the way in that displacement it's going to be a negative number and so that's going to reverse the direction of the force so then that force would push it out so you know if you ever saw all of these simulations of stuff on the screen which is like springing bouncing all this that looks kind of cool it's all spring anything that's physics and I can't handle that look at this formula I don't think we've looked at it for a force this simple I mean we had like you know numerators and denominators and other formulas and Greek letters this is really simple I mean I suppose the Hookes law in Latin so that was a little bit hard but but here we've just got negative K times X awesome and we know about vectors I'm pretty sure we can do this okay now what I want to do is kind of start putting some code together that's gonna make that's gonna simulate the spring force and then we'll talk about a big question in it here's how do we really organize this program in an objectoriented way and i am recording this so i haven't wasted my time so far you know that last video the penciled one I didn't stop to say it was recording which was a good thing okay but and we've been going about seven minutes good okay I got to stop talking about that I'm making a video you guys know that I'm doing that okay hi here we are now we're over here so we look at this oscillating one it's very hot in here and I'm gonna close this out and let's look at this one so one thing I should notice whose is that one thing that we should notice I should notice you should notice we should all notice we should all notice is that the bob is now a mover object we didn't have that with the pendulum our pendulum example we kind of did in this simple way where we just dealt with sort of like the vector location of the bob and the vector location the origin we did some trigonometry and it moved we really want to build this in a way that other forces we could blow some wind on it and it would move so that bob is a mover it could experience gravity could experience wind of friction and he made up forces that we had but it also can be connected with a spring force a spring force is just another force we can apply to an object so somewhere at some point if we do this successfully which I'm going to try to do we're eventually just gonna say Bob that apply bob dad Bob dot apply force spring force right this is what we're looking to do we need to calculate that spring force and then apply it to our object can we do that I think we can so let's think about let's remind ourselves the magnitude of the force is negative some constant times the displacement okay so in order to do that we need to figure out what is the displacement I forget it let's figure out the direction of the force first we'll get to the magnitude a second let's look at the direction of the force a forces points from the bob to the origin so origin is a vector that's its location Bob is a mover and the Bob's location is ah scroll up edit edit this out of this out the table location is a vector inside of the mover class so we can make a vector I'm just going to call it direction which equals I'm gonna subtract the Bob's location the origin okay now we've got that direction vector the Bob's location the origin hey you know what we need to know we need to know the current length of the spring because we're gonna compare that to the rest length by the way the rest length is just a nice little variable that's set up to be 200 so that's fixed here this spring has a rest length of 200 we need to know the current length well just so happens we just made a vector that points from the origin to the Bob you know what the current length of that spring is it's the length of that vector so I'm gonna make a variable called current length and just say really quickly let me ask for the magnitude of that vector so I have the current length cuz I'm gonna need that once we've done that I can normalize that vector now that we've normalized that vector it's of length 1 and I can scale it appropriately later ok what do we need we need a constant K I got one I got one for a really good constant oh it was gonna be a good one one point one that's not a good one the selim constant oh well you think of something better okay that's a constant point one I don't know that sounds good maybe we're gonna need to make it smaller maybe we're going to need to make it bigger we'll do something okay that's the constant now now that now we need X the magnitude is negative K times X X is the displacement I'm gonna call it in this example stretch I don't want to ding ding there's a bell ringing which you probably can't hear but it's distracting okay I'm gonna call it stretch the reason why I'm not gonna call it X is because we kind of used the variable X to mean a lot of other things and I don't want to use X to be displacement so I could call a displacement but I'm gonna call it stretch that equals current length minus rest length awesome so we've got the constant K we've got the displacement now we need to do is say all right multiply that force that direction vector by negative K times Treach that's what Hookes law says and then didn't we down here say what are we going to do we're gonna apply that force now we call the dir for direction but then we manipulated it maybe it would have made more sense to call it spring the whole way through and I'm just gonna if I had planned this out better I would have just done that now we've got this variable called spring we did all the calculations and now we're gonna apply that force and we're gonna run it now oh let's ask ourselves a question that's let's just run it nothing's moving why isn't it moving it we want it to move why isn't it moving well here's the thing the rest length is 200 and the Bob's location is that width divided by 2 comma 200 the current displacement is 0 we actually position the Bob at the wrestling so now we can see if this works by just let's just put it a little further down 40 pixels down and we see oh it's bringing back and forth right okay whew it's probably better if we did it wrong we had to fix something but you could see it's working now there's some things about this maybe that looks a little too elastic so what can I do I'm want to maybe I want to maybe I want to I'm sorry maybe I want to make it a little a little less I don't really need to do that you can see it's a little less so manipulating K will do quite a few things but perhaps I just want to demonstrate that we could add other forces to this scenario for example and this is going to be kind of dangerous to do this I could make up a force called wind which is just going to be some arbitrary value that I seem to use and if the mouse is pressed let's apply that force just to prove that what we've done is actually created a spring force within a world that can have lots of other forces when I click the mouse you see some wind now oh we lost it now ah maybe we should add it's kind of like going crazy maybe we should actually add a little bit of gravity I didn't really need to do this but I'm sort of demonstrating a point that this spring force is just yet another force and we can see now if I had a little wind it blows but if I let go gravity's gonna pull it back down now there's no dampening of this spring so maybe we want to add some friction so air resistance just sort of dampen the velocity there's lots of things we can do here but look at this this is pretty great we've actually gotten the spring force going okay good job well that's I think this is close to the end here but I kind of want to ask if you have any questions but okay so here's the thing we need to reorganize this code this is a mess uhhuh this makes me very uncomfortable and I I don't like it at all look at all the wood be suspicious of all of this code here doing all these calculations I think it probably makes sense for us to actually have a spring class so I just want to discuss that for a moment okay here I am right okay so we have this spring system I'm erasing everything which has a couple things there is an origin point which I actually might want to call the anchor we can think of that as what the spring is anchored to the spring also has a variable which is the rest length which is very important it's obviously quite crucial in our calculations there is also this Bob but we've already established that the Bob is a mover the Bob is what it's going to have location velocity acceleration we're going to be able to apply forces to it this is something we already have it's the mover so would should we add a function inside the mover which is like a spring function we could we could do what we did over here we should just have a lot of gobbledygook code and draw and then apply a force to the Bob but I think a better solution would be to actually create a spring class and then what would the variables of that spring class be one variable could be the location of the anchor another variable could be the rest length oh my goodness and I forgot something important another variable could be the spring constant k how elastic is the spring how weak is this spring so what we've done is we've said all of the stuff that has to do with the spring that stuff in the spring class all the stuff that has to do with the Bob that's our Bob class are what we've called mover in all of our previous examples we could call this one a shaker now but that's kind of this weird inside joke that makes no sense to anybody right now except for me or a couple of people watching this video okay so what's missing though we need a way of applying the spring of the spring force to the mover object and one suggestion I would have for that is we could add a function in the spring class called connect which connects the spring to a given mover this is going to be incredibly powerful because what it would allow us to do is it allows it to have a system of many Springs of many objects and we could connect this object to this spring and this object to this spring we could make the anchor of one you know this is the opens another question maybe the anchor should actually be another actually moving object we could have a spring without about having a fixed anchor point so there's lots of ways opens up kind of a can of worms of possibilities but what this allows us to do and I think I'll just show this to you in code over here there is a example that I'm hoping is prepared right here in the draw function and there's a lot of some extra stuff this is the line of code this is now example 3.11 if you're falling on one go look in the github repo you can see here we can say spring dot Connect Bob this is now a system where we have a bob object and a spring object we make this spring with a location and a rest length and we make the bob and then at any point we can say spring dot connect Bob so that's the function that handled okay where's the Bob where's the spring what's the current length compare that to the rest length calculate that force apply it to the Bob that all happens inside that function and if we wanted to we could just take a quick look at that we can see this right here this is the exact same algorithm that we typed out ourselves the force is the difference between the Bob's location and the anchor we need to get the stretch which is the displacement that we need to scale that force and apply it to about all of that happens in that function so I don't know I am a little bit obsessed with kind of nice clean objectoriented design but I think this is this is a really flexible scenario a couple things I should mention about this one thing about this spring is you can see this example if you go look at it it constrains the spring so it can never go below a minimum length or a maximum length I mean that's sort of an artificial constraint but it can make the system behave a little nicely a little more nicely and it also has some dampening in it and it also lets the user kind of drag this around so now that we've looked through this scenario I should really say here's the thing so the next set of videos are gonna be about particle systems and then we're gonna start looking at physics libraries you know a spring force is something that other people have thought of and in fact one of the libraries we're gonna look at toxic libs verlet physics package is all about spring forces and all different kinds of springs and making particles and connecting them by Springs so in a lot of scenarios if you want to have a system of many connected Springs to simulate like a chain I'm sorry a blank and you could do you can do lots of great situations with Springs in many cases you're gonna want to use one of the library so I would say play with this for now when we come back to top one we get to toxic libs we might revisit this and kind of look compare/contrast does it make sense to kind of calculate the spring force yourself in the code or just use a libraries can built in spring objects but if you're looking for an exercise here what I would suggest this is really a this is really a place where you can do kind of like what we said with the pendulum try to make a system of Springs and I'm gonna describe two scenarios for you one would be create a set of Springs like this and you're gonna see if if you draw it just as kind of like a curved path it's gonna appear a little bit like string perhaps and another thing you might try doing is create a grid of Springs so to create almost like a skeleton for some kind of strange I don't know what I'm doing structure so spring forces you you know you oh boy you can do so much with them and I'm not going to blather on because clearly you should you know cuz we're done this is like 20 minutes already so hopefully this helped you I can't imagine what's still watching at this point but if you are I'm gonna press the button now to shut this video off and this this marks the end of the oscillation chapter and we're gonna get to looking at particle systems next which is systems of many many many moving objects okay