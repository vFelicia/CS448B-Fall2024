hello this is a video whoops I will not hurt myself too much throughout the course of this video let me I'm not just going to start again hello this is a video about arrays in Java SL processing in fact and I'm going to use processing three which is a my new song my new album processing 3 coming out I don't know many years from now and I'm not making videos about programming but making albums about singing about programming okay so uh what is an array why do you want to use one how does it work and what kinds of things can you do with it um that's the topic of this video so perhaps you're familiar with this idea of a variable in Num equals 7 so you have a variable the name is numb the type is int integer and the value is seven but what if you want to have a whole bunch of numbers you want to have number one and number two two and number three and number four you'd have to make all these variables well an array is essentially a way in a single variable of having a list of values and those things can be numbers or pieces of text it could be an array of images there a list of anything that's a piece of data in a program you can have a list of that thing and it you know aside there's an aside here I'm not going to talk about objects in this video but arrays and objects is a particularly powerful thing link below that I will make sure to add to videos about arrays and objects okay so how do you make this list well with a variable you always need a name and a type so with an array an array is a variable but it's a list of you know uh I I think of a variable as a single value an array as like a list of values anyway so with the array which I'll call nums you also need to give it a name nums and a type integer but you add this extra bit of syntax square bracket square brackets square brackets so look on your keyboard now find the square brackets if you haven't used them before you're going to need them a lot with arrays so now I have an array of numbers and I can initialize it instead of as a single value I can use curly bracket 7 comma 5 comma 32 comma 90 so now you can see I have an array of one two three four values so I'm going to go start a sketch and add this oops to come over here and start a sketch and add this so I'm going to say at the top int uh nums equals uh and I'm going to make them like 30 for uh 40 10 uh five arbitrary numbers and you can see here there we go that's the Syntax for an array now there are other ways you can initialize an array you can use a loop I'm going to get to that in a little bit this is just one way to start off this list of values so now the comes the question over here if I wanted to use the Val let's say I wanted to use that value num so to draw an ellipse at 100 comma 50 and with a size num so I wanted to use this particular value to be the size of a circle I just take that variable and I put it in the width and height arguments of the ellipse function so how what if I want to use this one or this one or this one some value from this list from this array ellipse 100 comma 50 H nums what huh I mean I know the answer to this I don't know why I'm pretending like I have to figure this out the issue is this is a single value so you can put it right here it needs to be a single value here I need to address one of these particular values and the way that I do that is with an index an index is an address into the array it's like counting the array because say like here's number one number two number three number four ah except I've got a problem here I mean actually I have a I have this makes me very happy but it's a weird thing how you count with arrays in programming you could think of this as having four elements this the first element the second element what I've told you is accurate however counting with arrays this is technically index zero so when you're counting the elements of the array you start with zero not with one so this this is element zero this is element one this is element two and this is element three the index values go from 0 to three with a total of four elements so to individually address one of these nums index 3 once again the square brackets square brackets are just the syntax of arrays I'm going to have an array and now I'm addressing not the third element right index number three which is technically the fourth element element and now if you look at this this line of code will draw a circle of size seven and this line of code will draw a circle of size 90 if I change this to one I'll get five if I change it to zero I'll get seven so that's piece number one let's go and add that here into this program uh and so now I'm going to say void setup I'm going to say size uh 400 400 and I'm going to in draw I'm going to say background zero and fill 2 55 and then I'm going to say ellipse at you know uh 100 comma 200 nums index one nums index one so let me Zoom back out here and run this code and look at the result and you can see here T I'm doing like singing today I don't know why uh that's not really singing Zing Tada but whatever um the uh the the size of that circle is what 30 40 0 is 30 1 is 40 the size is 40 let's see it get a little bit quite if I change this to nums index 2 now look at that I've got a tiny one now there's a few things I could add to this and I'm not sure which direction to go in but I'm going to go in a certain direction this is the direction I'm going in right now let's let's draw a circle with all of those so there are four elements uh 0 1 2 3 0 1 2 3 H now let's draw them a little bit spaced out at 100 200 300 400 and I'll make the size uh 500 now look at this and let's make these numbers a little bit bigger uh 50 uh 92 so you can see what's going on here if we Zoom the screen in a little bit just to look at all of this I've got four circles at different X values 100 200 300 400 each circle is pulling its width and height from that array index zero index one index two index 3 so this is working pretty this is a nice idea and we talking about this for seven minutes but this and this works well like this is sort of like helping us instead of having four separate variables I have a single variable with a list of four items but I still have to have four lines of code down here which is kind of ridiculous right I mean it's not ridiculous but it's it's it's the problem comes up what if I have a 100 values in that array what if I have 200 values in that array I don't want to have 200 lines of code however you'll notice there's a kind of logic here start with zero go to one go to two go to three this is kind of counting do you remember I don't know where you've come from or why you're watching and if there's enough light in here if you but anyway uh do you remember there was a time where you hopefully probably learned about a for Loop and if you didn't I will link you to a video about a for Loop below where you wrote something like this or I I've done this many times 4 in I equals z i is less than 4 i++ now if this is like a terrible pen if I were to put much better print line I right in here this Loop would run and first it would print out the value of zero then zero go up by one it would print out the value one then zero would go up by two and this and then it would print out the value two and then up by one it was pronouned value three we get we get 0 1 2 3 then I would be four four is not less than four the loop would exit so notice how a for Loop is a structure that can be used to count a variable from zero up to some limit like four well this is exactly the structure that we need over here so if I come back to this code and I say 4 in I equal 0 I is less than 4 I ++ and then I grab this I take this line of code and put it here well now couldn't I replace that index zero with I so this Loop and let me give myself a little more space here this Loop I'm can comment this out this Loop is now doing the job of what this code did before instead of manually having to type 0 one2 3 this Loop uses I to do nums I nums zero num nums one nums two nums three now let's run this and see what happens okay so that worked it but it looks wrong why does it look wrong ah all the circles are at Value 100 and I wanted the circles to be at 100 200 300 400 well over here remember the loop is counting i 0 1 2 3 what happens if I multiply each of those numbers by 100 times 100 time 100 times 100 I get zero I get 100 I get 200 I get 300 oh but I wanted 100 200 300 400 I know why don't I just add 100 to each of these so you can see another thing we can do I might be the index into the array 0 1 2 3 but we can also apply some math to I to do other interesting things like here instead of now saying 100 what if I were to say I times 100 that gives me 0 100 there you are 0 100 200 300 and then what if I add 100 to that then I have 100 200 300 400 so let's now run this and we have exactly what we had before with albeit only these values now one thing I should mention two things I should mention three 50 things I should mention but you know this has been going on for 11 minutes uh it's going to be a little bit of a longer video because I think I'm going to try to cover you know just sort of all the array stuff just in this video but there's a couple things I should mention one is I don't love that I have the number four there this sort of hardcoded value what if I were to add more values to the array I still would only Loop through four of them so one thing you can do with an array is nums do length uh let me just turn off the code completion um so num. length dynamically resolves to the length of the array so if I were to add another one you know uh SE uh 75 you can see I've added an extra Val an extra number which got me an extra Circle and now it's looping through the entire array it's always using the length and you know I could space them out out a little bit less like let's space them out just by 50 so we can see ah now they're kind of crowded together aha but what what was the other thing I want to show here well this is one way to initialize an array I just give it some hardcoded numbers in between those curly brackets however what I might actually like to do more often I'm trying to think of where to do this is give the array initial values that maybe are random so let's say there were uh uh eight values and I want to say nums index I equals int random somewhere between 10 and 100 so this is this is code that is filling the array with a random number Loop starting from zero all the way up to eight pick a random number between 0 and 100 and add put that in the array but a funny thing about arrays is that you uh you have to specify in advance the size you want that array to be now there are ways around this and ways of expanding Contracting an array and I have other videos that cover that but for the purpose of this discussion right now the array is a has a fixed length so we saw that one way to get that fixed length is to just manually type in the values but what if you don't know the values in advance you just want to know how many things should be in there well the Syntax for doing that is a little bit goofy looking but if you're not filling it manually between the Cur curly brackets what you need to say is you want a new integer array with like 100 spots in it so this is your number to make up so this seems very redundant I'm having an integer array called nums which is a new integer array with 100 spots in it but two things are going on here this is declaring your intention to have an array and this is actually creating the array allocating the space in the computer's memory to store 100 values so if I come back over here uh I can change I I can change this top code here to say new int 8 I want eight spots nums do length and let's just clean up how we're drawing this I'm going to say uh no fill and stroke 255 so we can kind of see and let's make them a little thicker I don't know this is very silly but stroke weight four uh so the point of what I wanted to show you is that now you can see here every time I run this sketch I'm going to get a new result every time I'm going to create an array with eight spots every time I'm going to fill that array with eight random numbers and then uh I'm going to always Loop through that array and draw a circle using each element from the array so here we go run it again just to see oh look at those differently sized circles run it again look at those differently sized circles so for you um you know I might think of a couple exercises here to try number one is what if your array instead of having numbers in it maybe maybe you know about strings maybe you don't but what if you made an array with strings in it hello my friend right this is an array with three strings three sequences of characters so could you display every time you run this sketch a random one of those strings in the center of the canvas window or could you do something as you click the mouse you see one message one at a time how would you do that so those are two interesting exercises to try this particular scenario that I've made here I'm looping through the entire array each time but what if you just want to use one number one at a time or one string one at a time that's another that's one thing you can look at the other thing that I think is crucial to mention is that one reason to learn this is that the all the stuff in the window that you're seeing here is an array of pixels an array of colors so underneath the hood uh of a processing sketch of of an image that you might load or an image you might get from a camera all the colors of that image are stored in one giant array and you can Loop through that entire array to read all those colors and manipulate those colors so I'll also include a link below to online tutorial um and some other videos about images and pixels that you can look at that this will give you kind of the foundation for okay so hopefully um this video was helpful and you saw a little bit of processing three and some nice circles and a strangely colored shirt that does it really blend in with the background yes see look you can see the background nobody cares about that but it's interesting to me and I'm going to say goodbye now before that camera shuts off goodbye