okay I'm back sorry about that thank you for your patience with me this now now that I got that little thing out of the way I have an easier time with kind of moving forward today so let me get my headspace in the right place and make sure everybody's here and watching again interesting I'm being told that oh there's big white glare on the board that's good to know I'm being told that YouTube limits the livestream notifications to two per day so if I get to a third one you might not get a notification when I finish this session now which I expect to go for at least another hour if not longer then I will try to set up a time if I had to guess right now I'm going to livestream now until 1230 or so and then come back around three or four and that's all Eastern Time might I'm sorry for being my time centric okay so now here's the thing I'm so sad because I had like the good energy momentum thing so I wonder if I should even just start over and just pretend this was the beginning of my livestream and I'm sorry I have this cold I should mention again that I should start over and yeah we just start over and Matthew oh wait mati I think might actually be watching right now as I saw what you could choose to use the beginning and then splice it together but I think I think since I probably lost a lot of people and then new people joined and restart and fix the white Claire okay we talked about there's a white glare here where's the white glare I don't actually see it this right here or like up here what's that glare as I wait for the 20 seconds just to the right of your writing okay really it's interesting I'm looking at it and I oh there's always a little glare there it's not so bad like if I if I draw here can't you see that the problem is its glare II there's not a lot I can do about it like it's the lights changed a little bit what's causing that glare hold on no glare yeah it's this light for sure so there we go when I bounce the light they're better better that looks better better better all right okay let me erase that yes perfect now thank goodness all right so sorry everybody I hope circle see hi anybody Circle C is actually watching this and like oh my god this idiot what's wrong with us like agreeing to do some content with this guy yeah alright let's come back and go to here and go back to here and here all right someday we'll see yours I'm gonna get to offtopic here but yes someday I will get it together to really like redo this studio but not today hello welcome to I don't know I'm in the wrong hello welcome to a special coding train episode this episode is the first in a series of some number of videos that I don't know right now because I haven't made them yet all about unit testing and continuous integration and this really fits into my playlists and topics about open source development so you know if you've never used git or github before watching this before you're here I might suggest going or watching my git hub introduction to github videos if you've never even never used node you might even watch my like what is node video I'll link to both of those in the description but other than that this is for the total beginner who has never done any unit testing or continuous integration and you know why I know that this video is for that person I am that person before last week I barely I mean I've done a little bit of unit testing and I've dabbled I've read I've seen other people do it mostly I'm afraid of it I think like others just gonna make it so I can never get anything done any more people sorry no it's gonna make it so you can get everything done any more so I'm here to investigate that and I should have mentioned this at the out rate this video series is sponsored by circle CI which is a company that provides as a service continuous integration now what that is I will get to eventually unfortunately you're gonna have to watch me cuz you talk to get to that but let's so let's start so I'm gonna come over to the whiteboard for really no reason other than to write the word here unit testing so continuous integration could be used for a variety of different things but probably one of the more common things it's used for from what I understand is TDD or testdriven development so let's think about this I was saying another video series you go to watch which is very useful about unit testing and with circle CI it's from MGP a fun fun function I will link to those videos in the description as well and npj says that you can think of software a software project p5 sketch you can think of my snakes and ladders game from last week as a big project divided into lots of little parts there's player part there's the snake part the latter part all of these are units and what if I change something about the player to fix a bug but don't realize it's also going to break whatever the LAT ladder functionality or the snake functionality is in this case if I have tests that run for each unit to say this little test code runs and says the ladder is working this little test code runs and says the snake is working this little test code runs says the player is working if I change just one I can run all the tests and know that my code is fine and the benefit of this is not just for your own personal sanity but for collaboration and open source projects because this can be automated you can have whenever somebody submits a pull request to your project that tests are run and it doesn't just give you confidence about merging it gives the contributor a good feeling and confidence that the tests have run and if they have it run then you can help them figure out how to fix it so that they do run so all this is good good good good good good I'm going to learn how to do it and try to adopt it more in my work now where have I encountered this before the place where I have a go the wrong buttons well I'm coming over here the place where I have encountered this before is with the open source project p5.js so p5.js you might be aware of is a library so it's a JavaScript library that I use for a lot of my tutorials learning about the basics of coding and graphics and creative coding and data stuff and all this sort of stuff so all of the source code for p5.js as a project is here and one thing you might not realize is that maybe you've encountered p5.js as just this file pause for a second because I this would be nice to actually just open up the snakes and ladders you might have encountered p5.js as just this file and here I have my snakes and ladders game in which you can see like that's the p5 just library and if I click on it it's like oh my god this is all the p5.js code but if you're working on developing the library scrolls girls girls girls if you're working on developing the library it's likely that you're not you don't want to work with that file so it's divided into lots of units and those units you can find in the github repository in this folder called source so in source you can see there's all the code for all the color stuff core stuff is like the core drawing functionality data events and so if and then there's a build process so once you finish doing your little change or whatever then the process the build process runs and finishes off with this you know smooshed together p5.js file that is all of the bits all of units together in one file so it can be used more easily so during that build process tests run so this is the source folder these are the source folders for example I'm gonna go here one of one of the aspects that I worked on a while ago is the random functionality so there's a there's a file called random dot j/s and if I click on that we can kind of look down and see like oh look here's like look this is the actual random number generator code that's inside the p5.js library this is what actually runs and it's kind of really interesting I should do a video about this linear congruential generator stuff but and how random seeding works but that's another topic so we can see this is the code now where was that we have to remember that was in p5.js source math.random so now let's take a look and say there is also but there is also test there's a folder called test folder called source folder called test I'm gonna go into test and look at this oh and then I'm gonna go into unit and all of a sudden look at this don't these directories look very familiar to you for every single unit piece of a puzzle of the p5.js library there is a corresponding test and so let's go right into math and let's go right into random now this is not source code for the library remember legally you could cut back and forth between the video and look the same but if I go here you're going to see this is a test now you might be wondering like whew what is sweet mean and what is what is I'm gonna look like test and assert and type of what is all this code so this is where you most likely want to involve yourself with it's a weird way to say it but might want to select and use a testing framework or a testing library if I write about this p5 uses a testing framework called mocha which is a very popular one I'm gonna as I get a little further into this tutorial used something called jest and I'll talk about the differences or what that is and I'll get to that in a little bit but we can start to even without knowing anything about it we can see some code here because look at this alright this is how we test the function random the first thing we do is we set the random seed and then we pick five random numbers then we set the random seed again and pick five more random numbers what should that do what makes it correct if when you send a random seed if you get the same sequence of random numbers so first of all though before we even do that like does random even produce a number so we should check to make sure all ten of those things are numbers and that's what this assert type of blahblah as a number is checking then we should check to make sure well random supposed to give us a number between 0 and 1 so we should check to make sure all those numbers are between that range and then we should test to make sure random seed worked are they all is it the same sequence of random numbers wake also test if when you pass in the argument 5 if you get a number between 0 and 5 when you pass in the arguments 1 and 10 do you get the same you get a round number between 1 and 10 so this is what testing is that way if I'm contributing to p5 and I change something somewhere else how what if I like don't realize it's something I'm doing somewhere else in the library actually breaks the way random works this will tell me that so this is why unit testing can be valuable in a large or even a small software project that is a collaborative project or even one that you're just doing it to test yourself as you go ok so that's the basic idea of testing now let's think about what are all the pieces you need so number one is so I'm gonna so there's so many possibilities you could do testing and Python whatever language you're doing you can do it so many I'm I'm gonna zero down and live in the JavaScript world you could be doing a serverside web app just like a clientside JavaScript thing some open source library that's meant to be used by there's so many complicated scenarios but let's pick a simple one I just have a single javascript file called sketch jeaious and this is my p5 creative assignment bla bla bla bla bla bla bla bla and what I want to do is I want to run a test on the code that's in that file I need some mechanism to do that the thing the tools that I'm going to use to do that so just is just for the testing is I'm going to use node and I'm not using no no dot yes because I'm creating a web server although I might be doing that at some point in another project I'm using no just essentially it's like a commandline utility to run the test because there are node packages collections of code and libraries to allow you to do testing through node and the one that I want to use is something called jest and I'll be perfectly honest the reason why I'm using just is because I asked a whole bunch of people who seem to know about this stuff what should I use and they said yes now I believe p5 uses MOCA you know type in the comments your favorite testing framework go nuts but just as a pro is an open source project from Facebook open source that I believe is generally paired with react now again I'm not doing react I don't even I know less about react and I know about continuous integration but I'm going to use Jess because it's pretty simple and I liked it I looked at it it's fine but you so that's what I need so what I'm going to need to do is somehow configure my node project to be able to run a command something like NPM or n wait hold on what do I write do you say NPM start or nodes start think it's NPM I forgot how we do this right when you make a little command in node like in the package that JSON and then you give you what you're gonna run for start what are you gonna run for tests you say then when you type into the console you say NPM test right somebody will tell me NPM start okay okay some people is a chatter saying I understand nothing sorry I'll try to figure out what you need to know to do this but okay so that I can write furniture being wheeled by in the hallway so that I can write NPM tests I want to run this command it's gonna do a whole bunch of stuff and it's either gonna say something like success or failure and hopefully if it's failure it's going to give me a report so this is the idea of testing now while I'm here in the kind of overall landscape of this let's let me make a little map here I can erase this so let's think about where everything lives because how to github how does github play a role in this and how does circle CI or continuous integration play a role in this so number one I have my on my laptop which is my local client computer where I'm doing the development I have sketched j/s I also have my whole node project which is really just by the way a package.json file and some other stuff what I could do is I could push this repository I'll use the idea of a cloud even though it's really just an underground bunker of course as we know I could use this I could push this repository to github so I could have it saved on github and the nice thing about that is lots of other people could start to pull it and then make changes or propose changes through pull requests so where do I run the tests on the one hand so these are lots of other little client computers on the Weatherhead one hand I could change my code and run my tests locally and then I know like my test run great I'm gonna push other people could clone the repository make changes run the test themselves and feel confident and push to the repository but wouldn't it be nice if github could run the tests for me any time that I try to push code there it's gonna say like let me test that first I'll tell you if it's ok it can't get up does not have that as a server you can't execute code on github you can host your projects there you can even a web host you know clientside JavaScript programs there but you need something else you need a continuous integration service and that is where something like circle CI comes in so I don't know what I'm drawing here but circle CI is another thing that lives in the cloud shaped underground bunker and what Circle CI does is it can be and it can be a service it can be linked as a service to your particular github account so you sign up for a circle CI account in the same way that you decided for a github account circle CI a has a good free tier which you can do just about everything that i've shown you in this video for small projects and small teams you can absolutely use that and so what you can do is you could say hey anytime i push or any time i commit or do a pull request please go and run open a little instance of a new server on circle CI to run a bunch of node stuff to check the tests and report back so this is the process and so what I'm going to show you as I in the next video I'm going to actually just make an entirely simple basic example of one little JavaScript program with one test and continuous integration I'm gonna make it so that if you the viewer watching right now you cannot you could you cannot submit a pool repent submit a pull request but I as the administrator of the repository will not be allowed to merge it unless the test that I have written for that project pass so that's the basic gist of it I'm sure there are gonna be some questions and things and I will return in a moment in the next video to start writing what I needed package that JSON what I need them sketched on is what did I need in a test file and all the other things that I'm forgetting to mention right now so okay so I see that there is a super chat message which I can't see but thank you to the super chat people are saying that this is confusing which is reasonable so before I keep going before I keep going let me see if there are any questions and let me understand let me ask the question if you are somebody who knows a little bit about JavaScript programming maybe a little bit about github and a little bit about node but have not done unit testing or continuous integration before did that make sense to you and I'm looking at most the slack Channel for the patrons and the YouTube channel YouTube chat personally I thought that'd make sense but okay one bird yes yes yes it didn't make sense to me okay no not really yes yes plus yes but pretty much okay no yes yes okay so you know I'm only doing my best here why do you think this is a tricky topic hopefully I introduced the idea pretty well and what I'm going to do is keep going anybody from circle see I watching I said I tweeted the link that didn't make sense and I'm exactly what you described says Cameron in the chat all right now let me just check I want to check my messages cuz circle see I was gonna make a special link I'm not gonna make any money off this link or anything it's just a link for them to track their statistics but I don't see that yet so that will just get kind that'll be like a graphical overlay at some point when these get finished okay let me go back to the chat let me check the time 1140 oh good and actually somebody who says I do this for a living like said that the description was on point so hopefully I didn't actually even make any say anything horribly incorrect okay so let me open up let me get to jest and so I have this I have this and this alright and I can get rid of the snakes and ladders and I am here okay I can close this so I think what I'm gonna do all right okay sorry I'm thinking about things there's gonna be a lot of waiting music as we install note packages and things so I'm just practicing my way to get Simon asked how do you link Circle CI to github just wait I'm going to show you I'm going to show you alright you've returned perhaps from somewhere else or I don't know some weird machine learning algorithm sent you here if you haven't watched my previous video which introduces the idea of unit testing and continuous integration I would recommend that you do this tutorial is sponsored by circle CI link to find out more right here maybe I don't know I don't know how this magical postproduction stuff works and but what I'm gonna do in this video is I'm actually gonna make exactly what I talked about here I am going to make a sketch dot J's file that has a little bit off script code in it I'm gonna create a little note project so I can run a unit test I'm gonna push that project to github and I'm going to link it with circle CI so that the test will be run before I can merge any changes now github merge know what all these things mean I will also provide some links to videos that you might want to watch before arriving here if you haven't used any of those tools before but yeah I'm just plopping it right in the middle here if you've never programmed before no maybe maybe maybe this thing will be interesting here but yeah anyway okay that gonna be right so what what do I got this is my coding train github organization and so what I want to do is I want to make a new repository but I'm gonna do it in a slightly different way I'm not sure why but I'm just going to a first one I'm gonna do is I have a nice folder here on my computer called testing test test testing death test is the name of my new project cuz it's all about test test testing testing and I'm going to make a file in it and I'm just gonna call it sketch j/s just timeout for a second is that anybody hearing like a weird sound hum or anything because I'm hearing a hum but I think it's just in the hallway or something it went away all right so I'm gonna make a file called sketch touch yes and I'm going to this by the way I'm going to use the testing framework that I may use in a moment I'll show you something called jest I'm basically gonna do the example that's in the getting started tutorial and jest not my invention here so I'm gonna write a really simple function called the sum and what its gonna do is it's gonna return the sum of two numbers so again I'm showing you a completely trivial example that's kind of silly and and and and obvious just to unsee what all the pieces are and how it works and then hopefully what I'm gonna do is after this I'm actually gonna add some unit tests to my neural network library thing that I've been working on in some other video tutorials but I'll get to that later so I'm just writing this now what do I need to do well in order to run the tests I need to I need to make a node project so one way that I can do that is by by the way in terminal and I'm in my directory testing test test and I'm gonna say NPM in it that's a way to create a node project in that directory really all this is doing is making the package.json file which is the configuration file for your node project and again some other node tutorials I have go through this a bit more so I'm gonna do this and it's saying this utility will walk you through creating a package blah blah blah I want the name to be testing test test it's version 1.0 it is all about all about testing test testing test test an entry point is sketchyass we would even autodetected that was in their test command whoo the test command now I don't have to do this here because they always change it later but I know what it's gonna be it's going to be just just is the amande like javascript test test just anyway just get repository oh I don't have one yet can enter keywords testing test then author is the coding train license MIT I don't know and then I must say okay and then now if we look back in Adam look at this this new file has appeared the package that JSON file and that is the file that has all the configuration settings for my project this is the main file there's a test script I can run called jest it's all about testing it's by the coding train and it's license MIT excetera okay so now let's go to the jest website and I'm gonna actually click on get started so one thing that I can pull from here is if I want to run a test with jest I must install the node package jest and again we refer you to my video about node package manager and a lot of you who have experience with this will be telling you why aren't you using yarn because supposedly that's better for a variety of reasons I'm sure I will hear about but I'm still in the world of NPM so I'm gonna grab this and I'm going to paste this into terminal now I just want to mention what I've shown in other tutorials what save means that means I want to use this node package in my project for example I'm doing something on text analysis so I want the node natural text analysis package I'm going to say NPM install save node natural but save dev means I am using this but only for the purpose of development my project itself when I publish and release it is not doesn't mean the gest package I need just just for developing it so I'm gonna hit enter and I put on my waiting music [Laughter] oh we finished okay and now we're good now just to doublecheck this look at this package I J son now has dev dependencies jest version 22 point 1 point 4 so that save dev put it here in dev dependencies right now I have my testing framework now how do I write a test now one of the things you might remember sorry pause for a second because I shouldn't have closed that window one of the things you might remember from when I was looking at the p5 project is the source folder had all of your JavaScript code and the test folder had all of your testing code and they were the identical directory structures for every directory or JavaScript file there was a corresponding directory JavaScript file for testing and this is a fine way of doing it from what I understand it can become a bit unwieldy after a while to kind of keep these duplicate directory structures just provides a bunch of different ways of doing it through basically the keyword test and there's there's a way of having a folder that has tests in it but what I'm going to do here that's the easiest thing in the world is I'm just gonna make a new file and I'm gonna call that file Kember if it's test sketch is or sketch test such as pretty sure it's sketch dot test touch ass let's try calling it that and then let's go back to the getting started page and see what it says some so this is example that by the way I'm doing exactly the same example I'm creating and it says the kreo file called some test yes so so I've created my file called sketch so you can see just is going to know that this file is associated with this file these are the tests for this file so now I need to write those tests oh boy so I am going to go and just keep falling along with this and I'm just going to to be honest with you copy paste the code from the example and later I'll try to write my own tests in a more interesting way and we can see this makes sense there is a function I wrote called sum that receives two numbers and returns those two numbers added together so you can see this is now the syntax the API that expect as a function to be as a function those are functions that are part of jest right some is my function test is part of jest and this is written with a really nice lovely es6 arrow syntax just just just to like unpack this for a second even though I like the way this is written I will try to write test this way to what I'm gonna do is I'm gonna just break this out into multiple lines of code just so you can just so you can see it in a slightly different way and just give me a second while I do this in the most convoluted manner so what this is saying here now you can see it's like I want to run this test this is the name of my test and the function to run the test is called some test and it's down here so this is just it's exactly the same as this but it's just written in a kind of more longwinded less traditional like less fancy new way of writing JavaScript okay sorry sometimes another corner of my eyes see something going on in the chat yeah yeah so these are good comments all right I'm gonna just pause and stop to some of these comments Simon writes if you're not using p5 you should probably rename Sketchup just to script HS or main digest to be honest I'm kind of already sketched out yes on purpose because although that is a good point I am I just kind of want this to live it's in a sort of informal way but yes and I'm missing the export piece I haven't gotten to that yet because I want the test to not rock ah I'm ahead of you sort of all right so I think we're kind of ready I've missed some stuff here which I'll get to bet I want it to fail at least first I have my JavaScript file and I have my testing file so there's no reason why I couldn't now and package that chase up Jason it says test jest and I have the dependency okay let's let's try it so now I'm here I'm gonna hit clear and I am going to say here we go and p.m. test one failed now I already know why I failed cuz we kind of did that on purpose cuz I don't be nice and let's see the test fail but we can actually see why did it fail hmm constant sum equals required dot slash some Oh what is that cannot find module dot some all right so here's the thing I'm making use of a feature of node that is not necessary when just doing clientside programming which is a clientside programmer might have an HTML file which just imports all of the JavaScript files I'm using but node we need to do this more explicitly and this is a little tricky here because maybe you can make the argument if I'm writing clientside code I should run like tests in the browser and there's a whole big world it's like possibilities here but I'm trying to stick to the very very basics the simplest possible scenario and if we look here in sketch that we can see constant sum now for it well constant that's a I could say let's um but this is good it's not gonna change not gonna be reassigned constant sum equals required dot sum well what this really should be in my case is dot sketch this is a way require is saying I am going to require another JavaScript file dot slash in the same directory called sketch dot yes then that's do you think that would be better now I'm still missing a piece I mean I'm not even gonna pretend that because I know this is gonna run it didn't fail some it's not a function so that's a different error message the reason why imported that file correctly but I didn't export it so this is one of the things I've do I just say export dot modules no module dot exports module dot exports equals some so this is again there's a lot more to this in terms of how you can link in reference different files but on a very basic level this is saying this node module should export the sum function that's the one I want to test if I had multiple functions I could export multiple functions there's a variety different ways I can do this so now here we go it's whoo okay so they test pass so this is basically if this is mid alum I've kind of come to the end of the testing component so all I've done so far is ah all I've done so far is created this I wrote my code and it could have been a p5 project I the module thing is gonna muck that up a little bit so maybe I'll show you a little trick about that in a second but all I've done is write this part so the next things that I need to do is send this project up to github and then figure out a way to allow anybody contributing it to it to have the tests automatically run via Circle C I okay so that's gonna happen in the next video all right okay so any quick comments oops yeah all right all right so I'm breaking this up into more smaller videos than I had thought but I think that's fine so now I'm in sort of third third little video and don't really need anything more here okay ready for this oh yeah all right any other questions tests all right all right I'm not seeing any super important comments I think people in the patriarch of arias nuances of es6 and what works we're all right what about the machine learning series you know it takes a be it takes me a lot to get up the courage to come here in this room and try to do some kind of gradient descent math math implementation in JavaScript so just though I'm hoping that I could do it today or it's I'm committed to doing it's happening just when it will happen I'm not sure and me I am Sumi asked when node starts supporting es6 modules are you going to redo all of your node tutorials oh definitely cuz I all yes for sure under present all right let's see okay all right welcome back now in my third this third video about unit testing in JavaScript with continuous integration I have finally where I left off the last video I reached the point where I wrote a simple test and when I run the command npm test the test runs and the test passes so now what I want to do yeah should I have like broken the code no no no no sorry go back let me start over it's fine it's fine hello again I'm back in my previous video in this series about unit testing and continuous integration I got all the way up to the point where I wrote the test and I ran the test through NPM tests and then the tests passed now this video series is sponsored by circle CI link to find out more about circle CI right here because the goal that I have with this series is to show that once all I've done so far is this piece once I've written my test locally using node for some JavaScript thing that I working on I want to plug that code up on github and integrate it with circle CI so that the test that I could run locally will run automatically here now I still might want to it's still a good practice to run the test locally like why push something to github that I know isn't gonna work I might as well test it but the point is if I'm collaborating with lots of other people somebody might forget to run the test not know how to run the test and this is gonna make me hopefully the open source contribution process a bit friendlier and instill confidence and happiness in the open source contributor does that that's what I that's all I would like in life okay happiness and confidence you go you know maybe 30 percent of one of those anyway till here we are so let's how am I gonna do this now you might not be aware of this but I can I don't need github at all if I just want to use version control and get I can just use version coma get right here with terminal on my computer and just like I said NPM in it to create a node project package that JSON JSON file I'm gonna say get in it I think that's right you know ah initialized empty github repository in testing test tests I should not get now one thing that I won't definitely want to do here is I want to create a new file called dot git ignore now this is a bit of an aside but it is sort of important get ignore file is a file where I can put names of things that I don't want to be part of the repository when I push it up to github like I need might need those files locally so something in that passwords in it or secret API keys those would be things and I don't want to push up to github but in this case I actually just don't want to send up the node modules like whoops modules like I have in package dot JSON I'm using this dev dependency just to run the tests and if I go into node modules it's like a huge amount of folders and files those things are not my code it's not a number they also get installed separately whenever I put it somewhere else on the server so I really don't want those things to be committed I also might as well say because I'm on this ridiculous Macintosh machine which makes these dot DS store files which by the way are my initials DES which kind of freaks me out like is this all these computers all about like my store and some weird way anyway I don't know little freaked out and then I don't know I don't know what this but I forget what this package dot lock file is I'm gonna I'm just gonna ignore that too so I don't want these files and now I can say get status to sort of see what's going on and we can see aha these are the untracked files these are the files that are part of my github repository so I am now going to say git add dot because I want to add everything then I would say git commit starting a new project about testing with tests and also more tests okay so I commit that and then I say git push origin master right boom boom boom Wow of course I can't say git push origin master I just made this nice git repository in my computer it doesn't know where master is origin any of this stuff so in order for me to do that I need to create the repository on github so I'm gonna go I'm on github I'm logged in to my daniel sheath mon account and but i'm gonna create a new repository and this repository is gonna be called testing test test it is all about testing with tests also tests then i'm not gonna do this initialize repository to read me i don't need to get ignore cuz i did that myself and i want to owner i want to put this now this doesn't really matter so much to you but i'm gonna put this in the coding train organization to make it easier for you to find perhaps rather than in my own account and then I'm gonna say create repository and the nice thing about this is it's giving me this command I kind of did this stuff already like I created the repository locally on my computer usually by the way my other videos I just make the repository and github and then it's empty and I clone it to my computer to add stuff I'm just showing you a different way of doing this like I made it already now I'm gonna link it up with github so I can just grab this command right here and I'll paste it into here so you can see it so the idea here is that I'm saying hey remote I want to add a remote repository for this repository on my computer remote location for this repository I'm gonna call it origin and this is its URL get at github comm call encoding train testing test test test now I'm I have my this computer already set up with like special keys to be logged in and all that sort of thing that's a whole separate topic but if you have that I can make a video about that I suppose if I need to but so this this might you might have some permissions issues if you haven't set that up yet okay here we go so that looks like it did that and now I should be able say git push origin master okay that was fast food finish Brigid get the waiting music on so there it is now it's there I can go back to github I can hit refresh and we see all the code is there now you know what it's really a good idea to have a readme and I I agree so I'm gonna use this nice little button that says add a readme and I should put more in the Ramin which I will do later but I'm just going to commit directly to the master branch every project but apparently there are other ways of working so I'm actually going to make it the next step is I'm not going to be allowed to do that anymore I can't just commit stuff directly to the master branch these sort of published finished version without running those tests first so the reviews there now so where are we if I look back at my diagram we have now checked off this much we have now pushed it to github so we've checked off this much and anybody watching this this is you most of you probably watching this as a recorded video tutorial but I'm actually doing this live at the moment so not yet a moment you can start submitting your pull requests to this repository because I'm gonna and no to please be nice be nice about it and be on your best behavior and I am going to I polishin to said that I am going to your pull across will test will be run on them all right so I need to link this now why why I'm here in the first place Circle C I so Circle CI is a company that provides as a service continuous integration and how do I get that I'm gonna go to go to app I'm so I'm at Circle City I calm you can start by going to this URL and I'm going to go to that now I'm already logged in so let me let me actually log out because I think this will be useful so you probably want to do sign up let's just click that for a second and sign up with github that's what I did I think I could probably just log in so they already have an account but so I'm gonna go to log in and I'm gonna just click log in with github so both should work just fine I log in and now I am in my circle CI dashboard interestingly enough I have no projects I'm gonna go over here to projects and it says coding trainers know projects building my circle CI because I don't actually know anything about this or do this I just try to learn it this week and make a video tutorial about it but I'm going to more in the future I'm very excited about it so what I want to do is I want to add a project I want to add a project and then mmm no no this is oh there it is testing test test huh that's what I want to add now I should show I should go back over to oh it figured out already so I could have gone to other like I'm a member of the ITP NYU organization which is where I teach the processing foundation there's me so but luckily I didn't realize this it's already defaulting to coding train so if you don't see the project that you're looking for here the github repository it could be because you're actually not in the correct organization or account but I am so I'm gonna go to testing test test and hit set up project now I want to use the 2.0 version of circle CI because it's new it says new there and it's I hear it's great oh it's something called docker so this is another little piece that I got to put into this puzzle what is this docker thing talk about that in a second come back over here alright and I'm gonna pick my language I am using node Oh beautiful Wow does it just like know that already because the code that's in there it probably did and then it's gonna give me some instructions create a folder named circle CI and add the file config dot yml so this is what you need to do Circle C I can see your github repository because you've integrated them but it doesn't know what to do like what you might suppose were in a test like what does it you want me to do so in order to tell it I'm gonna go back to my repository I'm gonna create up snot a new file shoot I'm going to create a new folder this folder has to be called dot circle CI and it inside that folder I need a file called config dot yml so that yml is a format much like XML or JSON and it is I believe called it llamo so now what I could do actually is just like there's a sample so circle CI is nice enough to provide you with a sample I'm just gonna use that sample but I'm actually going to simplify it after I use it so I'm going to copy it to clipboard and I'm going to paste it in here and I am going to I'm gonna delete a bunch of stuff okay do this okay I think I've got what I want so I made you know I'll try to return back to that file at some point to look at some of the other pieces there but look at this is the configuration file it's saying I'm timeout Oh get pull to read me yeah oh I do want the package dot lock why do I want the package dot lock okay and yam ah yam leh I'm waiting for alqaeda off to correct that I just thought that looks like a file I don't want it's basically metadata you'll be fine with that oh yeah I will I will add it back in okay so this is the yeah mol format that is giving the much like package JSON has all the configuration information for for my node project config dot yml has all the configuration information for circle CI and these are the things that I want to do the jobs that I want to do is I want to build my project and I want to build it using this image with docker what is that image so this is what's exciting docker is not something that I've used at all in any tutorial before but docker is and somebody correct me if I'm wrong here but docker provides a way of having this like selfcontained environment that has no nothing external setup yet right so I can say like hey this is this clean new environment it's going to install node install the packages run the code from scratch so I couldn't so in other words if by accident a package is installed but I don't have it in my configuration file and I wasn't using something like docker I could not realize that my codes actually broken but it kind of runs by accident over here for some arbitrary reason so docker is a way of saying like let me start with this docker image this environment standalone environment and the one that I'm using is I want any node and I maybe what I should do probably is if I go on to my back to terminal if I say no V I'm using eight point nine point zero so maybe I would say like hey why don't you give me eight point nine point was it zero or is a ten yeah zero so I think he'll be fine but you know you might want to that's another thing you doing which version node are using and then in order to know that my code works I just need to run npm install because i need to get all those packages and I need to run NPM test and this by the way it's going to make it run slow because NPM install takes a while to install lots of packages and I have to install fresh every single time Circle CI runs it and there's ways of caching it and isprobably a lot of that has to do with what I delete it out of there we can come back to that later but I want you to just see this is the very very basic idea and working directory should this be testing test test not repo right or is that like a default thing hey you know I don't know I just don't use yarn yet because I like I'm slow I get to like I start talk about es6 like four years after cubes out so I'm waiting for somebody maybe to tell me if I need to default project where project is a literal string not the name of your specific project processes run during the job can use the circle working directory environment variable path written into your VMO configuration file will not be expanded if your test store test results that path is a circle working directory test I'm pretty sure that's gonna work if I leave it that way cuz when I was trying this out early this week I never changed it and I never had a problem but I don't know if that's correct or not not required apparently all right okay so maybe it's actually maybe it's actually unnecessary all right I should also point out that this working directory i think is actually unnecessary for a very basic example but if you need to because it's gonna probably just default to my root project directory but if i need to be specific about directories I could use that potentially okay so let's leave that there and now what I'm going to do is I'm going to say git status oh and by the way something in the chat told me that it's actually probably a good idea to have the package lock file because it has some important metadata in it so if we put that back while I'm doing this and I'm going to say a git status and I'm gonna I'm gonna say git add everything git commit adding circle CI and package lock JSON for no good reason I'm gonna do that okay now I'm gonna say git push origin I rejected oh oh well why did that happen so this actually happened I was excited for things to get rejected later but the reason why this happened now is I forgot that I added this readme file on github so my local repository doesn't have that change yet so I better pull that readme file and now and it put me into some texture I just said return like instinctively and I'm going to now say git push origin master all right so now I have sent everything up to github so what do I have now I've done this I've sent it up again up and in theory I'm like linked somehow with circle CI huh let's see what else do I need to do there's a bunch of steps I want to do but I'm just curious what else do I need to do actually technically speaking so if I go back here oh well I want to say start building so I might be ready now did I follow all these steps I updated the llamó file I pushed the change to github and now I can click start building so I'm gonna do that Hopey goodness huh it's running it ran npm install' ran tests oh no such file or directory okay so maybe I needed I so maybe I needed that I think I needed that so it couldn't find my files because I'm kind of losing as I made a silly mistake in trying to make this simpler I think I actually really did need this all right I think I should be back I didn't actually check the audio or check the monitor or anything so I'm gonna wait and see if everyone's saying things are okay one thing those of you watching who are in the patron of group in the slack channel it just for me it's a little bit helpful if you post something and it has like a big preview thing I have this screen like zoomed in so I can read the chat a little further away and just like takes up my view and I can't see anything so if you post something delete that all right so I think I'm back so I don't know when did I when did I crash I mean I'm just gonna go oh so in other words working directory should just be this is that what it should be I should remove repo is this the correct I mean I kind of I kind of want to run it but I just I don't want to after saying the word try to make things simpler okay I'll just kind of and good thing the camera shut off I don't think you should do that do what now what I think you should be aware if you write me messages I generally don't have any idea what they're referring to because you guys are like 20 seconds or 30 seconds different than me so sometimes I can figure it out but me I am to me just right I don't you should do that the the tilde slash so what do I write here testing test test because I made a silly mistake is trying to make it simpler okay oh maybe I haven't now the project is there it wouldn't have run npm install our npm test if it wasn't there Circle working directory yes but it clearly had to there's no way we'd know to run this npm install an NPM test unless it just read the package I JSON file without pulling it I I did this earlier this week and I I didn't need III think actually to be honest with you I let me let's let me that's fine I was trying to like not let me just put this back to what it was just to prove my little silly point here I'm pretty sure I'm going to keep going because I can actually let me show you this is my working project that I did earlier this week it's in shift man it's called circle CI test and in here oh I did that that's what I did circle CIF but does that called that even which is so weird that's weird I don't know check out I forgot check out that is what I think I forgot I deleted it by accident yep all right that's probably it okay so I missed the reason why why it fails I missed a really important step here in my trying to make that file simpler I missed a very important step which is that I need to check out so what the first thing I need to do is check out the current code from the repository before I run NPM install an NPM test so it ran those things because that's what's written here but didn't actually grab the repository from github so now let's try this one more time so what I should be able to do is I should be able say git status just to check okay the only thing I did was modify my config file git add git commit forgot the check out step and get push origin master and now if we go here now it should if I go back to here it's actually running already so it's automatically any time I push something to get up it's already linked and it's running this so I can go in here and wait yeah you can see now it's whew it did it so look at that adds one plus two equals three past in four milliseconds testsuite one pass test one pass total time ran all test Suites oh that's the wrong whatever kind of works all right so this works one of their four wonderful now just for the sake of argument let me oh no no that's so let's now go and protect ourselves let's do this last oops let's do this last step so I do have the test running on circle CI but what I want to do now is I want on github I want to say protect master I want to make it so that you cannot push any code to master at all and you cannot merge any code to master without the tests having run and passed first so let's go do that so that is something I have to do through the github interface so I go back to the project and I'm gonna go to settings and I'm going to go to branches and right here what I want to do is under protect protected branches I want to protect master and I'm gonna do a bunch of things i'm gonna click protect this branch I'm gonna say I'm not gonna require pull request reviews right now that could be interesting but it requires status checks and I want to make sure look at this right down here that my circle CI status checks run and then I also want to do include administrators so even me as the administrator of this project cannot do anything without those tests running so I'm gonna hit Save Changes I am going to put in my password and now what I'm going to do is I'm going to make a change in my code I'm now going to work on my code dudududu Oh a plus B plus 42 that's definitely going to be a good change to my code yay and now what I'm gonna do is get add git commit I know a better way to add two numbers and I'm gonna say git push origin master aha yes good okay so it says protected it did not let me do that protected branch update failed required status check so we did not do that so now what I'm going to do is I'm gonna say okay I'm gonna say git push origin master so I mean I could do is I could branch here on my computer and then create a new branch and move that do the change there and push it but this is a nice easy way of doing it git push origin master live coding train so this is a new branch that I'm calling live coding train I want that to be the branch on github and I'm gonna take my master branch from my local lean self and push it up to get up and I'm gonna do this and so that had no problem having me do then I'm gonna go here look at this already less than a minute ago it says hot you recently pushed branches live coding train less than a minute ago let me compare and pull requests so I know a better way to add two numbers seriously I really do it involves the number 42 so you know obviously good practice in writing thoughtful messages and everything your pull requests I'm being silly here I'm gonna hit create pull requests and now look at this card here and it already ran the test I took so long talking and like blah blah blah did it actually probably ran the test even before I did the pull request so look at this it required the test failed and so this is disabled I cannot merge this pull request I can press this button as much as I want but the test has failed and I can even go under here under details I can probably I can do this it's going to take me directly to circle the eye and I can look that it expected the number three but received the number 45 so I don't think that if you click on that under more details you would be able to get here but because me is the administrator and the owner of this circle CI account I can see well what actually caused this pull request to fail so now I can now I realize it was the number 42 I can say git add git commit fixing the adding numbers thing and then I can say git push origin master what do I call it live coding train so I'm going to push this change that I made locally on my master to coding train and we should see now live in the page come on get there quick shoot where is it no it's running the checks again come on big test so one pending check one pending check I added some new commits you can see my new commit here it's there we need to refresh the page I could check I could look on circle CI so now all the checks have passed this branch has no conflicts I can show all checks I can see it there I could click on the details but now I can simply merge this pull request and it is now done so that's really it ok timeout for a second now anybody who's afraid of doing things live anybody in the patron slack group would you mind going and checking what pull requests are there and make sure that I'm not like gonna there's not some like you know inappropriate images or text in the pull requests I mean I don't mind if it comes up on the live so much like I was edited out for the video later but since I have some people watching not at the moment okay thank you so uh alright so now if you're watching this as a recorded video I took a little break there and there are a couple pull requests oh those are just mine oh wait there are no pull requests there's an issue wait hold on hi YouTube alright who wants to make a pull request all right of none at the moment not none no inappropriate ones just no pull requests all right I missed a bunch of things in the YouTube chat people are maybe asked some interesting questions you know I think overly cautious which is probably unnecessary but you know it's a scary world out there folks maybe nobody wants to do a pull request it's fine if your tests fail I'm okay with that all right I'm gonna close this issue thank you hello YouTube H Rowland thank you for writing a perfectly appropriate github issue there was a self closed one oh really oh why did this one get closed I love that all right maybe I should skip the whole like a live pull request came in thing so so okay so I so people are watching actually not knowing how to do this a way that you could do this is actually just on this page under sketch dot yes click this edit button and like if you added something in here like if you made it return a times B then down here you should have an option you should have an option like look at this first of all you can't commit this to master because it's protected which is great you should have an option to create a new branch in your own fork it should let you do that so you can actually do this through the github interface oh okay fix add alright let's take a look at this one looks pretty good all right great all right there was a little edit point there while I was waiting in the live version of this somebody on the internet s AAA DQ a 27 second seconds ago added a pull request to fix the add function I can go here under files change and see that AHA this is the code that was changed return a plus B it was changed to a minus B so now I'm gonna merge this wonderful pull request whoops well there's a bunch of them have come in and we're gonna see waiting for status report so this one it hasn't finished running the test yet let's go look at some of these other ones added plus C Oh interesting added plus C Oh interesting let's that's a good one let's check these tests so it's taking a while to run these tests whoops sorry hold on so many so many pull requests over okay stop it with the bow requests we're good we're good I'm sorry Matt sure that'll let's go back there alright alright there was a little edit point there while I waited to let you meet people from the community or watching this live you except for the this moment in time right now are not watching this live and there are some pull requests here so we can see here by the way some of this yellow means the status of the test is waiting to be reported and this means the test ran and tests passed so let's look at this me I am so me let's look at what's been changed so this first of all interestingly enough there is this is some nice things we can learn about better programming that I do here that a product function was added to return the product of a and B and then module dot exports was made into an object so you could get the sum which is the sum function or the product which is the product function and then look at this constant sum comma product equals require sketch so this is a nice way of importing multiple functions and we have here then a test of that so let's actually let's run this pull request I mean we don't need to run this pull request let's merge it looks great so I'm gonna say all checks have passed looks great so I'm gonna comment and I'm gonna merge and then I can go back to my pull requests page and we could see evil pull requests so I'm not going to keep going through all these I'd be interesting to see I you know it's very slow to run all of them because so many pull requests came at all once which is probably unlikely in a real scenario but I also and having it has to run npm install every single time and there is a way that that can be cached if you look at the sort of full sample config dot yml file alright so i will review all these later and merge them so what's left to do i think i've shown you the full picture I'm gonna do one other video where I set Duke I almost you know we do this again but I'm gonna set this up for a real open source project that I'm developing and I'm gonna just add maybe one test to it and then I'm gonna ask the community to contribute more tests to it so I'll do that in the next video because as it relates to the neural network machine learning project that I'm working on Oh evil pull Ruby told evil poor request is a good example so oh well it's out of date now so no no I'm not gonna get into this I feel like I'm I'm interested but I feel like I I was just showing the one thing for me am I am so many was fine and it's interesting that these aren't running and I guess what I'm not curious here what's in the queue so is there anything that how do I see the queue insights projects my builds all builds settings is there a reason why some of these is not building on pull requests why is that what did I do wrong huh well now that I'm imagining it's because let's try one of these I wonder if it's because the branch went out of date so now let me look at the builds No Oh No I need to click all build at circle CI okay hold on no I'm um I'm there is there a configuration thing that I need to say 300 minutes we've got mr. did I miss a setting here no that's all been working already options let me go back to the protected branches thing I think I've got everything so why anybody know oh all branches on the left side all branches on the left side huh well let me check my email because I do get email notifications oh this bill did not succeed no checking my notifications 1225 p.m. that's the last time we got a test have been fixed branch selection you just change the master branch you know bang so what have I missed yeah why did it build me me I answer me as a member of the organization so me IME has permissions on coding training to organization maybe I need to there's some sort of collaborators and teams as before person remembers every member the reason No so there must be some kind of allow merge commits allow get up pages now there's got to be some waiting for said the first link seems to help okay hold on let me look at this okay pull requests let me look at just like this first one one expected check waiting all required status checks where's this link that might be helpful my circle CI is protected switch it off and on again switch what off and on again project overview board settings looks build environment just parallel vironment vance settings webhook notifications test commands advanced settings only build full requests no auto cancel redundant builds no build forked pull requests there we go this must be it oh somebody just found it I have that checked Alka already I'm pretty sure it's this run pull builds four pull requests from Forks so this got it and so me I am sameen you must have not made a fork you just made a branch in the repo yes yeah this is it okay so this is good to know okay so this is great that I discovered this okay I took another break and boy have the pull requests been coming in it's kind of amazing but you'll notice every single one of these is waiting waiting waiting strangely I just showed you how I merged me I am so means well I forgot that me I am so me is a member of the coding train organization so me I am so me was able to make a branch within the coding within testing test test itself rather than a fork of testing test test that's a little bit of a subtle distinction here but all of you watching all of these have made your own fork and then submitted the blow requests from there and there's actually a setting inside if so if I'm on the coop my testing test test project and I go here to settings and I go to advanced settings build forked pull requests this is what I need to click to on so in this sense if you're only working if you're working in a private repo or repo where only people with some sort of permissions are making changes but if you're accepting contributions from the community at large you're going to want to have this be on so I'm going to collect it click this is on I think it will dynamically save let's see let's see if i refresh here if it starts running some of these status checks pause for a second so let's go back to settings let's just make sure that stuck now do I have to do something to trigger to rerun it should figure it out right because somebody could make a new poll request now it was at the bottom here now ah computers are so hard oh look I just got a notification that the coding trainers live I'm stuck oh there go to github branch settings don't I have to hit the rebuild button possibly where's that button well it did a new one you can see it's doing a new one so where do I yeah it's cueing them in the question is how do I have it do ya update branch okay yeah it's starting to do them now okay we can see that these tests are now running this the evil pull request somehow passed the test I think some of them probably won't run until well let's see required let's I think so and we can go we can go and look in circle see I we could see here's a queue of all the different tests that are running this ones running now pull request number 22 failed rebuild I could rebuild that one so we can see now I should be able to look through all of my pull request and we could see yeah it's just running them in some order it's gonna take a while to run all them okay great so I think I finished this video I think I already finished it earlier then I came back and kept going but I'm totally all you've seen all the basics now right you've seen how it is you can write some JavaScript code how it is you can make a node project that can run some tests for you using jest you can push all your code to github integrate it with circle CI so that anytime somebody makes a pull request to your project which is protected you run the test and you can see where those tests passed before you merge the code alright so I want to try to do another video where I'll look at a slightly more realworld scenario where I'm going to push my matrix math library to github and put all this together and then solicit contributions for tests and the like from the community okay thanks for watching the pull request draft to do update manually not the owner okay great Macchio you're still watching by any chance is that n gonna be workable I kept stopping and starting with all those weird pull requests stuff but I think you'll probably pull some stuff out of that alright it's 1245 so by the way one of the things that I want to do I don't know if I'll have time for it today is is I wanted to like show how you can just run arbitrary node code but like every time this runs like so I basically I could write a bot that tweets every time somebody's submitted a pull request and whether the test passed or not so I was thinking of doing that but that I think um some people do that as a coding challenge king foot asks hey Dan can you discuss more about when and why someone would consider starting their unit test I think smaller single user projects like p5 minigames don't require this kind of testing in general I agree I think that if you're collaborating especially if you're making a library having tests is a really useful thing it makes what what I'm learning what I've come to more recently as a conclusion is that it actually makes contributing to the project of friendlier than not having tests and so so that's what I would say I mean I you know if I were teaching an intro programming class and I'm asking people to do an assignment each week I wouldn't be giving the time and also write unit tests p5 sketches and you notice that I've haven't done one there's you know user testing but but I think that large projects it's also really tricky to if it's graphics like are you gonna like start checking pixels like you know spitting up a phantom browser so these are good complicated questions okay were you or will you talk about TDD it kind of was right didn't I talk about that so let's do the let's do the matrix library so first what I want to do is I need to go to Twitter and I'm gonna look for some a username on Twitter with like Carla submitted unit tests I'm gonna look at this shift man Carla nope is this it yes wonderful okay so if I search for for this user and Schiffman here we go okay now I need to grab my let me do this is not part of the video let me just get the neural network code up on github nn coding train hey I'm doing some nonsense crazy stuff here because I was in the middle of it let's let's go to new repository neural network toy neural network Jess I don't know this this is a good name for the library toy neural network Jess I think so any better ideas oh yeah I talked a little bit about testdriven development but you're right I didn't really but I can always change the name a repository later neural network JavaScript library for coding training tutorials and I'm going to create this repository this is all I need get promoted get in it git remote add origin there get status Adam let's do a git ignore and node modules think I'm gonna skip all the steps that I previously have done NPM init package name toy toy neural network version 0.01 toy neural network JavaScript library for coding training tutorials entry point is none whatever test command is going to be jest that's the github repository yep oh I wanted that to be encoding trained shoot so I have to fix that neural network machine learning education JavaScript coming trained community licensed MIT yes so one thing I need to do by the way is I forgot and let me actually do this settings transfer ownership this is toy neural network J s and I'm going to transfer this to coding train I understand transfer team access let's just not worry about that right now and so now it's taking a few minutes but I'm there so the one thing I need to change is in package.json Jason this should be coding train as the URL for the get website and main should actually be like nothing just gonna leave this as blank and get remote remove origin git remote add origin now it's this okay so now let's add all the code and all the code all right we got to install NPM install save dev jest let's go to the jest website getting started yep did I get that right all right so that's good so now what I need to do is we're gonna add so if I say NPM tests no tests found all right so this is interesting okay so get status get add adding just testing framework whoops so now I have Karla's tweet I have circle CI how do I get back to here I want to just get two projects yeah okay I have here refresh I haven't pushed it okay and I'm gonna how to read me which at some point I want to have be better I'm gonna remember to pull the read me now okay alright so I am now ready I've got to finish up here in a minute but so I'm gonna write one test I need to export the matrix library right one test for one of these functions and then run the test integrated with circle CI and then invite people to contribute more tests are also refactor the code in with more efficiency efficient ways and see if the test will run okay any any thoughts before I begin problem is I don't know how to write tests wholly test suggests that I actually know how to write is that let's let's look at the documentation is that it's the one that was like the some test so how would I do it with an array I should probably figure this out before I do it getting started using matchers right object assignments hmm I could probably do this with a raise to 2 equal recursive checks every field of an object or array oh okay so I should be able to do this I should be able to follow this okay all right we're just gonna try all right okay just looking into the chat I'm gonna I'm gonna get started now apologies I have a little bit of a cold my blowing my nose is probably making a loud noise into the microphone all right here we go so this is the last thing I wanted to do and I'm gonna take a break and I'll come back later this afternoon I hope I mean I don't know kind of I wanted to do more of the neural network stuff I wanted to go back and do 2048 again we'll see we'll see what can happen okay my nose is really running which it always does but in particular today so for now this is things gonna be the final I might do a coding challenge which is like using continuous integration to tweet but I'll have to save that for later okay energy energy Heat all right so here we are I am in another video in my series about unit testing test different driven development and continuous integration and I have been building I have another playlist where I'm building a simple neural network library in JavaScript to make some examples this video is not about how the neural network library works or what a neural network is you can go watch those videos for that but with this video I'm going to do is I'm going to add tests to the library and then solicit contributions from the community to add more tests and I'm gonna have those tests run using circle CI which is the sponsor of this video you can find out more about circle CI here and then we're gonna we're gonna have learned something because this is new to me I have never other than the contributions I've made to p5 jazz really done a testdriven development workflow before but I'm excited about it and I think what's exciting about it is to make contributing to open source to open pathways to make you people feel more confident in being able to review pull request to submit pull requests they'll run those tests and also writing the tests is a way you can contribute to a project even if you don't know how neural networks work you might be able to contribute to this project by helping write a single test for it okay all that said I've set up a bunch of things already so I have this github repository toy neural network in j/s it's on github I have it locally I have a package JSON file which has a which a science jest jest is the testing framework opensource testing framework from Facebook that I'm going to use and that's pretty much all I need and that's the dependencies are there so I need to write a test so the first day oh let me first mention thank you Carla beer on Twitter who did this already I kind of gave me the idea for this in a way I set up a series of easy to use automated unit tests for the current version if your artificial neural network matrix library code so here are a whole bunch of tests now Carla used a framework called Q unit so I'm gonna click on her the tests here and I'm gonna look under unit tests and what's useful about this is you can see Carlos doing something smart which I'm not going to do which is actually creating an HTML page to probably run the tests in the browser to see how they work but we can look at this this idea of testing to see if like matrix addition is working so we can hopefully use exactly this test but convert it to the syntax of jest and get it to run okay I'm gonna do that in this video so what other pieces do I need so this is the matrix library the matrix library is a class called matrix that you can create matrix objects with and you can multiply those matrices you can add things to those matrices it's a math bunch of math code that I need in the neural network project so with just something that I can do is I can create a new file and I can call that file matrix test j/s and this is where I'm going to write any tests that go along with matrix not Jas and so let's go to the jest again I don't really know what I'm doing so this is gonna be bit of a struggle here but I think what I would like to do is kind of use this Oh let's let's try I want it basically let's try this test object assignment well so let's do this so what I want to do test matrix add scalar so this is a what I want to do here is say a let and be a new matrix that and let's look at that Carlos use Carlos as a model here new matrix that's 3x3 so I'm gonna just follow this exactly and I'm gonna so I'm going to add this code right here so this is the idea I'm making a 3 by 3 matrix with these values in it and then I'm going to add a scalar to it and I'm gonna say let add scalar whoops sorry let scalar 1 equal 5 does she create a scalar oh this is generic so running the test connects it's probably a way to like run it with a generic value oh let's kill her 1 equals 0 but it can be something else I'm gonna just say I would be 5 okay now what I want is to expect a 2 equal Oh a data to equal mm so I have to think about this I'm timeout for a second so I could do each row one at a time which is silly I could could do each row one at a time is there a way for me to yeah I can just try okay okay so I know what let me back up for a second I'm sorry let me just do this whole thing again sir let me go back a little bit to equal recursively checks every field of an object and array okay that's what I need sorry let me go back okay it's all right so in my previous videos where I went through a lot of steps of this I just used this to be function right expect two plus two to be which is basically two plus two equals four but there's actually a function in jest that I'm just learning about now called two equal which will check like oh is this object equal to this object it will recursively go through and check all the properties of the objects or all the elements of an array so this should be the code that I can start with and if I paste this into my test file now what I really am testing is adding number two matrix and I'm gonna go and grab Carlos code and just kind of grab this much of it at least and I'm going to do this and so what this is doing it's saying okay make a three by three matrix and these are all the numbers in the matrix and add and I'm instead of having a variable right now just be simple about this I'm just add one let's just add one so the new matrix should be two three four five six seven eight nine ten so I want to expect a two a dot data well and I'll call this m4 matrix I think and mm and two equal and I should be able to now put in a two dimensional array with the values in 2 3 4 comma 3 4 5 6 7 comma 8 9 10 so this I believe is now the test right let's take a look at this all together I could be doing something wrong here but right I want to create a matrix object adding and I'm gonna say adding a scalar that's the name of the test to a matrix I'm gonna add the number one to it and I'm gonna check to make sure the matrices date actually equals all this and I probably could have said expect em equal and then maybe done something like what an object with data and it would that be better I don't know well let's do that let's try this so just head of curiosity let's try this to see if it works now I'm not saying this is the best test there's probably more ways and jest to structure this to ever be more generic I need to make lots of tests this is just one but let's just see if this even runs and I'm missing some important pieces here clearly so first thing I can do is just write NPM tests and what it's going to do it's kind of it's going to find that file but says matrix is not defined so I need to make sure I export matrix and I say modules dot export equals matrix and then in matrix test I'm gonna say constant matrix equals require dot slash matrix so this should be I exporting the matrix class and then importing it here so now it should know what matrix is when I run that test running the test now it failed now oh modules dot export okay I can never get anything right it's module dot exports can never remember that apparently let's run the test one more time failed matrix is not defined Oh funny thing funny thing order is important matrix doesn't exist yet because I haven't defined the class so this actually has to be at the bottom let's try this one more time all right so we got further look at this okay interesting so what's happened here this it wants those objects to really be equal to each other and one thing that I didn't do is I didn't you know this I really should know why hold on no no let me look at this oh oh okay sorry sorry sorry sorry sir look at this it failed because this is what it got it got those correct numbers two three four five six seven but what it received also had columns and rows and I forgot that in this case my matrix objects if I look at the constructor have not only the data but columns and rows so I need to go back to my test and say expect what do I really expect it should have data columns is three and rows is also three and you know I don't the order shouldn't matter here the the properties of an object are not ordered but I like to I'll put columns and rows first and really rows should be first just in terms of my mental thinking it's always rows by columns okay so this should hopefully the test should pass right and you know this would be interesting to not have those be equal okay so let's let's run this again let's run the test and the test passed awesome so we've written our first test now have I done the best job ever in terms of optimal thoughtful testing driven development no but I've got to start I've got an actual test here if somebody were to try to refactor if I were trying to refactor my add function and do it in a different way and it didn't actually add the numbers up correctly this would fail and I would know but I don't want to do any more testing what I want to do now was a couple things there's one important detail that I've missed because this is right at the moment just clientside code only but this requires stuff and this module export stuff is going to mess that but let me at least get this building on Circle C I so this repository is already on github here and now I'm going to go to circle CI and I'm gonna say add a project and I want to add toy why is it not showing up oh there it is I just have to refresh I want to add the project toy neural network J s I'm going to set up the project it's going I'm gonna copy oh it was a as you might remember if you watch the previous videos I need to create a new folder called dot circle CI and in that folder I could need to create a new file called config dot yml and then I can go here and copy to clipboard all of the settings stuff now I'm gonna leave more stuff in here this time so I'm gonna check and just I want to use the same version of node that I'm using here 8.9 so this is the version of node that it should run the test to is I'm gonna leave this work I don't think I need this working directory thing that's optional I definitely need to check out the code restore cache let's see if this helps speed it up so this is this should be a thing where it saves a cache of previous dependencies that it's already installed so don't have to reinstall them every time it needs to run the test run is NPM install I'm using NPM not yarn and then run the tests is NPM tests so I'm gonna leave all of this here and then I need to push this to github get status let's just make sure oh I modified all this and added the test I modified matrix that yes I'm going to oh and look at this I've got a problem here I've got a typo that's got to be circles CI the e key has anybody watches my videos knows the e key on my keyboard only works about 75% of the time if it misses it so that should fix that I'm gonna say good status again there's dot circle CI I'm gonna say git add dot git commit dash and adding unit tests with circle CI I'm gonna push this to github and there it is it's on github I'm going to go over here to github just to make sure I see circles I see it doc circle CI is here and I should be able to say start building so I'm gonna click start building and make sure this test runs and PM install is happening right now install song it's creating the cache yeah pike failing oh oh hmm so why did the test fail let's take a look cannot find module dot matrix from matrix SAS hmm must be a path thing oh no it's not I just made a silly mistake a very silly mistake it is kind of a path thing it is a path thing uh I made a silly mistake which is that I was thinking Capital m for because it's a matrix class and I want to reference it as capital and but the file date the file he was actually lowercase M that file is called matrix a chest and on my Macintosh II computer thing it didn't really care about that it worked but the circle CI servers are obviously clearly case sensitive in terms of what they're running so let's get add git commit a fix upper case issue a worse description ever get the push origin master and I think it will auto trigger a rebuild so I'm waiting to see if it does it automatically yep it's running six uppercase issue shoot still running still running Oh fixed check check so exact look look look it checked out the code it restored the cache it run npm install it save the cache and Iran NPM test and like that's past woohoo so now I am going to make it a moment where all of you can now contribute and give me some better tests so what I'm gonna do here is I am going to do there's a bunch of settings I need to configure I need to go to settings I'm gonna go to branches I'm going to protect master protect this branch require status checks I want to make sure Circle CI is checked and I'm also gonna include myself I don't want to be able to do anything even though I'm the administrator I still have to have my tests pass I'm gonna do Save Changes and then a last piece that I need to make sure I do if I want contributions from the community not just local branches for anyone who's up kind of have member access to that repository I need to go to circle CI and I need to go to this particular project under settings advanced settings right so I went to let me let me show you that again so I'm doing it quickly like if I'm here I want to click this Settings icon then I want to go down to advanced settings and I want to make sure oh you know what this is now on so interestingly enough I wonder if that's a global setting for all your projects or if it's on a per project basis I'm not entirely sure but I'm sure but I set it to on for a previous project I do need to make sure this is on because I want to build it for forked pull requests and let's take a moment I'll come back in a minute and we'll see if there any pull requests that I can actually merge right now oh no I forgot something I forgot something important okay here's a this is just a weird nuance to exactly what I'm doing with this particular repository but it's worth mentioning this happens to be and people can make pull requests while I'm talking about this this happens to be a matrix this matrix class is something that I'm using for clientside only code but you'll have noticed that I added this module dot exports the browser's not going to know what that is and in fact if I were to now run a little webserver to like check what my codes doing in the browser I'm gonna see this error message and just refresh again module is not defined so the module needs to be there this module call needs to be there in order for me to run the tests via node but the module can't be there for when I'm running the code in the browser now there are much more sophisticated ways around this with a much larger web app that you're working on in a build process but for Lisa run doing right now let me fix this with you know you call kind of a hacky solution but it's one that I figured out yesterday with some help thank you and so what I'm gonna do is I'm actually gonna say if typeof I can't actually say if module be nice if I could just say if module right if module exists then do that so that'll work for when node is running the code for the test but it'll not work this is the kind of the idea of what I want to do this won't actually work because it's still not defined to test if it exists but I can say if typeof module is not equal to undefined so this should now get rid of the error oops I'm looking at the wrong test and the wrong project where one Circle CI where where was that where have I been in the wrong pride project oh I was looking at the test test test settings all right let me go back to that okay okay I was looking the wrong project all right mmhmm but first of all I'll go back why is this not working what did i do what did i do yesterday Circle CI test in my sketch ah yes if type of module does not equal undefined that worked for me yesterday well I just must not have saved it all right let me let me go back yeah I'm not saving it as what I'm doing Oh weird oh woops deleted entirely okay sorry everybody at least you're all watching me to keep me in check here cuz I wouldn't realize that too later alright oh yeah quotes around undefined that's the issue okay sorry thank you quotes around undefined cuz it's a string okay thank you alright back up for a second let's just go back to this thing here where I'm doing ah testing test test settings yeah oh right right right oh right right thank you all right I need to add what I need to do one more setting which is very important I'm gonna go back to Circle C I look I have these two projects testing test test was the build project I made in previous in my previous video tutorials where I did this a little bit slower step by step and I want to check the settings for toy neural network J s I want to go to advanced settings and then I want to check here's the really important one build forked pull requests I want to run the test for people not just from the coding train or official organization or kind of contributing to the project who can make a branch within the repository but people who are just from the community would fork the repository and then are sending back a pull request I want that so I'm going to click that too on that will live save there might be thing where you have to like go back and rebuild any pull request that was like submitted before I click that but now going forward they all should be fine and so I'm pretty much done except I forgot something important so here's the thing what I'm actually working on here is a clientside JavaScript project at some point I might want to make this you know a neural network library that could be a No module and I could have a more elaborate fancy build process to deal with all this but right now I'm just written these matrix dot these tests just for this matrix a J's file that lives as part of this web project so this is actually where it's being deployed and used as part of a web page the problem is I'm running a web server already if I go and refresh that page which I just did a second ago that this is the area I mean again module is not defined so while the test might run because I've set up this export of matrix properly so the test one the clientside JavaScript knows nothing about node modules and again they're prop they're sophisticated and better ways to handle this but I'm gonna do this with a slightly just like a quick trick here and I'm going to say here is that I only want this to happen if I'm the environment that I'm running is within node in a way that I can do that is I can actually I mean ideally I would just say this if module like if it exists then I can do that but this actually won't work because it's still not defined but a trick that I can do is I can actually ask for the type of it because the type of it will return I can say if I'm just like here if I say type of module I'm gonna get undefined in quotes so I can actually just check hey as long as it's not equal to undefined then go right ahead so now I should be able to not have this error in the browser and watch this gets of let me let me add this change get status get add checking if node environment for module and now oh I didn't mean commit yes 2 M 3 M how many M's are there and commit I like em ok now remember git push origin master I cannot do it I've protected myself so I am now going to say even if I feel so one thing I probably want to do is I might as well run and might as well make sure the tests still work yeah so the tests work so I can feel pretty confident it's fine even with that change notice still recognizing the module and I can say git push origin master and then I'll call this branch module fix I sent it up to github I'm now going to go back and I'm gonna go here I'm gonna say compare and pull requests I'm just gonna create this pull request and now I am going to wait come on circle see I give me tell me that my tests have passed oh and somebody approved these thank you okay now I'm gonna hit merge merge wonderful so now I have a project that involves testdriven development it has unit tests for the matrix math though it is a protected master branch on github and only pull requests that run passing tests will be able to be merged so I am now opening this repository up to the community obviously I have a lot more work to do on it to make all the neural network stuff work and you can imagine what other tests do I need to write but this is why this is important this matrix j/s library is pretty terrible and inefficient and slow so ultimately I might like to continuously refactor all these math functions and so I might start using like things like reduce or fill and I want to make sure that I didn't break the actual math and this process of testdriven development will allow me to do that and will allow it it will make it easier and nicer for those of you who want to to contribute as well you know maybe I'll swap out this whole thing with another matrix math library and then but use the same function names and does the code still work there's so many possibilities so I hope you enjoyed all his videos about unit testing continuous integration and testdriven development is possible that I've actually done this because I am the least testdriven development person but I think it's a good thing and I'm hoping to use it more in project in the future thank you again to Circle CI if you're interested in signing up you can check out this link here and for sponsoring these tutorials and I look forward to seeing you in future ones I have it one more that I want to make at some point so there might be another video in this playlist if you're watching this right now you can check it's not there you can complain in the comments I love complaints warms my heart goodbye Oh testdriven development requires the test to be written before the code so should I not have said that am I gonna get oh right double angles triple equals yeah all right I think this is good so I definitely just stop now because it's 130 I'm here much later than I had thought for this morning's session I feel pretty good about this let's see if there's any pull requests here oh there's already four add product test make readme more appealing and add more information let's take a look oh this is awesome thank you I'm just gonna merge this all checks at Pat little update branch and it's gonna it's going to rerun the tests fixing add function Oh interesting changing the I and J so is this I didn't use this convention in other places though have I review these four requests later but that's a good one let's see you did the the so let's merge this one where do I have the Travis logo sticker do I have it on my laptop I don't have a Travis logo in my lap oh I do didn't realize that oh well okay hopefully that's not gonna be too much of a problem maybe we can match you you can fixed head post ad okay let's update the branch let's see here my Tammy's tests MTR Nord is probably a patron right because if you're able to review and check things thank you this looks great let's confirm that merge that one in and matrix plus matrix test conflicting files uhoh alright so I'm not going to go through and this would be interesting to do try to resolve this but maybe you can refactor your pull request mus a b k IL ic' alright okay no you're not I'm just a normal good hub user so you did I guess I do I have like just permission permissions that anybody can review any well I'll figure that out later okay so thank you everybody any questions I hope to come back later this afternoon I would like to do the I would like to do the gradient descent piece of the neural network library to really have it done I just I need to I'm not ready to prepare for that I need to do some prep for that so let's see if I can find the time to do that otherwise maybe I will maybe I will do a different coding challenge or I'll come back and do the Twitter bot thing which would be kind of interesting to have Circle C I tweet yeah yeah it's interesting so whoops live this is being live updated it failed the test the test is running again where there's still conflicts I'm not sure all right so any last questions what are we doing next well right now I'm leaving you'll have some lunch and I have a couple meetings I have to do this afternoon I don't think I'd and so I hope to come back let's say like 330 or 400 two hours from now and just do maybe if I can finish off the gradient descent piece I would love to do that so the wallpaper if people ask me this all the time and I have it in a shared Google Drive somewhere but I maybe I can make that available on the website I don't know what's this screenshot oh that's funny all right so I think they finished checking ok did it all checks have passed that why are there these conflicts though I can't merge it because of these conflicts let's take a look yeah so fix those merge conflicts do I have to do that that's it that's a topic for another time ok thank you everybody I will be back this afternoon at least to say hi for some reason I don't come back I will post something to the community tab in YouTube or and tweet but I'm trying but but I hope you come back at least for a little bit even if just say hi that I unfortunately have run out of time restricting today any so thank you all for tuning in I and I'll see you again a little bit later I guess ok thank you everybody the ISEE in slack that a link to the snowy wallpaper is coming so actually I can I can post it because I have power to do that let's see if I could do that alka will probably get to it faster than me okay thank you everybody hope you enjoyed this special episode of the coding train thank you to circle CI for their sponsorship thank you to mpj for the wonderful videos that I watched that helped me figure out a lot of how this works and thank you to ITP students so gave me good advice about this the coding train patron community who showed me just as a testing framework I could learn and to everybody out there watching for watching these videos I will be back a little later today for a second live stream and the edited version of these videos should be available next week sometime might take me a little longer because we're gonna do some fancy postproduction to them but you know maybe of all my gray hair can be fixed and didn't like you know little airbrushing here and I'll see you all soon thank you you