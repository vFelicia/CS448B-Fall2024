for about an hour or so I had a little lunch I walked around outside I'm back I'm going to uh start from where uh I left off from before but kind of start over a little bit too I was looking the first thing I where I ended off last time when I was streaming is I was attempting to look at how you can use the parent and child functions with P5 variables not just IDs specifying elements that are in uh a Dom element so all you what I'm talking about here is always uh appending or putting a Dom element in as a child of another Dom element the question is where are you accessing that Dom element from are you referring to an the idea of it or do you already have a reference to it in a variable and in the examples I showed before had a reference to it with a variable with a with an ID and now I'm going to do it with a variable by the way I'm just going to repeat that sentence again as soon as I record the actual video that I will uh make as a standalone video that I will upload so I repeat this every single time I apologize if you've watched these live streams before but this is the Raw live stream it will get archived it will all be there and periodically I will hit a button called I will hit a record button and pretend I'm making a video Lesson and then I will hit a stop button and that little section will be saved at its own Standalone chunk there is a chat where you can ask questions you can also tell me when the microphone cuts out or if the audio or the picture isn't clear so let me know right now if you can hear me okay uh if everything looks okay uh over here as well and a little bit out of out of focus when I come forward which is good because you know it reduces the amount of u imperfections in my face many imperfections I have a lot of imperfections many many imperfections and here I have this like green glow around me which is a little bit strange so um I don't know if there's actually anybody watching say hi if you're watching um um but uh I'm looking at my um dashboard but I'm just going to get started so this is the I'm reminding myself this is the example that I'm going to work with let me minimize this list um um and when I click here it makes an image okay okay so um and I'm ready oh there are some people watching all good you guys are back that's so nice it makes me feel warm inside to see people there oops and this I can't open up too much okay um so here we go in this video I want to look again at the parent child function so it's a bit of a review of that function but I want to look at it in a slightly different context before the main reason uh that that that I looked at the parent function was to take a Dom element that I generated in code and insert it into another place in sort of the existing HTML so which is fine and then to do that you just you reference the ID of an HTML element here I want to look at how do you use the parent child function with elements that you've generated in code which is ultimately the same thing but it's another chance to look at it and just also it's to make the point by the way the thing you can pass into that parent or child function is a P5 variable that has a reference to a Dom element so you know that that explanation may not have made any sense let's look at an example that I've started to get some context here so um actually let's just look so what's going to be this is by the way the HTML file is empty so everything in this example I'm generating through code so first I made a make a paragraph that says this is a link it has a little gray background and a little bit of padding then I make an link an anchor tag with the word apples and I'm handling if you click on that tag with an event called add photo and that add photo function uh generates a image element boy a lot of stuff going on there so right first we have the paragraph element that's made here then I have the link element that's made here and when I click on that link an image appears which is happens uh down here image create image now this is important this is different than load image I'm like looking where am I looking at ah this is different than load image load image is something I looked at in previous videos where you load a file and then draw that file into your canvas here the create image function actually makes an image Dom element just like you might type in HTML image source equals and this Source equals could be the name of the image file or it could actually be a full URL to another image so this is a way of inserting an image as its own Dom element separate from drawing an image to the canvas on the page that's kind of an interesting topic of how you might do things with that in for another time but here just showing you yet another create function another HTML tag the image tag source being the attribute what is that image's source and uh over here here so we can see the result of all of this uh again I'm going to look at the output here click click click so what I want to see happen is I want this beautiful gray padded box I want the link to the apples the apples clicking thing to be in that box and I want those apples to get inserted also in that box I want everything to be in that box so here we look at and say p is the object that is the paragraph a is the object the Dom element object which is actually a P5 element object a is the link and image is the image so if I wanted a to go into p and this by the way I get this confused all the time which one is it a. parent P or is it p. par a you could make a case for both of those right you could make a case for you want a to be parented by P or you want P to parent a which one was it I honestly can't remember CU now that I'm even like asking this question I confused myself so my let's go with my first instinct which is that I want a to have as its parent P the action is being applied to a and the action is make its parent P I'm pretty sure that's right and you can see there that worked so now the Apple's link is inside the paragraph So the difference is it appears up there rather than as a separate thing below and now when I click apples those images get added below which actually is maybe a nice effect but what I could say is also like image. parent P so now and I've got a problem again as soon as I do this what's wrong this is not a global variable so I don't have access to that variable scope down here so I'm going to make that a global variable and I'm going to say p equals create p and I'm going to run this and now when I click apples those images are now also inside that paragraph element so this is just and incidentally let's just let's just remind ourselves I could have said p.ch child image and this if my mind is working correctly these are identical I want image to be parented by the paragraph or I want the paragraph to child the image right so that's the action that's the way of thinking about it honestly a better way of thinking about it would be to look it up in the p5js documentation I will include a link to that below and I'm sure it will say it there but this is something that certainly does confuse me um but uh in general I stick to the parent function um and there you go so this is a scenario that you are looking at now I um I want to look at this also because I think we could kind of raise the stakes here a little bit so this is probably a good place to stop watching this video but I'm going to go on anyway and what I'm going to do is I'm going to make a whole lot of these like what if I make a whole bunch of these let's think about this four VAR I equals z i is less than uh five let's just do five right now I ++ and I'm going to put a loop around all of this code and I don't I don't want the global variable anymore and here I'm going to comment this I'm going to comment out what's going on here so first I just want to see the result here so the nice thing that you can see here is this principle still applies right now we're making a paragraph a link link gets parented by that paragraph another paragraph a link link gets parented by that paragraph now for you I might say as an exercise could you make each one of these paragraphs have different content could you make one a link called apples and one a link called blueberries one a link called bananas bananas depending on where you are in the world um um but uh so that might be something that you add to yourself and maybe I'll work on that another time so but the point of this now is this is a nice opportunity for us to remind ourselves that now this ad photo call back when it's triggered what if I want to do the same thing what if I want to get the images inside right when I click on this one the images should appear inside that one when I click on this one the images should here inside that one this is a pretty tricky problem but it is doable and it us uses something that you haven't used before that I'm excited to show you so let's see how we can make this work so the question is what do I put here so first let's ask the question what do I even have access to well I have access to the keyword this do you remember that keyword this what is this referring to it's referring to the Dom element that triggered the call back ad photo the specific one a so the link so this would be parenting the image by the link and we could do that and let's run that let's see if that at least gives us something so that actually is working the weird thing is this is actually part of the link which is kind of an interesting effect all of these are part of that same link I click on any of them I keep adding but I wanted them to be separate just inserted into the paragraph right so this works it's nice how could I get access to the paragraph okay let's let's make a diagram so over here let's think about what's actually on the page I have paragraph which has inside it an anchor followed by another paragraph which has inside it an anchor so what I previously just did is I took that image and inserted it the image of the apple and inserted it as part of the anchor but what I want to do is I want to take that image and insert it as part of the paragraph paragraph is a child of body anchor is a child of paragraph and my new image I want to insert as a child of paragraph but the only thing I have is a reference is to this well what if I could reference this anchor tag and ask hey who's your parent who where's your it's like when you're at the playground and a there's a child who's doing something and you say where's your you don't want to know about this but I spend a lot of time with my own children in a playground and this sort of like relates to it in a second but then it's like a weird thing that I'm talking about so back to this I want to know who's your parent a and so there's a way that P5 will give you that right if I say parent with a argu arent I'm saying assign this element's parent to this other element if I say parent with no argument parent blank I'm asking P5 to tell me who the current parent is so look at this come back over here I can say now I can say VAR paragraph equals IM uh sorry this. parent this is me asking this you're the anchor tag this anchor tag who is your parent oh your parent is this paragraph great make the image part of that paragraph and I'm now going to run this and you can see T I mean it looks the same but this is no longer a link so it's now been parented by the paragraph and by the way um so this is sort of the end of this except I actually have a couple things I wanted to another thing I wanted to add to this which I think would be interesting oh I got this is great I'm going to add something to this which I think would be interesting uh let's just do that now I have something else that I want to show you towards the end of this video already 10 minutes in but there's a few this is this is going sort of well so I'm not ready to stop just yet so let's let's add what I want to add to this is something like okay so what I want to add and let's put this in the HTML file uh which has some extra style stuff that I'm not using take that out um let me add a button button ID equals clear clear and I'm going say clear images so I want to add to the body of the page and I'll put it ins inside a paragraph just so it has some padding around it I want to add onto the page a button at the top and that button is clear images and when I press that button I want to remove all the images that have been added how do I do this now in theory oh you know there's a bunch of let's think about this for a second oh so there's an there's an there's actually a quick way that I could do this without even the way that I was thinking I was going to do this so there's two different ways we could think about this number one is let's come back to this diagram now that this is working let's think about what we have a paragraph with an anchor inside it and an image and maybe another image right another paragraph with an anchor inside it and an image right we have a bunch of paragraph elements with things inside of it and I want to just how can I find all of the images on the page that's right give me all the images on the page well here is a way I could find all the images on the page you know about this because I did this in a previous video select all IMG select all IMG would suddenly give you an array of all the image elements anywhere on the page no matter where they are in that page so this is useful if I could get all those images elements maybe I could do something to remove them all from the page so while I could do it this way and I'll say you do it this way after you watch this video if you're following along do it with select all as an exercise I'm going to do it a slightly different way because sometimes you might not be able to easily use select all and what you're doing what if instead you just kept your own array of Dom elements and this is not an uncommon practice uh actually I don't know what a common or uncommon practice is because I don't do any of this for real I'm just figuring it out and making videos about it so it's not an uncommon practice in my making video examples about it anyway so if I come back to the code I might say VAR images equals array so I'm creating a global variable that's an array where anytime I make one of these elements I'll store a version of it so I have this for myself and in that case anytime I make an image element I can say image. push I'm sorry images. push image so this is me adding that image object to this array which is a global variable so now anywhere in this code I have access to all of those image objects this can be very useful because for example um I could I could do something I could remove oh I could remove them one at a time which would be kind of an interesting thing to do we could we could do that or I could remove them all at once I could apply a style to all of them let's look at just removing them all at once so albeit this is an array that I could fill with select all I'm making it myself so let's take a look at uh how I might do this so first of all what's on the page there's this but button how do I get access to that button that button is made in the HTML file with an ID called clear so I just need to use select so I need to say VAR button equals select button oh no I called it clear and then I want to handle when it's pressed with I don't know clear stuff I'll write a function called clear stuff and here is where I can do a loop I already have that array that HS all the image objects in it for index I from zero to the length of the array so for every single element in that array uh what was it called uh images. length i++ now this images indexi do something so right here now I know it's showing me syntax errors but this is now me saying I whenever I made an image element I put it into that array hoay for me so now I have this like back it's like a backup it's like redundancy like I just I'm making all these elements and in case I ever need to refer back to them I've got them all in this array sure I could get them with select all but I'm really cautious and worried about it I'm going to make my own array so now I could apply a style to them I could change their source to show a different image but just to demonstrate removing stuff that's there's a P5 Dom Library function called remove and remove does is actually removes it from the page which by the way is different than hide so I could use hide which is going to hide it make it so you don't see it but the element is still actually there as part of the sort of like active page so it could show it again if I remove it it's gone it's deleted it's not coming back so let's not worry about hide so much right now let's add remove so all that I've done is now anytime I add one of these images all of those images wherever they've been added all of those images are now part of this array so now all I need to do when I hit clear is it will Loop through the whole array and remove them all and there you go and now I can add some more again and I can hit clear and it works again now one thing I probably should do is once I've actually removed them I could probably reset the array back to blank it worked anyway but I might want to just sort like clear that array because I don't need references to those objects which have now since been removed so this is Hope showing you a bit more of stuff that you can do this is I'm showing you again just to sort of recap a little bit I can make stuff in the HTML file and access it through select by an ID like I did with that button I can make elements dynamically in a loop like I did with create p and then I could also make other elements parent them to those elements have things inside then later I could make elements that are based on of an event and I could know which Dom element triggered that event and then I could know what's the parent of that Dom element that triggered the event and put other things in that Dom element so there's a lot of pieces to this example but hopefully this is showing you kind of a bit of the spectrum now of how you might write HTML write JavaScript to generate control style select select all that sort of thing I think I have um two more uh videos that I want to make one is about how you might drag and drop a file into the browser and use the contents of that file and then I keep looking over here because I'm looking at the time and then another uh video just to show you about sort of controlling interface elements kind of in a zombified way so they just like act on their own which I think it's kind of interesting so uh that's the end of this particular rather long 17minute video and I'll be back with another one okay I'm going to check the chat and um uh thanks for listening folks uh hopefully that made sense and that was like kind of a useful example by the way I'm saving all these examples the camera just went off good timing I'm saving all these examp examples and they're all in a GitHub repository uh called video Lesson materials I wonder if I just Google video Lesson material shiftman GitHub so when I make uh an example in theory U I know I'm standing in front of this so let me just come over here um uh under here in this GitHub repository under code usually the examples are found here I need a better way of integrating this all together possibly in like a website or something like that but at least you can look and find stuff here I'm not very good at updating this so you send me an email to remind me or I don't know some other way of contacting me that uses the internet um but also uh if you're typing along and you want to submit a poll request to this repository that's super helpful to me and thank you to uh Kenny Lao from China who has like submitted so many of these uh and also Osama from ITP who submitted a few too thank you guys for for helping me out here okay uh so I need to look back at my list where's my video library list so I got this so things that I haven't done are passing an argument into a callback event which requires the closure uh I would like to get to that I don't know if I'm going to do that today it's a little beyond the scope of this is like a crazy long list of Dom videos I've somehow made um I want to do drag and drop which I think is just like a kind of fun useful thing um and then look at controlling interface elements maybe I'll maybe I don't know it's 215 got another 45 minutes here I think before I need to move on so let me do the drag and drop so I need to get set up for that um um let me get set up for that so uh here I'm going to hit the play play ad button while I get set up there's only six I'm not going to tort you with the play ad button I just find it so funny that it's there uh okay so let me save as um uh drag and drop uh and uh let me delete all this and uh um let me create sorry uh create canvas uh 200200 background zero and then in the index.html file I'm going to add a like a uh ID equals drop zone and then I will style It Drop Zone with uh some padding oh this needs to be in style uh I'm going to add some I should probably do this in the video but in the interest of time I'm going to prepare this in advance uh border style dashed I don't know border weight or something let's see if this works and then I'm going to say uh drag your file here so let's do this oh that worked good enough so you can see the idea here is that what I want to create is an example where you drag a file from your hard drive into that area and it's an image file it's displays in the canvas and then after I do that I'll switch it so you can like drag the file just right onto the canvas which is kind of the same thing um so uh so now what I need in order to do that is a bunch of images so I'm going to go to my goto ridiculous thing that I've been doing it's my little running running gag about rainbows unicorns uh so uh let's see uh view image let me save no seriously uh save image as rainbow Buzz Marketing this website here know mean to be doing uh and then uh let's get um this one too uh view image save as a rainbow 2. JPEG and now uh I need a unicorn uh uh this is a good I don't know this is a good one uh view image uh save image as a unicorn uh and uh microbiology this is a recent interest of minees uh here we go some bacteria uh save image as bacteria okay there we go I've got a bunch of images and so the idea here now is that I'm going to drag these images here and when I drag them here they will appear in into the canvas okay so uh anybody have any questions comments worries concerns add them into the chat I'll see them in about 15 seconds I'm going to pause and drink some water over here hopefully everything's still working I'm going to cycle the cameras and come back here uh okay I'm racing oh I'm over here by the way oh this camera's off I'm tripping over things if you guys are watching this you're very kind okay where is thumpkin by the way that's the song that is always been in my head constantly while making these videos and I keep saying I'm going to sing it in while during a break but I can't remember what it's called and I think I'm singing fjaka it's like the same tune okay I think I'm ready for this anybody have any comments nope uh there's a few of you three or four of you watching I'm going to record this okay so um uh let's delete this apples. jpeg it's unnecessary and hit save uh and uh that's good okay here we go which one of these pens is good this one looks like it'll be okay uh and here we go oh I'm going to start over here in this video I'm going to look at a feature of JavaScript in the browser but something that's also built into the p5js framework in a in a nice way that allows you to drag a file a text file an image file a Json file any sort of file what's Json maybe you don't know what that is it's a thing that I'll talk about in another video that I'm sing this Isa which is speak singing is sort of I don't know what I'm talking about let me start this video I don't want that in the video I'll do myre Ste of jokes in another another time hello I don't need to say hello okay in this video I want to look at a feature of web browsers and something you can do in JavaScript in general but also this thing is built into the p5js library in a rather nice way that I enjoy and this feature is dragging a file into the browser and making use of that file and that file could be an image it could be a text file it could be some sort of data file data is a thing that I'm going to get into in some future videos there's different kinds of data formats so there's lots of potential to what you could do if you ask the user to say hey give me an image and I'll do something that's really exciting and interesting in the browser with that image or give give me 100 images and even that so let's look at how that that works so first of all what I mean by that and I guess I probably don't need this diagram but I'm going to Draw It Anyway is on the web page I'm going to make an area on the page right so I'm going to have a canvas and I want an area on the page where if I have some sort of file if I drag that file and release it there and if this is an image I want to see that image then suddenly appear and be drawn into the canvas so how do you do that let's go and look so I've set this up in advance I have this particular example and you can see it's got exactly what I'm talking about this canvas is made with the create canvas function and you can see background is called so you can see that it has a black background then there above the canvas is this like dashed area on the screen that says drag your file here now where did that come from that is written into the HTML file so I'm going to go over here and look at the uh canceled look at the HTML file and you can see there it is there's just a paragraph element drag your file here I gave it an ID called Drop Zone because I'm going to need to refer to it hey that's the paragraph element that I want to be able to drop something onto and then also I've just written some style some Styles referring to that drop zone and maybe just so it's a little bit more visible I might say font size is 36 point and maybe I'll do something like width is 50% so by the way this is also something that you might not have seen before uh there's all of these units that are are happening in CSS PX for pixels so I actually like the number of pixels want that padding point for something that has to do with typography that I'm sure somebody understands much better than I do but you know the larger the point the larger the font size but also percentage being relative so this Dom element is always just going to be 50% the size of the page which you'll see now if I hit run again you can see as I resize the page that Dom element doesn't have a fixed size it's always just 50 50 % of the page that's a nice little tidbit that I'm adding into this video so how do I make it so that I can drag a file there incidentally what happens if I drag a file right now I drag this file over here I drop it and I've lost I'm gone from the page look and you can see that what is it that that file is just literally opened up in the page it's the file of bacteria I don't know I was trying to do something other than rainbows and unicorns but maybe bacteria I went in the wrong direction but it's interesting okay so um so I need to I need to get this working so first of all I need to add some JavaScript events to this element I want to handle the event so the browser handled that event for me right when you drag the file into the browser it assumes like Oh I'm a browser you're dragging me a file I'll open it I want to say to the browser no no no no no no no no no no I'm in charge here don't do what you're going to do I got something else for you I got something else planned so if I come over here and I first I need to do is get uh I'm going to make a variable and I'm going to call Select so select and let's make this a global variable because I might want to access it in other places I'm going to say select the drop zone now something that I'm doing here which might you might find a little bit confusing but I I find this to be just so convenient I like to just name my variable with the same name as the ID it's absolutely not required the ID can be totally that and nobody knows whether or cares whether they're the same just you the programmer for me it's a little bit convenient but I don't want you to be confused that there's some like matching happening there that's just I happen to name the variable the same name as the ID okay so what's next you know that you can attach an event to an area by referencing that event uh as a function called on that object so the mouse pressed event the changed event the input event the the mouse over the mouse out these are all events that I've looked at in previous videos I've got a new event for you I don't remember what it's called but I do know there's one that's drag drag over so the drag over event let's handle that with a function called highlight okay so I'm going to say uh function highlight uh drop zone. style a background color and let's give it a little gray let Zoom back out here so now this should at least I've handled one event drag over okay so now if I take this file and drag it over here you can see it becomes gray now it's never not becoming gray but at least at least I've got that event so this by the way has nothing to do so far this has nothing to do with the file I'm just handling an event if you drag over it if I move the mouse over it doesn't do anything if I drag the mouse over it without a file it doesn't do anything this is an event only for when I drag a file over it you can see it becomes gray so that's one thing I can do now what if I want if I'm like dragging a file and I'm like no no no bad idea bad idea take the file out maybe I want to unhighlight it right so I could then say uh I can't remember what it's called but I think it's drag out UNH highlight and I'll just reset the background color oops I'm going to write another function and I'm going to reset the background color to white now you might be asking yourself a question and I need to get to this in another video but you might be ask question like what what do I need these two functions for I could really have just one function that accepts an argument white or black I mean white or gray and then I could say drag over call that function with gray white gray drag out call that function with white this is actually quite possible in JavaScript I'm doing it this way for convenience because again the other way requires a sort of some trickiness for how do I get an argument kind of into those functions I would love to get to that remind me remind me remind me I will remember I'm going to think of a good scenario and try to make a nice video that because it's sort of like a fundamental aspect of JavaScript it uses this thing called a closure okay so but we're not doing that right now I'm not doing that right now I'm going to leave this as two separate functions but you're right to ask that question you being the metaphorical person who I think I'm talking to I mean you're yeah okay so um oh undefined is not a function line eight drag probably drag out is wrong so how do we figure this out I should stop being so like I'm just going to imagine what the P5 Dom API has in it and I should probably go and look this stuff up so if you were doing this and you got this error and you wanted to figure out how to find it you could open up a browser you could go to pjs. org I'm going to click on this you should be able to find this under reference and I'm sure that will change at some point soon but an easier way to find I'm going go under libraries and I'm going to go to P5 Dom and now I'm going to see oh look at all these look at all of these methods and look at that I called it drag out but we can see here the me the the the event is actually called drag leave that's the name of the function drag Le by the way there's add class and remove class huh interestingly class think of something that happened in a previous video and I wonder if that should actually be changed but anyway it's a side topic I'll have to think about that in my own time so drag leave is the name of the function that I wanted so I'm going to minimize that and come back and I could have clicked on it to see some more information but I don't need to do that right now I feel confident that I could just type drag leave here and now I can run this again and here we go file leave file leave look at that what a nice little I'm so good at user interface interaction design I'm being s sarcastic because I'm not good at that um but you can see this is a bit more intuitive at least to be able to handle these types of events of when you have the thing over when you have the thing out so but we're missing kind of the exciting thing this is just like nothing's going to happen like if I look that's the same thing happen that event the drop event when I let go of the mouse when I perform this release action this is me miming the release action um I need to handle that event and that event is handled with the drop function now what goes in here let's think about this for a second so let me comment this out and run this there there are two things that have to happen and this is tricky one thing that has to happen is I need to read that file the other thing that needs to happen is I might want uh there's okay well actually there really aren't two things I was thinking there there aren't intuitively there aren't two things there's one moment right I drop so the moment I drop I might want to handle that event by like applying some style to it like UNH highlighting it and then I also want to read the file that's been dropped but those are actually divided into two separate callbacks and there's a really good reason for that and the good reason for that is that I might want to take all of these images what if I drag all of these images into the browser I need a call back to handle each file one at a time but there's only one moment of dropping so um so in that sense and I forget which is which let's go back to the reference so oops uh let me go back to the reference here and I'm going to click on this drop event and you can see we could read this uh call back callback so look at this call the first call back is triggered when files are dropped so that's the event the actual event of dropping the files then the second call back is to when the file is loaded and actually this also happen at separate times because what if you drag and drop a like 500 megabit megabyte image file right that drop moment happens instantly but it might take the browser quite a while to read that very large file so that's why those are two separate events so I can go back to my code and I can say you know what when I drop it I also want to unhighlight the box right that's uh I want to UNH highlight it and then I want to handle the file so I'm out as I'm I'm doing two things when as soon as I drop it UNH highlight the box and also trigger a new function got file function got file file now interestingly enough so let's just run this and at least see now when I drag the Unicorn over here uh let's just only the unicorn please uh it highlights it UNH highlights it highlights it UNH highlights let's drop it it UNH highlights and I've overridden the default browser Behavior the default browser Behavior would have been to open that file but I've now overridden that by whatever goes here so now I can do whatever I want and not only can I do whatever I want I can do whatever I want with the data in that file for example I could say create image file now I don't think this is actually going to work I know it's not going to work because that's so but let's let's try it with this rainbow right it something appeared there but it's like a broken image so this thing here the argument that comes into the function this might be actually something rather new to you I'm realizing because most of our callbacks like highlight or unhighlight don't have data that arrives with it so this is a new scenario this callback P5 is not only triggering the call back when the file is ready to be loaded but it's also handing a variable and inside that variable is just P5 is like such a nice wonderful friend that P5 is like look I'm going to hand you I'm going to call this function I'm going to hand you this variable and I'm going to fill that variable for you with all the data associated with that file so this file variable is actually an instance of a P5 file object and there's all this information like I know how big the file is what its name is there's lots of metadata asso away that file and something that's in that file is a property called data and that data might just be the text that's in the file it might be the the other some other data format that's in the file or it might be image data so if I say create image file. data now watch this oh okay let's look at the reference did I you sure I saved that I ran that I I'm pretty sure that was right but you know we have a little bit of a problem problem here it's not working so let me go back to the reference and I'm going to go to the reference and I want to look for file file this is where this is this is this um where's the P5 file object somebody find it for me quickly uh P5 image P5 do file I'm not seeing it um so you know some reason it's not in the reference which it probably should be I'm going to I'm taking drastic measures here and I'm going to go to the p5js GitHub repository I should actually just look for an you know what I should look for an example that does this there's actually an example that I I was going to go into the repository just going to look you know fast forward through the video like 30 seconds or a minute you could skip this part but I'm going to go look for under uh learning maybe or under Dom let's look at uh let's uh uh under P5 element I'm going to look for the drop this is probably not the right place yeah yeah yeah no I want under ex examples uh Dom random random Dom uh drop there we go uh uh uh file. data well by golly I was right wasn't I create image file. dat so that's what I meant to do why didn't that work uh let's just okay let's be a little bit more methodical about this maybe something else is going wrong that I don't know about so for example um let's look let's see if there's some of the metadata is there I'm going to say create P file. name uh create P file. type create p file. file. siiz and uh so there there are all all a file has all this metadata so with it its name its type it size those are all strength that's just data and data should actually be the image stuff so let's run this and let me drag in this rainbow file and you can see undefined drop undefined oh you know what I wonder if I guess what I think I might have done I know what I did I probably revers the order of those I reverse the order of those uh callbacks so this is a very common thing that happens aren't you enjoying the fact that I just mess this stuff up all the time I really hope you are so this is this is something so you know we've looked at this and realized like the call back is triggering I mean of course it's triggering because they two callbacks both of them are triggering but I'm triggering them probably in the wrong order so let's go back to the P5 reference uh uh libraries Dom and let's look at this drop function right here and let's read this again the first call back triggers when the files are dro the second call back triggers to receive the loaded file isn't that the way I did it uh first call back but but I have a feeling the reference it wasn't entirely my mistake I have a feeling the reference misled me let's switch the order of these it's probably the first argument is the call back to handle the file and the second argument is the call back to handle the event the just the dropping event so let's try this again and here we go yay so I've got my and let's let's do something where I say VAR image equals create image I say image do uh size 100 100 and I'm going to do create P I'm going to just Join one string uh so I'm going to take this out just to make this a little shorter now let's look at this again and to make a bigger window we can have this nice moment where I drag the Unicorn here there's our unicorn I drag the rainbow here there's the rainbow I drag another rainbow here there's that so you can see here the files are coming in I'm adding them to the page and also I get information how big was the file what was the name of the file I could use that information I'm just sort of like spitting it right back so this is interesting hopefully I mean so I'm not really doing anything with that and also I should mention let's just prove that this works I'm going to uh refresh this page to start over let's drag all of the images all at once and there you go all of them appear so it's handled that call back was triggered many many times for each image um so I want to do one more thing which I think is just kind of like makes the seam a bit more magical so you can have a Dom element that has like a doted line and says drag your file here but anything can be a Dom element that you drag stuff onto even like a button could or a slider could even that barely makes any sense but let's actually do something to this example I'm going to do save as uh drag and drop two I'm going to say you know what forget about this Drop Zone thing take that out of there take that out of there why not store the canvas in a variable and say canvas do drag over canvas. drag leave canvas. drop so look at this if I run this now I can just take this image and drag it over the canvas drop zone is not defined uh all right we don't I don't need any of this styling stuff anymore to be honest with you I don't I'm deciding like not to care about that I can do something much simpler I can just use the single call back of dropping it you know I'm not just skipping the visual feedback part right so anything can be a drag and drop element and now let's think about this even more in a different way what if when I drag the element onto the canvas I want to see the image in the canvas so what can I do I can just call the image function image 00 0 with height so this is the difference again between making a Dom Element image and then drawing and versus drawing an image into a canvas the image function draws that image whether it's through load image or create image into the canvas create image makes the Dom element so now we should be able to see this uh that now I'm only seeing the top left corner of the image because they're kind of small I'm surprised about that because I'm drawing it supposedly uh with the width and height of the um of so I'm kind of surprised I feel like that's a little bit of a P5 bug there I don't know why that's not working I have to examine that but also the thing I wanted to show you is that I don't even though I might have to do it this way to create the image via um this uh uh to create the image uh as a way of like getting the data from the file I can use I can use the P5 function image. hiide so I can make that Dom element purely to open that file and then I can hide it instantly and then draw it into the canvas I'm actually sort of surprised this is working because I I realized that I was sort of thinking I mean that there might be another problem associated with this oh but now it's working I don't know what I missed with the width and height before for um maybe that oh that size thing probably messed things up but you can see look at this that was a transparent image so you can see now the as I drag and drop the images onto the canvas I see the image there so that concludes this particular video um where what I was hoping to demonstrate I think I did which is the idea that you can create an any element on the page and you can handle when you've dragging a file over it when you decide you're not going to drag that file over it and when you actually drop that file and if it's an image file you can use that image to display the image data and um in some other video in the future I'll probably show you how to do it with a text file and do something like word counting the text file but that's that you might um investigate the load strings function and sort of see uh how you might do that um I don't have a good exercise I can't think of one I'll write something in the description okay thanks and I think I have one more sort of Dom video to make after this one okay uh hello live stream all five of you uh um uh I don't know if anybody's still watching but some people it it claims that people are watching I'm going to just take a short break for myself here for like a minute and drink a little bit of water if you have any questions or feedback please add them into the chat okay so the last thing that I want to do is um just sort of demonstrate automatic control of interface Elements which I don't know exactly what practical use this has but I think it's sort of interesting and weird and so um I do that with a text field and with a slider and uh yeah I almost want to do this with pearly noise which would be kind of weird interesting but then I have to explain plar and noise and I have to do that in a different video I think uh okay um so this is the last uh one it's like very hot in here I'm going to open the window a little bit more get some air in here let me think let me get myself set up for this um I'm going to make a new example called Zombie Dom and uh I'm going to take out all this stuff and I'm going to take out all this stuff and I'm going to run this and it's empty and blank which works and I'm going to do this and I'm going to say function setup no canvas uh function draw okay so um uh uh okay sorry uh I am think I'm ready for this here any um I'm trying to think of what I'm going to look at I think I'll just I'm probably just going to use the computer for this one I don't think I need the Whiteboard uh to demonstrate this idea okay close this and this is the last one except I didn't do this even though I I came across the scenario in the previous video where that would have been useful for to remind myself I should have written that down somebody remind me uh okay I'm GNA minimize this uh I've got this this opens up over here um let's do this to this just to like put it over here which I think will be good enough okay uh great so I'm ready I think this is the last video I'm going to record today it's about 245 I did 2 hours and 20 minutes morning I've now done almost an hour which is three and a half hours today which it's probably more than I should do in one day but Thursday is the day that I have to do this um and so here we go checking the chat uh and I'm going to close this laptop and get started hold on I need some water again so this is really a bonus video I just want to do something weird with dom manipulation that I'm kind of going to just make up on the Fly although I did make an example like this a couple weeks ago I've looked at it since then so hopefully this is going to work out and what I want to show you how to do is to take innerface elements that normally you would ask the user to manipulate like move a slider or type some text into a text input box and I want to show you how to just control those pro control those things programmatically as if they're like there's a zombie controlling your computer so first of all I have a P5 sketch here I have the P5 editor this is sort of like a bit of a standalone video so some of you might be coming to it from not having seen P5 before go to p5js dog download the editor look at the reference you can use that for this uh quick little project so let's give it let's hit this button we can see there's absolutely nothing appearing in the browser because I haven't added anything now let's create a variable called slider and I'm going to say slider equals create slider and remember when you create a slider you need a minimum and a maximum and a starting range I don't really it doesn't really matter so much so I'm in this case so I'm going to create a slider with minimum goes from zero maximum goes to 100 and it starts at 50 uh it's very loud outside so I'm going to close the window and I'm back you can see the slider is there and now I can do what anyone would normally do with a slider I can slide it back and forth I could use the slider to control myself watch nobody cares that I'm doing this but it amused me for a second okay so uh that's normally what you do and you would tie the slider to an alpha value or to some parameter in a flocking system whatever kind of creative coding thing you're doing today but what if you wanted to actually set the value of that slider so one thing you can actually do is okay so if you want to get sorry if you want to get the value of the slider you say slider. value and so let me make it between 0 and 255 and I can see now I have no canvas let me create the canvas just so it's there and you can see now that the canvas is there and as I move the slider it's changing the background color this is again what you might normally do now another way I could change the value of the slider is actually to just call the value function but give it an argument so the argument I'm going to give it is the number right now 151 so you can see that now the slider even though it started at 50 as soon as draw executed I set its value to 151 well draw is animating looping over and over again what if I made that sum variable like for example VAR X = 151 and slider. x and x = x plus some random amount between like5 and five now let me run that and you can see look the slider is moving on its own I have my first zombie slider there it is just moving around I don't ever have to operate the computer again it's just going to do it for me great so uh but let's go a little bit further with this first of all let's use something called a sine wave I would uh I'll link below to some other video where I talk about sine waves I'm saying I'm going to link below I better do it right in the comments if I didn't do it and I'll add it but let's use a sine wave so let's say instead that x equals the value VAR x equals the value of the of a sign of something sign of some angle so now I need a variable called angle and I need it equal to zero now I might as well take just a brief moment to come over here to this whiteboard which I said I wasn't going to need and talk about what you get out of the sign function I said I was going to link to another video but I feel obligated to just offer a quick explanation if you've ever seen a drawing of the sign function CA this is not going well that camera shut off you ever seen a drawing of the sign function it looks something like this uh the range uh uh the range goes from between one to negative one I should start over but I'm not going to um the range goes between one and negative 1 the xaxis being this angle that's moving through time in a way that you can think so depending on what the value of the angle is I'm going to get between one and negative 1 so here that was that was like the worst explanation ever just go to the thing that's that explains the sign function you haven't looked at it before um so what I want to do is get this the sign of some angle and if I do that it's stuck there at the bottom right the result of the sign function is always a value between 1 and 1 now there happens to be another another function in P5 called the map function and I definitely have a video that's only about the map function I'll also link to that below but what I can do with the map function is I can say hey the sign function goes between 1 and one that's the range of the sign function but the range of my slider is between 0 and 255 or 0 and 100 whatever it was between 0 and 255 so map the result of the sign function which is somewhere between negative 1 and 1 to the between 0 and 255 so now I'm going to do that oh unexpected number line 12 I don't I don't oh cuz uh I forgot a comma here there we go and you can see ah so s of zero happens to be the value zero which then happens to be halfway between negative 1 and one which is halfway which gets mapped to 127 about and you can see it's now in the middle now what if I took that angle and incremented it over time I could maybe get the slider to oscillate nicely angle plus equal 0.01 now the angle the unit of measurement is in radians and in that other set of videos that I'm looking to there'll be an explanation of that and you can see look at that this nice little the slider is moving nicely slowly and it's coming to the end and it eases off and you know we could maybe make that move a little bit faster by incrementing the angle a bit more each frame and now I've got this slider that's like oscillating automatically it's kind of like dancing I'm trying to do it with it but I can't so this was fun and all well and good but let's do something more with this first of all forget about this silly canvas thing that was nice to be able to see that the slider is still actively controlling the canvas but forget about that forget about background What If instead I make an array of Sliders and I were to say for VAR I equals z i is less than 10 I ++ and I'm going to make all those sliders in an array so make all those Sliders in an array and then let's do exactly the same thing down here let's set all of their values to the value of this sign function and here we go and I run it look at that all of the sliders are now oscillating back and forth is that lovely and then I don't know 10 didn't seem like very many let's make 50 of them oop oh and I I I hardcoded that I should really say sliders do length let's make 50 of them you see all them moving I don't know I'm just going crazy let's make a 100 of them I want to fill the page with sliders you can see now I've got a 100 sliders dancing back and forth now interestingly enough if I'm working with a sine wave and I have one thing oscillating back and forth and I have another thing oscillating back and forth and I have another thing oscillating back and forth what if each one of those was just a little bit behind the other one right so when this one is over here this one is over here and then this one's over here and then this one gets the end and comes back and then this one gets the end there's just a little bit of offset so they're kind of like dancing with each other in a way and we could we could play some music and dance the slide dance the night away with the sliders that's what I do by the way I have no social life so I go home and I dance the night away with sliders think about that for a minute why don't you then donate there's donate button but I don't know what you would donate to to the cause of sad dancing slider people but the point is what if I could get each one slightly offset from the other one maybe I could have another variable uh I could say offset equals zero angle plus offset and then offset plus equal 0.0 2 3 four five making that number up doesn't really matter the two five the point is I want each one of those to oscillate based on that angle but one of them should be 025 ahead and the other one should be 0.5 ahead and the other one should be 075 ahead I think I'm doing the math right let's just see if that works there we go Dan save the night away with the SL so you can see here I'm just zoma controlling these sliders they're all slightly offset from each other I could play around like what if I really make them offset from each other uh whoa now I've got this crazy pattern here um where all the sliders I could arrange them in a different way I could have them like paint make a little picture I could all use them to control things I could style them so there's lots of possibilities the point that I'm making this video is to say I don't know anything about the web or design or how to make anything look right or do anything practical but uh so I'm sometimes trying weird things out and happen but the point of what I'm saying that's not the point of what I'm saying the point of what I'm saying is the browser could be an experimental canvas for you what kinds of things exist as elements in the browser that we use every day in these standard ways and what might happen if you subvert those standard ways and do all sort and do different things with them that might not be expected this is a very simplistic almost sort of like first approach to that but it's something that's worth looking into uh and playing around with I I want to keep doing stuff to it but I'm like stopping the other thing that you might think about doing is having a you know a text input box and how you can use the value function to set what's in the tech how might you make it appear that someone's typing into that text input box um without there being a person there and suddenly hitting a submit button that that you know so how might you make a page feel as if it's interacting with itself um and you know you could also do something when you move one slider oh we should try this okay so let's stop this okay what are we you stop the the video now and go do some go outside and play Frisbee or whatever and go socialize with your friends or have a nice cup of chamomile tea to relax meditate all these things are much more important than what I'm going to do next but if you're still here I'm going to do one more thing with this what if I have them all move when I move one of them slightly offset from the one I'm moving I don't even know if that would work I shouldn't try to do this right now this was going so well I'll just add this one so for example uh let's say what I want to do is hand Le just the first slider the input event first uh uh adjust sliders so if you remember the input event is an event that gets fired any time there is a change to the value of a Dom element such as a slider so I'm I don't need this uh draw function anymore I'm going to rename this to adjust sliders and I'm going to say start from Slider one slider I value slider index z. I'm making this simple so here what I've done now is I've said anytime you change sliders zero the first element in the array call this function adjust sliders Loop through all the other ones starting with one and change their value to the value of the first one so here we go and I can say anytime I move this they all move but so I'm going to leave that at that you could they take this what if when you move they all kind of like move sporadically but kind of like with that one what if when you move it causes them to sort of Ripple first one moves then the next one moves then the next one moves and you get this kind of like dancing this is Dancing with sliders so how could you if you actually interact with one and it makes the other ones do something uh anyway uh I'm I'm kind of off the beaten path here think of your own write your in the comments to wherever you're seeing this video write some other ideas of things that might be more interesting than what I'm thinking of I would love to make some more examples in this direction or maybe share things that you've made in that way so um this concludes a many many many videos that I've made about Dom manipulation HTML and CSS with the P5 GS Library I'm sure I missed a lot of things there are a bunch of these videos where things didn't work or I was like kind of confused send me your feedback write your letters of Complaint to Brian Williams I mean uh me um uh here at ITP uh the address is 721 Broadway I think that's okay to mention it's on the internet um uh you can send something in the mail I like things in the mail um and uh I will uh the next section of videos that I'm hoping to make possibly tomorrow but definitely next week if not tomorrow is about working with data so how do you work with a data file that you might load that has information in it how do you connect to an API like a weather API or the New York Times API or this wonderful API called the word Nick API that's one of my favorite apis so that's what I'm going to look at in the next set of videos that I get to uh next so thanks for tuning in which sounds ridiculous and um I don't know let stop now thanks okay okay uh so that's uh finishing up the live stream from today uh there are a few of you still here um I'll Stick Around for just like a few minutes just if you had a question type it into the chat um and I'll keep my I'm keeping my eye on it and otherwise I'm going to turn off the Stream in uh the next few minutes uh an hour in that's pretty good two hours this morning an hour now that's I think three hours is probably my limit for the day although I'm kind of like you know uh too many ideas are floating my head of other things to record okay okay uh I'm looking at the chat looking at the stream Health it says it's very healthy looking at a button that says I can share that I'm doing this change the thumbnail uh okay I don't see anyone uh asking any questions so I'm going to sign off for today I hope you enjoyed this I I really enjoy this even though it I feel like um a little bit like I'm just like repeating myself or making the same bad jokes all the time but I'll um you know come back fresh another day uh and thanks and it's very awkward to say goodbye to people that don't exist someday I'm going to do this with like with actual people in the room that might be a nice thing to do okay I'm hitting stop goodbye