hello and welcome to another sound synthesis tutorial this sound synthesis tutorial is about envelopes and the winner is just done the winner is the p5.js sounds library ok nothing about that what I'm really here to talk about is this kind of envelope and this looks like kind of a very scary weird looking diagram but I'm actually hopefully going to make it make sense to you in this video and I've lost my marker here's the marker what I want to talk about is something called an adsr envelope and envelopes are used in the world of sort of sound synthesis as a mechanism for adjusting the way the playback engine enters and exits the sound and then so you could essentially configure you know the previous video I made this oscillator object that played a sine wave and the idea I'm going to wrap that sine wave in an envelope open up the envelope and put the sine wave in it and that envelope is going to configure how that sound and and you can get very sophisticated with this to make sounds that sound more like one or are not different kinds of musical instruments but really for us in this video I just wanted to sound kind of like an electric keyboard in a way your electric isn't really electric I don't know if that's what you say but you press a key and you hear the sound go boom to Rivet acts fades in and fades out so in p5 yes there is an object called a p5 envelope we had a p5 oscillator now I'm going to add a p5 envelope we're gonna link them together and the reason why it's called an adsr envelope it's because there are four stages now I have that diagram here but I think in order to understand it it would help for me to try to like draw that diagram so there is a which stands for attack there is D which stands for decay and there is s which stands for sustain and then there is R which stands for release ok now the interesting thing about this is there are two kinds of things that are involved in an envelope there's stuff that's measured in time and there's stuff that's measured in amplitude so and interestingly enough attack decay and release are all amounts of time so attack meeting the moment you press the key on that like piano or keyboard or ever that's attacking the note so how long does it take in time to get up to what is what would be thought of as the attack amplitude or volume the level okay so attack is how long does it take to get up to that decay is how long does it take to get down to its regular volume so there's a volume like it could be loud the beginning and then sustain at a different volume so that's how long it takes to decay and then sustain so this is time decay is time sustain is actually a amplitude of volume so this is how loud is that sustain level so this is a value measured between zero and one kind of percentage volume and then release is also a time to for how long it should take to get to fade out to its release amplitude so we have what's interesting here is we have the attack time the decay time the sustain volume and then the release time interestingly enough though we need an attack volume and assist and a release volume the attack so let's say the sustain volume is point five but when we attack it we wanted actually to ramp up to 0.75 then fade down to 0.5 and then fade down to zero so there are two values missing from adsr which is the attack volume and the release volume and in p5 when you create the envelope when you say new P actually you just say um p5 envelopes sorry there are two functions I can't remember what they're called I think one is called set a DSR and you give it four arguments which are these values attack time decay time sustain level release time and then there's another function which is like set I'm going to come over here and quickly look it up in the reference set range okay then the other function is set range and boy this pen is not working very well if you can read this and those are those last two volumes this attack level and the release level so we need to configure this envelope so let's go into p5 GS and now make that envelope and could you figure it coming over here hello okay so you can see by the way now we met under stand this graph this dis chart a little bit more attack time than decay time what's that sustained level and what's the release time okay now so let me go back to my code this is the byway so this is where I kind of have an example built off of the one for my previous video where all it does is play an oscillator do you hear that I think it's playing the musical note a 440 Hertz and then I can turn it off with this button so what I want to do is instead of just having it be just the pure oscillator that just plays forever I want to create and I'm gonna just make a variable called env for no I just I really just want to use props envelope it's kind of a lame prophet but it is a prop nonetheless then I'm gonna say here I'm gonna say envelope equals new p v dot envelope and I'm going to say envelope dot what did I say set adsr so now I need those four volumes of all values attack decay sustain release attack decay sustain release okay attack is let's just say we're gonna have a point five seconds for the attack then we're gonna have point two five seconds for the decay then our sustain volume is going to be at 0.5 and then the release time is going to be a zero point one so I'm kind of making these up the arbitrary configuration then I'm gonna say set what I say set range so I want the attack volume to maybe be at point eight so a bit louder and then I want that release volume to be down at zero because I want it to fade all the way out so now I have if we look at this code I have the envelope and I have the waveform so I need a mechanism by which week I connect the envelope and the waveform together I want that you know this is the waveform this is the envelope I want to take the waveform and I want to put it in the envelope that really made sense over here okay so the way that that's done is with the amplitude function so typically with a waveform I would set the amplitude to like zero or 0.5 or 1 but actually what I want to do here is set the amplitude to that particular envelope so now this is how they are connected the waves amplitude is set to the envelope and then in this play function I actually don't need all this toggle stuff because all I want to do is just say envelope dot play so I want the envelope to play it's gonna play that oscillator wrapped in all the configurations of the envelope so let's see hopefully this is gonna work I'm gonna refresh it up p5 envelope is not a constructor new p5 . envelope what did I get wrong there so let's have a look at this page new p5 env so it's not the forward hope it's just dot env okay thank you very much dot env for short let me go back to my program I'm gonna run it do you hear that now does that really sound like playing a note at a keyboard I don't know if it does let's mess around with it let's make that attack time very very very short let's make the decay time also shorter and yeah so let's make the attack volume like a little bit louder so we can sort of hear and maybe the release time can be much longer do you hear that so there's sort of a loud pop and then a little bit of sustain and then a fadeout so you know now hopefully this explains the idea now you can to your heart's content I might suggest make a sketch tie all these two like buttons or text boxes or sliders configure the envelope have it play a change the frequency each time you play a node have some slider to set the frequency you can sort of set something up to test how this works and to kind of get good at and I'm sure if you research like standard adsr values for particular instruments you might try it with a triangle wave instead of a side wave you're going to be able to maybe control how the sound sounds a bit more now I should mention by the way you know I'm doing this sort of basics of generating tones with p5.js sound library there's another library you might look in at some point called tone j/s which also has a lot of a lot of features for doing this kind of work and pushing it further but what I want to do after in the next video is show you now how to keep track of an array a list of different musical notes how to set an envelope and have an oscillator and play a melody and possibly you know also a harmony at the same time so now we've got the basic idea but how do I turn this into something that actually will manage time play notes are being interactive that the user could press keys on the keyboard and play certain notes that type of thing I'll do that in the next video tutorial which I will get to at some point perhaps if you're watching this at some point in the future it's already there okay thanks for watching goodbye oops I'm back again with another addendum one thing I never actually talked about was how long should this a note sustain itself and you notice that's not really actually a variable anywhere in this there's no there's no sustain time there so the reason that isn't is because typically the way these envelopes are implemented is if your thing about playing a piano or keyboard this the note is sustained as long as you're holding down that key so in some default amount of time I guess is being used but there is also the function to trigger attack and trigger release so you can trigger the attack instead of just calling play you can actually trigger the attack for that envelope and have it sustain for an arbitrary amount of time until you trigger release and that allows you to do a few more things with how you control the envelope and the playback and I'll try to do an example in a later video which uses trigger attack and trigger release okay thanks for that little extra note or watching that extra note that is thank me for the extra note I don't know