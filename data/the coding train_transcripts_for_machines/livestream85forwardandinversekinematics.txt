good morning hello welcome to the usual Friday morning approximately 1030 a.m. eastern time in New York City episode live stream of the coding train All Aboard we are leaving the station almost mostly on time today and I hope that things are working oops I'm I'm trying to sorry I uh never never never again on this computer uh okay so please if you are seeing me and things are working and I'm live streaming let me know in the chat because I am keeping an eye on the chat now as I like to do at the beginning at of while people are getting sort of settled in with their nice warm cup of herbal tea and their pajamas with a blanket curled up on the couch I like to get started with continuing our oh wait a sec no no no no everything was I I had set everything up and I was kind of on time and now I believe uh hold on just got to work something out here uh what's going on here ah audio is an issue hold on everyone I had momentum I had Rhythm I had a whole thing I was doing uh let me just check here um why do I not hear hold on hold on hold on hold on yeah yeah yep yep okay hold on let's see if this works are you guys hearing any audio I mean music no you're not you're not you're not oh my soundboard is broken can I have a mulligan can I do this again please uh I guess I will uh what I'm going to do is disconnect uh and then I am going to reconnect try this one more time do not pay attention to what's happening here uh all right oh I need a new forget about this I need a new way of doing the whole sound thing let's just get going forget about my playing AI music and reading some random numbers I'll just come back for that later let's actually get started with perhaps what you are here today to watch which is some coding now um I I am a bit more prepared than usual and that I have an agenda let me pull that up whoa where did it go everything's okay so let me pull up my agenda right here uh there we go okay uh here we go so this is what's on the docket for today so I have some uh announcements to make about new things and scheduling uh I have some tutorials and coding challenges that I would like to do I have some other possible topics that I'd really like to do if I can get to it um I'd always like to um you know answer take a little bit of time to answer some questions from the chat and then also uh show a bit of projects that people have submitted from the community so let me get started here with uh a very exciting announcement which is that the coding train store what did I turn into like a salesperson look uh look this is my usual yellow mug but today I also have this mug on Q I I want to like do you think I can get a job at QVC with this uh with what I'm doing here but anyway if you're interested people have been asking uh coding train. stor Envy is the word but store Envy spelled uh with the E for both words so store with an e and envy with an e but only one e in store Envy uh hopefully I got that right because it'll be embarrassing if I get it wrong uh coding train storenvy.com there it is so if you're interested in I'm not actually I'm wearing my rogue NASA tshirt which is a great uh tshirt all the proceeds go to um uh girls who code and um some sort of math and science initiative from cotton Bureau which is a great tshirt company um but so I should but I did bring some of these shirts if you're interested you should get the Rogue NASA shirt uh here's one example of one and uh here's an example of another now I'm plugging this way too much that way more that I'm at all comfortable about so uh there's some shirts here there's some hoodies um this is sort of in progress and I'm going to add hopefully some other styles uh some some kids sizes and that type of thing as well um if you're interested in getting mugs you've got to go down here to this link where it says coding train mugs so I'm having a little bit of a technical issue with store Envy right now because the mugs and the tshirts ship separately so unfortunately um in order to charge for the shipping for each um right now they have to be in two separate stores okay that's all I wanted that's all I wanted to mention hopefully it works for if you have any issues um tweet me at shiffman I think I guess there's like a contact on here what happens if I go there oh I assume this message will go to me if you type a message in here with an issue uh okay so that's announcement number one announcement number two I know you guys have been waiting for this I've this has probably been the most requested topic uh since I started doing this channel but I am planning okay hold on there's a question does the Rainbow on the logo lack the green color because of your chroma keying that is exactly correct Alon in the chat this way I can actually wear it without being keyed out uh so I was saying something um next week hello Russia and Michigan next week I will be beginning my machine learning topic I'm teaching a course here at it a program called ITP which is part of TI School of the Arts New York University uh and the syllabus for that course which I really need to work on it actually doesn't start next week because next week is spring break for NYU um which one am I looking for uh if I can type this in the syllabus for this course is here on this GitHub repository if you happen to go to this GitHub repository right now there's very very little there so just sort of a skeleton of some topics I'm thinking about and all of these topics I will make videos about in this uh Channel over the next I would say seven to eight weeks probably um and so just to I did this last week but just to run through the topics again um some stuff about algorithms and search of network graphing stuff some just kind of classic machine learning algorithms that have to do with classification and prediction tasks uh looking at basics of neural networks looking at genetic algorithms which I already have a lot of material for but I have some new ideas for some new possibilities uh reinforcement learning in particular as that relates to some of the steering Behavior stuff that I've done previously and then some other stuff too so here's the thing you know how when I say quat qurans I have to run away even though I really do plan someday on trying to tackle what is a qune and why would you use it how would you implement it should you try to write the math from scratch use a library I'm interested in all these questions and I would like to tackle that on this channel I said it and I didn't run away it's gonna get me do I'm gonna hide so I kind of have a little bit of the same reaction to uh machine learning it's uh it's a little scary to me um this is not a topic that I have a long um history and expertise in so I'm trying to experiment which is to stretch myself a little bit on this channel I figure it's a good thing if I'm a little uncomfortable with some of these topics CU then maybe if I can figure it out a little bit it'll it'll help you guys figure it out too um but I I I'm going to certainly rely on help from the community a bit more and I have some uh wonderful people in my uh Patron group uh which is um a slack channel that you can subscribe to Via uh patreon. coding patreon patreon.com coding Trin who have been helping me um and so this is um so we're going to see but here's the thing what I really want to keep what I really want to keep a focus to and I I'm mostly talking about this to like remind myself is that I don't want to get lost in the weeds of es of sort of theoretical uh research behind in the in the lower level guts of a lot of these machine learning topics that's interesting important and vital research but my what I see that what that what I'm want to do on this channel is and I'm trying to find this line between let's actually write the code to make the algorithm and and and and and use that in our application versus let's pull from a library or framework and make the application so I'm going to kind of walk between those two things for example I think at this point I would like to build um whenever I get to week three a basic perceptron which is like the simplist neural network it's like a neural network that isn't even a network because it just has one neuron um and then look at how That's the basis for this idea of a multilayered feed forward Network so build some basic examples of simple neural networks to understand how they work what are the parameters of them what are they doing but to then at some point stop like for example I don't know if looking at this I mean I'm going to talk about what back back propagation is which I think is a very understandable concept but I don't know how far I want to go into all the math and implementation of that versus just kind of get build some basic examples and then you know maybe uh use a a framework something like tensorflow to then kind of get the implementation because really what I want to focus on is how can you be creative how can you improve the world with machine learning and and maybe the answer to that is maybe we should just slow down and give each other a hug forget about this machine learning thing but um but you know we can try we can give it a try uh and so that's what I'm planning and so next week I think I will probably start here although I I need to take this afternoon and some of the weekend to kind of sleep on this and figure figure some of this stuff out so um I would love any feedback any help if you have ideas for simple implementations and examples that can result in uh creative outcomes that's what I'm looking for uh great oh also I would love any of your so I'm trying to decide next week I'm going to be using a lot of my time to do some reading and watch some other courses some things uh you know I watch a lot of videos on S serology sj's YouTube channel um there's a great online course from a company called Caden which is called well there's Rebecca free brings course which is a wonderful machine learning for artists I think it's called there's also a course on tensorflow um and um what else so anyway so but I I like to read books even though I'm here making all I do is make these YouTube videos I I learn best I think from actually being forced to read a book away from my computer um and so if you have some suggestions for some good um machine learning uh texts that I might um use use as a foundation for some knowledge to build examples from I totally please tweet those things at me at shiftman um so that's what I'm going to be doing next week uh so that's that um so let me see oh is my audio a problem um so I hear somebody in the chat says um maybe you should work on your audio is there an issue with my audio sometimes the way I place my microphone is in an awkward spot and then I turn my head or something and it it cuts in and out but uh um so let me know if that's a problem in particular in the in the patron group because I can see that a little bit more easily than the YouTube chat I see people it's why is my fractal spirographic code not on oh did somebody H okay so I'm sorry uh I have to apologize um that okay so let's take a look I want to get going here but let since this was asked in the chat um let's check take a look so I am trying to uh keep up with oh I'm in the wrong repo so this is my repository coding train SL rainbow code this is where I uh keep all the code from all these videos that I'm making and then I have a new system and let's go down and let's look at um under challenges under uh really far down what am I going to do when I get to challenge number 100 by the way uh fractal spirograph I don't know which one let's look at this one um and then there and then I have this thing where there are some Community variations and I think I showed these last week so I saw someone in the chat saying why have you um not accepted my pull request so I don't know the answer to that I do know I do know one thing which is that I am a little bit overwhelmed with tweets poll requests Facebook messages email YouTube comments like I haven't I usually take at least um I usually try to take about a half an hour to an hour every day to respond to YouTube comments and I actually haven't done that in like two or three days I'm like way behind um so I'm trying to figure out systems for keeping up with this stuff but I I probably just missed this PLL request um I don't see which one it is so I'm going to have to look for this later um uh send um if you're in the chat and you posted about your poll request not being uh oh but it's not uh oh I see you accept it but it's not in your document okay so um how do I pick so this is another thing I don't I don't I'm learning figuring out what makes sense to do this how oh my phone is ringing look at this I can I can decline the call on my watch now okay this is not an Apple Watch though I know that I have a a lot of Apple products in this room not this one place where it's not okay um I'm trying to figure out the um I don't have a system for picking projects that I show uh and I think that I need to do a better job of figuring out uh what would be an a a fair and exciting and interesting way of doing that right now it's completely halfhazard so the except for one thing I I I'm I'm I post a thread in my Patron group and people uh submit projects there and then sometimes I pull something from Twitter which is what this first one is because I scroll through my Twitter feed and see a few like things that people sent to me and then I I just pull those so if you have ideas and I'll think about ways to manage that better I apologize that I don't have that particular project I do what I do like to do is um then go back to the previous coding Challenge and share some things that were that in that the fractal spirograph one is just a few weeks behind anyway so I'm off way off topic here here think about all that stuff later let's get going how what many minutes am I in here 15 minutes I have a rule which is that I must start coding by at least 30 minutes so let's see I'm very disappointed that my U oh that's promising hold on let's see here I just got to check something okay okay okay I think I know what the problem is if everybody hold on for a second Talk Amongst yourselves Talk Amongst yourselves I'm got to just check something here oh that's right let give this a give this a restart okay um all right so let's see here let's look at the um let me press this again turn this on uh come on okay let's oh I have a little bit of an announcement by the way this is like a small tiny thing but let me mention it uh I have not I recorded so much content last Friday and what I do is after a long live stream I think I probably did almost four hours of live stream last Friday and then all the edited versions get released I release them once per day um but um uh I had so much that I haven't actually released all of it but and let me just mention though the main coding challenge I did at the end of last week was Plinko let me see if this shows up can't remember if this is added one thing you can often do you'll notice that this is these are my most recent videos Plinko is not there when a video is ready even before I release it on a schedule since you guys are the core live viewers you can go to uh playlist for example and I'm going to go to challenges uh let's go to all playlist okay no hold on ah um I don't know how to I don't know how to operate this YouTube thing I don't know how to find my I don't know how to use it if I'm not logged into my account let me go to home no playlist is the right place clearly uh oh there's got to be down here somewh coding challenges so this is the coding challenge playlist I'm going to go all the way to the bottom look at this it's actually there so you should feel free to always check some of the playlists and you can see and what I'll tell you about what's special about this now you can just turn this off and go watch these if you didn't watch last week but this coding challenge 62.3 Plinko part three is actually a video that no one well not no one but almost no one has seen because I uh discovered some things about the Plinko simulation that I felt based on some suggestions from chat and Twitter or wherever it came from um that they needed some improvement and so I secretly came up in here and didn't live stream it and recorded I did actually do a test whatever I um recorded an extra section of that which changed a few things so if you're if you watch the live stream um and so don't feel like watching the edited versions I would say make sure go ahead and watch 62.3 that's actually new content the rest is just edited versions of what I did last week okay so that's there I'm going to release those over the weekend later this afternoon that type of thing okay um can you change m L to machine learning in your file sure oh yeah machine learning yes there we go okay so ah work from the community oh wait hold on I will just have to sing my lullab myself okay uh okay um so let's take a look first on this first one this is from uh C Carla on Twitter I just wanted to show Emily Shia did a guest tutorial about making a matrix rain simulation and there have been a lot of wonderful uh creative variations of it um and this is one that I just saw this morning that has uh color and there's sort different set of characters in it and um uh I really enjoyed seeing this one look and so then the other thing I'll mention is the if you if you go to this tweet uh you'll find the source code is here so this is a great I this is one of the things that I love about do operating this YouTube channel whether I make a tutorial or somebody else does to see this sort of tree of ideas that percolate out from a single example so thank you um for uh Carla for this wonderful uh version of The Matrix rain okay now I'm going to show uh some stuff from the uh oh and I need to have sorry I need to have uh I don't have everything set the way that I meant to look at this oh my God seriously uh hold on everything's going to be okay everybody uh this is from I'm going to start I think I showed this before but I didn't um I didn't kind of uh get all the details out about it so this is from uh I have notes Here Mr Muse addict uh and what it is is a oops Trappist visualization what is a trapist visualization it's the newly discover visualization of data around the new newly discovered Trappist solar system so I think when I showed this before I didn't explore everything it could do and so I really use the mouse wheel to zoom so that's the thing that I mostly missed so let's find oh is there no link to it running I got to find the code here ah okay so ah so this so I'm going to uh paste this into processing again we're going to look at this project okay here we go let's run Mouse wheel I don't have a mouse wheel that might be my problem Oh but I can do the two finger stroll so you can see here odd so this is really what I missed which is that you uh my you know that you can see that the data um you can kind of zoom in and out to see and what I love about this I guess is you can see the data about the planets in the newly discovered solar system in relation to planets in our current solar system uh great work thank you okay so now we're going to move on to the next project uh I'm going to go to um this code pen from Robin random oh I like random Walkers surrounded by their verono sector so so this is great I haven't done a tutorial or coding challenge or anything about verono tessellation verono geometry whether I'm pronouncing ver I just need to do a pronunciation challenge where I try to say the word verono correctly um and let me look in the notes Here submitted by Robin which is um uh This Is Random Walkers surrounded by their verono sector and this is using D3 so it looks to me I guess I I think the idea is that these are all moving all these little dots are moving and the verono calculation is happening every frame and moving the things around so I you can you can imagine a lot of possibility design possibilities that you could build off of this okay uh this is on code pen and all the links to these projects I'll put in this video's description okay now I'm going to go to uh this code pen from Ala and uh I'm going to just change the view to full uh whoa look at this rainbow flow and hex spins this is quite exciting and interesting um so these are particles moved by noise grouped into hexagonal bins using something from D3 called hexpin I have no idea what that is I'll have to explore that sometime with their color disparity being the amount in that group with some effects to make it look like 3D pillars it really has a quality of um uh uh almost like AR it's very architectural and I I love the idea that maybe I could kind of fly over it or uh you know what that game that I used to love called cubert or something it has exactly this quality where you have the little character who bounces down um really nice choice of color great stuff okay so um let's keep moving I'm just doing these quickly ah okay so now I'm going to get to something a little bit different which is uh C Manny has been thinking about so one of the things I have is I have and how am I on time I've got my limit I I hopefully it won't take seven minutes to discuss this but that's my limit 30 minutes of introductory stuff uh so if I go to the coding train GitHub repository rainbow topic isues and what what you see here is all of these submissions from people of different ideas of things that I could explore on the channel and there's so many wonderful things I would love to do double pendulum I love that double pendulum wonderful wonderful idea so one of the things I'm trying to figure out is how to best organize this into categories there's a lot of duplicates um how to um how to um how to allow for efficient up voting um so I can get a sense of if there are things that are particularly desired from the community um and so what the system that I have right now for that is just sort of a freeforall of submitting issues and then if I go under sort and I sort by thumbs up we can see oh look at that what's on the top here machine learning oh look at this mathematically involved yes um um or actually and uh planned meaning I'm planning to start tackling some of this stuff next week and eventually this this I do want to break out and this has got just like sort of a long list of stuff I want to break this out probably into separate uh issues to check them off one at a time so you can see kind of what people have upvoted just through the GitHub system and so C Manny uh has started working on maybe this is a visualization where you can see look at this where using I it looks like this uses the attraction Force Challenge and um the um uh um and also uh maybe matter.js for some of this Collision stuff I'm not sure I'm just speculating and so um this is a great uh exploration that we can sort of see like you know maybe we could use this actually a pick something at random and the the larger ones oh look at this I can drag it around machine learning is taking over um so anyway if anybody's interested and has thoughts or feedback about how to organize um there's a a gith there's an issue thread see if I can find it um I would suggest coming in right here uh where let me see if I can uh let me just if I search for topics no that's going to be in everything what if I search for C Manny no I feel like there was I somewhere there's a I'll find it somebody will post it in the chat that I feel like there's a discuss maybe a place where you could participate in this discussion or certainly you could go to um actually maybe what you could go to uh C man's GitHub the rainbow topics repo um there okay um let me um let me just get myself here open a little bit more I got this chat going I'm seeing the uh okay so now I'm ready to get started and I'm just gonna ah airplan Here Comes oh mirroring is it going to work I might take a five minute break later to restart my computer um because I think that yeah okay I'm going to do this now actually let's uh because I think sometimes everything just needs everything just sometimes needs a reboot so I'm going to go over to the Whiteboard which is and erase that and talk to you about some of the topics I'm going to do today uh okay so let me restart this computer and let me go over here you're you're in the void right now but I think you can still hear me and as soon as I press this button I'm going to be standing right in front of you it's a very professional operation I've got going here and I'm going to erase this you know what I would like to do this afternoon is I'd like to just come up here and wash this whiteboard just by myself could play some you know some Mozart wash the Whiteboard soothing tones that that's the kind of thing that really brings joy to my life but right now we'll just erase it and it'll be all smudgy it's fine you can see I haven't been here since last Friday okay so this is erased um so there's two um and let me just I'm back here uh I don't know what this is going to do uh let's see if this works if we can log in here H Computer is now Rebooted and behind me hello I am now uh going to wait for everything to start up we're going to give this one more try let's see okay this I don't need this is running okay so here we go and I'm connected to this wifi yep okay here we go one more attempt here ah there we go so now we've got the uh uh we've got this here okay fine fine go away okay there we go and now I can go to here is it g to happen is it gonna happen I have exactly 30 seconds in my half an hour limit so I will continue our coding train story book a million random digits with 100,000 normal deviates I need a bookmark a bookmark would really help it's really loud oh wait that's totally not working at all it it it disconnected I at least read one number for you guys 504861 that's a great number okay uh oh well um yeah people I am getting a couple of people saying that my mic is quite low compared to other videos uh I see like a nice green stretch but um let me I will I will turn it up a tiny bit I have a little dial over here maybe nicked so I'm just gonna up this dial little tiny oh now okay wait so maybe that's a little bit everybody says it's fine though so I'm going to keep it oh sound is good mic is fine okay okay okay okay I made it a little bit higher okay so why did this disconnect I I guess I have to give up on this because came back I don't know why it disconnected okay uh and then just system preferences and sound multi output device and as always I always forget the this do okay so uh what what I want to do I have two things I want to look at one is uh what are we at now 1110 so I've I don't know if I'll get to all of this but I want to look at texturing geometry um in processing maybe I should start with that so this is the last week that I'm going to uh finish off some new content in videos from the first course nature of code course which is more about physics and simulation and one thing that I've been wanting to do for a really long time is make a uh inverse kinematics example um uh which is a technique that you can use to calculate the positions of you know for lack for you know one scenario is think about how a robot arm works it's actually a an algorithm that's used in robotics but you know in terms of a visual example how might we make a a swimming fish or eel um a tentacle there's a lot of skeletal body type motion types things that we can do with this idea of forward and inverse kinematics so and there actually are um in processing itself maybe I'll start with this uh in processing itself um there are uh some examples I believe it's under under topics interaction yes so here under uh topics interaction there are examples follow 1 2 3 and reach one two 3 Let's just look at follow uh two for example I don't know which one this is going to be but you can see this is a two segmented arm that's following the mouse and let me move that over here so these examples are by uh Keith Peters I believe it says there and Keith Peters does it say that yeah based on or based on code from Keith Peters Keith Peters has a YouTube channel called coding math which is a wonderful YouTube channel especially if you really want to like get into the math stuff of stuff um and it's called coding math so you can find it I'll link to it um I believe that Keith Peters has a couple videos I definitely watched them quite at some point not recently on um forward and inverse kinematics so and one of the things about Keith's channel uh Co one of the things about coding math is that it doesn't use p5js it doesn't really use any Frameworks so for those of you who are kind of like that vanilla JavaScript raw guts of the code stuff um that's a great resource for you okay um so um so uh here we go let's see um I am now so let me think about let me think about how to do this ah wrong wrong button okay so I want to do what I want to do is um I think I want to just cover uh polar cordinates because I just keep using it in every single video I think it's worth making just like a 5 minute polar coordinates video I probably have one already from a bunch of years ago in processing um but I want to see if I could just do a really quick like polar coordinates tutorial in p5js um so that's one thing then I want to look at forward kinematics and maybe we can make like a jiggly tentacle like thing and then I want to look at uh inverse kinematics and we can make some you know just a simple like moving like snake like thing um tentacle snake uh and then I I really would like to do a like a swimming fish simulation so the problem you know I I I'll try to come up with a um so I don't actually have a sense of exactly how to do this but I have seen lots of really great demonstrations of it so I think if I can get through these topics while I'm doing that and building examples for those of you following along you might have some ideas that I can build into a fishing swish a fishing swish oh God my brain is not working a swimming fish simulation okay uh all right how's this working still this this whole sound system thing I've got going I have to completely revamp it and I'm on the wrong camera once again okay uh okay so I'm gonna get started I think what I'm going to do is I'm going to do my whoa I'm going to do my polar coordinates example with code pen why not um and I'm going to log in oh what's the chance I can remember this no I Do by the way use one password the problem is I don't have one password installed open on this computer that I log in for oh my God I'm gonna have to look it up I know where I can look it up bear with me for a second I'm GNA look up my code pen password uh uh uh okay hold on one password Here one password Tada okay I'm in my one password account I'm going to do a new pen uh I am going to uh I think I like this view uh and then I only really want to look at the JavaScript um and I'm going to say function setup up function draw I'm going to go to settings and uh JavaScript I'm going to add CDN op 5js CDN this is what I'm doing is I'm just setting up a code pen project to use how come that's not working uh CDN p5js I mean I I don't know why this does not coming up but I'm going to look for P5 here it is uh and click on this so uh the P5 library is a library that you can uh reference from your code in a variety of different ways you can download the library but one of the easy ways to do it is just to get this link from um cdnjs which CDN stands for Content delivery Network so I'm going to grab that link here I'm going to go to code pen and I'm just going to add external Javascript right there so now this codepen project will have a reference to p5js itself and uh I I think I like to make a pitch that P5 be nice to have P5 in this list here of things you can quickly add ah where did that go um and now I can just do save and close oh so a polar coordinates call it that um uh polar the the polar isn't there like a the polar The Polar Express The Polar Express to coordinates town okay and now if I say just to see if this works create canvas and background 51 and save uh oh do shouldn't this work now what am I missing uh console I don't see any console errors what am I missing here folks uh uh code pan afficianados copy in import did I not actually uh oh I have to oh oh whoops I have a typo in there thank you there we go okay great I'm live and working okay U Matt ask don't you need to B A div element to bind your canvas to so you don't actually P5 is set up in a simple way where it just uh what it does is it creates the canvas element and just appends it to the body of your document at the end so it's not the be all end all of everything but it'll get you it'll get you working here okay so um uh okay here we go I feel like I'm a little little having a little trouble getting kind of going today let me okay so this is going to go some in some probably if um Mato when you get to watching this Mato who does a lot of editing of these videos this will I think go in the nature of code chap it can I actually could go into p5js additional topics it could also go in nature of code chapter 3 um because that's also where I already have a video but we'll put this in p5js additional topics okay uh or it could be like a Q&A video whatever no additional topics is good uh okay hello uh welcome to a video wait I got to just get get right into it this is going to be like we're going to make a I'm going to be releasing a 5 minute YouTube video it's going to be very exciting hello in this video I want to talk about something called polar coordinates okay what are polar coordinates and I've been I've been making all these videos coding challenges where this scenario comes up over and over and over again I have a point here call this point XY I have uh relative that point I have some sort of angle call that angle angle what if I want to find a point out here based on that angle and a distance to that angle so this is what I mean by polar coordinate a a cartisian coordinate is an XY coordinate in it uh named for the French mathematician Rene deat uh an XY coordinate um in a twodimensional space so we we move over X spaces we move move up y spaces in the computer graphic system you know we've got the we've got the flip thing where we move over X spaces we move down X spaces and that's XY a polar coordinate is thinking about a coordinate that is defined by a radius or a distance for a distance um and an angle often using the Greek letter Theta to Define that angle the pro the reason the so both of these are useful ways of thinking about points in space if I want to do a spiral pattern polar coordinates are going to be really useful because I could just change that angle and maybe shrink the radius and I've got a spiral pattern the issue is that all drawing functions in a a computer Graphics things like p5js or processing or fill in the blank there think about Co really only think about coordinates in cartisian coordinates so the ellipse function which draws a circle takes an XY the point function which draws a point the line function the rectangle function all of these require XY so what if you are thinking about R Theta and you want to um you want to have your program run with this idea of R Theta but you have to draw with XY so we need a formula to convert from Polar to cartisian we also sometimes want to convert from cartisian to Polar I'll maybe I'll talk about that in a separate video but in this video I just want to look at polar to cartisian and the way to do this boils down to trigonometry trigonometric functions so if I have a triangle and I say this is my angle Theta oh I'm hi I'm over here time out this is going to get edited I'm GNA just shift the camera a little bit I got it got bumped just turn it a little bit there we go okay uh there we go oh yeah I'm back after fixing the camera um if I have this triangle I have a Theta an angle here this is my R right so I know this point what I want to do this is some XY what I want to figure out is what is this point and I'll call this uh uh X2 Y2 or whatever if we call this X1 y1 how do I get this point okay well if I knew what this was I'll call this DX as in like Delta X the change in X and this is dy the change in y if I knew these two values then I could say x1+ DX = X2 and and y1 whoops plus Dy equals Y2 so if I could get these two values then I could move from here to there so how do I get these two values from these two values and this is where's my Eraser this is exactly what we need to do okay I've drawn the same diagram so many times now let's just let's just make the math happen Okay so do you remember so at some point in your life you might have heard of a function called s or cosine sooa s equals opposite over hypotenuse cosine equals adjacent over hypotenuse that's referring to the sides of a right triangle and guess what this is a right triangle right here this is opposite to the angle this is adjacent to the angle so s OFA equals opposite Dy / hypotenuse which is r in this case cosine of the angle equals adjacent which is DX divided by hypotenuse which is r and these equations can be Rewritten another way I can simply say d y = r * s of theta now you might be asking how do I get from here to there one of the things you can do with an equation is you can multiply both sides of the equation by a number so if I multiply this side by R and this side by R this side becomes R * sin of theta and this side becomes just Dy because Dy * R / r r / R is 1 so this just becomes Dy and DX also becomes R * cosine of theta so now I have those two formulas so if I have this XY point I have an angle and a r a distance a radius or a length I don't know what to call it then I can calculate DX and Dy based on that and get that point let's make that happen in the code so I have a very simple code pen here open um I'm using the p5js library and so the P5 library is already loaded into this Cod pen project and the link to this code pen project will be in this video's description um okay so if you want to know how to do that I have another video about how to set up a P5 J Project in codeen so what I want to do and actually um just very very simply is I'm going to say what if I have let me just do this all in setup I think right now and we can or or in draw it's fine what if I have an X and A Y which is like 100 100 can you see this font is very very um small hold on a sec we'll edit this out I think I need to make the font bigger um so how do I where is that under settings is that like where do I set my font size settings somebody who uses codes Spen more frequently let me know uh can I do it here tidy maximize minimize settings I really want it to be in settings I'm waiting for somebody to tell me uh I saw people typing things font size looks good it looks so small to me you really can read that uh I could do the browser scale thing but I hate doing that because it makes everything bigger there's got to be a way maybe it's under here uh let's try this let's try this settings uh okay hold on stay for a second save uh yeah I don't want to do I know I could do the command plus thing but there's got to be a way here we go code font size let's try 26 save all settings and then let's go back okay that's better okay I'm back with a bit smaller a bit bit larger font so now I just want to draw a point at that XY and I'm going to say stroke 255 to make it white there you go look at that tiny little point there it is hi tiny little Point okay now it's a happy point I I've been wanting to say that for so long uh okay stroke weight let's make it a little bigger stroke weight eight uh okay there's my point Ah that's not a good location for this point let's put it uh further down at 300 okay now what I want to think about is let's say at this point I I want to have an angle of 45° so I'm now going to make an angle equal to 45° now here's the thing 45° in a computer program is goes this direction so actually what I really want I can't is 45 degrees this is so hard 45 degrees this way which is negative 45 and 45 is uh I'm going work in units of measurements called radians no stop now right now go back so here's the thing I always get into these videos I'm like okay well do I need to explain radius and I do that in a different video should I been doing that in this video am I going to take two minutes to explain radians now let me do that again and I'm just going to use I'm going to set angle mode to degrees okay so I want 45° a 45 degree angle 45° uh uh because because y points down will actually rotate me this way and I want to rotate up so I need 45° now I keep saying degrees because that's the way I tend to think about it Les 45 90° 360° um most computer graphic systems will think about angles in a unit of measurement called radians uh 360° is 2 pi radians in that that's something that uh um that I'm going to just sort of ignore for this particular video and I'm just going to say angle mode degrees so now P5 is going to think in terms of degrees and I'm going to say angle 45 okay now what do I do here I remember I I need to have a distance so I'm going to just say maybe 100 pixels out 100 pixels and I need to calculate VAR oops Ral 100 and I need to say VAR uh DX then equals um R * cosine of that angle and Dy = R * s of that angle and now I can simply just um now I can simply just make another point at x + DX and y + Dy and let's see what we get there it is 45° and I could also connect those and I can connect those with a line and you can see whoops and you can see there I have this line now I could change that angle so now I could say let me have the angle be mapped you know I should actually um let me have it just be mapped to Mouse X so Mouse X which goes between zero and width I'm gonna have the angle between negative pi and Pi oops oh no no sorry negative 90 and 90 because I'm doing this in degrees and you can see here as I move as I move the uh Mouse it's changing that particular angle okay so this is the idea there's a lot of applications of this um you're going to see that one of the reasons why I'm making this video right now is I'm about to do a coding challenge about something called forward and inverse kinematics where if you think of this as one segment of a robot arm what if it's attached to another segment and another segment and how do those all rotate relative to each other so this is the kind of thing that you need for that I should mention that you can also I could have made this exact same P5 sketch with just uh the actual rotate function so there is a rotate function can draw a line a line I can rotate it by an angle and that would actually be a wonderful perfect way of doing this as well um I have some videos about that um probably as well about how to do Transformations using rotate and translate but I in this case for this kinematics example that I want to make um having um having the the doing doing the polar to Polar to cartis cartisian conversion in the code is a good thing okay I will see you guys in a future I hope this video was somewhat useful to you I'm I'm I'm a little off balance today what what was that like 35 minutes oh and then the camera goes off I'm checking the thermos that over here because uh okay so okay now that I did that in code pen I'm going to almost absurdly move move to a different programming environment over here what time is it 1130 uh and this is called this is processing and I'm going to save this on the desktop as uh uh let's call this forward yeah kinematics because that's what we're going to do I'm going to add setup I'm going to add draw uh okay here we go now I am going to I'm uh I'm uh Michael in the chat writes I'm surprised that the camera do the camera doesn't drive you crazy turning off oh it does drive me crazy uh okay um so now what I'm going to do here is I'm going to look for my Eraser which is over there and I'm got to fix something here with the microphone and I am going to hold on one thing I want to look just bear with me for a second I want to look for something here uh yeah uh interactive fish aquarium desktop wallpaper um okay look okay I'm coming at there's a reason why I was doing this interactive fish aquarium desktop wallpaper YouTube let's see if this comes up right is this the right okay so this is uh one of my students here at ITP uh pointed me to this particular example um with a fish P I guess this is a interactive desktop you can get and it has these swimming fish and so I really wanted to figure out a way to create this kind of simulation and my suspicion is that the uh concept of kinematics whether it's forward or inverse which I will get into is a key to unlocking something like this um now there's a lot more go because this just connects so nicely with the flocking simulations and the different steering behaviors so this is something I really um curious to see if we can if can figure out a way to tackle it so what I'm going to do is I am going to this morning build uh whoops uh I'm going to build um if I play this again I'm going to build basic examples of forward and inverse kinematics um and let me just show you those actually already which is I uh this well uh whoops this follows so this is an example of this is an example of inverse kinematics um and so I'm basically going to do the math and I think follow 3 does what I'm going to do which is that if I connect this with a lot of segments it gets much more interesting than just these two segments so you know I'm kind of imagining this as like if there's like a sine wave controlling this that then affects what's connected to it that you might get that kind of fish swimming effect so this is really oh and I'm um so I want to build these this morning uh it's not the morning anymore it's 1130 I want to do this a forward and inverse and I'm guessing this is going to take me about an hour that means two hours and then I'm going to go away and I'm going to do lots of other work and answer lots of emails and catch up with a lot of other things and then if I have time I'm going to come back and try to make a fish thing based on these core examples so uh in the meantime when I'm away if those of you who want to try to make the fish thing and send me ways that you did it I would love to hear from you and that'll help me okay um yeah this I I apologize that this labtop um I really should uh put the second laptop that I use I should put something green on it maybe I'll try to do that that's a great suggestion maybe I'll try to get that for later today okay uh all right so let's get started here um so what actually let me open up let me open up um sorry under examples and let me open up reach three no not reach let's do the follow actually reach is a good one now let's do the the follow I don't know doesn't matter so here's here's what you can see so this is what I'm intending to build and this is Keith peters's example from coding math right Keith Peters and coding math that's the same person am I right somebody tell me if I'm wrong uh okay put on some face pain all right so let's um look I think one of my problems today is that I'm not staying very hydrated somebody on Twitter asked me what brand of glasses these are I have no idea Garrett light California there you go okay they really need to be tightened they kind of like fall down a lot okay never forget this dot I'm going to do the this this dot this dot this dot the this Dot Song never forget this okay here we go somebody compose that song for me I'm so distracted I know it's a little it is really distracting I've got all these different chats going I've got lights and cameras everywhere computers things are blinking at me I need a way to do this being less distracted okay but I'm going to get started so let me minimize this let me minimize this let me actually go to the H it's fine um you know what I think I like the I think I like the reach example better to show yeah also I don't have to operate the mouse oops oh did it close that ah I feel like my evening live streams are always better than the morning ones I always thought I was like way more on top of things in the morning and now I'm now I'm wondering about that once again I didn't get a good night's sleep last night that seems to be the major problem uh okay um reach three okay okay um what do I need over here I think I think I'm just going to get rid of all this erase it I'm definitely going to need to do some diagramming the funny thing is I have definitely built at some point in the past inverse kinematics examples but I have I don't think I've ever done the forward kinematics which in theory is like the simple thing so but I'm a little bit nervous about doing that we'll see what we see what see what I get okay I'm put this over here and you are the person I'm talking to my glasses are on my face I'm oh I'm in the wrong camera shot ah I used to not have a problem with remembering this okay um let's see okay here we go welcome to a multiart coding challenge series on kinematics this is an example from processing uh processing a Java based platform open source uh creative coding environment that I use in a a lot of my videos um this is an example by Keith Peters from coding math uh of the coding math YouTube channel which I also highly recommend I believe that Keith Peters has said video tutorials on this exact same topic with and if you're looking for the video tutorial where somebody who really understands the math and doesn't make any mistakes um I would recommend that video to that channel so just go leave and watch that channel but you can see this is an example called reach three and what you can see is that there's this bouncing ball moving along and that there's this kind of tentacle thing that's just reaching out trying to touch it trying to catch it and then move along with it and it behaves In This Very I might say robot arm like fashion so this is an implementation of something called inverse kinematics which refers to the motion of ected segments from the front to the back so the front is what's really controlling it it's trying to reach and how should all these other segments be oriented so that that front can get as close as possible to this target versus forward kinematics which is like you know I'm going to move this how should the rest of my arm move when I move this part of my arm which is different than well I I want to inverse which I need to move my hand how does the rest of my arm move in order to get there so I want to do both of those things with the goal of making like a swimming fish or a weird goofy tentacle thing really the goal of like showing you how these things work and then you making something that's creative and colorful and exciting and lifelike and crazy and weird or beautiful or whatever so um let's get started let's look let so this video I'm going to do forward kinematics and then I'll do some other videos that I'm not sure yet so let me move over here and let's discuss what the core stuff that we need to build into our code is so we need so the idea is and if I just think of it as two segments that I need to have these I think I'm going to call these segment objects so I'm going to have segment objects that almost as if they're connected with a joint now by the way you could probably do a lot of this using a physics engine like box 2D and a revolute joint which I have other videos about but I'm going to do this without a physics engine just kind of with the raw trigonometry math that we need so the idea here is that I have a segment and every segment would have a a a kind of starting point a we'll call this point a which is an XY point it also has an end point which I'll call B which is also an XY and one of the crucial pieces of data that I'm going to need is this angle so first all I want to do is create one segment with an angle change the an angle and a length sorry what key the distance between these two points is the arm's length the segment's length so I want to just create one segment with A and B points and an angle and I want to be able to turn it let's just do that to start so so to do that I'm going to get out of this example here I'm going to create a new tab and I'm going to call it segment I could probably think of something better but segment I think is a good and actually that's probably from Keith Peter's example I'm sure that nomenclature is used there so I'm going make a segment class and what did I say each segment needs it needs a be a start point an A A I'm going to use a p Vector object to store an X and Y for that point it needs a b I'm going to use use uh that's its end point it needs a length which is the distance between those two points and it needs a angle which is the angle now here's the thing now what I'm realizing if I go back to this drawing is really the information is a length and angle B is a point that I calculate based on how that angle is changing and this relates exactly to this idea of polar and cartisian coordinates and I just made a separate video about that if the what polar cartisian coordinates are I would uh you find the link to that video in this video's description but the short version of that is if I have a point here and I have an angle and I have a a distance a length a radius from here to here I can get this point by by by saying R cosine of theta R * cosine of theta and R * sin of theta will give me the uh the the how far to move along the xaxis and how to far move along the y axis to get to here so those formulas I derive and explain expl them more in a separate video that you could look at okay so if I come over here what I'm going to do now is say okay what when I create the segment what does it need well it can get an X and A Y like where is it and it can get a length and so I'm using just different variable names for the parameters that get passed in and it can get an initial angle so what I'm going to do now is I'm going to say a equals a new P vector at XY length equals whatever length we specify and uh the angle equals whatever angle we specify that's pretty good and then what I can do next is let me just write a function called show where I'm going to draw it as a I'm going to say stroke 255 stroke weight two or four and then I'm going to say line from from from a.x a.y to b.x b.y okay so now the idea here is that I can say something like segment seg for Segment uh seg segment is a new segment and maybe I'll have it uh start on the left hand side of the screen and point to the right so it's going to be at something like 10 comma 200 with a length of 50 and an angle of zero and then I want to say segment. show so now I have this idea of a segment it starts at you know if I if this is my canvas it starts right here at like 10 comma 200 it has an angle of zero and a length of I don't remember I said 100 so I should see something like this on the screen now I've missed a key step here I missed it on purpose but let's let's just see uh what happens that of background and now let's run this okay I got an error I got a null pointer except ception so what does no pointer exception mean by the way no pointer exception means you're trying to use something whose value is actually null and so you can't use it the value is null nothing sadness void sad nullness let's let's get it out of being null and the thing that's null is not a a is a vector B was never calculated so like I said B is a thing that you calculate based on where a is what the angle is and what that length is so I'm going to write aun function I think I'm going to write a function called uh calculate I don't know this's probably a better name for this calculate B update and something like that so I'm going to do that calculate B and so how do I do this now I could do that math all I need to do is say hey DX the change in X is the length times cosine of the angle and the change in y is the length times s of the angle and then uh B is a new P Vector which is X Plus DX y + Dy so I now have uh oh no sorry a.x a a.y so I now just calculate what is the change along X and Y from a based on the length and the angle and then give me that new P vector and if I say now in setup in the in the Constructor calculate B we now see there it is there's that segment with an angle of zero now let's let's see if this is really working um let's change the angle to U and I need to work with a unit of measurement called radians so if I um if I just want it to be 45 degrees or negative 45 degrees convert it to radians um now you can see now it's pointing upward so we got the idea this is working I have one segment yay now okay so what's the next step here I need a break I'm going to keep going okay what's the next step here there's there's a few different things one is maybe we should see maybe we should make that angle change um so I'm going to write uh a function called I'm going to say in draw I'm going to say uh uh let's let's let's leave that to later actually I was thinking like we would use pearing noise to make the angle change or just have it turn around that type of thing um but I do kind of want to move it a little bit over and maybe make it a little bit longer so let's do that okay so now what I need to do is I need another segment I need another segment that connects to that segment I think about this do I want to introd I I'm probably going to need an array but I also need the segments to have an awareness of which one they're connected to so actually first let's add something the segments need to know the segments are going to need to know who they're connected to and I'm going to call that a parent so this particular segment oh I got a great idea this particular segment that I made has no parent the parent is null but I'm going to make a new segment that's connected to this one like I want to say segment segment two I really want an array but I'm going to do it this way just for a second I going to say segment two is a new segment and I'm not going to give it a position I'm just going to give it a parent right I want to be able to say I sometimes want to make a segment at this exact location but I sometimes just want to make a segment that's connected to another segment so they have two different ways of making a segment and guess what in Java which processing is you can have two different Constructors and you could just write both of them so this second Constructor is going to be just like the first one but instead of taking an XY a length and an angle it's going to take another segment I'm going to call that app parent and a length in an angle so its a position is actually so first of all its parent is not null its parent is equal to its actual parent right the one that was assigned and its location where it is is what this segment location a is at the exact location where this segment's location B is so all I need to do is say it's location a should be at parent. b.x parent. b.y okay so that's another way and then the rest is the same length angle calculate B okay so this I think is good and now I'm going to say segment two segment two show hey look at that and its angle is also 45 well let's give it a different angle just so we can see uh let's give it an angle of zero we see there's are two segments now here's the thing I haven't really connected these things like one of the things I want to do is I would like the um what if I just wanted them to spin so what if I put them more in what if I put them in the center and so that's that should be in the center and I'm just going to say I'm going to write a function called like update where I say angle equals angle plus 0.01 just so it rotates kind of slowly and I'm going to say segment one update is that too slow oh Al so one other the thing is it's doing it the angle's changing but guess what whenever the angle change I need to recalculate the end point I don't see anything because I haven't updated I haven't calculated B so anytime I changed the angle I need to recalculate its end point so the angle changes recalculate its end point now let's run this again there we go ah but that other one is not moving it's not connected to it that's no good right I need to say that uh I need to say basically like if I have a parent when I update myself if I have a parent or parent is not equal to null then what I want to do is um and um then what I want to do if parent is not equal to null sorry I'm like thinking about this what I want to do is get my angle well okay a couple things first I need to set a my point a is equal to uh parent. b. copy so that's by the way another way I did this here I um I just made a new Vector from parent. B so another way I could do this actually that's a little bit more less code to write is I could say parent. b. copy which just makes copy is a function that's part of the P Vector object that uh copies it so I could always uh update by uh making um saying that and then I can now now I need to update both of these so now we can see that they are both that that is connected so as one turns the other one is connected so this is really uh forward kinematics yeah I could do someone in the chat is saying I could say child not parent and that's actually a very good point but you know I I just thought of it that way probably because I somebody else implemented it that way so that you know that would that might be a good Improvement maybe I'll double back and kind of see if that's a good refactoring but I encourage you to try that as your own exercise to use uh to to create a child rather than a parent um and so now what I should be able to do by the way um is yeah because when I iterate over them I guess I could start at the last one but if I had child I could iterate forward through them so now you caught me but I'm going to keep going with the way that I'm thinking about it and let's see if I have some time at the end I'll refactor it I wonder if I should refactor now time out thinking about this um you guys I that's why sometimes it's great for me to look at the chat and sometimes it's kind of problematic I'm trying to think of changing it to child is better I like the idea of being able to pass in the one that it's being made from though I think I'm going to keep it for now because the next thing that I want to do one thing I'm wondering about is why is this second one oh it's spinning oh it's uh yeah it's actually okay okay you know what I created something accidentally that's working okay I'm coming back in okay I'm actually going to keep the parent thing but I I think this idea of having child references versus parent references is something that is worthwhile considering here's the thing though I just realized this is kind of working in a way that it's supposed to by accident and so one thing I want to do is I'm going to I want to segment out this idea of it Ro of the angle changing from it updating based on its parent so I'm going to just do um I'm going to write another function I'm going to call it like wiggle or something or I don't know like yeah let's just call it wiggle because eventually I'm going to have the arms wiggling maybe and so that's that's where the angle changes and then I want I'm going to call update separately so because I want to show you what's really going on here because what happens if I only wiggle segment one and it's not wiggling it's turning you can see that it's actually that segment is always keeping it it's not it's not it's not moving along with it realistically it's always keeping its original angle pointing to the right so one of the things when you up update in forward kinematics as I'm moving forward from arm to AR from segment to segment to segment I always need to bring the parents angle along with me or pass the angle from the parent to the child so that happened accidentally because I was rotating both of them equally but once they're rotating in different ways that won't work anymore so what I want to do here in addition to a up update just pulling in the parents location I also want to take my angle and offset it by the parents um the parents angle is that enough is that all I want to do let's take a look at that no oh that's kind of interesting though um hold on I have to think about this what did I do wrong I don't want to I don't want to oh I just need to start it at that angle or by that should work right wait wait what wait what did I do wrong it's angle what did I do wrong here it's kind of Interest I just want to oh because it's plus equal equal to the parent angle no plus its own angle equal to its parent angle plus itself which is this problem I cannot keep summing yeah I have to start over each time oh I have to keep track of them separately right yeah yeah I like how people sorry I shouldn't look at the chat people are very unhappy with the fact that I don't know what I'm doing which is the point you know yeah is kind of a it is something that happens here in my life okay a lot okay I cannot keep summing so hold on so let me go back to what I had there plus equal parent. angle so this is this is way off as you can see because I'm accumulating all the time I want to pass off the parents angle but just as an offset to whatever its own angle is actually doing so in a way I kind of need two variables here which is um I need it to do its own thing and then always just add so I need to calculate its own angle based on some something that it's doing which ironically I think if I um and then add so if I just said angle equal if I just start with angle equals zero and then add the parents angle oh I think the I think the issue is actually that um I I do need two you the issue is actually that I'm going this rotating the arm thing is sort of not that necessary because I'm going to calculate things in a different way but I do need two variables self angle and parent angle yeah so what I need is uh yeah yeah yeah yeah yeah yeah okay okay okay okay I need its actual angle and then I think what I'm going to do is I'm going to say a self angle I'm going to create a variable called self angle that's a good suggestion self angle and I'm going to and I'm sure there's an easier there's a there's probably a condensed way of writing it but just the way that I've created this example I'm going to have self angle start at that same angle and then angle is always uh self angle is the thing that I might have some algorithm to change it and the angle itself is always um um so uh what I'm going to do is angle equals self angle right everything that's updating takes its own current angle as itself and then adds on there we go adds on the parents angle I think this is going to work there we go so now uh and so let me see what do I have here what are the oh because the the angle is zero so the angle is zero and this is exactly what I want it's zero relative to whatever its parent is and now if I actually gave it instead of you know also 45 degrees we can see now it's moving this way there we go this is what I want so this this angle turns what the the the parent angle turns and the other angle updates whatever its own angle is relative to the parent so they can each have independ independent calculations for calcul their own angle so now what can I can start to do some interesting stuff here so for example I can say SE 2. wiggle and that one is going to rotate itself along so it's rotating relative to the other one now I don't really necessarily have something that interesting here they're both just rotating and this is weirdly very similar to my solar system example where one thing's rotating around one thing and another thing's rotating on another thing but I think we're going to get something much more interesting if if we use a sine wave to rotate them or pear in noise let's try using pear in noise so I'm going to add uh I'm going to add a a variable called X offset which is just going to be some random value and I encourage you to go back and look at some of my pear and noise tutorials um if pearly noise is a smooth Randomness and then in wiggle I'm going to say self angle equals the noise function I'm going to map noise of x offset which has a range between 0 and 1 to like between 1 and 1 and those are some arbitrary angles in radians and then I'm going to increase X offset over time so now O Okay so that's too fast but we can see here now I have this kind of arbitrary moving almost like wiggling tentacle like thing so is the stream out did it freeze everyone's saying it's frozen but I see it's still working hold on I'm pausing I was offline for 30 seconds I can't explain why well you know what I want to double check something I'm on the NYU WiFi h i I have this plugged into the let me make sure it's plugged into the ethernet Network it is I want to turn WiFi off um but I'm afraid that's going to break something I'm going to turn WiFi off I have a feeling that sometimes causes a problem that it might break it again let's see I think I'm still here hopefully I'm still here people tell me if I'm still here uh okay let me press these buttons it's very disconcerting um stream is better now yeah you know what I forgot to turn the WiFi off and because the whole point of this is I have a really good fast hard Network here and um I think when it's connected to both it probably also uses the WiFi um okay so I'm back with this wiggling tentacle thing which I'm going to improve on in a second um okay okay here we go let's keep moving on here okay so now I have this wiggling tentacle and I'm kind of mostly done with this idea of forward kinematics but I want to improve on this a little bit so at very least this is not a great this is not a very sustainable uh path so what I want to do is either create an array or some other mechanism um and actually I think I'm going to try doing this without an array so I'm going to and I'm going to use kind of a concept called a linked list where every object is just linked to another object and I can can iterate through them that way so I'm going to create uh something called a tentacle I'm going to make my variable called tentacle and tentacle is a new segment um uh tentacle is a new segment that's that starts at 300 200 with a length of 100 and radians of 45 so now what I'm going to do is I'm going to say 4 in I equal 0 I is less than two I'm just going to add two segments to it um segment next okay so hold on what I want I want uh I want to say something like oops say oops hold on I want to say something like segment current equals tentacle okay then segment next equals a new segment whose parent is the current one and then the same thing length 100 let's just do angle zero and we're going to start this with an angle of zero too there's no reason to um to have that anymore okay so and um so the next segment is a new segment attached to the current segment current being the tentacle which is kind of like the root and I could call this root if we were thinking about of a tree and then I can say current equals next so what this will do is say I have a segment attach the new one to that then make that the current segment so the new one attaches to that so I think this algorithm should work and I should be able to just say now I could just say tentacle wiggle tentacle update tentacle show what this should do is if I run this it's working but I'm only seeing that root one the root segment I don't see the one that's attached to it so what I can do now is I can say segment current I can use the same thing equals I'm just call it next actually because I just for this loop I can say segment next equals tentacle while next is not equal to null then I can wiggle update and show it and then I can say um I can wiggle update and show it and then I can say next equals next dot oh wait I have to go backwards ah this is why people were telling me to use parent child so how can I um so let's add child I'm going to have both let's add and you probably don't need both but I'm going to add a child reference as well so this is like a is that called double link list where they're linked forward and backwards so um what I'm going to do here is when I'm creating them next is the new segment and then current. child equals next so I'm also going to link it that way um and that way now as I iterate through them I could say next equals next. child so I did this in a little bit awkward way maybe um so in other words okay uh this is hard to keep in your head but let me try to say it again I'm starting with and and actually it might make sense if I diagram this but I'm starting with the the root not the root segment the first one I make a new one that's attached to it and its parent gets that current one and the current one's child is the next one so they're both linked to each other and then current becomes this so that when I link the new one I link them with the same parent child relationship so that I think should work and now I can iterate them I start with the root and I wiggle and update and wiggle and update going from um iterating through and eventually one of them will not have a child right because it um next next will be null so I should I should say just here by default it's null because at some point we'll get to the end at some point in this Loop will get to the end and then it won't come back in so the last one won't have that child so as long as as long as it's null okay so this should work yeah there's all three of them okay all three of them wiggling with their weird pearing noise thing so let's make this a little bit more interesting um let me think about let me I kind of want it to feel more like a tentacle from the bottom so I'm going to give its initial location uh width divided by two and the height so at least it's kind of starting from the bottom there but now I need to think about how that range of angle so the range of angle should actually be between um around around 90° right because that's pointing up so I want to offset that so the the what I'm mapping to is like whoops uh the max angle is something like piun / 2 plus you know 1 and the Min angle is Pi / 2 minus one so I want to map the noise to Max angle Min angle I have a feeling like a sine wave might actually work better than this um and now we can see okay we can see what it's doing now it it's got a pretty broad set of possibilities in terms of its angle so let's make this uh let's make this like quite a bit smaller oh wait why does it what did I do wrong here oh because they're picking up from wait a sec oh I don't want them ah I only want the first one pointing up the rest are all relative to the ones below aha I don't know why I decided I had to do this like kinematics thing so let's actually leave it at 0.1 negative point1 and I'm just going to do something kind of like hacky which is to say um if it doesn't have a parent uh if it if it doesn't have a parent I just want it to point up because I want the whole thing to point up I'm going to say angle uh plus equal / 2 all right um so that should yeah so that has that just has the first one pointing up but the rest pointing to the left and the right okay so that was a quick little fix and now I can make this um much much bigger of a range and the other thing that I really wanted to do here is I can make a lot more of these so let's make 20 of them and let's just make the segments like 10 pixels long and so now we have this wiggling tentacle like thing with pearing noise I don't know what it's going to do I kind of want the range to be bigger uh you know this is the kind of thing that it can play with forever so let's make the range uh bigger and let's maybe have the offset oh you know what would be interesting to do here I have a weird idea which is to um have the offset move a little faster yeah so we can see this now I don't know what this is this crazy creepy AR why is the first one did I make the first one is still has still have um 100 ah so let's make this one 10 right so we can see here's my crazy creepy tentacle arm thing that I don't know what's trying to do but there you go that's forward kinematics let's change it to a sine wave just to see what we get so instead of using uh pearlin noise I'm going to map a sign between Max angle and Min angle let's try that whoa okay and that's like way too much so let's give that much smaller angle so we can see now now oh and they're all starting so actually what I Want U this is I'm getting ridiculous here but let's all start them with this yeah so this actually if I give them a perfect sine wave it's just going to curl onto itself but if those sine waves are slightly offset from each other I'm kind of I'm off the rails here the train is derailed for sure but let's let's let's make this a little bit more interesting what I really want to do is add this as a parameter to the segments so I don't want to just have them all be zero or all be random let me show you what I mean I want that X offset which I'm using essentially um I think in the coding math YouTube channel I know that he used used a variable called phase which is kind of what I don't know if that's right though but it's like it's the thing that you're passing into s or cosine I often think of it as time so let me use let me use a t for time and I'm going to add another argument here and I'm going to set T I'm going to do this T equals T and I could I could really improve the way that these Constructors are uh are I could combine the constructors in a in a probably in a in a better way but so let me just let me just add the last argument here we now each of these each of the the segment always gets its time the the the thing that you're passing into sign or noise or whatever to set the angle and um what I'm going to do is I um just pass in zero here let's pass in zero for all of them and we should have the same exact thing uh and oh except for I want to call this T now and T moves up by a certain amount okay so now you can see this is what happens when I have the sine wave there we go people in the chat are asking what's his goal I have no idea this is by the way a way to think about creative coding this is this is stream of Consciousness improvisational I don't know where I'm going I'm just playing around and I I really should stop soon though so okay cuz I'm I'm kind of off in the weeds here but I I I think there's an interesting aspect here that I could do so now everything starts at zero but what if the phase we can use the word phase here maybe or or I can just say t actually T equals zero T goes here and then in this loop I say t plus equals 0 uh 1 so what if they're all just slightly off phase from each other now you can see I'm getting a sort of more uh a a a bit of a different kind of quality to this now it's very much of an exact repeating pattern so I think if I also changed you know not only the period of these oscillations but the um um not sorry not only offset the uh where they are in terms of their oscillation but change their period um which is or frequency so that's that's this variable here okay I got to stop now and I'm I'm going to let uh I'm going to let you guys play with these ideas but I would I have a suspicion that if you mess around oh you know what look what I did sign has a range I was using the range of output from the noise function which is absolutely not correct the sign function has a range between negative one and one so that's why by the way it was going um so oh I think I'm getting close to this swimming fish kind of quality too as well so um I kind of want to put the plin noise back in also now that I have this idea of them being slightly offset from each other so let's put noise and we can see we can see I kind of got this uh also this wiggling quality to them to it and I I kind of want to make the range a bit wider uh to see what the sort of possibilities are so you can see I think that you will probably come up with a more creative way to make use of this forward kinematics idea um and you know it' be really interesting to now put an array of all of these across the bottom or you know map them to the O this would be great make you could make a creature like a circular creature that has all these tentacles uh uh attached to the edges of it and it kind of Wiggles along like a centipede um try to make uh Nuno in the chat is saying try to make the segments go shorter as they reach the tip and that's certainly an interesting idea let's try adding that really quickly so right now the segments are all so I could do something like float length equals 50 and start uh with that here and then I could also shrink the length so I could say like length equals itself times 0.9 so they're like 10% shorter each time okay let's make them half as long each time so you can let's make them 75% as long each time so um you know I'm not making it obvious to see how that is because I'm not drawing I could make them different colors but you can see there's a lot of variables you could play with here so I hope that you enjoyed this forward kinematics coding Challenge and in the next video what I'm going to do is do the reverse of this where I actually am starting where I want the end to be and and how does the rest of it behave okay um thanks for watching and see you in a future video okay uh if you ever Implement your overthe camera monitor maybe also look into adding some kind of green red LED stream status light I don't understand what that means um zeit in the chat um so those of you who are worried about um that that a a part of this might have gotten lost I am recording everything I'm doing to disk so when I make an edited version of this ch challenge or when Mata who does the editing makes an edited version of this challenge anything that might have gotten lost over the airwaves will get um picked up um all right so um I'm trying to stay hydrated uh okay you can't see so some people in the chat are saying I can't see the whole code I can't follow this is going to get published on my GitHub repository uh as I release the edited versions of these videos also make sure to upload the code and in addition even though this is in processing I usually try to uh make a JavaScript version so I have a Java version which is in processing and a JavaScript version as well okay Max angle and Min angle are reversed in map let me check about that oh yeah they are I don't know why I did that I mean it doesn't really matter because the map function will work anyway so it just goes the opposite direction uh what if I I just want to say s t plus noise of T and the range of that would be like negative 1.5 to 1.5 so here we've got like sign with some noise and I'm just like messing around with this while I uh and then uh yeah so anyway you guys will be more creative with what you do with this let me put it back rainbow tentacles okay so that's forward kinematics oh negative 1 to two oh you're right negative 1 to two no wonder that didn't work thank you okay um all right so do I have time it is 1220 I would like to do the inverse kinematics um Doan in the chat asks can you teach us how to upload code to GitHub and generally how to use it to organize our code well uh I um I will let you know that I have a whole playlist of git and GitHub tutorial videos so I would encourage you to check those out first and I'm sure I didn't finish that playlist I'm sure there are missing pieces so I need to return to that and update some stuff okay do can I manage the energy to do inverse kinematics and I'm going to build it again from scratch because it kind of works pretty I feel like it's going to be easier to do that than adjust this so inverse kinematics also you don't necessar have to watch both videos so actually why am I doing this so let me make a new sketch save as inverse kinematics and what I want to do let me just go back to this one and um me just save another version of it real quick that has just some simpler stuff and the length being much longer uh so let's see and uh what I want is for them to be uh let me do this also I just want to I'm just going back back to a simpler time just to have a visual demonstration I want to make these much more extreme okay oh boy and I want to make this go much slower uh and even slower probably and let's make this even more extreme okay um all right so I'm going to um I'm going to use this as a visual reference in my next video let me press some buttons here so I think this is the last thing that I'm going to do this morning and then I'm going to um figure out a whole new way of doing sound in this room I have a kind of an idea for that actually um and come back okay uh all right let's see here um add colors or I'm leaving really that's all it takes for you to leave if I don't add the colors uh so adding the colors is actually kind of an easy thing to I always say that color uh C and let's make um uh C equals a new color based on um let's just make it random that's the worst thing to do you know what I should do ah see you got me no I can't add that you know what I should really do is change the stroke weight so uh one thing that would actually be a more useful thing to do is just pass in I now you guys have caught me I'm off doing things that aren't in my video tutorial there is no I this gets zero pass in I and then if they get um I really don't like how I have this organized they get kind of their own index value into the array so what I can do is I can do things like stroke weight uh you know 10 I * 2 or something oh there um so so uh if I have like a stroke weight equals one and then I say something like the stroke weight equals 10 I * 2 index what is it index and do the same oh I hate this duplicate code g to make an improved version of this and you just do videos just about refactoring and then I can say stroke weight stroke weight and now what you'll see is there you go oh that's really kind of nice actually I should put that in my video I'll do it in the next one um don't add colors or I'm leaving but this was worth adding how about make it 3D really quickly that I'm not going to do right now uh okay um okay this is a little bonus all right actually you know what I'm going to do this on the at the yeah never mind I'll just mention it in the top of my next video okay um okay so am I ready for this need a new sketch I'm going to call this one inverse kinematics oh do I already have one did I do that already I'll replace it anyway let's replace place it craziness oh no no I'm in the wrong place desktop where am I oh that's weird oh there's like an example in the what's in that oh I I did make one already I'm so confused I'm putting these in hold on file open recent inverse kinematics okay that's the that's what I'm looking for blank one okay put this over here sketch uh take this out watch's this reach okay here we go uh forward KX okay all right here we are I need some more water maybe I could take a break and fill this up with some water we all know what what what what uh what could happen if I try doing that um let me do that because I I do feel like I need some water and I will play you guys kitten song it's All glitching I'm mu actually you know what I'm muting my microphone kittens kittens Kitt that was a failure by the way because both the the uh they're both locked I don't know where it place to get um I got to find where there's like a water cooler on this uh floor oh my God it's 77° in here why doesn't the it's snowing outside by the way in New York am I you can hear me again right Rel today is not broken it has noten this is this is a wonderful thing yeah I okay we're going to do it I'm really I'm going to need to deal with the the uh yeah oh so here's the thing is it too quiet what else I'm dance with my tent that was invalid I forgot there was one other that I think is important that I will use continuously over and over again all sorts of text generation analysis things that I will use continuously over and over again first thing I need to do is kittens kittens kittens okay we're going to do itys and kittens and kittens and kittens kittens and kittens and kittens and kittens and kittens and kittens and kittens kittens and kittens and kittens and kittens kittens and kittens and kittens and kittens kittens and kittens and kittens and kittens kittens and kittens and kittens and okay that aside you really could do something would make this music responsive so if you did beat detection or just had the angles change according to the volume I think there's some interesting possibilities there I'm exhausted I really need to get some water um so but it's okay I think I'm close to let's see hold on we have some of this there's a little bit of this tea left I look forward to the weird gifts or whatever of that I I I look yeah okay so let's give me another let's let's do a oh no soundboard died let me plug this in charge it where can I plug it in where's a plug I need an extra plug no there's no extra plugs okay I'm G have to deal with this later if I unplug that oh you know what I can unplug is this right now sorry everybody riveting live stream listening to me narrate how I'm unplugging and plugging things back in um okay I am uh okay I am I'm really gonna get to this I'm really gonna get to this next step here but um but before I do that I'm going to there was was a request for the this dot song uh by the way I have a new coding Train theme song that's coming I heard a first version of it I'm very excited about that this dot this dot um uh SoundCloud I'm going to make another attempt to get some water uh as always I always it's probably very quiet can you guys hear that okay I'm going to attempt to get some water again enjoy the dancing tentacle I will be back I will be back I'm gonna do dot do do this Dot Song never forget dot somebody composed that song for me for I went onto some other music okay um that was another failed Mission I'm going to have to do an exploration of this the floor of this building to find where there's water uh okay the other thing I'm noticing is my microphone is doing something weird here so let me see if I can fix that like maybe it's uh doesn't have enough slack when it was kind of pulling the shirt in a weird way okay is there a different way cuz it's I'm worried it's brushing up pointed down let's just try doing this this is probably worse let me go back I am okay sorry I'm looking let's hello you're over there okay we're going to do inverse kinematics that's fine it's going to be fine okay all right tentacle I got to slow you down tentacle uh slow you down even more tentacle all right yeah I want to put up a picture of the snow let me see if it's still snowing I'm looking to see if it's still snowing oh it's definitely still snowing I really want to just like open the window and get all the cold air in here too but this room has no windows all right let's do you guys ready let's do inverse kinematics and then everybody can go to sleep or have lunch or whatever it is they're doing with the rest of their day I go get some water stay hydrated I pass out you'll know why uh I should just bring a water bottle is what I just do I could fill up up okay hello welcome to another coding Challenge and in this coding challenge I'm going to do something called inverse kinematics so over here this is what I did in a previous coding challenge which is called forward kinematics and what's the difference between the two in a weird sort of way the fact that this arm is just doing kind of random weird stuff sometimes talking and recording in a room by yourself is a very strange thing to do and your mind wanders off and you don't know where you are why you're here what's going on in the world anymore and you just want to go and take a nap that happened to be just this moment I am going to um G to start that over okay here we go hello how are you I'm doing okay a little bit thirsty no no that's the wrong thing to say try this again hello how are you doing welcome to a coding challenge where I'm going to make something called inverse kinematics and you might say hey look at that did you do it already and I'll say no I have not this is actually from the previous video where I did a simulation called forward kinematics and so one of the main things I need to do before I get started coding is talk about well what's the difference between forward and inverse and why might you use one over the other one thing I will mention if you watch the previous videos I did change one slight thing about the code which you might be interested in I added something to make the segments have a Different Stroke weight based on where they are the a higher stroke weight towards the bottom and a smaller stroke weight towards the top so that's kind of an interesting little variation that you could look at okay now let's talk about let me come over here and um let me see let me erase some of this I'm going to leave this up here okay so this was a diagram I had based on forward kinematics here over here where the idea is I have a bunch of segments they're all connected to each other maybe these are segments of a kind of alien tentacle or there a leg that's walking or whatever they might be robot arm we're getting to that the idea with forward kinematics is if I turn this one then all of these should rotate with it so the angle that changes here gets passed along to all of the segments that are connected did so this one turns and they all and then if this one turns it doesn't get P to the one behind it it gets passed to these and so in that example of the tentacle they're all kind of moving a little bit randomly with some pear and noise or I I also used like a sine wave or whatever whatever algorithm you're using to move them the point is as you move one it affects the other ones inverse kinematics does well as the name is stated the inverse in other words what if you imagine this arm this I'm calling it an arm for reason I guess but this connected set of segments needed to reach and grab something and this is a problem that happens in robotics you create a robot arm that's a bunch of things connected to each other with some kind of like hydraulic rotational mechanism thing that I know nothing about and you need to figure out I want the arm to pick up this thing so if my hand my hand is the robot arm to get that I know my hand needs to be there what should the rest of me do how do I if I know that this needs to go here how do I figure out how all of these should be oriented in order for it to do that and you could we we might plainly see that this is you know the best orientation for reaching something far away in that direction but what if suddenly it needs to grab something here well we can plainly see maybe a good way for it to do that would be this but how do we calculate that if we know the end point how do we pass the angles back inversely through the segments inversely is that even a word that's what I'm going to do I hope I built this before I think but it's been years I think I have no idea okay so coming back over here um I am now looking at my forward kinematics example and I'm not going to I'm going to start the code over from scratch and I'm going to say setup I'm using uh processing which is a development environment and uh a Java Library uh for doing uh creative coding graphics and animation more more yada yada yada uh okay so what I want to do and I'm going to say side size 600 400 and uh there we go we've got the window and I'm going to say uh background 51 so I want the same sort of idea that I had in the previous example where I have this idea of a segment object so let's take let's let's make this uh object called segment uh and I want to make a new uh I want to make a new segment uh and I'm going to give it a location again the segment class doesn't exist so I'm doing this reverse I'm sort of thinking like okay I want to give it an XY and a length and maybe an angle so this is similarly to what I did before we're going to have to deal with some kind of like parent child stuff but let's just start there now I'm going to say I'm going to make a new tab called segment to create a segment class and I'm also going to want my segment class to have what do I think I wanted to have a and b so let let's let me describe what I'm doing here so if this is one segment I want to have a meaning the point over here B meaning the point at the end length being how long that segment is and angle being what's its angle of rotation relative to the xaxis so those are the properties of this object uh a I'm going to say um what am I doing here I'm I had an idea of what I was doing uh angle and length and I'm going to create a Constructor function which gets an X and A Y and weirdly I well let's keep it way and uh an initial angle which ultimately is something an initial um an initial angle and an initial length now you'll notice length just got highlighted as like light blue because length is a key word it's a property the length of an array so I'm going change this to Len for length because I don't want to it would be fine but it's a little I don't want to make it unnecessarily confusing so I'm going to say a is a new P Vector it's at X comma y its angle is that angle and uh it's uh length is that length that I specify so now is that what I said so now if I run this I got no errors but nothing's happening the next thing I want to do is I want to say segment. show and I this is just about exactly what I did before and I'm just doing it again to kind of get started I'm going to write a function called show and I'm going to make a line between a.x and a.y and b.x and b.y and I'm say stroke 255 stroke weight 4 and now if I run this I'm going to get the same issue I got before where I haven't done I haven't figured out where B is so I need a function called calcul guess a lot of this really is the same calculate B and this is I'm going to use my polar to cartisian coordinate transformation again I have a feeling though I'm going to have I'm going to start needing to calculate a based on B because I'm going to move the arm to the point that it's trying to grab so anyway but we'll see we'll see I'm going to what am I doing here I'm going to calculate B which is saying uh the X offset from a is equal to the length time cosine of the angle and the Y offset is equal to the length Time s of the angle and then B is a new P Vector at X Plus DX y + Dy one thing I'll mention here is um uh oh sorry a.x and a.y one thing I'll mention here that I don't love is that every time I calculate B I make a new P Vector object and in Java on my desktop computer which you know gigs of RAM this is never going to be a problem is a little bit of issue it might make more of a more sense and maybe I'll just do it right now for the sake of argument for me to make a an empty P vector and then what I would do is I would say b. set so that would be I'm not making a new object but I'm just setting its values to these two values and I think this will work exactly the same way it's a bit more memory efficient so to speak and doesn't really matter okay so now what I want to do is I'm on an update function where all I'm going to do is just calculate B which is quite redundant right now but uh it's fine calculate not calculate um and then uh seg min. update so okay uh this doesn't look right what did I miss H uh length oh I put these in the wrong order so this is length this is angle so this is length and this is angle I have the the length at zero and maybe I'll just for consistency change the order there and there we go so now I really haven't gotten very far but I've built my segment now here's the thing that's different though what I'm going to do now this is why I I was I didn't want to this is why this is quite different now what I'm going to do is let me let me zoom in on this segment here the first thing that I'm going to do is I just want this segment to follow the mouse so wherever I move the mouse I want it to turn to move towards the mouse so actually what I want to do is I want it to uh I want it to be to point at the mouse so I wanted to grab the mouse this is what I'm going to do so I wanted to grab the mouse I wanted to point at the mouse so um how do I do that so this is yet another example of needing this polar to cartisian trigonometry stuff so uh because I'll have it move according to the mouse I think this is a good way to start um so if I have this segment and then the mouse is down over here what I need to do what I want to do is turn it so that it points points this way and then move it all the way so that it's here so uh so that's so that'll give the sort of motion that we're expecting I think um so I want it to point at and then you know there going to be different one thing it could be fixed and it always just points in the sort of tentacle case but I want it to turn and so what I need to do is figure out this angle oh my goodness guess what we've now got to do the no wonder this is inverse kinematics we also have to do the inverse we're not converting from Polar to cartisian we now have to convert from cartisian to Polar because what I need is I need this angle based on knowing the and I think I want to use this end point so actually I think the angle I want is this right or is it from a I don't know what the somebody somebody in the chat will tell me because I could calculate an angle of it pointing from b or from a I think I want it from a I think I want it to turn and go there so I want to sorry so what I want to do is calculate this angle and what is that angle it's this Dy and this DX so it's Mouse x minus this object's a.x and mouse y so that's those but if I have those how do I get the angle now here's the thing I should do another video about this because I can use something called arc tangent or inverse tangent it's a trigonometry function to get the angle from an X and Y value and there's even a special way to do that with uh code functions there something called a tan 2 somebody remind me do a separate video about that but I'm going to do this just with vectors because the p v the P Vector object does this behind the scenes if I can create a vector that points from here to here then I can call a function in the P processing Vector object called heading and that heading function gives me this angle it's if you we look at the source code it's got a tan 2 in it so it's doing this but I might as well have a function that does this math for me already let's just use that okay so now I come back over here hello hello inverse kinematic thing and um now what I'm going to do is I'm going to write a function that calls segment. follow uh Mouse X Mouse y okay so I want this segment to follow the mouse so I'm going to go here into segment and say void follow and I get a Target X and let me just call that TX and Ty for like Target X Target y probably should use the full word Target I'm trying to keep my code within the space that you can see and so now what I need is I need a vector the direction which points from um so here's the thing I could do this a number of different ways I'm going to say a Target equals a new P vector that's at that TX and Ty and then I'm going to say p vector. subtract the target minus a so this is what I want I want a vector that points from a to the Target that's the direction that I want it to point and then now what do I do I say angle equals Dr do dading so that's all there is to it so now if I uh if I run this we can see it's always pointing towards the mouse so that's just making a vector getting the angle and using that angle as it's but here's the thing what happens now though if not only do I point towards the mouse but I actually move B to the mouse location so now what I'm going to do is I'm going to say b equals target. copy now this is going to do something weird okay first of all U so actually I don't want to C calate B here's the thing maybe this is a little bit weird what I'm doing here but I have a function that calculates B based on a so actually what I want to do oh this is actually easier than I thought what I want to do is right what I did is I rotated it to here I want now this Vector to have the magnitude of length and then I just want a to be positioned where uh it's distance from the Target is that length does that make sense I think I need to draw this again so this is the this is the segment this is the target so the segment goes here and I have this as a vector and now I need to figure out where is a so that if I lined it up with here uh B would end up right there right so a should be um yeah so so a should be the that that Ang that that Vector position go back to where I I lost my I I got my I got my words mixed up trying to what's the it's kind of like I want to move B there and then just move back by the angle but if uh if this is the angle I think what I want to do I'm trying to think what's the what's the most succinct way of doing this which is just to shift the that Vector to where the distance the magnitude oh oh oh oh I know what to do here we go I got it not until you'll edit this somehow so all I need to do is take this vector and put it right here right put it right here then multiply it by 1 and then I have a vector right like that goes this this way and then a goes right here so now I want that arm to be positioned at this angle but where a is there and there's probably some redundancies in the way that I'm thinking about calculating this as there always are but let's just do this so forget about moving B what I want to do now is say Direction set magnitude to length right then I want to say Direction multiply by ne1 so I want it to be as long as the segment and I want it to move in the other direction because now all I need to do is say a equals P Vector add Target plus direction right so I want a to be positioned I'm going to change the angle and then position a that distance away from the Target and now we should see there we go so now as I move this you can see this particular segment is following the mouse in a somewhat lifelike way now here's the thing this is going to get much more exciting right this is inverse kinematics and that I'm starting stting with the thing at the end but there's nothing connected to it so now what I need to do is now that I figured this out oh this is exciting ah this is going to be beautiful you you guys are going to make all sorts of wonderful cute and squiggly little snake like colorful creatures a little antenna I can't wait to see all of them um right if I have this now here and let's just say for example it started like this so this got moved to here what I need to do is point this now this one does exactly the same thing that this one did aha this is what inverse kinematics is this one does exactly the same thing that this one did but it's Target as this point so it points towards it and then it shifts there so we're actually done we've done all of this already we just need to add a segment that's connected that does the same exact algorithm but not with the first Target but with what it's attached to let's go add that so now here what if I add what if I do the same thing I did before where I make this segment one and eventually we need to make this an array or a linked list whatever we do and I need and make this segment two oops segment two okay segment two I can do this segment two equals a new segment and guess what it's parent I'm thinking of it in the inverse way it's parent is a thing at the end is segment one and it has a length of 100 I don't know if it really needs an initial angle the way this stuff is going to get calculated but let's leave that in there this might be completely unnecessary in this scenario so now I need to write another Constructor function just like this one I need to give them all a parent and I'm instead of getting an X and A Y it's going to get a parent and then then uh so here parent is always null if it's the first one I'm going to have the same issue I'm going to need the child thing to go but maybe I can go forward this time anyway we'll figure it out um then what I'm going to do is say oh I I'm almost there uh parent is that parent and then a is oh wait a sec we don't actually it doesn't really matter where a is because what I need to do now is just follow the parent so I want to follow um I want to follow parents a and this should a uh right I want to just do that algorithm and uh I better set my length and angle before I do that right so the first thing I do is just attach myself to it wherever it is and then then um here yeah so this should be good I I could see that this is really going to need to be refactored but I'm going to just keep it right now so now what I want to do this is this is kind of terrible what I'm doing but I'm going to say segment one update okay hold on let's let's just make sure they're both there segment two update and show okay what did I get here uh Target parent a.x oh oh oh no hold on I got a no pointer exception what's wrong here um new segment segment one follow okay hold on let's that I should definitely get why am I getting a no pointer in follow is it when I it's up here oh because does does uh uh hold on time out for a second and where's my debugging music uh if the child follows the mouse the parent follows the child yeah no the child follows the parent uh where's my let me where's my no point your exception uh this right here right so that's let's hold on let's not do any of this okay this is what it was before now uh let's put this back null pointer is it Target or is it a oh a doesn't have have a of course of course of course okay I this will get edited back let me just no point your exception no point your exception could it be Target or could it be a it's definitely a right because I'm forgetting that it doesn't have an A so even though its parent is parent it's a should at least start um somewhere and uh I guess I'm just going to give it um I'm going to give it uh just a vector at 0 0 I got to think about this this is not right but let's just do this for a second so yeah hold on let me think about this here uh I lost I I lost it I had it and I lost it uh maybe this isn't the right idea oh it's not following a yeah oh hold on let's think about this I should still I know what the issue is I I let me come back to this I know what the problem is I've got it let me go back to that null pointer exception uh oh why did I change that when did I lose that by accident okay okay so here we go okay I've got a null pointer exception with targeted a so a which Target is not null because I can see that I made it right here a is null and why is a null because I'm doing something wrong and and you know I'm setting the parent because I know it needs to be attached but even though I'm doing inverse kinematics I don't want I I'm I'm thinking about this incorrectly what I want to do is this is still the root the first segment it's going to be a lot easier if I then attach the next segment here attach the next segment here I am going to do the math backwards by starting with the last one but they need to have some initial configuration that makes sense so when I make the next one it its parent is actually the thing behind it still so that's what that's what I'm doing wrong here so let me come back and I it's just about the way that I'm building it so this is actually not in front of it this is not behind it it's actually in front of it so let's let's do that and segment two is actually the thing that's going to follow the mouse if you if you catch my drift so hold on a second so what I'm going to do when I make that thing from the parent a is still uh located it's at the end segment two is at the end of segment one so segment 2's a location gets the B location from segment one so that's fine and forget about this follow thing that's not happening here so what I'm going to do now is let's just make sure that these both show themselves in the right location get rid of this follow okay so those okay well it looks like there's a segment up here why is that because uh 300 200 segment um so let's see oh so let's see here what went wrong there uh ah so the first segment didn't get its B calculated in setup in its Constructor so so that messed up the second one and in that sense I should probably calculate its B here so whoops so there so now they're connected and we can just we know that this is correct even though I think the initial angle isn't really going to matter here here um if I were to give it you know an angle of same like 45° radians and just so we can see you know negative uh 10 degrees so we can see this is now these segments are connected 45 degrees and then 10 degrees okay because here's the thing it's segment two the whole point of this is that I want the end to follow the mouse by the way the parent thing is going to work so much better here I start at the end and I just go back through the parents I don't actually need the child like I needed in the forward one okay so now we can see segment two is following the mouse but segment one is not coming along with it so what do I need to do I could just say segment one follow segments 2's a.x segment 2 a.y and now we're going to see this there we go we can see now I have this inverse kinematics where it's all about the other figuring out where the end is and the the angles get calculated kind of Rippling back the first one follows the mouse the second one follows the end of one and you can see now this this is it this is kind of feels somewhat like a realistic skeleton arm like thing and of course there's scale and what you're using this for but we've got the basic idea oh good so now what I want to do is I want to add I want to make this uh um I I don't want to just have two separate variables so once again I'm going to call this tentacle or snake or whatever I'm going to call it tentacle and tentacle is a new first segment then I'm going to say I'm just going to make just for Simplicity I'm just going to have three I'm going to add three and the same kind of thing I did before where what I want to do is I need the current segment is starts with tentacle the next segment is attached to that tentacle and let's just give them all an initial angle of zero again that makes just things a lot simpler and then next current is next so once again I'm making a linked list where I'm saying the first object is connected to the next object which is connected to the next object so I to iterate them I could just go through them and but yeah so but I'm actually connecting them backwards which is perfect this is perfect yay okay uh so make the next one based on that and then current becomes next and this should not say tentacle here that's a mistake this should say current right because current is changing next is based on current then next becomes current so now I should be able to do the thing that I was hoping for where I say um four no no no I I make a I say just say current or next I don't know next equals tentacle while next is not equal to null next let's not do the follow for a second next. update next. show and then one day and then um next equals tentacle dop parent oh I see what the problem is oops and that's not a function so this is a problem why is this a problem this won't work oh I was I thought it was going to work out so beautifully I need the last one I need to start from the last one I I don't know why I'm spending all this effort avoiding putting them into an array because if I just put them into an array I have the end I have the beginning but since I'm spending all this effort avoiding and putting them into an array I'm I'm going to say I'm actually going to say um I'm going to do this this is crazy current is just this first one right I don't need to keep track of anything the tentacle is actually whenever this finishes it's whatever was current tentacle right so I don't actually want to save the first one in my variable I want to save the last one because I want to start at the end and go backwards okay so now I can say next is that tentacle and then get the parent so I'm going backwards so this should show all of them didn't uh Why didn't it uh uh uh let's see uh let's see Why didn't it what's wrong next is tentacle cool well next is not equal to null I should at least see the last one right um so hold on let's take out this so just to see one why don't I see the last one let me make them a little shorter just to be sure it's not going off the screen ah the last one is there okay so I had this right the last one is there but if I put this in this doesn't work while next is not equal to null well next is not equal to null update oh maybe the update is messing things up let's do this o what's going what's what's happening do I have an infinite Loop I'm like looking to the chat someone's going to have the answer for me uh yeah you know there's a question in the chat why do developers always call very variables weird obstated names and I really try not to do that and I'm doing a kind of a terrible job of right now so that's a really good comment and maybe when I go and rewrite this code to post it I can fix up the names next equals current next oh this is totally wrong next equals next. parents of course so this is what's wrong this the whole point of this idea of a linked list kind of system is that let me run this again there we go I was saying next equals tentacle got there so I was always saying next is the first one so I was stuck in a kind of infinite Loop there so I want to show it and then get its parent then show it and get its parent and now if I call update that will shouldn't do anything because update is just calculating the end and now what happens if I have the this one uh follow Mouse X Mouse y so you can see that one's working that last one but I need now I need to do some kind of following here so I'm going to say next . follow and it should follow the it has to follow the If the previous one so what I can do is oh this is why having an array would be nice or having the child all I need is the child relationship because it's got to follow its child so let's put that back in let's so maybe I do like this double length list thing I I'm really over in this I think uh but I'm going to give them give it a child uh and then so I have that reference so what what do I do here when I make them the next one is based on the previous one and then uh um oh just give me a second here I have to take a break for a second do I I am my fighting against putting an array in this is just sort of like a lost point pointless cause um it's time for lunch can you tell it it's time for lunch I've got no water got no caffeine no food sugar I need something to like go into my brain to like to rechar I need Electric electrical outlets clicked in here but what I want to do is I think I'll if I put the the end things parent is the pre is end things is the parent so that's why I'm iterating through but the parent has to follow its own child and the last one follows the mouse so this sets current as the parent of next uh right next next parent is current next oh no no no because I'm going I see I inverse thing is really confusing next parent is current and current child is next yeah okay mat this will be like a little edit Point here what I need to do right right now I have the relationship that every segment knows its parent but in this inverse kinematic it's got to follow the one that's in front of it which is actually its child so right now the way that I'm creating them is that the the um the next object's parent is current but the current object's child is next so I also need to say current. child equals next and then here I can say follow right so the first one just follows it's its Mouse follows the mouse and then um and then what I might do actually is say next equals next. parent just to go to the next one and then at the beginning here I should call next. follow so if I give it follow with a particular Target it'll follow that but I need another follow function I can overload functions right I want the same oh but I don't want to redo this math all I need to do is say um void if I just call follow then what I need is taret taret X is child do it follows the a child. a.x right it's got to follow it's uh and Target Y is child. a.y and then follow Target X Target y so this is an a Target X Target y so this is kind of an interesting technique that I'm doing which is I have that follow algorithm where this segment can follow any arbitrary point and then what I realized is oh what I want it to do is follow its child's point a so rather than write a whole other function that does this in a different way I could just write another function that calls this one with the child that that particular child's X and Y so this is the two functions both named follow if I just say follow without any arguments it follows its child if I say follow with arguments it'll follow that so now if I go back to here I should be the first one is following the mouse and actually this is silly what I'm doing I should just say uh this will be tentacle tentacle follow the mouse right we know the end the tentacle object is the end of this whole tentacle thing then next is going backwards whatever the tentacle parent is and then and so this is a segment and now I have my Loop as long as there is something there follow its child update and show and now we should have well hold on hold on ah whoops I forgot to say then next equals next. parent so I've got to keep going right I've got to go onto the next one otherwise I got an infinite Loop stuck there again so now we can see it's doing that right we can see that it's this whole thing is following the mouse oh you know what it's a little bit off am I not draw oh I'm not drawing the tentacle because the everything is in that loop I also have to I'm kind of I have to show the T that front element whoa what did I do here uh uh uh uh uh that's crazy what's the bug what's this bug I've got a weird mistake that's really weird okay hold on hold on hold on get rid of this for a second let's just get rid of this entirely okay hold on let me delete all this down here what is this bug let's get rid of this entirely okay whoa something is weird is happening with this tentacle because I forgot to call update that's what it is okay okay so this is the again refactoring is a wonderful thing but I can see this Loop the idea of this Loop is to do all the three steps follow update show and I did follow and show but I forgot to update it what happens in update it's kind of important it recalculates the end point which is also silly now by the way that I have an update function that that's all it does I thought it might need to do some other stuff so but I guess it's good in there in case it needs to do some other stuff so I need to say tentacle do update ah there we go and now there we go so now I have this thing that follows the mouse in kind of like a real slightly realistic skeletal like way and what I can do now is I could say hey guess what I want to have 10 of these connected um I want to uh have the first one uh and I want them to all and again these should all be variables I should uh I want them to be separated by only 10 pixels and have 20 of them connected and you can see what do I have now you know I have something that looks like this and you can see this is different by the way than a particle that keeps track of its own path right there is an aspect of It kind of keeping track of its own path but it's actually you know in a way more like a rigid body of connected uh joints so um so there's a lot of possible ways you can vary this and just thinking about this is why I think we could maybe get a nice fish simulation especially if there was some added wiggle to it there's a sort of almost like the muscles where all those joints are and that they that they trigger and maybe there's some sine wave oscillation also as it's moving so this is what I want to maybe try to do in next sort second part or I don't know if I'm going to edit this into many parts what part I'm on but um but that's something to think about now I think I think it would be worth just out of curiosity let's try adding that um thick thickness stroke weight thing to it so it could be useful for every segment and I don't need the angle so I'm going to reuse the Ang I'm instead of having the angle the angle could just default to zero because it's just being calculated um so I'm going to have all of them have a default angle of zero and I'm going to make this last thing uh pass its index into the array because what I can do with that number I have each segment whether it's 0 1 2 3 4 whatever it is in the total number of segments and so what I can do is for example if I wanted to have stroke weight as a variable and whenever I draw it that's it's drawn with a variable stroke weight you know if I were to just say right now and I hate that I have to do this in two places so this is something I really need to refactor um stroke weight equals like a random number between 1 and 10 and I'm doing this in two places which is terrible and I don't need angle anymore you can see they all have like a random stroke weight but what if I want to say um an uh I want to map the index which goes from zero to the total number of segments which in this case is 20 uh 0 to 20 uh and I want the stroke weight to go between one and 10 so I know this is terrible I'm just going to put these in both places now we can see it's thicker at the end uh uh closer to the mouth and thinner thinner thinner uh as it gets further to the back so you can see that's a nice little variation I could I could also alter its color based on the same exact um algorithm we've got this kind of eel like thing that we could start to work with in our sketch now something I thought about here something came into my head ah yes here's an exercise for you really to me this looks like one thing now but really what it is is a collection of segments objects but really what I would like to do what I would want to do is make you know I call it like snake for example I would make a class called snake right that has all of that code for one of them and then I could have a bunch of them so that that would be a good part two or three or four or whatever this in addition to trying to get it so maybe we'll do that maybe what I'll do eventually is make the uh make put that into an object so I can have more than one and then also put those into a system where they interact with each other in some way so anyway anyway uh thanks for watching this inverse kinematics I hope you got something from it and that you'll look at the code and make some variations make pretty sparkly rainbow antennae cute uh snake tentacle creatures um thanks for watching uh okay it's 120 I'm definitely finished for this morning session which was now been 2 hours and 4 minutes I need some water there's a mirage over there um actually you know what I didn't do here's the thing I'm gonna hold on what's be the best way to do this uh great so alar writes be great to see one end of the entire connected tentacle locked and the other's location set by Mouse click and then gravity pull the end then you have string yes you know what I thought I'm gonna when I come back and do some more of this uh later um I'm going to I'll the first thing I'm going to do is actually move it not according to the mouse I don't know why I forgot to show that I let me maybe I'm gonna I'm G to Mata let's see if we can redo the ending to that video um and uh you can use this or not use this but I'll mention it I I don't know if this can get edited in or not but so when I look at this snake like thing oh wait hold on I already did this here no no don't delete this sketch just this tab when I look at this snake like thing I see uh one object and in a way I kind of have that because I just have this one variable called tentacle which in a way because it's a link list refers to everything but I really could organize the code in such a way that if I made another class called snake or creature or something and I could take everything that's basically in setup and draw and put it into that other class this would allow me to more easily duplicate many of these on the screen and that's something that I'll uh I'd like to do in in a maybe the next video so I will do another one where I have more than one of these and maybe they move in some way because what if instead of following the M Mouse they follow a bouncing ball or if you look at any of my just take the flocking example for example what if instead of having a triangle moving through that flocking example you have this uh snake like Wiggly creature thing uh moving through so that's so the there's there's a couple things I think you could think about doing as an exercise if after watching this number one refactor the code to having the two Constructors there's some efficiency there putting everything that has to do with this one creature into a class so that you can have more than one of those on the screen and then thinking about those things not following the mouse so what if those things move independently through some other particular kind of logic so I hope you will do that I hope you will make cute and cuddly and rainbow colorful antenna e creatures and share those with me in the comments shiftman on Twitter uh by submitting it to the GitHub repository and all that sort of stuff that people people often do when they're watching these videos thanks and I'll see you soon okay um there we go so I think I did a a successfully this morning covered forward and inverse kinematics without honestly kind of knowing that much about them pulling from memory and probably like whenever I watched uh coding the coding math videos about it it just sort of seeped into my brain um when did those come out um so now what I would like to do uh join restrictions oh okay let me not do that right now because I have to go I don't have my music stuff or what I'm so um but what I'm going to do is I will do uh maybe five minutes of pulling some uh questions from the chat uh you know YouTube has this like Super Chat thing I'm curious what but now I'm going to be way off topic everyone's going to write about it but I'm curious if people like or are kind of offended by or don't like fend is the wrong word like people's opinions about the Super Chat I have a different way of kind of organizing a smaller Community which is having a patreon which has a separate slack chat which is in many ways like the Super Chat the monthly subscription type thing but anyway sorry I got off topic um weak example of inverse kinematics Lo lock the Endo yes well I absolutely should do that but does that really make it weak I feel like it's a nice example of inverse kinematics it just doesn't have that feature yet I I could do that I'll do that next um yeah I could do that as a third part of the video um have you ever used eclipse for Java what do you think about it uh can we get coding train tshirts online yes uh coding train. storenvy.com I just mentioned that at the earlier earlier in the uh I'll show that again before I leave have you ever used eclipse for Java and what do you think about it yes I love eclipse for Java because that's how kind of like one of the first things I I don't I don't know that you should but I'm I do a lot of my job development in eclipse and in particular anything that I'm doing for as a processing library or checking a bug in processing and that's really on my list to get to especially I want to talk about Google summer of code I want to do some videos about how to work with processing Eclipse which is maybe a skill that would be helpful in working on Google summer of code projects for processing do you have dreams of what you could do with code or ideas of how programming could change the world to the better um are you a professor at NYU let me try those I and there's an Android question I don't know anything about Android um so do I have dream you know I guess my point of view on this is to do this Channel and try to show people a side of creativity and fun through code which I think is a side that exists in other places too I don't have you know I don't have ownership over that idea by any mean by any but anywhere close to any stress of the imagination but uh and to put the question out there uh through my tutorials of how can we do things with code that make the world a better place um and so I guess my way of doing that is to make code more accessible uh and thinking about code and learning code more accessible to a broader audience now whether YouTube with ads and a patreon is the best way of doing that is an open question for me this is an exper I'm really enjoying this experiment uh it is a really exciting to see the audience grow and the community grow so that has definitely been something that I feel excited and happy about but it's still I still wonder am I doing a good thing through this but by putting this knowledge out there and and asking people to contribute and and make stuff with it and hopefully make the world a better place that's what I'm that's kind of my point of view there was a question about the shirts and I forgot there's another question oh am I a professor NYU yes I guess um no I do teach fulltime at NYU a program called ITP it. nyu.edu it's a wonderful place I love everybody that I work with the students are terrific and I um I do these videos for my classes and then also put them on YouTube uh um do I want to fly into space uh thank you people are giving me nice oh wait okay there's a question in the slack Channel now how would a force like wind affect a jointed object like you just built since you would need to affect all the segments somehow rather than just the end this is such a good question boy that would make a great coding challenge so number one is I think that this you know I'm always all walking this line of should I use a physics engineer or should I just implement the math in my code and what I did right now was I didn't use a physics engine at all but I could potentially use something like box 2D and just make bodies that are connected through revolute joints which is essentially going to have the exact behavior of this um inverse kinematics and then what I could do is apply forces and then the physics engine is going to work all this out but let's say I wanted to do this myself uh I guess I would probably use the same iterative approach so the end point would be moved and the others would follow it and those would be It's Tricky so I have to understand I have to decide do you know how the forces interact with each other but um I really would still build on that Rippling effect so if the uh and this I think how we could maybe also if you think about muscles this is what I want to explore like how does a fish Propel itself it's not just because its head is moving and suddenly that causes its skeleton to do that wiggling thing so I think what I would need to do is apply the force and then recalculate then apply the force to the next segment and recalculate apply the force to the next segment something like that somebody in the chat I'm sure will have a better idea um oh that's wonderful somebody said they showed their 13yearold uh brother some of the videos and now they're coding is coding train work or a hobby maybe both I consider what I'm doing with this in a number of different ways uh it was definitely both work I would say it's more work than a hobby I mean definitely started as as a hobby or I don't know if hobby is the right word as an experiment or something to do for fun now I feel a sort of obligation to it which is good and bad but I consider this my uh research a research component of my job um in experimental uses of Education I also consider it a side side project side business in a way uh I mean um so I would say it's a little bit of and also one of the things that I really do care about is the processing Foundation which is a nonforprofit organization dedicated to um um making code more accessible and inclusive through a lot of the tools we develop U and also thinking about art with code through processing a p5js and I view this CH Channel also as some evangelism for that project um to get more people involved and excited about it um for a fish the muscles would move first and as a result the whole body moves it's not like the head is moving and the body follows exactly that's a very good point there's some great fish simulation uh that actually do like fluid simulation stuff I don't think that's exactly what I I want to go down that road right now but fish simulation I saw when I googled this at some point O Roblox oh my god oh know I'm off topic I got to do some Roblox videos don't I um yes yes okay oh there's a Pixar in a Box video on conic cademy about the about like Finding Nemo and fish moving that would be great okay a one more question can you please tell how we can as a programmer can approach to a project on the solo basis also have you made mobile apps with processing those are two different questions I have not really done a lot of mobile apps with processing I have sort of taught and shown demos of processing with Android so you can use processing with Android and p5js is something you can do um with what was I gonna say uh oh P5 J because it's HTML CSS and JavaScript um you can just you can make a mobile app just through web Technologies and and you can just open it in the browser on a mobile device or you can use something called Cordova to actually turn it into an app um approaches to a simple raycaster videos with a Clips these are all great ideas um approaches to projects as a solo programmer I would say hey first of all why be a solo programmer find a community I mean I know this is not easy and and hard for people depending on their circumstances but the extent that you can find an online community a Meetup uh uh class you can take a collaborators I think that's always an exciting and great way to work it's it's hard to program as a solo program but I would say one of the things that I find really helpful and actually doing this channel forces me to do it albeit often in a incredibly embarrassing in fashion is when you have to talk through something that you're making it slows you down to the point that often bugs and problems that you couldn't solve you're able to solve so I get this all the time where a student couldn't figure something out and just through asking the question like they write an EMA email with the question and 5 minutes later I get an email oh never mind I figured it out or you know talking it through in in an office hours kind of appointment so one thing I would say if you're solo find a friend or somebody a family member um to try to explain what you're doing even in a higher level conceptual way and that can be um good um okay so since some people had asked um if you're interested I in some of the coding train merchandise uh I have coding. storenvy.com um this is a really a work in progress try to add more stuff as people requested here um that type of thing uh and then the other thing I'll mention is where was that um what was that YouTube video I showed fish swimming Windows desktop or something YouTube uh YouTube I Googled it and found it uh this is it so if anybody I know I'm not I haven't posted my code I can try to like just dump it and drop Doc and so tweet at me or I'll post it in slack Channel but um I would love can what I've built so far lead to something like this so how would we make something like this because I would love to combine this with like my flocking and steering Behavior stuff so oh rubber duck debugging yes so that's the rubber duck concept I need a rubber ducky I have so by the way I have a I have a bin full of rubber duckies at home and unless you think that's weird first of all I think it's okay anybody can have a bin of rubber duckies at home and it's not weird we should have coding train rubber duckies that is a great idea um right um rubber duck debugging is like a nice and friendly open kind of concept right so there's nothing like meanspirited about it so that's why rubber d I think of it as you if you had to explain it to the rubber duck then suddenly you're going to understand it yourself so I guess you could just get a rubber duck it's nicer if it's a human being as nice as rubber duckies are anyway um and and so that was one thing so that's what I would love I would like to come back today it's going to be it's already 130 4 5 6 o' for like another hour I really want to do that waving flag thing as I have a good I'm G I'm going to present to you something that that is now known forever as the uni Kitty just think think about that what could a uni Kitty be that's very exciting that's what's going to be on this evening um and oh gerage is asking what I programmed today let's just quickly I programmed a bunch of things things and uh I also should add the thing where the end point is fixed so we were making some inverse kinematic tentacle stuff um so I want to do I want to maybe fix the endpoint make a swimming fish and a waving flag uni Kitty and show pressing Eclipse that's never going to happen today so I want to see if I can do some of those things later today so I would like from you the community I think the only thing that I need is well if um is anybody to see if you can make something like that fish thing and give me some tips on it may maybe don't give me the answer some tips and ideas you can give me the answer if you want I'll just I'll give you credit obviously but um I want to try to make that when I come back okay I got to go uh thank you all for watching I've got no music I've got nothing I'm all uh I don't I do have a train whistle and a bell and a couple different mugs got some Tshirts oh random numbers I've got to go thank you all for watching it's this has been three hours the camera just went off um so I'll see you all later today I'm doing now for some reason every Friday I'm doing this twice I don't know how that happened okay uh I'm sorry that the time is not good for every I got I I don't know what to do about that I wish there was a way to just make a time for these live streams that works for everybody across the world uh okay hey I'm going to stop recording and I'm gonna