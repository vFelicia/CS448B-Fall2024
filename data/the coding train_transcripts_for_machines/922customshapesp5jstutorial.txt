hello this is a video tutorial about custom shapes and I am showing you on this webpage a much better explanation of how custom shapes that I will give you this is actually rune Matson's online book called programming design systems I think I might have referenced this before it's got an excellent chapter on color at rune mats and on twitter rune is amazing there's lots of really interesting stuff with graphic design and code for graphic design and so this this web page really will walk you through the this idea of how you can think about a shape as having different vertices again this is not my work this is room Madison's work but this is what I want to cover what does this kind of code mean and even better like what are some things you can do with that so I will let you I'm gonna link to this page you can just stop watching this video and click on it and read it but if you want to keep watching I'm gonna kind of give you my own take on this sort of stuff what I'm talking about is custom shapes so what do I mean by custom shapes so you might be familiar with a rectangle looks like this or perhaps a circle also known as an ellipse which looks like this there is a line which looks like this and a point which looks like this and a triangle which looks like this and I think this might be everything so there are a list of defined primitive shapes primitive geometry set kinds of polygons set kinds of shapes that you could call with a function and draw on p5 okay let's start with something simpler what if I wanted to do this shape so this shape is we can think of it as a polygon a shape with many sides and a polygon can be defined by its vertices the vertices being each of these points that connects the sides and this is actually one two three four five so actually if you have a polygon with four arbitrary signs like this you can actually do this with the quad function the quad function 2p5 are processing both of all this codes for processing or p5 allows you to specify four points but what I want to do is make a custom shape so the only way for me to do this that I know of at least is to use a function called begin shape and use a function called n shape so if I use these functions begin shape and n shape what I can do is to in between begin and end i can set any number of arbitrary vertices so I can say vertex vertex over and over again now I could do this if fur and processing this will actually also work in 3d and there's a piece shape object and all sorts of fancy stuff you could do but I just want to look at it from the simple 2d lens that we're doing in p5 and so so this is the basic idea begin shape and this indentation is unnecessary I'm putting it there just sort of for visual effect but this is the idea now so let's take a look at that and make sure it works so I'm gonna come over here and whoops sorry everybody that's the wrong window I'm gonna say begin shape and I'm gonna say vertex I'm just gonna make up some points 150 vertex 220 vertex 200 100 uh vertex 50 I'm not very good at picking numbers I need my random number book vertex 25 50 I have no idea what I've just done let's say n shape and now I'm gonna hit refresh and look there it is so in theory that's my shape and I wasn't very thoughtful about the vertices and the order the order does really matter and we can see if I did something weird with the order cuz this shape can be filled or stroked in the same way that by that I mean setting the outline color or the fill color so I could say stroke 255 and Phil no Phil just to sort of see no Phil Phil no Phil no Phil no Phil for you we can see I am so that's it so look at that so I maybe I didn't do anything too crazy those are all the points notice how you could with no fill you can actually think of this as a path so it could be a shape that's filled and enclosed or it could be a path and incidentally it if I wanted to close it right I could say oh let me put the first point again now it's closed but that's kind of silly right but actually I can do is just right the argument closed in here and now you can see it closed it automatically I'm gonna take that out now one thing I should mention is there actually is other stuff that can go in here maybe I need to come back in a whole separate video to go through all those possibilities but I can specify the kind of shape like if I there's something called a triangle strip which likes if I give it a whole bunch of points it'll put a whole bunch of triangles in between all those things and I have a feeling that if I go to I'm gonna go to the processing documentation because I know that'll come up begin shaped processing we could see a lot of those possibilities here right lines triangles like now if I use those points it's not one shape but it's through every three vertices we'll make a separate triangle triangle strip we'll connect it with a bunch of triangles triangle fan you could use quads you can use and I think I use this in like the Perlin noise terrain challenge and a bunch of my different coding challenges but I'm gonna be in this video I just want to keep things simple and I just want to use vertex so there we go so that's the idea now there's two things that I want to mention here number one is what would be interesting for me to do is come up with an algorithm that sets all these vertices you know what's the point really of me manually setting these vertices more likely I might want to do something like I'm gonna do this really quickly like what if I were to say for let a equal zero and okay so incidentally I'm using the for loop so for some reason to watch this video before I used for loop you have to go back and watch the Lucas video I should probably just stop saying that I'm gonna say a is less than 360 a plus equals ten and then what I'm going to do and this is I'm going to use something called polar to Cartesian coordinate transformation this is a little bit of an aside but this is worth it I don't know if this is worth doing I'm gonna say let X equal just to demonstrate the idea 100 times sine of a let y equals 100 times cosine of a plus 200 plus 200 and then I'm gonna say vertex I have a reason why I'm doing this actually I'm gonna say vertex XY let's just see what happens yeah I got something crazy well I said all these vertices all over the place so what I'm actually doing is something called polar to Cartesian coordinates for information I'll link to a video that goes over in more detail but basically if I have this angle a what I want is to just keep changing that angle a to set a whole bunch of vertices around the circle and I can use cosine and sine trigonometry math to get all those points and I'll link to a video that goes through that in more detail but one of the reasons why this worked really weirdly is I didn't set the angle mode to degrees because I'm thinking about the full way around the circle is 360 degrees and it's using a radians which is a different by default different form of measurement so now we can see there it is and I want to say close so now I want it let me actually say let spacing equal 50 I'm gonna have this be spacing and we can see that's what I get now then what's interesting about this is I'm now gonna put this in to draw and I can have spacing be variable so I'm going to say spacing equals and I just did that's how I did this far Matic motion challenge that was a disaster I could have that value oscillate oh let's do this I'm off the beaten path this is really just a tutorial about custom shapes but I'm gonna use a sine wave in it which might be a bad idea but I'm just gonna do it anyway so I'm gonna say I'm gonna I'm gonna have a variable called T and was set equal to zero Len Len Len Len let me be more simple about this okay let's spacing equal map Mouse X which goes between 0 and width 2 between what I want the spacing view for like at 5 degrees and 100 degrees so let's at least see this work whoa oh I forgot to draw the background in here so let me put the background in draw so you can see right I'm getting I'm changing that angle so I'm slowly increasing the resolution and the sir so the point that I wanted to show this to you is not because this is some beautiful pattern that you should use but the reason why you might use custom shapes and said vertices is actually gonna have an algorithm to find those vertices so what if you wanted to make a bubble a cloud so I actually have a coding trained community project about making a cloud which I'll also link to in here which this could form the basis I think I've done stuff with a curling noise blob coding challenge at one point that this also relates to so there's a lot of possibilities here what I was gonna do was use a sine wave to have this feel like it's breathing SPAC and forth back and forth so that's maybe at something that you should try as an exercise after this video so what I want to do I'm going to leave this here but I'm gonna comment this out again and I want to just talk about one other thing so here we go remember this weird shape that I created this shape is a polygon that has a set of vertices but in addition to vertex there's actually something called curve vertex that I can call now there's also something called bezzie a vertex and bezzie a vertex is a kind of curve vertex for a special kind of curve called a Bezier curve and actually the patrons custom shape page goes through that in detail I'm gonna say Bezier curves for like another video because I don't know if I understand that at this moment so I have to go read runes excellent description and then come back to it but curve vertex what curve vertex does is it says having like a hard edge here let's try to curve around that edge but here's the thing I should probably make this a separate video but I'm in this video so you have to be watching all the way at the end of this video here's the thing that's tricky and I'm gonna there's gonna be some magic erasing in a second that's gonna happen here so one of the trickiest things about working with curves is that you're gonna suddenly discover when you use curve vertex points just disappear why let's say I have these three points now we could look at this and we could say to ourselves like I kind of know what I meant I want to draw this curve but if you think about it more there's actually no way for the computer to know how to draw this curve without more information cuz why couldn't it be like this or something that's that's a little bit weird we try it again why couldn't it be like this this would be a valid curve and the difference is how do I enter the curve I've kind of done a poor job of drawing this but I think the next thing I'm going to do is and make it more clear what if there was like a secret point right over here that said how to enter this curve or the secret point was over here that said how to enter the curve and up here it would be over here right this is gonna look different if there's so curves require additional points that control the entry and exit of the curve Dwight right should identity to curb and like come down here do we need to curve and like end up over here and so it can be really confusing and but you have to be aware of this so let's actually go and look at the code and see if we can make this work and let me simplify things actually let me actually make up some specific vertices so I'm gonna say vertex what what's the size of the window it's 200 200 so I'm going to say vertex 10 200 150 and then and next actually make this 100 200 and then 300 200 oh and I don't know what I'm doing I'm putting it all in one line vertex I don't can you see this bottom down here I want three vertices okay and now let's take a look at this oh do I have clothes I want to take out clothes and I messed up the middle one I want this to be at 200 so this is those are my three vertices so I want to make this a curve so a couple things one is let me just draw these points so we can see them separately also 300 200 I mean this is very redundant what I'm doing strokeweight for and then stroke whoops then let's do stroke wait one okay so I can see points there so I'm gonna change this the curve vertex and you're gonna see what I need curve vertex and I don't see anything anymore now I should have done this with more than I should do this with four points so let's make this one fifty 50 and 250 like 60 or something so you're gonna see oh boy let's and that's also my apologies let's also put these as the actual points were drawing and where where does this go whoops what would I say 150 I'm one fifty fifty and two fifty sixty so you can see these points are actually controlling how this curve looks and there could be many more points it's just controlling the entry of the curve so like what if I made this point Mouse X Mouse Y this is what I'm trying to demonstrate Mouse X took me a while to get to this but Mouse X Mouse Y and now I'm gonna make that first point Mouse X Mouse Y so you can see as I move this around it changes of zoom in a little bit more it changes the entry to the curve and actually this is an interesting way to make something interactive like imagine of this oscillated up and down it's almost like this wiggling string or something so again as you're building these custom shapes this shape now is only those two points right if I were to say close you know oh interestingly enough it's like I look it actually connected it all the way around to the first point so the first point is controlling wow this is kind of crazy this is kind of a nice so you can imagine creating some interesting animation by just wow clothes really made the interesting if you do this whole problem kind of goes away I don't the problem but it doesn't enter it comes around to the end so that's kind of interesting I just discovered that now so you can see the difference if I use clothes because it adds the point the another thing that you can do often which is sort of the same thing is I could duplicate the last point twice so that's sort of like I that last point is also the control point for yourself so you can see it's not changing but I am including the first point twice so I could do that also like it could include the first point twice instead of Mouse X Mouse Y and now I kind of have whoops whoops I that's not the first point I could sorry if there was a different first point which was originally one hundred two hundred right so if I'd have that twice and get rid of mouse X mouse Y this can also be a strategy so it's kind of like just duplicate the first point and duplicate the last point but you don't have as much control I would need yet another point right like this point the mouse to control that so you can see now I could control this with the mouse so there's so many possibilities I'm sorry that I kind of went off the deep end then with like messing around with this but the point is and also incidentally I can mix curve vertex and vertex now let's see if we can make this more obvious well maybe that doesn't work so I'm pretty sure you can do that in processing I'm going to investigate if that works in p5 or not but the idea being that I can mix summer curbs summer jagged so to recap custom shapes are shapes that you just are polygons or paths that you define by a set of vertices you can make you can you can have them be tiled by certain kinds of quad strips or triangle strips or that kind of thing you can have curved vertices or regular vertices curved if you have curved you need to have control points for the curve and the reason for doing that is quite possibly more likely because you want to have something more dynamic oh and look I connected the in this weird crazy way so here's the like ending Frankenstein thing of this like weird hardcode tip and circle something wanted mention actually before I wrap up with the computer is that you might be asking yourself like well what's the math that calculates this curve well there are different kinds of mathematical functions to figure out how a curve goes between two different points I mentioned a Bezier curve there's a specific kind of bezzie a function and it works pretty differently than this but it it is something you could look at but this is actually known as a Catmull this this is using p5 and use the Catmull wrong spline spline being kind of another word for curve and these are people's names who came up with this algorithm so I'll try to include a link to the historical information about the Catmull rom spline and I apologize if I spell that or said that wrong so I hope you make what if you're if you don't know what to make from this take a look at the link to the cloud community cloud repository I mean you might be watching this a year in the future hopefully it'll still be there but this is a project that's happening in 2017 for processing day which is October 21st 2017 for the name tags and processing day so if you're interested in consuming to that and I hope you enjoyed this tutorial thanks for watching