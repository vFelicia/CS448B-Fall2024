hello everybody um this is pong and I just finished a coding challenge where I programmed exactly this and this is working pong with very very very very few bugs it probably has some bugs I haven't noticed yet however I had a lot of problems making this video I was so excited like here it is again I'm going to have the greatest video ever on the Internet it's going to be 10 minutes of making pong and everyone will just be able to watch it in 10 minutes and make their own versions of pong to creative Delight of children everywhere but I I failed first of all the video is at least an hour long it's going to be longer now that I'm with this rambling introduction I had a lot of problems and things I couldn't figure out and I want to say that there was a a a major issue at a certain point later in the video I use this function to kind of look at how I can map an angle to a direction because based on where the paddle where the puck hits the paddle it should move in a certain direction and I forgot a couple things I didn't actually convert to radians when I was doing that test and the range that I used uh actually went in the wrong direction so uh those things will be wrong in the video the code however that you see Linked In This description has the corrected version and is what you see right here um there's some sound let me turn that off and I can move I'm going to play this a little bit more right now my left paddle is doing much better than my right paddle but I made it I made pong I hope you will do creative versions of it and I'll see you in another video sometime enjoy this coding challenge hello welcome to a coding challenge I am super excited for this one it's been a while people have asked me to do more coding challenges with a timer or simple games and I going to program in this coding challenge pong in 2 minutes and 30 seconds no definitely not it's probably going to be like three hours but you'll see how long this video is and then you'll know about how long it takes I am not stopping in the middle of this it doesn't matter what bugs or things I can't figure out I am going on but I'm not starting my timer just yet what I'm going to do before I start a timer is let's at least together you and me map out the pieces of PM figure out what features we're going to implement so if I have a computer Graphics window a canvas in a browser or some other kind of Graphics window um what I need to have are two paddles I need a left paddle and a right paddle and then I also need to have a puck the paddles move up or down based on keyboard input so maybe like we'll do I'm look over at a keyboard like you know A and Z and K and M or something uh you know whatever so it could be played on One keyboard I mean obviously one of the reasons I'm doing this is later I might make a video to look at some different um artificial intelligence algorithms that might allow us to like see if we can have the computer play one of the padds but that that's it's an aide um so I need the puck and the the puck needs to have an X and A Y and it also needs uh an X I'll call it X speed and a yp speed because it needs to figure out which way it's going I need to have some type of collision detection between the paddle and the puck and then I also need to figure out if the puck goes past either side there's a score so this this player gets you know plus one score if the puck goes past the opposite side it's like air hockey it's pwn okay are we ready to do this now here's the thing have you ever programmed before if not you might have a little trouble following this video but I'm going to try to keep this fairly beginner friendly I'm going to use a programming environment called processing you can learn more about processing in this video's description um and I'm going to use a concept called objectoriented programming meaning I'm going to think of the puck as an object and each paddle as an object and the puck is going to have data associated with it like its location and its speed where it's moving and there's going to be functions like does the puck hit the paddle so those are the things I'm going to add to the program I will also make a JavaScript version that you can run in the browser so you can look in this video's description for that code as well I'm trying to say all the stuff out now because I know I have to get started in a second what else am I forgetting I think I can just get going now okay I'm gonna walk over here that's where my computer is all right now I have this timer going up there it says 14 minutes oops I'm in the wrong program here we go this is processing uh it's got a setup in a draw function I haven't started yet the time don't look at the timer yet I'm going hit refresh it'll go back to 20 minutes I'm really I'm I'm I'm procrastinating I'm going to do this how long is this it's already like five minutes long probably let's just get started okay ready here we go one two three okay pong um all right uh oh no I'm panicking okay first let me just add a background I'm G make a background that is black um the puck is go I want the puck to be I'm just going to make it a circle uh because that'll be easier to deal with so let's just get started oh and let me save this save pong uh I'm going to add another tab here in processing and I'm going to call that Puck and uh the way objectoriented programming works is I create something called a class and a class is a template for making things so this is the puck template I need to make an actual Puck so the template is going to have an X and it'll start in the uh middle of the window and the uh uh the template the puck is also going to have a y and it will CH also in the middle of the window and it's going to have a function I'm going to call it show and I'm going to in that function I'm going to say Phill 255 ellipse XY and I'm just going to give it some arbitrary size 24 uh 24 so the liip function draws a circle with and how's the the font size is the font size okay um can you see it uh okay so let's now go and run this oh well now let's make a puck so now I can say Puck puck Puck equals new Puck and puck. show is that the right thing is it called a puck I don't know what it's called Uh here we go Tada am I done yet no so now we need that thing to move so for it to move I'm G to give it um I'm gonna uh I I probably shouldn't no I'm gon to say xped equals I'm going to make this a random number so I can use the random function I'm say random3 3 there's a lot of things about this that I should um be using vectors for and yped is33 here's the problem I don't actually want to do this oh it's so sad but let's just leave it this way I I can improve this later I I don't like this because I could get a puck that's not moving at all um let's just give it a fixed let's just give it a fixed Speed 3 1 it's always going to move the same way I I'll fix that later void uh update I'll call this I'm gonna write a function called update and in update I say I say x equals X Plus X speed y = y + y speed okay so now uh if I run this it doesn't do anything but if I say puck. update now I'm calling that function draw by the way is a thing that happens over and over again update show update show background update show background update show background update show I should not be singing it takes up to inch time there we go there there we go so now oh we're going to need some paddles I I'm strangely want to do something that I wouldn't normally do but before I do the paddles let's Implement some other parts of the game so let's let's write a function that's called uh edges so really we have to worry what happens oh what happens if the puck hits the top or the bottom right so if Y is less than zero then I need to reverse the Y speed so YP * equals 1 and actually I'm going to do this if Y is less than zero and this by the way is a symbol in programming for or in Java programming or processing also JavaScript two of these pipe symbols or if it's less than zero meaning it's above the window or greater than height meaning it's below the window reverse the speed and let's be sure that this is doing that by uh kind of giving it a very kind of initial oops oops wrong thing wrong wrong wrong let's just test this by saying giving it a very slow X but a fast y that didn't work oh I have to call it so uh I have to say uh puck. edges so I can write a function that gives it some logic to follow but if I don't call the function it doesn't do anything so okay so that's working it's going to bounce off the top of the bottom it it does that in pong right I think it does okay great so now let's uh let me go back to something more reasonable so now I also want to check though if x ever gets past the window then what I want to do is I want to say I want to um I want to like reset the puck if x is greater than with or X is less than zero I want to reset the puck now here's the thing I need to track both of those separately because different players are going to win but let's so let's just make that two separate if statements for later but let's just call reset right now and reset so I'm reset is going to be a function that I'm putting inside this object and what does it do it sets the puck back to the center and you know what I'm going to do I'm not even going to change its ype or xpeed I'm just going to let it be the same which is pro I should probably so now we can see here's what it's doing if it gets past the right hand side okay so that's actually a problem because it's always going to go the same way but Okay so we've got the puck moving yeah I didn't uh some James in the chat writes it didn't take into account the ellipse size so it's going to clip on the edges but not a big deal this is a good point I don't know if I have time for these details but let me see if I can uh I'll add that in later perhaps or that's something that somebody watching could add okay we need some paddles so what I'm going to do now is I'm going to make an object called paddle and again I need a template for the paddle and the paddle is going to get it needs to have an X location and a y location and a let's think of a height he um and you know what let's use and a width this is a little tricky I kind of want the paddle to be maybe using the reference part well let let's just we're going to do what we're going to do okay X and Y why is my okay stop everything's buzzing okay I turn off notifications before you start these things okay um so uh the other thing I'm going to do is when I make the paddle I want to pass in a uh I'm going to call this like I'm going to say x underscore this is a little bit weird if you haven't done objectoriented programming with constr this is what's known as a Constructor function so why so first of all why is always going to be um oh yeah let's have okay so here's the thing I I need a minute can I take a minute there's no way to pause this timer but I don't get to pause there's lots of different ways you can think about a rectangle you can think about a rectang angle as from this point uh with a width and a height so this is the XY with a width and a height you can think about it from here with a width and a height you can even think about it based on just these two corners I think I want to think about the rectangle strangely enough I don't really love this because it causes some other problems but I think it's just going to be easier for me to think of the rectangle from the center point um so I'm going to do that so I'm back so uh Y is always going to be height divided two width of the paddle is going to be like 10 pixels and the Height's going to be 50 pixels I'll probably have to change those later so um and then I want a function called show and I need to say rect mode Center and I'm going to say fill 255 for this as well and I'm going to say rect X Y with height and it's okay now where its X is is kind of a tricky thing um and you know what I'm going to do um we're going to leave this we're there's there's a better way to do this but I'm not going to worry about it right now uh okay so um so let's now in here let's make paddle I'm going to call it left and paddle right so I want to be able to use that same template to make two objects oh the power of objectoriented programming uh so I'm going to say left equals new paddle at zero and this is going to be wrong and right equals new paddle at width and then I want to say left. show wr. show okay let's run this and see what I get ah well it's not so bad there are the paddles they're really small paddles so a couple things one is notice how because the center of the rectangle is right on zero actually half the rectangle is off the off the window which is fine but just for you know just to keep things I probably want to say it's actual location is X wherever it was given its initial plus plus its width divided by two or shoot or minus depending on whether it's the left or the right okay better idea we're going to use an argument here Boolean left so is it the left or the right paddle so I'm going to make one Puck true one paddle true one paddle false I'm sure everybody in the chat is thinking of a lot of things that I'm doing wrong I can't look at the chat the I don't know post a lot of if there's something really major I don't know I don't know how to get my attention um okay so what I'm going to do is I'm going to say if left x = w / 2 else x equals with minus W divided by two so I'm basically going to take a Boolean variable in because there's only two kinds of paddles uh and now if I run this there we go and I should make these paddles taller let's make them 100 pixels and there we go so now we've got we're pretty good we've got Pawn oh someone's saying there's usually a gap between the paddles and the edges okay let's add that plus uh float Gap oh that's going to make it so complicated that's fine though actually it won't really um x = w / 2 + 10 minus 10 let's just give it a little or actually why don't I just use the full width um and that'll the Gap is however wide the uh the P paddles are okay there we go P oh I got nine minutes left okay ah so here's the thing I need first of all I need to move the paddles oi oi oi oi attention shift Master me false alarm got it uh okay so um what I need to do is move the paddles let's write a function called move and it's going to move by some number of steps so I'm going to say y + equal that number of steps and then I'm also going to say y equals constrain so I don't want to let the user move the paddle above off the window constraint is a function that says take this value and constrain it between zero and height only I don't want to constrain it between zero and height I want to constrain it between because X can't actually go all the way up I want it to stop because sorry Y is the middle of the battle between constrain between uh I want to draw a diagram but I'm worried about the time I should never use these timer things uh height it's height divided by two and height minus H divided by two so this would now keep it I'm G to I'm going to draw a diagram forget the time right because if if this is The Edge right I this is the this is the Y where it can't go up any further and this amount is the the paddle height divided by two so that's sort of an important piece there um now I have some errors here oh I need a semi colon so now how do I move how do I move the paddle okay well in processing in addition to setup starting the program and draw running the program I can have a key pressed function and in the key pressed function I get an event every time a key is pressed this code is executed am I standing in front of it let's move this over um so what I want to do is I'm just going to say if key equals a I'm going to take the left paddle and what do I call it move uh negative one that's up else if key equals z Oh I realize I'm gonna have a problem here left move one I'm uh and now I'm going to do the same thing for uh I don't know J and M this terrible interaction ideas but let's and and this should be the right one so now let's run this oh look how it moves so let's change this let's have it move 10 steps every time I press and I should probably make that a variable now I can't hold it down oh I'm really gonna have to fix this boy that's gonna I'm GNA need more time I need more time I got to fix this now actually it's kind of unplayable the issue is I can't hold down the key so this is a problem what I actually need to do is whenever I press the key I need it to start moving and not stop moving until I release the key so uh so what I'm going to do this is a little tricky but I'm going to take key released in in key release basically I want to say left stop moving or actually I can do move zero because I have that function WR move zero and the difference is instead of uh actually in oh this actually won't be so hard so right what what this does right now in the move function if I go to the paddles move function uh it's actually moving it in the function but what I want to do is I want it to have a uh I'll just call it like a mo I don't know what to call this I shouldn't I don't have time to think about it it is I'll just call it uh uh y change y change which is zero and I'll also have an update function which does this so the update function always changes it by y change and the move function just sets y change to a certain value so in other words I'm going to always uh left. update right do saving the hardest part for last left. update right. update so it's always moving it's just often moving by zero it's always moving by zero unless I press a key it sets it to move by a certain amount and stops once I release the key and now I'm going to do this so now this is quite a bit more elegant to play with there's issues with I can't press more than one key at a time but uh those things can be ironed out later okay here we go now um did Pong I see a question did Pong repel in different angles depending on where it hit the paddle in the original o the paddle was broken up into eight slices that make the ball bounce at different angles depending on which segment the ball hits why why make this so hard this is definitely going to take longer than that amount of time but let's first at least get the let me first um let me make this thing move a little bit faster here uh okay so and I why is it so slow okay okay great so first thing that I want to do is I want to check to see if the puck hits the patter this we can do and because I'm using objectoriented programming I can just have a Little Dream fantasy state of how I might write this right if Puck hits left or if Puck hits right Puck reverse reverse so and actually what I want to do is this is kind of like the idea but you know what I'm going to do all this can happen just in the puck itself I can just say Puck check left oh check paddle left Puck check paddle right okay so this is what I want to do I want you can see here it's it's got this red line it has no idea what check paddle is but the idea is that I want to write a function called check paddle that's part of the puck object that receives a paddle and checks if it's hitting it and I have to do it a little do I have to do it differently with the left and the right kind of uh yeah I shouldn't use reverse because that's a reserved word okay um okay so let's go into the puck I should have thought this through in advance a void check paddle paddle P by the way you'll notice here I didn't write a Constructor function technically don't have to unless you're have some type of logic that you need to execute in the Constructor function all I had with these set variables so I don't need one although you know proper objectoriented programming would have me write just this blank function that would get called when I say new Puck okay check paddle check paddle check paddle okay let's just pretend all I'm thinking about is the right paddle uh if x is greater than paddle. x uh and Y is less than paddle doy plus paddle. oh boy I'm just going to do it paddle. y I don't love this paddle. y plus paddle oh paddle. y plus paddle. h divided two and Y is greater than paddle do uh uh y minus paddle. h/ two I hate this long awkward if statement there's so many ways I could probably make this nicer but this look at this look at this horrible bug but let's let's let's use the fact that there are there's one minute left to explain what I'm thinking about here it's you're going to hear a ding sound actually you won't if it goes off while I'm over at the Whiteboard so I have to um okay I'm GNA give myself some bonus minutes so in other words I want to know if the X has moved past paddles X but I want to know this is paddles y y if the Y is in between paddle y minus h / 2 and paddle y plus h / 2 um so that is that's that's the section that I want to look at I I kind of want to I want to refactor this so badly to make it nicer but this is kind of will work how am I on time oh a minute left still so if this is true I want the puck xeed to change by to multiply Itself by negative one is is this and this is going to work for the right paddle so let me just only right now check the right paddle let's just see oh quick move down oh no move down no hey there we go ah okay this this really looks so wrong right um right because you can see here ah I really first of all it goes It goes way past so I really have to um I really have to uh I really have to I'm sorry I'm Los I really have to deal with the fact that the the puck has a size I'm just looking at the time how much more time should I give myself how about 10 more minutes oh my God that was really loud uh let's give myself 10 more minutes by the way if you want to know how to program a timer in JavaScript I previously did a coding challenge where I made that exact timer okay 10 more minutes let's see if we can do that okay so we've really got to deal with the fact that the puck the puck needs an R so its size I like the size of it as reason why I was drawing it at 24 so the radius is actually 12 and you know what I kind of want I want the paddles to variables to be half height half width it's going to be much better that way um but we'll worry about that later R * 2 R * 2 so there's a couple things here one thing that I want is now in the paddle in the puck to check If X plus r right because if its right Edge is has is past the paddle X and not just past the paddle X but past the paddle left Edge which is minus paddle W divided divide by two oh my kingdom for some clean not so horrible long if statement but let's just look at this and see if this looks nicer um which key do I move it down there you go who did that that didn't look exactly right did it I can't tell it's moving so fast hold on oh that's perfect okay I saw that's perfect okay so that's great so that works for the right paddle here's the thing I think what I need to the problem is there's a little bit of an issue which is that I want to check if the x is greater than the X for this paddle but I want to check if it's less than for this paddle so I think what I need is to indicate because you know I could do some more sophisticated thing where it could bounce off either side but it doesn't do that in pong so I might want to pass that function maybe a plus one or a negative one depending on which side of the paddle I'm coming from I could also Al just write two different functions I don't know what's best but let's try my goofy way of giving this a number like Direction so this is like the direction it's coming from so in other words I'm going to check right it's coming in the positive direction I'm going to check paddle left it's coming in the negative Direction so in that case um uh let's look can I can I do something like this so I'm gonna I want to like format this in a way where I can kind of see it like these are the these are the things I'm checking if x + r is greater than so uh and this is well Direction it this is minus so I should really say Plus Direction times right because I want to check on this side the x minus but on the other side I want to check the X Plus so and I this needs to also be this needs to be plus Direction times R right because R is am I moving to the right of it or to the left whether it's going and then this has to become less than now can I how can I turn a less than to a greater than with oh I could just use the puck speed if it's going to the right or the left that's a good point um um how can I change this uh so here's the thing let's just do this ridiculous way if so first all right let's just let's break up this if statement I don't like what I'm doing here if let's just check these things first let's just check if the Y is in between so if the Y is in between which is just this if statement then we can move on if Direction equals ne1 then check uh the x value uh if it's less than and uh I can actually just do this um because I'm going to be lazy make right I can check this and I can put this as an and if direction is negative 1 and so I actually don't need this direction I don't need this uh Direction because I can use the X speeed okay I got it I got it I got it we're going to take this out and we're going to say if x speeed is greater than is less than zero that's the negative One Direction then I'm checking it against the right edge of that paddle and if that's the case xped * equals 1 else if uh if x speed is less than zero and and now I need to just do the opposite thing so if it's moving to the right actually by definition it's already is moving to the right else if oh camera went off time out this will get edited out actually you know it won't camera went off in because the timer still going um x + r is greater than p.x minus P.W / 2 then also and I'm sure I could join these with an or oh boy I made this so convoluted and complicated but now let's think about this this is very very hard to read this is not so friendly but this is what we're doing first I just want to know is the paddle y position between the top and the bottom then is it on the right side of the screen is it moving to the right or is it moving to the left it's moving the right check if it's gone past that paddle if it's moving to the left check if it's gone past that paddle let's see if this works uh oh and I don't need this direction thing anymore that was a digression that seemed interesting but unnecessary uh and now uh oh boy oh look at this crazy crazy Puck crazy pong whoa strange issues uh it's just a flag with negative 1 or plus one and multiply uh people are people that's probably a a very good idea but what did I do wrong if x speed is less than zero can I there should be like a pause here for debugging um okay let me think about this if x I need I need the problem is I need to sketch this out while I'm looking at the code um if so let's let's oh this camera went off too sorry everybody coding challenge disaster okay wait hold on okay um let me check this out right so X speed is positive the Puck's X should be greater than the paddle x minus oh the Puck's X plus r should be greater than the paddles X minus its width divided two right this are the points we want to check if it's greater plus X Puck x minus Puck width divided by two multiply by otherwise if x speed is less than zero that seems right um but really here's the thing why have the same the thing thing is what did I do wrong x * equals negative 1 what did I do wrong let's run this again oh whoops I refreshed the timer that was totally by accident oh it's getting it's getting stuck so first of all um I'm panicking I'm panicking everybody it's getting stuck why is it getting stuck uh xus R let's let's just look at um let's just look at first of all let's treat these separately uh let's treat these separately so let's just look at um let's just look at the right let's just check the right paddle first uh what did I get wrong here I need another oh I need another close bracket this is me debugging so much for my timer okay so why is it stopping um because it changes oh it doesn't it's not updating it's it's not moving off so it's still there uh because where do I check then I show then I update it should move though because it's checking it should should get a chance to move I mean um uh so you know if we just I guess what I could say here is x equals P do uh X Plus P do I could just shove it I could shove it off to the um wait wait wait oh I'm on the wrong side here this is the side that I want what I could do is if it's moved past it I could I think this is the same as the gravity bouncing ball problem I could just Shuffle it right to its proper spot which is p.x minus P do W / 2 minus r oh uh uh oh it's checking oh this is like a terrible thing that I'm doing no wonder this is awful this is like an awful thing that I've done because it's just it's this is still like the right paddle so it's still checking this it I can't I can't actually do it this way with its xeed because I actually only wanted to check the paddle based on its direction oh boy can I have a can I have a mulligan here can we edit edit this part out I I said I wasn't going to do it so oh this isn't going to be that short 12 minute I'll do another version of this in JavaScript where I won't make these mistakes okay let's be I'm going to be really method I'm GNA unfortunately have to do a terrible thing that I wanted to avoid check paddle left and that's just going to be uh checking uh this is the right right no this is the left check paddle left so forget about this XP thing I have to check all these things I ran out of steam here and this is going to make this much easier I was just trying to avoid I was trying to reuse the same function and I think I should just refactor this later after I think about it check paddle right and then now we need to say if it is still within the paddle but the x is different uh and the X uh X is X Plus R is greater than this minus so now we should be good so now what I just need to do is I just need to say check paddle right and check paddle left I just need a slightly different algorithm for each paddle and two different functions that'll do it okay there we go now the other thing that people were saying is the angle should change based on where it hits it let's implement the score first I've got five minutes somebody tell what's so okay so the angle should change so this this has to do with angle so actually no no never mind I'm going to do something here so here's the thing remember when I said I wasn't too happy about the way I created this initial speed well I don't actually want to create a speed I need the Whiteboard here everything you ever want to do is more complicated than you think I don't actually if I pick a random xped between like5 and five and a random Ys speed between say5 and five I could potentially pick an X speed of zero and a y speed of zero that's not what I want what I actually want is to pick a random speed that's always maybe going five but is just in a random Direction so what I really want is a random angle between 0 and 360 or between 0 and 2 pi and I have this other video It's called polar coord you can go look up that right now because if I pick a random angle I can then say x speed equals uh whatever speed I want like five time cosine of that angle and y speed is five time sign of that angle so this has to do with a a right triangle uh and S and cosine of that angle um and I I go through the math of that in another video okay so now what I'm going to do here is I'm actually going to take this out of here I'm going to do this in the Constructor because what I want to do is float angle equals a random angle between 0 and 2 pi and I want to say x speed equals cosine of that angle and I'm just times five and yped equals 5 Time s of that angle so now when we run this we should see the puck always going in a different always going at the same speed but in a different direction so the reason why this is important is because this angle thing I think is actually technically a variable that I'm going to want to keep track of oh vectors I should be using vectors that's okay we're gonna be fine um okay uh people were taking bets on how long this was going to take me and I I think somebody is about to win um okay so uh now uh what can I do here so now this should also by the way this algorithm should go in that reset function which sets it back to the middle and then by the way why not in the Constructor just call reset now I wish I could keep track of the angle and then I could just okay let's run this uh I'm playing it I'm playing it okay come on come on come on come on this is pretty good hey kind of made pong here oops whoa that's bad that's a bug look at that okay so I got to deal with there's so many Bucks I should have pretend I should have not made that happen um okay so here we go let's at least add the score let's do something satisfying add score and sound okay so I'm GNA I'm going to say uh left score and right score and I'm going to put those on the screen I'm going to say Phil 255 text left score uh um 10 I I don't know I'm just going to pick some location and text uh right score uh and I should uh you know with minus 10 something like that uh let's try that so uh so let's see if get the score whoops so you can see the score is there I should make the font size a lot bigger and then maybe make this uh in a different spot okay you can see the score is there yay okay now let's start adding some points where do the points increase uh we're in the puck um the edges issue if it goes off to the r right this is uh right left score gets a point and I don't love the fact that I'm using this Global variable here in the puck object I probably should return and the scores really s bit but just for the sake of quickness here um I'm going to say WR score plus plus here so now let's see if we can get some scoring going one one two one two to two 3 to2 Okay so we've got score so in a lot of ways in pretty good shape let's add a sound uh do I even have the Sound Library import uh sound okay so what did I just do by the way under sketch import Library I can go to import Library import sound if you don't have the Sound Library you're have to go to add Library it'll bring up this menu search for sound hit install then you'll have the Sound Library so I have the Sound Library I'm going to say uh P sound I think is called Ding and then uh P sound equals new P Sound ding. MP3 may have to say this this ding. MP3 the timer went off oh my God that's scared to me can I have 10 more minutes please 10 more minutes there we go I knew this was useless uh it's not P sound apparently let's look at the uh why am I adding sound this is really oops this is really just taking up a lot of unnecessary time processing sound uh sound libraries uh I want to look at sound file I don't know why I said P sound sound file file I just imagined it was called P sound sound file and then um and let's just call Ding and ding ding equals uh sound file and then let's have it ding should we have a ding every time someone gets a point ding. playay ding. playay okay let's run this that's so loud is it loud for you guys oh come on this is really this is like that thing in air hockey where it gets to the middle and you have to walk around and pick it up and put it back really just why I'm testing the sound and now and now you're going to bounce the punk okay we can we can restart it can you guys hear that sound volume is fine okay okay so we've kind of got pong here's the thing I oh my God stop stop okay there's a couple things missing here a lot one is there's a bug that the the the ball get stuck behind the paddle so we should really deal with that number two is um oh I think I know how to deal with that actually that's going to be easy one let's fix that let's fix that because I'm realizing that what I'm checking for really if it just gets past the middle of the paddle right it's so I think that's really the issue the edges isn't really um um it's really like the width minus what is it called right paddle right minus right divide minus right dot umw right and then the this is uh left. W so I really just want to check not if the ball gets all the way to the edge but just a little bit past the paddle although is that going to make it disappear in a weird way maybe well that's going to so maybe it's okay if it gets all the way to the edge oh so maybe it's more maybe it's not about that maybe it's actually so I don't like that because we want it to go and it really should be if x should get all the way off the edge If X plus if x minus r is off the edge and if X plus r is less than zero that means it's all the way off the edge what I really should fix is here where I'm checking the um checking this monstrosity here because what if um it should only actually reverse its speed if as long as also I should also just double check as long as the X is not greater than maybe the other side of the paddle so not greater than p.x plus W / 2 so as long as it is uh right because if it's already gotten so it's it might get past the paddle further away so as long as X is actually less than it has to be greater that has to be like really within the um within that within the paddles bounds so I saw starting angle yes yes the starting angle should be constrained okay okay good point X is less than um um X is less than the um paddles X just just say the paddles X like it should be between the edge and its Center so this is like a quick extra double check to make sure it's not kind of behind the paddle and this is another quick double check to make sure as long as it is greater than uh paddle. X okay so let's try this and now we should okay I'm going to constrain that angle in reset what we're going to do is we're going to constrain the angle between negative pi 45 degrees which is pi ID 4 and 45 degre which is pi ID 4 and so that will always give me something pretty much pointing to the right but um what if I want randomly to go to the left sometimes so I can say my chicken is ready My Tofu whatever tofu tofur is ready okay um my uh if uh my toast a toast that's what I was looking for um if x be this is horrible if you've made it hash ding ding ding ding ding if you made it to the end of this um if uh uh what was I doing oh yes if random 50% of the time let's have it go the other direction uh if uh random one is NE less than five let's have um let's have x speeed times equals negative 1 so I'm always picking an angle between 45 and 45 degrees in this direction but half the time it might go the other direction or I think I might have fixed everything oh it looks like it's off right it's not look at that so why what's wrong here well let's see if this side is right oh boy I think I have my can I please take a break I can't I will finish this I will finish this so why is that off it was working before let's look at this I wish I didn't have this horrible if statement I hate my horrible if statement okay stop dinging okay let's take this out for a second let's also just make the angle always zero uh just so I can test this did that mess something up no okay so something is woefully wrong and is it bouncing in the right part here it looks like it's a little bit off right yeah okay so let's see if we can figure this out what did I screw up paddle check paddle right let's check the paddle right okay if y okay the Y thing is right it's the x if x + r is greater than the paddles x minus p. W divided two that seems right I have an extra speed minus one where where where where where where where oh look at that oh no wonder that's G to screw stuff up okay I think it's working now does it just mean that it's visually like I feel like it should get a little closer oh no it's working oh it's just because it moves five pixels per frame so it's always it's you know it's sometimes not going to appear exactly but that's right okay now let's put this back in what did this do let's make sure it's also with uh within a certain range okay that's good it was working I had that extra thing there now let's give it some a random angle again uh a random angle where's where where did I do that in Puck let's take out angle equals zero okay now we're going to play it here we go oh so let's see if I can make that bug happen yeah okay that bug is gone it's not getting stuck behind it anymore so everything is actually done except for one big thing the angle that it moves the way that it changes should actually change according to um according to where it hits on where it hits on the paddle attention shift Meister okay that's a good way to catch my attention um okay oh no the timer's gonna go that's like the third time I refreshed it to 10 minutes am I like 45 minutes into this now oh my God this is hilariously embarrassing um okay so I I should do this in multiple Parts but I'm just not I should just consider myself done but I'm not we're going to finish this out I need some of ginger tea here 48 minutes at least finish it for an hour you do realize I'm doing this live on a live stream with other people watching with like lights on me standing up in a very stressful I'm wearing like a light up bow tie now now we're just getting ridiculous here with this timer okay all right oh I walked over here why did I walk over here so let's think about this we're going to call I think the title of this video should probably be pong in 60 minutes because I think it's going to be a 60minute video okay here we go now here is the paddle and here is the puck coming at the paddle so what we're saying is if it hits in the center maybe it would reverse its X Direction precisely and not change the angle but if it hits closer to the side it would then project further down so we'd be rotating the angle by some amount the further down the paddle it gets is that correct and same thing if but what if it hits up here would that cause it to also rotate further down because it's just basic on the distance to the center or would that actually have it reflect further in which one is it somebody help me out I don't know how pong actually works like is it always somebody tell me can we can we pause this video for a minute I'm waiting for the chat uh uh thinking will waste time yes further in what is the further in what does that mean be more specific okay let's think of let me look in the code to where I need to do this um depending on the movement direction of the paddle middle third is straight on the paddle is like a circle and the angle reflect the angle from the center uh if hits on the very corner it should go in the opposite direction further at the top uh all right so if it hits further up angle goes up hits further down down angle goes down reduce the angle incoming angle doesn't matter top is reflect up top third Ricochet is up divide it into thirds uh okay here's the thing I'm trying to avoid actually using the angle um because then I going have to get into tangent and all that stuff and I should have just used vectors in the first place oh my God Adam Justin or Adam J Austin sorry in the chat just po posted a um just oh does it actually just give you where it hits it gives you a specific angle no matter what its direction is that's perfect how do I Google for that there's no angular reflection this makes it so easy um how how do how do Adam J Austin how do I Google that image how'd you find it uh whoops uh Puck angle Direction that's not pong paddle angle direction oh this makes it so easy easy uh where is there a picture where's that picture it came into the slack channel can someone just tweet it to me at the coding train pong angle segments thank you pong angle segments okay pong angle segments there it is oh no that's even this one this is one okay this is totally manageable look at this so here this is so much easier to deal with because it doesn't actually matter what Ang it's coming in it just it just goes at that angle no matter what so um what I'm going to do is I'm actually just going to map the angle I don't even need to divide it in segments I can be fancier and have it be continuous so I just need to take its y value it's y position from zero to the bottom and map it between 45 and 45 deges Orga 135 and 135 okay let's do this okay so where does it hit the paddle over an hour was the correct answer um okay okay okay this is where it changes speed but now forget about all this nonsense all I want to know is I want to know the difference between the so the difference between I want to know it's Y location minus the top the paddle Y location minus I really should have the paddle keep track of its top and bottom location so I don't have to keep calculating all the time but I want to know how far from the top is y and then I want to have an angle I can use the processing map function where I take that difference which goes between zero and P Doh zero to the top right it could be all the way at the bottom or could be all the way at the top and map that from4 45 to 45 and then X speed equals uh 5 * cosine of angle and yped equal 5 * s of angle and then I'm going to do the same thing for the right the difference is I want the range to be between 35 135 and 135 what did it say in that I might have to rethink I probably have to think these angle values because a computer Graphics window and angles Point down and also hello radians people radians radians radians um so uh let's just convert this to uh uh um rad equals radians of 45 so I want to go from I mean I could do it's pi divided by four but I don't feel like uh I'm sure this is wrong uh radians 135 negative red to Red okay let's just throw caution to the wind here I'm sure it's wrong yeah okay so first of all you can see how I have it it's going in the other direction so this one should actually be 45 stop dinging hold on does it still go does it still ding if I turn my volume off maybe not okay let's try it again that doesn't look right is that right or is it going oh that kind of looked right is that right that can't be right whoa so I think my okay so it's clearly wrong so so let's think about okay let's think about what these angles actually should be versus that diagram uh I should never take a diagram literally okay uh okay so this is the diagram let's just look at the left one okay uh and I can see what the problem is already oh no that's actually correct this is computer Graphics because the left one should be between 45 and 45 that's actually correct um hold on because I was concerned that it's flipped but if you rotate oh but our sign and cosine all right let's make a separate let's make a separate sketch to be sure about this okay we're going to figure this out zero is to the right zero is to the right but do s and cosine they do the actual math and they don't know about the axis being flipped right or do they uh I don't need draw right because what what I'm what I'm saying here is let's do this what I'm doing is I'm saying um I have uh size 400 400 and I want to draw a line from width divided by two height divided by two let me just do 200 200 200 200 to 200 plus x 200 + y and I'm going to have an angle equal 45 and then I'm going to say uh x uh x equals uh 100 times okay hey stop 100 times um cosine of that angle and y = time sign of that angle okay so it's doing exactly what I thought it should do kill the timer it doesn't matter anymore uh okay so this is right oh sign no no sign should only do this for the Y I don't okay so so this is right I feel like though that this is so um so maybe my positioning is wrong so let's see so if it hits uh so that's right let me go back to my other sketch this is the left paddle okay I got something wrong here it's the mapping that's probably wrong right so this should be 45 so this should be 135 right I had it right the first time because the difference if it's at the top y minus the paddles y minus oh hello it's not it's y minus the paddle of Y minus that right that's the actual top location that's the difference that needs to be in parenthesis that was a big mistake right um because that's the difference and it's kind of counterintuitive to me but right and this is the same issue okay so now let's see what I get here there we go yeah this looks doesn't this look right now oh I feel so happy pong oh wait why did it have a bug what was that bug I don't like that bug oh you know what the bug is I know what the bug is I think the bug it kind of like skips past it because the the paddle moves kind of fast and I mean the puck moves kind of fast and this check is a bit of a problem this extra check that I put on for it so it doesn't get stuck I think what I really want is um let's check the as long as it's greater than uh let's look at the right the right Edge so it because sometimes it's going past it's it's able to skip past that middle because it's only 10 it's only I could make a wider paddle and then I wouldn't have this problem that's probably what I should just do because my speed is five but I could also be um so let's just make a wider paddle uh let's make a wider paddle yeah we're not going to have this problem anymore I'm terrible at this okay hey I did it it only took like an hour oh it's the watching the beginning of this video is gonna be so sad can but this is this is pong my left hand which who's gonna win left or right oh it did that again why does it do that what's that bug I think it's um oh I know what the bug is so actually what I should here's the other thing I should do if I want it to bounce off the right Edge it can skip over the right Edge and be told to move back but I think I should really probably to be safe um I should always place it back to the correct location so I should also say x equals the paddle X plus uh the paddles width divided by two and here I should just show it back x minus equals the paddles x minus the paddles with / two I think this is also going to make it feel a little bit more accurate one hour and one minute there we go okay I had to stop oh that was a little bit weird I thought that was it getting stuck on it maybe I was still moving the paddle is the problem oh boy oh I must have messed it up I made it worse uh did oh oh oh oh oh oh I forgot about R I forgot about r x equals I want it to go on the right this also minus r and I want this to also be plus r this is going to be done I swear this is done if I had done this in JavaScript it totally would have taken me 15 minutes yay pa okay okay okay okay thanks for watching I hope you enjoyed this it only took apparently 61 minutes and I don't know what else I'm going to do but this V video is over if you actually watch this whole video then I commend you you are amazing you are you are a part of my heart and I will give you an internet hug and send you on your way uh goodbye the stream is making me anxious um hey all right everybody before I go somebody in the chat just said the stream is making me anxious oh shoot my sound board's not working let's just take a deep breath everybody okay goodbye see you soon byebye