there was a time when I made a video and at the beginning of the video I said this video will be about to select and select all function in p5 and then the entire video was about something else now I'm saying the same thing but this video really is about that and the reason the other video is about something else entirely is what I covered was this idea of selecting by tag versus ID versus class and what I used that for assigning those things CSS in my writing style tag or creating CSS file directly in your HTML file so now what I want to look at is how do you select from your code by tag by ID or by class then you have access to elements and you can assign them events or behaviors or change their style dynamically all sorts of things like that so let's take a look over here at this particular page did I want to come over here yet no I didn't come over there in a second so let's so ok so this you know did it did it did it go back in time and erase that but whatever this here is for pretend HTML some HTML I can edit this video it's gonna be fine I'm just gonna keep going so what I want to do is look at how that works and I'm gonna I'm gonna write this out here I think so here was the way of creating a selector like the ID unicorn got this particular style and if you're doing this instead from within JavaScript the equivalent of that would be I erased like I think the wrong thing but VAR element equals select unicorn so in other words I did this wrong in other words this is what I had before select by unicorn this is this is CSS CSS is select the ID unicorn and assign all sorts of style information here now in JavaScript I'm saying select the item in the Dom element on the page by the ID unicorn that's not what I wrote I forgot that you need this pound symbol to indicate ID so up here this should say pound unicorn can you see that you can't kind of trails off there this is calling there so this is a way of encode selecting a particular Dom element and now this element you could call all the functions you might normally call with the Dom element like change it to HTML content change its style a sound a sign of mousepressed event so the reason for me showing this to you which I really probably should have said the beginning is we have this kind of like big question which is let's go to cut the code here and let me say create P this is a paragraph made by me and I'm going to run this code and you can see look at this this page has all of this content a unicorn and rainbows rainbows more rainbows just a plain paragraph the click Me button a canvas and this is a paragraph made by me so what I am suggesting to you is all of this stuff up to click me this is all content that I wrote into the HTML file and and now down here these two elements are things that were made in JavaScript so look create canvas makes the canvas create P makes the paragraph and then here in the HTML file here is all the stuff that I wrote into the HTML file so why why oh why oh why this is the like this is the crux of today this is a existential question that that that we all have to ask ourselves why would you make a Dom element in the HTML file why would you make one in JavaScript let's think about this for a moment before my answer to you of why you would make one in JavaScript is the reason you would make one in JavaScript is you need to have access to it in JavaScript so making a JavaScript and then you know you have access to it javascript today we will that's not a good enough reason because the Select function to select all function will give you access in JavaScript just something that was in the HTML file so now you really have both options and I would say it really depends on how you feel what your what your goals in life are you know what kind of person you are what's your favorite color is you know that kind of stuff I mean you can kind of do either and maybe you like making in the JavaScript maybe like making HTML but I think there are some scenarios where it makes more sense to do one or the other for example if there is a lot of kind of existing content that you just want to be on the page when it first loads and you want to be able to really custom you know work on how that content is organized and how it flows it's a lot of content it kind of might be silly to have a zillion create peas just to like and just to like create that content initially so the initial content of the page and the sort of overall structure of the page I think that might make sense to do in HTML if you wanted to have this paragraph if you wanted to say this is a random number I wonder if I said this already in another video and then said random 100 right this is something that you would want to do perhaps in as a dynamic element right if your content is it pick say a new affirmation every day that it shows on the page perhaps you might want to create that element dynamically of course you could assign its content dynamically and created in the HTML but you know the point is you know if there is something that involves a set of rules or some sort of input some sort of external data from some source that might be something that you need to sort of generate in JavaScript if you wanted on this page there to be a thousand paragraph elements all with random numbers you wouldn't want to in HTML type ppppp a thousand times you don't want to use a for loop to generate a thousand elements so I kind of off on this little digression here it's a relevant digression but this is really a question I would love to hear your thoughts on the matter like when do you write your content in HTML when do you create the Dom elements in JavaScript why would you do one for the ester as I make more and more videos in particular once I get to data and epi is videos are gonna see a lot of different scenarios but for now let's not worry about answering that question let's just look at how it works so let's say you don't make anything you don't make any Dom elements in JavaScript you've made all of them here in HTML how do you apply something to for example the unicorn paragraph well with the Select function so now I could say something like unicorn our you know paragraph equals select unicorn close this there's a picture of B on this laptop and it's very distracting and I could say paragraph dot style you know background color you know f0f so now if I were to run this you can see here this is how I was able to address this particular Dom element in JavaScript so I was able to organize all of the initial content in the HTML file but call a function on it dynamically in JavaScript and you know I could do something like paragraph dot mouse over you know change background and then I could put this in and this might be a more common scenario here where I'm now going to when I mouse over that element right I'm assigning an event callback to that particular paragraph that I selected with the Select function and now I'm going to execute this function so now as I move the mouse over here oh that was so close anybody see what I missed here oh you know what I missed look at that made a sort of classic error and actually there's an error down here it's good to have these mistakes uncaught reference error paragraph is not defined why is paragraph not defined because paragraph was declared as a variable in setup its scope is local only to setup which is not available to us in this change background function now there are so many kind of JavaScript ways to get around this issue and it's gonna actually come up wonderful way in the next video when we look at how to assign the same callback to like a hundred different Dom elements boy that's gonna be a great moment but for right now just in our sort of simplicity here I'm gonna just make this a global variable and say paragraph dot select so now the paragraph variable is a global variable to clear it up top so it's available in setup and in the change background function and there we go and now over here I mouse over it and it turns purple so you can see howdy this is how you access an element now another place that might make sense for me to do this is to select that button so if I want to select the button the button has an ID I gave the idea that hey my button and so pound button button Mouse pressed and then you know canvas background I'll write a function called canvas background and then I'll say background you know random 255 so now this is also a nice way if you want to set up the layout of your page have the button in exactly the right place but not have to figure out how to do all that with Create button so instead of saying create button the button already exist in HTML I'm selecting it and assigning an event to it so now here we go every time I click that button you can see the background color changes randomly so this is a nice way of working just by giving your Dom elements IDs selecting them in setup and then doing whatever you want to them anywhere else in your code now I'm at ten minutes and I'd like these videos to be about ten minutes this one's gonna be about 15 because I have another piece of this that I think is really important to look at we've spent a whole lot of time talking about the different kinds of selectors this is an ID and ID is for a single item but I could select by paragraph which would select all of the paragraphs or I could select by a class which would be select a group of paragraphs that have a group sorry not just pair a group of elements that are members of the same class so what what happens if we do that now let's let's look at this and I'm gonna do something here I'm gonna move this unicorn one just down here just to change the order and I'm gonna change this comment this out and I'm gonna say select by rainbow so this is selecting a paragraph of the class rainbow what is there which hold on a second how many paragraphs and actually let's go back and even further step select P this is just selecting a paragraph but which paragraph there are a lot of paragraphs mmm a 1 2 3 4 which paragraph is our going to select or shouldn't it select all of them let's see what happens okay hover over this one no hover over this one no hover over this one over this one yes so notice that when you call select with either a tag or a class it will just give you the first element it finds on the page that's a member of that tag or class but most likely that's not really what you wanted most likely the reason why you're selecting by tag or class is because you want all of them and so in order to do that the function select all comes up so let's look at this for a second this is selecting by ID and you get a single element what I'm suggesting to you is if if I'd say select all by a particular tag so select all the elements that have been our paragraph elements what is this I cannot say elements dot something because while this is a single Dom element this is an array so select all will give you an array of paragraph paragraph paragraph paragraph so if you want to do something to all the elements you have to individually address the elements of the array and one way to do that is with a loop so coming back over here if I were to change this open not over here coming back over here if I were to change this to I'm just gonna call it paragraphs I don't have to use an S but I think it's sort of and I were to say select all now I could say something like var I equals 0 I is less than paragraphs dot length I plus plus and now I could say paragraphs now I'm going to index I something now here's the thing I want this is this is really exciting because what I'm saying to you here is let's say you have a thousand paragraphs on a page and you want to assign the same event to all of it so ever you hover over any of them they sparkle or they change color or they get really small or they disappear whatever that event is there's a path to doing that and that's actually the topic of the next video but it's a little extra concept here that we're missing so in order to simplify here right now I'm just gonna do something like say style and I'll say a font size 16 and 24 point so what this is allowing me to do is any paragraphs that are on the page I can just quickly I'm able to access all of them and call a function on them so you can see that if I just keep adding paragraphs right you know like this all of them are getting that size now let's just take this one step further let's change this from instead of selecting all by the paragraph tag let's select all by the rainbow class and we go back to the HTML file and you know orange apple apple orange so you can see the first the third fourth the fifth a bunch of those have the rainbow class and I'll just change the content of these two so now you can see only the elements that are of the class rainbow now have that font size so you could select by an individual one using select by ID you could select all of them all of the paragraphs by a given tag or you can select a group of elements with a given class and incidentally what if I make this button also a member of the rainbow class you can see the button they don't have to be the classes don't have to apply the same kind of element so if you say select all P you're only going to get paragraphs if you say select all dot rainbow that class could go across paragraphs and images and divs and buttons so you can group elements together that way so I think this is got a little bit scattered but this idea here is how you can now start to think so what I would say to you is fine something you made or make something new makes it take the thing you made already make all of your Dom elements in the HTML file give all of them an ID give some of them a class then go to your JavaScript program and try to select something by just its ID try to select some a group of elements by a class and see how you can get to see how that goes for you and in the next video what I want to look at is how you could select by a class you could get like a thousand elements and how you could assign a callback to all of those without having to write a thousand callback functions and that is my friend this is going to be a good moment to expand your knowledge and things you can do with JavaScript and programming okay so this is the this was a particularly long video and I'm gonna take a break and make the next one