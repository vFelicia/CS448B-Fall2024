hello welcome to yet another computer vision tutorial video in this video oh my god so excited I'm going to show you how to program from scratch not from scratch but how to program the raw algorithm algorithm for blob detection yourself and what do I get my blob detection so in two videos back I made an example that finds it's over here no it's over here where is it okay over here that finds this cup that I have taped to my green screen behind me by looking for the average location of all the red pixels it finds and this works perfectly beautifully nicely however there's a problem if I add a second cup look at the average location is in between those two things and I want to be able to track them individually as individual blobs so how do we do that so I want to talk about how this algorithm works so let's what's going on here there is a an image that the camera is seeing it is seeing two red cups take to a wall don't know what what my life has become that I'm taping plastic cups to walls that are painted green but that's just what it is hi okay so it's looking at every single pixel and it's asking a question is this red and you know you can insert something else there is this a bright pixel is it a dark pixel is it a blue pixel you know you could be using a Kinect and depth tracking is it a closed pixel is it a far pixel there's lots of things you could substitute for this question but for my demonstration of the algorithm it's going to work nicely if I ask is it red and so the answer is going to be no is it red no is it red no is it red no no no it's a very negative program just no no no no no no no no no no no no no but eventually at some point a little bit it gets to over here is it red it's like yes yes it's red so if it's red then we have to ask the question is it did I find a red pixel before or is this a new and I thought if I found the first red pixel and as soon as it's fine the first red pixel it has to make a blob so the blob is going to be a Java class an object which is a blog it's going to say I found the first red pixel so I'm making a blob object and I'm going to call this a and blob a has an X a Y and a width and a height it's like a little rectangle now what happens next oh it goes to the next pixel is it red yes it's red yes it's red is it near one of the existing blobs it is so let's just put it in blob a and maybe blob a gets a little wider it looks for the next pixel oh it's near blob a put into blob a make a little wider it keeps going this says no no no it's another one no it's part of blob a no no no no no no no it eventually gets out here to fight little baby yes well is it near blob a and it suddenly realizes No look at that that distance is greater than some threshold it's time for me to make another blob so it's looking for all the red pixels and finding the clusters of red pixels near each other within some that are far enough by some thresholds amount so that's the algorithm we need to program and the blob I'm going to think of really just as a rectangle it's going to have an X and a Y and it's going to have a width and a height okay so let's see if we can make that happen okay so now what I need to do okay the first thing I'm going to do is I'm going to make a blob a new tab in this processing sketch okay good and I'm going to give it an X a Y and a width and a height and then I need a constructor and the constructor when I make the first blob it gets an X and a y this is tricky so what's the X is going to be that X the Y is going to be that Y and the width is going to be a width of one and the height is going to be a height of one okay great so that's what happens when I first make the blob oops now let's think about this so now let's go back to this algorithm and I don't need what do I need hmm I need to have some sort of lip variable list of blobs so I'm going to make an ArrayList of blob objects now if array lists are new to you it's like a flexibly sized array so I can start with none and I can add more and that sort of thing and this is something that I encourage you to look into and one thing that I'm going to have to do plus my train of thought okay one thing I would have to do is say blobs clear so this is something that's going to be really really key and I'm going to bring this up again later but when I look this algorithm is going to do is just show me a snapshot of blobs at this moment in time and then a snapshot of blobs at the next moment in time but it's not going to know which blob is which over time but I'm going to get to that in a future video talk more about that a little bit so I don't need this average location anymore I don't need this count this is all from my previous example but what I'm doing here is what happens as soon as I find a pixel that meets this red threshold well what I need to do what I'm going to do is just say blob B is a new blob at that particular X and y and then I'm going to say blobs dot add blob B so this is the idea any time I find a pixel I make a new blob only I don't always make a new blob right I only make a new blob well when would I make a new blob if blobs is empty then I make a new blob right so if there are no blobs and I found a pixel it has to be now otherwise and I'm going to do this a slightly different way but another way that I could do that is for every blob let's add a boolean variable saying found is false so I want to loop through every blob and say is one of these blobs my home so if there are no blobs by the way if not found then I add a new blob to that ArrayList so this is the algorithms over here I start by assuming while I haven't found a blob it's a home for this pixel but now I'm going to look through all the blobs and see if one of those is a home if after that loop which I haven't written yet I still haven't found one then this this pixel is a new blob okay so the very first thing I need to do is say what is the distance or let's just write it this way if B contains or is near let's write a function called is near think I think actually an example that I saw it was called that if glob is near this particular XY point so that's one thing I can do to check what's the distance between this XY point and this particular blob so let's go to the blob now and say is let's write a function that's a boolean function it's got to return true or false is near and it gets an X I'm going to call this like I'll just use X underscore I should come up with a different somebody suggest a better variable name but if this particular XY point is near I need to either return true or false so the first thing I need to do is what's the distance between X Y and x/y so I'm going to call this like px for like pixel X and let's do that up here too I don't like this underscore thing it looks so obnoxious no I don't have any note that I have any problems with underscores then underscores are lovely nice characters but I'm going to call it px for like pixel X but actually here's the thing I actually want to test I think I want to test if it's near the center of the blob not the corner of the blob so one thing I'm going to do is say see accent CX for Center X is X plus W divided by 2 and see Y is X plus y plus h divided by 2 that's finding the center right X plus the width no no that's not the center X plus the width divided by don't be ridiculous X plus width divided by 2 thank you very much y plus height divided by 2 that's the center right if you have a rectangle X plus the width of the rectangle divided by 2 that's the center location so I want to know if that pixel is within some distance now again I could use let's use distance Square to like not Oh don't I have distance squared in this example right here there it is oh but it's only hot that's a 3d distance let's let's make a 2d version of it I have this from a previous example where I was using in color by the way did you know in Java you can just have the function with the same name as long as it's two different arguments two different sets of arguments it'll know which one to call that's called method overloading okay so I'm going to go back here and I'm going to say if the distance is less than some particular threshold I don't know what's a good distance let's say 50 pixels away if it's within let's say within 25 pixels then then return true and this is definitely a variable that I'm going to want to make up something that I can change otherwise a return false okay so now what I'm going to do is and I know all this stuff is irrelevant this was from my previous example so if a blob is near X Y then first of all I want to do is blob add X Y I want to add that point to the blob and then I want to say found equals true and then I'm going to say break now there's a little bit of a problem here where I probably should check all the blobs and find like the clothed the one that it's closest to but I'm not going to worry about that right now I'm just going to do this loop to find I'm just going to find the first one so now I need to add that X Y so here I need to write a function add that pixel X and pixel Y so what does that do well the thing that I need to change is I need to I need to check oh this is tricky here let's think about this for a second I'm gonna use a diagram there's probably a smarter way I could do this maybe somebody in the chat or will give me a suggestion but let's say at some point I have a blob like this and it has an x and y and it has a width and a height so the first thing I need to figure out is is that pixel inside this rectangle is all right if it's inside that rectangle I don't do anything if it's over here I suddenly want my rectangle to be like that if it's over here I certainly want my rectangle to be like that so you know what I think I want to change about my blob I'm going to change something I'm going to tap the blob instead of having X Y wh I'm going to have min X min Y max x max Y I'm just going to keep track of the top left and bottom right corner of the blob and actually that allows me to have this argument bxy and I'm just going to say when the blob starts minimum X and the minimum Y and the maximum X and the maximum Y and I could have called those bottom bottom bottom X Y top X Y but anyway all those are that now when I check if it's near now I am getting the average so I'm going to say minimum X plus maximum X divided by 2 and minimum y plus maximum Y divided by 2 the distance is still the same thing between this X Y and then the add function is going to be easier because what I'm going to do is I'm going to say minimum x equals the minimum of X and minimum X this is a processing function minimum that says if X is less than minimum X whichever one of these is less use that one so I should be able to just do this and the same thing here like this so I just want to get I could have written if statements like if X is less than minimum X then the minimum X is now X that sort of thing but this should do that trick this should add the blob okay and then by the way what do I've got here I've got everything I need to draw a rectangle so I'm going to write a function called show and I'm going to say a stroke 0 fill 255 and I'm going to say just stroke weight 2 so I make sure it's kind of thick and then I'm going to say rect mode corners by the way in processing the rectangle mode corners allows you to specify the top left and the bottom right of a rectangle and those are the values I have so I'm going to say rect min X min Y max X max Y so I added all of the blob does a couple things it checks to see if a pixel is near it and could say true or false it also can add that pixel to expand or contract its rectangle and then it could also draw that rectangle and now in this particular algorithm this is it I think I've got everything here if it's near but if it's near at that point I found it otherwise add a new blob and then at the end here after I go through all the pixels I should be able to go through all of the blobs and say blob dot show okay I'm sure I missed something but let's try running it the variable P X does not exist oh right because this is now x and y Oh max x equals x I have an error in the chat so it's telling me there's an error in the constructor max thank you okay so this was a big error that would have caused me a major problem okay here we go let's see what I've got here now what is that craziness oh look at this it's finding zillions of little tiny blob look at all the little tiny blobs a little tiny pops look find some more little tiny blobs so I think my distance threshold needs to be a little bit bigger 25 pixels so that's just something I need to make make a variable so I want to make this a variable let's just do this right now all right because this all the way I was distance squared so it wasn't so crazy so I'm going to make a so this is the color threshold and I want to make a distance threshold and I'm going to say that's equal to 25 just having these be the same and first of all this needs to be distance threshold Times distance threshold and I'm going to add a just right now I'm going to add key pressed function and I'm going to say if the key equals a then distance threshold plus plus else if key equals Z and this is a really quick way for me to just adjust that and then print line distance threshold just so I can modify it on the fly here we go come on everybody here come the blobs he come the blah Oz blobs the musical here oh yeah much better so we can see here now tada now this is still getting multiple blobs and I can tweak things for example I should probably click on the color look my lips are a blob my fingers are a blob but you can see one thing one thing I can do here let's zoom into this is I can consider blobs of a certain size to be useless so I can one thing I can do is say here right I could say if blob dot size oh if B dot size is greater than 100 look for example I can only show right now blobs that have a certain size and there is no size function but I could write one and I could just say you know return max X minus min X x max Y minus min Y like the width and the height of the blob so to speak I multiply them together and you know I could say I could you know they have to be greater than like you know 500 this would get rid of small blobs right oh and that threshold yeah yeah I meant to I meant too by the way so you know this is also what I can change here let me add the second one and you can see how nicely this is working out hey arm is blocked we go over here and you can see you could see what I'm getting now I could still that threshold you can see that there's two blobs up top there let me make that threshold if I keep making that threshold there we go now it's just one blob and again I could do things like interpolate or whatever and let's do this and here we are and oh boy we have to do something ah I mean by the loss cause it's not what it meant to come on give me some read I am blob man okay anyway whatever they get the point so this I think that stuff music student so I think I've shown you the basic idea of the blob algorithm there's I think a bunch of things I could improve your when I could make a nicer interface to kind of tweak these thresholds of color the distance threshold you know might be nice to sort of draw the rectangle blob rectangle with some alpha so I could see what's behind it you know one thing that's really kind of important about this to mention I'll mention this again is come back to me code is that whoops it's funny it worked much better without me clicking on it anyway is that there's no sense of and I should so by the way this this distance that threshold should really be like 75 to start with and let's make this like let's make this less I don't know what I'm doing here um so one of the things that's really important is let's say you wanted to have an image follow this cup and an image follow this cup look it's working beautifully right now an image follow this cup and an image follow this cup like what if I wanted to put a cat over here and a dog over here well it's not I'm not always going to you know I might like this blob is going to be found first because of the way I'm iterating through the pixels so this blob is always going to be blob zero but now this blob is going to be blob zero this cup that is its blob zero but it's this other Cup so these blobs do not there's no way these blobs don't have ID numbers there's no way to track them over time however that is something we could add so I'm going to show you how to do that boy this is working so nicely I'm so pleased oh I look I I can put Mickey Mouse ears on myself I need anyway I'm gonna go do this on my own time you don't need to like watch me do the weird stuff with the blob but um I'm going to do that in a future video one last thing so ultimately you know if you want to do this and i'ma show these in another video there are ample sets of processing libraries there's blob detection there's open CV there's a lot of processing libraries that will do this there's also something that I haven't implemented this algorithm which is actually to find the contours of this cup I'm just finding kind of the minimum maximum area of the blob so those types of things I would recommend thinking about contours but and so I'm going to show you at some point how to do this stuff without writing all the code for yourself but just use a library that does the same thing but it is interesting to see one thing that I think is good to see about this is a lot of the libraries are built in just to look for bright or dark blobs and so you would have to apply some type of brightness threshold to the image first before passing it to the blob detection library which would be fine but custom baking it yourself you can just like look for a specific color like red okay thank you for watching this blob detection video I'm hoping it was useful and I'll see you in the future computer vision videos good bye