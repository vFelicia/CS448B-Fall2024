hello welcome to a coding challenge i am just thrilled to be here i have had a wonderful invitation from my friend grady over at practical engineering to work on a simulation of horizontal directional drilling now if you had asked me a year ago hey are you ever going to do a coding challenge about horizontal directional drilling would say like what's that and probably not that doesn't sound like a thing i would do but after some research after being taught about this from grady i am just fascinated and i think there is potential to create a fun playable 2d casual game where you are the horizontal directional driller so what is horizontal directional drilling well you don't need to listen to me explain to it i've linked to practical engineering's video on the topic it's very well researched gives you lots of context and backstory as well as many amazing demonstrations of doing it on big and small scales grady was also kind enough to send me this diagram which sort of shows a scenario of how it might play out with a whole lot of suggestions for how this could be turned into a game from practice mode hard mode and other ideas i'm going to try to take all of that and synthesize it down into the simplest case scenario diagram it here on the whiteboard and then code it up all right my artistic skills aside here is the scenario we're dealing with in an overly simplified manner especially given the fact that this is completely twodimensional we need to run some pipe from point a to point b if there were no river we could just excavate drop the pipe in and back fill it in but this river is here and also maybe there's some other restrictions that we can't dig up all the land so could we sort of thread the needle so to speak how could we just thread a pipe in and curve it around and steer it that's what horizontal directional drilling does now it involves all sorts of real world considerations drilling fluid and materials i'm not going to concern myself with any of that i'm just going to look at the mechanic of how the controller steers the drill and create a simulation mini game out of that now again i have very little real world experience with this but a regular drill you know the drill bit might just look like this obviously with some ridges and edges and markings and stuff to make it you know cut into things for horizontal directional drilling also sometimes called directional boring the drill bit itself will usually have something askew at the end we can think of it as like oh it comes off and it kind of points down this is what gives it a bias so as it's going into the ground and drilling this bias will cause it to curve down so that the drill as it's inserted it could start curving down in a 3d world this bias might be something that we fully rotate but here in our 2d scenario i'm just going to think of it as either pointing down or pointing up so pointing down for negative one and we could flip it to pointing up if i flip it pointing up it's going to start to curve the other way the drill is always turning there's no way for it to go straight so the challenge is if i have a drill that's always turning either up or down left or right on or off plus one minus one how can i effectively steer it through a complex path there could be all sorts of other stuff in the way here there could be other lines we don't want to interrupt strange rock formations i don't know what's underneath the earth and what engineers really deal with but we've got to be able to get some kind of control over steering this i think we've got what we need though for me to be able to get started coding here's the base code i'm going to start with now if for some reason this is the first time you're watching the coding train hello welcome this is p5.js a javascript framework for creative coding i use it in almost all of my videos if you've never coded before i do happen to have a complete intro beginner series there will be things in this video that you don't understand if you haven't coded before but i'll try my best to walk you through it and then you can always refer back to some of my intro videos to fill in the gaps when i'm starting with the same scene here a canvas with some ground and a river and my drill is going to start somewhere around here on the left i'm going to use p5 vectors as the main data structure to keep track of where is the drill and what direction is it moving so first thing first a position variable for the drill and i've put a little dot in the canvas for where the drill is going to begin i have the drill position what else do i need well i need a variable to keep track of the drill direction like what direction is it currently drilling in as well as the bias is the bias of the drill bit pointing up or pointing down this is again a physical thing that's either flipped up or flipped down plus one or negative one dir for direction bias for bias and i'm going to initialize the bias as negative one and the direction as a vector pointing horizontally straight i mean i guess we could start maybe the drill should start pointing down i don't know what would be typical you have to go you can't go in the earth this way so yeah let's have it pointing down so the simplest thing i could do right now would be to write a function call it drill and then in that function i could add the direction to the position and if i were to then call drill here in draw which happens over and over again you can see the drill is moving down so obviously i need to add this idea of the bias and being able to steer it around but before i even do that i'd like to draw the full path i think that will really help us in terms of visualizing the process here i'm going to use an array and every time i move the position right before i move it let's make a copy of where it was that's essentially the previous position it's very important that i make a copy because these are objects if i just add the object directly without making a copy i'm adding a reference to it and then i just have many many many many references to the same point so when that point moves they all move then in draw i can use begin shape and end shape to connect all the previous points with a line loop through everything in the path and you can now see this black line trailing behind the red dot now instead of drawing that red dot i'd like to visualize the drill bit so we can see what's going on in which direction the bias is pointing so let me first just draw it as a line pointing down and now i want to rotate it a skew up or down up i don't know which way is what but to rotate this line i need to make use of transformation another topic that you may or may not be familiar with but luckily for you i have a whole set of videos about transformations in p5 transformations come up any time you need to rotate something so i want to rotate by let's say pi divided by six it's like 30 degrees times the bias so positive or negative direction of course you can see now that's way in the wrong place this is where i need to translate to the point of origin to have the rotation work correctly and there you go so let's start it actually at entering in around 30 degrees i could create a vector from an angle interesting hmm let's try flipping the bias oh let's add a button for that so what this bit of code does is it creates a button attaches a mouse pressed event to it and whenever the mouse is pressed that bias is multiplied by negative one making it positive or negative or vice versa but look at that the drill bit is not pointing in the direction that the drill is actually going it's always just flipping left or right from pointing down so we need to also incorporate the heading of the drill bit itself into where the bias is pointing i've made an error here where i originally drew the drill bit pointing down but all of the rotation and angles are relative to the horizontal axis so for all this to work nicely i should be drawing the drill bit pointing to the right i also made another error which is that the heading is the heading the bias is affecting whether i'm rotating to up or down based on that heading so i want to multiply the bias only by that offset which is pi divided by 6. there we go now we can see the drill bit toggling between pointing up down up down up down up now no matter what angle we start with for example 90 degrees it's still going to work i can even start from zero degrees and you can see i'm still able to toggle and visually everything's looking right i'm actually doing this live on twitch and the chat is asking a great question should we be using push and pop here and i don't need to because i'm not drawing anything else after drawing the drill bit but it would be really good to protect myself by using it this translate and rotate will affect anything that comes afterwards that drill function don't let that mislead you that's not drawing anything but one i might say logically it might make more sense to put drill at the beginning and then put a push and pop around here all right i kind of went about this in a strange order because i really was working on just visualizing all these elements the key here is actually taking the bias and having it affect the direction to which the drill turns remember it's always turning it's like a shark it's always got to turn it can't go straight that's not what a shark does the shark always keeps moving you get the idea though this begs the question how much does the drill actually turn now i'm sure again there are real world values for all of these things i'm going to make up a value i'm going to call it angle .01 a small incremental change and i'm going to say direction rotate by that angle times the bias oop my drill it's taking off to space i have defied all the laws of physics it's amazing let's have the bias pointing down to start and now here we go i'm gonna try to toggle that bias curve back i gotta get to the other side oh no oh no don't hit the water now you can see if i just keep toggling it over and over again i'm that's essentially how i'm getting to go in a straight line and can i make it to the other side come on keep going we did it horizontal directional drilling coding challenge complete so what's next here certainly i shouldn't be allowing the drill to sort of orbit in this strange way i need to add collision detection to see if it hits water maybe the scene should be procedurally generated in a different every time i could have an easy mode and a hard mode if you're actually doing this in real life you don't see everything underground and have a complete view of the entire world of what you're doing so i would encourage you to take this as a code base and see how you can expand it share it with me on the coding train website there's a form you can submit links to your versions of horizontal directional drilling but i also have made hopefully not right now but by the time you're watching this a fully playable version of this game that code will be on github i've made a list of all sorts of new features and ideas that could be added to this by the time you're watching this a lot of those will be implemented maybe there'll be some new ones so come check out play the demo enjoy it contribute to this make your own version share it with me and see you next time on the coding train