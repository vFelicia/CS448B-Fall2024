hello welcome to an incredibly special episode of the coding train I have a guest here for you today this is incredibly exciting for me have I said incredible too many times it is incredible John Henry Thompson if you're not familiar with John Henry Thompson please check out this video's description his website the links there but better yet just keep watching this video now I want to introduce John Henry Thompson in a particular way relevant to me because I think I can say that this channel and the kind of stuff that I do on this channel would not be here if it wasn't for the work of John Henry Thompson so I one of my main jobs here at near universities right now is the teacher course called introduction to computational media and my whole beginner learned to program with processing and p5.js those are really videos that go along with that course learn to program from the beginning its 2018 currently at present that's what the data is today I took this course in 2001 which i think is 17 years ago carry the 17 or whatever and at the time I took that course and I learned to program in a piece of software called macro media director with the lingo programming language and guess what John Henry Thompson the guest today invented the lingo programming language and lingo and director are a big piece of the history of creative coding if it's what we what I would think of as one of the main predecessors to the kinds of languages environments that I teach with today whether it's processing or JavaScript with p5.js John Henry Thompson in fact so I took that course in 2001 at the time Dan O'Sullivan was teaching that course he's the chair of ITP currently and he also took that course in 1989 and guess who taught the course in 1989 John Henry Thompson so the course that I spend most of my time teaching here at ITP one of the original teachers of that course was John Henry Thompson at the time he was teaching it with a piece of software called HyperCard you may or may not have heard of I encourage you to research then he at the time he's working for a macro media he invented the lingo programming language and he's going to tell you a lot about that a couple things to say as always I'm kind of a little bit terrible with sound and stuff and there's a few a little bit of clipping with this microphone apologies for that I think you be able to understand everything he says also towards the end there I interview I asked him with you so he's gonna do a presentation then I'm gonna ask him some questions I kind of like it's very awkwardly staged I really wasn't being very thoughtful about where I was standing and where he was standing cuz I was just so interested in all the things you had to say so apology for that one of these days I'll get better at kind of figuring out how to do interviews and have guests on this channel but that's all I have to say without further ado I'm really excited to have here on the Kodi train choo choo John Henry Thompson thank you John Henry Thompson okay okay well welcome thank you Dan Schiffman for invited me here too I see back to ITP I left ITP back in 1997 I taught here for about 10 years starting with a couple classes animation intro to computational media which started out with the hypercard if anybody remembers that but that was the that was the main program in authoring environment that was designed for nonprogrammers to do creative stuff on the computer so we transitioned started in HyperCard then as director I was working on director at the same time and as director got to be kind of comparable to HyperCard I started using that in the class and that like I said that ended in 1997 and so I've been sleeping for like thirty years and I just woke up and this is all this wonderful technology around here what I wanted to talk to you about today is the history of this of people that are trying to do make the computer more accessible by creating software's that are designed for nonprogrammers to do creative stuff with the computer so I'm going to go back and talk about what influenced director which is a program main authoring tool that I worked on up until 2001 at 2003 most of the stuff that I'm going to be talking about is on my website John Henry Thompson comm it's over here over here okay over here so and I have a little tab there called history which has most of this stuff and also some videos of my more work so what is what is director this is a little I have a little video I'm going to play that describes director I'll click on it here the most powerful authoring tool from multimedia production is targeted at design graphics animation and video professionals who need precise control over their interactive productions director features a complete paint program graphics and special effects framebyframe animation control two channels of sound and lingo and easytouse objectoriented scripting language director is the most popular application available for creating corporate presentations cdrom titles simulations kiosks digital publications electronic reference materials and more so that's director as you as you heard it's it's really like the kitchen sink of creating interactive content people use it to create games instructions simulations but it's key thing was that it was easy to use it was designed for nonprogrammers it had all tools in one place for you know editing your graphics managing your graphics it was also started in 1995 it was crossplatform so you could create your stuff on the Mac which was where most creative professionals started and then take it to to Windows which was a scary place for a lot of people but it you know it there was a lot more people consuming content on Windows in 1995 because that's when they made it made the the PC of multimedia PC so you had builtin cdrom builtin sound builtin stuff we take for granted now was just that's one that's the transition to multimedia and then and in a few years after that was the internet you know came in and it was that was another kind of revolution so that's director kind of the summary also I have two examples that there was this tons of content it done in director you know for museum kiosks to art projects which is a problem now because beginning at the start of this of last year Tiye 2017 Adobe decided to retire director so it's going to be harder and harder to play content I don't think I have I don't even have the application anymore it's been a couple years so that's the you know that's a dilemma of people that are in the digital world digital archiving world the word about this you know because stuff is not just with the rector you know flash a lot of other digital content is just going to slowly evaporate from our heritage because it's not available anymore so here here are two clips using director this is this is by Joe sparks okay so Joe sparks did this this was in the cdrom era so this was a interactive music video game this the backstory was you were teleported to this other dimension where you had to produce music videos as a form of energy and so you so that was the overall gist of the game you had to mix together these music videos but he had thousands of these little mini games in it and one this was a this is a demonstration of one of those mini games sledgehammer so you basically had these two robots banging each other out but there was you know great sound effects all around and you know some interesting interest in minigames another example this is actually done by Akira pause this for a second okay rasa who was a graduate of ITP back in the 1990's and he he did this as a project in my class he was doing a lot of content around Kwanzaa celebrating Khan's education educating people about Kwanzaa so this was an interactive Kwanzaa CD that he created and tragically he his son was murdered and he passed he died soon after that I think it was last year so very recently so this is to you Oh Cara you're back at ITP kind of okay here we go so this is what Kyra's so this is the interactive menu here explain into this it's a different things that go into celebrating Kwanzaa the candle listed and the different principles that you acknowledge on each of the days and you would click and so that's you know that's that was what director was people use this to create their own interactive content and you know people started companies and large careers transition to new careers using it so so so but what I'm going to focus on in my talk is the the evolution of lingo how lingo came to be and what what looking now what is fulfilling that aspiration of making programming accessible to the masses and given an onramp to to really use and make an interactive content for for the widest possible audience so lingo started these are the features the main features of lingo was that it was a dynamic language so that you didn't have to declare anything you could use you could use integers and floating points and strings interchangeably you didn't have to worry about memory and as object oriented it became more common it adopted a objectoriented features found in other programming languages and then also it was crossplatform so the same code that you wrote one place would work in another place here's a little bit of example of the syntax of lingo on this is Fibonacci which I've learned as Miss name but Fibonacci numbers this is a Fibonacci number sequence which is a classic way of you know classic beginning like hello world for programmers type to think so that's the stuffs an example the syntax lingo was influenced what I try to do is bring in as much of what I found programming languages that was powerful and easy to use and brought it in not so much from the syntax of small talk but the the the object already in this small talk was the first language to to incorporate classes fully the other language I whoops get that rid of that that I that influence lingo was Lisp I got introduced to lists when I went to MIT in I arrived there in 1977 and it blew my mind because I had up to that point I was you know I'd learned programming in high school in tenth grade learned basic which was a beginners programming language and then I was fortunate to get into a computer lab and work after school in the computer lab and there I taught myself the traditional programming language Fortran pl1 assembler but all those languages were about manipulating numbers and Lisp was the first language I saw that wasn't focused primarily on numbers it was about it was symbolic manipulation and also the the same way that you expressed the language as lists that's the same way that data was managed so data and program was interchangeable anyway is fantastic language so the friend so the first thing I did when you know one of the first things I did was write a list Liscombe interpreter and in high school I was fascinated to fulfill my fascination with languages I wrote a basic interpreter so I had I was used to you know figure I was fascinated with how languages work and how they how to actually build them so you know I was like I said was was was how it was a powerful influence and kind of weird thing now any nice coming back back then Lisp was the main way that you did AI and I think in you know in when I was at MIT they there was one okay I bubbled they built a symbolic machine where half the lab went to actually have to winter went to the West Coast tons of money poured into it you know to build a machine specifically there to run Lisp and now a is yeah very very popular now the other the other major influence was basic and I didn't borrow much from basic other than the concept of making it easy to use and so here's a little bit of basic back from the day where you just typed into a terminal and get their number of realign and I guess you know traditional program is scoring on this now because you were locked into using goto so that's crazy all right the other influence is what I don't which I don't have a example syntax for they have time to put that together is hyper hyper talk so hyper card came out in 85 and introduced this notion of stacks and an environment where people could write code very quickly and and it was the first language I saw that didn't talk in math talk you know instead of H and why it had horizontal and vertical and so it kind of flipped the script on introducing people to programming by using a human readable vocabulary and if we're in terms of referring to properties you used an expression like the the the background of card 10 you know so you you didn't use you know dot whoever it was a more English like language and they extended that into Apple into Apple script but then that kind of fizzled I think with it I think mainly mainly due to the internet programming went back to the you know especially with JavaScript went back to being something that programmers and if you wanted to learn do coding you got to pay the price and learn the you know learned the lingo I learned the language the math which I kind of kind of regret that's happening but that's that's the way this the other influences at that time this is in the late 80s early 90s was script X which was a a product sponsored by Apple which was going to be a multimedia language for for Apple computers and well in fact they formed the company Collider that was going to create this authoring environment built on script X it went bellyup and we directors director and lingo survived I'm very proud of and then another company called em propolis which had a killer interface it was a very it was a very behavior oriented so you drag and drop behaviors right and rather than writing a lot of script and it was great interface but they you know there was they had some problems they were they could they weren't crossplatform enough you could do simple things quickly but you couldn't scale it didn't scale well and so legal didn't have that problem so it survived they survived a good 30 years so that's that's that's good so the other thing that came on actually fairly recently were fairly recently recently or late in the life of lingo and director was integration with JavaScript and I think that's I I went I left Macromedia in 2001 went back briefly and that's the main thing I did was put put it put JavaScript and integrate JavaScript into director so you could either use lingo or JavaScript the other thing that happened is you know the emergence of flash and if that you know flash had a good run in fact this is still going they announced that at least the flash product is getting retired I think 2010 so in 2020 so we got a few more years for flash but people have this you know people have the same concern that it's you know there's all this content that's going to disappear because adobe has chosen not to make that software open source and so if if it was if it were open source at least people that were interested could put it work in and you know keep keeping it running on a new newer hardware so that's a challenge of a product's like flash and and director is that they're proprietary so they're at you're at the mercy of the company about what their lifetime is independent of how much interest there isn't it and I know it's complicated because you know as software gets more complicated more it license other software to be used in it so if it starts off as a commercial software it's harder to make it a non commercial stuff but what I'm what I'm doing now is I'm still very interested in making computers and programming accessible to the mass of everyday people but my focus has been in the past years on JavaScript and some other environments most of my personal work is done in native code which is Swit Objective C and Swift and stuff that's done in the browser of course has to be based on JavaScript and it you know it's pretty healthy it's going on a couple of revisions now so doesn't look like it's going away the other environment that I use and using some of the classes that I teach is call scratch it's a it's a software that's designed to be at the beginning programming language for as early as a kindergarten or middle school and what I like about scratch particularly for beginning programmers is that it's a visual environment you drag and drop the the blocks to construct your program click on click on a sprite here this is a the one of the dots that's marching across the screen that's the code for it and it's a community that we can easily share your work so you can if you see scratch project that you like you can quickly get clone it and then make your own variation on it and the community is is pretty diverse there's young very young students on it kids on on it and all the people that just come there to play so I I like that open environment open in an environment where you're you're learning by playing and you're doing it because it's fun so that's that's the kind of learning I'd like to encourage the other tool that I use which is not as popular because but it's I'm still hoping that you know it it'll have some appeal to some people it's code a chess and this is a more traditional learning environment they they teach web technology HTML CSS and JavaScript you know in a more traditional way but I see what they're doing and I'd like it because they it makes it easy they have a prepackaged that's that that high school teachers can can adopt and it's structured around a curriculum and there's there's an end certification that you can you can work towards an AP AP you know AP Computer Science so you can get college credit for it so it's you know very very good in that regard you get something very tangible actually that can save you some money and yeah and I think my thinking is I haven't seen it yet but my hope is that people can get excited about excited about a technology with the open learning environment like scratch and then get the the certification into the the classic you know what they call math rigor which scares people but you know you know from something like code HS the other thing that I'm working on is is a software called dice which is my openness this is my creative software which is all open source is built on open source technology so and it uses JavaScript as the main kind of driver for the user interface it's a favorite it's available on an app Apple store now so you can if you go if you app go to the app store and search for dice CPU all one word it'll come up or go to my website and click on the dice tab and click on the link to get to the App Store the version of dice that's in the store is doesn't have the full features yet because Apple makes a big deal about share and information off the device and one of the main features of dice in the full version is the ability to connect with other devices quickly and share information so here's a description of dice and some here's some clips of stuff that I created with dice this is primarily um my goal is to make it except make all the sensors on the device accessible you know the GPS accelerometer or the the gyroscope there's about six sensors in there and you know one artist created with this particular one is the senses accelerometers you traditionally just used to know to let a computer know the device know if it's facing up or down or left or right flip from portrait but it's actually giving you a lot of data and I just translate that data to these brush strokes so and play around with that so that's that's nice that's my latest project I hope too that you know to attract people to you both use it and build on top of it so it's in private beta now but if it'll be the it'll be open source so you can get access to it to build it either for your desktop or your eye devices by contacted me just backpedalling a little bit so yeah this issue of all this content in director and flash that's going to evaporate because the the the players for it or proprietary some people are doing some crazy stuff to get a rat work around it what is this this guy he's he contacted me through Facebook again I won't try to pronounce his name he's from the Netherlands I said Eugene I can say his first name I think yeah Eugene he is trying to create a player for director content independent of director so if you have the data the CDs with total distortion and your favorite you know art piece done in director his goal is to facilities and Lee scum yes come VM that's designed to play a wide variety of games you know from the dust from the from the ancient times so he's writing to plug into that to play director content and he reached out to me to ask for help I couldn't help him other than to say you know forward his his request to people I knew at formerly at director but this is this is his goal he wants to voices it's not he doesn't want to do all of the record just once he wants to he's focused there on director for which was the first version that went crossplatform so it's achievable but he's having a it's gonna have a hard time without the source so you know one possibility is hopefully director adobe will wake them Adobe will wake up one day and say it's in the public good to release some of the Sun enough of the software as open source that other people can can can you know keep the content alive and this releasing it to somebody like this was very motivated and is willing to do the work of reimplemented it would make his life a lot easier so hope Adobe if you're out there help this guy out you know give him a break he's doing he's doing a public service he's preserving the cultural legacy okay okay Adobe okay listening so that was actually one of my questions you just touched on is like what do we do about all this stuff cuz mutt for example my first homework assignment as a student in 2001 is a director burger man I have a dot dir files yes yeah I was actually looking for us oh maybe I'll bring in 20 show it and so is there anything that you think that we as a community of kind of creative coders who are working at open source can do you did really just address miss but to make the case for it or I think that this some I know this I think there's a petition like an online petition for flash so and I think it has like 10,000 signatures or something so it would it would need to be something like that and then there are people that digital archivists that are worried about this yeah so maybe you know maybe aligned with them or you know just lending them support saying yes yes we we would like this you know we also like one one project that the community did was to recreate a version of John Midas artwork 12 clocks which was only available in this like Mac OS version for maker and so that also could be it's not a it's not a foolproof Avenue and if also like recoding and if you have access to the source you know and that's also like another question that I have is you know having work now on environments like processing which are kind of like volunteerdriven we have a nonprofit now that tries to maintain it you know there's platforms like open frameworks and different opensource job open source projects what what was it like to work on lingo which is I think very spiritually aligned with these guys but like environments we used to teach now but driven by a company was there did you have to like check in on a regular basis how did that process oh yeah that's actually good I have to us I have a screen here for that let me let me bring it up so when I when I I was working as a freelancer for for consultant to a macro mind which became a micro medium so I was doing artwork with you know with stuff that I've written I wrote and back then everything was that was software was opensource it wasn't different but ok so I would share what i what i was working at MIT so I would share the code that I wrote with them and I would take cops code that somebody had written on you know on one one computer and move it from from the architecture machine group to the vlw so that was like that was it just flows south was meant to flow you know so that was a expectancy so when I was hot when Macromedia hired me they they told me that I had to sign something that said anything I invent from then on was the air so I put together a list of stuff that I had invented up to that point so they couldn't touch me so I have the interactive bed a shadow canvas which was an image processing thing picture piano which was this vase of this thing and I think a chatterbox which was an early interpreter which was based on Lisp the Lisp idea and I use lists for my interactive artwork because it was easy to put together quickly and I didn't have to go recompile the program all the time and you know I had a Edit I built a editor a lisp C interpreter all this crap you know so that is not crap it's all the software and I can in fact I don't have it anymore all I have is this list it's gone it's not some floppy or it did it's not a computer that's you know dead in now so it was so yeah there's a lot this so so yes so to answer your question you know it made sense for me I wanted to get paid right now and and III kind of insured myself by listing his things so in case there was a problem I could say this was my prior art you know it's really introduced at the Library of Congress a couple weeks ago and I was looking at some of their archives and they you know they've got all these floppy discs so that's the artifact right that's just the physical there are people there no more working I'm not I'm trying to like help me find this old computer and so the more that we can do to try to preserve because I think also especially like we have you know it's a it's easy to have this sort of tendency of thinking of everything that we're doing with technology is like a week old yeah these ideas have happened over and over again it's good to put a little effort into preserving it for your own you know thinks okay I I know I'm learning that now I got contacted by the the African America the National Museum of africanamerican art history and culture yes a couple years ago and they're interested in this stuff you know so even just a doctor even just to have the you know the whatever physical thing that's a remnant of phase is good and then archive is out there watching get in touch we'd love to like I loved it you know help be a force for like archiving history and legacy thank you so much for coming and for attending about your work your what if you have a question or a comment you can leave it in the comments below and all the links that that were shown during this video of everything you can find you can click in the description as well so thanks so much it's an honor to have you here I've learned a bit about the history of the stuff that I'm trying to do on this channel and okay thank you for having me it's great to be back just want to thank so much John Henry Thompson for taking the time to stop by here to tell us about his work I hope you encourage you to check out the links to look at his new project dice and to see what he's working on these days I also wanted to mention I I'm really picking myself because I forgot to ask I forgot to ask about how he got started with computers which is a wonderful story about his time as a native New Yorker we went to Bronx Bronx Science he went to MIT so there's so much more we'll have to have John Henry Thompson back again so thank you so much John for being here and I hope that make sure you check out his his YouTube channel as well and I'll link to everything in the description so thanks so much and can't wait to hear what you think about this video please please ask you please ask your questions in the comments and I'll try to relay any of them to him and answer them okay thanks so much byebye