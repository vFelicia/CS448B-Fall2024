glitch there in the video i again i'm having some trouble with youtube live but i am streaming live however if you are watching this as an archived video on youtube not watching this live i would encourage you to check this video's description as there will be links to time codes where uh certain tutorials happen as well as actually links to the edited finished versions of these tutorials which you might just want to go ahead and watch um so uh i please in the chat uh let me know if this is uh working in fact i do see on my preview screen that it it seems to have um it says stream resumed that i am live i should so i should be live on youtube and i should be live on twitch and i should have a screen behind me now i had to unplug and restart and do a bunch of things so a few things are now not set as they normally would be i will set those as i continue but let me first just say hello and introduce myself and begin what and talk about a little bit what's gonna happen in today's uh session ah can you please in the chat tell me that you see me because i don't actually see myself in the preview shoot uh um i'm gonna hit oh i do see myself in the preview now okay great okay so hello my name is dan schiffman um this is my youtube channel uh informally known as uh coding rainbow uh and what i do in this channel is make uh tutorials answer questions about creative code making art with code or just sort of learning how to program in general and the environments that i tend to use most often are behind me over here something called processing which is java based and something called p5 which is javascript based and today what i intend to do is talk through how to simulate a chaotic system known as the lorenz attractor and i'm going to use processing and use 3d in order to do that so that's kind of my main topic today before i get to that um i'm gonna i need to just make set up i kind of screwed up uh my whiteboard uh camera so i have to fix that so i have that accessible um um and then i also wanna see if people have general questions in the chat uh and also i have a online course that launched with a company called cadenza just launched a couple days ago and i said i would answer questions if people had questions about session one which is about random walker and vectors and p5.js and there's actually a really interesting question that came up about on the forums there about the keyword this in javascript it's republic versus private variables maybe i'll talk about that a little bit today because i'm sure you all woke up this morning thinking oh i wish somebody would just turn on a youtube stream and talk about the keyword this in javascript to me uh okay so i'm looking at the chat i don't see okay i see live again okay i see encouraging words in the chat like i'm actually working so i just gotta i need to come over to the computer over here which is my this is where i have a um uh and i need to uh just fix this whiteboard shot so hopefully this is going to be a really quick thing ah that worked and then i need to do one more thing which is uh um source settings i i'm just gonna fix one other thing which is i need to select this button that should have done it brilliant brilliant okay so you see that there whiteboard there you see me here there was one other thing which i needed to make sure i did before i started ah i know what it is um um i'm wearing the same shirt as in the video uh yes and this is my video recording shirt if you notice it i just also want to check my video channel my youtube channel because i i tried to start the stream like three or four times and sometimes it leaves these like stray extra videos on the channel so i'm just looking right now in this laptop under my um video manager to see if there are some by accident uh extra videos like may 5th yeah so these look like i'm going to make these private uh so you don't watch them by accident uh okay yes i understand that i can't undo this and once it started it started okay yes yes submit okay so hopefully uh you're still seeing me live everybody everything going well so the first thing i'd like to ask you guys is and i got to get back to the chat here uh live on twitch yep is um yes so the first question how do you pronounce cadenze i think that's why i've been saying it so uh let me just come up here and say cadenze this is my uh this is my current cadenze course called the nature of code which you can enroll in and watch videos for and i will answer questions about in a moment if people have them in the chat i am pretty sure that the way that you pronounce it is cadenze cadenz a like cadenz and the letter a cadenze cadenze somebody tweet cadenzeofficial on twitter and ask them if i'm pronouncing it correctly um and i've got 26 people live here i you know i i was going to send out an announcement to the course list that i am doing this and i will definitely do i mean the course is going all the way through midjuly so i'm going to do and as in you know as some of the topics get a bit more sophisticated i'm going to do some live sessions just about that week which i think to answer questions and that sort of thing was a little hesitant to use cadenza's email blasting system to announce this because i don't want to i don't want to be spamming people and i don't want to be sort of like look like i'm just like promoting random stuff but um i will think about a thoughtful way to do that um in the future i'm i'm vamping here to see if people ask any questions um put the link to nature of code in the description yes so in fact um um it takes some time but after this video gets uh archived um matia who is uh from canada has been helping me with editing videos and uploading them and writing descriptions he's doing an amazing job and so um usually you know within 24 hours he's got the time codes noted down and written into the description so um that's been like a wonderful super helpful because that's one of my i'm very i think that i'm good at turning on record and talking but i'm not so good at that after the fact like keeping things organized so that's that's hopefully going to be help um okay um so all right so um i don't see a lot of questions in the chat right now um i i might check the forum actually it would be sort of fun to just check the forum right now here live and see if there's any questions there but i also i don't know i think i'll do that in a minute um but what i want to do is talk about um the lorenz system so i'm going to at some point start what i hope will be about a 10 to 15 minute tutorial where i build this lorenz system from scratch but what i want to do first is talk through some of the kind of conceptual details behind what this system is um and so that i can kind of maybe you guys will help me with this a bit in the chat if i'm getting things right or wrong um you know what what is a differential equation uh what does it mean in in terms of like mathematics and calculus and what does that mean in terms of actual like code and writing things in software what does it mean for something to be a chaotic system what does it mean for something to be a nonlinear system where did this lorenz system come from so i want to kind of like look at wikipedia and some other resources and talk through that stuff and then i will start the part where i actually just programmed the thing from scratch um okay now i see some questions in the chat about uh the cadenze course so i'm gonna i'm gonna answer those now and then we'll get back to this lorenz stuff okay when creating vectors inside of functions you don't have to initialize them is the question asked by kurt strong um so let me actually see if i can uh pull up one of the examples um i'm going to open up this p5 editor i actually probably have an old version of the editor no it didn't didn't yell at me and so now i want to say open and documents and where where where okay let me do something really quick so by the way the cadenze course just to like for those of you who might be a little confused what i'm talking about i i mentioned already that i have this course on cadenze this course is being taught about physics systems and natural systems using javascript and p5.js i also have a book at uh natureofcode.com this the book is entirely available online as html the book is written with processing java in mind i'm actively working on a javascript version of the book which will come out at some point this summer hopefully by the before the cadenza course ends if i can get it together um so and on github um a there is a repository a github repository i'm going to zoom in on it now this particular link github.com the nature of code examples this is where all the example code is for the original book written in processing if i were to just go over here and type dash p5.js now i am at the repository where all of the examples in p5.js are and i actually want to go back for a second here and show you what i meant to show you down here is also many people have contributed ports of all of the examples to other languages so you can see there's a bunch of versions of it in open frameworks which is a c plus framework a bunch of other javascript ports a ruby port so if you are doing that maybe you're making them all in unity let me know submit a pull request add it to this readme if you don't know how to submit a pull request i made a whole video tutorial about that um i got to get back to the questions um but uh the reason why i'm showing you all of this is because i believe if i go to dash cadenze now oh nope i'll have to just go i have to find this um ah here it is so i made this is a little bit redundant but because as i made the video tutorials for the course little things about the code were like slightly different as i was like kind of doing it live so i have an entirely separate repository mostly redundant from dash examples p5.js but if you want to follow this one along and the reason why i was doing this now is i'm going to quickly just download this repository and open up the random walker example which i believe is what kurt in the chat is currently asking about so whoops let me go here and do i think i will open up this one is this using uh oops can i use it can i do that yes uh yeah okay so let's see if i can now uh read kurt's questions again and answer them as they reference this particular example and this is by the way just a really really basic simple demonstration of a random walk an object on the screen that has a position and that position changes randomly every frame so let me go back to the chat and see what these questions are when creating vectors inside of functions eg walker you don't do you have to initialize them so i'm not sure i entirely understand the question but let's kind of look at this so i would say that so a couple things one this walker function is a special kind of function now it's not special because of anything i um it's not special due with in the way that it's actually written it looks just like any other syntaxwise it's exactly like any other function function name of the function arguments however this i am using it i'm choosing to use it as a constructor function meaning a special function that generates objects and the you can see that because i am executing the function not just as calling the function on its own but with the new keyword new call the function that means the function's job is to make an object and return that object now the reason why it's capital w is just convention so this entire program would work exactly the same way if i made that lowercase w but it would completely break if i take out the new keyword now it doesn't work so the new keyword is really really the only thing in the code that's actually saying i want you to execute this as a constructor function the capital w is just a convention for me visually to see that ah i capitalize my constructor functions so i would say that the vectors that i'm using in the constructor function they have they do have to be initialized in fact they are here so position is but um but position is a vector that's part of the walker object and so it's initial create and initialize and attach to this keyword maybe i'll talk about that for those of you that might be confused by that later and velocity here is just a temporary local variable for this particular example so they are initialized do you think about joining the vectors together when adding vectors in future code example thinking so um so this is interesting so what's happening here is there are two vectors there's a position vector there's a position vector which maybe sets the position of an object and then there is a velocity vector which is explaining how that object should move um over time or just for that particular frame so the next location of the object is here so i'm adding those vectors together position plus position plus velocity equals this vector so in a way adding is like joining vectors in that the operation is you're putting them end to end but what i'm doing is saying position plus velocity and then resetting that to position so now the next position is defined as here and the circle is drawn there so hopefully that answers that question um in p5 editor wire w dot update and w dot display highlighted differently that's interesting um so i don't see them as up color differently here uh oh they are here interesting okay so i have a feeling this is i wouldn't say like a bug exactly but i have a feeling that display is some other key word in javascript uh for something so it's getting even though i'm using it naming it it's getting some so if i were to just change this to um like show and then change this to show it wouldn't have that highlight anymore and the program so i probably shouldn't use the word display since it's kind of conflicting as a keyword with something else um do vectors use floating point numbers by default yes they do except for you know the so certainly in processing the p vector class is defined with floating point uh fields x y and z javascript there's really not a distinction between an integer and a float is just a number and numbers could be an integer or float depending on like all the flexible wonderfulness of javascript or not wonderfulness depending on how you feel on a given day but um but yes everything's using floating point math essentially okay um how does programming in a group work is asked by kunjung sherpa okay so programming a group a great way of doing that is using uh git and github as a tool i mean programming in group i should say like how does programming a group works it works probably best if you can all just hang out have some lunch some fruit some tea hang out in a room together talk to each other share code draw on a whiteboard be with people now a lot of obviously a lot of large complex software projects worked on by large teams globally need some set of software tools to help facilitate that collaboration and for me currently that software tool is known as git and a web service server service that you can use to work with git collaboratively through the internet is github um so and i i have a whole set of i probably if you just search github shiffman on youtube you'll find my set of tutorials about that um okay um andrew kim asks oh and andrew kim is going to be our um set user as moderator andrew i just set you as a moderator so andrew kim has volunteered to try to be a moderator in the chat in case we have um somebody who's very disruptive which we had the other day um so um andrew kim asks how do you use the vector's magnitude versus the angle great question okay i love this there's questions today this is this is by the way what i had always imagined make videos and those things where people could watch do live sessions where people get asked questions i don't know this is i like this this makes me happy okay so let's talk about uh magnitude uh the only one thing that's not making me happy is that this eraser you know i'm really i'm doing my small part to kill the earth because it seems that these paper towels work well to erase on this white board and that eraser does not so i'm i'm gonna try to use this single paper towel today and not make too much of not ruin the earth hopefully i'm putting some good stuff into the world to uh to counteract the bad stuff um like using too many paper towels okay what were we talking about vector okay so this is how uh one thinks of a vector in a twodimensional space as an arrow defining how to get from you know this point to this point uh code wise you probably notice that vector is made up of an x and y component v dot x v dot y there's also a z and you'll see that actually when i do my lorenzo tractor example i'm going to use the z component so this is really kind of what's there in the computer when you're programming with vectors but a vector typically uh in other without can all in addition to being thought of as having components can be thought of as a magnitude meaning the length how long is that vector if you think of a vector a force is the force very strong or is it very weak is it a big long vector or a short vector and then also a direction like am i pushing in this direction or in this direction what's the direct direction and that's often thought of as an angle so when you make if you in p5 you make a vector with create vector you're making it typically with the components with the x and y components however you can access both the angle and the magnitude through functions so if this were the variable v i can say v dot mag and this will return the length of the vector and i can also say v dot heading and this will return the angle associated with that vector i believe it returns it in radians or degrees depending on what the angle mode is now magnitude will work whether you're working with a twodimensional or a threedimensional vector it's just the length of the vector this heading function is only for twodimensional vectors i mean it'll give you an angle but an angle based only on the xy plane so the direction of a vector in threedimensional space cannot be defined as a single value because you need like euler angles or quaternions or something that's going to make me turn off all the cameras and run screaming out to the streets of new york city screaming quaternions help they're after me they're attacking me um okay so that's um heading is deprecated um yeah i don't think heading so heading it used to be called heading in processing it used to be called heading 2d to emphasize that it was only for a twodimensional vector but now that's deprecated now just called heading i've been talking for a half an hour because that's when these cameras turn off by the way i'm using uh canon 5d cameras and they're being passed through this sort of black magic box as capture devices and then streamed out to youtube so this is the mark ii i'm pretty sure if i ever could get my hands on the mark iii camera it has a lot more features for doing this kind of like live streaming stuff um so someday once i start my patreon and raise a lot of money i will get some better equipment actually a lot of this equipment is on loan from nyu so thank you to nyu for helping me with that okay um okay so christopher akiki asks how is it you add velocities and accelerations and positions together i'm sure i'm missing something in terms of dimensional analysis okay so one thing is i i should say that um i'm pretty sure that that is um this particular question is covered quite a bit in the cadenza videos itself so i'd encourage you to go check those out um but basically um adding vectors means like i said before putting them visually it's putting them end to end you know obviously when you're adding numbers you use the plus sign to say 5 plus 6 equals 11. if you have vector variables the plus operator does not work with vector variables because plus the plus operator the computer only knows how to interpret that as adding numbers so there is if you have a vector v1 and you want to add it there is an add function and so um so that's the way you add now acceleration is the rate oh this is perfect because this totally relates to this idea of differential equations that i want to talk about but acceleration is the rate of change of velocity velocity is the rate of change of position so acceleration gets added to velocity as it change velocity is changing over time based on an object's acceleration and the position is changing over time based on the object's velocity so this is like a perfect segue into the lorenz attractor stuff but i'm just going to check the chat really quick before i get to that um heading is a weird way to name that i agree it could just be direction the reason why it's called heading is because typically you might use it to let's say you have um i can just pull up um uh hopefully this is gonna work uh so this particular example um if you look at the this is my flocking example and i will uh this is covered this will be covered in detail hey where did everything go look at this i got a bug report somebody file a bug on uh github.com processing processing docs um the processing docs repository uh tag at shiftment in it if you or um and say uh i need to fix this example to have a wraparound so the flock doesn't leave i don't know i thought that was in there but the borders function for whatever reason is not being called this borders function to check if they're at the edges so someone file that on github because i will fix that but what i wanted to show you before they all run away is you can see each one of these triangles is pointing in the direction of its velocity so as it moves it's rotating in that direction look they're still here they're going to go away are they going to come back now i don't know maybe they're maybe they're just oh wait now it's working don't file that bug oh is it just maybe it's just working left and right but not up and down that's interesting look go down and they're not coming out the top oh and it didn't even work that that's weird oh maybe it works only on one edge i don't know i have to investigate that and fix that but the point of what i'm saying is that um you often want an object moving pointing in the direction that it's moving that's its heading so to speak so you rotate by the angle of the velocity vector um okay lucas king asks this is maybe a dumb question i 100 do not believe this will be a dumb question but i was wondering what's inside the random function how exactly does a computer generate random numbers oh my god this is the farthest thing from a dumb question whatsoever in fact this is a phenomenally important question and it is really a fundamental question to how generative algorithmic systems work and are developed so um you know without i would love to make a particular video maybe just on this topic uh and maybe uh implement some random number generation in a video but let's just sort of say the key term here is pseudo random numbers so randomness right if you think about what randomness really is is it is a uh let me pull up my examples actually this is so i'm gonna i'm gonna go in processing i'm pretty sure that i have all my nature of code examples here so i should have random graph so um whoops processing quit unexpectedly oh boy okay come back processing let me close this window um okay so what i want to talk about is random number generation and let me i'm going to interpret so by the way if you don't have the nature of code examples in your processing you can get it by going to uh clicking add examples and you'll see here all you have to do is click nature of code and click uh install down here but i've already done that so what i'm looking for is in the introduction i'm looking for a particular example called um random distribution interesting i think that's what i'm looking for random graph i was also going but let's look at random distribution so i'm going to run this example so what this example is demonstrating let me run it is it is picking a random number 1 2 3 4 5 6 7 8 9 10 11 12 however many bars there are and each time it picks that random number it raises that bar so if a perfect random number generator would give you a completely unpredictable random number every single time you ask for it but over time you would get a perfectly even distribution of all numbers right it should pick the number five just as many times as it picks the number eight so now randomness you know if you had some kind of like fancy machine that like measured the movement of electrons around like a nucleus you could there's probably some like thermodynamic perfect randomness there that you could measure and in fact i think some um this becomes a question for like online gambling software like a poker online a poker gambling software that needs to produce a random shuffle if you could reverse engineer their random number generator you could hack their system and know what cards are coming and do a lot of nefarious things so i i feel like i remember reading like an article about some like online poker company that actually had like a bank of like these machines that were uh bubbling up like gaseous particles and using that to measure randomness but in processing that's not happening what's happening is it's using something called pseudo random number generation oh i would i wish i had a great prop here which i'm going to refer to this in a second so pseudo random number generation is this idea of oh could we find a mathematical function that if you passed a number into it it would give you sort of another number back and if you fed that number back into it it would give you another number back and those numbers over time would exhibit the properties close to sort of perfect randomness and that's what's happening there's just a mathematical function you know people probably spend their lives researching or their phd dissertations inventing better pseudo random number generation functions um but you could see that for for as a creative coder somebody making an art installation or whatever it's fine if it's like you know not the best um the most perfect random number generator um and over time this the random number generator that processing is using would in fact exhibit a pattern now i'm going to show you i i think i actually dare i say i think i worked on some of the implementing the random number generator for p5 so i'm going to go to um so i know where it is i apologize if i'm wrong and somebody else did it but i'm going to go in the p5 under source under math and go to random and you can see here ah yes there it is so this is the random number generator function that's in p5 it is called a linear con congruential generator a variant of a lehman generator and you can look up this wikipedia page called numerical recipes and you can see that it is just some function it uses some arbitrary constants and then it runs this code and gives back a random number generator and what's key about this though is that there is a seed and um uh what's so funny about this is so okay so random number of generators need a seed and the seed is the first number that's passed into it to get the first random number generator this is actually incredibly useful because if you always want to get the same if you want to get random numbers but you want to get the same exact sequence over time you can set the seed and there is a function both in processing and p5 called set seed so let's say you are making a a generative poster design program and your program generates these poster designs and what you want is to run it a bunch of times and generate a pdf and you it's going to be random but you want the exact same one every time and then maybe you want a different one or you want to be able to like go back and get the one you had before you could always set the seed in your setup function um now you could set uh you could just send it to like the number five or the number 63 what's funny about this is pro p5 and a uh p5 grabs a seed from like the native javascript random number generator if you don't give it one which is kind of funny it's using somebody else's random number generator to get your random seed for your random number generator and if we looked up in the processing source code i'd love somebody to go do that let me know you can see how it's seated you know sometimes random number generators are seated based on like the number of milliseconds since the computer booted up or the time of day or the mouse location on the screen you've got to come up with something that's kind of randomish to use as a seed okay so hopefully that helped uh um it a question here's another question actually i probably missed some questions uh okay um is it really important that you write unit tests for the programs you write you are so asking the wrong person this question because my answer is definitively no it's not important however i'm sure there are many instances where it is quite important and you'll see that large software projects that you know really need to be working and not have issues and are managed by large teams having unit tests can be an incredibly valuable uh tool to as you make it what does a unit test do by the way so a unit test is something that runs separately when you make so let's say you're building a library like p5.js and you change the code in the library the unit tests are programs that run using your new version of library and check to make sure things aren't broken and they can do that by you know testing certain functions knowing what the answer should be seeing what the result is and comparing it to the known answer so what i what i would be um wary of as a kind of you know prototyper maker of things sketching out ideas you don't want to get so lost in making unit tests for your thing that you never make the thing itself so you know and a lot of things you're doing if you're making an interactive project what i would say is more crucial than unit testing is user testing so you know you can get is the program working does it make sense does your idea communicate what you want to communicate through users so i would say user testing is really important unit testing i would sort of it sort of depends on the scenario um oh yes okay so andrew kim mentions um mentions what i wanted to mention i have this book but it's at my office at itp so i don't have it with you but i'll bring it up now which is a million random digits so back in the old days olden times uh let me just see if i can google image search this um uh the um you know if you didn't have a pseudorandom number generator or it's a computer super computer to generate random numbers for you and you wanted to do some type of what's often referred to as a monte carlo simulation simulate out some idea ran with random numbers over and over again this is actually a book published by the rand corporation with just like pages and pages of sequences of random numbers and incidentally you know how i was saying before in processing that um that these uh what you want is an even distribution of random numbers that's what you want for a pseudo random number generation with a i don't want to say normal because normal is another word for the gaussian distribution uniform that's what it is this is known as a uniform distribution where you have an equal probability of any number being picked at any time but this is not always what you want perhaps you want to pick random numbers but you want to pick higher random numbers more often than lower random numbers when i get to genetic algorithms in my cadenza course you want to pick randomly you want to pick randomly from a population to make uh the next generation but certain members of that population should have a higher probability of being picked and then of course there are wellknown distributions and i'm going to try to uh i think this particular sketch this is the the bell curve or a gaussian distribution so if you want to simulate um heights let's say you want to simulate a a collection of people and you want to pick heights for those people randomly well and p and you decide that in your alien world peop aliens forget about people aliens are between three feet and seven feet well maybe there's a sort of average height around five feet yes five feet that's the average of three and seven but most people cluster around the average so you would want to more often have people that are around five feet and less often so this is showing you the probability map of of how often you want things and that's known as you know bell curve is uh you know with um you can see is there a y distribution a very uh thin distribu thin distribution um i need to take a drink of tea here i just like i lost steam for a second but hopefully that makes sense and helps you guys peter quan says that his company logo is a gaussian curve um it's only important this is uh nuna costa makes an excellent point saying it's only important to have unit tests if you don't want your flock of triangles to fly away so yes you can see that if there was some type of unit test to test the examples there on the processing website it might have caught that but i would say another unit test for that is uh you know the collective consciousness the collaborative what's the crowdsourced error reporting um okay um so a nine cat fan asks uh how andrew got moderator so what happened the other day just to mention and i should check twitch i apologize um a galvabart on twitch asks if this is live yes it's live um uh so that that proves that it's live by me checking twitch real quick um so something happened the other day where somebody came into the chat and was using some kind of offensive language and just filling up the chat with like a zillion comments and i didn't notice it for quite a while and then i went and just turned that person off um and so um i think it's useful just to have somebody in the chat who can kind of make you know as best they can just kind of decisions about that if we have someone that's there that's um you know so disruptive that it's that they need to be muted um and so andrew volunteered to do that and i assigned to the moderator if anybody else wants to uh be a moderator i uh you all seem like nice lovely trusted people i'm happy to make all of you moderators okay i don't know what you get to do as a moderator um it would be great if what you could do is alert me when my sound battery dies but i have a new system of charging the batteries overnight and i've got three bars each okay so i've been streaming now for about 35 minutes and i think i want to start getting to um um i think i want to start getting to my lorenz attractor coding challenge so i'm going to kind of poke around some urls here and get set up for that okay let's see loren's system okay so okay first of all if you guys don't know about paul bork basically paul bork has a website i think which outlines every single coding challenge i want to get to and just has an explanation of the code for it so you really just turn off my stream and i should just basically say thank you paul bork if i ever make any money from this i need to send you some royalties um paul bork uh paul bork i'm just gonna search lorenz so uh paul bork and maybe i'll go to paul borg's uh main url uh has a public i believe is a researcher located in australia in sydney and there's a lot of papers and pages and a lot of these are from many many years ago with like you know very simple c code implementing a lot of these kind of classic computational algorithms and so one that i want to look at today is the lorenz attractor and you can see this is paul bork's page where there's a nice explanation showing the formulas i want to talk about like ah these formulas look scary what do they mean this is some of the example output and then what i want to show you as i scroll down here is to show you he usually also always has just the kind of some really basic c code and you can see that the c code is actually not drawing anything it's just an algorithm that's printing out the xyz coordinates of the result of that algorithm so one thing i could do is take this and like paste it into processing and translate it into java and add the sort of drawing stuff but i think what i'm going to do is when i do the tutorials build it from scratch by looking at the formulas and trying to understand them because i think that might in the end actually be a bit more useful but i want to make sure i reference paul borg's site because i have learned so much from this site the other thing that i think is worth mentioning is like so on the one hand why am i here doing this i think it's valuable to learn these skills to unlock new ideas and possibilities in your head be creative with them play experiment and teach others there's all sorts of possible things i do know that there is this sort of thread this conversation that happens in the kind of computational art world so to speak which is you know is this like a cliche like if you take this exact algorithm generate it pick some colors and print out a you know pdf of it and put it in an art gallery on the wall is that good or bad or good you know what's what have you done there so i'm going to completely stay away from that question i do think that it's important for you to think about if what's the context of how you're using these algorithms and why you're using those algorithms but i'm going to leave that for you to discuss to tweet me to discuss it in another context uh that's different from this and my goal today is really just the tutorial aspect of it and um you know i think there is a lot of value in recreating things that other people have made to discover something new to learn about it to be inspired by it um and also just as practice so to speak so so that's uh spectron asks will videos be recorded oh spectron says i feel like i'm getting ignored oh i don't want that to happen um uh oh kendall okay sorry i see now there's a question um spectron asks if i'll get back to lorenzo tractor i don't want anyone to feel ignored can you link a random number on a range with random and transforming it into a normal gaussian distributed random number okay so this is a great question how do you get that different range this really merits a whole separate tutorial just about that i definitely have some in my youtube nature of code playlist different distributions of random numbers i recall making some videos like that but for processing the random function does not do that for you it just gives you a uniform distribution there is a function processing called random gaussian which will give you gaussian random numbers uh there are java classes for this i'm sure there are javascript uh libraries and frameworks which will do this for you also but ultimately you need your own algorithm to specify to like manipulate the random number generator and um in the cadenza course i actually go over this also when i get to the genetic algorithms part uh okay um yes uh okay um uh oh yeah and spectron by the way makes wonderful coding challenge tutorial videos in french so if you're french uh check out spectron's channel um okay um now back to the lorenz system okay so that's that's my introduction to what it is i'm doing now the one company i want to read a couple things to you guys which um which i will keep in my head as i start so the lorenz attractor it was uh first study by someone named ed lorenz this is from 1963. uh thank you paul burke for providing me with my materials to read um and it it was derived from a simplified model of convection in the earth's atmosphere so it's interesting about these kinds of algorithms something known as a strange attractor or a chaotic system they're nonlinear systems is that they are models of things that exist in nature where uh if you are if you plug this sort of initial variables into the system the output is deterministic meaning it will happen exactly as the math dictates however if you change the inputs ever so slightly the output will be wildly different so that that's sort of the chaos of it it's unpredictable it's nonlinear meaning a slight change in an input value makes a massive change in an output value this is also known as the butterfly effect right a butterfly flapping its wings a slight change in the earth's atmosphere would cause some major event you know volcano eruption on the other side of the world whether that that actually happens with a butterfly is i think an interesting question to discuss but that's the idea here so this is an example of a system like that okay now those systems exist in nature those systems are defined by and i'm probably going to repeat a lot of this when i start to like record the actual video tutorial maybe i'm doing it already but i want to make a kind of condensed version of it that focuses on the code so i'm kind of talking it through to kind of remind myself how the stuff works and and rely on you in the chat to say actually you're getting this wrong if you if you think about so now this um all runs on a differential um a differential equation so this is what i wanted to try to sort of wrap my head around trying to explain in the sort of creative coding context because you could definitely go and watch a kind of like what is a differential equation video on cod academy or other you know math type lecture type materials but it will be very focused on the sort of calculus path you know derivative and integral first derivative second derivative that sort of more abstractly and so what i want to try to describe and i'm going to do this probably a couple times um is uh what is a differential equation and how does how does it how what is a differential equation just sort of higher level and how does this abstractly um how does this abstractly i'm sorry i'm apparently i can't do the thing where i tap my head and rub my stomach because i can't think while i'm erasing how does it why is a differential equation relevant to a creative coding context so another resource that i think is useful for this is this particular url myphysicslab.com i'm sure you could google for this and i'll include a link what is a differential equation and this i think is a really nice succinct summary that sort of stays away from some of the kind of calculus aspects that are unnecessary for what we're doing although important and interesting in their own right i'm just checking nobody is complaining in the chat yet a differential equation states how a rate of change a differential in one variable is related to other variables so let's think about this in the context of nature of code physics simulation you have a position and let's just think of a position only as an x value so position along a onedimensional axis you know you could say the change in x so okay so this position can have a velocity which is the change in x over time this is often written as dx over dt equals something this is essentially a differential equation um how does the how do certain variables affect the rate of change of other variables um and let's see another let's let's look um let's look at this this is described here as like a a spring uh oh a spring is a great oh i'm sorry i came over here so a spring um is a great um is there anything like am i doing anything wrong by using other people's online materials to do this teaching anyway hopefully now i would do this in the classroom but somehow when i'm broadcasting this and then i don't know but hopefully i'm just i would be happy for somebody else to use buy stuff that i put online so i hope it's okay i think anyway i'll keep going to keep going here the rate of change um okay the rate of change in velocity is proportional to the position so let's think about that in in the spring context um so if you have a spring which i could draw like this i was actually thinking of a pendulum when thinking about this but i think spring is good so in other words aha if you pull this out really far if you stretch that spring really far then um then it's going to uh spring back really fast so it's position that the velocity of this spring is relative to its position so that's the differential equation how is its velocity the rate of change of its position related to the variable position itself so that's kind of like the basic idea of a differential equation how does the difference of a variable affect uh let me look back at how that was described here again because i said it wrong uh the rate of change the rate of change is the differential and by the way this derivative uh uh is uh is another way of saying kind of rate of change um so in one variable's rate of other values so that's the idea so now if i go to wikipedia we can see aha this gives us a little more sense of what it means for the what these lorenz equations are lorenz equation is keeping track of the rate of change of a particle in space in three dimensional space how does the x change how does the y change how does the z change and it changes based on its position also it's x it's wide at z and some other constants you guys are gonna have to help me with this sigma rho beta did i get that right that's the greek letter sigma lowercase the greek letter rho and the greek letter beta the other half of my family is greek so i should know this stuff um uh let's see um so somebody in the chat tell me if i got say you got your greek letters right you got your greek letters wrong because i would really like to know that um okay so i think that's so what i need to do now is translate this into code so that's my that's my introduction to the idea of what is the lorenz attractor and what is a differential equation and how does and how does that relate to code the next thing is to actually program it so i'm gonna as much as i should probably practice programming it and then record and then start the actual lesson i'm gonna i think i'm getting ready to do the challenge i'm gonna set the timer i'm gonna give a quick introduction and then refer to this and then start programming so leave me your feedback or comment in the chat right now if i got anything wrong or anything was confusing or that sort of thing i got my greek letters right somebody said that's lucky okay so let me i'm just gonna erase the whiteboard here i'm going to i think i'm going to do the same explanation about uh differential equations and then i'm going to refer to the wikipedia page and then i'm going to build the code and let me actually run i'm going to you know i i have a version of this example which i cooked up this morning really quick so let me open that is that open already or no um sorry uh open recent it should be here uh strange attractor okay so this is i just want to have this running okay so oh camera that went off okay so um this is the oh i guess i made some changes to it and didn't save those changes um because whoops okay hold on i have to fix a couple things uh i'm just gonna i want to have a visual reference running when when i start i swear i made these change ah weird did i restart the computer or change the name of it or save it somewhere else that's really weird uh hold on everybody i i have to um i'm just gonna save this as uh underscore and then uh i want to take this out and i want to put um oh that's right okay i just want to check make sure this is working you know why i lost the three the z oh right okay no wonder bear with me for a second everybody while i get this working okay so this is essentially the example i'm going to build from scratch and actually i'm also going to do another thing here which is translate by a negative like 80. i believe would be the middle if i'm right about that no no 0 0. i want to put it back a little bit yeah okay that's good i wanted to sort of rotate around the center uh and so let me see here then i want to open a blank sketch which will which i will program oh i mean the uh let me just do save as lorenz um okay uh 800 600 this should work pretty well this will be where my code is this is a visual reference to start with i should have maybe i should have this spinning automatically i'll put that back in uh since uh shoot here we go actually i kind of want i should do this right okay sorry everybody i just had to uh oh no i do want to uh rotate before i translate yep okay there we go okay so this will be oh and you know what i should i kind of want to be able to click the mouse and have it restart so i can when i'm making the video so if uh so if i click the mouse it will set these things back and clear the arraylist oops i'm about to be ready to do what i'm doing okay so now if i click the mouse it starts over oh look at that is it starting in the right same place each time yeah okay um okay just checking um i'm not sure x y z refer to position well the thing is you're you're okay so um i'm just checking okay so christopher akiki makes a good point that x y and z don't necessarily refer to position but i'm choosing to visualize the system according to position and actually if you go to paul borg's site he has some sound files where the the values that the lorenz attractor produces are used to like set midi note values and it plays a little song based on lorenz attractor values so you're right that they don't necessarily have to refer to as position but um that's what i'm choosing to use and that's how you get this visual result okay so here we are about an hour in the wiki says they are the state of the system yeah so that's right state variables that makes it i mean they're defining the state of the system so and uh um so how do and i'm visualizing the state that's a good i think that's an important point that i'm probably being kind of muddy about i don't think i ate a big enough breakfast i hope i'm gonna be able to do this coding challenge all right um the whiteboard is clean i have my wikipedia page um i have camera working so all i really need is this uh radar i could refer to these sites as well if i want to and there we go okay so i think ah now i want to get the timer going uh again i'm not going to do a timer counting down like i have some deadline i have to hit but it's useful for me to just sort of see how long it takes and have a sense of it um and the ideas for these coding challenges except for the multipart ones to be between 10 and 20 minutes because that's i think kind of a good attention span sort of thing okay so i just need to add that in putting this here there we go so you should see it now there and then i just need to change this to stopwatch there so it should be in both shots now the timer stopwatch thing and this is here and i can restart this and you have okay um yes um matthew van den heivel hovel asked will you teach us to code it from scratch this is exactly what i'm planning to do i'm to program it from scratch actually though i want to have that reminded me that i want to at least put in setup and draw and size you know i don't know some arbitrary size and i'm going to say that's fine i'll put in comments later um and there's something else about this that i wanted to do ah which is the font size is this font size reasonable can you guys let me know what do i have it at 36. um you know often what i do is sort of zoom into the code anyway while i'm showing a particular part so let me know if that font size seems reasonable okay 42 people are watching i'm going to check the twitch chat which i've been ignoring yes everybody on twitch the main the most frequently asked question on twitch am i live i am live it is 12 p.m right now in new york city and uh zorizei asks is the guy with glasses that's me the guy with glasses live okay here we go okay thanks for your feedback okay so i'm gonna start this now hopefully not screw it up too much again this thing will be uh this i'm hoping will be about 10 to 20 minutes uh and then i'll see what i have sort of time and energy for after in terms of questions um and um yeah so that's that have a little sip of this here i have trouble getting started as you guys can see you know it's like okay here we go so first thing i have to do is click move this over i have to click start here oh and then i want sorry then i want this open oh and i want the wikipedia page um uh okay yeah i mean the interesting thing about a differential equation is you're not solving for numbers you're solving for a function that satisfies the differential equation but i i can't go too far down that road in this particular video because i want to focus on the code but i would like to see if i could connect the dots a bit more with some of the math maybe somebody will have some suggestions for me okay so here i go uh click start here hello welcome to another coding challenge in this particular coding challenge i didn't get the thing didn't start let's start over again hello and welcome to another coding challenge in this coding challenge i am going to program the system you see over here on your on your right which is the lorenz attractor system how do you what is it why does it exist how does the math behind it work and how do you write the code for the system from scratch this is what i hope to tackle in about 10 to 20 minutes and we'll find out at the end of this video how long this took so there's a lot of references online that you could read about strange attractors chaotic systems all that sort of stuff i'm gonna just sort of pull from the wikipedia page um and and and and and highlight a few key points and the formula before we start writing the code for it so one thing that i'll point out here is this lorenz system is a system of ordinary differential equations so first thing we have to answer is what is a differential equation so if you are a programmer here watching this video you've probably maybe worked in processing or p5.js or done some other things let's think about a object that moves on the screen you have a circle and it's moving it has an x position that's changing over time you might think of that x position as a a variable called dx and it's and its actual x position is x and you would say x equals x plus dx so now another way of thinking about how this system works is this idea i got to start over i got to start over sorry buddy i i don't want to spend too much time on the differential equation part and i was heading down a road that i didn't like try this one more time you you guys are very kind and patient to bear with me but i kind of want i want this video to be particularly good i don't know i'm going to come back over here get myself set up again okay oops i got to close this i also don't recall if i actually cycled the cameras oops um and hold on a second make sure this is working oh boy ah shoot i gotta fix now i screwed this up i'm putting the timer in the right place again and put that down here okay um okay sorry about that everybody uh is this working yes and ah okay okay uh rate of change of one oh sorry how the how the rate of change of one variable is affected by other variables and then what is the rate of change spring example that sort of thing okay uh i see things are happening in the chat again i don't know what they don't seem to be related to okay here we go everybody sorry about that i'm going to try this again hello and welcome to another coding challenge in this coding challenge i am going to implement the system you see over here on the right called the lorenz attractor visualize that in 3d in processing all in one session here which will hopefully be about 10 to 20 minutes we'll see how long it takes i've got a timer running up there okay so before i start actually writing the code for it i want to talk about what this system is why does it exist why is it interesting and how does the math behind it work on a kind of you know higher level and then we'll start looking at the formulas for it and implementing those formulas in code okay so lorenz system you know there's a lot of resources for this online i'm going to put a few in the description of this video a paul bork site is a particularly useful one that i'll just mention really briefly but i'm going to look just at the wikipedia page here which says the lorenz system is a system of ordinary differential equations okay so the first thing we have to tackle here is what is a differential equation i could easily i got a timer writing here i could usually be here for like the rest of the day talking about differential equations and confusing myself over and over again but the basic idea of a differential equation is an equation that looks at how a certain variable changes according to other variables how the rate of change of a variable is affected by other variables in a system that rate of change being a differential so let me give you an actual practical real world example that might help solidify this understanding let's say you have a spring okay so i have a spring connected to a wall with a bob at the bottom and you could think of this spring as having a position called y how does its y position change over time that's often written as the change in y over time you could think of that as in programming speak as y equals y plus the change in y right every frame of animation y changes but it changes based on its uh the rate of change of y actually changes based on the y position itself if you pull it all the way down here how fast it's going to spring back is going to be much more than if you pull it over here so d y over dt the change in y the differential of y is a function of other variables in the system itself y itself this is a differential equation and so you know this actually comes up all the time in programming you have position you have velocity velocity being the derivative the rate of change of position this is a something that you'll see over and over again and here the lorenz system is defined by these particular differential equations the rate of change of x over time the rate of change of y over time and the rate of change of z over time now these variables x y and z those are those define the state of the system but i'm going to use those literally as x y z positions to visualize uh this particular to get this particular structure so if i look at those posit those those values the state x y z over time and draw them with colors and lines i'm going to see this particular um this particular system so why is this system interesting it turns out that the loren system which was you know invented or discovered in 1963 by eduard edvard eduard edward edward lorenz um you know he was studying meteorological conditions the flow of the atmosphere this type of thing it's one of these chaotic nonlinear systems meaning whatever the inputs you feed into the system you feed some inputs into the system you calculate that system over time it's a deterministic system that will produce an exact result every time with the same inputs but if you change the input ever so slightly you could get a widely different output it's nonlinear a tiny change to the input makes a large change to the output this is the butterfly effect a little butterfly flaps its wings changing the air just a tiny bit in the uh outside on one side of the world and on the other side of the world a giant volcano erupts okay so this is this idea of a nonlinear system it's chaotic it's unpredictable and a lot of these types of systems exist in nature and this is one particular example of a model of that type of system okay so now let's look at these formula and let's try to figure out how we're going to actually make this happen in code i think we're ready so we know that i need three variables an x a y and a z so let me go to my uh program here and i'm going to close this one and i'm going to start writing some code from scratch and i am going to give myself an x and a y and a z and i'm going to give them some initial values like that okay so we're good so i saw those equations i know i need an x a y and a z so that's a good start now one thing i should mention really briefly as i'm about five minutes into this is that notice i defined those values as floats if you look at examples you'll find on the internet often the the data type that will be used is a double a double being just like a floating point number but having more decimal places and sometimes with these systems you really need a high degree of accuracy but i'm just some person here on the internet programming colors and things on the screen i don't care if it's a little bit not so accurate and float is a bit more native to processing so i'm going to use floats um okay so now what i need to figure out is i want to kind of implement these equations so let's just start with x the change in x over time equals sigma that's the greek letter sigma times y minus x so first of all i i can't use the greek letter sigma easily in my code so sigma i'm going to make a row i'm going to make b and beta i'm going to make c which i realize is a bit confusing but that's what i'm going to do so those are constants by the way i need constants for those values so let me go back to my code and i'm going to say a float a equals one so i'm just going to start with the constant one now what i'm going to do is have this particular calculation happen over and over over time right it's supposed to happen over time time this is the interesting thing about this those formulas the change in x over time those formulas are talking about real life time that's continuous our time in processing is frame by frame by frame so every cycle through draw is one unit of time so what i'm going to say is that the change in x equals that constant times what y minus x y minus x and now x equals x plus that change in x it's really that simple right i'm just taking that exact formula that says the change in x over time equals the constant times y minus x and now change in x just means change x by that value x equals x plus dx so i can actually start to go and implement y and z the change in y and the change in z and i just need to go back and refer to those formulas again x times b minus z minus y oh god i hope i get this right this is hard to do oh no sorry x x times b minus z times y did i get this right minus y i i want to have spaces there what's wrong here oh it doesn't know what b is i'll fix that later and now the change in z is x times y minus c times z so it's x times y minus c times z so this should be good and now i just need to get some spacing here and i need to also add two more constants float b equals one float c equals one and now i need to just change x y and z x y z x y z y z d y d z okay so this is the idea i implement those formulas directly from the wikipedia page to calculate the change in x the change in y the change is the and then actually change them now here's the thing what is my time there's a weird sort of thing that i'm going to bring up here which is my time step so right now every frame is like a singular unit of time but the the pattern that i'm going to draw right is going to look you know i'm not going to it's going to look something like this and in the sort of continuous world i was moving this marker continuously but in the processing animation world i have point point point point point so how close and i might connect those with a line so do i want to see my result look like this or do i want to see it as more continuous curve how fine do i want those to be and that's the sort of d t right if you think about oops i'm going to come back over here right really i'm saying dx over dt equals something so what i want to do is actually take that something and multiply it by dt what is the change of time for each frame so what i'm going to do is also introduce a variable called dt and i'm going to say it's like zero point i'm just going to make that one for right now but i'm going to take the whole thing and multiply that by dt for each one of these to sort of scale and i'll show you how different that's going to look um as we as i continue doing this so now we've got those formulas implemented now we've got to see is anything working correctly here so i need a way of figuring that out the first way i'm going to do to figure that out is first just make sure i the program runs i'm going to add a black background and i'm going to run it and okay so i don't have any errors that's a good sign you know one thing i could do is i could say print line x y z so i can sort of look at what's being printed out now notice something here all i'm doing is getting the values of zero so there's a little bit of an issue here which is that that doesn't make any sense so i can't start with zero zero if i start with zero zero zero these formulas are only ever going to produce zero zero zero so i gotta modify the inputs a little bit and i'll just start with x as like 0.01 that should do pretty well and if i run this again we should see like look i'm getting some interesting values there now what are these values producing anything of note not really but why not well because my constants i just made my constants one one and one so the lorenz attractor works a particular way based on what those input constants are so if i go back to the wikipedia page i could sort of find somewhere on here it's going to give me some values i could use like sigma equals 10 rho equals 28 and beta equals 8 divided by 3. so let's use those constants i believe sigma was a b was um b was 28 and c was 8 divided by 3 and i'm going to do that just to make sure i get a floating point value okay so i think that should work i'm like skeptical and we should see oh not a number okay so what have i done wrong here i might have to time out this video see how long this debugging takes and this might get edited out if it starts to take a really long time but let's look here um so what have i done wrong here uh xyz z so let's let's comment out and just do x for a second and see what i get oops and i just want to look at x oh i had some numbers and then i got not a number for y so i might just be like one is a terrible number for dt because i'm like it's as if i'm teleporting myself through time massively fast so let me just make this 0.01 yeah okay this is more like what i expected to see well those numbers are getting incredibly small i hope i implemented this right i have to check my formulas but let's go back here and see if i'm getting some reasonable formulas okay good reason okay so this is better this is what i expected to see okay great so now i'm seeing some numbers that make more sense so my issue there was literally just having and maybe that won't get edited out was just having the number one and it just sort of went off to infinity super fast these systems um they don't have a recognizable repeating pattern and they tend towards they're often 10 towards infinity or some like nonexistent value okay so let me go back to 0.01 now i want to be able to figure out is something actually working here so the first thing i'm going to do is just say stroke 255 and i'm going to i'm also going to translate to the center of the window and i'm just going to draw a point and i'm just going to do this in 2d so i'm not going to worry about the z i just want to at least see like let me plot those the state of the system over time with x y so let's do that and ah good this is very good so it looks like i did the formulas correctly you could start to see like that's something there so i'm actually we're kind of like we're trucking along here i've got the lorenz system like sort of visualizing right now so that really basically i'm done however i want to make this look like something i want to make this look like a 3d shape i want to maybe add some color to it i want to be able to spin around it i want to i need to do more with it maybe i want to be able to like explode it so that all the points should like fly off of it and come back so i want to do even though in 13 minutes we kind of got the math down i want to do more with this in terms of the visual output of it so um so let's go forward with that so the first thing that i'll do is let's just go ahead and work in 3d so i'm going to change the renderer to p3d and then i'm going to add the z point so we should see now that um it's the same it looks pretty similar but there's actually a z value there now one thing i want to add also is just i want to use the uh the processing function scale so scale is a transformation you can add to your scene to kind of like stretch it out a little bit i'm not going to get this through zooming in and out as well but i just want all the points to be sort of spaced out a bit more and look a little bigger so i'm going to basically scale everything by five so we can see yeah so this looks so now i kind of have a bit of a closer view you can see all the points of the lorenz tractor are being plotted in 3d now here's the thing how am i getting all these points on the screen i'm just drawing one point at a time well notice how my background is in setup so this worked just to see that the system was working but it's not going to be a very good solution for eventually over time being able to manipulate this system so what i need is some sort of data structure some sort of list that i can store all the points of the lorenz attractor so let me do that and what i'm going to do for that is an arraylist and this is where we might rather be in javascript and i'll try to make a javascript version of this as well i'm going to call that points i'm going to make that a new empty arraylist so this is the syntax for something in java called an arraylist which is a flexibly sized array something i could just add to and i'm calling it points and the data that i'm going to put into that arraylist are p vector objects why do i want a p vector object is because every single frame i'm going to say points dot add a new p vector with that x y and z okay so i want to add a new vector with x y and z to that particular array list and we can see that this is still working nothing is broken yet and what do i want to do now as those points are being added over time i want to draw all of them because i need to erase the background right so let me let me just show you what i mean i'm going to move this background to draw this is actually going to produce kind of an interesting result because now you're going to see this point i kind of love this just moving along the pattern of the lorenza tractor it's kind of this beautiful interesting kind of chaotic motion i just want to stop and watch it but i'm 15 minutes in i want to see if we can wrap this up in about 20 minutes so i'm going to keep going so what i want to do is instead of just drawing the existing point what i want to do is say for every vector v in that array list points draw a point at v dot x v dot y and v dot z so i'm now saying instead of just drawing the current point loop through and this is known as an enhanced loop in java for every vector v in the arraylist points draw a point at v x v y v y v y v y v y v y v back after a technical hiccup you can see that the entire lorenz attractor is drawn with each element as a separate point based on every p vector that's in that array so really essentially i'm done there you go it's in 3d that's the entire lorenz attractor shape but i do want to add some more things to this and give you some exercises to think about what you might do with this so first let's just change the way we're drawing this a little bit one thing that i could do is connect all the points with a line so instead of drawing everything as a single point i could actually set the vertex of a shape so if i say begin shape before i draw all the points and end shape after i draw all the points with vertex instead of point what that's going to do is connect every point and you're going to see now that whoa it's doing it but it's actually trying to fill it in as if it's an entire shape so there might be some interesting things i could do with that but for now i'm just going to add no fill and we're going to be able to see now this continuous line so i could zoom into it and sort of see that every point is now connected right so now we have this continuous shape which is a nice start of sort of seeing how i could sort of tinker with how this is visually i could also try to come up with like a clever way of changing the colors of it i'm sure that you as a wonderful person on the internet with visual design talent will do something much more interesting but i'll just show you really quickly i already have that in there because i that was from the technical glitch but i could add something called color mode and i could change the color mode to hsb meaning hue saturation brightness so what i could do is set the stroke of with a some sort of hue a saturation of 255 the maximum and a brightness of 255. so i'm now now as i draw it it's going to have a particular kind of like turquoisey greeny hue and why not while i'm doing this um make a variable start it as zero have that variable be the hue and for every single vertex uh increase that by some value and then uh if it goes above 255 uh reset it back to zero and now i should get uh why not have a rainbow since this is coding rainbow uh a rainbow lorenz attractor um powder so you can see as the color is changing we've got kind of yellow red to yellow to orange and that sort of thing so really okay the last thing i want to mention so what's interesting about what i'm doing with this particular strategy separate from the lorenz attractor separate from the lorenz attractor algorithm itself is the fact that every one of these points is saved in memory in that array so one thing i might just demonstrate to you is the fact that those points can be manipulable in real time so for example one thing i could do in processing is i could write a vector called offset uh and i could say p vector dot random 3d that's going to be give me just a random unit vector of unit 1 of length 1 pointed in a random direction and i could add that offset to every single vector in the lorenz attractor now if i run this it's kind of going to go crazy because the unit of i've scaled up by five so you can see it's like shaking and jiggling like crazy so what i could do is maybe shrink that offset down quite a bit by you know make it ten percent of the length of itself and you can see now if i zoom into it you can see how the points are kind of moving ever so slightly in space now i'm not suggesting that what i've done is a particularly magnificent result but what if you had all those points move along a sine wave or what if you have those points expand out and then come back to their original location or morph into another shape or fill in the blank of your interesting idea there so what i think i would like you to do now that you've seen how to program this lorenz attractor from scratch you don't have to do anything you're just watching this video maybe you want to go outside and toss a frisbee around or eat some lunch which is what i kind of want to do right now because i'm feeling a little woozy but i think what would be interesting i'd be excited for some of you watching this video to explore is what types of other how can you put your own design spin on this particular shape what happens if you start to manipulate the variables right here are the constants that i'm using make up your own constants look up on the internet some other known constants for the lorenz attractor that produce other kinds of shapes what happens if you change the dt variable what can you mess around with these formulas and get something else can you go to paul could you go to a site and find a different kind of attractor that's not the lorenz one there's a sort of there's a lot of these under the sort of category of strange attractors so try to make your own version of this uh be creative play experiment don't worry too much and share with me your results but this has been hopefully something you've enjoyed which is programming the lorenz attractor from scratch in processing in 3d thank you very much for watching i'm thrilled to have finished this because you might not know there was about a 45 minute audio problem i really hope the audio is working right now and this is actually the end of this video thanks for watching and i'll see you in the future in next in another video goodbye okay ah oh that's a great suggestion and the chat by mesa mousavi says animate a camera along the path that would be a really cool okay i think i did it i i don't know to what extent um those i you know i kind of had lost my momentum in rhythm so much but hopefully when it gets put together it'll be a reasonable video tutorial and i could always someday do this one again as i say for everything so i've i've gone for about 45 minutes longer than i had meant to today just because i really wanted to make sure this finished and unfortunately this was the only video tutorial i made although there was a lot of interesting stuff at the beginning hopefully about like questions from the cadenze course so uh a couple things i want to mention uh next week i am traveling to the great country of china i will be in the city of shanghai i've never been there before i'll be there for a week visiting nyu shanghai there's an interactive media arts program that has their big end of semester show i'm going to see their show it's unlikely i'll be able to live stream from there i do hope to record one or two video tutorials or probably just be screen captures which maybe are just as good as my ridiculous system here um but so i'll have some new content i'll be on twitter and on email and that sort of thing uh don't email me that's my one request out of life twitter is great the processing forum is great uh the forum for the cadenza course is great i can't deal with email but you should email me and you should not listen to me no one should listen to anything i say i want to be in touch with you watching um so i um i please if you make something from this let me know be in touch i will publish at some point hopefully in the next 24 hours this video tutorial will go online these i'll probably leave the stream archives online somehow there will be two of them i guess this one that worked is the second half and the first half and i'll try to link between them somehow figure it out um but i'm rambling i'm really exhausted from this and so i think i'm gonna go um i'm gonna check the twitch chat i will need a vpn yes i do have a vpn for a while i'm there if you have any suggestions for things that i should make sure to see in shanghai um i would love to hear them uh food that i should eat a particular restaurant or a place to go to uh let me know i'm gonna be there for one week i'll be back may 15th and when i get back i mean assuming i don't continue to have these technical problems i um i'm going to start a patreon i think to uh uh just now that i've been doing this for long enough i feel maybe ready to think about funding this a little bit um you know for myself and also to be able to have some flexibility to spend some money on um getting you know better equipment or better people helping like write descriptions and that that that i already have too now so anyway if you have thoughts about that let me know the real thing that i can't figure out is whether to do i'm leaning towards having the patreon be a charge per live stream or per week that there is a live stream or i could do a monthly thing but i'm just a little bit afraid like what if i go away for two weeks i don't want people to be charged for the monthly thing so i'm really thinking about that if anybody has any clever ideas uh let me know okay do something with the heat okay so i i thank you for being so patient i apologize for your ears that got blown out i hope you're enjoying this and finding this useful send me your feedback get in touch on twitter and in the youtube comments or in the cadenze forum or in the processing forum and i'll see you all sometime soon after may 15th i will not be live probably until fight uh may 15th i think is a sunday so sometime that week possibly not to like the 18th or 19th like wednesday or thursday that week thanks very much and uh you can sign up ah if you're still watching this and you want to know um if you want to get notifications uh if you go to shiffman.net you can sign up for email notifications when there's going to be a live stream in the top right corner okay and i always post on twitter shiffman goodbye