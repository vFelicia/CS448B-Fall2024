hello and welcome to another coding challenge this challenge I going to attempt something called pixel sorting and pixel sorting is an algorithm that takes all the pixels of an image or a video or anything and reorganizes them in some order maybe ordered by brightness or ordered by Hue maybe they spiral out from the center or they kind of get ordered across or up and down and you can see if you Google an image search with pixel sorting you'll see a lot of artists and people making art and crazy projects with a pixel sorting algorithm so I am now going to try to try to make pixel sorting in processing which is a Java based programming environment it looks something like this you can go to processing.org to download it yourself and the one thing that I've got going here is in this uh the code is in a PD file called pixel sorting. pde check this video's description for a link to the code I also have a an image a JPEG in the data folder so you can use any image I've just grabbed off of Wikipedia an image of a sunflower and that's what I'm going to pixel sort so if first thing I want to do is I want to create a p image variable and then I'm going to say image load image uh and it's sunflower JPEG and then I want to draw the image image 0 0 so I want to see here my the canvas that I'm I'm you're going to see is 800 by 400 so uh what I want to do now is have the uh the raw image on the left and the sorted image on the right okay so I've got part one now here's the thing what I want now is another image called source and I want to create a blank image uh equals uh create image and I want it to be the same width and height and I want it to be an RGB image as um the image so this in processing is how I load an image from the file here's how I create a blank image so now and so and let's just do something really quickly now um all images oh look at this there's a weird bar here I don't know that's a glitch with my camera I'm just going to have to live with it but all images the pixels we think of them as organized on a grid like here's pixel like 012 comma 01 that's pixel 2 comma 1 the computer stores all the pixels in a linear list 0 1 2 3 4 five six 7 so to the computer this is actually pixel index 7 which is actually the eighth pixel because I started counting from zero so and in processing I can look at all of the pixels of an image that array by saying the image. pixels itself so I'm going to come over here I also need to do something like say um uh sorted. load pixels this is kind of like a little announcement like hey I'm going to look at the pixels now and I'm going to say four I'm going to write a for loop I equals z i is less than sorted. pixels. length i++ and I'm going to say sorted IND uh pixel index I equals a color random 255 so processing has a function called color and if you give it a single number it'll make a nice grayscale color and it'll put in that pixel that image and then I can say sorted. update pixels I'm not doing the Sorting yet I'm just showing you how this works so now if I in the draw function I say I draw the image and uh I draw both the original image and this quote unquote sorted image which is now just random colors I should see this so we can see I have an image that's loaded from a file and an image with pixels that I made up so now what I need to do is take all of these pixels and put them in this one to sort it so actually something that I could do right here is I could say uh image. pixels indexi and I could say image. load pixels so now this is me manually one at a time copying every pixel from image into sorted here we go Tada two sunflowers by the way I love sunflowers do you love sunflowers tell me about your favorite flower in the comments and then you can all you can write oh cringe cringe this seems to be the thing that people write whenever I talk about flowers or kittens or puppies or rainbows or whatever but you know these things are nice things can we have nice things please okay so now I need time by the way I'm avoiding I'm like stressed out here I'm procrastinating I got to get to the Sorting so here's the thing most programming environments will come with some kind of function to sort an array and Java is no exception even processing is no exception it has a sort function but the thing is I need to do something kind of custom here because this array is like this crazy array of colors and I want to like organize it it's they're arbitrary numbers a color is an r a g and a b value and an alpha value sometimes so how I'm going to sort it I've got to write the Sorting algorithm manually sorting algorithms are the domain of people's PhD dissertations and lifetimes of study there's something called a bubble sort there's something called a selection sort there's even something called a quick sort and I probably for what I'm going to do could make great use out of a super fancy efficient fast sorting algorithm um there's a great uh uh write up I Believe by Mike Bok who the creator of D3 about an sorting algorithms and how they work I'll link to that in this video's description but for what I'm going to do right here just to make things simple I'm going to implement a selection sort and so I think the way that I can do this right I have two arrays oh you can't see all this that I'm cut off but that's fine this is my first array I'm going to look through the entire array for the brightest pixel when I find the brightest pixel I am going to put that over here and what I'm actually going to do is I'm going to have to um you know what I need to do I actually need to copy the whole image because I I need to rearrange the pixels while I'm sorting but I don't want to mess with the original pixels of the image so I'm going to copy the whole image and let's talk talk about the selection sort again back I realiz you do this in a different way than I had previously imagined I'm going to look at all the pixels of the image find the brightest one let's say this is the brightest one I'm going to take this and put it in the first spot and take that first spot and put it there that's called a swap then I can start From Here and Now look for the brightest one and take that one and put it in the second spot then I can start from here and look for the brightest one so I'm kind of looping through the entire array to find the brightest one to put it in the first spot then I'm starting at the second the third the fourth so I'm always getting a smaller section of the array because the beginning and that will grow is the sort of sorted part so let's see if I can do that and uh one thing I can do by so this this is a way that I copied all the pixels just in case you're wondering I could actually um I could actually I believe say sorted equals image. getet so that's a get is a function in processing that just gets a copy of the image let's see if that works great so that's a little easier than copying the pixels manually just so you see that's there and now what I need to do is I need a selection sort so let's think about how I'm going to do this again I'm going to say four and I do need sorted. load pixels I'm going to say four in I equals z i is less than image do sorted sorted. pixels. length I plus plus okay so this is looking at every single Pixel but for every single Pixel I need to look at all the pixels that come after it so I need to say four and J equals starting at i j plus J is less than sorted. pixels. length j++ okay right because I want to start again if I come back to that diagram I want to start at zero and look through all the pixels then I want to go to one and look through all the pixels then I want to go to two and look through all the pixels okay so that's what this nested Loop is doing so the first thing I need to do is let me sort by brightness so I'm going to say b equals the brightness let it's first let's get a color pix equals sorted index J oh no sorted. pixels index J that is the color at that particular pixel the brightness of that color you know I could compute it but processing has these nice functions that'll just it's just the average of the RGB values so I'm G to get that brightness now what do I need I need to find the record brightness of any pixel for each time I do this so I'm going to create a variable called record I'm going to set it to negative one right because no pixel can have a brightness less than negative one less than zero so I want to say and then I want to have I'm going to say brightest index you know what I'm going to do because I might change the algorithm I'm going to say selected pixel equals uh equals um I because I can start by default I'm going to start with the first one selected pixel equals I so what I want to do now and say if brightness is greater than the record then that's the selected pixel is now J and the record is now that brightness so this is like looking at every pixel from J to the end and seeing if its brightness beats whatever previous brightest one I found storing it as a selected and storing a record so now once I finish this Loop now I going to do is swap selected pixel with I so I need to take whatever was selected as the brightest and put it in the ey spot and then whatever is in the ey spot stick it back somewhere else so how do I do this basically what I want to say is sorted. pixels index selected pixel equals sorted. pixels index I and then sorted pixels index I equals sorted. pixels index select so this is a this won't work by the way this is a problem so um but but this is like a nice idea right I want to take what's in I and put it in selected pixel and what's I what and what's what's in selected pixel and put it in I here's the problem though uh and I actually I prefer to write it I don't know this is like kind of nonsense but I need to I need to feel like okay about things in life generally for some reason I need I to be first that's just how I am I want to take what's selected pixel and put it in I and what's in I and put it in selected pixel the problem is I just overwrote what was in I so I've lost it so what I actually need is something like a temporary variable to store what's in sorted pixels index I and so that I can put that in temp I that didn't make any sense let me say that again I need to save what's in I because I'm about to overwrite what's in I so that I can grab it again and put it in selected pixel this is an gthm for swapping two spots in the array and then once I'm done I think this is everything this should actually work I have no idea how long this is going to take this is not a particularly efficient algorithm and this is uh this is you know there's this thing called like Big O notation that people talk about in like computer science of like how fast is an algorithm this is like an N squared algorithm because for every pixel you need to check every pixel so if there were just 10 pixels I basically got like 100 checks but if there's 100 pixels I've got one Z Zer z0 10,000 checks so I hope I did that math right so this is G of with with with a 400 by 400 image there's going to be a lot a lot of pixels to check so let's run this and see what happens okay I'm back that took a really long time because it takes a really long time there's 400 time 400 pixels there's a lot of pixels to sort um so um this I'm going to have to I sampled the image down to a 200x 200 image which I think it can sort it in Java in about 14 seconds so I'm going to run that now uh and you can see the window's a little bit smaller but I'll zoom into it 1 1,2 1000 D D D come on Pixel sort come on do the pixel sort cringe that's what you do while you're watching and then you complain and type in the comments oh there you go so you can see this now sorted every pixel horizontally by brightness let's see if we can sort it by Hue which I think will be interesting to try uh okay so instead of looking at the brightness why don't I look at the Hue so processing has a function called Hue which will give me the Hue value of a particular color so I can actually look at that and I believe this should take just about the same amount of time do the pixel sort by do the pixel sort by this could get edited out maybe someday too and it could just appear so you can see look at that this edited nicely by Hue and so you can see I have all of these sort of like orangey colors at the bottom yellow colors this nice sort of uh palette so this is pixel sorting now the thing is I'm just doing sort of like the raw basic algorithm you should take this code find the link and get up and be creative with it so first of all you should think about um what's a different what's another way you could imagine sorting the pixels besides just brightness or hue here's another thing I'm just ordering them horizontally what if I order them vertically or what if I order them spiraling out from the center or coming in from the edges what types of other strange what if I only sort part of the image and you'll see um lots of art if you goog again if you Google image search pixel sorting art you'll find a lot of creative examples of this and I hope you make something and send it to me but before I go I want to add one more thing to this because it takes so long I think it would be interesting to watch it sort animate the sort so in other words the Sorting happens right here this is the so I'm going to save this and I'm going to save a new version called pixel sorting animation so what I'm going to do now is I'm going to the processing has a draw Loop right it's actually drawing this stuff over and over again I did all of the sorting and setup and it was finished but what I want to actually do is do the Sorting uh in draw so every single time through draw what I want to do is sort but instead of having a loop draw is already looping so I is something that can become a global variable I'm going to call it index set it equal to zero I don't need this anymore I don't need that outer loop anymore it's going to do one one pixel per frame of Animation so the selected pixel is index J starts at index and then uh whoops and then I swap at index index and then what do I do I say IND index Plus+ and I should also check if index is greater than or equal to uh sorted. pixels. length uh you know I don't want the I can't spell length how do you spell length oh my God uh if it's greater than uh length minus one I could um uh if it's as long as it's less than length minus one I can increase it by one okay so now let's run this you can see like it's very very slowly you can see it kind of sorting up there right I'm zooming all the way in it's happening very very slowly sorting by Hue now again this is such a tiny resolution image that we're barely seeing it so now I can actually let me go with the larger image I'm going to change this to um 800 by 400 I'm going to load sunflower 400 a higher resolution sunflower and I'm going to uh um I just need to change where I'm drawing it at 400 comma Zer so now we can run this and I can sort of see here there it is you can see it sorting the pixels now here's the thing I'm doing one pixel at a time per frame I think it would be much nicer if I at least did a bunch so I'm GNA actually just write a little Loop inside of draw to say hey whatever I was just doing do that like I don't know a 100 times 100 times is not that many there's a lot of pixels so uh and so I'm going to put that like so I'm only doing now I'm doing 100 pixels at a time and let's see what that looks like is it going any faster let's let's try let's try a thousand pixels at a time oh that's so a th000 pixels is actually quite slow per frame so I think I've kind of lost one thing I want to look at is what the frame rate is so I want this to run I want to do the most amount as I can the most amount of pixels I can but still be running at like 30 frames per second which I'm clearly not so let's do it at 100 and we can whoa why is this so slow you know what the load oh you know what might be the problem no anyway I I need to I'm gonna I'm gonna up update this it's very CPU heavy and it's just very slow I I you know I think there could be some more creative ways I could think about animating this we could let this run for a little while and see how far it gets but for example um I so this is now animating at 30 frames per second which is quite nice I'm doing like 10 pixels at a time um and you know it's doing 30 frames per second so that's 300 pixels per second still going to take a very long time to finish the whole thing but there might be some other creative ways like this might actually look more interesting if I didn't draw the original image and you just saw the pixels getting filled in the ones the ones that have actually been um been uh swapped or I might like if I was doing it out from the center so I'm sure you will come up with some creative riffs off of this please share them with me in the comments share them with Twitter share them with me on Twitter at shiffman I hope you enjoyed this coding challenge in processing about pixel sorting um you can do this at very high resolutions it'll take a long time to render but then you can export it out as an image or something and make a big print and and let me know if you make something and I'll see you again in a future video goodbye hey guess what everybody I'm back look at this that doesn't look right I'm getting the interesting strange smear but it's not actually sorting the reason why it's not actually sorting is I didn't notice when I move stuff around to animate it look where the swap is happening the swap is happening inside this J loop I want to look through all the pixels find the brightest or the ones with the highest Hue and at the end of that swap it so I just had like a typo essentially where this closing bracket is in the wrong place I need to close that J Loop here and now it should actually sort by Hue um okay so now we should see something more correct so I had that mistake and you can see now that the Sorting is actually happening correctly now what I'm wondering is if having the swap inside was somehow making it also run slower and if I could actually manage to to have it run faster n it's still pretty slow it will slowly gain speed over time because as it gets further along oh you can't actually see my frame rate I just noticed as it gets uh further along as it gets further along this is the frame rate here as it gets gets further along it has fewer pixels to check because it's getting further and further into the image and you should see that frame rate go up and up and up and up and up but you can see now that the Sorting is actually now happening correctly and it actually is sorting by Hugh again I'm you know by Hugh is not necessarily the um well is that NE the most I there are lots of I think this is a challenge to you is like I just picked H and I just picked brightness as arbitrary numeric indicators of a pixel's value as a single number but you might think about other ways of thinking about how could you order those pixels and so I'm going to let this run for a while and um hope you enjoy it and also you know you could pick a different image than the than the sunflower you can mess around with how you're sorting it I'm sure you'll come up with something creative and I'll see you in a future video I think this might really be the end goodbye