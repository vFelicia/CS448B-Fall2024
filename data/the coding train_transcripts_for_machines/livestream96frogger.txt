hello good morning afternoon hello it's Friday it is the day for the coding train with me Dan uh hello this is uh welcome I'm hoping that I'm live streaming which I probably just shouldn't say I should just assume at this point that things work because they typically do um I'm a little bit earlier today uh then I often am on Fridays due to a bit of a scheduling change someday the universe will come together with some way that I establish a regular weekly time slot that I do every single week but at this point I'm still kind of a bit of an ad hoc uh YouTube streamer if that makes any sense and um but anything that I do um will be archived and available to watch later and then of course uh this live stream will also be chopped up in little bits and edited tutorials so uh looks like we've got a bunch of folks here I see a chat scrolling uh um I see everything so okay so what's happening today I don't know I got a marker if I have a marker things will be okay I'm going to program something uh I think I've been if you've been following my live streams for the last few weeks you know that I have been uh on a path telling a story about machine learning and artificial intelligence but today we're going to take a little break from that I will be return I will return to it I think I what I need the next big example that I'm going to build is a full full uh multilayered perceptron neural network example and I think that's going to need somebody actually made a comment on my I know I know on my perceptron video which I took to heart which was like you know your videos are great they might be a little bit better if you prepared for them um so while I do think that some of what I do in particular with some of the coding challenges works well due to the lack of preparation or maybe it doesn't work well but that's just sort of the thing that's I'm not ever going to change that and that's part of what I'm going to do today with no preparation whatsoever is program a game but I do think with some of the uh deeper more complex topics that a little preparation or a little allocation of time could help so I'm I'm want to make sure that I have a good block of time or maybe two days in a row where I can do two two two to three hour sessions to really build this much larger example that has a lot of pieces and components the neural network example okay so that said uh that said what will I do today my uh kids who are uh ages five and eight suggested that I do a fidget spinner simulation uh which I am considering you know I don't want to just latch on to the latest craze I don't know if I have my pet rock somewhere around here to do a pet rock simulation or a hula hoop simulation perhaps uh earlier crazes I suppose what's another one um anyway uh but we'll see maybe I'll maybe I will do that but it has been requested for a while to look at the game Frogger so let's see here I'm going to open up a web browser does anybody know where I let's let's look uh I think crossy road is another um version of this game let's look on Wikipedia for a second uh okay so Frogger apparently is a 1981 arcade game I have definitely played this game before I have never programmed this game before the the idea Loosely let's see if we can find an image is that you are a frog let's see let's look at this you are a frog where's the Frog there's the Frog down here at the bottom and your job is to get from the bottom to the other side in those little receptacle end points and you must not be hit by a car and so this is the road so don't get hit by a car and then when you get up to here here this is a river so you need to jump on either these lily pads or logs the frog is in the middle of the game thank you sorry that's where the frog is thank you ala this is how many lives I guess you have left um and and this is how much time is at the bottom so you can see there's a score so I think that I can do this I have some level of confidence uh we will need uh rectangle rectangle Collision detection right because I can really consider the Frog as a rectangle and each of these cars are the rectangle the logs the lily pads is rectangle so I just want to know if the frog has hit a car or the frog has jumped on a log um I expect that when I make this I will leave out things like the timer number of lives score visual design so I just want to build a simple framework for the basic functionality of the game and then let people create their own versions of it um okay um all right so I'm looking at the chat make no I'm not going to read that comment it's way too upsetting to me uh okay so that's pretty good now is there a place I think that's probably all I need but maybe maybe I can at least play a version of this game online does anybody know in the chat um uh does you know there um Mi I am so me in the chat is saying the grid behavior is a bit odd on the logs and turtles uh if I recall correctly so I think there's probably a lot of nuance to how this game was originally programmed a lot of these early Atari games you know had a lot of limitations in terms of memory and speed and I can be a bit more flexible with just I don't need to worry about a grid system exactly but um uh but ah yes yes okay so I'm gonna we'll see what happens okay um H somebody in the chat says this is ideal timing can you please start streaming every Friday at this time I I um typically this was my regular time at one point um the afternoon worked better for a variety of reasons uh mostly that I had a conflict in the morning and right now it's sort of Summer and I just to be honest summer schedule is going to be so uh wacky in terms of um travel and different other things going on so I'm just going to kind of on a week to week basis um schedule live streams when I can but I will take note that I know that this that this time for some people is very good uh I will say that if you uh want to support what I'm doing other just watching and giving some um helpful criticism or supportive words is always helpful but you can go to um patreon.com coding Trin that is a crowdfunding website uh and members of the uh patrons of the coding train channel can uh get access to a slack Channel where I am very good at um where I am very good at um uh announcing when I'm going to go live in a in a in a slack Channel there uh Simon in the slack Channel says use oop and in fact I really think this is a great suggestion I think that this particular game is a really excellent opportunity to use certain principles of objectoriented programming like inheritance and possibly polymorphism um and and so I'm going to actually program this in processing using Java uh which at you know which I think is just a place that I'm a bit more comfortable with in terms of the objectoriented programming stuff and also I'm really living in this place where I want to explore this summer uh more about programming in JavaScript from uh with es6 and with functional stuff I've been getting a lot of feedback in the patreon patron slack group that's been discussing and giv and kind of pushing me in that direction and I'm a little bit cautious and I like to do things in the simplest way possible but um I feel so conflicted about that that sometimes like I just do this in processing that I don't have to worry about kind of what flavor of JavaScript I'm doing at the moment so that's kind of a plan um uh Ted in the chat asks please use p5js thank you for that comment I will um and you have to guys have to keep me honest about this either on Twitter in the comments but I absolutely am always happy and usually somebody from the community does this to just post a port of the code in JavaScript and especially for something like this I want to do that because people often want to share their versions of it and sharing and having stuff run in the web it's just so much easier for that um okay uh why did the frog why did the frog cross the road because it was staple to the chicken uh here's another one why did the frog cross the road because the chicken was on vacation these are the jokes we tell in my household okay uh I guess they dad jokes is uh apparently the term okay um me I am so me has volunteered to Port after I'm done which is great thank you and I be um I even am not opposed to doing a second pass over the video um if uh with um uh in JavaScript too okay um I'm just reading the chat for a second um oh can you please make a game with matter.js and uh the V I always get this a lot of people are telling me matter.js and neural networks uh yes I'm definitely going to do some stuff with neural networks and games and training AI agents to play games and it's just going to take me a while to get there but I will be doing all that I I often get I'm speaking a little quieter because I I can hear that there's a class going on in the room uh next to me and I don't uh once when I did a live broadcast somebody came in and said I was making too much noise so um I wonder if um Can can you guys let me know if the levels seem okay in particular in the slack group is a little easier for me to follow um can I start yes uh a lot of you are new here probably because I can see that you said hey your camera shut off this is something that happens to me it's I'm like sopus here I could probably fix it but the cameras go to sleep the cameras I'm using go to sleep after 30 minutes I have to go press the button to wake them up because you never know I might fall asleep in the middle of my uh my my thing okay so this is with some music and me talking and perhaps the levels are a little off with music and me talking are you ready for Frogger okay how are the levels um uh okay so I'm going to wait to get some information from the chat and then I think we're going to start with froger I'm I'm just curious is this a topic that interests people uh create poll uh this is now my straw poll 8 Fe f2d if you guys can vote there I'm not going to I'm going to do Frogger first the other thing that I would like to do today if I have time is a followup video about the perception because there's a few pieces of that that I didn't get in last week's coding challenge uh the music is louder but I don't see that much as concern levels are fine oh God no I'm just saying this is my kids requested and I you know I am a sucker I will do anything for YouTube views and likes I can't I I I would like to say that that's not true I would like to say that I'm just here to teach and just here to um give some entertainment or or to impart some knowledge or to help but really I'm here because some chemical reaction goes off in my brain when people click like and watch the videos and a different chemical reaction goes off my brain when people write I hate your videos but that's okay it happens it's on it's YouTube there's no way you can get around that but I I I I do appreciate the constructive criticism which I've been particularly getting as I've tried to do sort of more difficult math topics feel a little Twitchy today okay um all right what's with that coffee yes interesting thing about the coffee is that has a green heart on it so I don't know how well you can tell this but look at this I have an invisible coffee I also have a window a green window now maybe what I'll do is just show you what I'm holding here this is a preview uh I shot I I I'm working I I we did a video shoot for a new music video theme song trailer for the coding train and this was a green window to use for the train window so that will be coming to YouTube sometime later this summer uh okay back to here my fiveyearold sis is watching with me hi 5yearold sis my daughter is a 5yearold sis she will be six though this summer uh she is at kindergarten right now and when this is over I will be going to pick her up from kindergarten then we will be having our tennis lesson this is my day today okay do I ever stop and ask is this what my life has become yes all the time although honestly I usually ask it this way hey is this what my life has become you know I said I think I was I did a podcast interview the other day where i'm really just a failed musical theater wannabe person like that's all I wanted to be was you know actually I didn't really want to be in the musicals I don't think because first of all even if I did I cannot sing but I just wanted to be a part of the Broadway I love it I saw the great Comet the other day got tickets to Evan Hansen I'm a big Broadway fanatic theater nerd okay uh where are the this dot shirts does anybody want to design a this dot shirt I would totally be open to that um I have the you can get these coding train shirts at coding train . storenvy.com I think we better get started here um I also have hoodies and some kids tshirts um and other things you can get and this is another way you can support this Channel and finally a way that you can support this channel uh less directly but um probably someone an organization that needs more support than I do is the processing foundation so I just want to mention the tools that I typically use um processing and p5.js there's also processing. piy which is a python mode for processing are maintained by a nonprofit uh foundation called the processing Foundation processing foundation.org you can find out more about it and if you uh are interested you can become a member and support the foundation financially okay uh what else did I miss that I usually need to announce or thank I don't think so let's take a look at this view results no oh that's so sad come on people make me happy there's already 200 votes I want to see some yes votes here come get me up to yes I got to tweet this uh am I logged into Twitter here I am as the coding train account okay I have two Twitter accounts at shiffman and also at the coding train the coding train though really just auto posts when I post a video I don't uh really check it that often like you can see that I have 36 notifications here um help get me to yes uh okay so I have uh Simon is saying no no no don't worry I won't do that before the oh yes it would be interactive the ideas that you would be able to click on it you would twirl it it would spin we would deal with like uh friction and uh angular velocity this would be a reasonable actually this is basically one of my nature code examples already um okay I just rebranding it to to try to get uh let's see view results how we doing here well getting getting a little closer getting a little closer okay but I got to go to Frogger that seems to be more interesting to people okay let's see should I wear some of my train conductor costume that's another question okay oh look a machine learning machine learning fidget spinner that is genius I have to think of a way to figure out to make a machine learning that wait if I just did neural network fidget Spinners or some sort of like all these like buzzword things that people wanted to learn plus fidget spinner that would be amazing I didn't even bring a fidget spinner with me I own I mean I don't get to play with them because because I never am allowed to be the one who gets the hold fidget spinner but I do indirectly own many of them okay uh let's move off of this and go to Frogger I don't think I need to play froger I think that with this here this is going to be good enough uh yeah genetic algorithms in fidget Spinners evolutionary design a fidget spinner there we go that's a great idea Jo did two people suggest at the same time Amir and Alka angular momentum exactly there's physics there's stuff okay um let's see here let's check how this uh whiteboard is I mean uh let's see if this pen is a good one uh I don't love it I don't love this marker let's try another one got one up here ah this one's better it's not the best but it's better can you guys read that okay looks pretty good um let's try one more it's pretty good um okay this one actually is even a little bit better all right I think I'm going to be ready to do the first coding challenge so my plan is to uh do this it text teams fine on the Whiteboard great my plan is to do this in multiple Parts um I think what I'm going to do is just create the basic mechanics of the Frog moving H let's think about this oh boy I I forgot about this whole like get into the I just kind of want to make a simpler version where you get to the end um I can hear sounds from the I'm thinking about this so one thing that I've learned is that I think sometimes when I try to implement every single detailed feature of a game my videos tend to spiral out of control uh in a way that's when I did Pong that kind of happened um and so I really want to keep this simple there's like a buzzing coming from the room behind me it's okay if I just meditate this my my uh Fitbit has this thing where I can uh do this like relax breathing for two minutes do you guys mind if I just do that you know mind just take a break for two minutes I'm going to do some relaxing breathing stuff no maybe I should PR proger okay get it I got it um okay so two parts one is I haven't seen anybody type cringe in the chat for so long it's been so long makes me so happy cringe okay um I will have to make a grid for the Frog okay okay I hear this feedback and I'm going to figure this out I think I'm going to do something a little you know what I'm going to just start the video because here I am just talking and talking and talking this might as well be part when I say start the video it's such a weird thing but what I mean is that uh uh uh this will get edited into to a tutorial a set of different um T videos in multiple parts so I'm just going to start the actual coding challenge some rows movements are faster or slower than the other oh it's by row so the um the so you're saying to me ala that these cars move at the same rate right and do they always stay does the design stay the same so it's like different cars different speeds okay that's interesting okay it's by row because it's by car okay how much time is this going to take good question what do you guys think knowing that I tend to ramble that I tend to make a lot of very basic mistakes how long will this take okay let me get processing open I'm going to do this in processing I'm going to use object oriented programming for this you guys I wish you could hear the music that's playing in the it's like a film class and I uh let me get the most recent version of processing which is 3.3.4 as always I always forget the this dot this do this do this do I'm going to do this do this do I'm going to do this this do this do this do do do do do do do forget do do do do do this do looks like I've got processing now let me open this up and make do this here how is this font size for you guys uh game play uh bergner in the chat just um uh Berner in the chat just posted a YouTube video with Frogger gameplay let's see if I can get that up here um what's the link here um oh boy um I bet you I can just search for it right uh Frogger Arc gameplay YouTube is this the one I think this is the one that was just posted so let's take a look at this oh I love all the little animations so see there's interesting enough the Frog moves on a grid but the Frog um when it gets on a log gets to move sort of independently of that grid which is kind of cool when there's a little extra thing there can you guys hear the sound by the way it's like crossy Road isn't doesn't Frogger predate crossy Road crossy Road endless arcade Hopper game crossy Road for me 198 I think of Frogger okay uh this is great I'm going to use this video um and start it as the background I'm GNA get okay so here we go oops I'm the chat stop we can hear the sound okay all right now how we doing everybody you ready for this I'm going to go and um you look like I agreed you will get no argument for me there okay so here we go we are going to begin only because you all said cringe in the chat that means I am bringing out the train whistle okay here we go hello uh welcome to another coding challenge with me coding challenge person YouTube thing okay this is a game called Frogger I'm GNA play this video here oh oh so Frogger is a game where a frog tries to get from the bottom right there there's the frog the frog is supposed to get from there all the way up there and the idea is the Frog needs to avoid the cars but then the Frog when it gets to the river needs to land on the logs or the lily pads wherever they are to make it across so I would like to make this game now I'm going to make it in something called process which is a programming environment um built uh with on top of the programming language Java that you can download from processing.org I will also release after the this video is finished and this will probably video be in a bunch of parts I will also release a JavaScript version of the code so you can make a browser based version of this game okay I have to stop this uh because it's distracting me too much um let me say another couple things um I'm going to keep things very simple so I'm not going to implement all the features of the game there won't be any sound all these little like beautiful animation details I probably won't Implement H you know as well as sort of the graphics and visual design but it is my hope that the internet the wonderful world of the internet will watch this video and take this code and make all sorts of crazy fun extra interesting versions of this game so let's get started pause timeout uh okay Frogger is 81 and crossy road is 87 thank you okay cars are slower than the turtles oh those are turtles not lily pads I'm being told uh that those um that these are not uh lily pads but rather they're Turtles I mean come on they kind of look like lily pads that's a turtle that's a turtle okay uh all right so okay oh guess what this is going to be a great opportunity to practice some objectoriented programming techniques right cuz there's a lot of things like there's cars there's logs they're similar they're different but there's a lot there's a lot that we could um use uh in terms of making objects that relate to each other or I just I don't know what I'm saying now but I'm going to get into stuff like inheritance of polymorphism in this video polymorphism just say polymorphism three times and the Java monster shows up at your door whatever that is the Java monster says system out call uh can we please I've lost my mind I I had you know I really gotta I need some more written I think I need to write my u t time out is this is this thing am I actually live streaming right now I think I am for a moment I just imagined that I was rehearsing which would be nice right okay all right uh volume is too low I I can't a lot of people are telling me this let's see what I can do here I will raise the volume a slight amount just because I am getting that comment from a lot of people uh which sorry hold on a sec which one am I plugged into three and uh I'm going to turn this up I don't know if you can see me where I am uh let's see test test test hello hello hello how is that is that better I think I'm a little bit louder now so hopefully that's fun River does not make sense because frogs can swim I totally agree uh okay volume is fine um all right people are saying I'm fine but it's some people are saying it's better okay all right so let's let's start by mapping out some of the pieces of things that we're going to need okay so one thing that we're I can see I've never programmed this before this is Scouts Honor or whatever uh let me do that again I don't want to say SC okay okay so let's think about um some of the things that we need uh I have not programmed this before uh but I did think about it a little bit this morning on the subway so um one of the things that we're definitely going to need I'm going to consider the Frog to be a square I'm going to also consider the cars to be squares or if it's a truck a rectangle same thing for the logs or the turtles all of these things are essentially just squares or rectangles really and you know then eventually if I were visually designing this I could put whatever I want inside of these elements but what I'm going to need to do right I need to know is a rectangle intersecting another rectangle or not because what I want to know is for example did the frog is the frog has the Frog hit a car so I need a function that tests whether any two rectangles are overlapping or not and this is actually kind of this is not too difficult of a function to implement because if I know the left the right the top and the bottom left right top and bottom of any rectangle I can just see is the I can just check to see if um this is this is what happens by the way when you program something live you do this kind of like live stuff stuff that's just so intuitive or you feel like it's easy suddenly you get this like frozen moment of like oh my God I don't know if I'm going to get this right but we can do this I can do this let's think this through okay so if I have a two rectangles each with Left Right top and bottom if the left of one rectangle right if the left of this rectangle is less than the right of this rectangle or the right of this rectangle is greater than the left of this rectangle then right that's these cases right these are overlapping but one of these has to be true and the top of this rectangle if it is if the top of this rectangle um hold let's take a time out here maybe it will help if I drink some of this coffee I usually don't have coffee I didn't get a good night's sleep last night it's funny I think it's almost easier to work this out for me if I were programming it then to try to map it out here all right if the top of this rectangle is less than the bottom or the bottom is greater than the top now so actually what does it have to be it's actually a different way to think about this would be to just say is the left in between is this in between the left and the right or is this in between the left and the right and is this top in between the top and the bottom and is this bottom or is this bottom between the top and the bottom okay that makes more sense that makes more sense right because this top is in between the top and the bottom of this one I'm spending way too much time on this so so I think when I actually release this as a tutorial I'm going to want to figure out a way to edit this down and not go through this whole elaborate me thinking this through maybe I'm going to come back and explain it again um this top is in between the top and the bottom right but I can't just say this top is less than the bottom because it could be up here and I can't just say this top is in between the top and the bottom because it could be over here I know I've gone off but one of these also has to be between these two okay look I already have somebody I can see on the computer over there I think I can see like ala's icon has already posted a really quick version of this right which is uh um oh we can do the negation ah that is a wonderful idea so I can say ah I can a more efficient way to do this and I'm GNA I'm going to double back is to say let's actually just test if they're not intersecting right oh this is so great great okay let's start over let's start oh this is an exciting moment thank you thank you ala uh okay this is you can see how I literally do not prepare for this because now this seems so obvious to me and if I had just Googled I would have seen this on stack Overflow and maybe I would have thought of it eventually once I started programming it this is going to be so much better oh I'm so excited erase all this I don't remember where I was I'm just going to come back to the beginning we're going to just we're g to we're going to start this we're GNA start this uh tutorial over I know that Thrills all the live viewers to go open a window get some fresh air go get a cup of tea just take a couple minutes to do something else because I'm GNA I'm going to get this happening a bit speedier okay okay here we go okay so let's map out some of the things we need no I didn't just do this a few minutes ago and mess it all up let's map out a some of the things we need uh to program Frogger so I'm going to consider everything in the world of Frogger to be a rectangle so the frog is a rectangle the cars are are rectangles you know they might be a long rectangle if it's a truck or a actual Square you know the Frog's going to be a square the same thing the logs the lily pads everything's a rectangle because what I want to be you know in you know obviously could put my own image in there there could be a little animation I hope that's what you guys will do if you make a version of this after watching this video but the only thing that I need is to be able to know does the Frog intersect a car or does it intersect a log so I need rectangle rectangle intersection and it turns out after like a messing after getting a little confused and doing a little research there's a really nice way of doing that so um I could actually do something so if I have a rectangle and what I'm what I keeping track of is the left side the right side the top and the bottom and if I had this is R1 for example and if I have another one that's R2 that also has a left right A top and a bottom I could say something like well is the top of R2 in between the top and bottom of R1 if it is and also like the left side sides but that's actually going to be a lot trickier than just what if instead of trying to determine if they're intersecting what if I just try to determine if they're not intersecting right so if they're not intersecting is a much easier thing to test because I know they're not intersecting if the left of rectangle 2 is greater than the right of rectangle one right that means a rectangle is somewhere over here no matter where it is vertically it can't be intersecting or if the right of rectangle 2 is less than the the left of rectangle one that is over here same thing for the top if it's above it if the um so same thing for the bottom if it's above it and the top if it's below it so if I can determine if it's not intersecting then not not intersecting is intersecting so let's go write that code really quickly um there's some music playing that you guys can't hear but I can hear it and it's not just in my head there's a room back here okay um so what I'm going to do this is a little bit silly and unnecessary because there is actually a Java class can you hear it now it's much louder there is actually a Java class uh called rectangle that I could make use of but I am going to just make my own and I'm going to give uh it a left a right a top and a bottom so I'm going to create a rectangle that has a left right A top and a bottom and when I make that rectangle I'm going to write a Constructor for this object where I can what I'm actually going to do is I'm going to allow the rectangle to be defined with an x a y and a width and a height and then left is the X right is the X plus the width uh top is the Y and bottom is the Y plus the height right so often let me save this as Frogger so often in programming wish you guys could hear the sounds that are coming I just not talking about them because it's just going to be weird for people who are watching this and can't hear them and you think I'm a crazy person with sounds in my head which would not be such an unreasonable thing for you to think if you've watched any of my videos but nonetheless I digress uh typically in Pro in a lot of computer Graphics environments if I'm going to define a rectangle that's going to appear on the screen I'm going to Define it with an x a y and a width and a height but here I want to actually keep track of the left the right the top and the bottom for this intersection test then what I'm going to do is I am going to write a function here called uh intersects and that function oh good people in the chat are telling me they can hear the sound I am not completely insane only just you know mildly uh Boolean intersect I want a function that returns true and and let me zoom out here and it receives another rectangle so I want a function that tests a particular rectangle against another rectangle whether or not they're intersecting so the big expression that I want is is I want to say if I know they're not intersecting if I say that this do left is greater than the other's right or right so I actually don't in Java I technically don't have to say this dot but you know come on if I have an opportunity to write this dot I'm to write this dot so I want to look at this rectangle's left versus the other rectangle's right or this rectangle's right and maybe I could just uh put a line break here uh is less than the is less than the other rectangle left or this rectangle's top is greater than the other rectangles bottom or this rectangle's bottom is less than the other rectangle's top so if I return the result of this Boolean expression if any one of these things is true right if if any one of these things is true right if this left is greater than that one's right or this right is is less than that one's left etc etc then I know they're not intersecting and the inverse of that would be if it would be they are intersecting so actually all I need to do now is say return the result of not that whole expression and this is a really fast operation to determine if two rectangles are intersecting time out for a second uh yeah ala says uh I think the Left Right top and bottom should be calculated on the Fly and keep the x y w and H for ease of manipulation I think that's true except one of the nice things that um this is a good point and what I could do actually is um I'll I'll come to that later if I need it one reason not to do that and this is I'm um um matcha this could be um this could be uh this could be sorry I'm think processing actually has a rectangle Mode called Corners which allows me to draw a rectangle based on the corners but you're right if I'm going to be using images and Sprites and other things so but I can always double back and add those as variables here I think there's a lot of um different ways I could work this out okay so the question is how far yeah and Mi SOI writes in the chat remember premature optimization is the root of all evil I I could not agree more uh and I would say should you port it in es6 or not Mi is asking how about both you're welcome to Port it in es6 and I'll do the non6 port if you prefer but I definitely want to have a not es6 Port that matches kind of my other examples I really should have both okay um okay let's see how we doing here I'm um I'm trying I'm just I'm keeping track of like Parts here I might want to do this in multiple Parts okay jendrick asks why don't you negate all the comparisons and change the ores to ANS I think I could do that this to me feels a little cleaner in terms of writing it and the way that I thought of it I mean it was it came from a suggestion from Alka uh which I think probably came from um I mean maybe I just on the comment seems like it came from somewhere else but um um it's for me it was easier to think of the whole test for if they're not overlapping and then just negate that whole test but you're right and again I haven't actually tested this code so I don't know if it's going to work okay all right so and um okay so I got to keep moving here so we're GNA make the Frog now I have an idea I have a crazy idea oh I'm excited okay so here we go all right so now I think it's time right we have our sketch what I ultimately want to start with is I want to be able to write some code like this frog F or frog frog and then I want to be able to say a size you I want to have a canvas that's like 640 by 480 and I want to be able to say frog equals new frog and I want to say things like frog. show and maybe frog. update something like this so I want to write the code in an objectoriented fashion where I can just create this frog object now interestingly I made this rectangle object just to keep track of the properties of a rectangle so there are a couple options here of things I could do I could make a new class right I want to make a frog object so to make a frog object I need to say class frog and then I need to uh you know have a Constructor function and I need to have a function that's like show and a function that's update so this is the skeleton of the Frog class the class being the template for making an object here I have the Frog object and now you can I have no errors in my code now there's nothing I didn't like write the actual information that needs to go into the Frog class but I have a question I have a question a frog is a rectangle so there's two approaches I can take here I'm very excited about this CU I haven't covered this in a lot of my videos I'm going to look at something called inheritance what I might have done previously in other videos to avoid talking about inheritance is I might have said ah a frog has a rectangle associated with it so the Frog keeps track part of its data is the rectangle which defines where it is and in some ways I kind of want to do that because I think there will be some Simplicity to that however something else I could do is I could say frog EX ends rectangle meaning meaning the frog is actually a rectangle and it the Frog itself has an intersect function I don't have to retype it the Frog inherits all of those properties Left Right top bottom the Frog inherits the intersect function and now I can add additional functionality to the frog and the reason why this is maybe will be so powerful is I'm going to say car Class Car extends rectangle to so the idea is that the rectangle is the foundation for all the other things that will be in the world but cars and frogs behave differently so they also need their own code so this is how it's going to work so let's comment out the car for a second and let's start working on the Frog now we do have an error here it's giving me this red squiggly line the red squiggly line of Doom Red squiggly line so let's at least look and see what is that error here and it's going to say oh boy we do not like this error I don't have my sound effect for this eror I'll just play this one implicit super Constructor Frogger do rectangle is undefined so one of the odd things about working with inheritance is I need to define the Constructor the way an object is made in a somewhat of a special way so the Frog I mean sorry the rectangle has a Constructor make a new rectangle what I want to say is that the Frog also gets a uh an x a y and a width and a height right that's how I want to define a frog but I need to figure out how when I Define a frog with those values do its inherited properties get set and the way that I could do that is with a keyword called super super XY wh and what this does is this says when I say new frog with an XY width and height then make sure you also call the super super being the parent the super classes Constructor function passing in those values so this initializes the inherited properties of frog okay so now I have a frog that has essentially a rectangle and I can also do this thing where you know what maybe it's going to be useful to me to actually keep track of the these properties here and I'm going to put little underscores here um just to like differentiate I know this is getting a little bit cryptic and I I have an allergic reaction to cryptic code and I really try to avoid it but let me just try to explain what's going on the Frog keeps track of an XY width and height there's some redundancy here the rectangle keeps track of the Left Right top and bottom um so all of those properties are all together and then um uh and then so I initialize the the the stuff that's inherited from the rectangle through the super function and then I'm and I think this is probably Overkill here and I I almost I regret doing this and I want to go back and not do this because I think I could get away with just the um I'm pausing for a second frog and car is XY size says Simon truck is XY with height that's a good point uh I could just keep it as a square only needs one property um people are talking about which text editor they prefer in the chat I'm trying to think if I I I kind through ala's comment do do I want do I kind of I feel like I went on a too much of a digression here and that it's actually going to be totally fine to just draw it using Left Right top bottom um please don't do that that is cringy this.x equals x yeah I should probably do it that way okay hold on I'm gonna I'm going to back up here this is one of these days where I just feel like sometimes I do these coding challenges and I want them to have no editing and then other days I I kind of uh just go off the editing deep end today is an editing deep end day okay so somewhere I stopped before I started going on adding the X and Y I think I explained what super does Roman loo says don't use inheritance it's a bad idea most of the time including this yeah I gotta got excited about it I could have just put the rectangle in the object let's I'm going to keep it we're gonna the super thing made me want to like stop and crawl into a hole um but you know I'm I'm why not I'm going to keep going ah look and then somebody says inheritance makes the code beautiful so we're just trying a lot of different things but I'm not going to add the Redundant variables it kind of was making things a bit of a mess I don't actually need them um uh at the moment so okay so Mata for if you're able to follow this somehow I'm GNA edit point from where I explained what super does and now I'm just going to add the show function okay so now that I've written the Frog Constructor which essentially just calls the parent Constructor the super Constructor in rectangle I can now give it let's have the Frog start somewhere arbitrary 100 or 100 um 50 and you know what the frog is a square so let's do one little goofy thing here which is the frog is never not going to be a square so I can just reuse that I can just show you a little trick here the Frog only needs three variables and then when it makes the rectangle it uses that with for both the width and the height there a little optimization there for no real good reason and then I'm going to get rid of this uh update function I'm going to say background 50 background zero let's just make it black um and then frog. show so I want to see that frog uh so I'm going to write a function now that says a Phill 255 a rectangle Left Right top bottom left right no no no no no left top right bottom right I want to draw there's a way that I can draw a rectangle and I haven't actually done it yet by referencing this point which is left comma top and this point here which is right comma bottom left comma top right comma bottom and processing will do that for me if I say wct mode Corners so this is a particular way to define a rectangle by its corners and since those are the properties that music is coming from me I clicked something by accident boy I hope I don't get a copyright violation on this video hope to edit that out that let's let's edit that out actually oh it's still playing I had some Mozart that I was using that was royaltyfree I thought but okay uh let me go back here the Left Right top and bottom come from the rectangle okay so now I should be able to run this and there it is guess what you've watched a video now for inert number of minutes so far here and what did I do I programmed a square a white square on a black background so in a way I'm kind of disappointed with the way that I'm doing this but hopefully you know because I spent all this time setting up all this structure and all I've got is a square on the screen but hopefully this is going to give us the foundation to really start getting the game going so let's try to move a bit more quickly now let's let's start the oh since the camera went off okay um so let's try to move a bit more quickly here and let's start moving that frog so I think okay so here's the thing if I go back to that gameplay video uh which uh is here where's the Frog come on frog where are you frog FR frog oh there's the Frog you could see the Frog always moves a distinct amount of space with each movement and it looks like the frog is actually moving essentially based on a grid which is about the size of the Frog itself um there's some Nuance to that but uh so what I want to do here is create a function I'll call it move and the will move by some amount or maybe a Direction so let's have a global variable which I think um I'm going call it grid so let's think again I'm going to be very fast and loose with this idea of a grid some games operate entirely fixed and locked to a grid system like Tetris for example I'm going to kind of just sort of think about this Grid in a loose informal way and use it when convenient and not use it when when inconvenient but let's just say the Frog right the Frog's size was 5050 so let's also right now have the grid be 50 and I'm going to say the Frog size is the grid like minus four so I'm going to kind of think of just this idea of there being a grid over the uh window over the whole window and um but the Frog kind of being a little bit smaller than that actual grid and ah there's going to be like centering issues forget it I'm going to be I'm going to keep things really simple I'm just going to have the Frog be the exact same size as the grid you know eventually someday if you were to use like a Sprite or an image you could actually just have some transparent U um uh kind of like buffer border that that keeps it a little bit smaller I'm G I'm going I'm going to keep things simple here so we're GNA have the Frog be the same size as the grid and so the Frog when it moves a given Direction which we could say a given X Direction and a given y direction it can only it can't move diagonally but let's just write it this way we're going to say X plus equals oh no left there is no X right I've defined this frog entirely by its rectangle which is the left and uh the left and right and top and bottom now maybe I want to have some redundant variables to keep track of its X Y maybe want it Center oh there's so much I could do here but let's just let's just keep going let's just fast and loose left plus X Direction and then top plus y direction okay so that's when I want to move it now I want to move it when I press the arrow keys so I'm going to write a function Global event called key press this is part of processing and I can say uh uh if the key is coded um right isn't it no hold on time out uh time out I need to look at the processing reference uh reference uh key code oh if key equals coded um yeah I don't know if I actually really need that because I could just check the key code because that's all I'm going to use is the arrow keys so let's go back okay I'm going to say if the key code equals up and this is all built into processing else and I could use a switch statement here I know everyone in the comments this switch statement but I started writing an if statement I I just never remember the Syntax for those switch statements so I want to just check all four possibilities up down right left so I want I want the Frog to move if it's moving up I want it to move 0 comma netive one if it's moving down 0 comma one if it's moving to the right but if we go back to the code here what am I doing when I move the left when I move let's say I move the right or I move the top if I move the top up right this is the rectangle and I move the top up it comes up here now my rectangle looks like this I'm like growing and pulling and I'm not actually moving the whole thing so I think what I probably want to do in this case is actually keep track of the center of the rectangle and its width and height separately um and move and then calculate the Left Right top bottom on the Fly I'm going to need to do that okay so let's figure out how to do that so in the Frog what I'm going to do is I'm going to create a separate set of variables X Y and W and I'm going to uh initialize those with a this Dot and a this dot so I'm going to keep those separate from the rectangle oh this is bad I probably should put those in the rectangle oh I don't know what I'm doing uh and then when I when it moves the X moves the Y moves now you might be asking why did I use this dot here so I have this thing where I have the arguments coming in oh Java oh Java and programming we should just all quit now go do something else but what what I have is I have the Constructor argument and those are sort of temporary local variables to the Constructor and I need to differentiate those from the actual variables that are tied to the Frog object itself which are the uh so I want to if I want to specify those I'm going to say this Dot and these uh um the the X these are just the constructure arguments okay um so what I want is to change but down here there's no confusion so I'm going to leave out that this dot this is probably a terrible idea for a variety Reasons I'm sure I will hear from all of you but that's what I'm going to do right now okay so then I'm going to draw it I'm going to actually say uh I'm going to say rect mode uh I'm I'm going to just leave the default Rec mode and I'm going to say uh X Y with with okay so now if I do this we're at least moving the Frog correctly now I fix the moving of the Frog someone in the chat wrote this is going to be pong all over again I'm going to do this in multiple parts though I fixed the moving of the Frog but the rectangle is not in the right place anymore so what I could actually do just for debugging purposes I'm going to say wct mode uh Corner sorry wct mode Corner wct mode Corners left right uh left top right bottom I'm going to show you what I right so now if I do this you'll see the rectangle data is not moving but the XY is moving so what I want to do this so convoluted the way that I've created this refactoring later maybe I'll do a whole video that's just refactoring this Frogger thing you'll you'll enjoy that it's coming it's coming eventually uh Left Right top bottom okay uh I don't need that anymore what I want to do now is where when I move it I should say update update um XY W uh update update based on uh XY ww okay so I'm writing a function called update which I will put in the rectangle function which really just does exactly what the Constructor does and I'm actually going to now just in the Constructor change this to this so in other words the rectangle has a way of always updating the Left Right top bottom which I need only for the intersect function and it will do that whenever the X and Y uh changes um so okay so this now if I run this we should see they're both in the same place pause super calls yeah um so you know I'm I'm kind of regretting a little bit my sort of like inheritance idea because I don't know if it's making it more convoluted than not but you know we might get the benefits of this later make this dotp less than this.bottom I'm I'm just sort of seeing in the chat that people are lost um oh I could have just moved the left the right and the top and the bottom yeah maybe I should go back cuz that made it kind of convoluted right maybe I should just fix my move function by moving the Left Right the left and the right and the top and the bottom but I'm going have to do that with everything I I totally want to start this over again cuz I made it in such a convoluted way where it's really just so simple like all I needed to do do was in the was in this intersect function just calculate the left and the right dynamically and just always have the rectangle be an X and Y and a width and a height anybody I there's no way to know because I've gone off the deepend with like stopping and starting I'm wondering how long this is so far and maybe when it gets edited down it wouldn't seem so crazy start over dude oh people in the chat are telling me they want me to start over all right I'm going to go back to I have an idea I'm not going to totally start over as much as I would like to but I'm going to go back to this update thing was kind of crazy I'm going to go back to the part where I moved everything will be okay everything will be okay I have to pee now also might have to take a break cuz I think I got very anxious here okay um let me go back I want to go back to this part this is pong all over again but this will be edited so this is the part where why am I not seeing the Frog um this is the part wck mode Corners Left Right top bottom um Left Right top bottom what what am I missing here why am I not what did I get wrong here where's the Frog it should be at 100 100 I just went back to JavaScript might be better oh the straw pole the fidget I just quit do the fidget spinner now thank you very much um oh things take so long I'm terrible at this have you guys noticed how terrible at this I am uh left right oh left top right bottom thank you thank you brain okay I think maybe that class ended behind me if it's not convoluted it's not Java yeah start over we'll wait okay okay um yes I have been doing Frogger since the stream stream started okay um okay so I'm going back to here and what I'm going to do I'm going to be at the I'm going to be at the problem I'm going to take a break I'm gonna I'm going to put on um some waiting music I'm going to take a one minute break because I also forgot to refill my water bottle and this is now finished and then I will be back and we will finish this we will finish this oh my God time for a dab okay I am now pressing this button where I will mute myself e okay I am back I have some water I know what the problem is not staying hydrated also I feel like this is a little bit low and my neck is hurting cuz I'm like hunched over okay This brilliant idea to use inheritance which now seems so unnecessary okay oh um let's go now okay I think people are trolling me in the chat uh okay keep the music on okay here we go I forgot what I wanted to do okay here we go so I'm going to go from where this gets messed up oh okay so what's going on here so obviously oh I did something very silly which is that I'm only moving the left and so I'm only moving the top so if the top moves up the top moves down then I'm just growing or shrinking the rectangle so this is a problem and I could get around this by saying like oh let me move both the left and the right and the top and the bottom but I think what I'm realizing is it's just going to be better for everybody involved and for the future of this game of Frogger um for me to just actually consider the rectangle itself to have uh an x a y a width and a height and then when it comes time to test for intersection that's where I can just calculate these values on the Fly and so I need to do that for this particular rectangle and then for the other I'll call it o right o o right o o Top O bottom which would be other dox so so what I'm doing is and again I'm sure this could be optimized in some way but if the rectangle itself keeps track of an X and Y in width and height then I can very quickly just calculate the Left Right top and bottom of one rectangle the Left Right top and bottom of the other rectangle and then I can test those so I'm doing a little refactoring and I'm sure I'll come up with a reason why this was a terrible idea sometime later but for now I can rewrite this code like this so this is exactly the same but the rectangle is keeping track of XY with now I have a little bit of an issue here which is that I made the arguments here to the Constructor XY with height and so honestly what I what I need to do to different I'm I'm going to say this do X this doy this do uh oh this do W is W this doy is y and this H is H and this is because in Java um if I have variables with the same name and the temporary param arguments to this Constructor the parameters are x y y and H and I want to use those to set the rectangle objects actual XY w x y w and H then that's where I want to use the this dot here to differentiate them and I don't have to down here because there's no confusion so if I don't say this dot it is this dot but I could if I wanted to add the this dot here okay the this dot the this dot I'm always talking about the this dot okay now everything's good I don't have to Define it by I can just Define it by X Y and W and then I can just move the X and the Y so now my frog is just so much simpler the rectangle can have all the gobbledygook about the how the rectangle is being considered but the Frog just has an X and A Y which I move and now there we go I am moving the Frog around the screen um okay he went away when you left H okay what eight hours all right okay so now oh right that's a good variable name okay so here's the thing do I dare now go on to part I think this might be part one I think the whole part one was just programming the Frog so I'm going to start the Frog at the bottom okay so intersect has an error all right oh yes oh that's why everyone's saying oh right not just because that sounds funny oh right all right I'll come back to that okay so I think that this is going to be the end of part one of programming Frogger I in the chat that's going on live right now I have now been told that I have an error in the rectangle which I forgot to say oh right I just said right where this should be oh right um and then the other thing that I want to add to this is that I want the Frog to start at the bottom center don't worry I'm not leaving there's going to be another video after this I'm just Ed I'm just differentiating them so I am going to have the Frog start at width / 2 minus grid divided by two that's the center minus half the grid that's a little bit no well well and then I'm going to say height minus no no no I just want to say width divided two minus grid and height minus grid I want to put it right there I guess I in the center so that should be grid divided by two right yeah so I want it to be there so now that I can start playing Frogger my screen is not divisible by 50 so let's fix that let's use uh let's make this I don't know it maybe it should just be a square for Simplicity 500 by 500 there we go so now hey I won Frogger yay okay so that's the end of part one in the next video I'm going to add the cars going by once we and that's going to be part two and then eventually part part three I'm going to add the logs and the turtles so see you in part two um so um the reason why I'm doing this I'm not going I mean I have another 40 I'm going to be here for another 40 minutes I might just stay till a little I'm going to be here for another hour um and what I'm going to do is um I'm not leaving I just want to have these um divided into parts so that there're shorter videos that people could watch um and maybe this will actually only be like 20 minutes even though it took me an hour because I kept stopping and starting okay um now I'm going to get and do part two I have a headache I don't I don't want to be here doing this this is terrifying okay um so let me think about this before we get going each kind of car has a different speed has a different row so maybe what I should start first by doing is just have one car and then car should get assigned a row then I could have one car per row and then I eventually could have multiple cars per row and the spacing is probably somewhat random and as they get to the end they just come back to the beginning okay okay I know I'm like for some reason I have so much trouble with these little simple games and yet I'll be like I'll just do that neural network programming thing okay here we go so we're going to be now in part two stay hydrated for part two get some energy I never I should I I I don't know about doing these live sessions before I have lunch I needed to eat a bigger breakfast clearly I didn't have my weedies all right I might not be getting to that followup perceptron video today but okay here we go hello welcome to part two of Frogger so what I made so far in part one if you can believe it I don't know it's all I got so far was a rectangle that I can move around the screen by pressing the arrow keys and now what I want to do is add some cars so I want to add the cars that are moving across um where which I have to avoid so what I want to do is first I already have a car Tab and hopefully I'm hoping boy am I hoping that all the work we did to figure out this rectangle thing and this frog thing will pay off when it comes time to program the car and it's going to be really simple so let's just first do one car eventually I'm going to need an array I'm going to have multiple cars but let's just have one car and I'm going to say car equals new car and I'm going to put the car at zero it's going to start at zero and it's going to be it's Y is going to be height minus grid * 2 and its size is also just going to be GD now the car and the truck could have a variable so and I'm going to I'm going to make it uh a so what did I miss here car so I'm going to have the car I'm working this up I'm just going to stay here so I'm gon to have the car be start at I'm going to comment this out for a second ah oh edit this part out I screwed up again um I was going to just use the ah never mind I can describe this this is having the car start at the bottom uh two row two rows up from the bottom and having its width be the side of the grid and its height being two no I want it's width if it's a truck it's going to be longer so I'm going to have it be a little bit wider just to try that out and its height be just the grid then I'm going to say uh car. show and let's just see if we can see the car now the car is not showing H what if what if I dare have the car car no this is a bad idea cuz ultimately on some level probably going to be drawing the cars in different ways let's just have the car extend I was thinking about having the car extend frog and I would inherit the show function but I'm actually just going to leave that here and I'm going to make the car like a slightly different color just for right now uh and I'm going to I need to have the same exact Constructor basically uh except I'm going to include a a height and so this now is the car so if I run this we should see okay what happened here ah whoops with height there we go uh what did I get wrong super XY with height uh something is wrong I got to debug this that's what I was expecting to see but I want to see it wider so what I want it to be is grid time two this value goes here which goes ah whoops just the way that I'm drawing it there we go that was just a little bug and now there we go so there is the truck there is the truck or the car and um okay so uh now we've got that now what I need is for the car to have maybe an update function and the car should also have its own variable called speed so let's just set the speed equal to two so this is one of the wonderful things about inheritance is I can inherit all the properties from rectangle and then add my own so the car is also going to have a speed and then speed is going to say xal X Plus update is going to say xal X plus speed so I'm going to say camera shuts off so I'm going to say uh car update and now we have the car moving yay and I can go past it as it moves by now when the car goes off I probably want it to reenter so what I Pro in update I'm going to say if x is greater than wi then x equals negative height never negative width so I want it to start off the screen and reenter so what I mean by this is when the car's X which is its left side gets past the right side then it should reemerge on the other side and I might want to you know maybe have that be more of a delay or something so I could like you know maybe if it's you know further off the screen I could use W uh I could actually probably let me just use the grid size which is probably um oh but that I definitely want to do uh negative w u you know negative W minus grid there's just so many ways I could do this but I just want it to have a little bit of buffer so it's got to go more than just with and then it reenters so you can see now I've got look at this we're moving along now we've got the car moving so what do I need I need to have multiple cars okay so let's just think I could use an array list which allows me to have a flexible amount of cars but I for Simplicity I think I'm just going to have a fixed amount so I'm going to say car equals car car s cars index zero is that new car and cars index zero show and cars index zero update I want to make sure that just works what did I get wrong uh I didn't initialize the array cars equals new car with you know 100 cars so let's say there's well there's not going to be let's just let's go look at Frogger for a second what's a reasonable number of cars so you can see there's 1 two 3 1 two 3 1 two 3 1 1 2 there's some configuration but that's 3 6 9 10 11 12 13 13 what a lovely number let's have oh uh no no that's actually 12 but whatever let's just have 10 10's a nice round number right now there's only one car okay now what I need to do is okay so how many um how many rows of cars let's say I have 10 cars and I have five rows that would give me two cars per row I mean this is sort of all arbitrary making this up but let's let's think about how many rows there are so I'm going to say for in I equals z i is less than let's just say there are going to be three rows for right now i++ so I'm going to say row equals zero row is less than three row Plus+ I almost kind of want to maybe I should do this much more manually let's do this let's configure this manually let's just say I'm going to do um let's keep track of an index which is zero then this is going to be the first row I'm going to put three cars in the first row so the three cars they're they need a starting X location uh x uh equals uh I * 100 + 50 so what I want to do is arbitrarily space them out and let's just say those are there's only going to be three cars right now there's only going to be three cars you'll see where I'm going in a second so I'm going to and you know what I can actually I forget I can use this enhanced Loop which is like a 4 each Loop for every car car in Cars car car show car update so this is a nice way I could say well whatever amount of cars there are show and update all of them okay so now what I should have here is three now you can see I didn't do a very good job of spacing them out so let's space them out more I * 200 uh I don't know why I have this Plus 50 there I'll just take that out right so now we can see there are there's the bottom row right so I can now that looks like really hard it's probably too hard so let's just have uh two cars in this row and space them out by 300 pixels uh and um I just need to match that I only have two so far there we go so we can see that's one row yay yay this is working I got distracted by my own game so let's now new so I'm going to to put a comment here oh and the whole point of this is I wanted to do index I want to keep track of the index boy an array list might be easier here because what I'm going to do this is Row one I'm doing this and again this could be optimized I could do this less manually I'm going to do row two which is now uh I'm I'm going to also add two cars to Road two so now I have a total of four cars let me move this down here and for row two I'm going to add those cars height minus grid times 3 right because I need to go up another row I want to make these just square and they are separated by uh 200 pixels uh and let's take a look at this now I probably want to offset that by some amount so they look and again this could be random and they're oh they're moving at the same speed so each row should also get a different speed and and rodc in the chat is making a really great point which is I should make an object which is just like a row or a Car Lane object and it can keep track of its own cars and its position and speed I'm going to say that's like a refactoring thing that I'm going to suggest maybe people do as a exercise for after it because I'm going to keep things kind of simple here but that is a really great suggestion so one thing that I want to do is give these a speed so let's say for also I'm going to add a fourth argument here so this has a speed of two and this is going to have a speed of 3.5 uh and so now the car should also get a fourth argument called speed s the car Constructor should get a fifth argument so I'm going to want to be initialized so now also these cars which are all in row one have this particular speed and these cars which are all in row two have a different speed okay let's run this now and there we go we can see this looks a bit more like Frogger let's see right whether this is difficult or easy I'm not sure let's add one more row row three let's put in uh four cars they're going to be their height is going to be one more spot on the grid up and their speed is going to be uh really slow but um they are not spaced out by as much I'm just picking some random numbers this is Row three and what did I mess up uh so I have 2 + 2 + 4 is eight cars total there we go so now I have again now I have a whole bunch of cars and that you know again I could also have them each have an image associated with them it's their own animation but is this playable that's the question yeah that looks like I made it but have I actually you know so we've got a row of cars I'm going to just keep three but what I need to do I've got one more feature I've got to add to this part which is that I need to check that intersection thing but guess what I don't know why I spent the part one of this video's tutorial series on making frog or doing the intersection cuz I could have just waited now but thank goodness we did that because I have this function already so what I want to do is now say here if car intersects frog or maybe I want to say frog intersects car it doesn't matter frog and car both extend rectangle rectangle has in itself this convoluted but it works we don't know that it works I never tested it intersects function so now I could say if they intersect then let me do something like um let me just print let me just do a print line you know game over or something so now we should see if I look down here in the console oh is it doing it when uh I wonder if there because of yeah it's actually intersecting so I've got a little bit of a problem which is that it considers them when they're right next to each other intersecting so I think I maybe need to space out these Lanes a little bit uh which way I you know to give them a little bit of buffer let's do that I'm trying to think of which would be the best way to do that here I've kind of got such a ridiculous way so let's um add so let's um I I need to say uh row is is two so minus grid time actually one way that I can do it let's just do it this way as I'm just going to add a little bit of buffer two pixel buffer to grid this boy I'm really this really needs some serious refracturing but there we go you can see now there's a little bit of there's a bit little bit of daylight in daylight in there so I shouldn't be getting I don't see game over here I've got a little bit of daylight so now I can move ah game over oh look at this oh but I messed up the whole point of the grid thing now my frog is Off the Grid okay so oh oh time out for a second uh what do I what do I what do I want to do here change the intersection code to less than or equal great suggestion so what I'm going to do forget about that I let let me go back let me back that was a that was a bad digression let me undo this that's a much better idea I mean visually I'd love it to have that daylight there that's why I was doing that because I think it looks a little nicer so let me go back to running this I don't know you can really go as far back as you can Mata so we have a problem here which as you can see I see the game over already which is that it's actually intersecting when they're right on top when it's when they're right next to each other and that's because I because in my intersect function I'm actually checking right remember I'm negating whether they're not overlapping and so they shouldn't be overlapping if those edges are equal and so I think if I add this in here that should fix that problem oh and it's less than or equal uh not equal less than less than or equal okay all right game is not over okay so now let's see if I can do this can I get through them I did it I saw no game over down here now let's make sure the intersect function is working game over game over aha so we have actually what do I want to do let's let's actually just have If instead of game over let's um let's just reset let's call a um let's call a function called a reset game and I'm going to make that function I'm going to just put it up here at the top reset game game and what I'm going to do is and I think I'm just going to just reset the Frog's location uh and I'm I'm gonna I'm just going to put this here I'm going to make a new frog object and then I'll just call reset game here so I could be more thoughtful about this there might be a lot of other things you know ultimately I'm not really doing lives or levels and this isn't really a reset game but one thing you can notice here if there are a bunch of things that you want to reset that happen when the game starts but then also happen later when you make when something happens like the the frog and the car Collide I can have a separate function that does all that call that both in setup and also down here so let's see now if I can make it through not too hard to play actually let me run it again and mess up yeah so you can see if I mess up it just puts me back at the beginning so we've got we've got the basics of Frogger now part two done I'm going to end this part two and in the second part I'm going to add the logs the third part that is I'm going to add the logs at the top that instead of avoiding the frog has to actually jump onto and and ends up sticking to okay thanks for keeping going with me and I guess the will be a third part to this okay oh I still have row equals 2 make their side smaller than the grid yeah all those things would be good ideas frog are is supposed to move a bit more smoothly he visually hops across he can be caught mid Jump by a vehicle oh that's interesting um I'll let somebody else uh fix that Where's My Water um how many I haven't checked the I haven't checked the Spinners let's check the spinner which I won't have time today uh well I forgot what the um I think I closed that do I have it here fidget spinner simulation let's take a look at that oh look at this I got to yes I'll have to come back and do that another day um it's 1240 I so I want to do the okay so what I want to do now is create a um should I refactor this before I do the logs to create a lane object and the lane object store has a certain number of cars as I'm just going to run into this horrible problem now of all that manual hard coding um when uh when I get to the next step CU I also need a SA safety zone you can see I need a safety zone here please do the fidget spinner I think I should finish this don't you think I only have one more part to do I I think I might not bother with the top thing I'll leave that as an exercise um and also what happens when I need somebody to tell me what happens when the Frog lands on a log and the log goes off the screen do you get to like come back with the log right this is the most complicated part because you have to be attached to a particular log with an offset um okay let me fix this thing that I still have row two in The Code by accident for no reason you die so you have to if we do you have to jump off the log before it gets to the other side that's sad okay I think I can program that confirmed okay yeah okay it pushes the frog off okay um all right so how do I want to do this do I want to refactor a lane object I think I don't I think I want to keep with my I think I want to keep with my lazy way of doing this um because that could come later cuz that could come later you don't die straight away it slowly pushes you off Oh you mean you stay on it while the log is going and then and then if the log goes you you fall off the edge ah interesting oh car should be moving in the opposite direction oh right I forgot about that so I could that's easy um by uh by just messing with the speed so I'll do that I'll do that when I get to the the logs okay um okay let me let me have the cars move in the opposite direction no I'm not doing machine learning today negative speed okay let's come let's let's go into part three got to program this okay oh my goodness 700 some people are watching okay I gotta got to do a better job energy energy jazz hands okay okay welcome to part three of making Frogger in a way that's terrible and I'm doing a terrible job I'm just trying my best here but hopefully you're learning something and you will make a much better version of this what I have so far in Parts one and two I made the frog that moves around in Parts in part two I added the cars and I also ma implemented that if you if you uh hit one of the logs um hit one of the cars can't keep anything straight you it resets the game now there's a lot of nuance to this and you know in terms of visual design and there's a lot of ways this could be improved but I'm just kind of keeping it simple and I look forward to everyone's creative uh improvements of this but I do need to add something to this all the cars are moving in the same direction dire and that's not actually how Frogger Works some rows the cars move in the opposite direction so let's before I get into the logs let's at least add that so let's just say what happens if I in row two give the cars a negative speed soga 3.5 instead of positive you can see that's working but I don't have the code for them to come back so what I need to do in the car in update is if speed is greater than zero so if they're moving to the right check if they get off that edge else by definition they're moving to the left else if x is less than negative grid then X then x equals uh width plus grid right so this is just the opposite of checking instead of checking if they're off that uh if they're moving to the left I need to check if they're off that edge and now we should have yeah there we go so this is much better already uh just sort of in terms of what's going on okay so then there should be a sort of safety so I might maybe I'll draw these there's like a safety row at the bottom again and I really this this project really needs a lane object and the lane keeps track of what's in it and I think that that's something I'm going to leave maybe I'll do like a part four or something that I make that but I just want to visually draw something in for those Lanes so I'm going to say a rectangle um from zero uh height minus grid with the full width um to um uh with a height of grid and let's give that um a sort of I don't know what to what color to draw this let's try uh let's try this okay so we can see that's the Safety Lane and maybe maybe I should give it some transparency actually would make more sense so you can see that's the Safety Lane down here I'm going to add another Safety Lane which would be uh height minus grid times where do we get to so far we had grid time 2 grid time 3 grid Time 4 so now I'm going to have a safety Lane at grid times 5 there we go so we can see that's a safety Lane okay so now what I need to do is start putting some logs above okay are you ready for logs I'm ready for logs ready for logs okay um so what do I want to do I already have this whole car object could I possibly I think I could get away with having log extend car right because a log is going to have a speed a log is going to have the same update for function a log behaves exactly like a car there will be some difference so let's try saying and it could be a log or a turtle but I'm just going to keep everything a log right now I'm going to make a class called log and have it extend car let's see how this goes then what I want to do is what's the car Constructor look like this so what I'm going to do is just say super right because oh log a log is created just like a car then okay so this is actually pretty good we we don't have any different functionality just yet so what I'm going to do is I'm going to create yet another row which will actually be like row it's actually row five technically row I guess if the rows have numbering the rows the rows are numbered um by I I let me let me look at what's what's here actually oops what just happened comment this out my row numbering is horrible 0 1 2 3 four and I'm drawing them at but the problem is I'm drawing them from the top so it's really getting drawn at row + one okay so again I need a whole I really need to refactor this whole row Lane thing I'm kind of I probably should do it now but I'm I'm just going to keep going so the next one is not at times five that's the Safety Lane it's at times six but it is row five and I'm going to put two logs in it and I'm going to say logs I'm going to Res start index over at zero and I'm going to put two logs and this should be times not five but times six and we need to have an array called logs and right now I'm going to say I'm just going to say I'm going to just start with two logs and then I'm going to uh logs equals a new what did I what did I get wrong here logs oh log not logs how am I doing then I'm adding the logs now what I'm going to do is I am going to have the same exact Loop here but I'm going to do it for all of the logs log so I just want to see do I now have there we go so you can see that those logs are identical now let's change them up let's make those logs have a of that row have a WID um that's three wide let's have them go a bit faster and let's space them out by quite a bit uh more okay so now we can see and two something else is moving exactly at two let's um so let's move them a little bit faster than that okay so those are the logs now I can't visually how come they're not coming back oh cars are missing what happened oh I have a bug what's going on here cars going to the right are no longer in the right spot when did that happen because I use and and not a nested oh yeah look at this my logic is way off here oh everybody told me this like 10 minutes ago do I have to go back yeah I need to um I really need to say I right I really need to say this right I'm just testing this before I yeah that fix it okay hold on no it's okay it can it can live there for a little while right right it can live there for a little while okay so there was a pretty major bug that most of you probably for at least like 5 or 10 minutes there were probably yelling at your TV television machine I don't know how you watch this stuff if you're even watching it um which is is that anything moving to the right actually never came back on because of the way that I have this this if statement is quite flawed because why is it flawed if if speed is greater than zero and it's over to the right do this otherwise just check if it's less than I really need to check I really need to also check speed here wait hold on I have to why why is that I'm like my head is hurting here why can't I just check if speed because things moving to the right oh oh because oh oh oh I understand it now I think let's say that again things if speed is greater than zero and otherwise it could still be a thing with speed greater than zero if it's no longer over there so it it gets like set back and then it's less so it gets set back over there so it's getting set back and forth so I really need to check it only I only want to do I only want to move things back to the other side if they're actually are things that are moving to the right so this should really fix that problem uh and there we go thank you now we have cars and now I'm ready to jump on a log so here's the thing oh my goodness I really need that lane object right because now I need to know I really want if I'm on if I am not intersecting a log and I'm up here we've got a problem okay so I'm going to do things very man ually where I can really just check the Frog's location right I only want to start thinking about the logs if the frog is where Above This safety line what value is that so let's just see if I can get this right I'm going to say if frog is I'm just going to say right now if frog doy if frog. Y is greater than oh no is less than what was that Safety Lane it was grid height minus grid Time 5 height minus grid I really could have done this from the top instead of this height minus thing but that's fine height minus grid Time 5 background let's just test this out oh I have to get through the cars to test it there we go okay so that's good this is the correct test to now know the game is over if I'm not intersecting a log so let's figure that out how do I check that Boolean I so what I need to do is check all logs and if I'm not intersecting any of them so let's do that inside this Loop if frog if the frog is up in that region um I'm I'm going to assume that I'm not okay I'm going to assume that I'm not okay I'm I'm not okay but if log intersects frog or if frog intersects log then okay is true right so now if all of that is done if I say if not okay reset game so one thing I want to do right now is I want to start the frog in the middle so let me start the frog in the middle which is the Frog starts at height minus grid Time 5 right I want to just start the Frog there and so if I just just into the whoops if I jump into the river but I should be able to jump on a can I why can't I jump on a log what did I miss here uh what did I get wrong here if frog intersects a log my okay should be out of the loop oh yeah of course so the the okay has to be out of the loop of course because I have to start I'm just doing this one time through draw with my frog I'm going to assume the frog is okay and this also should be out of the loop right so after all is said and done so this now should allow me to hold on oh wait I'm trying to jump I gotta oh I have a problem yeah I'm on a log and now I'm not I'm on a log you can't okay so first of all I want to draw the Frog last so I can see what's going on here I'm want to draw the Frog last so you can see I can jump onto the log now why can't I move do I have this wrong should this be times six why can't I move in the Safety Lane why can't I move in the Safety Lane oh oh no no no no ah so also of course oh my God crazy a silly obvious problem here now which is that I I wonder if I should do this in a separate Loop you know what I think I want to do this in a separate Loop just for clean just for sort of clarity sake because I always want to here's here's the reason why I always want to show and update all the logs but I only want to deal with this frog log intersection thing if the frogs within a certain zone so I'm just going to do this you know big deal let's Loop through all the logs twice so I'm G to assume that I'm not okay because clearly I'm not okay not okay I'm going assume that I'm not okay I'm going to go through all the logs if IUD the logs I'm going to be okay and only in this instance if I'm not okay I'm going to reset the game so this only happens all of this only happens if I'm within this uh region over here so now I can move freely I can even move back down but now I I'm no good if I jump into the river but I'm good if I jump on a log but guess what what's got to happen now if I jump on a log I should move with the log I should move with the log so I need to be attached to a log oh this is great so let's have the Frog have a variable part of it which is an attached log then I'm going to write a function I'm going to call it attach and I'm going to say attached equals that log so this variable is going to be by definition null at first okay now what I'm going to do is if I intersect that log then I want to say frog attach log so I want to attach the log to frog to that log I'm also going to need an update function so the Frog needs an update function and the Frog it's funny I thought this would be functionality of the log so far the log doesn't need any additional functionality I'm putting it in the Frog which I think is okay what I need is an update function and if attached is not equal to null so if this frog is attached to some log frog. X plus equals that log speed it should move according to that log speed oh attached speed okay I might need a I don't know that I need a detach function because when I can be attached to One log at a time and when I jump I'm either going to end up in the river and so I'm going to be the game's going to be reset or I'm going to attached to a new log so let's look at this now let me try to jump onto this there we go look at this I'm attached to it jump on this attach but you can see if I try to jump off I'm reset there's a little bit of an animation issue I really should see myself jump off and see that I'm in the wrong part maybe animate and then and get reset to but let's add let's add some more Lanes with some more uh logs okay so this was row five now I want to add row let's add one more row row six let's put uh three logs and those logs are less wide um and they move in the opposite direction more slowly and they're spaced out by a different amount I'm just like making up random numbers here oops and then if I add three logs I need to make the array have five in it oops and those should be at up one more Y location okay so now we see o what's going on here the those are disappearing too early ah I have another error I wonder if somebody I'm gonna I'm going to when I jumped back the Frog was still moving I definitely need a detach okay good point good point so reset game in reset game this is pretty easy I should just say uh frog. detach also so let's add that function or you know what I can do I don't actually need a new function I can just say attach attach null so that's kind of essentially detaching it just set the attached thing to null that'll fix that problem but I have a different problem I lost track of where I was the in car right if x is less than if speed is less than zero it's moving this way and X is less than negative grid no no no no no no not grid this should not be grid this should be this should be with Plus that should be with plus plus grid because that's the X but I need to find when the left side right the left side is X Plus width so w if it's less than negative W minus grid right it should get all the way off there we go okay so I just fixed that so now I should be able to jump here and jump there and jump back down and jump back up look at that jump back down and jump back up I just could do this all day jump and then I get reset now the question is can I jump onto the edge of it let's try that can I jump onto the edge oh come back oh it's still moving why am I still moving oh because when I jumped down I didn't detach okay I got you everybody so if I jump back to the safety zone which is if I'm out of this Zone I should also make sure to detach attach null oh convoluted code we could refactor this there'll be a whole video on refactoring someday okay so now I could jump up and jump back down and I'm not still moving what I wanted to show you was that oh am I allowed to I can hang off the edge which I think is okay let's make the Frog a little bit transparent um let's give the Frog a little bit of transparency just so we can see that better you know visually I I encourage you to think of a better way to visually do this um but we can see kind of where the frog is okay so I think we're kind of done I should add another row I should add the buckets at the top what am I missing pause for a second I should Al oh I know what I'm missing the Frog can't go off the screen create a new frog there not require oh I could just create a new frog not required to detach yeah good point uh okay okay so there's one thing we need to deal with this problem here goes the frog frog my frog is gone so the Frog can't ever actually leave the window if the log starts to leave it needs to get pushed off and I think there's a way we're going to be able to do this I'm going to do this just in the update function I'm going to say frog dox equals constrain the X can never go farther than zero on the left side and it can never go farther than width minus the Frog's width on the right side so let's look at this what's going to happen now and it gets to reset that was so remarkably easy there we go and the frog is now going to slide and then get and reset so if I don't jump off in time so if I let's see if I can jump off in time now there we go I jumped off in time can I jump on so that fixes it oh my goodness I think let's add one more row and then we can kind of be done if I just make my Frogger thing right a little shorter I mean I should do the buckets at the top but but you could probably do that let's add one more row row seven row seven is going to have two more logs so seven logs it's going to have two more logs those logs will go in the other direction positive direction really fast or really slow let's just make them really slow let's make them super wide and spread out by a lot and let's see oops and they need to be one row up so much hard coding here there we go I made this kind of easy so now yay so let's let's let's reset the Frog back to the bottom and now let's play Frogger hey I don't know what what's the Frogger music okay I got to get past ah shoot I did it okay now I go on this log on this log on this log and then oh went in the river at the top I should be allowed to get to the top so the whole top should be another safety zone which is like I'm going to uh add another rectangle at the top there 0 0 I'm just going to have the top b double height that's my safety zone and so now I should be able to say if frog doy is less than this and uh and frog. y so the Frog should really just keep track of which row it is in oh boy the grid system the T I'm going to refactor the whole tile based system of this frog doy is and it's greater than grid times two so this should allow me to get to the top now okay yay that is Frogger in three three parts in what's probably like about uh 72 hours of programming time with just this simple result there is a lot of spaghetti uh as in this code um I think I would definitely like to come back this won't be released as quickly as you might I would like to come back and do a refactoring of this to make it better I look forward to hearing all of your comments about refactoring so what can you do to uh so if you're looking for the code for this and you're at the end of this video you can find a link to it in this video's descript deson there will be both this version this processing Java version there will be a JavaScript version using the p5js library um and I encourage you to add your versions to the read me make levels make lives make a timer uh add visual design add sound make the frog green I will make the frog green at least I will make the frog green I will make the frog green right now we really have Frogger and I could very easily with inheritance that I have so far um I could uh and also oh the actual game of Frogger has those buckets at the top let's look at um let's look at this what did I miss so think about this visual design create your own visual design little animation make your own version of this thank you for watching this boy has this been a struggle I am really really struggled to make these what seem like such simple games but I am somewhat pleased with this result if we put them side by side there we go a Frogger Frogger Frogger okay um see you guys in a future coding Challenge and I will come back I think I would like to come back and revisit this after I get suggestions and feedback so look forward to that video and when it comes I will link to it in the description see you on the next ride on the coding train okay all right uh what time is it is 110 unfortunately this does Bring me to the end of today's live stream oh my goodness that was hard and stressful um I think that what I need is um really appreciate the nice comments I feel like I did a terrible job today um and my neck is really hurting me I think something about this setup like maybe this needs to be higher but if it's much higher that's too high um uh okay so let me think here if did I I think what it might need to do in the introduction I think I was fine in the introduction I don't think I need any additional intro to the first part of the coding challenge do I um I think it was fine so I can take five minutes and answer some questions oh I've got to get out of here by 130 and it's going to take me a little while to like turn everything off make Galaga next no it was fine okay did I mention processing and Java at the beginning I think I did yeah it's funny how like such a simple thing like just adding some color to the Frog I don't know why oops I couldn't think of that um I'm actually excited this is to me one of the much more interesting games that I've made in terms of you know snake and Space Invaders I feel like there's could be a lot of expressive variations of this um River should be blue well I just need to do a lane I'm gonna I'm going to do a fourth part to this so things that I need to do I should remind myself I should let you guys know that I'm going to be out of town next week Tuesday through Friday so I'm going to hope to do a live stream this coming Monday or Tuesday morning um and what I will do in that live stream is Frogger lane refactoring or Lane SL grid perceptron followup and fidget spinner simulation so these are the things that I hope to do in my next live stream and then when I come back for my trip out of town There's a good solid 3 week where I'm in town and so I hope to really dive into the neural network stuff then it'll be around the sort of July 4th sort of stuff here okay um make it all more squared okay I'm exhausted this was 2 hours and 15 minutes my neck hurts I'm tired I hope editing magic makes this interesting and enjoyable to watch um yeah I know the face pal with the fidget spinner add color no no this is for all of you to to recreate this magic with your own visual design I will keep mine lame can we do the same coding with JavaScript rather than Java or it's going to be very different so I will release me I am so me volunteer to Port it but I will if um anybody else can help Port it and I will certainly be happy to Port it myself it will look very very similar the thing that will be the most different is how the objectoriented stuff works I'm not so convinced honestly right now I kind of don't know that this inheritance thing really added a lot of value here I mean I did get because the log could actually really just be the car it's just like a um and it really I'm just interacting with it with the frog in a different way so but the rectangle could just be a piece of data inside of the car object but say lovey I learned a lot today thanks that's nice hi from France bonjour it didn't add much value oh the objectoriented thing not my the not my whole session okay that's good yeah I you know it's funny like I um I have a new appreciation for game programming and people who teach game programming and you know I sort of take it for granted that and design patterns because I think that I'm just sort of flying by the seat of my pants with these things and you it clearly can see that there would be some uh that there's some like reusable ideas and patterns and libraries that would make doing this stuff so much easier um okay so thank you guys I will put on my Goodbye song which sort of feels silly to me at this point it is 2 and A2 minutes um thank you Montreal Canada I'm going on a vacation to Canada sometime later in July I will be going to New Finland if I have any uh doing some bird watching going to see the puffins I hope uh near St John's if I have any viewers from that part of Canada uh please let me know give me your recommendations we can do a live nature coding Train episode um uh any plans for the h 100th live stream what number am I on what number am I on I don't have plans for the 100th live stream I need ideas for that hopefully the timing works up up you know what should I do for the 100th live stream one is I could wear a full train conductor outfit that's one idea I have one sitting over there that's idea number one for the hundreds live stream no that's the I'm on the 73rd coding challenge Simon the live streams actually have a different number so um I don't I think I'm this is like 95 or something in terms of live streams oh I didn't read a red Burns quote today I don't remember what the last one I read was I think okay here's another one if you can resist the temptation to run back to the shelter of your comfort zone yeah you know I have to say doing this YouTube channel as much as I uh is definitely an exercise in that because this does not feel comfortable at all today um so that's a piece of advice you can take with you today do the 100th live inside a train that's an interesting idea uh yeah the London trip that I did speak about at one time unfortunately did not H is not happening I will post about my uh travel in the uh slack group for those who you know would love to have a Meetup or something European Meetup at some point so have to put that on hold for another um summer or another time but I I am still trying to plan it maybe it'll be next fall that'll come 100th live should be entirely silent film I like that idea mine I always wanted to be a mine okay make railroad Tycoon that sounds hard okay oh five more seconds thank you everyone for tuning in I will be actually be back this coming Monday or Tuesday if things go well and then there will be uh another week Hiatus before another live stream so thanks for watching um patreon.com coding Trin uh processing foundation.org to support processing uh coding tr. storenvy.com if you want to get this tshirt I don't know why you would want to but if you do and I will see you all in a future live stream uh shiffman on Twitter is a great way to get in touch um and I will see you all again soon goodbye enjoy your weekend