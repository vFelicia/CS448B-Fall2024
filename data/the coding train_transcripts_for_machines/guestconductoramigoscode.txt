[TRAIN WHISTLE] Hi, everyone. Welcome to The Coding Train. I'm Dan. I'm still quarantined here at home in Brooklyn, New York. And today, I am bringing you a guest video. So I've had guests on The Coding Train before tutorials, presentations, some live streams even. I'm dedicating myself this summer. I'm really trying to make a commitment to having more guests on the channel. I'm calling this Guest Conductors now. And what I want to do with this series is highlight others in the community that are doing work to expand the fields of art, technology, education, and activism. So I'm going to bring you guest videos and tutorials and live streams. So one of the things that I think is important to say is that there are barriers of access to technology, and there is antiBlackness within the tech community. And so I want to say Black Lives Matter. And one of the things that I want to do with this series is use this platform as a way to amplify Black voices and perspectives. So I want to extend this platform to people beyond me, and I want to offer opportunities for others to share their stories openly, honestly. You could talk about really anything you want to. This platform is available. But one of things you might want to do is just teach about something you'd love to make or explore with code. So if you want to get involved with the Guest Conductor series on The Coding Train, there will be a lot more information. I'm not so eloquent in my rambling explanation of this. But hopefully, in the video's description, if you go down and read, there will be a lot more information about what I'm doing with the channel and how to get involved. So first of all, this isn't actually the first in this Guest Conductor series. If you missed Aren Davey, guest appearance just a couple of weeks, Aren runs a Twitch channel. She's a Processing Foundation fellow, and she runs a Twitch channel called Cozy Coding. It's the coziest place on the internet, with p5.js jam sessions. And really, it's great if you're a beginner coder, if you're experienced. She's just doing awesome work there on Twitch, so check that out. But today, I am very excited to bring you Nelson from Amigoscode. So Nelson from Amigoscode is a software engineer. Like a real life software engineer. Not like one who just plays one on YouTube, like me. And he makes a lot of videos about coding real projects and learning the skills that companies are looking for. And he's got all these courses. Thousands of students have taken his courses. He's got a Facebook group, a Discord group. There's over 5,000 people there talking about code. So I really encourage you to check those links will be in this video's subscription to go take a look and join the Amigoscode community. But one of the things I'm really excited about this video, which is called How to Switch Jobs and Become a Software Engineer it's a reupload of a video that already exists on his channel. So first of all, just go over there and watch the video. I'll put a card up for you to click. But what this video addresses is career development. What does it mean to work as a software engineer? It's not something that I really spend a lot of time talking about. It's not something that I claim to have really any expert knowledge in at all. So I think this is a nice complement to some of the work that I'm doing. And regardless of whether you stay here and watch it I'm going to play it for you right now or you head over there and watch it, whatever you do, Nelson will tell you I'm going to be quoting from Nelson smash. I can't believe I'm saying smash. Don't smash my Like and Subscribe button. It's very delicate. But Amigoscode, smash the Subscribe and Like. Enjoy this wonderful discussion from Amigoscode. Subscribe to Amigoscode. Check out Nelson's work there. And I look forward to seeing you in more Guest Conductor videos on The Coding Train. See you soon. [TRAIN WHISTLE] [NONENGLISH SPEECH] What's going on, guys? Welcome to Amigoscode. If you're new to my channel, go ahead and smash the Subscribe button because that's the way I can grow and I keep on providing more content like this. And also, smash the Like button. It makes me really happy in knowing that you guys are actually enjoying this, so I can carry on providing content for you that will help you to become a much better developer. So this is what Amigoscode is about. So also if you are [BEEP] If you're not [BEEP]. And also, if you are not [BEEP] And also, if you are not part of the Facebook group, go ahead and join because right now we are over 4,000 people, which is insane. I remember when I started it was just me. But over I think it was over the last year or so, especially the last month or so actually, there's been like a lot of people joining, a lot of people contributing. And now we have this thing called this thing where we do mentorships. So we have a couple of us where we mentor people, guiding them on the right path in terms of becoming a better software engineer and securing a job and all of these things. So go ahead and join the private Facebook group. So in this video, what I want to talk to you about is the easiest way for you to switch careers. The easiest way for you to switch careers to become a software engineer if you have a job. So this only applies for you if you have a job. So if you don't have a job, I'm also planning on doing a video on that. But if you have a job, what is the easiest way for you to switch careers and become a software engineer? So let me just tell you that and I know people that have done it in many companies. And I don't know whether it is something that it's been mentioned out there. But this is one of the easiest ways. So if you work for a company if you work for a company and they are a tech company and even if they're not tech but if they use some kind of technology, if some part of the business you have software engineers inhouse. So let's say you work in a department and you know that the company has software engineers within your company. It doesn't have to be in the same location. It could be in a different location. But if there are software engineers, then you are in a good place. Now let me tell you how. So let's say that you work for a company and they let's say you work for Schrap or Twilio. Let's say Twilio. Or really, it's any company any company that they write software or they have some people writing software. So if you want to switch to become a software engineer, this is what you should do. So I don't advise you to quit your job and then attend a bootcamp, and then apply for jobs. Don't do that yet. So bootcamps should be the last resource that you should try. So what you can do is if you know another company uses, for example, a particular language let's say, Python. So they use Python, and let's say they use Go lang as well, or JavaScript. Let's say they use these three languages. So what you do what you do so this is even before you switching and approaching people. What you do is you try and actually use and try. You go and learn these languages. So Python, Go, and JavaScript. Go and learn these three languages. So the platform that you should be using is YouTube. So you've got many people teaching these languages, and they're really good and awesome content. And I'm going to leave a link on some of the people that I recommend, such as Free Code Camp, Traversy Media, and he's got lots of videos on JavaScript. There are many, many people out there, and the content is amazing. So there you don't spend any money. So you are learning for free. So that's the goal, really. You don't want to spend any money. So you learn for free, and then you kind of join, for example, my Facebook group or any other group or any community that talks about coding. And that way, if you have any questions, you can post them, and then people will get back to you. And for example, in my group, we actually talk to people. We have video calls and so on and so forth. So go and join a community. So if you have any questions, you go and ask them. So now you've learned the languages that the company uses, what you need to do next is to try and build an application very similar to what they do. It doesn't have to be the entire application. It could even be a small feature. So let's say that you really like what they do. You want to for example, you wanted to have, for example, a feature that they don't have. So for example, they might have an API and you can actually connect to their API and then build a small feature that the company doesn't have but you think that it would be very beneficial for the company. You would do that. And then that way now you've gone off and learned the languages. So you showed some interest. But on top of that, you've built a project and a feature that they even might be interested. So once you do those two things, the next step for you is to try and see how you're going to approach someone within the company that can lead you to the right person. You might talk to HR. Or let's say, you go for lunch with a software engineer, you might talk to him and tell him, look, I've been thinking about this. I've been learning this technology. I've even implemented this. Who is the best person to talk? And then they might direct you to the actual person in charge of recruitment or even the director or the technical lead. It doesn't matter. It doesn't matter. So once you reach the right person, this is when you impress. This is when you impress. So you can talk about what you've done, what you've built, and I can guarantee you like, I can guarantee you you will blow their minds. So you can tell them this story. You can say, look, I've been thinking about becoming a software engineer. I enjoy my work but I think I want to be challenged in a different area. I've always liked working with computers and solving problems. So I went away and I built this application that uses the API. I was studying the application, how it works, and I saw that you were missing a feature. And then I tried to implement it. And basically, there, you're just showing interest because now the company, they don't have to go outside to hire people. Because, first, they already know that you work within the company. So if they want to get reference, they can talk to your manager or someone that give or someone that can give you or actually, someone that can give them feedback about you. So they don't have to go outside. Everything is internally, right? And if they see that you are capable and you are willing to learn and you can fit their culture, I can guarantee that you will switch careers. So this is what I recommend for people that want to become software engineers and they work within a company. So as I said, the location so for example, many companies have, for example, one department in one location and the other department in a different location. So this is actually totally fine. You just need to know how to approach the right people to talk to and see how you are going to make that transition, that switch. Yeah. So I've been talking to people, for example, in recruitment. They are switching to software engineering roles. The bootcamp industry is actually booming because software engineering, there's lots of flexibilities. They have lots of opportunities and a lot of things that you can build. It's amazing. It's amazing. So yeah. So this is my advice. And I feel like if, for example, you don't have a job right now and you are switching, then I think your approach would be somewhat different. And I've got really good advice for you to apply. And also, one more thing that I actually almost forgot is make sure that you learn about Git. So Git allows you to basically store your code in a repository, and then you can share that repository with people because if you are talking that you have been building this stuff, then you can say, look, I've built this stuff, and this is my GitHub repository. And then what they do is just go and see whether you're not lying or not. So there, they can see your code, and they can see, wow, he's got potential. He's got potential. So this is what I wanted to talk to you about, because I feel like I'm not sure if I've seen videos like this or anyone talking about this matter. And let me know. Let me know what you think, whether you've switched careers like this and maybe there is something that you want me to spread with the wider community. Let me know. And this is all for now. So if you have any questions, as I said I always say, if you have questions or if you need advice, go ahead and join the group. Make sure to subscribe. Like, literally subscribe and give me a thumbs up so I can keep on recording videos like this. So this is all for now. I'll catch you in the next one, [NONENGLISH]..