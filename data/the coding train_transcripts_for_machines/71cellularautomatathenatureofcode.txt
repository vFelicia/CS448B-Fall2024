hi today we're going to talk about cellular automata uh the singular of cellular automata by the way is a cellular automaton so we're going to look at a cellular automaton but we're going to discuss cellular automata now why first of all what is a cellular automaton and why are we looking at this okay so first of all you know you might be just arriving here from nowhere which is totally fine but if you had just watched the previous video the last thing we talked about is right here behind me a flocking system a complex system a system of many simple agents that when they work together exhibit this um exhibit this complex intelligent Behavior so there's a lot going on in this system there's physics there's there's physics there's motion there's all sorts of stuff there's the neighborhoods are changing as these things move about the space one of the reasons to look at cellular automata is to say okay now that we achieved this complex system let's boil that down and try to create the simplest possible complex system ever what would that be what is the simplest possible agent which would have the simplest possible neighbors and the simplest possible set of rules as to how it interacts with its neighbors if we could design that system could we still achieve complexity so that's the question we want to answer when looking at cellular automata now what is one well okay first of all so this video is we're going to we're basically going to talk through the the two classic examples and we're going to do them in Reverse chronological order but our order is going to have some logic to it so I'm just going to move so we're going to go through um two uh kind of classic cellular automatons AATA ah this one is uh scrolling here by this is the Wolfram Elementary CA and this is Rule 30 30 it is in fact this is Rule 30 which we're going to get to what's rule 30 even mean this is O so um we're going to talk about Wolfram in a little bit over here we have something called The Game of Life which is perhaps the most famous uh certainly the the first most famous cellular automata that um uh that that sort of arrived into popular culture with a with a wellknown article in 1970 in Scientific American so we're going to look at these two systems understand how they work understand how to write the code for them and then ask the question you know great we could just Implement these and change the colors and we have some interesting patterns but really we need to ask the question how does this way of thinking apply to the type of work we're doing in interactive media computer Graphics computational design all that sort of stuff so hopefully this video is going to kind of introduce the concepts Behind These two systems and the next couple videos we'll um walk through the code for them and the last video we'll kind of talk about uh other other possibilities in this realm okay do we feel good about that I feel good about that that yes so let's talk about let's define let's just say ca let's define a CA okay let's define a cellular automaton a cellular automaton is a grid of cells we're going to look at onedimensional grids twodimensional grids one dimensional grid for example just looks like this here are a whole bunch of cells sitting next to each other in one dimension which incidentally looks quite a bit like the diagram for an array so we can see how this is going to fit nicely in terms of programming these types of things okay now if a CA is a grid of cells each cell is defined by as a entity that has a state and we're going to look at a variety of possible States the simplest being a zero or a one right a binary State it's on or off alive or dead zero or one black or white and each cell also has a neighborhood this is very important because how a state a cell's State changes over time is going to be determined by the the the sum the the the by analyzing its neighbor State so this is really the third aspect of defining a CA which is that the state of a cell a cell State at any moment in time T is equal to a function of the neighborhood States at time T minus one so we have this idea of generations Generations over time the ca has a whole bunch of States if they're zero or ones and then we say hey at the next moment in time this state cell is somehow going to be calculated based on a neighborhood of States adding them together averaging them say what is the pattern that type of thing so this is how we Define a CA great so I think that actually strangely I'm trying different things wraps up this video and I I guess I'll give you an exercise which is kind of a bit of an insane one but you know many of you watching this or might be familiar with this already um many of you watching this might have never heard of a CA before if you haven't try to design for yourself a set of rules for how cell States would change over time for a onedimensional CA with zeros and ones now this is of course what we're going to look at in the next video the next video we're going to look at the Wolfram Elementary CA which is precisely this a onedimensional CA where the states are zeros and ones and we're going to look at what are what's a possible set of rules for how those States change from generation to generation how do we Implement that in code and what results do we get but you know it's a little exercise to yourself you might try imagining this okay so I'm going to pause here and I'm just going to keep plowing through and but the the next stuff will be in another video how how do you feel about that great okay thanks