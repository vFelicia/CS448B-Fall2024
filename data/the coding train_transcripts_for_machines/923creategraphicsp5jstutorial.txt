hello this is a tutorial video for p5.js about a particular function a function I really love called crea graphics and I kind of shock that I haven't made this video yet because this is one of the classic things that comes up in every single intro programming graphics course that I've ever taught so let's take a look at the problem so let's say I'm just I just learned to program and I'm making a very simple sketch where what I want to do is I want to say if mouse is pressed draw draw an ellipse at Mouse X mouse Y and make that ellipse 64 pixels in diameter and make that ellipse white with a stroke of white all right so this is a very simple sketch all it's doing is when I press the mouse I'm gonna draw an ellipse now notice that background isn't set up so here's what I'm doing now let's say what I want to do is I want to see it I want to see also something animate overtop of this you know an example that of that could be like I want to actually draw something well let's just do that right now what if I wanted to draw alka suggested this and the chat draw a pen or something where the mouse is so let's let's just have a another circle stand in for that pen so I'm gonna make a circle that's a that's a different color and a little bit smaller also at Mouse X Mouse why it's always going to be there because and maybe it changes color or something when I click the mouse I don't know but let's okay so I'm gonna put that other circle there oh well that's whoa whoa okay so this is no good because I'm drawing the background and set up everything everything everything across a trail I never erased that background how could I have something that I'm drawing to not erase the background and something that I'm drawing where I do erase the background well great graphics is the answer to this question what create graphics does is it allows you to make this this canvas this thing right here I can make when I say create canvas I've made this what create graphics does is it actually makes another canvas the only thing that's different it's the canvas in the computer's mind you don't see it it's stored in memory so I'm gonna say this I'm gonna say whoops let's call this I don't often call it canvas but let me what's another set of canvas context graphics I'm just gonna call this a graphics and I'm going to say in setup graphics equals create graphics and I'm gonna also make it 400 by 300 now what I'm going to do is whenever I want to draw on to that offscreen thing in the computer's mind I'm going to say graphic stock background and if mouse is pressed graphics fill graphics dot stroke graphics dot ellipse so anything that I want to draw to that offscreen canvas that's not the one that I see I can now reference it and again graphics is my madeup variable name this could be kitten canvas kitten graphics whatever it is I've just created this offscreen buffer okay so now let's refresh this whoa what's going on here I don't see it so you have to remember just because you draw something doesn't mean it's there and you see it once you've made this offscreen canvas you have to explicitly add it to the screen so I'm gonna do that now how do I do that I'm going to say image graphics 0 0 so the way that you take an offscreen canvas and place it you is with the image function as if it was like a JPEG you loaded it's the same thing it's a rectangle of pixels of some size with some stuff happening in it all right so let's look at this now and we can see look at that so now and now look whoa what's going on so this is the sad truth the sad truth is I've run afoul of the world that we live in today Oh back in the day when I used to program with the snow up to here we didn't have these screens with multiple disel densities and high blah blah blah retina this and highdensity this there's a little bit of an issue going on which is that I am working with a high density display and so in that case there's actually four pixels for everyone and it's kind of mismatched what's happening in the offscreen buffer the offscreen canvas and that the on screen one so I'm gonna have to do something just to fix this right now I hope this doesn't happen to you I'm just gonna say pixel density one so I would say hey whatever its kind of screen you're on just ignore that and just have a regular pixel density of one and that should hopefully fix this and you can see it did so you can see now that I have this animating circle and I have the background canvas if you didn't want to use pixel density one because you're kind of losing some quality or something it was really important that you're doing you could also not say pixel density one double the number of pixels for the offscreen graphics in other words for the the default canvas is going to be handled for you but now I could double those pixels and then shrink them down when I show them and I think this would then it's the same thing but I've retained it's hard for you to see this I don't know you can see this see the quality of that particular ellipse let's see if this shows through versus if I say pixel density one and go back to this let me go backwards again and there we go you can kind can you see the difference there there's sort of a little bit of fuzziness but anyway this is not the primary thing that I'm that I want to talk about I want to just look at the fact that create graphics is a way of creating this offscreen offscreen so there's a lot that you could do with this for example let's just let's say I am not actually going to draw this draw with the mouse so I'm gonna have a very called X and set that to a variable called X and a variable called Y I'm gonna set those two 5050 I'm going to how to make a create graphics that's 100 by hundred I'm going to have the I'm gonna draw the ellipse there and I'm gonna say X plus equals some random number I'm just going to move I'm gonna move x and y around randomly and let's make this smaller so let's see what happens here and I'm actually also going to add a background to draw so look so now I have that and let's just see just to see what's going on here let's make the background for the graphics object this so you can see that is now that's an offscreen element that I'm drawing onto the screen so there's no reason why I couldn't do something like oh let me draw twice and now I see the same pattern repeating and maybe what I could actually do is say push and a translate you know 200 comma 200 rotate by some angle and draw the image again say pop and I could create an angle variable and now I could say angle plus equals 0.01 whoops angle my iki still does not work and you can see now and let's make that go a little faster and let's say image mode Center and here we go we can see now this that thing that I'm drawing an offscreen canvas is spinning so it's a way of creating there's so many ways we could mix and match these you know I could certainly I could tint it so once it's a separate image there's no reason why I can't manipulate and actually what I'm gonna do in another video which is going to be in a different playlist but I'm gonna look at how I could take a 2d graphics context and make it a texture in a 3d world which will expand this idea even further so Kelly in the chat is asking is the create graphics context always a rectangle would there be any way to make it polygonal if I pronounced that word correctly now yes I mean yes and no so by definition an image on the computer is a rectangular grid of pixels there is no other way it can be still because it is actually just an array of numbers of colors however there's no reason why we couldn't have certain pixels be transparent let me show you what I mean by that what if I actually never okay so first of all let me fix this let me put this somewhere where we can see it that first version of the image let me put it at a 100 comma 100 so we can see this is the sort of plain canvas that I'm drawing on this is the one spinning around why not what if I wanted to appear circular well there's no reason why I had to draw that background on it an offscreen canvas will actually begin as fully transparent look what happens now so look at this when it's fully transparent you know it's still rectangular I can't expand off of it but there's I could create the illusion of it being circular so now what I could do is I could have said at the beginning draw an ellipse that's at the middle that has a diameter of 100 and make that ellipse which I gray whoa oops I forgot this is a classic mistake I wanted to make that ellipse gray but I forgot to say graphics dot fill so now it looks like I have this like circular thing and by the way I could there's no reason why I couldn't just move that one around with the mouse so it looks like it's a circular thing you get to behind this one now the thing is it's actually not circular I'm getting lucky but you could see how that thing walked off of that circle so I would probably have to do something one thing I could do there's probably a way that I could I could always keep those edge pixels transparent or I could constrain the motion of that particular lips I mean I'm just like spinning my wheels spinning my gears here just trying random things I'm gonna pause for a second to see if anybody else in the chat has any questions of any features I could add a couple notes have come in from the chat that are worth mentioning one is that everything in p5 is wrapping native html5 canvas functionality and there is a clip function that's part of the native html5 canvas so that's something that you could investigate perhaps using as well I haven't looked into that but I will look into that there's all I'm also being told breaking news that I forgot about this that if I wanted to dynamically figure out the scaling the pixel density function I'll show you this if so if I call pixel density with a number this is me specifically setting a pixel density but if I call it without an argument it's actually going to return to me the current pixel density which is 1 because I said it but if I don't set it and I call it you can see that it's 2 so this is something that this is something that I could potentially use to dynamically determine the pixel density and scale the offscreen canvas to read the write the same as the onscreen canvas but again that's a little bit of an aside here so here's here's some exercises for you to try you can if you make of something you can share it in the comments or tweet me at Schiffman but one thing to do could you make a particle system where the elements of the particles the the each particle is actually an offscreen canvas that has some kind of like algorithmic thing happening on it could you create a drawing system where the user gets to draw and then the drawing is shown it tiled in multiple different ways so that I you know what if you used like instead of either just erasing the background or not erasing the background what if you use like an alpha as part of the background so you see these um kind of like fading trails there's a lot of possible things that you could look at it do so I hope you make some more stuff with create graphics in p5 and if you're interested in looking at this same topic but applied in WebGL look for a link in this video's description to that okay thank you goodbye