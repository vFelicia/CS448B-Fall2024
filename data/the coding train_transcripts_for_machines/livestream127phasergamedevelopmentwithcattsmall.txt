as if I don't do this every Friday there's a good chance now that this is actually live so hello this is I am dan Shipman welcome to a surprise Kotick trade I have a train whistle it's embarrassing but I do have one oh I see myself so this is actually working all right so this is kind of a surprise I have a really exciting guest you can see oh I can't walk all the way over there you can see her Twitter handle down there cats mall I have been probably she's standing over here which is why I might look over here for a second I have been emailing with cat for probably like a year and I keep messing up the schedule it's usually my fault so I'm so excited that this is finally happy happening today it's definitely been a topic that's requested a lot other JavaScript libraries besides like p5.js game development stuff there's a library that you might have heard called phaser and so without spending too much time doing an introduction cat is amazing you should check out her website all of her work she does a lot of stuff with game development and other types of things and so we'll work this is gonna be a little awkward here but what I'm going to do so this is gonna be a short livestream I'm gonna be back later this afternoon in a few hours for like my regular livestream which I'm going to try to build a quadtree example but what's gonna happen is I'm going to awkwardly in a moment take off this microphone and hand it to Kat she's going to not awkwardly very gracefully put on with microphone and and then come and do a short presentation about phaser and an example show you an example it's gonna be short I'm gonna watch the live chat to see if there's any and I try to accumulate a few questions so you can ask those questions in the live chat and then maybe we'll have you know ten minutes or so after she shows some stuff where I'll ask a few of those questions I'm trying to think of anything else that I'm forgetting that's important I'm looking at people are saying hello okay so what I'm gonna do first here and is just mute the microphone so it doesn't make horrible while we're transferring it you okay unmuted hello hi I'm from the internet hopefully you can hear me okay humans if you can't then you can tell the Internet well it'll be great oh oh nice cool well now that the camera has randomly shut off and turned back on you can see me again hopefully cool hi this is phaser game development I'm gonna show you how I make it browser friendly games so firstly I am cat small I am a game programmer a game designer I'm also a product designer at Etsy and I also make lots of art mostly on Instagram and sometimes on Twitter if you want to play my games you can play them at cat small GGO it's like wherever right there yeah but we're not here to only talk about my games today we are here to talk about making games ah so I often use a JavaScript framework called phaser and I use it because I am mostly a web programmer by day and so it's much easier for me to switch contacts if I'm using the same language you can make language or you can make games with lots of languages for example csharp if you use unity but I find that phaser is much closer to what I'm using during the day so it's really convenient and specifically phaser is an opensource JavaScript framework and my framework that means that it's a set of code that enables you to make things without having to reinvent the wheel things that have already been created lots and lots of times for example physics and games like we've pretty much standardized that so it's easier to use a framework than having to write your own physics engine from scratch also open source means that phaser is free to use and it's constantly updated but usually when you use phaser you actually pull a version of it to your computer so that's like whatever version you're using that point in time is the one that you will continue to use so you don't have to worry about it being updated randomly on you which if you've used certain game engines you're very familiar with the suffering of random updates and the other thing that's really nice about it being open source is that you can actually contribute to its development so lots of people are contributing to making phaser better it also has a patreon that you can support it which is really cool and the other nice thing is that originally phaser was built by a company that actually also made and makes html5 games and they made this tool because when when flash was basically destroyed by Apple back in the day when they announced that the newest iPhone was not going to include flash they decided that it was time to figure out a good framework for the platform for the web and there weren't a lot of tools at the time that we're doing such a good job so they took it into their own hands and that's how we ended up here so the newest version of phaser the current version is the third one it's like it was 3.0 now they're at like 3.2 or something like that and that's the one that I'm gonna be working in today they are still working out some kinks which is why it's at point two at this point but the improvements to this version include a better game camera new properties for game objects which make it easier for you to custom build things that you want to build it also has crisper pixel art which honestly for a while was pretty challenging because sometimes the sprites would be fuzzy and now there's actually builtin support and you can just type one thing that says pixel art equals true and then all the art is beautiful which is amazing and there's also an improved scene manager so that's how you actually build levels in the game and now they've done a lot of reworking to that so before I show you how I work in phaser some things that I wanted to note really quickly are I'm just going to kind of go through them but every framework in game engine has its own quirks so these are just some things to keep in mind it's not like a oh no don't you this it's more of a hey keep this in mind if you decide that you want to work with phaser so firstly phaser uses JavaScript as I mentioned so for security reasons it requires a server to run so when you're working on the game on your local computer you can create a local server using Python or PHP you can use your command line to create one of those or you can use a program like xampp or any of the other programs that you might have used in the past if you've ever worked with wordpress for example to host a web site what this does is it allows you to run phaser games without an internet connection so you're basically replicating what it's like to actually play a game your game for example on the internet next Cesar uses JavaScript again and usually when you're writing JavaScript you're working in a code editor there are a couple of visual editors out there but because phaser is constantly updated in it's open source and these editors are not usually affiliated directly with phaser those might be a couple of versions behind so if you for some reason are really attached to the version that I'm about to show you be warned that some of the visual editors may not be that uptodate yet so if you're interested then I would suggest maybe just using sublime text or vim if you're that kind of person or whatever code editor you prefer and finally if you have made a game before then you have heard of the game loop and usually that just involves creating the game's initial state so that's known as the create function and then you update the game every millisecond or so and that's called the update function so the create function runs once and then the update function continues to run as the game is updated phaser actually has a third part of the sleep that runs before the other two and that's called the preload function and what that does is it allows you to preload files from the server or around the internet so for example if you wanted to use google fonts that is how you would preload google fonts before you actually ran the game so I'm going to show you what all that means if you're kind of like what so now that you know these things we can actually start and I'm going to walk through how I made a very simple game using phasers newest version so what I'm gonna do first is I'm gonna show you how I usually separate my files because usually I am making games that have multiple scenes or levels and then after I do that I'm gonna show you a simple game that I made using phasers template art which you can see up here looks really cute thank you phaser for actually including some really adorable art to use and it only has one scene so I put everything in one file so that you could go through and look at it and I'm gonna be using code pen which was really convenient and what you can do after this or even during this if you want to walk through at the same time is you can go to code pen do slash cat small and the stuff is there which is great so hopefully this will show you two ways that you can work with phaser one for simpler games and then once you are feeling like going more advanced then you'll be able to easily do that as well cool goodbye cool slides cool so this is what a version of my templates usually look like I'm gonna really quickly attempt to see if I can resize this because the font is so small oh there it is it's so convenient maybe like 20 hopefully that looks good to people or maybe I should just go all the way 26 I'm gonna go 20 and hope that people can see 20 if anyone can't see this is why we have feedback I'm gonna just reload it yeah that's beautiful okay sweet so I'm just gonna size this a little bit bigger so I can kind of show you more okay cool so how I usually organize things is that I have an index file that kind of just like holds and loads all of the the JavaScript his phaser is all JavaScript so what you usually want to do what you have to do is you have to load in the phaser JavaScript first and you can download that from phaser IO now you see oh my bookmarks they're great and what you do is you just go to download and then you can download it and it's awesome then what you do is you include any game files that you wanted to include so in this case I usually have global variables I also have a file that pre loads all of my files upfront just because I would rather have there be one time period where everything is pre loading at once and then I don't have to worry about my scene my scenes constantly loading between them or things loading between my scenes but you can organize things however you want which is great and then what I do is I usually have a main menu a gameplay state and then I would have a wins day to lose state etc however many scenes I wanted to have in my game I would put them in separate files and I'll show you what those contain in a moment so once all these files are load loaded which is why they are in the head tag in your HTML what you do is you have a body tag which is how every website is created and inside the body tag I put I usually this is where I usually put my JavaScript specifically for instantiating the game so what I do is I say on page load create this game config that contains a couple of things including the type of descending that we're going to use it can be phaser you can have phaser choose it automatically there are also a couple of other display settings that you can choose from you can tell phaser that the container should have a certain width and height and then for the scene we're actually giving in this object that's called my game dot scenes which I will tell you about more in a second and then once you actually have the configuration you can say variable game is a new version or a new instance of the phaser game class and you're pulling in the config that you just created so next I'm gonna go to the next file that was included up here which is the global variables where all I am doing is saying my game equals blah and then the scenes contain an array of scenes and then I also defined a framerate and this is where I put any other thing I want to kind of refer to a bunch so that when I if I ever need to adjust something across all my files I just have it in one convenient spot everyone kind of does their global variables in a different way and I just found this to be the most convenient tbh so next what I do is I created two states as I mentioned there's one or three states sorry there's one that I just used for pre loading so in the preload state I'm creating a new class of this scene called preload and then what I'm doing is I would put anything that I wanted to load in first in here and then next I would just start the main menu and then the same thing in the main menu I would just right now there's nothing in it so this is just a template but I would start the gameplay but if you wanted to actually do something you would do that stuff in the create section so one thing you'll also note is at the bottom of each of these you I wrote some code that adds the scene to the list of scenes that were in the global variables and that just makes sure that all these scenes are going in the order that I want them to and they're going in the order that they are loaded on the original HTML page so that's how I usually create my more complex games if your brain has exploded a little bit that's fine but what I'm gonna do now is go through a simpler game that I made in a single javascript file and there is no HTML involved at all I wrote some minor CSS just so that the spacing is a little bit tighter on the page itself but everything else is contained in this singular JavaScript file so just gonna like go through it and I'm gonna have to move myself out of the way slash resize this a little bit okay I can go this way yeah cool did it okay so we're gonna start from the top so if you're just using a singular file what you can do is define and declare all of your objects in a single place so at the top I usually put the main things that I want my game to be aware of the player which will eventually be defined more the enemies which is for now in a the number of enemies I want to spawn which I can change at any point from right here for now the enemies that are left are the number of enemies to spawn but later that's going to change because the point of this game is that we're gonna clear the enemies when they're weak so we're going to go up to them we're going to touch them and then if they are not weak then we lose health and that's kind of how the game works there's like a positive and a negative reinforcement that we're giving to people here so right now we're gonna define at the beginning that maybe the enemies are safe and then over time that's going to change we have a number of hit points which is five we are defining a string and then an object that will later contain that string the score which is 0 etc we've got some text objects and then we also have a couple of other things that we're including which we'll say is the game has the game started yes or no and then has the game finished yes or no and that's how we know if the game is currently running so then everything is contained within this gigantic gameplay state which is super fun so how it works is just going back up to the top here so as I mentioned before we have a lot of stuff in this one file or in this one scene so we're in this scene we're actually going to do the following I'll play through it really quickly so when you click on the game it starts and then you can move around and when they are pink they are not safe when they are inverted they are safe for you to touch so if I go up to one right now my HP went down oh no oh no oh no game over and then I didn't really include a easy way to actually restart the game so I just rerun it so that's what we're making if you were curious okay so cool so the first thing we have to do is actually load the assets for this game so how you do that is there are a couple of types of images and sprites that are included in phaser one is a straightup image the other type is a sprite sheet so you can say how much a single frame width and height are for a sprite sheet itself for Images you just say hey load this image and this is what its gonna be called so I have an object called sky I have an object called dude and I have an object called Maddy or these are like sprite sheets and images rather they are not objects yet and those are the only things that I'm including in the preload function so what I do next is I go down to the create function where it which is where you set up the actual scene once the files have loaded so what I'm doing here is actually creating the background and I create the background first because all the other objects I create are gonna go on top of the background so you want to make sure that you put that in first and you instantiate things in the order that you actually want them to show up on the screen although you can also change the ZN index which is like x y and z so you can change the direction or the order of things if you want to as you're going through but why do that this is a simple game so we're just gonna go with it so what I do next is I actually create the player and then I'm using phasers animations properties to create these global animations that I can use at any point in time so just breaking down the player really quickly how it works when you want to create a sprite object is you say this don't add that sprite you'll notice that there's this physics thing in here and I'm gonna talk a little bit more about that later but phaser has a phaser 3 especially has a new way that they're defining physics so it's actually defined from a global standpoint rather than within the individual scene so this dot physics just refers to the game object which has physics in it and we're adding the sprite to the game object and it is at the 32x and it is at the height that we define below I'll describe the Hat or show that more in a second and it's using the image that we called dude which if you remember was dude so hopefully that makes some sense and what we're gonna do next is again I mentioned creating these image these animations so what we're doing is we're naming it this key is going to be called left or this animation is going to be called left the frames that we're using our dude the first frame and that's it and then we're creating one that's down left right we're doing down writing up as well so if we go over here what that looks like is this and I'll show you how we call that as well and some time just kidding so now what we're doing is we're saying that the player should actually collide with the edges of the screen which is useful because we don't want the player to walk off the edge and then disappear it's not exactly fun and then what we do once we've defined all the stuff around the players we're saying hey this is how we can include keyboard input because we're gonna need that at some point so what you do in that case is you say the cursors in this are going to be the the game object should take in the input method of the keyboard and it should create the cursor keys which are up down left and right arrows so it's convenient that phaser again just has some of these things built in so you don't have to go about defining the keyboard keys manually which is not fun and you can have this in here or not I just put it in here because whatever when you're programming it like 9 p.m. or whatever you're kind of like yeah that makes sense which order should I start this in anyway moving on so then what we do after we've created the the player and worked with defining the keyboard keys is that we create the enemies so the enemies we're going to use we're gonna create a group of them firstly as I mentioned before and we're gonna use the image that's called baddie and we are going to repeat this the number of times that we created defined in the enemies to spawn above so if you don't remember what that looks like it's up here it's this and it's that cool so what we then do is we go through each of these enemies that we created and make sure that it's actually on the screen which is fun and we do that because otherwise we want to actually like randomize where they're showing up so that's what this code is here if you want to walk through this in the actual code pen that I created it's there but what it's basically saying is if it's off the screen then put it back on the screen and it's doing that for both the X and the y vertices so just making sure that these things are on screen if they are like half cut off for some reason it's fun and that's just like check saves anyhow moving on we also want to create animations for the enemies because we have a safe version and an unsafe version and then once we do that we want to update the physics colliders like the actual bodies for them and there's a way to see what that looks like that I'll show you in a moment after I go through the create so you can see what this config looks like for example and then what I'm gonna do is generate the actual text for the score I'm gonna put it at 32 X 24 Y and it's gonna use the score string that we made above plus the actual score number which at first is zero and we're going to keep it invisible until we actually let the player click the screen and we do the same thing for the HP and then we actually generate our intro text and we show it on the screen which is why we don't have the visible equals false there and then what we do is we say when the input is or when the game object itself is clicked and the game has not started yet start the game and then we generate this timer and when that timer runs what its gonna do is switch the enemies from safe to unsafe and then what we also do is we say that if the player and the enemies overlap and the enemies are actually like a group so every single one of these that you see on the screen is a part of that group so if this player interacts with any of these enemies then it's going to create it's gonna run this collide with enemy function so now what I'm gonna do very quickly is go down here to show you what the config looks like it's probably like what the heck this seems like there's more involved and there is so these parts you've already seen this I mentioned earlier pixel art equals true is what actually makes the screen look much more crisp so if I were to not include that things would look very fuzzy and we just have a pixel our game so it's nice this is the physics definition that I mentioned so we're using arcade physics so if I change this debug to true that's how you spell true definitely how you spell true what'll happen is you'll actually see the physics bodies so our Cade physics is straight up just squares and rectangles but there are more complicated types of physics that you can use as well that involve actually defining the shapes more you can use circles and things like that too in those types of physics but arcade physics is very easy for if you're just making a simple game like this one so now that you know a little bit about that very simply you can also have gravity in your game but because we're just working in this like very abstract XY state where we just want people to like walk around and not really care about gravity we don't have any but it's really important that you do have physics enabled because you want the player to be able to actually collide with objects so it's very important that they have these bodies there which is the weirdest thing I've probably ever said and then we have one scene so all we say is that the scene is the gameplay scene and it's just easier because then otherwise your your object for this config would be massive and so at least breaking it up a little bit by having the game play scene as its own little object is more convenient for like reading through the code or at least that's how I felt about it so now that we've looked at that a little bit and you've seen the create let's actually go down to the update function which is where a lot of other stuff happens okay so what we do is we make sure that the players velocity when the game when the player is not pressing a button we want to make sure that the player object's velocity is at zero so they're not just like shooting off somewhere basically and then what we want to do is say if the game started and has not finished then if the cursors are moving dead or if they're pressed then we should move the player in whatever direction that the cursor pressed wants it to go in so that's left right up down cool and then what we do next is we make sure that the score is updated at any point and that's literally all that we're doing in this function so it's but to just break things down a little bit we're studying the velocity which is another physics property to 150 in any directions so that's positive negative in the up the horizontal or the vertical and then we are just saying that the scoretext object should be set to the updated version of the score and the score string or the hit points and the hit point string which are objects that we defined in the create function so everything kind of refers back to things that were already created which is very nice and then the last thing that I did you probably noticed that there were a couple of functions in there and you might have been like what are those so there are there's a function called switch enemies state that changes the enemies from safe to unsafe so when the game is actually running which is really important because there's a game over area in this when the game is running if the enemies are not safe which you can write in a variety of ways and I realized that this is the very simple way easier for just showing people if the enemies are we're not safe then make them safe so you're just like switching binaries there are a variety of ways that you can write this this is one of the simplest and easiest ways and then you play the animation specifically on the enemy object so what you have to do is you say for each of the children in the enemies group go through them and play this animation that's called safe for that enemy which is again referenced in the parentheses of that function and then you do the same thing for the unsafe parameters as well and then we also have one called collide with enemy which is happening between the player and the enemy when they collide to each other if you saw that overlap earlier that overlap property is what is referred to here so if the game has started and has not finished again just useful if the enemies are safe or are not safe rather then you subtract hit points and if the enemies are safe then you add to the score and then when the enemy is touched in either either way you want to make sure that you're actually disabling it so what that does is it hides it basically and doesn't make it a functioning part of the game anymore and then you subtract from the number of N he's left and then what you do is you end the game whenever necessary so if the hit points are zero or are less than zero you want to actually kill the game and you can I pulled out kill game because there are a couple of things that were being written twice as you can see below and so it was easier to just kind of like write them once and reference them so you kill the game and then you change the intro text to say either game over or great job you want I did not win so it says game over rerun to play again but if I did win by making sure that my hit points were over zero and the enemies left were less than zero then that would be cool I also should probably have that anyway continuing so we have this function that's called start game that's run only when you click when you click here so that's this so what that does is it hides the it hides some things and it unhides other things so it sets intertext to false in terms of visibility and then it sets the score text to actually show up same with the hit point text and then it says the game has started but the game it's not ended Wow and then finally the last thing that is a function in here is when we kill the game so we say that the game has ended the player should not move anymore again really important the intro and the intro text is now visible again but it's changed to a different text you can also pull those out into separate like win or lose things if you wanted the score text and the hit points text are no longer visible and that's pretty much what happens so just running through this again you just kind of like poke around and hope that you don't oh oh no oh no yes gonna win this time it's the simplest of okay cool oh that's why I included the less than C this is what happens when you live edit your code anyway imagine that there was one less there and all as well cool and that's pretty much how to make a game with phaser a couple of more things to note that I wanted to just note before we're done it's gonna go through all the slides again that's great okay so if you wanted to learn a couple of more things about phaser specifically as I mentioned the official the official phaser website is phaser dot IO it's all the way up there yeah and phaser three examples if you're interested in the newest version of phaser three then you can go to labs phaser do the template that I made the first thing that I showed you is available at this very long link or you can just go to code pentaiah slash Kat small you can just go to that part and then you can click around you can see under my projects there is this one template if you are interested in the sample game that I just showed you it's at this pen with the gvj EP m that one or again you can just go to code pen dot io / Kat small if you have any other questions you can find me on the internet but you can tweet me or you can visit my website or if you want to play my games it's that cat small HD IO thank you it's been real yell at me that mic will pick me up first of all thank you so much that was awesome yeah it's also really interesting like I do most my tour tutorials and p5.js I'm trying to make some games and I usually watch them and have a design but it's really interesting to see you know oh there's all these conventions of kinds of modes and things that happen in games it makes sense to have a library that like just has all those bills so it's useful I think formal learning you have to like show the camera camera so so if you have a few more minutes yes I'm gonna I'm gonna I'm gonna ask some questions yeah but I pulled from the chat first of all Richard Davey who well this is just what I was like trying to learn this board and now I'm watching a livestream about it and the creator of the libraries in the chat Richard you're great so first let me just mentioned everyone watching because this was asked many times so this will definitely be archived and available forever but so this will be there I also will likely make an edited down version of this I'm just that some people who like to some people prefer the live streams and some people prefer to watch that don't want to watch the first five minutes of fumbling with the microphone so that will come out at some point I think and then also all of these links to cats website and to the game template and all of that in the presentation but there'll also be when this video gets published will actually be links you can click on in the video description okay so let me look for some of these questions okay so I actually this was my question to those kind of curious about there's some really specific technical questions but a very sort of broad general question we can ask by math blank so have you used other game frameworks and what advantages say or disadvantages to have over other ones some that people somebody I don't know yeah I think about these someone in the chat mentioned constructs yeah yeah so I personally use construct two I've also used unity and I've tried with a couple of other ones like back in the day I think I don't know if impact is still like a thing but anyway I tried that I've also tried some stuff with like game maker studio what I'll say is that phaser is really good for making games that you want to host on the web and also package for like applications and things like that it's like specifically made for that construct to you is as well but it's much it's more challenging to work with if you know how to program which is like weird thing to say you can definitely like build your own plugins and stuff like that using actual programming but like I found that for a person like me who just wants to be able to like pack away at stuff and like just directly program phaser is much better for like html5 game development specifically I don't really have a fun time with it I feel like unity is is great at what it does if you are looking to launch on consoles or things like that but especially lately as chrome has changed the way that it works with programs like unity for example you can't at least last I checked you couldn't host unity game or you couldn't play unity games on Chrome like very easily and I don't know if that's changed since the like the last five months but that was a really big unity killer in terms of web game development for me and I specifically want to make things that anyone can play and phase there because it is just a JavaScript framework that you literally are hosting on a webpage is the easiest way to do that so I find that if that's what you want to do or if you want to also have a game that you can play on the web that is also working on apps it's perfect for that use case and so right so you could pack it you can use phaser and package your game into losing like PhoneGap yeah and make it into apps you could also make an electron app yeah like a desktop thing exactly it's great okay Oh somebody asked I don't think this person is actually Friedrich Nietzsche because there's like phaser three yeah but maybe some of the tutorials or some of these like phew so three is kind of knew it if you're a total beginners it has to get started with phaser three mmhmm using the most current good question um so I would say that there is a very basic getting started with phaser that's like using the newest and it's like the newest tutorial that's using the newest version so if you're looking to get into using phaser I would highly suggest that if you feel like you need a lot of documentation there is like the labs mate link that I mentioned up there and that's really helpful but I will also say that there is just because of time a lot more documentation on phaser to but that is not the that's not the way it's working any pores so I wouldn't really recommend it because they did a pretty large rewrite so I would highly recommend trying to use the newest version and just working with that tutorial there's a couple of other tutorials as well and there's like many many more that are being added day by day and week by queex so I would recommend trying the newest thing and just seeing how that works for you and if you find that you are just looking for something to just try making a game in general maybe I don't I don't know I feel like it's easier to just like go with what is the newest thing it's kind of I mean there might be some conceptual aspects that probably go across later but I think it probably makes sense to work with the most recent one and then kind of help contribute to it right yeah exactly there's like a forum and everything so you can ask all these kinds of questions in terms of like I can't figure out how to do this one thing and there is no document for it yet and then you can help actually make it which is a great point one thing I noticed about the game that you're showing us is that you showed us is that it has a sprite so although these are images and a lot of the stuff that I do or at least that I've seen that people do from watching the videos the more algorithmic or generative graphics does it have a drawing functionality or would you pair phaser ever with like another library like five paper or some just native canvas in terms of like actually making it so like there there is actually a way to include like tile maps and stuff like that if that's kind of what you're referring to I guess if you wanted to custom draw with like lines and shapes oh like on the actual screen on the screen instead of because it is it is it rendering stuff to you a canvas or no it's all it is a canvas yeah yeah yeah so I mean you can you can just draw two you can do anything you want yeah it's like you can actually just use this with straightup JavaScript you can kind of do anything you want with it which is great and I have so the other thing that's nice about it is that I've done things like I made a game that I need to figure out how to put on my actual list of games but it's a game where it uses the leap motion so it's like using like recognition of your actual body motion and it's using the leap motion plugins for that and then it works really seamlessly so yeah you can do lots of stuff with it which is great because it's just a describe to be interesting I mean there is actually a library for p5 and that's I don't know if it's still maintained but called p5 play mmhm yeah but interesting to see if I if like I could make a you know a simple example that uses phaser for the physics yeah main mechanics but uses p5 for the drawing of the shapes very possibly I could see that working pretty easily another question that Ellen dole in the chat asked which I was curious about to I mean I think I know the answer to this but if you wanted to do something that's multiplayer and network based that's something that you would probably I guess do separately that you'd have to you and you know you'd most likely as far as I know I haven't really delved too much into that yet but my assumption would be that again you because it's like straight up just JavaScript you could make that work pretty simply which is convenient but maybe richard has more information about that Roberta chat just now it has a graphics API lines circles polygons yeah we've got a lot of properties so I think we get kind of rough I guess I'm just curious just generally speaking like where do you do independent game developer I assume so where do you come up with your ideas for games and do do user testing like house that is a huge question obviously how does that like how's that process for you how long does it take to make it go very loosely yeah so some games I make in like three days with a couple of people like I go to a lot of game jams which are like usually like 24 or 48 hour time periods where you sit in a space with people and you you have an idea usually that's based on like a theme so they're like they give you a theme and then they're like go have fun and then you have 48 hours to make the thing and usually the elongated versions of that when I've made games for I've made a game that took like nine months I made a game for one of my thesis projects I also I'm still working on some and I'm working on them for like several years but usually it's like the idea is either like inspired by a theme from the game jam or it's like oh this random part of my life would be really cool as a game so like one of the things that I worked on my first actual game that I coded by myself which was like very exciting was a game where you are trying to get to the train and you have to like shove and kick people out of your way and they just like fly around which is like my first use of fun games physics and that was really fun and it's like a very real slice of life kind of thing and I find something really fun about those kinds of games and then usually how it works is you get the idea and then I figure out like okay now that I know like the narrative idea / the main mechanic like how does that work in a larger context and then I try to figure out like what the rules are what this world of the game is and then I just kind of like start prototyping and experimenting get the basics working I usually do a lot of play testing with people even if it's a 48 hour game I try to find someone who can just play it like friends and people like sort of you're directly sitting with a watching employee yeah yeah so I've done a couple of things where I've had people like use a Google forum and I'll just like send it out on Twitter or like Facebook and I'm like hey can you just try this thing and like see what it's like just like fill out this form and like let me know your feelings about it and people always have a lot of really helpful things to say yeah so I'm a huge fan of just getting stuff out there and seeing what people think awesome just checking somebody saying phasors working okay but lots of wonderful thank you for all these messages in the chat um thank you so much Kat for being here I'm good to make an edited version of this but there's not very much to edit so let's do it anyway at least so I can do a much better introduction to views I feel like I wasn't prepared to talk about all your wonderful so thank you for watching again this this will remain online on the on my youtube channel you can ask questions also in the comments and I will try to answer them or retrieve answers to them if I can you can find Kat on Twitter and all the other various lengths of they're right here still questions I hope to do I'm so glad to be finally getting back in the rhythm of having some guests cuz that there's only so much you know as we can see there's a lot more there's a lot of interesting wonderful stuff happening in the world code even stuff that I don't know anything about so thank you so much I'm going to do the very awkward thing everything that's a stop streaming and then we'll be gone I will be back just to mention it's a I'll be back and around probably 4 p.m. to do a tutorial about using quadtrees for collision detection stuff yeah so I'm like oh and then okay you go say Kate so it's quadtrees at 4 oh yes yes goodbye