in this video I want to look at the worst case scenario you found some data online so you want to use it but it's not available in some nice standardized format there's no CSV to download there's no XML fee there's no API there's no processing library that takes care of it for you there's nothing but the web page itself and this can apply to other scenarios where the data is in some strange unrecognizable format so let's let's look at a kind of scenario here so let's say you want to make some type of data visualization about movies and you look at IMDB comm and you say AHA everything I ever needed to know everything every piece of data that I need is here somehow in this website well if you search around there's no API there's no XML fee and maybe there is but I haven't I haven't found one and so but the data is there for example let's say I what I need is the year of a particular movie or I need the length how long was that movie 139 minutes well 139 minutes is here on the page there is a URL for this page I should be able to get that URL in the processing and somehow find that piece of data how do you do that okay so there's there's a few things that to kind of discuss and look at it and we'll come back to the actual page itself so we need to we need a mechanism for searching within a string now a great way to do this is with something called regular expressions regular expressions is a bit beyond the scope of this particular set of videos about data and processing so I'm just gonna leave that aside which I'm mentioning it you might look at the match function or the match all function and processing which uses regular expressions to match a particular pattern to search for a pattern in a body of text and perhaps someday I will add a video or some materials about regular expressions and processing but for now we're gonna do it in a bit more of a rudimentary way using two string functions in processing that I don't believe we've seen yet one is index of and the other is substring so let's say we have a particular a piece of text string s equals I have 21 apples and let's say you know we could think of the context of oh I go to a webpage and every single time I go to that web page it says I have some number apples well how would I pull only that number out you know this human being us we could just look at that and say oh it's right here it's 21 it's the thing that's digits and it's in between have and apples and that's the number but how do we do that programmatically well in processing what we could say is okay let's say that was always formatted this way just this number was sometimes difference and it's oh you can sit sometimes it's two digits sometimes it's three digits sometimes it's one digit but it always comes after have space and it always comes before space apples so what if I could find wherever have is what if I could find wherever apples is index of will search for the index of a particular string inside of a string and then substring will pull out a substring what if I could then pull out all of the characters in between these two points Lord's I'm saying what if I were to say int begin equals s dot index of have an int end equals s dot index of apples and then string num equals s dot substring between that beginning and that end now now there's a few little details here things that we've missed and this won't work exactly as intended but we'll correct those in a moment before we do that let's come back to the IMDB site now you know I should also mention something if we go and look at the Terms of Service of the IMDB site I don't believe that it's that it probably says something like you cannot you know mine our data resell it that type of thing you know so what we're doing here is you know there's some questions around it but currently for an academic exercise here certainly I want to look at how we could go and pull out a piece of data by requesting this information so okay so what do we do what's the actual data we're going into processing let's say we're looking for a hundred and that the amount of the length of the movie Mary Poppins one hundred and thirty nine minutes so if I go up here view developer view source we can now see this is actually what we're gonna get into processing and this is just a big mess of stuff this is why it's much it's really preferable to have our data as tabular data XML JSON some standardized format that's kind of ready for us but in theory somewhere in here if I search for 139 minutes we can see there it is right here that's where the piece of data is in the raw HTML source and it kind of looks like it probably comes after this tag time itemprop equals duration and then it comes right before that close tag so this is you know this is a much larger piece of text this is why we need to do this kind of searching because for every movie the page might be formatted in the same way but the actual piece of information is gonna be a slightly different spot because the title of the movie is gonna be the same that's gonna change the number of characters all that sort of stuff so let's look let's let's come back here for a second and there's a couple things what are the things we missed here one is what does what value does this actually give us index of half well a string is much like an array where each character has a unique index 0 1 2 3 4 5 6 or so H is actually going to give us the number I don't know how well you can see that let me write this 0 1 I really got to get better at this whiteboarding 0 1 2 H is going to give us the index value it's the third character so when we ask for a substring between 2 and some other character we're gonna end up getting have 21 which is not what we want we want to actually start right here where the 2 is but what is the length of the string have with a space 1 2 3 4 5 so I could say that begin in next the begin spot for 21 is the index of half plus the length of half so I want to jump from the beginning to the end of that work so we look at the actual code you're gonna see that's happening the beginning of the piece of data we're trying to pull out is where we find this the end of where we find that now with apples this actually is fine for us assuming this was actually space apples we would get this character here I don't want this character included in my substring but an interesting nuance of the way substring works is the first index is included and the n1 is not included so in other words if I have the string hello and I asked for the substring between 1 and 3 0 1 2 3 it's actually just going to give me the characters 1 & 2 it includes the first index but it does not include the last index it might seem like a weird thing like oh this is kind of annoying this seems to be like very confusing but it actually makes sense because if I were to say 3 minus 1 is 2 that's the length of the substring we pulled out it also works really nicely if I want a substring from somewhere in the string all the way to the end then I can just put s dot length to the length of the string there and it will work ok so that those are two little pieces of information another piece of information that I should mention is what if I say give me the index of you know Joe in the word hello well Joe doesn't appear what value should I get back from index of it I know it get the numerical index of the string I'm searching for but if that doesn't exist what do I get back and you should know that processing or the index that's not processing Java the index of function of the string class will give you a negative 1 and that makes a lot of sense because negative 1 is not a valid index there are no index values less than 0 in in an array or in a string so as when we go back and look at this particular code example what you're going to see if I find where this is happening and you can see here we go let me find this you can say ah there is a start and there is an end and I want the text between then I want the index of this and I want the index of that and I want the stuff that's in between but look there's this function give me text between oh why did we do any of this there's just a function called give me text between us there isn't so this is a function that that is written that I wrote for this particular example which will pull out a chunk of data in between from a particular string in between a beginning and an end and if we look down at that function you'll see find the index of before find the index of after and give me the substring between the start and the end and you'll notice that if I ever get a negative one we just return back an empty string so this it will this will this will make the function not fail if it can't find that text you're looking for it'll just give you an empty string and you can see here where is the start is the index of before plus the length of that particular string and that's that little piece of information we talked about here when we were trying to get not where have is but where the end of have is so this is a function you could use and I would suggest that maybe what you do is you find some data online and try to grab this example and use this give me text between and see if you can pull out a piece of data from a webpage where the data is not in standardized format okay this concludes this particular video which you have just watched thank you very much and I will see you in another video