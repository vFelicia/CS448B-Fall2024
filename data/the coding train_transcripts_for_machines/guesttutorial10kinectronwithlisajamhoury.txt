hello welcome to a very special guest tutorial on the coding train I don't have my train whistle oh well this guest tutorial is going to be about the connect this connect to so this tutorial is designed does it work with also the connect one no only the connect 2 and the guests that I have to present about the connect 2 and this project called connect Ron is Lisa Jam Cory now Lisa is a graduate of ITP the program where I teach she's also a researcher there she's an artist there will be links to more information about her work and her website in this video's description most of her research is around the body and movement and gesture and all the kinds of things that you can do with this connect and this is her open source project called the connect Ron originally developed started with sean vann every who also teaches here at ITP and lisa has been working on this project for two years now and it's gonna talk to give you an overview of how it works and write a little bit of code in p5 it's open source if you're interested in contributing more information about that in the video's description and also lisa is currently researching what other types of depth sensors might work well with this connector on software given that the Microsoft is no longer making this thing it so buy them and you can still use them we have a closet full from downstairs ok so I hope you enjoy this guest tutorial from Lisa and again all the information in the video description and if you have any questions ask them in the comments thanks so much well thank you so much Dan for having me it's really an honor to be here today on the coding train to talk with everyone about connect Ron Connect Ron is a open source tool to bring connect data from the connect v2 onto or into the browser so you can work with it in your favorite creative coding libraries like p5.js and 3j yes and all of the other things that you love to work with in the browser so I think a great place to start is just to get a basic understanding of how connect Ron works and so for that I'm going to hop over to the whiteboard so if you've worked with a connect before you and if you haven't that's completely great also but if you have worked with one before you're probably used to this type of setup where you have your computer and then you have a USB 3 cable connected to your Kinect right and and since the Kinect SDK is just available on Windows this would be a Windows computer or PC and and so once you have this connected and you're running whatever software you're used to running to get connect data then you have your live Connect data coming onto your screen from your Kinect right and then you have access to all these great things with the Kinect the connect to gets let's see where is a good place to write all right over here we get 625 bone skeletons we get an RGB feed at 1920 1080 and also a depth feed which is 512 by 424 and then an infrared feed as well which is the same resolution as the depth so this one little camera gives just gives us all this great stuff which you get on your PC so that's the typical setup what connect Ron does is it takes this data and it broadcasts it out over the Internet so so let's imagine we have this set up but now we open the connect Ron server right so this is now running the connect Ron server and now this is all being broadcast out so let's see like this right and that's working over something called web RTC which is just a group of protocols that allows you to send live data over the Internet so now you can have another computer over here that can listen and it can listen to the information that's coming over the network from the connector on server so this computer is now running the connector on API which is just a JavaScript library that you run in your browser so you run it in something like Google Chrome and because it's running in the browser and it's and you don't actually have the connection connected to this computer this can actually be a Mac or a PC and then in real time it can just listen for that information and draw the connect data here at the same time so that's sort of the very very basic part of Connect Ron but then what's really exciting is this is actually twoway communication WebRTC allows for data to go both directions so this computer actually has the ability to talk back and forth with the connect Ron server so now this computer can get the get the data from the connect and display it but it can also change like ask for different things from the connector control to connect over the over the connection so for example maybe right now it's streaming the body data the skeleton data but this computer can stay to this connect over a distance you know I don't want the body anymore give me the RGB or maybe it doesn't want that anymore maybe it wants the depth feed so it becomes in a way like a remote control for this connect right and so this connect maybe let's say this one is in New York City and this one's in LA this computer in LA that's not even connected to the connect can be controlling it across the country in real time and then what gets really exciting is that you can then actually have a second computer running the connector on API and this one can also be receiving data and displaying data in real time and it also has twoway communication and could be controlling that connect in real time and this one you know this one doesn't have to be in LA maybe this one's in San Fran and then maybe you have one more let's see if you can see it down here but you have one more and maybe this one also connected is in Chicago or let's go to Europe maybe this one's in Berlin right so now we have a number of different computers that have access to this connect around the world and they're able to get realtime data from that connect and then we can get really crazy and we can add in one more element which is another PC this one is connected over USB USB 3 to another connect and this one is running the connector on server as well so this one will be connect on server number 2 and so this one's number 1 right and so we have this other connect Ron over here and maybe this one is in Shanghai and this one can then broadcast out its signal as well and this computer can also be listening for this server so now we have the connected or from two different connects in two different locations in the same browser and this again is twoway communication so this computer which is in LA which is running the connect Ron API on a Mac can actually control these two different connects that are across the globe one in New York City and one inch and hi and then of course these other users or coders here in San Francisco and Berlin can connect into this one as well okay so now I'm over here with my PC and I'll just switch to the over ahead of you real quick so you can see I have my Kinect and it's the v2 the Xbox Kinect and it's connected just by a USB here yeah USB over here to my computer so really simple so now I'm going to come to the connector on website which is just connect on github I oh and go to getting started which explains how to set up the server and then what you would do at home if you're doing if you're following along is you would download this preview release which brings you over to github where you have a zip file to download I've already downloaded it and opened the zip file and inside there's this connector on application so I'll double click on that and I'll scoot it over here and so now connect Tron is running and I have access to all the feeds coming from the Kinect so there's Dan ok so you get a color feed then there's also the depth feed which this is a 8 bit depth and whatever's closer to the camera is darker and whatever's farther away from the camera is lighter and then there's actually a raw duck feed as well and this is a 13 bit depth so this is the full resolution of the depth that that the connect can see and then we have the tracked bodies so this is the skeleton that this is kind of like the bread and butter of Connect it has this amazing ability to pull out the joints of of a person into twenty five joints and it can find six people at once so I'm gonna click over here to all bodies and you'll see it's actually showing the same exact thing so the Kinect can see six different bodies at the same time and those are all piled together in one JSON object but sometimes you want all six of those bodies and sometimes you just want the single bodies that are being tracked by the Kinect and so that's what this tracked bodies option gives you then the last things on here are the infrared kind of those fun things with glasses the longexposure infrared which is just the slightly more exposed infrared and then the key feed which this feed actually cuts out the RGB color of a body from the background this works like very well also when you have like a curtain or something in the back so it really cuts out the back but it's working pretty well here so then you can do fun things where you can layer a person in different scenes and stuff online and then the last feed here is our G B D and this one is actually taking the RGB feed and it's mixing in the the depth as the Alpha Channel so you can actually get both depth and color at the same time in one image amazing cool so we'll go back to the skeleton and then just real quick I wanted to walk you through the Advanced Options oh and I can't forget there's a record button here so you can record data coming in whether its skeleton data or the image data depth data and replay it back on your website later on if you don't want to be working with live data so here under Advanced Options there's a field here to be able to enter in your own peer server so connect works over peer j/s and by default it sets up a connection on your local network which is what we'll work on today but if you wanted to go out onto the World Wide Web and be able to work across continents like we were looking at on the whiteboard you would need to actually set up a peer server which is pretty straightforward but I'm not going to be able to go over it today because I just don't have enough time but that's where you would enter that information in then you can also change the sizes of your images in case you want them bigger or smaller need to make them smaller for your bandwidth or whatever and then finally there's an option here to block API calls so when we were looking at the whiteboard board before well maybe I can actually hop over there real quick back over here at the whiteboard you might remember we were talking about how all of these computers have the ability to have twoway communication between the the connect and and the API so that means that anybody who's listening to the connect can also be requesting things of the of the connection server so that's awesome but you may not want everybody like the person in LA and the person in San Francisco and the person in Berlin to all be able to make request to your server at the same time you know imagine if this one wants the skeleton wants the body is this one wants the depth speed and this one wants to RGB feed you're probably going to run into a little bit of an issue so that's what the block API calls is for if you just want to broadcast and you don't want anybody to be able to really access your connect and make any changes to it from abroad you can just block them by hitting this button or really them by hitting that button again so that's everything here on the server side and once this is up in running you can just walk away and program from another computer and that's what I'm going to do now I'm going to switch over to my Mac and I'm going to program on top of this okay so I'm back and I'm here now on my I've left my Kinect plugged into my PC which is running the connector on server and that data is now being sent over my local network here at ITP and so I'm gonna now program in the p5 alpha editor and to start I just I open up a new project here at alpha dot editor p5.js org and I'm gonna head over to the connect Ron documentation site and in the API getting started I'll just grab the the library reference to be able to include it here in my index file so I just cut and paste it here and now I have the connector on API included in my code so I'll head back over to sketch Jas and I'll start by saying by just creating a connector on variable and then in my setup Oh make my connector on a new connector on now just a note here the connect Ron will actually if I were coding on the same exact computer where my server is attached if I just declared that connector on like this with no IP address in it it'll automatically connect to my to the server that's running on the same computer but because they're running on two different computers I need to put the IP address here of my my connect Ron server so that is sure one seven two yeah six one six two one eight two 5.25 one no sorry you have to set up your own or maybe I also don't want for you to connect to and put it in there put it in the comments for you but so and this is the number that's right at the top of your connect Ron when you open it let's see actual I can show you here it'll be this number here at the top of your connector on server when you open it up so you just take that number and you put it here in quotes in your new connector on and then you make a connection to that server so connector on make connection and now we're connected then the last thing that I need to do is ask for a feed and so for this I'm going to ask for tracked bodies so I say connector on start track bodies and then I'm going to tell my program what to do with that connect data once it receives it and so for this I'll say draw a body and I'll write that function down here which is draw a body and then the data that comes in will come in as a body so let's just make sure that this is working before we go any farther oh console body no console.log and we're just gonna say here just to make sure it's working so let's see I'll hit play and if you can see down here in my console let's see I'm getting here here here here here here here can we see that yeah so so this tells us that we are receiving data and it's running that function every time that the data comes in from the server so that's great I now know that I'm getting my connect Ron data and so now I just need to do something with it so I'll do that by creating a for loop to go through all of the joints in the body and draw them to the screen so I'll create a simple for loop I is less than body joints which is the array of joints on each skeleton and the length of that and then I plus plus so iterating through all 25 joints and then I'm going to draw a circle for each of those joints and I'll put it at depth X and depth Y and then I'll make it ten by ten great and we'll make those red for now great so we'll run that and shipping can I make you dance around in front of my camera let's see they're getting you yes great so it's working but we have one problem we're drawing a background over top of of Schiffman so we're not gonna be able to see them so we need to move the background here actually and then the other thing that we need to do is scale the depth X and depth Y or the joints to the camera so let's see we'll make it scale to the side of the width and to the height of the canvas and so now there we go now we've got Schiffman dancing on screen amazing right great so that's connector on in a nutshell is just these couple of lines of code and you have access to all of the data on the Kinect so I guess that's it cool thank you so much Lisa for that wonderful tutorial about Kinect Ron and the Microsoft Kinect which is the one that you should get if you want to try to run this software if you're interested in more the Kinect Ron website has a lot of documentation more examples that you can see here for p5.js there are also some 3j s examples that work with the 3d library for JavaScript ejs that you can find link to in this video's description so again if you're interested in contributing if you have some thoughts or ideas about what other 3d depth sensors might be good for Lisa to look into our research to keep the development of the connector ongoing feel free to write those in the comments and I'll see you in a future video goodbye you