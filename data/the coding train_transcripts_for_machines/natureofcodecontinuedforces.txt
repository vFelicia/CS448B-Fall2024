check check 1 2 3 audio test hello coming to you live in just about 15 seconds good morning happy Monday good Monday morning no no no no no no that's not my that's not my phrase I'm just it's no Lodge to mpj from fun fun fun fun fun fun there's three funds and the fun fun function okay here we are I don't know oh boy I don't know if anything is working here mess hi welcome it is me Dan on the coding train Oh live on a holiday because I was supposed to be here on Friday and I just couldn't get it together to be here for a number of different reasons that I won't get into and I thought I'll make it on Monday and it'll happen I'll make it on Monday and then I woke up talking thinking oh really I was gonna livestream today yeah so rushed out of bed threw on the same exact clothes that I was wearing the last time I live stream so that when these videos get edited no one will be the wiser and Here I am a special shoutout to E and O who I believe are maybe watching from home this morning just throwing me for a loop a little bit and also shoutout to our on button I can never get this right brilliant org the sponsor of today's livestream brilliant org which was also the sponsor of my guest spot on M PJs fun fun function which I remembered which will also add the same topic that's what I'm going to do today life is strange also in this room appeared a light that wasn't here the last time maybe can I get you a view of this light hold on a second here I'm gonna show you something rather strange a little little inside baseball here a little behindthescenes and will also shout out to all of you who are watching this on a television because apparently lots of people watch the coding trade on a television I have now learned brilliant org slash coding train you can sign up for free and do a fun puzzle a challenge there's a computer science course there's some other stuff I'll show you later but you can also if you're interested get a discount 20% off the premium a subscription okay let me look it's just much brighter in here right now so I'm not sure if I need to do something about the lighting but let me see if I can show you something yes okay this is my little roaming camera which I can point at me oh it's upside down but I can do this thing here there we go so look look look at the different in this thing about this camera that makes me look younger okay so I'm just going to show you is in this room here right up there this is a hole light on the ceiling that wasn't there the last time I was in this room I don't know where it's a mystery like why did it appear where did it come from these are usually the lights that I use you can see these are the lights that are on the wall all in addition to the camera but and over here but oddly enough there's a sex relate very strange okay we don't need this I don't know what I'm doing here much too much fun in here ah okay that's the floor what No ah okay turn this camera off it's revealing too much and there we go so I'm here live once again did I say that already I'm so tired but um let's be serious for a sec you know what you don't actually nevermind I think what we need to do is who know it's missing again I didn't bring my random number I didn't bring my ran few minutes to go get it oh and this is up again why is this here that's let me turn this off okay let's be serious for a moment everybody the purpose of today's livestream is for me to continue my set of tutorials for the nature of code 2020 a set of tutorials that follow along with a book that I wrote many years ago in 2012 was when it was published and the examples were made in processing Java and I'm redoing a set of video tutorials to go along with those examples in JavaScript so I will continue that today I will not be starting with the ceremonial reading of the random numbers when I take an intermission which I will do at approximately 1130 I will go and get that random number book but now is a good time for me to highlight my most recent video that came out on the coding tray and the coating of Cabana hilbert curve challenge don't they look kind of like washed out maybe do I need to like deal with the lighting I don't know and it was it's this if I completely forgot how to livestream so I'm gonna go here and I'm going to go to the Cabana let's let's go to the Cabana so I really would like to make a lot more of these it certainly was this particular video was watched quite a bit more than my usual uploads so that was kind of nice to see I'm gonna start that happens check check one two three checking the mic check check hello welcome to oh the coding train with me your host dan Shipman it's a Monday morning this is a bit of an unusual time for me to livestream in fact it's a holiday here in the United States NYU is closed even today but I didn't miss my livestream on Friday so I am returning you could all see right through this right I missed my livestream on Friday so I'm returning today to continue my video tutorials on nature of code now I am I did point out in my dress rehearsal you watched that there was a little bit of an issue with the lighting but mister ugly in the chat is saying the light is looking fine maybe brighter than you're used to but looks good I look good thank you thank you that sweater makes me think your tie is hanging sideways yeah by the way I was rewatching the edited versions of the videos the nature of code videos well there's like four four of them that are ready I mean they're very lightly edited they're really just pulled out of the last live stream I shouldn't mention this actually it's gonna drive everybody crazy I'm not gonna mention there was something in the videos driving me completely insane oh I'll just mention it because you know you're only like 200 ish people and there'll be a more people who will watch it but oh my hair was kind of like I'd be like hair like sort of like curled like a little couple pieces of hair like that kind of that's and I couldn't watch it so I don't know I've I have to redo all those videos just because of that but we'll see okay and let's see so before I get going with the nature of code stuff Simon's actually about the convolutional neural network videos those are done they're ready to go I am one of the things that I do is I use a service called 3play media to caption everything and it takes a while for the captions to be ready I think these are longer they're just taking a while also I got to make the thumbnail oh that stuff so I just haven't gotten around to it but I appreciate you asking those will be out soon and I think though before uh uh before I move on to doing the nature of code stuff I would like to show these community contributions there's a lot of them which is very exciting and I don't have a system I really think that I look pale and weird matchy will color Greg actually I need to do a test I'm having some recording issues I have to also sneeze so I'm gonna mute my microphone very serious sneeze my sneezes you know I've said close to setting a world record at the sneeze Department I was coming over here because I was going to look for something that I've now forgotten anyway I would like to go through these community contributions so I I guess I'm just gonna click through all of them and try to not spend more than 20 to 30 seconds on any of them so we'll get through them I mean in just a little bit I will mention that in the discord we've been people have been sharing these so if you haven't joined the discord maybe somebody could post a link to the discord in in the chat here and Arnab is asking did it break your 10 print contributions record I don't think so I think the I think if I go to coding challenges and I look for 10 print and I go to to the challenge I think this one I mean just eyeballing it this one looks like it certainly has more so no video I believe has more community contributions than the 10 print one but I think the helper curve is on its way so let's look at some of these I kind of want to do them in so David Snyder made this wheel thing let's let's we got to keep working on is a very long long term project because I like the idea of like doing them in random order okay but let's see so this one is translated to C sharp which is interesting I actually went to okay so I assume that this is just gonna give me the C sharp curve so I won't spend more time looking at that but thank you Clement and I recently went to a workshop on unity know about this unity thing I should really learn that it looks amazing so C sharp is in unity okay Hilbert and Z curve oh look at this by Kobo L so it looks like here let me make this a little smaller I can like play with the color that's fun I can switch to a different curve so there's also the Z curve which is another spacefilling curve looks like that that is awesome random color and then I can adjust the order and I like how the thickness and I should probably make these darker so we can see it a little better I like how that the thickness of the stroke is tied to the order that's cool great work alright where are we oops now I'm sniffling him now I want to see Oh done in Haskell with five lines of code amazing and I suppose this is the result and I suppose we could see let's let's let's see if this is really five lines of code well I was like a lot of code to me I guess probably just in here this is the actual code cool I don't understand any of this but it looks really cool thank you for sharing that Nikita interpolation between orders oh okay I'm excited for this I am really excited for this yeah there we go this is what I was hoping to see really nice there's something about it that doesn't feel like it's coming from I mean it's yeah it's coming two corners kind of go that it's really cool I don't mean this is a critique it's a little bit different than the three blue one Brown where I feel like somehow it pulls out from the center if that makes any sense whereas this is like pulling out from the corners that is really cool I wanted to make a version of this myself but didn't get around to doing so great work K week Mon is pointing out that the Haskell one was refactored for making it easier to read okay driving a car oh I know zooms out sorry I'm gonna get to the driving a car going in order whoa that is also so cool I love this I love the fade in the zoom now is there there must be a way to get the the the one that you're kind of like zooming out a line there's like a crossfade between the one that was previously drawn in the next one when it finishes and he's barely noticeable but I feel like those there's must be a way to get those like aligned perfectly how far how long will this go for oh my god this is so awesome I hope I could I didn't actually haven't looked at these I saw some of them but this what I had not seen I guess it finished my sneeze no okay let's look that wasn't so beautiful I'm going to remove myself for a sec okay I think that one is you so cool okay let's go to driving a car this is wild okay no way it's when I didn't see already so I'm I'm acting this is acting but I was this excited when I saw her on woah this is much harder than I thought do I win a prize if I make it all the way oh look I could just go anywhere I want that's cool I like the idea of like constraining it or maybe using this as a path for my like AI cars that I never actually made a video about but that I built during a live stream cool this is awesome oh and that you know vectors and forces all ties together image rendering curve what is this this one's in processing so one thing I would say is when you if you make something that doesn't run in the browser one is if you could do like a blog post about it will you write a little bit and then maybe do a screen capture in the blog post that's really helpful to like just see your project instantly another option could be to add a readme file and then you can embed an image into the rimi file or even like a gif so I'm very happy to download this and take a quick peek at it but you know that's something that I would really suggest that you get in a habit of when you're building up a portfolio and a portfolio is maybe too strong going forward but just sharing your work on the Internet that the source code is great but if you can write a bit about your process and document it with some images that's always a wonderful thing to do so let's see though if I can make this happen really fast okay okay sure no yes fine whatever oh yes no aah oh my god help me cool so it's doing the Hilbert curve and using the pixels from a particular image that's wonderful thank you for sharing that um hilbert curve with p5.js beautiful we are seeing it happening here on code pen I always like to see other code editors that people are using now we're down to editable spacefilling curve by Simon Tiger whoa okay look at this talk about selfdocumenting here's the p5.js sketch with a whole page describing everything that's going on oh my goodness Wow what is going on here so there's a seed there's a hilbert curve there's the Morton curve the zorder curve the piano curve the sierpinski triangle I don't know what's going on here I don't know how to operate this oh oh but I could oh I can like design my own and then it'll make it in here and then there's like a seed Oh was the seed do little boy what did I do I ruined it oh I see the configuration is maybe tied to a number so this is the seed oh I see this shows the hilbert curve and then maybe these show the rotations and then I can also do the grid size whoa oh my god this is wild Simon and these are the rotation instructions oh my goodness I'm gonna have to play with this more later really unpacked this great work image dithering with hilbert curve okay oh I can choose a file let me find a file here I've got a kitten image so I uploaded this kitten image let's increase the order there we go cute and now I can animate it nice work so this there's the dithering thing is really interesting because I did some quick experiments where I just pulled a pixel color from an image and just assign that to the particular line segment on the hilbert curve but the dithering process involves actually looking at pixels on the previous spot and the next spot along we hold for a curve are looking at the difference between the brightness and then coloring that way I'm gonna have to take a break and get some water or something I've really I think I'm like allergic to this new light let's see if I can get through all these though Hilbert's flower whoa that is wild this is some variation on the Hilbert's curve probably changing like random angles or something and it makes a nice flower pattern I love that thank you Brian new animated hilbert curve we've got more morphing yes this is what I mean by it sort of feeling like it's morphing from the center not the corners if that makes any sense so this is I love I love these animations and this one looks like it was done in Visual Basic so this is what I mean by you can record a gif and included as part of your github repo to help be able to see it real quick if it's not executable in the browser piano curve oh yes I wanted to see this this is from K week Mon and of toggle mode whoa I know what's going on here there's an order slider and I don't know what the toggling of the mode does but I like it thank you for this I'm gonna have to look at this more later as well hilbert curve SVG from L system so L system is another technique I do have some videos on it for how that you can generate a variety of different fractal patterns one of which is the hilbert curve I like that I can just select rainbow oh oh oh that's awesome and I guess this is rendering it as an SVG rather than canvas drawing we have got the Gosper oh look at that that is so cool I'm gonna have to do oh and then like the colors are cycling through it oh I'm gonna have to I'm gonna have to try doing something like this I can animate it oh and I'm animating it and the colors this is like the animation speed wild ok great work dragon curve oh we've got a lot of different curves from David Schneider now I'm having trouble seeing the difference between visually between that that the dragon curve oh maybe there's like an interface that I missed on this one oh hold right click tap and scroll to impress any key I see so this one will cycle through different curves cool I will play with that more later I'm just moving quickly now and hilbert curve translated in PI game alright let's take a look a little bit of Python here ooh okay lying intersection oh I love a good line intersection fun good oh there's a create vector function oh nice just like in p5 okay thank you for all these wonderful community contributions I am now going to move on to talking about vectors and nature of code again but I need to take just like two minutes I have a frog a literal frog in my throat and I will be right back so let me put on some music for you I'm just going to put the little intermission animation right back I'm back all right everyone there's a lot of people watching today I'm not sure why I guess it's maybe it's a holiday here in the US and a lot of you are at home and are available to watch kind of get myself situated here whoa what is going on oh this is because these are new I'm looking for where I left off George oh yeah February 7th there we go okay not here okay so I think I think where I left off and where I need to be today is adding the concepts of adding the concept of acceleration to this particular example and then I'm going to make an example where the object the Walker accelerates towards the mouse and then that will require me to look at a couple different things one is static versus non static functions as well as normal to normalized function so those are the main things that I want to look at here static versus non static normalized make an example where the Walker accelerates towards the mouse and then that will set me up for moving on to chapter 2 ok now before I apologize for this but last time I did my nature of codes session the separate backup recording failed so I just want to check to see if that is working oh of course I didn't even start it sorry I'm gonna just check let me just hit multi corner so I'm gonna record for a couple minutes and I will check that in a second so I think and I lost the chat here we go okay so let me go for a second to right here let's try this I do chapter to NOC underscore yeah or actually underscore one yeah this is what I'm looking to do a quick little adjustment okay so this is ultimately to the example that I'm going to sort of build today and go through a lot of the pieces of this in terms of how vector subtraction works house what's the difference between a static function with p5 dot vector and and there should be let and also how normalized function works okay really not anticipate having this sort of difficulty today so many people watching all right everyone oh so I'm really concerned about the audio but I know it's complaining so I guess it's fine I feel off today I don't know why but maybe maybe things will start to sort of like kick in and feel less off in a moment and I'm like closing things and I don't want to close that's fine though come back to me there we go everything's going to be fine everything's going to be fine this is what was left in the last one now now let me just check and make sure the recording system is working I'm gonna hit stop on it and I'm gonna just quickly take a quick peek at it you know I apologize for doing this test test mute my mic here system appears to be working hey need a vacation okay let me get back to here when we get back to here let me get back to here and here we go well what's going on with this camera what happened to you my little friend someone was in here messing with this camera god and you see that okay looks pretty in focus so I will make that as a yes all right so some actual content is happening now 40 minutes in welcome back to nature of code chapter 1 vectors and where I am leading to where this whole set of videos will eventually very shortly get to is building this particular example where as I move the mouse around this Walker object or a mover object or a particle object whatever I want to call it is accelerating towards the mouse almost as if it's attracted to the mouse and in chapter 2 I will actually look more formally at gravitational attraction and how that works but in order to get to building this example there's a couple bits well there's a very important bit that is oh well there's editing I have added in I forgot but before I get to building this example I want to take the time to cover something known as a static function because this idea of a static function is fundamental to how I'm going to work with p5 vectors in all of the examples and in the previous video I created this example that looked at what happens when you create a random vector a vector always of length 1 but with any given random direction all right so sometimes I see the chat out of the corner of my eye and I'd like it sends my mind in another direction and I lose my train of thought so let me just do that again this is the example I left off with in the previous video oh boy I got to fix my hair this is the example I left off with in the previous video where I was looking at what happens when you pick a random vector and not just oh right I know what I want to say this is the example from the previous video where this is the example for the previous video where I looked at picking a rock rock rock rock rock rock rock rock rock rock rock rock yes 375 people are watching a lunatic on the internet talking about random vectors and clucking like a chicken and every once awhile I see the mic go all the way into the red and it just makes me very nervous what if the audio is just recording terribly right there seemed to be some interference high pitched low volume noise right right I saw that as well all right we're just gonna hope that everything's fine okay we go ed says he's finally lost it I would sit finally I think I think I think it's wellestablished that I've lost it years ago this is the example I made previously where I picked a random vector and so the vector has a random Direction always of length 1 and then I'm scaling it with some random value so reason why I'm highlighting this is right here the way I picked a random vector P 5 dot vector dot random 2d is a little strange and this is in fact an example of a attic function okay oh hello there it's me by the weight board let's establish something this is me creating a vector object the variable V now stores a vector object of type P v dot vector I can call functions on that object v dot v dot multiply this is no different than what I was doing in my example with the Walker I make a walker object I say Walker dot update Walker dot show I'm calling functions on the actual instance of the Walker itself that's what I'm doing here calling functions on the actual instance of the vector itself the actual vector object V which is a vector object a p5 vector object this is how this is quite typical Twite I don't know what I'm saying here I know what I'm saying here but I'm saying it too many times don't need to say this many times this is conventionally how you've seen how this is conventionally how I've talked about and used objectoriented programming in my video tutorials most of them but there is another way maybe you've seen this before in other contexts programming in JavaScript for example have you ever seen something that looks like this math dot random there's a mouse cursor right there in a weird place this is the documentation page for the math dot random function is math an object and why does it have a capital capital letter this looks very different than Walker with a lowercase which I know is an object dot update but it's also something dot a function call all of this yeah it's a good point someone's talking about why it was named bolt is it a product or factor or scale I kind of agree with that actually we should change that I yeah math is not an object instance just like p5 dot vector is not an object instance p5 type vector is a class from which I can make vector objects math is also a class so this was a very longwinded way to say that a static function is one that is called on the class name itself p5 dot vector dot add for example this is the static version of the add function this is the IO regular nonstatic the object method itself add and so number one this is just me defining for you what it means to have a static function and in many cases static functions art will can I just do this whole thing over because I kind of like didn't really know where I was going or why I was here I didn't like come back to life right not that I don't know maybe I haven't come back to life yet but I really felt that you to come back to life and I feel like this video is now when it gets editors to be like 20 minutes long you really just wanted to say something very simple which is like what a static function is or maybe I just need to get the random number book as some people are avoiding out no and people get very upset with me when I decided to get to start this whole thing over but I am I am I am you can't stop me trust me the world the people of the future who will be watching the nature of code video tutorials will thank you for suffering through me doing this twice because they will get to watch a like two minute video where I just quickly explain what a static function is rather than this 20 minutes or like choppy edited weird thing so you're doing a service think of well the good you're doing for the world right now static method and instance method and we're know very kindly as saying that I can start over which I appreciate okay hello it is I me not you but a person I should while I'm here I should check to make sure the recording thing is working I you says have you ever made a two minute long video no thank you Jason Jason writes the thinking out loud is a valuable lesson I appreciate that all right let's just I can eat humor me for like another little bit we are let's see here I gotta turn this off the recording system seems to be working okay so I'm gonna take that as a good sign and then as I lose viewer after viewer after viewer and we get the chat back here I think I'm not gonna go down the road of looking at the math dot random okay alright hello welcome to another chapter one video for a nature of code on vectors so I am building to something I am getting somewhere to a place where I'm going to make this example for you that looks at something called acceleration and in fact has this walker or mover or particle whatever you want to call it object accelerating towards the mouse but there are some key concepts that this video will required that I want to talk about first so one of well no not one of which there are some key concepts however that I want to talk about that doing this example requires so if I go back to where I just left off you know looking at how to pick a random vector using p5 dot vector random to D so this picks a random vector always of length 1 but any random direction and then I'm scaling it randomly we get this nice pattern but this here p5 dot vector random 2d might look a little strange to you and this is an example of a static function random 2d is a static function it's called on p5 dot vector rather than like this function multiply which is called on V the object itself let's look at this a bit more closely this is the conventional way that I have looked at objectoriented programming in most of my videos I make an object often I'm saying new something but p5 has this create vector function that makes the object for us minor a bit a subtle distant remember how I said I was going to redo this I wouldn't have any problems i got problems this is the conventional way that I have looked at and described objectoriented programming in most of my videos I have a variable V that I make an object now this this is a little bit strange no more starting over no more no more no no you are bad video tutorial person maker thingy and some days just aren't aren't my days the last time I did this it was went pretty well I thought this is the conventional way this is this is a conventional way that I have looked at objectoriented programming in most of my videos I make an object let V equals create vector now truthfully you'll more likely see something equals new something but in this case instead of saying new p5 dot vector do I really want to talk about this we need to I hate that I have this create vector thing which is just really throwing me off in this explanation cannot seem to manage to get gotta get that book of random numbers this this is the conventional way that I have looked at objectoriented programming in most of my videos I have this object V it's a p5 vector and then I'm calling a method on that object a function on that object this is what you would be referred to as an instance function or instance method the one thing that's a little bit unique here is that instead of saying new p5 dot vector I'm saying create vector and that's just something specific to p5 itself which has in it a create vector function to make the vector object but sure in most cases like this one right here I'll be making a new Walker object and then I'm calling instance methods Walker dot update Walker dot show those execute the code to run the functionality of this particular Walker object so the term I'm using is instance method or function a static method a static function is one that is not called specifically on an individual object itself but rather on the class as a whole so notice how I'm calling a function random 2d just like I'm calling a function add but instead of on a specific instance of a p5 vector object I'm calling it on the name of the class itself p5 dot vector that's because this bit of functionality isn't associated with a particular object I want to add something to this specific vector here but here I don't there's no actual specific vector I'm talking about I just want to make a new random vector so this this begs the question why is it done this way the story here is that this is really a decision that the creators are maintained errs of the p5 library have chosen there's no reason why there couldn't be just like there is a global create vector function that makes a empty vector or vector with zero zero in it there could be a create random 2d vector so this could be I could be sitting here in an alternate parallel universe saying this is the function to make a random 2d vector in p5 but in JavaScript it's quite common to collect a bunch of functions under a namespace but in JavaScript or you know in other programming languages as well it's quite common to want to collect a whole set of functions under a particular namespace for example maybe you've seen oh let me look here yes for example in JavaScript there is the math object oh it's an object yeah why JavaScript why why do you torture me I'm just gonna go to math dot random for example if you weren't using p5 and you wanted a random number in JavaScript you would call math dot random and in fact under the math class is it's a builtin object it says it's a builtin object it's so confusing for example if I was working in job I didn't watch the Bon Appetit YouTube channel so I haven't talked about to you about watching some they're like kind of amazing and I feel like we need to just adopt there I don't know editing style so anyway I'll come back to that not T I don't know if you're much skipped over this little rig like digression here when you're reviewing this but no all right an object is one way to implement namespaces I know I know I know object class it's also confusing all right so I'm gonna gloss over this and the gloss over is for example in JavaScript if I didn't have p5.js and I wanted a random number I would say math dot random and in fact there's a whole clips wrong way this way forward for example in JavaScript if it is a class says bimple for example in JavaScript if I wanted a random number and I didn't have p5.js I would call math dot random and there are a whole collection of static functions name spaced under the math thing object class oh the terms are so confusing math max math dot min math dot pal math dot random etc so p5.js is actually a bit of an anomaly in that there are all these global functions normally you wouldn't see that in a socalled proper JavaScript library I don't want this is my problem with explaining the static thing I can't help myself but go down all these like digressions and blah blah blah and it just really doesn't matter it's not yeah so yeah I'm gonna see Groundhog Day boy am I in a episode of Groundhog Day alright okay yeah yeah it's not a class I can't say class countryrock take me home for example in JavaScript if I wanted to pick a random number and I didn't have P 5 yes I would say math dot random and there are a whole collection of functions mathematical functions under the umbrella of math there namespaced under math are all static functions so in p5.js there are a lot of global functions which is a whole kind of other discussion why are there global functions at p5.js but I don't want to get into that right now but all of the vector functions are not part of the global p5 reference their own namespace under p5 vector so there are some times where I want to call a function that's operating on a vector and some other operations that I just want to call that relate to vectors that are called under the vector class itself some are static p5 dot vector dot the function name and some are instance v the instance of an object dot the function name yes I got through that now before I go on may be able to use this weird rag I'm not finished yet before I go on I want to look at a practical example of why I might want to use a static version of the instance but I'm not done yet one of the weirder things about working with p5 vector is there are both right this is an instance function and a static function random 2d but there also is a static function add so some of the functions have both instance and static versions of the same function so I want to look at a practical example of why I might want to use one versus the other it's a racer barely works exercise exercise to do this let's look at something very very to do this let's look at but to do this let's return to the world of scalar numbers just single values themselves let's say I have the variable X and it has the number 5 and I'll then I also have the number and we'll call it X speed just to go back to when we were doing this these kinds of motion algorithms without vectors X speed equals to it's so so normal that I might want to say x equals x plus X speed normal normal is the weird weird thing to say this is a case where we would write code all the time like this x equals x plus x feed we did this without a second thought I'm taking to adding it to five and putting that value back in X so if this were to draw loop X is five that it's seven then it's nine then it's 11 etc we've now seen that the equivalent is if I have a position vector and I have a velocity vector I would say position dot add velocity this is the equivalent of this taking velocity adding it into position this is the equivalent of this taking velocity adding it into position and saving it into itself this is the equivalent of this but with vectors X changes by X speed position changes by velocity however what if instead of doing it this way I wanted to say let new x equals x plus X speed what if what I wanted to do was take the result of this operation and store it in another variable so X hasn't changed after I run this line of code X is still 5 I have the number 7 in this particular variable new X now in the case of a lot of now in most examples I don't want to do that I want X to change and keep saving the new value into itself incremental e but there are hard a lot of times where I want to do an operation not mess with those two variables and store it in a new result how do I do that with vectors so your instinct might be okay maybe I'm going to have a new pause and I would set that equal to pause and velocity I mean this this makes up a lot it's not correct it makes sort of logical sense but by its nature an instance method that receives another vector changes the object it's acting upon this is where the static version of ad comes in if you want to add two vectors together but not mess with those vectors you can use the static version of the ad function it's a bit wordy and the code looks a little awkward but it works let new paws equal p5 dot vector dot ad got ad position comma philosophy did that fit poet fit there you go so if I want to add two vectors together and get the result in a new vector I just need to call the static version of ad which is namespaced stored under the p5 vector class itself so while this is very common in our physics algorithms position changes by velocity in a moment we'll see velocity changes by acceleration there are certain times where I want to do an operation like this and there are more examples of that than just ad as well I know right wouldn't it be nice if we could overload somebody told me there's a way to overload silence okay let's take a little DUT now let me try to like finish this off and then let's take a little digression operate operator overloading I'm I'm doing the terrible thing here which is I'm like looking at my messages okay which I shouldn't be doing well okay and this is in fact is exactly what's demonstrated on the p5 reference you can see here V equals create vector V dot ad it actually changes its V's components themselves versus having V 1 and V 2 and then saying p5 dot vector add V 1 and V 2 and putting that in a new vector V 3 so hopefully now this video gives you a bit of a sense of what the difference between a static method is and an instance method and by the way I'm just for better or worse kind of using the word method and function interchangeably technically speaking a method is a function that's part of a class in an object and a function as well a function that exists maybe on its own but I'm a little bit looseygoosey with it stuff and so but so I'm using them interchangeably but hope the point of this video was to give you a sense of what static functions are and instance functions static methods or instance methods and now as we move forward and start to work with more vector operations in future videos and examples you'll have a sense of why I might be picking one versus the other in different cases and this is going to come up in exactly the next example I'm gonna demonstrate that's working with an acceleration vector alright so maybe you've decided forget about this this is where I draw the line this static method stuff drew drove me crazy I'm out and out but if you're not if you want to keep going nature of good I'll see you in the next video bye okay so give me a second here somebody told me is all right so it's there I was told that there's a way to use value of so I have to look into this that maybe if I use value of that I can overload the operators so but how would I do that can I turn the vector into a single number that I could then add and then like turn it back no don't go into operation of overload I have a meeting in two hours right over I guess I don't want to look at this right now but yeah I guess you can do so you can do object overloading in Java Script with this value of function but he needs to be a single value so there's no way could I do some kind of crazy bit op like operation fitbit operation to like trick it into having like two values I don't think so so I don't think that's gonna work but that was interesting interesting suggestion all right everybody I am going to take a break and I am going to go get my random number book and when I come back with my random number book I will read some random numbers and all will be well in the universe but before I do that let me tell you about today's sponsor of brilliant org I have talked about billion org on a number of occasions it's a website myself quite enjoy it because I'm a person who likes interactive puzzles and learning new things and math and science and logic and computers stuff and there's much more there I'm brilliant at or even just those topics but it's a it's an interactive lifelong learning website you can sign up for free just go to brilliant org slash coding train and there's lots of stuff you can do for free I just enjoy for free there are certain course different things that get unlocked if you want a premium account a core whole course on computer science fundamentals that you can see here that I am showing you and so there what I really like about these courses that has like all this like draganddrop functionality and pseudocode so you can really like think about how programs work and how they're structured you don't actually have to just write the code yourselves you could do a lot of this just through pseudocode and interactivity without getting bogged down in the syntax but what is kind of amazing and I think is this video that I'm playing to you is gonna switch to it in a second what I didn't know is that brilliant is actually builtin I don't use a lot of Python I'm like a you know what Java Script a weirdo but look at this brilliant is actually built Python into the browser so you can write and execute the algorithms you've learned using Python syntax so if you want something and that I that complements your learning you know maybe watching a lunatic on the internet like me talk about programming and like saying the same things over and over and over again is what you enjoy great but another way of learning is through reading and interactivity and a website like brilliant org so one of the things that I love about brilliant really my favorite part of the website is and if I go to it these daily challenges oh we're dime not logged into my logged into a different account then I thought that I was that's fine I have a premium account but maybe I'm not logged into that right now and so let's do this I like card things let's do this one and let's see if we can sort this out I'm gonna take this banner off so we can see it sometimes it's intuitive to reason logically when we are thinking about realworld situations we have common sense and experience to help us out consider police searching or spy they know the following if a person is a spy they'll have a recording device at the event which people should the police search in order to find the spy well the people with the courting device but that doesn't automatically mean oh so there's like a trick here let's keep behind so you can read this explanation look at it but let's look at the challenge the cards below have colored hearts numbers or letters printed on them on either side how many cards need to be turned over to test whether the following assertion is true I think I know the answer to this I looked at it earlier it didn't actually click on it but I did look at it earlier cuz I I like this one so I'm gonna let you think about it for a second I'm gonna see what the chat is saying and let's see if a card has a blue heart on one side then it has a number on the other side is that true or false so obviously if I could just check all four of them I would know because if it were true this would have a number on it and this would have a blue heart on it let me see if I can zoom in here this one would have a number on the other side that one we have a blue heart that would not have a blue heart and that would not have a blue heart so if I wanna can I check to see if it's false right how many cars gonna be turn over to test whether fall falling is true is there one of these I don't need to check right so for example I thought this the one with the two doesn't matter because this is only saying this is the trick right it's only saying if the if it has a blue heart on one side has a number on the other side that doesn't mean that you could have a number on the other side even if it doesn't have a blue heart on the other side so the two is irrelevant but if either of those well if the blue heart and the blue heart doesn't even matter oh no no it does so I have to check the blue heart one to see if it has a number on the other side and then the other two I have to check to make sure they don't have a blue heart because they have the blue heart on the other side they don't have a number on this side then that can't be true so the answer should be three once again have my oneday streak nice I'd have to look into which why I'm like logged in to the wrong account here did you get that right but I also have to check this one I kind of want to be able to click these so this would be a fun little if I had some time I would make like a p5.js version of this which you could do and when you click on them and it flips them over umm this reminds me of the Monty Hall problem the what spot the bazaar prize behind the door and do you want to switch doors dad I should really talk about in a video I love that problem it's a sort of classic problem with Bayesian probability I would be shocked if there's nothing Bayesian on this website there we go I can definitely find some Bayesian stuff here so you can learn about that so again I encourage you to check out brilliant out org slash coding training you can sign up there for free let's people lets them know that you found it through the coding train which is a nice friendly thing to do one way to support the coding train support support whatever you want to do is aokay with me that's one option and then of course if you really love premium if you love plate and want the premium subscription to unlock all the courses if you go through that link to get a 20% discount the first 200 people will get a 20% discount okay I'm gonna take a break when I come back I am going to do one more example I am going to build that example that involves accelerating this this one here I'm gonna look at how to how to have an object a mover object accelerate towards the mouse and I'm going to play with that in a variety of different ways and talk about the math behind this and that will wrap up chapter 1 on vectors okay so I will see you in about five minutes we go find the red number book get some more water and kind of reset my brain and we're back and it is time for the ceremonial reading of the random reverse ah oh boy I lost like a hundred people come back I have the random number book everybody return to the live stream by the way the this page which is page 318 and you know what I think would be good this would be a good time this would be a good use of the overhead camera keep me honest here well now I want to flip it I'm gonna have to sneeze again this is where everything went wrong in the first place quick acting now I know I had this flipped no whoo that was a real sneeze and I'm thinking maybe I'm allergic to the random numbers that couldn't be no oh that would be such a disaster this page page 318 to 319 I always open to sixty four thousand five hundred and fifty eight two thousand seven hundred eighty one ninety eight thousand 1821 eightythree thousand six hundred ninety seven thirty six thousand no no no thirty four thousand six five thousand eight hundred fifty nine thousand nine hundred fortyfour in two thousand nine hundred and twenty five you know we've got no new members today because whenever I get a new member you know I need a button hold on I need hold on a second we're gonna do something exciting here do I not have it let me just create not a scene a source over overhead and now that's the scene no the scene is green and the source is over and now I think if I hit close we will I can press this button there we go I have a button now which does it I love my stream deck hit me up Elgato actually already sorry the response okay um we've I need another 30 seconds of this break let's just take a quick minute I just want to look because we're getting close we're getting close to where I really need my copy of a million random digits with 100,000 normal deviates I want original prints how do I find like on eBay maybe let's go to like oh this is very Bashan not bad I'm not logged in or anything am I so let's see a million random digits with 100,000 normal deviates here this is this is what I'm looking for 1955 but see this is a problem for me at least a few dozen missing pages several pages I don't mind the pencil marks tape on the spine I don't mean that 1955 is good but missing pages missing pages is an issue for me I feel like I need money is no object here I will spend all of my coding train riches on an original print of this book I mean I guess within reason I really wants me to login thanks for like just popping up stuff that I don't want you to pop up you know is there another one not even know this is this is as close as I'm gonna get so the missing pages are chosen at random Thank You Yaya good to know our money is spent responsibly yes you could give you joy now your money remember trip money will go to my finding an original for there's gotta be one right all right Internet help me out help me out find me somebody selling one without missing pages I will buy it I will purchase it and I must be authenticated somehow all right we will now move on to this is done this is this one and this is now this one did I cover this did I make this change in that video do you mind humoring let me just check something okay hold on what I'm doing right now that you can't see is I'm logging into my dashboard for the coding train and I am pulling up the current edit I'm going to I am pulling up the current edit of NOC vector3 so this was the so there's vector two of you on YouTube and so what I'm looking for and you can see my screen again so these are the unlisted edited versions of the videos that will eventually soon come out with me reading saved clothes you don't wear the same shirt I don't think I have the same undershirt on like this is the current undershirt that I'm wearing I don't know what it is if anyone can deduce what it is in those videos I will show you the part about my hair that's bothering me but this was number two where I go through this stuff and then where do I end okay so I left this off with negative one comma one there and then this one this is where I'm talking about the whole random stuff function like random 2d would you after that okay sorry I don't think oh I do so I did this in this video okay okay got it got it okay so I know where I last left off and I did leave off with it here but I've already duplicated this so I can move on and I think I'll change this to mover and mover mover mover and movers not to find because I'm just a mover here okay there we go okay all right so in this video do I want to do a separate video that just talks about normalize and set mag I think that I do I mean I could talk about it in the context of this example I think it might be nice to have it as its own standalone thing so I could point people to it and they want to know what normalizes oh I am so close to getting to making this example where an object accelerates towards the mouth and where I last left off I had this Walker object which I have now renamed to a mover object and every time I run this sketch it picks a random velocity and moves according to that velocity in the in the canvas so all I need to do to add to this is an acceleration but there's a bit more vector math that I would like to talk about that is also required for this let me erase this whiteboard and random vectors oh I know what I'm gonna do oh oh oh never mind never mind got it got it got it got it got it everybody whoo got it got it got it oh I'm excited all right I know what I'm gonna do I thought you thought did we think I am so close so close to getting to this example where I am going to have a mover object or walker or particle whatever I'm calling it just like maybe like turn one of these lights off better worse thing you have to turn the lights on I'm recording this right yes I know maybe I've like ruined the way that I do this so it takes me so long now hi this is another video in the nature of code series chapter one on vectors and I really thought that I was going to get to this example but I want to do one more video looking at what it means to normalize a vector so this is going to be fundamental to how I create this example where this particular mover object is accelerating towards the mouse wherever I move the mouse there it goes it's going to sort of follow the mouse and I can sort play with a bunch of parameters in this system I'm getting there so let me return back to this example where I picked a random vector every cycle through draw and then then moat then scaled it by a random amount and I'm drawing it onto the canvas there's not a really a good reason why I keep doing this over and over again I just sometimes I just have a like uhoh people returned you've come back hi all right all right no more monkeying around here no more fooling around I got you serious serious serious time hello welcome to another video in nature of code chapter 1 vectors series I really thought that in this video I was gonna start making this example I almost have arrived there where this mover object is accelerating towards the mouse but there's a particular math function that I'm going to need for this example that I want to cover in a separate video and that's the normalized function I want to look at how I deal with and calculate the magnitude of a vector how I normalize a vector what does that even mean and the way that I'm going to do this is look at creating a vector between the mouse and the center of the canvas itself so let me talk about what it look Oh goodbye whiteboard no signal come back come back there you go so let's look at this scenario that that I'm working with here I have a p5 canvas I'm going to have an object at some location let's just assume right now that it's at the center of the window the canvas and then the mouse is going to be somewhere that's the weirdestlooking mouse arrow ever Oh much better much better much better and the mouse is going to be somewhere what if what I want is a vector that represents the difference between the center and the mouse I want a vector that points from this location to this location how would I get that vector let's think about it for a moment without vectors say this is the location 400 comma 10th and this here's the location 200 comma 200 not exactly to scale and let's say this is the location 300 comma 200 what I'm looking for are what are the x and y components of this vector x and y well I could say that this is 100 right because it's 400 minus 300 400 minus 300 that's the x value and then the Y value is 200 minus 10 so that Y length 200 minus 10 is 190 so this vector has the components wait what I did not draw this anywhere remotely close to scale yes because if this were actually 600 why let me start this over I'm gonna finish this I'm getting through this the scenario I want to look at is as follows I have a canvas and I have some mover on the canvas a particle somewhere let's just position it in the center let's say this is 600 by 400 it's not exactly drawn to scale but close enough so this is 300 comma 200 then I have the mouse I'm moving my mouse around somewhere and let's say I have the mouse over here try to draw a mouse arrows and we'll call this location 580 comma 20 what I'm looking to do is figure out how do I calculate if I know this position in this possession a vector that points from one to the other if I want this particular particle to accelerate towards the mouse how do I calculate this particular vector call it V well when I say calculate the vector what I'm really looking for is the X component and the y component so V dot X equals what 580 minus 300 so 580 minus 300 that's 280 V dot y equals 200 minus 20 this length is 180 so this vector is 280 comma 180 what mathematical operation did I just do here I have two vectors really I have this vector which I'll call position and I have this vector which I'll call Mouse what I did is I said Mouse position gives me V V equals wait I'm doing the next video all of a sudden this is so weird what's wrong with me I just wanted to talk about normalize it I guess this is this gonna be what its gonna be v equals Mouse position let's confirm that this is the case I'm going to take this vector Mouse which looks like this remember when I add vectors I put them end to end so this vector mouse + position would be this right this would be mouse + position but I want to say Mouse position so ought to do is reverse this vector and then this if this is sorry position and this vector is Mouse this vector is V now oh whoa whoa whoa whoa whoa no no no not right not right not right let's confirm through a vector diagram that this really works I want to take the vector Mouse oh no no I was doing it right I was doing it right Mouse position I was right I'm just looking at the chat all right I guess I have to do this again now let's confirm that this let's confirm through a diagram that the subtract operation is really what I want here so if I take this vector mouse and draw it down here and I'm gonna this approximate right if I were to take mouse plus position I would put them end to end position like this so this is position oh and I'm going off the I went out of your point of view but I really can get this thank you let's confirm that subtract is really the operation I'm looking for here by looking at the dot by diagramming this let's confirm that this really works the subtract operation by diagramming this so if I take this mouse vector that's pointing from zero to this location 580 comma 200 and I kind of draw that down here it's exactly exactly right but I just sort of duplicate this here if I were to add if I were to say plus position I put these vectors end to end so I would take this vector and put it like over here I'm about to go out of your range of view so I'll just draw it a little bit shorter but this is the idea Mouse plus position would give me this vector mouse plus position but I want to say mouse position so that's taking this position vector and put pointing it in the opposite direction this is position so Mouse position is this vector V right here and you can see that matches up with that so this is how it works so if I want a vector that points from one position to another position in 2d space from point A to point B I just say B a well and this camera has now gone off let's put that into this example here right hold on so this example is drawing random vectors that emanate from the center let's try that that that math operation so I'm going to get actually get rid of all fifths and I'm going to say position equals create vector the Center 200 200 Mouse equals create vector mouse X Mouse y and then V is and to do this subtraction to do this subtraction mouth position and stored in a new vector I need a static function that's what the previous video is about so I could say p5 vector dot subtract Mouse position and actually let me put the translate back because I want to draw everything relative to the center and we should see now oh look at that I still have the funny background thing which I'll keep so no matter where I move the mouse I now have a vector that points from the center to where the mouse is now ultimately this looks like this visualization could be accomplished very simply line 200 200 Club of Mouse X Mouse Y but what I'm driving at here is what I'm working with vectors allows me to do a variety of operations that I wouldn't be able to do now certainly this visualization could have been created just by calling the line function and saying line 0 200 200 mouse X bounce Y but the reason why I'm doing it this way through vector subtraction is to show you about the normalized function and what kind of power that unlocks so let's say I have a variety of vectors all with arbitrary magnitudes and directions these are my vectors that I'm drawing up here five of them the process of normalization means take any given vector and maintain its direction the process of normalization means take any given vector maintain its direction and make a unit vector of length one pointing in that same direction so if I had a vector that was sure than one so if I had a vector of length shorter than one I would increase that length to one if I had a vector of length greater than one I would decrease it down to one shrink it down to one I should have made a really tiny one and like these vectors on the drew oh wait the camera went off what's going on ah why are these cameras overheating it's not the coating train if the cameras don't turn off it's not the coating train if there's one thing in life I know to be true it's that the cameras on the coating train always turn no it's kind of amazing all right I think that it's time to break out the Voronoi fan it's not a Voronoi [ __ ] it's a Vornado I'm going to turn this fan on point it at this camera the only thing I know when the cameras go I didn't bother to see clearly okay everybody where was I no idea where I was I know that I want to draw a bunch of vectors Oh continuity it's a thing let's say that I have a collection of vectors let me draw five of them all random directions all varying lengths those are my five vectors the process of normalization which is executed with the normalized function in p5.js is to take any vector of any length in any direction and make it into a unit vector a unit vector is one where the magnitude the length is one so let's just establish that this is approximately length one in terms of this arbitrary two dimensional space I'm working with so this vector normalized would be this vector this vector normalized would be this vector this vector always less than one so normalizing it would actually be to grow it would be this vector this vector would be this vector and this vector would be this vector now of course I haven't drawn these exactly right but this is the idea all of these are normalized versions of these and the reason why the term normalized is use is create some standardization normal normalization no no no it doesn't make any sense and you could think of the term normalized as making all these vectors into a normal vector normal being a well a normal vector is length 1 otherwise it's some wacky crazy and saying vector with a much longer length it's some it's basically having a standard by the way in vector notation a vector is typically written like vector V with an arrow on top the unit vector is often written as vector V with the hat or carrot on top so this would be a unit vector V or any given vector V so if I come back to this example here one of the things we could look at is I could say V dot normalize what does that do well it makes the vector length one so I could just keep zooming in to this I'm drawing something of pixel length 100 nothing left do I want to go back to here alright actually let me return back over here so how does the math for normalized work luckily for us we could just call normalize in p5 but this is a moment for us to take a little time to look at the math for that well before we can look at the math or normalize we actually should look for the math at another function called mag and mag is a function that returns the magnitude of a vector so it returns the scalar length of any given vector that magnitude itself so one thing that I could do here that could be interesting is let's draw the background again in draw and oh let's sorry so one thing that I could do here that could demonstrate this is let me take the background and draw it in draw run this again oh and I guess I will make this much brighter all right so now I've just got this line pointing to the mouse and I'm going to ask for the magnitude so that the Mac that is now getting the magnitude of that and I actually let's just console.log it so you can see this console.log down here is giving me the magnitude of the vector itself as I move the mouse closer to the center and you can see it's always a positive number because it's the length of it no matter what direction it's pointing in I could try something interesting like I could say oh let's make the background color associated with the magnitude so now you can see like the closer the mouse gets to the center the brighter the bet the brighter the background is sort of an interesting interaction that you could play with and the reason why this magnitude value is so important is it plays a fundamental role in how a vector is normalized so let's say I take this vector and this is the magnitude M and this is the X component and the y component well another way I could draw this diagram is like this a right triangle with a B and C and if you've ever seen this kind of diagram in a geometry class or some other air and if you've ever seen this kind of diagram in a geometry context you might have seen it paired with something called the Pythagorean theorem the Pythagorean theorem states that a squared plus B squared equals C squared or C equals the square root of a squared plus B squared and in fact that is exactly how the magnitude is calculated so when magnitude the mag function is called on v2 on a vector V mag it takes the square root of the X component squared plus the Y component squared and that gives you that magnitude oops I'm looking for oh yeah well that's like you know there's some weird stuff going on with this mag squared thing I was going to show the p5 source code but yeah but look I guess I won't show that right now let's so I'll pull this up when I get to normalise let's see what normalize so now now that I understand how magnitude is calculated I'm ready to look at how normalization works and once again I'll use the fact that a 3 4 5 triangle is a nice let's use the 3 4 5 triangle as our starting point so let's say have a vector its components are 4 & 3 we know that the magnitude now equals the square root of 4 squared plus 3 squared which is 16 plus 9 which is 25 the square root of which is 5 so the magnitude is 5 you can see how this math for calculating the magnitude now works out if I wanted to normalize this vector that means I want to shrink this length which is 5 down to 1 so it turns out that all if I'm scaling the magnitude this if I'm scaling a vector by its length I can just so that's 5 divided by 5 is 1 I can also just take the components and scale them divide them by the magnitude itself as well so this actually becomes 3/5 and 4/5 well sorry so it turns out if I'm taking a vector and normalizing its length down to one or or up to one five divided by five is one I can actually just take the components the x and y components and divide by the magnitude so this length right here is actually threefifths and this length right here is actually four ffice and that's how you normalize a vector by dividing it by its magnitude Oh so the coding garden raid going on welcome coding garden what makes me so happy about this is that means that people were watching the coding garden not this nonsense so welcome I'm sure whatever was going on there was was really well organized and thought out and just full of like incredible educational material and fun as opposed to my complete nonsense all right so removing this background a little digression I can now actually normalize V by saying V dot divide div for divide a vector by its magnitude so if I do that oh wait a second well there is you can see no matter where I put the mouse I have this next vector of length one but maybe what I should do is then scale it up by something like 50 multiplying it and look at this so now look at this no matter where the mouse is I am done this process of take the vector that points all the way let me use the whiteboard so now I have this multistep process to make a vector that points at a given direction with a fixed length I have a vector it's of some arbitrary length let's say the magnitude is 100 I calculate that magnitude I divide it by that magnitude to normalize it now I have that same vector with the magnitude is 1 so of length 1 a unit vector and then I multiply it by some arbitrary amount like 50 and I get this vector so no matter what happens this it one would try that again I didn't understand what I was doing I think I do now so it's a multistep process I have some some vector that I've calculated call it V and the first thing I do is I call vMac which gives me the magnitude maybe it's 100 so the length is 100 then what I want to do is normalize the vector I want the vector to be that same vector but of length 1 so I can say V dot divided by that magnitude or 100 that takes this vector and shrinks it down to here then I want to scale it up by some amount like 50 and that will then scale it back up to a higher length of 50 so this is my multistep process with but this is with all of this math and in fact instead of calculating the magnitude and dividing by the magnitude I can just instead call it's such a common operation I could just instead call V dot normalize so V dot normalized is the act of taking any vector and shrinking it to length 1 I did a terrible job of drawing these in the same direction but hopefully you get the idea so now I can simplify this by commenting these out and just changing this to V dot normalize and we've got the same exact result but guess what VDOT normalised VDOT multiply times 50 is also such a common operation like I want this vector in this direction but I just want it to be this magnitude that in fact I can even take these and just call V dot set mag 50 so this function V dot set the magnitude of a vector is the process of normalizing it down to length 1 and then scaling it to a particular magnitude you know in this case arbitrarily 50 and the process of normalizing is calculating the magnitude and dividing by that magnitude and we should see this is the same result incidentally it's worth pointing out that I can actually go and confirm this by looking in the p5 source code itself so this is the source code for the p5 vector object itself and there's a normalized function which what does it do it calculates the magnitude and as long as the magnitude isn't 0 right because you can't divide by 0 then it multiplies by 1 divided by length which is the same as dividing by length so that is the normalized function I could even look at the set magnitude function and see that it's au normalize the vector and then multiply it by some quantity N and in fact you can see here that's something that I'm not doing is chaining so a lot of these math operations on vectors can be chained meaning I can say normalize multiply dot normalized dot multiply whoops so and by that I mean these two operations vo Malloy's V multiplied could be written as V dot normalize dot multiplied 50 so once again we now see there are so many different ways to do the same exact thing but hopefully this is giving you a better picture of what vector math operations do how they work and how you might choose between static functions versus instance functions and how you might manipulate vectors by using these mathematical operations and so I think we're finally ready to move on to the penultimate no it's not the penultimate it feels a bit so I think this truly is the penultimate video in the chapter on vectors because we're now ready to take this idea of calculating a vector that points to the mouse and apply it as an acceleration to an object and see what happens okay so that's coming in the next video see you there oh my god it's almost 1 o'clock I gotta finish this off though ok all right tech tutorials asks who is coding garden ah if you don't know about the coding garden wonderful then you have you have a whole life ahead of you of discovering something totally awesome Cody Gard is another YouTube channel run by CJ CJ and I are actually planning a collaboration we're about discord bots I think coming up maybe you maybe Wednesday February 26 we'll see he has to be confirmed and it's got great CJ has a lot of really nice complimentary videos that deal with much more like full stack web development so and thank you K week bond for posting a link to it okay Oh alright alright folks home stretch home stretch home stretch it's a lot of work to make these video tutorials but some point I felt like this was just like a hobby or an easy like thing and it's become like much more of a source of I don't want to say stress but like it's this it's work its work in a good way in a good way that's a good thing to also just try to balance everything I don't know thank you all for being very supportive and kind and a lot of people support this channel in so many different kinds of ways and I really appreciate it okay alright Wow there was a lot of people watching coding garden because viewership is up hello I think I think we need a moment there's a really interesting conversation going on in the chat about divide by zero afraid to play that eightyfour thousand two hundred thirteen eighty three thousand and four two hundred and fifty seventythree thousand and eight hundred 28900 77 2934 seventy seven thousand eight hundred sixty two forty nine thousand four hundred eighty nine seventy three thousand five hundred ninety three thirtynine thousand nine hundred and thirtythree it's so nice to be just free to be as weird as you want okay careful what you wish for John gelatos because coming up if I could just get a copy a copy of that original print of random digits then I think I'm gonna definitely need to do like a very long long long video of reading random numbers okay oh it's Ken hailey watching and Ren redhead and dev just names I recognize thank you for tuning in very birth okay this is it we're moving on let me just check my phone here no emergency messages could really use some more water but I think I can make it through all right we have arrived we have reached the end we who's we I don't know who he is it's me I'm just me here nobody else just me we we're all together but you're just like people on the internet that I can't see it's weird to say we I'm very obsessed with what pronouns are the right pronouns to use and I don't mean I mean first of all using people's preferred pronouns it's a very important meaningful thing and that's not what I'm talking about here what I'm talking about is whether I should say we is a weird thing when you're doing a tutorial the main camera is autofocusing yeah I know hopefully that's not so distracting and horrible but I now have decided that autofocus is a better solution for than the manual focus because it's better overall but is that like causing like such a major problem I don't think it's doing it that often just when I move around a lot but that is sort of an interesting gift okay hi MIT student Matthias you should definitely be working I hope you don't have class today there's no NYU class today oh boy everybody left all right we have now reached what I think cuz you know I could change my mind maybe different moment is the final forces and all that acceleration stuff okay I think what I need to do is now take my Voronoi fan and point it over here I'm just think if I can get the MIT student to start studying again come on MIT student go and study don't this is Tara this is this melting your brain kids don't watch the tube it's here okay here we are I think this really is the last video in chapter 1 on vectors I'm going to add one more detail to this example of the random Walker which is no longer called a walker I'm now calling it a mover and if where I last left off with this example is every time I click the mouse the mover picks a new random velocity that can be seen here in the constructor P v dot vector dot random 2d now you know that's a static function because I made a whole video about that and then that velocity every frame is added to the position and the mover is drawn as an ellipse at that position so I want to add one more concept to this video and that is the concept of acceleration acceleration oops sorry acceleration is the coop acceleration will act as the building block for all of the examples I'm going to show you in Chapter two because of Newton's second law force equals mass times acceleration so acceleration plays a key role in any kind of physics engine or physics simulation but right now we're not going to worry about the sort of physics aspect of this and just add the idea of acceleration so if position changes according to a velocity vector the velocity changes according to acceleration how do I draw this our mover object currently has a position and a velocity and we've established that the position is a vector to describes relative to the origin where that that where that object is in twodimensional space then the velocity vector is a vector that describes where it should be I'm add one thing that really throws me off is I'm mirrored over here when I look at this and then over here I have like these different monitors that are showing me what I'm recording and they it's throwing me off right now the velocity describes the velocity is just the velocity describes how the position changes over time so on a framebyframe animation a the position is here then the velocity is added to the position and its new position is here and if it's velocity to remains constant it would keep just moving like this as velocity where we applied applied apply however acceleration is can be described as the rib however acceleration can be described as the change in velocity over time so if this object this mover were to accelerate maybe you in the sort of typical way you might think about that acceleration is it's getting faster so we could imagine it that way right first its velocity is this then its like this then it's like this so it's accelerating and moving large or larger steps each frame but acceleration just means the change in velocity and remember velocity is a vector so that could mean it's changing its direction or its magnitude could be slowing down that's an acceleration speeding up turning all of those combined together that's an acceleration is just another vector and it goes into our what I'm calling the motion 101 Albert and that motion 101 algorithm is has and that motion 101 algorithm can be found in the update function I'm stepping and that motion 101 algorithm can be found right here in the update function add the velocity to the position this stopped position not add velocity and right before that this dot velocity add this acceleration so now there we go well why isn't it accelerating it's not accelerating it's not changing its magnitude or direction because the acceleration is zero so let's give it something let's give it a random vector whoo so now you can see that it's kind of speeding up now its acceleration here is constant so even though it gets an arbitrary velocity mmm now the acceleration here is constant and it's almost as if there's this like big fan right in the center that's just pointing in a direction and sort of blows the mover off in a direction you can see that it's turns ever so slightly this is most likely because whatever velocity it picks is not the same directions as acceleration to demonstrate what's happening here a bit more clearly I might do something like set the magnitude of the acceleration to something much smaller so I'm still picking a random unit vector in some direction but then setting the magnitude to point zero point zero point zero one and you can see now it's kind of turning around and I and I could also go back just putting the background and set up that might help us sort of see the path that it's taking and we got the here we got a kind of an acceleration in a different direction from the initial velocity I could also I could also reset the acceleration to something random every time an update let me take this and put it here take this off run it again and now you can see whoa it's just kind of this is almost like the random walk again now the acceleration is accumulative and it's picking it randomly so if it starts to pick it randomly in the same direction and with a high magnitude a few times oh no it's the magnitudes phone so this is something kind of resembling the original random walk but if you have to hit let's see what do I want to say here so this is something kind of resembling that original random walk but the acceleration is cumulative it's accumulating into the velocity so if it's picking it in the same direction randomly a few times in a row it's gonna build up enough sort of speed and sort of fly off in that direction I could by the way so I want to mention this now hmm kind of now there is another useful vector function that I haven't mentioned to you that's kind of similar to the normalize function that I could use here and it's the limit function what limit does what limit does because what limit does is take any vector and cap its magnitude at a certain amount so if I say limit v and this vector has a magnitude of 15 but we'll take that vector and shrink it down set its magnitude to 5 the difference between limit and say set magnitude are normalized is if it's less than 5 it's not going to raise it up to 5 it's going to leave it at say 2 okay am i back I'm not sure what just happened there when did that happen I think just when I came over here yeah I'm just gonna go back okay not sure where that was a limit so back in the code what I can say is uh any after I apply the acceleration let's make sure the velocity doesn't get too large and I can say limit I don't know I'll just gonna say limit it to two so it's a pretty strict limit there and then if I run the sketch what this this is now really looking much more like that random walk before but I am using the concepts of acceleration and velocity and so now this would allow me to do a lot more stuff with the random walk and that's going to come as I get to more stuff and more and more of these examples in Chapter two but ultimately what I want to show you here is what happens when I calculate a very specific acceleration like one that points towards the mouse location still I might say like you could pause the video here and try all sorts of other algorithms for calculating acceleration what if you used Perlin noise for the acceleration or what if you had the acceleration based on some vector that's based on some some other type of data that's coming into your system but for this particular example I can return to everything that I did in the previous video which is I have the position I have the mouse and now I just want to do that same exact math operation mouse position set the magnitude to something fixed and apply that as the acceleration let's see what happens Oh No Oh create a vector at the mouse location shoot me uh give myself some more space here oops it's the redo and start by creating a vector at the mouse location and I'm going to set the acceleration to the the result of subtracting the mouse this object's position then I'm going to set the magnitude of that to 0.1 and I'm picking that arbitrarily now I have a threestep process calculate the acceleration apply the acceleration to the velocity limit the velocity then apply the velocity to the position let's take out the limit just for right now maybe we don't need it the result is something like an elliptical orbit because the object is be accelerating towards the mouse amazingly we get this result that's something like an elliptical orbit you would think the object would just be going straight towards the mouse why is that so if this is the mouse right here and this is the object and it's going in this direction basically I'm taking this and applying it as the acceleration so if I take this acceleration vector and apply it to the velocity velocity plus acceleration equals the new velocity which is this and then add so that it's over here then this is the vector I add to it so we take this velocity at acceleration and now this is the new velocity see how I'm ending up in this path now depending on the relative strength of the acceleration then I might be sucked into like where I'm it would be these what I'm being attracted to much more quickly or I might spiral around it and we can experiment with that as a variable so for example what if I said instead of point one set magnitude to five well you can see now it's really going out of control so maybe this is where I want to limit the velocity and you can see now I've done that it can't move very fast but it's going to really that acceleration is super strong it's going to like move right to it and in fact it's actually going to stop at it because it's you know if you gets past it's gonna tell it to slow down and go back in the other direction and maybe I want to limit this and set this here you know there's so many different ways I don't know what I'm trying to do here but you can see I can get very different kinds of qualities of how this object follows the mouse based on this model by playing with what the velocities limit is and what the strength of the acceleration is as well now how I play with these parameters and how I set the acceleration and how I have multiple factors in an object world that could affect its acceleration what if it's attracted to the mouse but there's also a force from the edge keeping it within the room now how I play with these values how I calculate the acceleration how I think of this object in a world where multiple factors can affect its acceleration maybe it's attracted to the mouse but it also there's like a wind force kind of blowing it across the window there's so many other ways that I might experiment with this way everyone is discussing auto safety yeah now how I actually calculate the acceleration and how I think about this particular mover object in a world that a lot of different things could affect its acceleration that's really where I'm going and that's really the model of forces so there's really this idea of a force right there's this force that's pulling the object towards the mouse but what if there were other forces what if there's forces that are coming from the walls of the canvas so to speak the edges what if there was just like this wind force or gravity or other types of things friction force so this is where I'm going in Chapter two I am going to calculate a variety of different force vectors and put them all into the objects acceleration but right now I think you have something you could really play with as an exercise how could you now you have something you could really play with as an exercise can you create a world can you create a simulation with an object moving around the canvas that all of its motion emanates from its acceleration what are other ways you could calculate the acceleration to create some type of dynamic motion I'm [ __ ] and so this really wraps up this and so this really wraps up this section on vectors I'm sure I missed a zillion things I can't talk anymore I'm so done and so this wraps up this section on vectors I'm sure I missed so many things about vectors and there's many more math upper up math operations with vectors and other things to think about and consider and hopefully I'll continue to touch on those as I go on and on to more and more examples if you make something share it with me at the coding trade calm in the comments here if you have questions you can also ask them to join the discord to ask your questions there and I will be back in section two to talk about Newton's laws of motion and forces all right Thank You Danielle for your encouraging words all right I think that I'm done for today I'm gonna it's saved so nobody freaks out this is kind of fun and yeah let's talk about schedule for a second so ideally I would like to I really I'm only through chapter one right now oops not the coding train comm so so here's where we are I am through now chapter one I didn't really make the videos for the introduction but I have enough stuff that I've previously made which is basically that topic that I will I know I didn't do anything for Valentine's Day sorry Carson that that I think I've got the playlist set for introduction in vectors so I would like to buy I may be through all of this stuff it's gonna take me longer I think but so I'm gonna be here once a week I'm gonna try to do Thursday's sometimes in the morning sometimes in the afternoon I'm really gonna try to move to Thursdays as my live stream day so stay tuned for a date this Thursday this week I have to look at my calendar which I can look over here I can actually tell you whether it's gonna be morning and afternoon right now people want to know I'm gonna look at this other computer which has my calendar on it and I need to switch Google accounts today is the 17th Oh Oh morning Thursday morning so this third I'm putting this in my calendar well I'll do that later so and then the 27th will be in the afternoon so I am going to attempt now starting this week ah I'm like trying to switch screens here to livestreaming every Thursday I don't not a regular time every Thursday but basically either 930 or like 130 those would be the two times 930 or 130 Eastern with some wiggle room there once per week if I'm being honest here I am probably only gonna get three live streams per month is it is it even March yet no it's February so I'll have one next week I don't know how many I ended up getting in February is it a leap year somebody tell me so and then hopefully once I get to June June is busting out all over I will have a very free month in June and whatever I don't get to you know keep me honest about this remind me about this I'm saying it now to try to put this out there in the universe I'm gonna just do a lot of extra live streams in June to get through everything that I don't get through the tricky thing is here by going through this I'm leaving other things undone I haven't made a coding challenge video since I can remember I really want to make more of these coding in the Cabana videos get that hilbert curve one but I got to do another one how to spin the wheel for the next coating of the Cabana topic so many things I'm struggling to find the time for everything but I am doing my best so that's what I've got going right now feedback and comments and everything is always welcome it is indeed a leap year says K week mon whoa volume is so loud I will take a few questions before I go it is a leap year press Z and X that means I'm not this one say I'm advertising this which I'm not by the way let me mention this I haven't put out a call for this or anything although I may but I guess unofficially without like I haven't really thought this through yet exactly what I'm looking for if you are someone who is interested in doing like a freelance job and your skills are node and CSS which is a weird set of skills I am looking for your help because I am looking for help with the build engine of the nature of code book Joey Lee has been doing a lot of work and help on this with me and you'll you'll see his name pop up quite a bit in the repo and all the issues but basically I I want to keep the book updating going along with doing the videos and there's a lot of open issues and there's a lot of bugs with the PDF rendering generation of the book itself so if that's something you're interested in I don't know I don't know join the discord and maybe I can have a way of people getting in touch to express their interest in there but I'm actually even alcohol books boxes so I know there's a lot of people already in the community who volunteer and do a lot of work Kotick train stuff and I appreciate that I'm always conflicted about how to manage sort of goodwill and spirit of collaborative open source as well as valuing people's work and paying people for a work and I'm always struggling with that balance but I believe this to me is a job that I particularly just need specific help with so I think it makes sense to for this to be paid work also it the book is not something that I'm getting rich off of but I do when when I have the new edition out it will be sold so there is some income that's generated from it so I do I can try to fit that in Florida Florida is asking which is the discord so the discord huh yeah no so Kay let me cover the bill let me mention this latex thing so first of all the discord is pls somebody post it into the chat there is a I think I can open it up here let me open up the discord because I have a separate account that I created just want to turn it on to safe mode or whatever how do I do that again where I go to settings in streamer mode enable streamer mode okay I'll just look at these and go here and go to schedule all right so if you haven't seen the discord this is what the discord looks like there's a channel where I post updates about when I'm going to livestream so you know I know that I don't do a good job of having a regular schedule but if you want updates about that you can join the discord if you join the discord just to mention you will need to read the full all aboard code of conduct and reply with an emoji before you have posting permissions but there's various channels and it's a place where you can also get help on a variety of topics and that sort of stuff so if you're not in the discord but you're part of this community please join the discord and AH K week do you need latex help so um this was a discussion currently the PDF generation of the nature of codebook is done with something called prick prints XML and prints XML converts us exactly this converts HTML to PDF so I'm not opposed to a different engine to do this same exact task but I want I do not want to write the book in latex I'm writing the book in HTML this way I can I have a build process that can easily generate the website as well as the PDF book itself and it's one HTML document that generates both and so I if there is a way to have latex be part of this equation I'm not opposed to that but at the moment this is the best solution I think and also this is using I mentioned this constantly but the engine that is also doing this is is this gonna come up no magic book project I think yes it's using this this project called the magic book is kind of the node app that runs prints XML and does other sort of build stuff to build a website as well I know that a lot of new out of modern publishing web friendly HTML CSS friendly publishing frameworks and applications and websites have come out so maybe this is something I should revisit but at the moment this is what I am doing okay let's see if there's any other questions Philip asks what's the difference between the old and new book um quickly JavaScript instead of processing and then bug fixes little minor updates to make the examples a little more clear based on feedback and then hopefully a major rewrite of the neural network chapter and a new chapter on neural evolution those are the sort of key changes joy fav'rite i am new in programming what would be your best advice to get me to learn fast so first I might say don't worry about learning fast take your time learning fast it's like hard to learn fast programming is hard it's it's a you know I've been doing this for a lot of years and it takes a really long time so you can be frustrating it can make you feel unhappy by like having this expectation that you're gonna learn it fast that said finding a community that you can learn with I whether it's an online community or a real life in meetup community that to me I always think is really really helpful and I can recommend communities like you know communities in art spaces like in New York school for product computation is a wonderful place it's not like a learn to code place specifically but that's one that I would really recommend there places like the recurse Center in New York a lot of them have special kinds of scholarship programs that you can apply for but yes so that's that's what what we know in your local community is there a group that is meeting on a regular basis where people are learning together that's that I think is a really wonderful thing you can do plus I don't know I have some YouTube videos maybe they help you know I don't want to give that the print version will be out when it comes out my goal was at the end of 2018 how well am i doing on that call then it was the end of 2019 so I could say into 2020 we'll see Thank You Zack bear for your nice comment about how the videos inspire you I have been asked you like Python do you recommend it yes I like Python yes I recommend it hello to Bosnia interference on the mic was it happening a lot this whole time somebody didn't mention it I thought it wasn't a big deal because I didn't see it a lot do you ever try to VR headset I have tried to be our headset my eyesight is terrible and we got a viewer from India Aloha to India and Brazil people are now saying where they're from by the way my favorite thing about the discord is the pets Channel this is like the greatest thing ever and this by the way boggle no but I don't think boggle got adopted yet so I am currently now fostering my family's fostering these puppies that were rescued from Kentucky a stray stray was rescued also but the mother has already been adopted there four of them left they'll be at the contact muddy paws search for muddy paws on the internet if you're interested in your New York area and would like to adopt a puppy all right everybody I will see you Thursday Thursday I'll be back on Thursday Thursday see you Thursday I always forget this I'm gonna do this this dot this dot this dot this dot song never forget the Vista miss somebody I'm gonna say once again coordinates coordinates and autotune and the internet will fix that so this is random this is noise Perley noise that is in the core random algorithm the actual random algorithm itself those numbers aren't related at all you pick like I'm picking random numbers between zero and ten nine two seven six one nine four eight nine two one three I pick 9/11 family but with curly noise I might pick numbers like this two three four three four five six five four five six seven five six seven five six seven eight nine eight seven six this is like Perlin noise performance apart for eighty nine two one three five one two three four three four five six five he was like gurgling noise performance apart with curly noise I might pick numbers like this three four three four five by purling noise that is totally noise so this is Hurley noise that is Hurley no this is this is Hurley noise that it's Hurley no so this is Hurley noise that is her Perlin noise so this is Hurley but with pearly noise I might pick numbers like this this is like Perlin noise performance part unicorns and rainbows and cupcakes what else is there yes kids thank you very much kittens and rainbows and cupcakes notice that look what I get I really lose my mind I feel just sort of like a nice feeling of relaxation everything's gonna be okay today dream is not broken it has not frozen this isn't this is a wonderful thing okay we're gonna do it I'm really getting to something I need my sound I forgot all sorts of text generation analysis states that I will use continuously over and over again