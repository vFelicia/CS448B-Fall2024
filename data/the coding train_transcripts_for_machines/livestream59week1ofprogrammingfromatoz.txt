hello I am here live good morning um there's some music playing in the background I have a microphone hooked up please let me know in the chat if you can hear me okay if the balance between the music and the audio is okay um had I had a lot of technical difficulties this morning getting set up but I am here live now and excited to see all of you although I can't see any of you but I can see a bunch of names here in the uh chat um so couple things to mention uh before I get into sort of introductions and talk about what it is I'm going to do in today's live stream number one is a a light burnt out so I normally have these two bright lights that are beaming down on me so that you can in the audience see me but one of them for some reason is not working I think you can see me probably okay and if I go to this other camera over here I hope that you can see me and still hear me over here but if um if things don't look as perfect today it's one of the lights it's missing so I'll have to investigate that um uh and I've uh H last time I did a live stream my sort of test fall live stream um I had a bunch of technical difficulties where the stream would freeze and I had to restart the computer and I did some things upgraded some stuff I hope that that's not going to be a problem but obviously we'll keep an eye on that together so welcome this is uh cing rainbow a live episode number something but in a way this is the first episode for fall 2006 and I am start 2006 6 oh my god oh boy 2006 was a nice year I remember that uh it's 2016 in case you were wondering uh I I haven't I'm I'm I'm a little out of sorts uh as you can tell as I always am I'm rushing down here to get to the school for poetic computation which is uh uh artist Collective and School here in the West Village of New York City where I have a recording a broadcasting studio um and uh this being uh episode one of this fall season so what I'm going to do this fall and um is I am going to use this coding rainbow live stream to cover a course uh that I am teaching oh I am just so not prepared I'm going to go here so if you go to uh shiffman domnet A2Z you will find a website uh with uh a page page um which documents the material that I'm going to be covering this fall uh and here you can see the first uh there are some notes Here for this first SE session entitled introduction p5js JavaScript and strings so um what this uh so what I got a bunch of things to get out of the way here so there's so much to do to introduce but I just want to I just want to get I just want to get into the material and uh all that sort of stuff I have a new sound system which none of you are probably interested in but I could pretend that I'm except that I'm I'm not actually swearing all the time uh and I can pretend that I um that I did something really really exciting all right this is kind of useless um anyway so my name is Dan schiffman this is a live stream that I do once per week it looks like for the next few weeks the time and place will be Wednesday morning around 10 or 1030 a.m. eastern time the time that it is right now um uh at some point in October I'm probably going to move to a Tuesday afternoon time um but I'll keep you posted about that YouTube has this brand new feature which allows me to set the time and I know that a lot of you in the chat were complaining because I set the time for 10 a.m. and then I got here and I wasn't ready and then I set it for 1015 and then I think I set it for like 1020 so I will try not to do that too much in the future but um but um yeah so uh Chris in the chat is asking for the this do song I didn't get it loaded onto this soundboard thing that I have so I will I will have to do that at some point maybe I can take a short break and and load it on there so I will get the this do song back um okay so um I teach fulltime at a program called ITP it. n.edu I had the first session of a class called programming from A to Z yesterday um it went pretty well went better than this is going so far far um and uh what I'm going to do each week is teach my physical inperson class and then do the same class here in a live stream and so today will really be introductions and uh I think I posted to uh Twitter if I go to my Twitter uh I've retweeted a bunch of things yada yada yada uh isn't there an image with this one no wait where where did I post that hold on ah I can't find it uh I have a um hold on I have an idea everyone bear with me for a second oh I think I posted it to the slack channel so many things uh I am pulling up an image which has uh my list of notes which I want to make sure I have and let's see if uh magical air drop will work oh I don't have Bluetooth probably on in this computer I'm just going to Tweet it uh that'll work Live Now YouTube dot this is great this is riveting for you slash shiffman slash live okay I'm tweeting that image so um now I can pull it up here and possibly download it let's see if we find it there we go okay so uh let me save this image uh overview and just put it on my desktop uh and I can go away from here oh seriously okay so this is a little bit of a reference here for me so this is kind of my this is my plan for today this is on the Whiteboard from my physical class uh uh yesterday and so a couple things that I'm going to do one is I want to talk about the overall goals and um of the course that I'm going to teach each week this fall I want to talk a little bit about uh uh some of that will involve client side versus service side I want to talk about whether I'm using libraries or not using libraries um uh some of the topics that I want to cover specifically related to JavaScript um and then I want to make a few video tutorials about uh Dom manipulation mostly I'm going to point you to some existing video tutorials and then when one doesn't exist I will make a new one uh I am going to I want to talk about the basics of how strings work in JavaScript um and then I want to look at text input and the coding challenge for today which I will do a a little later before I'm going to be here for my plan is to be here for about two and a half or three hours if I can survive is to um uh is to create something called a dastic so I'm going to uh I'm going to introduce you to someone if you're not familiar with uh Jackson mllo who is an American poet and performance artist uh born in uh 1922 I'm just reading the Wikipedia page for you um Ma low pioneered a lot of computational methods in poetry without the use of a computer and one of these methods is called was it was known as a dastic and what I want to look at is Jackson mcl's dastic system for generating poetry out of a found text uh which he did manually and I'm going to create a JavaScript web page which will generate the Poetry for you so uh this is kind of like I'm taking a left turn or a right turn or some sort of turn in that this semester a lot of what I'm going to be be talking about is how to work with text text analysis uh text generation poetry generation sentiment analysis anything that has to do with reading text as input to a program and generating text as output to a program so um so and uh something that so so okay so this is the other thing that I'm trying to figure out I think that I'm going to have a new playlist in my YouTube channel which will be the which is going to be known from here on out as the programming from A to Z playlist and I think what I'm going to do right now is start my first video tutorial of the day uh which uh what I'll do is use this as a like 10minute introduction to uh where the the origins of the ideas for this course came from and what the goals of the course are so this is going to be something that people will later watch maybe if they choose to tune into to my channel um as an INT introductory video to the course um and then I in that video I'll probably mention the um uh patreon thing that I'm doing where you can uh if you want to turn in assignments and have discussion there's a you can subscribe for a slack Channel okay uh I don't want to over promote that sort of thing um ozal 86 in the chat asks uh why only 720p um I was just sort of worried about bandwidth and latency so I'm live streaming at 720p it seemed like the quality is good enough um it's a pretty good internet connection here it's a Verizon FiOS connection It's seems to be working pretty well but if um people want to I could do a test at 1080p if that makes a difference uh yes so uh uh t00 bed uh mentions just like Burrow's cups so uh William Burrow's cutup method is another text mashup method that I want to reference also something known as eraser if you change your mind I'm the first in line if I sing the song is that like a copyright violation um yeah so uh no asked oh you're actually reading the chat so I am reading the chat but you I can't really guarantee I'm not following it and I I wouldn't um you know ask questions in there have a discussion I'll kind of peek at it from time to time and when I'm sort of in video tutorial recording mode um that's when I I I generally don't look at the chat too much and and everyone's going to tell me that the camera's shut off I know that it's shut off this happens every half an an hour half an hour it's a problem that I have not been able to fix even though I've been doing this for over a year uh if I could get if I if could you know my crowdfunding and YouTube advertising takes off I'll buy some new cameras that won't have this problem um um and uh what was I going to say ah so in case you're not aware if this is your first time joining in I I do something that's a little bit unfortunate and causes some confusion which is that I do this live stream and the live stream exists as an archive but I also then reupload separate edited chunks of videos from this live stream that um at math blanks on Twitter I think I got that right somebody the chat post mata's Twitter handle if if if uh um helps me with editing so sometimes you'll see a new video gets posted which is just what you've seen before but this is for people who find it later and just want to like watch the important chunks in a playlist and so uh I don't I I can't I don't have a better way of doing it as of yet but I'm open to suggestions okay so um let's see what else do I have here so I I think this is going to be good I'm ready I don't have actually you know I did a terrible job I made this soundboard and I didn't put any of my music on it I have this which is the background instrumental music getting warmed up here for um the coding Rainbow theme song which will be possibly probably coming out this week I will release it on Soundcloud there will also be a little music video trailer promotional video for my channel uh a lot of people have helped me with that and the credits of that will be with the video release I also have a lot of green screen footage of myself that I will release that was used for the video that you can all play with if you want last time I didn't do any dancing because somebody complained about my dancing it made me feel very nurotic and then I got over it after four or five days so it's happening again okay um oh that was ABA no eraser did not cover that song I just completely sang the wrong song what's a wellknown eraser song that's really hilarious that I uh eraser Greatest Hits yes yes yes yes a little respect oh L more that's good I love I actually went to an eraser concert if you can believe that I think it was at the The Beacon Theater in New York City probably like 20 years ago okay I'm off topic way off topic okay um let me get to the syllabus here um and I'm going to do my introduction to the class oh they actually did cover it though okay uh okay okay they did they did okay as long as I'm getting my 80s pop music references correct is that even the 80s then then everything's going to be okay by the way this is why I thought my sound effect for when I'm debugging okay never mind you guys don't care okay um all right so here we go I'm going to do a quick uh actually let me um let me oh how's the focus on the Whiteboard it actually looks like it might be a little bit off and I need to erase it eraser see can I play this is my this is what I'm always wondering sometimes I have a desire to play other music and of course now you can't see if the focus is any good if I'm erasing it uh uh let's see uh let me just see if I can fix that a little bit oh this is not going to work maybe I'm going to just check the chat maybe you guys say it's okay focus seems fine okay so I'll just leave it uh yeah ALG c19 asked are you going to cover the rainbow topics in future streams or just the classes so um this is a great question I have this GitHub repository with a ton of requested topics I didn't finish my traveling salesperson genetic algorithm there's more to do with the agario coding challenge I really want to get to more connect videos um you know one thing is that it's uh um so yes um I do intend to revisit those topics throughout this fall for the first few weeks I'm going to be focusing on this course the course has uh uh various weeks where uh there are pres student presentations and final project stuff which is happening in the physical class which means I kind of have a week off from some of the a toz content in which case I'll return to some of those topics and honestly um you know I would love to I enjoy this so much and I would love to have more time to do it but it it takes a lot of time and it uh takes a lot of energy and I have this other it doesn't make very much money and I uh also have this fulltime job at NYU so uh at some point as I grow this thing that I'm doing and find other ways of of getting more time or resources and other guests to be involved I hope to be able to have more and more time for kind of have a course going and other coding challenges going or maybe two courses going at the same time twice a week live by courses I mean twice a week live streams so oh I'm totally in the wrong camera I was just talking and talking and talking oh I really have a I used to be so good at switching the camera I'm going to build I need to build a sensor that just knows where I'm standing sorry sorry everybody I mean I the thing is I often have also thought of of building my own streaming system not relying on you YouTube in which case you could just pick which camera you want to see or stream both of them but someday okay um so here we go um so let me okay let me see here so I want to if I'm going to make a video now to introduce the course and I just want to get a couple links going which I think might be useful um let just see here this is fine I'll leave this open this open uh I want to reference um and uh I'm just pulling up some links of people that I want to make sure I reference who have really been inspirational uh in terms of coming up with the topics for this course uh and sorry everybody I'm almost there uh I think this will do the trick for me okay uh okay uh all right how are we doing on time so far this stream hasn't broken oh I can't see the time anywhere that's fine oh 1040 a.m. that's where I can see the time okay the good news is I'm not rushing off to go anywhere today I going have plenty of other stuff to do uh but um last time I did a live stream I felt a lot of pressure um to get to everything and we'll see how it go I mean I I I there's a ceiling on how much energy I have although I have had this idea of doing some kind of like I was thinking of doing a processing Foundation fundraiser which would be like a ton that just have like a live stream going for 24 hours probably not 24 hours maybe just like 12 hours people coming in and out and like a phone bank where you could call in donate your money um okay here we go I'm really getting started now um if I need to oh this ah sorry I just want to look for my is this really my whiteboard oh wait no I have the other whiteboard markers over here I bought some new ones which I'm hoping will work well let me try this one I have a big problem getting started I have to do a better job at this okay here we go no that's not the women I like this other uh hello oh hold on I'm GNA use this I to try again hello welcome to a first video of a new playlist uh called programming from A to Z and this playlist is going to be will be as I make it a lot of videos that are going to follow this uh ah it's a syllabus um uh course that I'm teaching at uh program called ITP at Tish School of the Arts New York University uh called programming from A to Z and in this video uh uh if you're really just interested in the technical content you can just skip ahead and stop watching this video but in this video I want to just kind of talk about uh where the ideas for this course came from some of my inspiration for putting the material together for this course and what my goals for it are so what and kind of like who what do you need to have in advance before you start watching this sequence and and I will mention that a lot of the videos that I make I intend for them to be kind of Standalone videos that could be mod you know put placed that you could kind of come to on them their own but I'm going to sequence them in a way that I'll give you a little bit of a narrative over the course of this fall it is September something uh 2016 uh that's when this video is being recorded but maybe you are an alien robot of the future watching it and wondering about this strange Earth species um on the internet if the internet still exists anyway okay I um so okay so let me talk a little bit about where this theide where this course came from so I think this was probably at least 10 years ago if not more I was at the uh University of Pennsylvania sitting in on a poetry class you might wonder why was I sitting in on a poetry class that's a story for another day but um someone named Nick monford uh was giving a presentation uh Nick monford is a poet and artist and Professor uh um author uh who has a recent book out actually called exploratory programming I don't see it on his website I have It's a Wonderful book that I've been actually reading as a resource for this course as well and um Nick was giving a presentation to this poetry class about uh computational techniques in a in writing and I mean it was more sophisticated and interesting than that but I'll Loosely say that it was so it was for an audience of people who not necessarily familiar with programming and algorithms uh but our poets and writers and looking at historical examples and new techniques in writing using computational methods and at the time I was kind of a recent ITP graduate I think or current ITP student I don't remember uh and I thought huh this is interesting so much of my time this was early in the days of processing uh so much of my time is spent thinking about programming for motion and animation and I hadn't really considered this idea of programming for text reading a program that reads text in a program that generates text out and so at the time I actually uh decided to work on some materials for a course called programming from A to Z and uh strangely enough um I taught this course in Java which was in many ways a kind of horrifically terrible idea but Java was a programming language that I was learning and familiar with at the time it also is the was is the basis of the uh creative coding environment processing and so I was aligning some stuff between those two environments um and so I taught this course uh and I believe this was like 2006 or s or something like that I could look it up you someone on resourceful on the internet could find the old syllabus for it probably um and so um a lot of the ideas for this course came out of this presentation that I saw from Nick monford now interestingly enough at the time uh Allison Parish was a student ITP I believe she was actually a student in this class uh and when she graduated from ITP um uh I talked with her I don't remember exactly how this about starting a new class at ITP called re and and which she came up with called reading and writing electronic text so Allison parish is a huge inspiration for this course as well if you're not familiar with her work uh with generative text and performance and Twitter Bots and a lot of things you should be familiar with and so Allison teaches a course taught with python called reading and writing electronic text a lot of the materials can be found on her website so Allison really took a lot of the ideas from programming from A to Z and made a much better and more interesting uh course using a much more uh appropriate programming language and environment python to working with text the focus of her course however is is really not about I I would say I mean I I'm I could be wrong about this but just to make the argument for argument sake about uh really focusing on poetry generative text generative poetry about the sort of core out text in text output not necessarily about interactive systems as related to text not about server side programming client side programming things that happen in the browser so what I decided to do um was uh recently after she had started this course at ITP was to revive programming from A to Z and so now the course is once again back and it's all about programming with text uh text in text out but with I would say an appropriate language meaning JavaScript sure a lot of um a lot of uh Innovative and new work with data analysis and text is happening in Python and there are tons of natural language processing libraries and data libraries for processing for python but if you want to make things happen in the web browser where users can enter text receive text back participate in an interactive system uh JavaScript is a language that is useful to make all this stuff happen in the web browser so um so this is really where the ideas for the course uh came from now I am going to just briefly now so so that's kind of a bit of much more longwinded than I had hoped but a bit about where some of the ideas for the course came from now uh I want to talk the next thing I want to talk about is my goals for the course and just so I'm not uh so I'm standing somewhere different with a little visual variety here I have a couple fundamental goals one is uh programming and algorithms and particular programming I'm talking about uh JavaScript here so if you are a beginner JavaScript programmer if you maybe just took a single course in p5js you know a little bit about JavaScript this is a course where you can improve and expand your knowledge I want to talk about things like what's this prototype thing what's the this keyword what's a closure what's an anonymous function all of these kind of aspects to JavaScript programming that you might not find in an introductory creative coding course so I want part of the course to be able to get augment programming skills but I want that thing not just to be for for the sake of you know programming itself but to have a kind of conceptual basis a creative output for you and this is the other aspect of the course so I want you to think you know creative new ways to think about computational am I really writing this down I am really writing this down uh out uh computational output and specifically text based output oh and input right so maybe you've taken a computer science course or some other JavaScript course and the focus is on web development for professional uh work uh for getting a job at a startup or maybe the course is about algorithms so you can figure out the absolute fastest way to sort a list of numbers these are not you know there there are aspects to that those ideas that might be in a course like this but my goal is really for you to discover new and creative ideas and a gener creative projects playful useless experiments from this course because I believe I think I I know that that um you know number one uh making art and playful experiments is an enjoyable way of interfacing with the world and can bring meaning to people's lives but also I think uh practical tools and new discoveries come out of useless uh impractical Explorations so that's kind of a goal for this course to augment skills and uh uh and and and kind of inspire your creativity okay so back to over here I want to briefly run you over what the topics will be as I go over them from week to week um uh uh this week I want I'm just going to kind of introduce ideas for the course uh I am um asking the students of the course to uh use uh GitHub Pages as a way of publishing their work although it's certainly not required I want to look at Dom manipulation in p5js and kind of compare that to other Dom manipulation Frameworks and libraries you might think of I want to do a tutorial about just the string object in JavaScript and then I want to look at how you get text input from a user in the browser via a text box a uh you know uploading a file and I'm going to do a couple coding challenges around making a web page that generates uh kind of found random poetry and I'll talk about an assignment for you guys to do that's what's going to happen today uh regular Expressions I'm so excited this is like my favorite topic ever because I'm like a complete loser not if you love regular Expressions no I am a loser you watching this are clearly not one loser is such a terrible word that I sound like I I hate that word nobody anyway edit this part out where's my uh okay um but uh uh R Expressions is a topic that I love it's an amazing uh uh uh tool puzzle exciting crazy programming language kind of unto itself thing that allows you to manipulate and do wonderful things with text I want to look at how you can get text from data sources different apis I want to look at wordnik I think I've looked at wordnik in other video tutorials but I want to look at it deeper more deeply I want to look at how you can get users to fill out a Google spreadsheet and use that as the input to your program uh um ah server side programming is a priority for me so there's a lot of things that make sense to do with only client side programming and p5js but I want to look at node in particular twitterbots uh fortunately I have a whole set of video tutorials already made about Twitter Bots uh so we'll see what I can add to that for this week um and then I kind of want to run you through the classics so uh my goal at Hope for you is new and creative ideas in text analysis and text generation but I want to look at how some of these kind of classic text generation analysis algorithms work so word counting is kind of the fundamental building block to all text analysis so I want to look at a word counting program uh tfidf which is like a fancy term for figuring out how to glean key key words from a text based on word counting I might look at basian analysis if I can get the courage for basian analysis uh and also there are a lot of uh node packages that'll do a lot of this stuff for you that I'll examine uh text generation I want to build a Markov chain from scratch I'll talk more about what that is but a probability based system for generating text I want to look at grammars ah there's a wonderful thing that I'll just mention if you're not familiar with another work that I find really inspirational tracery by Trac by the way that should not say tracery by tracery somebody pull request fix this it should say by Galaxy Kate uh so Galaxy Kate um Kate Compton on GitHub and Galaxy kate.com is a wonderful artist uh programmer person who has built a story generation library for JavaScript called tracery which I'll examine uh later as a tutorial maybe as I start to figure out ways of getting guests maybe I can invite Kate to appear to talk about tracery uh um where is I back here um and then look at a code for building something called a context free grammar so language the term grammar might be familiar to you programming languages have a grammar right function name followed by parentheses followed by a bunch of arguments separated by commas if you're missing a comma that's a grammatical error a syntax error so rather than looking at language and seeing how it fits into a j grammar if you can design a grammar and generate language from that what kind of results do you get and then also I want to make sure I look at Chrome make some tutorials on Chrome extensions um I'm going to show you uh a uh uh one of my uh favorite uh artists Addie wagen uh uh Addie wagen neck is a wonderful artist uh who makes amazing work that you should become familiar with and she made a Chrome extension uh called uh girls versus git I'm going to just pull this up here and you can see some of the things some of the features that it does uh every username on GitHub is replaced with a generic female username every gravitar is replaced with a gravitar of a woman or a female Type image so this is something that you can do with a Chrome extension you can have control over a user's browser and their browsing experience to uh kind of experiment with Al strange and alternate ways of viewing the universe of the web and experiencing obviously this can be used for productivity tools and you probably have Chrome extensions for things like oh pocket which allows you to save you all your links but how what kind of strange ways can you do if you you know take everybody's uh uh uh every time a you know noun is on a web page and replace it with an a a food item this came from an idea that somebody had in class so you're just reading web pages to make yourself hungry all the time so creative ideas uh working with Chrome extensions is something that I want to pursue so this is kind of the trajectory of the course uh goals for the course trajectory of the course and after this video is done I'm going to make the first few videos for this first week on some of the material now here's a qu here's here's something I will mention to you you people of the internet can simply just find these videos on YouTube you can write in the YouTube comments if you have questions and I I try to answer them when I have time and other people answer them as well uh and I hope you will enjoy and watch them if you want to participate in this course uh in a slightly augmented way um I will point you to patreon.com/crashcourse rainbow.com you can subscribe to my patreon feed which is a crowdfunding system and with that you will get an invitation to a slack Channel where you can ask questions about the course and post your work in assignments and I have a sort of peer group of people discussing and giving you feedback so if you're interested this is an experiment I'm trying I'm teaching the physical class for ITP students at New York University I teaching an online version of this class for free on YouTube it is AD supported there will be ads for these videos I'm mixed feelings about that but I'm doing that that right now for a little bit of Revenue there's expenses associated with making this and time and then I am also experimenting with that crowdfunding platform to allow people a certain additional form of interaction so my kind of philosophy on online education right now is free content paid interaction and uh but mostly I'm doing this because I enjoy it and I enjoy uh discovering a new audience and bringing new ideas and doing weird dancing from time to time and ringing my bell and all sorts of weirdness so um so thanks for watching this introduction I'm sure there are lots of things that I miss saying ah I and I thought of something I wanted to mention two other uh I'm going to link to all of these uh things in the um in the uh description of this video I want to mention two other uh big Inspirations one is uh Lynn churny uh who does a lot of work with data analysis and presentations and another is uh Darius kazami also known as Tiny subversions who is an internet artist prolific creator of incredibly strange and interesting twitterbots uh basically you know I am not I have to admit something I am not really a twitterbot maker I am a person who makes how to make twitterbot tutorials and I but I um and so uh if you're looking for inspiration and ideas and um other types of materials U Darius is great I want to um point out both Lynn churny and Darius kazami have 2016 talks from the uh IO Festival in Minneapolis so I would recommend you find those and all of these are great but uh if I go here to see all I can find uh Darius uh whoops actually okay anyway you can find them I'll link to them in the description but both of those are highly relevant ly chern's talk and Darius kazami's talk from iio as kind of starter material get you thinking about ideas of things you might want to make if you're following along with this course okay thank you for uh watching and uh stay tuned and in the next video video I'll be showing you some other stuff okay thanks byebye okay um hopefully that was fine that was my introduction I don't know how long that was I've been going for about 40 minutes so far so the live stream archive is obviously going to have additional stuff that I don't think of in those videos um I'm going to look at my uh list right now for today um I think that's okay that I missed kind of some of these things okay so I I hit everything so the next piece so here's what I'm going to do I'm going to try an experiment here I think that I'm not so then if I were just teaching a Course and there was no such thing as video in the internet thank you mattio for keeping track of it no no Lin Moy this is not over just that short video snippet is over and I am going to continue and make more video Snippets I'm going to be here for probably another one and a half to two hours um okay I don't know what is going on in the chat now I have to stop looking at it um so um here's the next thing if I were introducing technical topics and things that you need for your homework for this week if you're following this on as of course like you're going to do homework the next thing I would do is say hey let me just talk about GitHub Pages for you um but since I have already made video tutorials about GitHub pages I think I'm just going to slot those into the playlist so um obviously not not obviously I shouldn't say Obviously so let me for those of you watching live let me at least pull that up and mat I think this makes sense uh Mao who helps me with organizing the playlist I'm going to go to YouTube shiffman um and look I'm live right now um and I am going to find you this particular playlist so this is a full playlist about you working with Git and GitHub I I don't think it makes sense to bring this entire playlist into the a toz playlist because um that's way too much but it could be referenced um but I might make sense the next piece would just be to have uh is there not a 1.9 oh no yeah okay maybe these two videos um GitHub Pages the basics of GitHub pages and GitHub Pages for hosting p5js sketches because that's ultimately what I'm going to be doing so that's the next material so you know if you're watching this as an archive you know stop and go and uh you don't have to but you can stop and go and watch these two videos and then come back to this live stream archive uh if you're not watching this as an archive then you're not watching this as an archive but I think these will make sense uh in um um in the playlist so that's good so the next thing that I want to talk about is ah okay Dom manipulation now this is another tricky one so I think maybe I should do I could do a like part two video which is just kind of overview quick overview I think this makes sense of Dom manipulation in the context of this course uh yeah uh o camera went off I'm really I'm really at a loss here so um you know what I think I'm going to air on the side of only making new of not rehashing things that I've already made videos about because there's limited time and I think I can get more benefit from the new content so I'm just going to point out now I'm going to go back to uh my playlist and I'm going to find um uh I'm going to find this playlist so um this is tricky because this is all relevant but I think what I might do is uh yeah so okay so I don't know how to best manage this but I'm just going to keep going if I were actually teaching this as a course online which is what I'm doing I'm going to tell you that the next step that you want to have some familiarity with is what is p5js and uh how does what is HTML what is CSS and how does Dom manipulation uh work uh in p5js and honestly the the place that you could look for this is right here on this uh web page which kind of has an introduction to p5js as a library uh basic what is HTML what is CSS video tutorials as well as some Dom manipulation examples and a link to the Dom manipulation playlist so that's the next aspect of this that I think is important okay um so that's the next thing I don't know what to add to the a toz playlist but I'll figure that out later and now we are getting to something new so I need to make some new video tutorials on loading text the the goal by the way is to make some of these um to do some of these as coding challenges so these are examples that I made a year ago I haven't really looked at them too much so making the coding challenge will be a bit F uh fresh and I want to talk about Rita I want to do something on Rita as well um but I want to do some coding challenges where I create uh poetry machines as single page web applications so what do we need to do those as coding challenges I need to cover how the string object Works in JavaScript um and I need to cover um I need to cover um how to load from a text file okay um so I'm trying to think of which to do first I'm going to do text input okay all right um let me get myself set up here I um so let me make a new I want to do a couple things I want to clone I want to clone and actually I'm going to put this in documents nope I want to clone my a toz F16 repository so I have those examples if I need to reference uh okay uh so um and I'm going to make this shortcut to this here so I can look at the code examples um uh I want to uh then I need to um um by the way I want to start using I think this will do I need to do pseudo I want to start using the node HTTP server instead of the Python server which I think might be uh a little bit easier let's see if this works um so I I maybe it makes sense for me to do a quick video on my workflow that I'm going to use which is um adom and yeah I think I like this better 8080 okay um uh so okay so uh um okay so it might make sense for me to do a quick uh workflow video that exists in this playlist uh but let me just get myself set up here Local Host 8080 how come that didn't work strange huh oh I guess it's like it just uses a different IP then okay um okay that's the web server for these examples and then I need a folder here called uh A2Z and then I'm going to call this week one and I'm going to put that here um I want to get just a blank I'm going to do the ridiculous thing which I'm going to download just to make sure I have the most recent everything I'm going to get it a empty pro p5js project yeah I have been using Code pen and I I I would like to use it more codepen is wonderful um uh I'm going to call this load uh text and uh okay let me close a lot of these windows I can get them back if I need to I'm singing to myself um okay um all right now here's a question for everybody I also now want to I also want to run another server and it's can I specify the port hey that worked I just guessed I can't believe I just well it makes sense so I can specify the port and so I can have uh local oh 127 8080 which is my preexisting examples 8,000 which is oh what did I get wrong here oh that's crazy I didn't do it right I just all I have to do is I didn't guess correctly just write the port no dash 8000 no what did I do wrong P equals okay thank you no how about just Dash p nope there we go that's what I want and now that's working whoa what is this craziness I have something still running so actually sorry everybody all right all right I'm not going to worry about it too much this is going to be my example okay and uh no so now I need to okay so what I think that I'm going to do here is I'm going to make a quick short video just about my workflow because I get this question asked a lot um and I think it'll be helpful just to point people to this so my workflow is node web server Adam editor but I'm going to mention also that you could there is an Adam there are Adam packages for servers but I'm just choosing not to use that I'm going to mention that I'm also using a beautify plugin for Adam and uh and I also want to mention that stay tuned because you going there there is soon to be released a web editor for p5js okay um let me uh reset the camera here um and I am going to uh I just want to erase the uh whiteboard over here uh uh okay yes why Adam over Sublime no big reason other than I saw somebody I really like using Adam and I thought oh I should use Adam too but it is free and Sublime is um uh a software commercial software which I I have purchased the sublime license because I like to use Sublime and I think you should too but as much as possible I like to use uh free Tools in my tutorials um but I also think that people should buy software and support software development so I don't mean to say that there's anything wrong wrong with charging for software okay uh here we go um let me uh hello welcome uh to this video in this video I just want to do a short quick tutorial about my workflow for the tutorial videos that you're about to watch as part of this programming from a toz playlist but also I use this workflow in a lot of my other videos and coding challenges and I'm sure my workflow will change at some point in the future but this is relevant for the time period that it's relevant so let me just come over here and make a short uh list of some things that I'm using so one thing is you want to make sure uh if you want to use my exact workflow there are lots of other workflows uh you want to install something called node.js and then you want to install and I'm going to show you how to do this a node package called HTTP server this runs a little Local web server on your computer that hosts the HTML CSS and JavaScript files that you're programming and working with so that you can see them you know of course you can just double click them and open them in the browser but if you run an actual web server on your computer um you're going to mirror the real situation when you eventually publish your files to a web server somewhere so I use those I you also need a text editor to edit your code and edit the JavaScript files the HTML files all that sort of stuff I'm using a text editor called Adam uh and with this text editor I'm using a package called I think it's called Adam links to all these things will be in this video's description so if I get the name wrong uh adam beautify so that's an uh that's something that I just like that auto indents my code and that sort of thing um and then I should also mention that there are a bunch of I believe there's something called Adam live server and there are uh other packages in atam that will run the server for you that you can use instead of http server if you prefer I should also mention that I'm uh working with uh p5js libraries so you'll see that all of my projects have a bunch of extra JavaScript files associated with them they come from uh p5.js and p5.js um and eventually soon I I can't uh later this month if you're watching this in in September 2016 um there will be a web editor that you can use um with a p5js for developing sketches and ideas that go along with this course as well and at some point when that is released I'll demonstrate that in a video as well I should also mention that there are a lots of other uh wonderful code editors you can use online code pen uh is one uh that I've used it has a wonderful Professor mode which allows you to type code and your students see on their screens the code that you're typing in real time uh jsfiddle uh thimble uh and um I don't know why I can't think of other good ones that I'm forgetting now so I apologize if you make a wonderful code editor online that I'm not thinking of so this is the workflow I'm using let me demonstrate it for you rather quickly here I am over here uh and okay so Adam is something you should download from uh atom.io I've already downloaded it so I'm just going to run it here uh it is a oh it's already opening something so let's when you open it it'll probably look more like this an empty thing I could do command N I have a new file and I can type stuff into it so it's just a text editor any text editor will do oh yes install my update I guess oh what's going to happen everything's going to break no please work okay um so uh okay so this is Adam uh that's what it looks like uh um packages you can install you can see here this is this beautify package that I'm using and I'm also using something called Adam key mapping so so I set it to beautify to be the command T which is my preference uh shortcut um so uh maybe I could cover that in another video or link to how to set up key mappings and Adam in this video's description um and you can also see there I I do I have the live server somewhere a live server here so you can see this is a live server package which will also start a live server you can install how do you install Adam packages uh I forget uh when window uh I was going to say preferences uh uh packages yes so uh and maybe I could um time out pause oh yes no never mind keep going install so here's a place that I can that you can search for packages or find featured packages to install um and add things to Adam okay so then now the other thing you want to install is uh node which I'm going uh which you can find at node death .org you can download install node and then from uh terminal you can um from terminal you can use something called uh npm which stands for node package manager and you want to type npm HTTP Das oops httpserver this is installing the web server that I'm using but you can't just install httpserver you need to say DG for Global meaning you're making this a global package which means you can just access it instead of being a package just for one project it's just accessible on your computer till until the end of time basically until you uninstall node and if you do that you also probably want to say pseudo because you might need pseudo as a way of saying I'm the administrator of this computer I have permission to install something globally and if I hit enter it's going to ask me for my password and then uh I already installed it so I don't know what just happened there but uh oh I said to hold the wrong command entirely hope you're not uh npm install HTTP server and now um it's going to install it so it's installing it and once I've done that uh I can I'm running a web server in a bunch of other directories so I'm going to stop that I can just anywhere I am on the computer I can just say httpserver and I can uh run a web server now where do you want to run the web server from probably from a directory where you have a project that you're working on like I have this load text project I can CD to that directory I can say HTTP server and then I can go to the browser with this particular URL which is just the local host of my computer 127.0.0.1 col 8080 and uh oops I can go back to the browser and I can paste that URL in and you can see oops refresh there's the project it was uh you can see there's nothing there CU there's no code in there that project but if I were to add some code to that project you would see this project displayed in the page now uh one other thing I think that I I thought of that I wanted to mention about this which I've now completely forgotten oh yes if you don't like port 8080 uh you can also one thing I'll mention to you is you can say httpserver uh p and I can make up a port like what's my favorite number 1 1234 uh maybe I should I'm going to actually I'm going to you higher port numbers are better that you don't mess up something that's already running computer so I'm going to say 881 and you can see now I'm running that same server on 881 so you can't run multiple web servers on the same port but if you need to run multiple web servers on the same time you can use different ports okay so that's a quick just little diddy on my workflow I'm sure I missed something or you have questions about it which you can ask in the comments and now you're ready to go and watch the video tutorials where actually make some stuff using this workflow okay thanks okay so so I got that out of the way uh hopefully that's useful for people I don't see anything in the chat like you're not making any sense or that was terrible or please stop so I'm going to keep going and I now going to actually get myself set up again um so let me run I'm used to 8,000 so I'm going to do one on 8,000 which are the preexisting examples and then I'm going to do 80001 I need a tissue so 8,000 okay and then uh 80001 load text uh adom node close uh and then then now what I want to do is uh open that load text example actually just open A to Z here oops not an atom open B to Z I don't know what this is uh let add just a little HTML so I see that stuff is there oops and make sure I have P5 DOD okay so here we go we are ready now now gimler full asked to be greeted and then message got deleted okay good work moderators uh please make a basic stylesheet for your index.html I will do that at some point it is not really necessary right now not the focus of what I'm looking at but um um Al valer you're asking about open processing it's a great uh project that allows people to post and host sketches online um I think it's a wonderful project C9 is an ITP Alum who's got a lot of energy encourage you to support it and use it sure um okay so now how we doing TimeWise I'm recycling the cameras I am going to uh erase this over here so this first video I'm going going to look at how you load text from a user ah and I need two things so actually before I do this video I need to use some sample text and rainbow Wikipedia um so let's see what's a good way for me to just copy paste a lot of text here let's see uh so much interesting text here Double Rainbows the Wikipedia page on rainbows is amazing okay uh copy paste this actually I'm gonna uh I I think this is too much text so I'm just going to do like a few first uh paragraphs with uh to here okay actually let's go a little further I don't want the math stuff so I'm going to stop here okay copy text edit paste make plain text okay so now I have uh whoops I'm going to get rid of this and I'm going to save this as save as uh rainbow. txt um we one load text save um and now I can also see it here so I think this should be okay you know what I think I want I think I want how do I turn text wrapping on in um and not wrapping as in because I I'm not going to trim to wrap because it'll be the worst thing you've ever heard in your life but wrapping W WR uh W uh a soft wrap let's turn that on uh and there we go a little bit okay uh great o oh I'm going just do a little cleanup here I don't know why that happened uh and all right I'm not going to obsess about this too moonbows oo what's a moonbow that's exciting uh okay uh here okay here we go so now I have some sample text to load great okay here we go I will actually in this tutorial I am going to need to add uh a CSS file okay here we go um Everybody right let's see what's the I want to see what time it is it's 1130 I'm doing pretty well still I basically have three video tutorials I want to make before I leave now uh loading text from a user basics of the string object in JavaScript and coding challenge to do cut UPS dastic generative poetry stuff in a single uh web page app so those are the three things I'm going to do okay here we go hello welcome to another programming from a toz course video this video I'm going to look at a feature of well really a feature of the world the web the browser um and look at in the context of p5js and JavaScript how do you get text input from a user so first I just want to talk you through over here what the basic what the three or four methodologies I'm going to use so number one is if you want to get text input from the user you can use something called uh an input element so an input element is a little box that appears in a browser window where you could say you know in a web form you might say like name and then you know you write your name in here uh you could also uh use something called a text area and a text area is the same idea it's just bigger and it's usually resizable the user can kind of drag this corner around um for a longer bit of text entry so if you want the user to type in a paragraph of text and use that in your program you can use a text area and then you could also get you could ask the user to to submit or or you could simply load there's boy there's so many other ways that I'm not going to get to because you could use apis and crawl the web and scrape it we'll get to that stuff later in a future video but what I'm thinking about right now is you could also get input from a text file itself and you could use for that you could use the load strings method in p5js where you could simply just reference a an actual text file that you have as in your sort of directory of files um and you could also U but you could also ask the user to upload a file sorry there's going to be an edit point in this video thank you M for editing this my coughing fit out you could also use a uh file input um if you've ever seen in a web browser you have a little button that says like choose file and you can actually create that with a p5js function I think called create file input and I'll show you how to use that as well and finally you could create a div of sort of area a box of stuff on your screen that you could in the browser itself that you could drag a text file over and I actually have a separate video tutorial that just goes over that which I might just reference rather than include it in this video tutorial so I'm going to go through all of these and then you can also look at the draggable area video um and you'll see these as possible ways of getting text input because what I'm going to do is say hey user submit some text and I'm going to generate a poem of from that text for you so that's kind of the ultimate goal that I'm going to do a couple videos from now okay so let me come over come over here and let's see um so first of all so I'm going to start to implement some of this stuff and go over how these functions work okay so this this is my code so far oh yes no I'm still in the same video I forgot everybody take a deep breath I need some like calming uh sound that's not calming sound but I got to uh I need some more Zen sound effects okay um so this is my code so far one of the things you'll notice in all of the examples that I'm not all but many of the examples that I'm publishing is that even though I'm using the p5js style methodology structure of there's a setup function which is kind of like the pages loaded function there's a draw function which runs this continuous loop I actually am using calling a function called No canvas meaning there there is no drawing canvas associated with this program that I am writing I am simply I'm writing a program to mess with uh the web page other elements other than the canvas paragraphs headers that sort of thing so if I were to look at the output of this page uh which is over here you can see all there is is a header that says welcome to a toz week 1 now where is that coming from one thing I'll notice nowhere in my code do I say hey display that on the page that's because I actually have that simply hardcoded into the HTML file associated with this uh itself so this is something that I'm going to touch on in this example and future examples is ah when should I put something in the HTML file when should I put something in the Javascript file and there's no real answers to this question it's sort of caseby case basis and personal style that sort of thing um okay but what I want to do first is just simply show you how can I create text input on the page and I'm going to do that by saying create input and now I'm going to run this code look at that and there it is there's a place where I can type some text on the page wonderful and uh ah yes okay so just time out for a second sorry I need a short break I kind of had like lost my train of thought um looking at the chat somebody in the chat says they have to pee I will probably have to do that at some point sorry I I I I try to minimize the amount of edit stuff that I'm added to do but this will get edit so I'm just trying to think to myself of what order I'm going in um okay okay great okay so with this partic with this text input box I could do a number of things number one is I might ask the user to uh uh enter in I was going to talk about the Mad Li sorry you guys I kind of just like lost my boy I'm really the um I'm having some green screen noise today it's probably because that light is burning out but say okay once the user has typed in some text I want to uh I might want to access that text in my program so let's look at how I might do that so first of all this create this input text box that I've created on the screen I need to store a reference to it in a variable so I'm going to create a variable like input I'm going to say input equals create input and by the way I'm actually going to take out the draw loop I don't want there's no reason for P5 to be continuously looping right now because I'm not using that aspect of P5 which I might later but there's no canvas there's no animation and so what I now want to do is I want to H have access to that uh stuff that's in the the text box now when do I want to have access to it I could have access to it in a draw Loop by saying input. value I'm going to skip that for right now uh what I'm going to show you though is just I'm going to open up the Chrome developer tools here to make this a little bit bigger so let's say I put my let's say I type rainbow into there and then I set type input. value you can see this by referencing the variable Dov value I have the text that's in there so anywhere in my code I can simply reference that textbox Dov value and I know what the user has typed rainbow yay um so uh now I might want to know what they type only when they hit enter so the way that I can do that and I've done something rather horrific so well actually no I haven't done it horrific yet I'll show you later I'll fix this later so um all Dom elements the text input box being a Dom element have events associated with them mean I click on it it's an event when I hover my mouse over it it's an event there is an event called changed and there's a p5js P5 Dom Library function called Changed which allows me to execute a function when that event has has been triggered so I can say input. changed new text which means I can just write a function called new text and I can say console.log input. value so what I'm saying is whenever the input box has changed meaning the user has hit enter I I want to see the results of that in the in the console so now if I go back and refresh this page and I type in rainbow and hit enter we can see here uh more I have rainbow here if I type in unicorn and hit enter we can see I have unicorn there so now I am accessing the content whenever the user types enter and I might do something like say create P input. value create P makes a paragraph element on the page so now I can say unicorn and I can say rainbow and I can say uh swirly happiness right and I'm getting all of those things as paragraph elements on the the page now here's a question for you what if I want to know every time the user types a key not just when they hit enter but anytime anything changes in that text box itself this event is not the changed event and this is where I've done something which I really don't like which is that the name for that event is actually input which is a little bit of so technically what I need to say uh is something like this but I sort of hate hate how I've name the variable input and then there's also an input so I want to rename that variable so I'm going to just call that uh you know text field or something and that way we can have less confusing there less confusing there I can I can make this a little more clear uh so what I'm going to do now is say function uh new typing and I'm going to say I'm also going to do create pie so let's comment out the let's just for the moment comment out the changed event and only have the uh input event so now watch what happens you and I C O R N anytime I type anything I'm getting an event and I'm kind of continuously making new paragraph elements for every keystroke that I type so maybe what I want to do instead just as an exercise here to do something different is to what if I had a single paragraph element that I altered the content of every time I typed a key so here's where this like in Shakespeare Hamlet there's an essential question to be or not to be and I have a different question for you today and my question for you I don't maybe I should oh I shouldn't be erasing all this because it's a nice reference for later but it's too late to select or not to select or maybe it's just to create or not to create to select or to create what I'm saying to you is when do I want something on my web page to appear based on code I write I'm creating a new Dom element and now it's being appended to the page or versus when do I want to have something that exists on the page that I access in my code exist in the The Raw HTML that I access in my code and manipulate and here's a case where I'm going to De just demonstrate to you that what I want to do is I am going to in the HTML file itself I am going to add a paragraph element and I'm going to give it an ID and I'm going to call it uh output right I'm going to call it output and you can see that it is empty and what I want to do instead of saying create p in my my code instead of creating the paragraph element I want to select this paragraph element I want to access it so that as the user types I want to update what's in it with the word with the keys that they're typing so uh let's do that right now so how I do that in the code is so I'm going to do leave that in there so what I'm going to do is I'm going to say I'm going to make a variable called output and I'm going to say output equals select and then I need to I'm going to use its ID and the indicator for an ID is the pound or hash symbol select output I think that's what the IDE I gave it and then here now what I want to do is in new typing I'm going to say output. HTML the HTML function in the P5 Dom library is a function you can call to access the existing content of a Dom element or place content in it and what I want to do is I want to take what's currently in the text field and I want to put that in that paragraph element so let's look and see if this works now and so as I'm typing Oh cannot read property HTML of null so I've made some sort of mistake here select uh you know what I wonder if by um I wonder if it uses wait what what did I actually let's so let's double check what did I make it ID I made its ID output um so let's just let's just try uh some stuff in the console here to debug this I think I know what the problem is huh okay time out I debug this yes so somebody in the chat is saying document. getet element by ID which is absolutely correct but that's using the of JavaScript and I'm kind of leading on the p5js Dom Library so let me look this up I also need to get a drink of water why did I look look oh my here's my video tutorial I know what I'll do to figure this out I'm going to watch this video tutorial about select and select all uh where's the reference this is uh interesting um this is not what I want to do did I did I like this example uh reference libraries P5 Dom select yeah so what did I do wrong here HTML file is not saved that's quite possible I'm going to stop that annoying typing sound sorry everybody uh what went wrong here oh that was it thank you very much everybody for my oh the HTML this is what I meant to do the HTML file wasn't saved okay that did the trick let's refresh this page uh uh okay my pants are falling down you would never know that because to the internet I only exist from here up but in my new and upcoming uh coding rainbow promotional music video thing you will see that I am not a centaur um okay I got to get back into this video okay so um here I am back and if you are wondering what was wrong I forgot to hit command s in my um in my index.html file meaning it wasn't saved so now that I've saved it the code works as expected or as I wanted it to which is I can say uh hello every time any character that I type here you can see that that paragraph element is being updated and now when I hit enter you can see that I am also uh saving that with so I have two events that I'm tracking each key being pressed and enter being pressed now couple other things I want to mention one is if you want to have this prefilled in with some text um then uh one thing you can do is you can uh in this create input function you can say uh this uh you know like and enter your uh favorite uh food or something or just say like your favorite food right and I could then say you know blueberries cuz I love blueberries I love blueberries okay um and uh they would me so happy I wish I had a bowl of blueberries right now and I could just do this sort of weird internet thing where I eat blueberries on the internet um okay so you could see you can have something some prefilled text in there I could also uh make this a text area instead so what I want to do actually right now is uh what is I'm going to show number one is I'm going to show you two things at once whereas uh first of all instead of saying create input I could have actually just put an input U element in the HTML file and you select to access it you can try doing that as an exercise for yourself and what I'm going to do in this video is change this I'm going to actually add a text area and I'm going to give it an ID which is uh I'm going to call it text field I'm going to say text area and you can see now if I refresh this you can see there's now a text area that I can expand over here so if I wanted to type a paragraph in here and I could also actually preed it with some text please type a story and you can see now it says please type a story there and what I'm going to do is in the code I'm going to comment this out instead of creating the input I'm going to say text field equals select and uh text and the uh the ID is text field so I could probably think of better blueberry I'm going to call it blueberry and I'm going to go back to the HTML and I'm going to say uh give it an ID blueberry and I'm going to say tell me about how much you love blueberries so that's in there you can see that's in there and now you can see this same program works the only thing is that event enter is no longer relevant so in this case I should probably create let's do this um I'm going to go to the the I'm going to actually just create uh a button element and I'm going to say submit and I'm going to give that an ID which is submit and then I'm going to go to my code and I'm going to say VAR submit uh and I'm going to say submit equals select submit and by the way I'm doing a terrible job I'm single quotes double quotes everywhere all you can argue on the internet single versus double quotes I'm just going to use them both I don't care uh and I'm going to say submit uh dot uh mous pressed uh which is an event uh new and I'm going to say uh new text so when you click the submit button I'm going to call the new text event uh which will create that new par paragraph So Mouse pressed is an event for when you click on a button so I should be able to do this and you can see and I can hit submit and I get this is how much I love blueberries okay so oh it did it twice why did it do it twice um Mouse press oh because I have the oh interesting oh when I maybe when I hit tab or something I I have this uh no oh yeah text field change so that event is still in there maybe it's somehow figured out I don't know I don't know why that happened yeah someone needs to by the way someone needs to write a command s for Save song um okay anyway uh I finished with this video okay so this is the end by the way here's a little exercise technical exercise for you to do and I'm going to show you how to do this as I make some video tutorials about how to manipulate strings but basically the next thing you should think about um is how can you instead of just reproducing the exact text that is um that is in the text area or text input box right there on the page how could you manipulate that text so how could you show the user back what they've typed but reverse the order of the characters or reverse the order of the words or replace certain words with their synonym I mean that's you know connecting to an API or something so you can come up with some clever idea this is a kind of a technical exercise that you could try okay thanks for watching this video about how to get text input from the user using a input field or a text area in the next video I'm going to actually show you how to load from a file using load strings or the create file input okay thanks very much and I'll see you in the next video uh okay because I lost Focus to the element and the content in the element changed I think that is correct Muhammad in the chat writes the onchange or the changed event triggered because because you lose focus to the element so whenever I click out of the text area or something and click to the submit box it triggers that event so I'm a little bit crazed here but hopefully that was useful to you time wise how are we doing I want to get to my server I believe that's what I'm going to do right now so I think what I'm going to look at um load strings okay so let me get myself set up for that uh and I'm going to week one look um so I'm going to change the name of this to o1 uh text input and I'm going to call the next one O2 load file okay so um sorry sorry sorry I have to uh go back to here this is what I just did uh hold on I want to just fix something about this um what oh whoops I did something ah I did something weird here um I think this is still right uh what I wanted to do sorry is just I want to put the output above and I want to put this in a paragraph Just want to make the web page look a little nicer not that it and make sure this works so when I release this code okay great so now what I want to do is go to the next example and the other thing I want to do is in here I want to say text input from user and the next example I think it save yes ah I did it again I I shouldn't rename the folder uh and the next example I want to uh say actually I want to get rid of all this stuff one thing I should say by the way is of course you could do this with jQuery native JavaScript all sorts of other ways of manipulating Dom elements if anybody's interested in like recording my examples to using other Frameworks so people could compare and contrast that's great I'm using p5d because it's a really simple quick and accessible way to get up and running with da manipulation and it's part of the processing Foundation which is a pro uh p5js which is a project that I work on and like to support okay um okay I wonder how many people are watching this right now by the way 105 that's pretty great hello 105 people of the internet I just got to dive in here the last yeah so by the way I did a setting on YouTube that as soon as a live stream ends it immediately makes the video unlisted because I don't usually like to have it published then as an archive until been able to like clean it up or fix some stuff you know once I had like a password in it and I or something and got that out so um so anyway so that's why the archive is not there but it'll be at some point later today we'll get an archive of today up up there and it'll probably be um a new video cuz I'll have to stitch these two streams together but I am recording to disk and I am streaming and everything seems to be working so hopefully this is going to not freeze again I sent a report to I don't know whether it's wirecast or my computer or what but here we go okay so let me just see I think I have a little bit of a cold by the way um Okay so I am ready now okay printer cable blackout yes I like that some of you oh mention that okay U let me get the chat visible for myself again and here we go all right I don't know why I like having this little background instrumental the beginning of the video it makes me feel like I'm doing something here all right here we go everybody hello welcome to another programming from a toz video tutorial and in this video tutorial I'm going to show you how to load a text from a file U into your web page and I'm going to use that for a lot of other examples and things that I'm going to do in later videos so um and I'm again I'm using the p5js uh framework so first of all let me just show you something that I have here I have a text file as part of my folder along with the index.html and the sketch. JS file obviously I could have subdirectories and do various things like that and this text file simply has a bunch of paragraphs of text from the uh Wikipedia page on uh rainbow the rainbow Wikipedia page so um the very first thing I can do uh that really makes it easy to load text is that I can write a function called preload and the preload function is actually an event that happens before setup is called so one of the goofy things about JavaScript is everything happens in this quote unquote asynchronous manner meaning you start loading a file then you start doing something else and you start doing something else and you try to do something that uses the file but maybe it's not loaded yet and in a moment I'm going to show you how to sequence this sort of stuff and maybe later I'll even show you more sophisticated ways to sequence this stuff but right now the easiest way is p5js says hey if you don't want to worry all about all that you can simply say load strings rainbow. txt into a global variable called txt that I've made up as long as I put that in preload by the time I get to setup and I can do stuff to the Dom of the page I know that that text will be loaded and so what I'm going to do here is just add in here console.log txt so we can see what is it that's coming out of the file which might be something that you don't expect so I'm going to do this and you can see here it is now weirdly enough you can see like like hey why is there this bracket there before there's a quote there seems to be some sort of and then there's like uh this here and then there's a comma and another quote there seems to be some sort of array here so let me do something to this file I'm going to go to rainbow. txt and I'm going to say rainbow unicorn blueberry uh you know what's good too is mango who doesn't love mangoes okay um so I'm going to change the text file to just have four lines in it and I'm going to refresh this page and now you can see more clearly what's happening so one of the things that load strings does for you which is often very convenient but not always so convenient is that it gives you a body of text as an array each element being the array being each line of text in the file so you know if you have some sort of like this can be very convenient if you have a text file of words like you might have a text file of words you're searching for and suddenly you have them all in an array when you load that text file that can be very convenient in our case here maybe what I want to do and I'm going to undo all this so I have my rainbow text back maybe what I want to do is just put all this text onto the web page and so uh I might want to say in my code uh create P like make a paragraph with that text now let's see what happens weirdly enough I love sometimes you just got love JavaScript and libraries like p5js it like figured out something to do it took the array and it just like made a paragraph out of the entire all the things in the array and I think it actually got everything but um another thing that I could do is I could use a function called join which takes all the elements of the array and joins them together and I could actually join them with a br tag in between them so you can see now if I say join everything in that array and put a br tag and I think I'm probably supposed to type it like this as a selfclosing tag um then what you'll see here if I refresh it is now I actually am maintaining the line breaks from that file in terms of rendering the stuff from that text file on the web page so this is a very quick and easy way to pull in a text file and display that on the page so I'm going to use this in later examples you could think of things you might want to do like chop up the text file count all the words in it analyze it that sort of thing load multiple text files you can call load strings multiple times but there's two more things I need to show you in this video number one is you don't always just want to like load the file and preload you might want to only load the file when the user clicks a button or something like that and number two is you might want the user to be able to submit an actual text file and I'm going to show you how to do that as well okay um someone in the chat actually by the way asked how does one do CSV files so you could actually load a CSV which is a comma separated values file which is like a um spreadsheet so to speak and then parse it and you split and chop it up VI your commas and I might show you how to do that in another video but there is actually a p5js function called load table which knows how to load a CSV file and something called a table F object that you can Traverse and iterate over as if it's a with spreadsheet like functionality but that's for another time uh okay um so now let me get rid of preload and what I'm going to do is I'm going to go to uh my HTML file and I'm going to add a button and I'm going to call this button uh give it an ID called load file and load a rainbow text and now we can see if I go to the web page we should see I have a button called load rainbow text and if I go to the sketch what I want to do now is first I want to access that button via its ID so I select it from the page now I have a variable that knows about that button and then I can say button. mous pressed and I can reference a function I can say load I can write a function called load file so now I can write that function here shoot is that coming through God I've got to turn that off getting phone calls in the middle of these tutorials okay um that can be edited out I don't really care um so now I've written a function called load file and what I want to do in that function is called load strings on that file name here's the issue though now that I'm not using preload I can no longer just set the result of load strings to a variable what I need to have now is a call back so I'm going to say load this text file and then I'm going to make a function called file loaded file loaded and that function I'm going to oops I'm just going to write it up here is going to be the function that is triggered when the text file is ready so there's a whole sequence Happening Here I press the button on the mouse load file happens I call load strings when the text is ready I call file loaded and what comes in there data I give this function an argument I'm going to call it data I could call it text I could call it anything and what I can do now is I can say text oops whoa text equals data so what I'm doing is I'm saying when the file is loaded the AR to this function is filled with the stuff that's in that file I can set it equal to my Global variable but I actually don't really even need the global variable anymore it sort of depends what I'm doing here but what I'm going to do is instead whoops I'm going to get rid of this Global variable and what I'm going to do is I'm going to take this and I'm just going to put it in here and I'm going to say data so I'm going to create that paragraph when the text is ready so I'm setting up now a sketch when I run the sketch nothing happens but as soon as I say this I load that text and it appears on the page so this is how you can sequence the loading of data from a file and obviously again what can you do that's more interesting than just display that exact text back to you or might you have different buttons for different text like choose your own source text for this web application that you're making that type of thing Okay so we've seen almost everything now I have one more piece of this what if instead of loading text from a file I want the user to be able to um I want the user to be able to select a file themselves so here's how I can do that I can add to setup I can say create file input I'm just going to put that there with nothing else just to see that this does something and I'm going to do this and you can see look at this I now by default this just that create file input has created this whole choose file no file chosen button thing on the page so I'm getting a lot of functionality from the web browser for free and of course I could style this differently I could change probably what it says there instead of choose file I could do a lot of custom stuff but I'm using the basic raw default Behavior so when I press choose file it opens up a file menu for me and I could you know go here and I could actually go and browse and find you know my rainbow. txt file and select it and you can see there it is now nothing happened so what I need to do is I need to set up a call back for when the user selects a file and there's some complications here because what if the user selects an image file what if they select a text file what if they select a um you know a some other kind of file that I can't think of right now so I might have to handle different kinds of files differently or do some error checking and that type of thing but basically I know that I need a call back so let's go and add a call back create file input and I'm going to say I'm going to say file selected so I'm going to write a function now called file selected and I assume that file is going to get some argument that function is going to get some AR an argument and I don't know what's going to be there I could look up in the documentation so I'm just going to write console.log file now I'm going to run this and I'm going to go back and I'm going to select that rainbow file and you can see ah look at this what did I get I get a P5 file object so there are lots of things here that I get I have what kind of file is it it has a type and a subtype what's the name uh how big is it so what that sort of thing so number one thing that I can do here is I can just say whoops thing I could say something like create P you know file. name plus file. size plus file. type so right now I'm going to create a um I could create a paragraph element with stuff uh stuff about that particular file so if I refresh the page I select that file you can see ah I got rainbow. txt let me make this a little bit bigger so you can see it it's got 12,000 some bytes in it that's way too big uh and it's a text file I could uh you know select my HTML file it's still a text file I could look at the subtype um I could try to get I I feel like there must be an image file somewhere on this computer but I don't I'm not going to bother to look for it I'll I'll let you experiment with that yourself so you can see I can have the browser I can have my code know about the file that the user selected and even better I can get access to the contents of that file and the way that I do that whoops what did I just what did I click here ah no stop there sorry um I can uh oops I'm in the I lost uh I want to show you other stuff about the developer tools later but I got lost in there so what I want to do now is reproduce the contents of that file and I'm going to say uh right here create p uh file Dot and I think it's file. dat I believe the actual contents of the file is in file. dat so I'm going to do choose file I'm pick this and you can see there it is here's all the contents there now I'm not it's not coming in as an array so I don't have the line breaks I could do a replace to put BR tags in it I'm not going to worry about all that right now ultimately I I now have the user able to select a text file that I can process and return something back to the user um the other thing that I will mention here is that I might want to protect and say hey only if file. type equals text then create that paragraph otherwise say I I need a text file so here with a little bit if statement I can add some error checking here so if I run this again and I say choose file and I go uh somewhere on this computer under applications and I I don't know I try to get this chess application and I select that it could say look here's this giant application but I need a text file so you can you can do some sort of error checking in that sort of thing uh with um with with in your code as well now there's two more things about this probably more than two there if you look in the documentation there is a way to allow and I'm going to look this up for you right now uh create file input p5js hopefully this is going to bring me to that page um it did not so I'm going to find it myself I'm going to go to P5 js. org I'm going to go to libraries I'm going to go to P5 Dom and I'm going to look for create file input um there is a second argument which if you add allows the user to select multiple files and you have to handle those a little bit differently maybe I'll you'll see this in some of my examples or maybe I'll come back to this in a future video so if you want the user to be able to select multiple files take a look at this that's there for you and the other thing that I'll show you is that you can have um a user uh you instead of having the user have to select the file you can actually also have a user uh uh able to just take a text file and drag it into the browser drop it in the browser and have your program process that file and geez why is my phone ringing incessantly I turn that off hold on I'm turning on airplane mode uh okay um so um if you want to learn how to do that I'm going to publish examples that go along with the a toz course that have that in it but I've already made a video tutorial about drag and dropping a file into the browser so uh I'm just going to Google drag in drop shiftman YouTube and I'm sure this video is going to come up right now uh so I'm going to reference you you'll find a link to this video in this video's description and probably some kind of popup thing happening right now if you want to take a look at that you can go ahead and watch the drag and drop a file video tutorial to see how that works all right uh thanks very much for watching this concludes the sequence of videos about how to get text from the user okay um we're doing kind of okay here 1215 I'm not getting to everything I wanted to get to but I'm I mean I'm going to get to everything I wanted to get to this is taking longer than I wanted I need to go get a drink of water um this I this is actually coffee today because I'm a little bit on California time I usually don't like to drink coffee with these live streams because I like to have some like tea or something K mil tea because I'm already kind of tum manic already um okay so um what I want to do next is cover the string object a bit about that in JavaScript I'm going to do a video about that and then I am going to um do a coding challenge but I need to take a break and get a drink of water so you'll have to bear with me oh by the way in the chat are you guys actually hearing that telephone ringing sound I'm just curious I don't know if you are um breakout would be a great coding challenge that I would like to do at some point uh you know the the quick the old retro game stuff gets the most views of anything that I do um uh we are not yes some people are saying they hear it some people saying they could couldn't okay so I probably shouldn't mention it yes we are the that's my iPhone IOS phone ringing thing okay I'll be right back um I'll give you guys some I I need the this dot here uh SoundCloud Daniel oh I might not have set this up so you can hear this uh let's see can you guys hear that I think you can I'll be back just taking a break I'm a live mic here okay I'm back oh it's playing something else now okay uh okay so what I need to do now uh where am I in my syllabus page I talked about load strings preload load strings in a call back user selected files the Drop Zone and text oh I didn't talk about content editable but that's in yeah that's come back to that uh you can find that that's that's by the way there's another thing you could use is a Content editable instead of a text area which I should mention maybe I'll mention that and now I want to talk about strings so index of substring so um I am going I'm going to make a list for myself here of of string functionality I want to cover and I should really invest in some like I don't know some super high te bright dark really good whiteboard markers anybody have any recommendations let me know these like sort of work but after I use them for a couple days they get and these I bought for like five bucks at a pharmacy or something um okay uh index of substring what else is in my list here uh um index of substring length is important length uh split um ah I see okay that's it enjoying okay okay build a Smartboard as a coding challenge great suggestion uh you know what would be what would really work well for me is if I had like a full extra day each week where I could just come here and work on my setup but oh sound effects are not working I'm not playing any sound effects ah they aren't working uh um oh that's funny I think I I probably played a whole bunch of sound effects you guys couldn't hear it's because I didn't set up AirPlay uh from this this is really not worth me wasting a lot of time on but I'm going to do it real quick okay that should get the sound effects going again did you guys just hear that one full screen this let me see if this is working uh okay no my shirt the back of my shirt is not dirty it is a processing sketch okay this is the output the processing output of the code that's on my shirt it's very faded this is like a retro processing tshirt quite quite a while in time and I I wanted to wear my coating rainbow tshirt but it has a green stripe in it I feel like it just makes everybody crazy that the shirt appears seethrough so another time okay uh all right cutting power cutting power um here we go so I am going to look at strings in JavaScript okay so let me get myself set up here uh with another uh example load file uh strings and uh let me set up this example to do something I don't need the text file in this one uh I don't need the um I don't uh I want to have something like this uh uh so I want to have output I want to have input uh I know unicorns in rainbows I live in a Land of unicorns and rainbows uh submit let's see here if I go to here uh strings whoops that didn't work um how do I change the width of uh no anybody know off the top of your head I'm trying to do this input element in HTML how do I change the width like how many how wide it is uh um character with uh input size oh it's an attribute size equals I think it's the number of characters so like 500 will be an insane amount yeah so I just want to make it like 100 uh there we we go so that works um uh yeah uh okay um okay uh I want to get rid of this oh sketch all right okay uh uh txt uh I don't um sorry everybody I'm just uh and output is output submit is submit new text just want to have a basic thing set up that I can do stuff to text okay um okay let's see here I feel like I'm kind of blurry today am I blurry today I never I don't I never Focus the camera I don't have time to that kind of stuff just got to get through this stuff okay so and now the so here's my example here is where this material is coming from uh here's the rainbow Wikipedia page p5js reference going to go here and then I also want to look at this page there we go and this is like a little tutorial which is good but I want the um feel like there's a reference page which I want or maybe it's just because I have the window ah there we go so here okay great I'm running out of steam here everybody okay so two more two more things I want to do today to complete this week one is a quick video about JavaScript string object there's no way for me to focus this without another person so I'm not going to bother worrying about it although I could put like a picture of myself here and I could focus on that I think if I step closer I'm more in Focus which is generally where I'm standing anyway uh I want to do this tutorial about JavaScript strings I didn't get that stupid glass of water I went to go pee and I forgot to get a glass of water hold on a second I'll be right back I'm gonna play you the uh coding Rainbow theme song you a preview of just the theme song since you're being so uh where is it maybe I don't have it local I thought I had it oh wait wait I have it it's just not uh never mind we'll get the instrumental hello something goofy is happen but I'll be right back okay here we am water this is going to make everything better okay here we go and I have over here my list boy you can barely read that but say lovey okay okay all right hello welcome to another programming from A to Z video tutorial in this video I want to look at how the string object in JavaScript so what is the String object in JavaScript if I say vars equals hello I have now made a string object although there's some weirdness up wait time out time out I just thought of something isn't there something where uh I oops there's a weird sort of thing where technically it's not an object until I do this um but it kind of lets you do all the object stuff anyway I think I don't need to get into to that in the video it just sort of like popped into my head uh yeah someday I'll start using es6 stuff but I'm just not ready for that it's not until PE until it's sort of like till somebody tells me that I really I'm just not ready for that barely I barely can keep going right now like my mind is melted but I'm I'm going to do it okay uh how do I clear the console that does not work I thought there was a way maybe it's this ah there we go that button okay try this again uh okay here we go hello and welcome to another programming from a toz video tutorial in this video tutorial I want to talk about the JavaScript string object um so what is the JavaScript string object well if you've ever written code like this bars equals hello now I have a variable and it has a string of characters a sequence of characters in it h e l l o this is a string object so on the one hand I can use this string object to put text in a Dom element I can use it to paint text onto a canvas I can use it to print text to the console but what I'm going to be doing in future videos is manipulate string objects so if I load all the text from a file and I have this big string object with all paragraphs and paragraphs about rainbows and I want to like chop it up and mix it up or analyze it or make poetry out of it I need to learn how to manipulate string objects in JavaScript so this is what I want to look at the basics of and then next week or in the next videos that you might see in the future that might already be there I'm going to look at something called regular Expressions which is really going to uh just like explode the possible things you could do with um text and uh JavaScript but for right now we're going to live with just the string object itself and so if you want to learn about all the possible things you can do with string objects um the place that you I I would say that you can go to is the um Milla document the Billa uh document JavaScript documentation look under reference global object string I'll include a link to this page in this video tutorial and you can see ah there's like a nice little tutorial here that kind of runs through a lot of stuff you can see all of these functions that you could call on strings like index of and normalize and repeat and slice and strike and blah blah blah so I'm not going to go over all of this with you I'm going to give you a little bit of a kind of like weade into the Waters of manipulating string objects you can also find my notes on this on um this particular web page the a toz programming website which uh I'll also link to this page in this video tutorial so I made a list over here on the Whiteboard of things that I want to look at um in this video so I'm going to look at um uh really just three pieces of functionality that have to do with strings a long list of the Milla documentation there's a lot of other ones that I encourage you to investigate and play with but three that I find useful to some things that I might do one is index of another is substring uh the length property of strings is something that you need quite often and then I want to also look at splitting and joining which are operations that I'm going to be doing continuously throughout many uh tutorials and examples in this video series there's a little bit of funny business about this that I have to uh get to and talk about at some point but I'm not going to right now okay so this is my list let's start let's just start like let's go in reverse order or some sort of strange other order let's talk about length so I have a uh example set up already uh right here that you can see first of all I can just say s. length right here I should just be doing all this in the console really if I say s. length you can see I get a length of five because hello has five characters h e l l o let's just look at how we would do this in code right I have a simple sketch which all it does right now is it has a text input box when I hit submit I create a paragraph element with that text input box I can go to my code and one thing I can do is I can say I'm just going to say VAR s equals text field. Val so this is pulling what's in that text field and placing it into a string object and now I'm going to say uh create ps. length so now when I run this code again you can see that text has 42 characters so if you want to build a check to see if your text can fit into a tweet application you can see how oh if it's greater than 140 characters you know spit out this is too long to tweet or whatever so you can see that's one property we can use now here's another property here's another function that's really useful index of so let's say I say VAR s equals hello whoops and I say s index of rainbow what am I going to again1 index of is a function that searches for some text like rainbow in some other text S I'm looking for Rainbow in the text hello well rainbow doesn't exist in the text hello so what do I get negative one negative one means I can't find that subring in that larger string so this can be quite useful to you if a user types in some text and you want to figure out did they type in this word or search for a word in that piece of text now what else how what does it work how does it work if that text is actually there so let's look at that so let's actually add this so I'm going to say um VAR index equals s. index of rainbow and then I'm going to say create P index so I'm going to run this again and now I'm going to hit submit and I got 33 why did I get 33 well I'm going to say rainbow rainbow rainbow rainbow rainbow rainbow rainbow rainbow rainbow rainbow rainbow rainbow rainbow rainbow okay and now I'm going to hit submit and you can see I got zero so what is it doing I'm going to say zero 0 1 2 3 4 rainbow I got five so what index of is doing is it's saying hey this is the index of the substring you're searching for 0 1 2 3 4 rainbow starts at index number index five so this can be really this seems sort of like trivial and silly right now but you might load a massive amount of text in and you might want to find where something and this can be good for scraping and parsing ah I want to find stuff that's in between this so I have to find this and where's that and then I want to find something else and then I'm going to use another function I'm going to show you substring to plug something in between so you can see this is what index of does um so let's look at um actually that's fine right now I'm going to leave it at that oh one thing I should mention though is what about the case where I said rainbow rainbow boy do I love rainbows right in this case I always get zero how and but there's only one instance of it's always giving me the first rainbow but look what I can do what if here I say index of um and hold on um let's put this one thing I want to do is sorry I'm GNA put this as the default text in the text box and then here I'm in index of I'm going to do something weird where I'm just going to say comma 10 and I'm going to hit submit and look I got 30 why did I get 30 let me take out that comma 10 I got zero so here's here's something that the index of allows you to do it allows you to say search for the first instance of rainbow after a certain index so by default it'll start searching from zero but here I'm saying just start searching from the 10th character so here's what difficult programming exercise for you write an algorithm that searches using index of for every instance of rainbow so find the first one then search for the next one after the first one then search for the next one after that one and keep doing that until you get a negative one maybe I'll try to post a solution to that or make that as a coding challenge but that's something that you could try to do okay that's index up one more function that I want to show you in this particular video that I think would be useful to you is substring so what I'm going to do now is I'm going to say VAR new text equals s. substring uh 5 comma 7 and I'm going to run this if it's submit oh uh index is not defined uh create piece sorry new text run this again you can see I get oow why because 0 1 2 3 4 five five is the O I want a substring starting at five and where do I want it to end six whoops o w67 oh it's ending on a space bad coincidence there so let me change this and change this to um actually I'll just change the text so I'm going to take out the spaces am I going to get o or am I going to get just o w think to yourself what's it going to be I still get o so this is a little goofy thing with some substring but let's say I have the text h e l l o 0 1 2 3 four if I say substring between one and four I'm including one but I'm excluding four so I'm just getting L there so this is how substring works you might ask yourself well that's annoying that's weird why is it done that way there's actually a pretty good reason which is number one what's the length of this string three substring three what's four 1 3 and often something you want to do is get a substring from some point of the text to the end of the text and in that case all I need to do is say give me a substring and here's something I could do I could say substring from s. length divided by two all the way until the end s. length so this is now my code right give me a substring between the middle of the string and the end of the string you can see do I love Rainbow do I love rainbows there is an answer to this question I don't have a sound effect or anything but the answer is I think you know it's yes okay so uh um do I love rainbows yes so you can see no matter what I this is the first half this is the second half and I hit submit and look at that that's amazing I got this somehow those worked out to be the exact number of characters I don't see how that's possible but it did uh this is the second half you can see how that works I'm getting a substring of the second half so you can think of a lot of here's an exercise for you um what if you have something like this the temperature outside is 72° f write an algorithm that pulls out the number 72 without knowing that it's going to be the number of 72 so no matter what I type here every time I hit submit I get 72 21 50 how do you search for and and by the way also I could change this to a temperature or well the temperature outside is so it's not a fixed length how do you search for where is colon space is so that you know where the number starts and how do you search for where space degrees is so you know where the number ends and by the way it should still also work if I type in 101 so that's a programming exercise for you create a generic phrase of any length that and you need to pull out a subset of text of any of length out out of that phrase um this is just one scenario this has and by the way next week when I do a video tutorial about regular Expressions you're going to see a a totally other magical powerful power way of doing it okay so um this is the end of this uh video tutorial about strings there's all sorts of other things that I've missed this is just a small taste of it try some of those exercises try looking at the documentation page you know pick a random uh function like slice or search and see what a lot of these might require regular Expressions um and see what you get ah I forgot something on my list over here I want to briefly talk about briefly before I leave you in this video I want to talk about splitting and joining so let's just look at this this is an incredibly common operation that I need in so many videos and I could make another video about it but I'm going to leave it in this one so let's look at this because and and I'm going to get to more about this next week with regular Expressions so this is just a little bit of a so I'm going to use so I'm going to use right now there two functions that are part of the P I'm going to show you two functions that are three functions really that are part of the p5js library one is split one is split tokens and one is join now next week I'm going to show you how to use the native JavaScript split function to use regular expression so I'm going to kind of redo this but in this video I'm going to look at the p5js function split and show you why this is so useful all almost all of the text analysis algorithms that I'm going to demonstrate later are based on word counting and one of the things you need to do with word counting is split a paragraph of text and a multiple paragraphs of text into sentence chunks into word chunks that sort of thing so um I'm going to do that right I'm going to show you how to do that with split and it's actually quite an easy operation so um basically I'm going uh and I'm just going to go to the uh sketch right here um whoops there's a a a something whoops just missing here so I'm going to leave this this this this gives you half the text but I'm just going to do something over here in the console which is vars equals uh text field. value so now I have in the variable s rainbow rainbow boy do I love rainbows and I'm going to say split s just see what I get so look at that I say split s on its own I don't really split it but I get an array and I get an array with the entire sentence in there the whole point of splitting text is to take one chunk of text and split it into an array so what if I say s and comma space in quotes you can see now look what I have I have an array with each word as a separate element so I'm going to do a few things I'm actually going to do that right now in my code I'm going to say VAR words equals split s by space and then I can Loop through all of the words and do something with them individually I can say uh create P words index I so now you can see I get a different paragraph element for every word in there now let me add a comma in here and I'm going to hit uh I'm going to hit refresh and I'm going to add a comma in here notice how the first word has a comma H so what might I do in this case I might go to my code and I might say Okay split by space comma or comma space now look what happens I'm going to add the comma in there I'm going to hit submit now I just got two things rainbow and rainbow boy do I love rainbows cuz split by comma space and the only time a comma space appears is Rainbow comma space what I want to do is not say split by comma space split by comma or space and again a regular expression is going to be a nice solution to that but for right now without it there's a p5js function called split tokens and if instead of using split use split tokens it'll actually do that for you so I'm going to do this I'm going to put the comma in there I'm hit submit and you can see now it worked there's ways of retaining the delimiters not retaining the delimiters I'm going to show you more stuff about that uh in a future video but these are just the basic idea split split tokens and join by the way does the absolute inverse so one thing I can do is I could say I could now say words. uh sort I think it'll sort it in Array I think it'll sort it by the default sorting and then I could say uh uh s equals um join words and I think I probably might make a new array so say words equals words. Source sort and then I can say create PS and I'm going to comment this out so what I'm doing now is I'm taking this turning it into an array sorting it in alphabetical order putting it back together and then displaying it and you can see boy do I love rainbow rainbow rainbows and we can see this should be in alphabetical order alphabetical be in order should this so you can see here's a quick algorithm I've done something here here to take a a sentence split it up sort it by alphabetical order and display it back to the user I'm sure you could think of something much more creative to do with this Paradigm of text input and text output and in the next video I'm going to show you uh do a coding challenge about how to implement Jackson mclo dastic uh which I'll explain in the next video as well um as text input text output okay uh thanks very much and yes I apologize for not using Celsius in this video okay thanks for watching and I'll see you soon in the next one oh everybody's now going to leave this live stream and go watch the uh Apple live stream sorry about that I didn't get done is it really 1 o'clock already 1250 is it don't I have 10 more minutes hard if he wants to take a break and just come back and and go eat lunch and then come back in an hour um but uh I don't okay so sorry my shoe is untied I don't know I I need all my music selection I got to add all my music selection uh shoot my shoe is completely untied oh there we go can you see the top of my head I have a little bald spot there can you see it it's popping up okay um blowing my nose sorry everybody ah I this actually output isn't going through but I'm not going to worry about that right now okay um yes I see you guys I fixed it I fixed it I the chat's behind me um okay uh so dastic I was going to put some music on in the background but for whatever reason hold on this might be this might actually be a really quick fix uh there we go let's see if this works so this is random this is noise PE no random algorithm the actual random algorithm itself those numbers aren't related at all you pick like I'm picking random numbers between Zer and 10 9 2 7 6 1 9 4 8 9 2 1 3 I pick nine a lot apparently but with pearing noise I might pick numbers like this 2 3 4 3 4 four five six five 4 five six s five six s five six S 8 9 8 7 six look this is like pear noise performance art 2 1 2 four 5 5 this is like pear noise performance part 2 four eight but with curly noise I might pick numbers like this 2 3 Four 3 four five six 5 4ing noise that ising noise this ising noise that ising noise this this ising noise that is noise so this is noise that is noise noise that is noise so this is noise that is noise that is still silence I see that I'm Broadcasting I'm just about ready to do my today's coding challenge but I want to make sure sound is work okay you hear me great okay okay great thanks everybody uh all right I need something to boost my energy here uh uh okay uh stop over okay um Bo I'm all congested all of a sudden I think I'm getting a cold okay um sorry I'm trying to think of okay Jackson mlo uh oh I'm gonna go to the Wikipedia page I think and I think sorry everybody I'm just finding okay the song is loud okay apologize apologies for that okay sticker okay ah okay I'm going to do a coding challenge where I reference Jackson micho diic technique virtual Muse experiments in computer poetry I will explain what what a dastic is how it works I think I need the Whiteboard for that let me see if um yeah I'll I'm trying to determine what my best marker option is I'm trying to get some energy back I'm okay here we go if I step over here I can read it okay uh okay I gotta I got to do it now one of my restrictions for this is I'm going to do this without using regular expressions and just kind of basic string parsing um and uh but I will next week revisit this uh with looking at regular Expressions okay marker a bunch of different marker options some water cing rainbow Dan right you guys are still here watching enjoying this you're all watching the Apple live stream now which which is good okay here we go oh I need to put some uh my processing stickers up higher you can't see them advertise only the top stickers get featured I'm gonna have to work on that I need a new laptop just so I can redesign my sticker setup okay hello welcome to a coding challenge this coding challenge is going to be pretty different from other ones I expect this might be something that a lot of you watching my YouTube channel may not have heard of or thought about before but I'm going to implement something that called the he maybe he was 21st century too when did he die Jackson mllo 2004 I'm not going to say 20th century that was silly starting over again and I think I can just leave this I don't need to be zoomed in on this either uh okay um okay let's try this again hello and welcome to another coding challenge video in this coding challenge I'm going to implement ah oh wait oh no sorry I saw like something in my preview pane that was an overlay that's not this is going to be it you guys hello and welcome to another coding challenge video in this coding challenge I'm going to implement something called a dastic machine so the dastic machine that that I'm going to build here is going to be based entirely on a technique a diic technique invented and pioneered by Jackson mllo uh artist poet uh composer playright um who pioneered a lot of algorithmic chance operate techniques with around language to generate poetry um without the use of a computer so there's a long history of artists and Poets working with algorithmic computational methods or to generate language to analyze language and this is something that it's really easy to forget in the world of con of computers and learning to program that so much of this kind of stuff can be done manually and I encourage you to explore ideas similar to this with manual processes before you start to implement them digitally as a way of exploring and playing around you know there's another famous example is William Burrow's cutup method which is called the cut up because it's literally about making new text from folding and cutting preexisting texts and mashing them up together which of course you could do with a computer but you could also do with scissors and that sort of thing but um let me get beyond that a great reference for this by the way that I'll also mention is the virtual Muse experiments in computer poetry um this is a book that you can um I'll link both to Jackson mllo pages about Jackson mllo as well as the virtual news a book in this uh video tutorial but let me just read to you the description of the dastic machine um uh from excerpted from uh Charles O Hartman's book the process began with a striking phrase from Virginia Wolf the ways ridiculous in Picadilly this is going to be known as the seed phrase so in the program that I'm going to write I need a seed phrase uh he reread the novel this is referring to Jackson mllo looking for the first word that like ridiculous began with an R then read the next word following that had like ridiculous I as its second letter then the next word whose third letter was D and so on until he had spelled through the whole phrase so if that didn't make sense to you let me come over here and kind of diagram this out for you so let's say surprise surprise I have the word rainbow and I have some text like Ralph sat on that didn't work actually painful uh ferns okay I'm designing something uh I'm designing something to work precisely uh in a way that I could demonstrate this so let me look in this text for a word that starts with r aha Ralph let me work look in this text for a word that has its second letter a SAT let me look for a word that has its third letter I not on and ah but painful sat painful it's Fourth letter N Fe e or ferns so you can see this idea of taking this C phrase and finding words in the an existing body of text with just the single letter in the same spot and creating a new phrase out of that and this is a way in a sense of saying I want to generate poetry but I the writer don't want to play a sort of human being role in it other than sort of selecting the seed phrase and the source text let the algorithm kind of do the talking so to speak and this is I think that you as a as a viewer of this video I would encourage you I'll reference some other examples of this to generate your own system for doing this and see what types of outcomes you can get maybe you'll make a twitterbot from it that sort of thing um okay so coming back over here let's go and start with um I have an empty sketch here an entirely empty p5js sketch and I'm saying no canvas because I don't want to see a canvas I'm not drawing anything in this and I'm going to uh just find this here and you can see there's a I put a header in the HTML file Jackson mlow dastic and I don't see anything on the page so the first thing that I need to do is I want to get a seed phrase I'm going to let the the user type in the seed phrase so what I'm going to do in the HTML file is I'm going to say uh make a paragraph element and I'm going to say uh seed colon input uh ID equals seed uh Slash input and I'll I'll add I'll make sure it starts with rainbow so now we can see I have on the page uh seed and I started that with rainbow now I need to in my program get access to that and also I I I think it might make sense for me to uh add a button ID equals submit and submit will be the text of the button so I'm adding that in so now I have seed rainbow and I have a submit button and I want to attach ah so now I want to attach an event so this I have to do in JavaScript because I'm now if this is the structure of the page in HTML and now I'm just going to affect the behavior of the page in my JavaScript script code so I'm going to say uh I'm going to say VAR uh seed equals select seed VAR uh submit equals select uh submit and submit. mous pressed now I'm going to do something I haven't done in a lot of my other videos I tend to stay away from this I could just say like do the thing and then Define that function down here but I'm going to take this as an opportunity to show you something which is an anonymous function I'm just going to put the call back right in here oh that's very awkward looking but it's actually kind of a nice way of writing condens code when you click the mouse on The submit button button button the submit button execute this code that's inside this Anonymous function it's anonymous because it doesn't have a name so what do I want to do right there just to see that it's working I'm going to say create pced well obviously going to need to do uh an not seed but seed. Val the text of the seed itself and I'm going to have to do a lot more there of course but I'm just going to say that for right now so now if I hit submit we can see this page is doing some basic stuff that is at least getting the seed so I have the seed right now I have this seed in my code I need some sort of source text to use to be the words that I search for so the way that I'm going to do that is I'm just going to load from a text file and I happen to have a text file here which just has a lot of text from Wikipedia page on rainbows so I'm going to do it the easiest way possible in my code with just preload so I'm going to write a preload function and I'm going to have a a global variable called Source uh text I'm going to kind of call it a goofy name I'm going to say Source text equals load strings uh rainbow. txt and one thing you might recall uh if you watch some of my other videos is that the load strings function loads in the text but loads it as an array so it gives you each line in that text file as an array and so what I'm going to do in setup is once that text is loaded I'm going to say Source text equals join Source text with the space so I'm going to get rid of that array and join it so I have one long string so now I have one long string and I just got to make sure it's there I'm going to also say create P Source text so now if I hit run I if I reload the page I have a seed and I have the source text so now I've set up the page that's just sort of step one now I actually need to implement the dastic algorithm okay so let's go back to our code and do that this is going to be fun and actually I just realized here's something that I want to actually do I want my for my diticom I want the source text not to be one long string but I want it to be just a u array of words a list of words so I'm going to um I'm going to create create a global variable called words and I'm going to say words equals split and I'm going to use the p5js function split tokens and I'm going to say split that Source text up by and split tokens says whatever these are the delimiters the second arguments are the delimiters I want to split it up by space comma exclamation anything that's basically um you know something that's not uh so you know I could I could do this much more effectively but I'm just going to do that right now now and I'm going to do this and I'm going to look just in the uh debugging console and I can see I have an array of basically many many many many words so I have all the words of an array with every single word as a separate element in that array and you can see that it's uh 2,132 words long so this is what I'm going to be able to use now I'm going to search through that array to find words that have and by the way it's probably going to find rainbow over and over again but I'll I'll deal with that later because I'll give it a different seed phrase Okay so here we go um now what I want to do is instead of creating those paragraphs I want to say let me execute a dastic with what I want to pass in the value of the see the seed and I want to all of the words so I'm going to write a uh and I'm going to um uh I'm GNA have that function take a seed and an array and that function will return a the the the results of this so I'm going to come back over here and I'm going to say what for VAR I equals z i is less than c.length i++ and then the character that I'm working with is seed car at boy um this is a function that's part of the JavaScript string object that I think I neglected to mention in some of my other videos If I say car at I I want the character at index I right and in a string all characters have an index index zero index one index two so if a string is five characters long like hello the the index the indices go between zero and four so once I have that I want to then have another loop and what do I want to Loop through I want to Loop through all of I want to Loop through every single one of the words and I want to say if C if words index j. Cari equals c then I have found a word right I found a word that has its own character at the same spot I as the character I'm looking for and once I do that I'm just going to say console.log just to see if this kind of idea works and break so here we go I'm going to run this program now I'm pretty sure uh I'm going to run this we should see a bunch of things um so look at this I got rainbow seven times so first of all let's do a different seed phrase uh this is you know testing one just do testing one you can see I got t e s t i n uh o e and that's all so you can see you can see this worked now I got some of them twice so here's the thing one thing I need to build into this is I need to say after the reason why I got rainbow seven times it's because my Loop starts over every single time so every single time I find a word I go R matches with r then I go a matches with a so one thing that I need to change about this is I need to while I'm doing this keep track of some things so I need first of all I need to have a PHA I I want to kind of have a phrase which starts like this and when I find the word I want to say phrase plus equal I want to concatenate so the plus operator joins two strings together I'm going to say plus equals words index J and then I'm going to say return phrase so one thing that's going to be nice about this now that I've done this is I can stop using the console for debugging and I can say uh create P phrase so let me run this again and you can see I got rainbow rainbow rainbow rainbow rainbow rainbow rainbow and I say uh test I got that meteorological dispersion that so one thing I want to do by the way is I also want to uh add a space so I'm going to do this a sort of silly way but I'm just going to have two lines of code there and you can see rainbow rainbow rainbow rainbow rainbow so now what I want to do is make sure I look for the next instance of a word after the first one I found so um I'm going to keep track of that index uh or like current word equals zero so I want to start my Loop when I look through all the loops from current word so I want to go from current word to the end of that array and as soon as I find one I want to say current word equal J + 1 I want to go to the next word so instead of this Loop of searching through all the words always going back to the beginning I want to save where I last found one and start from the next one so this should do this rainbow caused rainbows rainbows rainbow rainbow rainbow so I'm still getting a lot of rainbows but I can now say things like um uh I love yeah um is do unicorns exist question mark so during good about during moonlit numerically Direction encounter dispersion brightness now amazingly I'm not getting any errors here and I probably should do some error checking like what if I got to the end of the array and I don't have any more where more to look what if no word exists with that in there um so I'm going to sort of leave this as that I'm going to release this code I I you know another thing that I could do is track all the possible um words that have a o is the second letter and I could always pick a random one so that each time I hit submit I get a different one that's something that you might add to this um arrow cheing is something that you might add U I don't know if I'm if there's anything weird happening when I have a space because I'm actually space is technically a character that I'm checking so question mark is in there but it seems to be working um let's just uh uh d o space u as fourth letter so you can see so I got do some stuff clean up that sort of way um uh um so right so um so I probably missed some things uh but I I encourage you who are watching this video to play around with this code make your own diticom generate poetry share it share it with me share it with the world uh and explore other types of ideas and I'm if you're in the programming from A to Z playlist the next video I'm going to talk a little bit more about this and a homework assignment for this set of material and some other types of techniques and Al historical algorithms like the dastic that you might look at as well okay thanks for watching and I'll see you in another video maybe perhaps someday okay everybody I think I did that successfully um which um I I want to see how many viewers Have I Lost there's still 74 people watching so I need to do one more video um give me a second here okay so the last thing that I'm going to do today the last thing that I'm going to do today is talk about a homework assignment for those of you who are following the course and way I want to do that is I want to look at flesh index cutup machine eraser poetry machine uh um n Plus oh okay okay all right last video of the day hold on okay ulipo ulipo um n+ 7 technique uh cutup machine flesh index calculator the dastic uh uh n plus 7 this is a great example machine hold on are you sure and where's my example ah sorry everybody when I get to the end of these live streams I can barely keep it together okay okay okay all right what are you doing I'm losing my mind is what I'm doing okay here we go wrong sound effect but whatever um I'm going to cycle the cameras I'm going to finish this off for today action please uh yeah modulus modulus strings. length would be a great uh a great tip for adding to that previous program I wrote okay hello I think I have to use this like musical beginning gets me kind of it feels like I'm making a video hello uh this is the last video for this week's session of no the week is irrelevant because people are going to be watching this on YouTube later musical okay hello in this video if you're choosing to kind of follow this programming from a toz playlist as a course that you're doing over some period of time I'm going to talk you through homework assignment or exercise that I think is useful to do before you move on to the next set of videos and if you're interested in uh participating in a slack Channel where you can share and discuss these assignments uh please check this video's description for a a link to the patreon uh crowdfunding system that I'm using for that particular slack Channel but of course you could just do it and share it with me on Twitter or in the YouTube comments and i' would love to see the things you guys are making so here's what I think you should do number one is I think um uh okay so I in in the previous coding challenge where I implemented Jack mllo dastic technique one of the things that you can try to do for this homework assignment is invent your own constrained writing technique so constrained writing is a sort of form of writing based on an algorithm or some sets of constraints uh there's a French Collective of writers known as ulipo um who pioneered a bunch of different techniques um one of them is known as the N plus 7 technique uh this is a nice uh website which I will also include um which which uh implements this particular technique uh in French it's actually referred to as s plus 7 um and the way that this work n plus 7 you look at a body of text you look for every single noun in that text you find the the noun for every noun in a body of text you look up that noun in the dictionary find the seventh seventh noun after that one and replace it back into the text and now you have a new text sort of with randomly generated new nouns based on the order of appearance in a dictionary so you could try to one thing you might do is just Implement one of these algorithms like make your own n plus 7 web page you can see this web page works very similarly to um to to a lot of the examples that I've demonstrated for you uh another kind of famous example is uh this is one of my examples that you can find in the a toz uh GitHub repository this is using William Burrow's cutup method which is actually a physical method of cutting up text and folding text and mashing it up you can see that I have a slider which sort of determines how much of the original text to keep you can drag a file in use a textt sample so one thing I'll mention is this frame of reference is a good reference for to use where it's kind of giving the user a lot of options enter some text drag a file in use a preloaded text sample um an eraser machine eraser poetry not to be confused with the band eraser Q eraser music now um is a technique I'm going to load just load a text sample in right now which is a spam email that I received at one point and you can see I'm using Dom manipulation to click on all these words and actually uh erase them but I could come up with another system like erase every seventh word or erase every verb or erase every word that starts with e so and you know I can also by the way based on how I'm doing this keep the spacing or remove the spacing and what types of sort of generative poetry could you create out of the Eraser algorithm so but even though I'm showing you these digital versions of it you might want to wait until next time after you've watched the regular expression videos to actually Implement your interactive webbased version of it as a constraint on yourself invent your own algorithm to do by hand get a newspaper get a magazine get a book invent your algorithm write the instructions for the algorithm and execute those instructions and get your new text and then present those instructions and present the result on a web page so think about one of the things I'm asking people to think about is how do you have a selfdocumenting web page so instead of presenting kind of the result and then having a blog post that explains it could you a web page that kind of has the instructions has the result kind of documents itself and you and something you might consider using is GitHub pages to host it so get yourself set up figure out GitHub Pages get yourself an account review HTML and CSS for yourself think about creative constrained writing techniques and generate um generate the content and release it online um yeah so uh give that a try uh share it with me however you might find it useful to share and I encourage you if you want to ask questions or discuss your work uh with me and a group of peers um you know consider joining the patreon slack Channel as well if you're enjoying what you're kind of watching so far and I'll be back in a next set of videos they might be there by now if you're watching this much later than when I've recorded it but uh otherwise we'll be back about a week from now okay and uh enjoy and I will see you sometime soon thanks for watching okay uh I think I I think I'm done for today this was a um what time is it it is 130 so this was at least this was about I say about 3 hours and 15 minute live stream which is about 45 minutes longer than a class at ITP I'm completely exhausted uh thank you guys for sticking with this I suppose there's like a new iPhone now that I could buy or something because I don't have enough like Apple devices all around me um and uh I'm going to see you guys next week if you if any I'm going to it's going to take me a minute to kind of get myself situated here I'll leave the stream going for a minute uh if anybody wants to ask a question uh please do so I think I've lost most everybody are you there are you there YouTube viewers it's me Margaret I don't know if you'll get my reference but uh I can turn my phone off of airplane mode now um I can see all these notifications that are coming in etc etc uh I think people are saying yep like you're still watching okay did that come through the homework assignment do people miss it um Roberto in the chat writes in short learn HTS CSS and how to use GitHub all in week on your own so that sounds a little harsh I think you were probably just in a friendly way translating what I said but uh just so you know I have resources and videos for all of those things that are part of this week's material they're just not what I recorded today uh all right so I'm going to go uh thank you for watching um I'm GNA put on my background music I guess I'm just going to close out my windows um I'm going to just see if there's anything in the chat people are saying thank you which is very nice positive feedback is welcome and encouraged negative feedback is also absolutely welcome and encouraged any feedback is welcome and encouraged uh you know be nice if you can but uh positive negative constructive criticism uh uh uh when will the code of this session be loaded great question um I will okay so a couple things this is confusing and uh I I'm I'm I don't know if you're actually still there watching but um so the code that should be referenced in these videoos descriptions should be in two places one it should be in this a to z F16 repository which is my example repository for the class so basically everything that I'm doing in this video session there there there should be like duplicate examples that are mostly similar in this repository and that's already there but I will also if I go to my uh coding rainbow rainbow dasc code what I will do is create a new folder probably called A to Z uh obviously the coding challenge code will end up though in the challenges folder but the I'll get this stuff up on GitHub within the next 24 hours uh and uh there we go uh it answered that question I love that people thought the back of my shirt was dirty it's the it's a processing design uh support processing in p5js consider making a donation it's a plug that I should always uh uh make uh people I love that people want to support me and I appreciate that as well um but if you another way of supporting me um directly or indirectly is I don't know why is not sadly the processing Foundation website isn't loading for whatever reason but I encourage you to do that um okay that's it for today uh thanks for watching again there's the pring Foundation website uh support encourage you to do that prosing is a nonprofit um 501c3 United States uh Corporation goodbye everyone and I look forward to seeing you in a future session