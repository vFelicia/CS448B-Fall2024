okay bye I'm here to talk more about bubbles bubbles but really I'm here to talk more about objects in a race we have a constructor function that makes objects we have a empty array every time I click the mouse I get a new object that goes into that array now what if I want to delete objects from the array now in the previous video I referenced the splice function which is a function that's built into JavaScript as part of the array object it allows you to splice something or delete something out of an array the issue here is how do you choose when to delete something and which thing to delete so I need to create an artificial scenario you know some scenarios might be the thing leaves the screen so you can remove it that another scenario might be it's like you're have some game and things collide and when they collide they one of them deletes but here what I'm going to do is have the objects fade out so the first thing I want to add to this program right I should restart it which is just I want to add the fact that I'm going to click and make these objects and as soon as they're born into the world they start fading away and disappear so there's a difference between not seeing them and having them not actually exist in the array and that's kind of what I want to look at in this video here so audio is still working I'm recording this is good ok so I'm coming over here and you know the last video I change the object's color now all I want to do move the mouse here is change its alpha so you can see that's built in to be 100 but what I want to do now is add a variable this dot and I don't know I'm going to call it a lifespan or timer let's call it lifespan kind of like you know this is sort of the classic particle system thing you may call these particles they exist for a period of time they fade away their life very fulfilling and meaningful they're like 20 seconds so being pixels with a screen they led a full life that we don't feel ok anyway and then and then you get rid of them from the array you do that with with without any emotion or whatever okay so the lifespan let's started at 255 and if I put this dot lifespan here I might add something to this move you know maybe it makes more sense to call this function and update function so updating the life cycle of this particle some call it update meaning I update its location and I also update its lifespan and all I'm going to do to its lifespan is say by the way it means equals itself minus 1 so you know I'll be a little bit more explicit about that and write that in so you can see it so I'm just going to subtract 1 from the lifespan x + y change randomly 1 from the lifespan so if I now run this program and I click oh I'm defined as not a function line 15 oh wait of course so here's the thing oh boy would be nice if this error message were a little bit better line 15 that seems right so unfair that it's giving me is actually the error in sketch KS this is another not just like bug report but something that I might file and github for the editor to think about how do you deal with which tab the errors in something to think about so if I go over here to line 15 remember I change the name of the function to update but still in the code here it's called move so I'm going to change this to update I'm going to come back over here and now you can see as I click these objects are fading away now on purpose I've left the stroke not fading I'll add that in later because what I'm doing now is I'm visually showing you like is the object finished it is when it's faded to black but it's still in the array right if I said no stroke it would look more like what you might expect it's fading away and when it fades away it's gone but it's still in the array and you know which is fine it works but if you're making if you're if this is your installation and you're going to set it up somewhere or it's your webpage or whatever and it's going to run for like a long time and you make zillions of objects you want to remove them from the array it's going to make your code run very very slow to like operate all these additional objects that don't actually need to be on the screen anymore so this is what we need to do I'm going to put the stroke back in so we can see that and then later I'll remove it so how do I actually remove the objects from the array when they fade it out okay so let's think about this for a second over here so here is an array I'm going to draw it like this and you can think of the array as having a bunch of particles in it a b c d e so what happens when you call splice so this is index 0 1 2 3 4 and if the array is called arr if i say ARR dot splice the arguments i need to give right splice is a function it's part of the array object just like you can push into an array you can splice something out of the array if I say index 2 that means I want to delete this element and then the number here is how many elements do you want to delete so in this case I only want to delete that one element so the number is 1 and most examples most scenarios that's probably what you'll want to do but for some reason I wanted to delete 2 and 3 or 2 and 3 and 4 I could put 2 or 3 how many elements pass number two so here I just want to delete one element this will remove this element from the array and now the array looks like this a b d e 0 1 2 3 so you can see when you delete something from the array these elements stay in the same spot these two elements shuffle over I'm focusing on this because this actually makes a difference in how you loop through the array and check whether or not to delete it so so coming over here I'm going to press this button let's look at where I want to delete this stuff from the array so this is the this is the bit of code right here where you're looping through every single object in the array start I equal to 0 go to the end of the array update and display them so what I need to do is figure out if I want to delete something there so let me zoom in on the code here for a second and say if something bubbles dot splice index sorry index i1 element right so as you're looping through the array for every element I element 0 element 1 into element 3 check to see if it should be deleted if it should delete that element so how do you check if it should be deleted here's an idea how about if that value that's storing its alpha is less than zero right so this value lifespan which starts at 255 is counting down when it gets to below zero this alpha zero I can't see it on the screen that's probably when you want to delete it so how do you access a property of an object from outside the object with the dot syntax just like you're saying bubbles update or bubbles in dictionary bubbles index dot update or bubbles index I display I can say if bubbles index i dot lifespan is less than what 0 it's counting down kind of like when something gets to the edge of the screen change its speed here I'm saying when something's alpha gets down to zero delete it from the array when this bubble I lifespan is less than zero delete that bubble I splice that bubble i from the array so let's watch this now I'm going to click and you can see as I'm clicking on them when they get down to zero they actually leave so even though so they're no longer in the array they're gone the size of the array is now zero I can keep adding objects and they will all fade away disappear now I could remove that stroke and you won't notice them disappear like that because I'm only removing it once the Alpha is all the way to zero but I have actually caused a little bit of a problem it happened to work this is fine and this will work in most cases but I did do something that's kind of a mistake and I want to like talk about that for a second because then you want to change the way I'm doing this loop so what's the danger here look at this loop here what am I doing here I am doing something to every element of an array from zero to the end of the array from zero to the length of the array and while I'm doing that loop I'm like modifying the array like you could imagine like if while you're looping you're adding things to the array you'll never exit the loop because you trying to get to the end but new things are going to the array so anytime you start manipulating the array itself in the loop you could walk into some danger this happened to work but there is people are applauding outside hope there toughly not applauding me um you probably couldn't hear that but but any time you do that you what you run into a little bit of danger so let's return to this diagram and now let's pretend that we're looping I'm looping so first I starts at zero and I ask should I delete element a no I should not delete element a okay now I becomes one should I delete element one no I should not delete element one so now I becomes two should I delete element to see yes I should delete element to index to see so delete it and now the array looks like this what does I become next I becomes three should I delete element E no I should not I'm done do you notice what happened what did I miss I never checked element D because when I was two I checked element C which got removed then I became three but when you removed something everything shifts over so D is now in two I skipped D and went right on to E so in the end it didn't really matter because a second later draw is going to execute again I'm gonna look through the array again and I'll catch that element but this could in other scenarios really caused you a big problem the solution to this is actually go and it's a nice exercise to like do this anyway the solution to this is to go through the array backwards so if you start here and go backwards if you delete this element doesn't matter that all the elements shift over because you're going in that direction so how to move through an array backwards over here all I need to do instead of starting at 0 what do I want to start at the end of the array or bubbles dot length minus 1 where do I want to end my loop I want to end my loop knot at the end of the right but at the beginning which is 0 so X I greater than or equal to 0 and I don't want to go forward through the loop right I want to say instead of I plus plus I minus minus so now if I run this you know visually it's the same exact result that you're seeing here but but at least now that error has been fixed you can't really tell the difference in this program but I've but it could really matter plus this is good this is good for you to think this way because how the loop is working what the array is doing these are things that you always need to think about now I really should just be done with this video and you could stop now you can turn it off I'm going to do one more thing though which is that I there's something about this that I don't love is fine but you know here what's going on here notice how I'm calling update and I'm calling the display function but here on accessing lifespan directly and then checking if it's less than zero there might be a more complex scenario that determines if an object should be removed or not so rather than start polluting this area with lots more code after do a calculation a distance calculation is far from this etc that this worked for just this what might work better is if I had a function in the object a function called like is finished or finished or time to remove write a function that tells me whether or not to delete that object what I'm saying is what I want to do is write a call a function let's just call it is finished all right so I'm executing a function you can see this reads nicely if bubbles index I and we move this out of the way if bubbles index I is finished remove it from the array so now I'm farming out the job of determining is the Alpha below zero or is it offscreen I could have multiple possibilities to a function so I have to write that function where I have to write that function in the object here I need to add a function I can ever add anywhere this dot is finished whoops equals function now this comes back to a topic from an earlier video about a function that returns a value what is this function do it I should really just move I'm still standing in front of this what is this function doing this function is answering the question is it finished or is it not finished the job of this function is to return true or false right this right here is a boolean expression bubbles index I dot is finished should evaluate to true or false so if I were to say if I were to just write here return false and I run this code the bubbles will never ever ever be finished because is finished always always always says no I'm not finished return false return false return false I need to build a logic of checking the lifespan right here right if like if this dot lifespan is less than zero return true otherwise return false so this is a really classic scenario where you need a function that returns a value again in this particular scenario it's a very simple situation only checking lifespan less than zero but you can imagine a much more complex logic to determine whether you should return true or false if it's less than zero return true otherwise return false meaning out here where I call this function is finished if it's less than zero but you'll get true this will evaluate to true and it will get deleted otherwise it will evaluate to false and it won't get deleted same as we had before but that boolean expression is now essentially in the object and I get a true or false back from the object so let's just let let's do a couple things let's first confirm that this works I'm going to add a lot of objects and see that they're disappearing when they're faded out they are and then I want to just finish this up with a nice little bow on this example and just take out that stroke so I'm going to say no stroke so now all now what I'm seeing is I can add as many objects they exist on the screen they fade out when they fade it out they're also deleted from the array itself which again to the enduser doesn't matter but you've made a more efficient program one that over time won't just fill up this giant giant array and iterate all these objects that are no longer being used so you know there's a bunch of things you could try here you could try to do something where objects to get to leave and when they leave the screen that would be kind of like a nice thing to try or some other set of conditions you know how do you have something get deleted when you click on that would really like you know work well with the previous video I just made that would be a great exercise so think about taking this idea have your own object when do you delete them when do you not bleed them do you need to loop through the array backwards those types of things and see if you could get that going okay that's the end of this video is 15 minutes exactly what I said it would be and I'm going to turn it off now