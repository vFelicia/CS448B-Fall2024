okay I'm back I just saw a question in the live chat that's going on right now saying what's a memory leak guess what you're gonna find out what a memory leak is in this video in particular how to manage memory if you using tensorflow not JSF here's the thing I live in a world where I generally program either in processing which is built on top of Java or I program in Java and be fought with the p5 library in the language JavaScript and I don't have to worry about memory management I mean often do but most of the time I don't there's something my friend my friend Liv lives in the computer their name is garbage collector and the garbage collector just kind of is always there checking to see if I'm using any of my variables anymore and if I'm not collects that memory and reallocates it for somebody else a memory leak is something in your program which continues to allocate memory over and over again and yet where you don't need to you need to remember that stuff and so you're filling up the computer's memory and it's just to infinity and eventually the memory will be full and your program will crash your computer will crash I mean maybe it's not a leak technically if you can keep if you do you need to save all that stuff but most the time like if you're creating a variable that's just keeping track of the computers to a score in a game and you're reallocating new memory for that score over and over and over again and you don't need the old score you should be allocate that memory and if you're programming in like a lowlevel language like C or C++ you sometimes have to manage this memory yourself higherlevel languages that are more apps that have a layer of abstraction the browser is there to protect us I think the Java Virtual Machine they have a garbage collector that handles some of this memory Madren tests are dope flow chess is in this sort of funny inbetween place and we're programming in JavaScript but tensorflow digest is doing some highly manual management of the memory of your GPU to do all this fast math operations so we have to make sure we carefully think about how our allocating memory and explicitly deallocate memory so that's what I want to look at so let's take a look we're going to do this is gonna be exciting we're gonna make a memory leak happen and then we're gonna fix it yay all right so uh what so this is the car that I had before let's actually keep this this is kind of interesting but what I'm gonna do instead is I'm gonna take all of this code and I'm going to put it in draw what's draw you might ask though again there's no reason for me there's no particular reason why I need to be using p5 the p5 library with tension Fletch s right now but one of the things that p5 library has it has this animation loop if you write the function draw it's going to execute that function 30 times per second 60 frames per second depending on the situation so I just want to hit save and now I'm just gonna hit refresh so in theory this is chugging along right now so the question is how do i look at how much I mean there's I don't see anything like I could like maybe what I want to do is do like console dot log hello just to make sure it's like running and we could see the hairs I'm seeing hello over and over again over here over and over again in the console so it looks like it the programs running fine it's running fast no problem let's look and see what memory it's actually using so there's a lot of tools up here whoops no here that I don't really know how to use for evaluating the performance of your webpage in the developer tools I'm gonna go and you up here under window and go to task manager one of the nice things about tattle oh my goodness we definitely have a memory leak okay I think and I think I filled it up I think probably the GP so the memory footprint so let me scroll this over here so we can see these are the various things the browser is this is the browser as a whole so this is the regular computer's memory the tensorflow documentation tabs using 94 megabytes fifa but the GPU which is just filled its way up to 2 gigabytes really fast let's try let's try setting the framerate 2 to 1 and refresh the page and let me go back to the task manager and maybe now we can see Wow it's already at two gigabytes okay so something was going on with the browser probably I had filled up the memory somewhere else so I just actually quit Chrome and restarted it so now you can see the GPU is using thirty two point eight megabytes of memory which isn't that much and maybe over time it's gonna like to go up because I make it oh oh actually no it's not because I also in testing things I commented out sorry I comments without all the tensor stuff so let me put the tensor stuff back in right and now let's take a look at the GPU memory so I'm gonna close the task manager I'm gonna hit refresh now I'm gonna go to the task manager again and I'm gonna look here that's it I'm gonna look here at this number so we can see I'm using some memory maybe it's gonna go up maybe not but the thing is I've got very I'm using like a very small amount of numbers so really what tensorflow digest is designed to work with the reason one is to work with large amounts of numbers so let me go back to my code and let me just say what if instead of having 15 numbers I'm gonna have 15,000 which would be 500 by 300 so I'm gonna have a 5 to 500 by 300 matrices transpose one of them and do matrix multiplication so let's do that let me now let me hit refresh one weird it's very hard to demonstrate whoops oh not 50 150 thousand 15 that whoops oh that should actually be a hundred fifty thousand let's do that one hundred fifty thousand that's what I meant let me hit refresh let me go back to the task manager and now let's look at that memory it's going up little by little it's going up now let's say I was trying to do that 30 frames per second let's get rid of this frame rate 1 hit save close the task manager the task manager I feel like needs to be and I'm gonna go back and open up the task manager of my last time demonstrating this and now I really want to see this memory leak I want to see this number go up 63 66 okay so I let this run for a little bit we could really see the memory leak is happen happening you know this is only gonna go up it's never gonna go down so one of the things now there's uh I'm using the task manager the truth of the matter is and I'm just gonna I'm gonna type in here no loop just to shut this off for a second the truth of the matter is tensorflow digest provides us with a mechanism to check this as well so I can also say TF dot memory let's actually go to the API API reference memory TF memory and I can look at the number of bytes allocated the number of tensors this tight kind of thing so let's actually look at let's just look at number of tensors so I can say I think TF memory dot num tensors I can do maybe it's just is it a function or is it of property let's try this console.log this oh let me get rid of the hello so you can see here these are all the tensors being stored and they're going up and up and up the good news is there is a way to get rid of tensors that you don't need anymore there are two functions okay probably there might be more than this but there's two functions that I want to talk about as they relate to memory management there is the function called dispose and there's the function called tidy and there they do the same thing they clean up memory that's not used but they do it in a different way so let's look at how that works so coming back over here if I go into my code and I say like these are all my tensors a b b b and c i'm gonna call this v underscore t cuz that's actually like sometimes I feel like a naming convention like transposed to B this is my own naming convention and I'm gonna say a dot dispose B dot dispose C dot dispose and B underscore t dot dispose so this is me manually despo after you know this is like something meaningful here like I want to do something meaningful with these tensors and then I'm done with them I want to dispose them so now let's run this again I'm gonna hit refresh and look zero zero zero zero the agro tensor stored in memory and in fact if I go to the task manager we should see load up please that the GPU process is not growing it's at 229 megabytes and it's not getting any higher there is no longer a memory leak we have correct fixed the memory leak the thing is so that's good that's step one we've talked about dispose the thing is you might be writing a program using tension flow to ask more you're just making tensors like crazy you're just tense or happy and so really having to manually keep track on everything and call dispose on everything can become rather unwieldy and that's where TF tidy comes in so TF tidy is a function that you don't call on a particular tensor but it allows you to wrap a bunch of code in that will get cleaned up when it ends what I mean by that is I can say TF tidy my stuff and then I can write a function called my stuff where I do all of this so what this is doing is it's saying execute this function my stuff but make sure you tidy it up after you're done so let me run this and see what happens and you can see I still have zeros and just to be sure that this function is running and now we could see that function is running here's the thing you're not gonna see anywhere in any tension luggage as examples it written this way so you noticed yeah I'm just going to do a couple quick steps here I wrote a named function and past it into TF tidy I could more likely you're gonna see an anonymous function that doesn't have a name passed into TF tidy like this and even more likely than that you're going to see that arrow syntax so I encourage you to check my video on arrow syntax but this is what you're typically gonna see this is ah inside of the draw loop every time I want to do some stuff some meaningful stuff with my tensors but whatever I do I want that to be cleaned up alright let's test this one last time we've got TF tidy I'll hit refresh and once again zero tensors let's put one constant test equals TF oh no whoa look at this this should be tensors 2d by the way I'm surprised it didn't pick up it didn't give me an error there oh I think that's the same error that we filed a bug report at and that's been fixed maybe and maybe I'm not using the most recent version of tensorflow jjs is there a point xi no but when there is one that will be fixed signor me so now I'm going to go in here and I'm gonna say TF tensor to D values shape and I'm gonna run this oops to lower case D and now we can see ah I'm creating all these tensors I have a memory leak these are getting cleaned up but I could you know manually dispose of this one I everything's been cleaned up or last piece this one could go inside of Tidy and then there we go alright and by the way I'm the chat is reminding me that there is a function called TF keep so I probably if inside of TF tidy I could use TF keep if I have all this stuff happening but I want to make sure to keep this one so this could get very complex very fast and I'm really trying to just give you a cursory overview here and hopefully as I start to build some examples where I'm trying to do stuff with tensor flow not chess it'll make a bit more sense as we're using this stuff in the world okay thanks for watching see you in a what's next on my list oh the layers API alright so I'm gonna talk about the layers be i next you