hello in this video I'm going to demonstrate some really basic hand tracking with the might with the Kinect and I'm going to make a particle system come out of my hand that's what we're going to look at in this particular video so in the previous video what I did is create this sketch where I calibrated a minimum threshold and a maximum threshold so I'm only looking at depth pixels between those values so if I stand exactly here and move my hand around I can you can kind of see a pretty clean outline of my hand of course this breaks down if I stand too close or if I stand too far away but you know and so I should mention that ultimately this type of hand tracking might be better suited for the official Microsoft SDK now I'll get to that eventually using a PC and a different processing connect library but I think it's still nice to see these examples of how you can do this stuff with the raw depth okay so let's look at how you might do this so this is where we are we're looking for all pixels that are in between a minimum threshold and a maximum threshold so how might I find the center of all of those pixels right here in the center of my hand well the way that you find the center of something off sometimes called the centroid if you want to set sound like you're from the future let's look at the centroid is by finding the average location so let's say we have a collection of pixels you know that are loosely this is some strange like three fingered hand right these are all the pixels we care about we can plainly see that this is the sent about round the center but how would I find out the average well let's say you just had these X values this is the x value 0 3 you know 4 8 12 to find the average of some numbers add them all together and then divide by the total 0 plus 3 plus 4 plus 8 plus 12 divided by 1 2 3 4 5 divided by 5 is the average so if we add up all add all X's and we add all Y's and we divided by total pixels not the total pixels in the entire image just the pixels that we've picked out that are inbetween this minimum and maximum threshold then we'll find the center that area of pixels so let's look at that how do we inside that loop add up all the X's add up all the Y's divided by the total number of pixels it's actually a pretty simple thing to do this might be the shortest video I've ever made I'm going to start I need some value to keep track of the the sum of all the X pixels so I'll add that in then I need another variable to keep track of summing up all the Y pixels so I'll add that in then what I also need is just a total pixels 0 now I'm making all these floats because I think it's going to be a bit more accurate to use floating point math it doesn't really matter they could technically dig their integers there's no like pixel 3.21 but Zillow simpler work with floats so this value is where I'm an add up on the X's this guys we're going to add up all the Y's this is going to be the total number of pixels remember that's not a fixed number like depending on where my hand is how many pixels is it picking up that's that's going to be the total once I have that it can divide some X by total sum Y by total and that's going to be average X and average Y so let's look at that so right here these are the pixels that count right these pixels right here are the ones that are pink those are the ones that are between the minimum maximum threshold that X is greater than 100 is just to get rid of the wall that's over here because the wall is hundred pixels and over so in order to do that now I'm going to say right in here I'm going to say sum X plus equal X sum Y plus equal Y I'm literally just adding up all the X's adding up all the Y's and then total pixels plus plus so for every single pixel just add one I need to add up the X values for the X the Y values for the Y and then figure out how many pixels are there and then at the end what do I got I don't need to draw this text on the screen anymore what do I need to say I need to say the average X right the average X is the sum x divided by the total pixels the average Y is some Y divided by total pixels and then now why don't I just draw let's make this a different color why don't I draw an ellipse at average X average why and one hunt I don't know what's what size should that ellipse be 64 by 64 so let's run this you can see there's a circle it's kind of going crazy right because there's nothing in but now you can see that circle is always around the center of my hand now one thing to notice if I put two hands here it's the center of each so the minute maybe I'll talk about how I might deal with that but you can see now I'm getting now it's not the center of my hand it's the center of all the pixels it's seeing so if my arm is in here it's getting the center but if I position my hand in a pretty good spot you can see I can get some pretty accurate thing going on here so let's make it do something a little bit more interesting just for the sake of I don't know this I don't know if there's a huge point to this but here's what's didn't I didn't I just fix this ah what's wrong here everybody I did this a second ago it's fine um so this is an example of a particle system where all the particles are coming out where the mouse is and you can see right here in the code there's just a little bit of a simple loop poetic comb it says add particle app Mouse X mess Y right so it's just as easy now as bringing all this particle system code over and saying instead of adding the particles that Mouse X mouth Y adds about average X average Y so let's see if we can make that happen I'm going to bring I'm going to do a little quick little I should have probably do like the cooking show thing where I have and now coming out of the oven are already premade this but I'm just going to copy paste everything over real quickly I'm going to bring the particle system object I'm going to put this in my setup over here and I'm going to put this stuff in draw and at the end here and then what do I need I need all this particle code so I don't actually need this camera params tab for this example Oh hold on a hand tracking sort of particles to call this I'm going to get rid of this tab can't camera prams and then I'm going to a new tab I really shouldn't be doing this in the video I pick a crash processing hold on no everything's fine I'm at a new tab god this was not this was not good you fast forward fast forward a minute I'm going to move the particle system over that was the particle class and a good at Duke it doesn't matter to move the particle over just imagine that I did that correctly I'm going to run this we can see right the particles that the circle is following my hand the particles are following the mouse how do I make those do the same exact thing now all I need to do is say make the particles not at the mouse but at average X average Y and you know what let's let's actually add about 10 particles per frame to make it kind of make more particles and let's run this and we can see now as I put my hand here I can like control where the particle I can make this like fiery thing come out of my sock fiery but come out of my hand so you can see I'm now using my hand to control particles coming out I could do my tada dance and it works with anything like I can I can have part like this stuff like emanating from my Bubbe's like alien and like bursting out or something I don't this is all getting a little bit weird but you can see it can strike this pose and it's running kind of slow because I'm drawing like so many circles on the screen was a little bit unnecessary to like do that much but you can see anyway so I can make the particles move faster you can give to get where this is going here so this is one example of what you can do by having a kind of specific setup knowing where all the pixels are threshold again finding the center of something this is what you can do now let me say a couple more things before I go into the next scenario number one and let's let's turn the particles off for a second number one is we have this issue of one hand two hands the thing in the center well on one hand this is kind of cool and like I am a magician levitating a ball rub I mean I forgot that I was making a video for a second I'm one hand you that sort of in effect on its own feature not a bug type thing on the other hand you might actually want to have a circle for each and and in that sense you need to employ a more sophisticated blob detection mechanism for example you don't want just the average of all of the pixels you want the average of a bunch of pixels but don't include pixels that are over a certain distance threshold from other ones so this is something that I could potentially demonstrate in a future video in this series I'd be happy to add one in but also in this case one thing you can do if you have this very clean image you can pass it to a library that might do that type of edge detection blob detection contour detection for you and there's two libraries I'll try to link to them in the description that I might recommend one is called blob detection does kind of what you're thinking another library is called OpenCV which has a lot of computer vision functionality built into it but one of the things in it is blob detection so maybe I'll try to like show that at a certain point but you can see the basic idea here is still just working even without an extra sophisticated layer of looking for separate chunks okay thanks for watching this I think in the next video I have two more that I intended to do today although it is 1210 I wanted to see if I could look at for the top like how do you find the highest pixel you or the cloak you know closest pixel is something good also fine but I think highest might be interesting because somebody here in ITP has a project that she's working on which is having somebody move up and down so I think that's a useful demonstration and then also maybe looking back at that grid again but averaging all of the depth points within cells of a grid okay that's what I intend to make next hit stop on the record button come on wait