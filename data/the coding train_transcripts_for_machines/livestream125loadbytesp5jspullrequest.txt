hello surprise confetti balloons it's me your internet coding host Daniel Schiffman and Here I am on a special I don't know what day is it Monday evening it's been a long day at work and I have to leave to go home soon that's what I do at the end of a long day at work but I was working on some stuff and I was thinking oh my todo list forever never never has been this thing I got to get to this I got to get to this I got to get to this load bytes p5.js here we go look issue number 2674 implementation of load bytes assigned to someone named chief bond and I keep thinking oh I'm gonna do that I was just thinking I'm gonna do this before I leave I'm gonna make this pull request and then I thought why not I'm kind of making this up because last week I decided I should do this a live stream so this whole story is fun but I so but but if I go back to my fictional story that I've developed in my mind I thought you know why not just go upstairs the whole point of having this recording studio in the same building where I spend most of our time working is to go upstairs and turn on the lights and turn on the cameras and pull requests with with with my friends the internet people hello so so today's gonna be short live stream I will mention and talk about what I guess I can turn this music off here I will mention and talk about my future plans for this week which by the way it's spoil alert live stream coming this Wednesday morning my time Eastern Time probably around 1030 a.m. Eastern Daylight Time for pi day special' Pi Day themed livestream on Wednesday this week no live stream on Friday so I will I need to I don't know put stuff about that in places that people can find it but that's my plan so read the comments and say hi to us I am reading the comments and I am saying hello to you that's how I like to say hello I think I pulled some sort of muscle in my neck while saying hello just then all right so here's the thing I mean I don't know what the thing is let's so let me first get let me get set up here for a second here I put the music back on okay I'm going what I'm doing right now is I am going to this example for doodle classification so this this came about because I did an example a machinelearning example about classifying drawings from the Google quickdraw dataset and I needed to use load bytes to load the data for those drawings but load bytes hasn't been implemented yet in p5 so I wrote a little load bytes function I put it in a JavaScript file called load binary so I'm gonna I'm gonna whatever what I'm gonna do right now is I'm actually gonna grab this doodle classification I'm gonna paste it to the desktop I'm gonna oh I want to get rid of there's a git folder in there why don't I uhoh computers put this back on well this do it No Oh is there no get folder in there oh there's no keep focus it's a subfolder by the way any of you ever use subversion do you remember the days of using subversion where you had a repository for version control and every single subfolder had its own dot SVN file so if you move stuff around everything would break and go crazy oh that was a disaster I term is coming it's you know I get to stuff eventually I really do it just as it takes to build up his intense although III I plan to do more tutorials about open source software development one of which is this one I probably should really be using I term today but it's just not gonna happen yeah what kind of preppie Oh peppy pretty I thought so many of the chat so they looked preppy I just can't see cuz my older my eyesight is terrible it's a pretty pretty wound up alright I am by the way very pretty also thank you very much for saying so I agree with your assessment of my beautiful appearance anyway that sound that came off not the way that I intended alright so what I want to do here is get rid of lot and oops nope nope I want to get rid of train test data prep and no I don't want to get rid of data and the readme okay so this is just going to be load binary load bytes cuz I need to have a working version what's the chance I need to have a working version of this code before I attempt to do any kind of pull request you guys tired of this song yet seriously I love this music but I really need a wide selection of music if anyone watching as a musician a sound designer please help me somebody save me from myself just getting myself ready here alright now I have a question and while you're there the correct documentation markup so it shows up in the dock Jan yes I definitely want to do that I'm going to include some unit tests I I don't think that I am only because I don't know how I would write them are there unit tests for like load JSON and the other data loading files I would if there's a model I could do the other thing I'm not so sure about is I guess it's good for p5 to give you the only way I know how to do it is to give you this object with bytes and this stuff in it but you know the pull request can be adjusted the pull request can be adjusted I just don't know if you know should load bytes actually I mean in theory it might be nice another way that I could do this oh I have well first hold on let me let me keep going with what I'm doing here because one thing I need to do is in this discussion here it was suggested by further down here by contributor Lindsay why Kenneth saying using HG to be do is more consistent with the rest of the loading coding base also makes any future development based on a promise easier however I don't think it's a must at this point more of a nice to have so I think I want to rewrite this function really quickly to work with HTTP do so and hey Lauren McCarthy just commented might have to lock this unfortunately because the see if hopefully people aren't out okay so here is an HTTP do implementation and so this is Oh was there already a pull request with this in it oh well now I feel silly shouldn't we just be taking sponge man's pull request look it has an example well though I'm not sure I would use load bytes with an XML file load bytes data to string that's interesting I wonder if I feel like silly like I shouldn't be doing this now because so what's going on with this pull request oh oh this hasn't actually been pull requested yet so this is something I didn't know okay this hasn't been pull requested yet so I think it's okay for me to go ahead so what I'll I'll do I want to make sure I give credit in the pull request to sponge man here so what I'm looking for there's a lot of extra stuff in here that I don't have any plans okay I just want to look for the HTTP do yeah let's grab this so let's try using this file callback error callback I probably should have that as well file callback error callback this is not the code yet really it's me testing oh what's this weird plus it doesn't have a oh I'll just delete these I'm I'm gonna delete all I didn't realize I was gonna copy/paste all these silly pluses in unit test for load functions are in alright I think what I'll do is say the pull request doesn't at present contain a pull request so this is calling HTTP do it's passing the file a get request with array buffer I call this data I said so data dot bytes is going to be a new you int eight array with a ray buffer it's gonna if there's a callback it's gonna call that back otherwise it's gonna do this stuff it needs to do for preload and if it gets all the way down here this doesn't seem right like there should be where would the oh no yes hdtb to do will call the error callback that is correct so I should be able to take this out and let's see oh it doesn't at present oh so I do need to do more life is always so much more complicated than you think it's going to be I'm like up you're like I've already done this I just need to quickly come up here and do the pull request well I'm three weeks not realizing I have all this other stuff to do alright that's fine we're gonna accomplish this let's look at let's look at okay oh I see so this is allowing for Pat a path to be a string that's but that's fine oh I just need to add array buffer there okay so I'm gonna need to a rat at a rate offer and then then Oh use the fetch Oh oh boy alright wait let's accomplish this thank you Thank You Austin for the function signature in the chat all right I can a can I can accomplish this especially with your help you over there you over there you over here everybody will help me right alright so what I'm gonna do actually is I'm going to comment this out so I'm gonna leave this HTTP do comment it here because first I want to get it to work with this and I will come back to this and I'm gonna reference I need this to be in the comments I'm just gonna put this up here okay this by the way is probably not gonna go very well and it's fine I'm gonna try this I'm gonna give myself an hour and something will happen and then this will finish and then something else will happen I have a few things I want to make sure I reference so I have this I have this and I have this and I want to get to started overview reference learn get involved development wiki okay let me get to here and I want this basically and then I also want this okay all right just look at a different loading function like lay low JSON and make the code look like that but to load binary okay what could possibly go wrong oh you know what this laptop is not plugged in I need the power I need the power of opensource software development where is that plug Oh has someone taken my power no no here it is here it is your this everything's ok okay hmm so I mean I suppose I could just submit the pull request without HTTP do maybe I should do that and like we could mark it as a I could file an issue to like update it for HTTP to later maybe I should do that I think I should do that the pull request could also just be cancelled and not merged I'm doing this for educational purposes all right I'm you know based on what me I am so me in the I trust dearly is saying I think that I'm like I'm gonna run into trouble so I'm going to do it without HTTP do at first all right okay all right let's everybody do some deep breathing let's read a few random numbers because when I'm feeling uneasy about something and like it's going to go wrong the thing that makes me feel better and calms me down I need some nice quiet music and I think the lullaby is just no good anymore I think I'll just read I'll just hear I'll just read the numbers I'm just gonna read the numbers seventy one thousand six hundred and ninety five fifty six thousand eight hundred and seventeen thirty three thousand not 742 you know let me should read them this way six one nine eight one two seven four six four zero two four six eight four six nine eight seven sixty five zero seven nine on them totally gone off my rocker at I'm reading this thirty two thousand eight hundred fifty nine seventy two six thousand eight hundred forty eight okay I think we're good I think we're good this needs to be up like this a little bit all right now I need is a fully I had a train whistle coming soon someday I'm gonna figure out how to make coded train branded train whistles hello welcome to a special video that's part of my whole set of videos and things about contributing to open source so in this video I'm gonna attempt to do something that's not very visible because I'm Adam doing I'm doing this and this is also a live stream that's going on right now even though you might be watching this recorded I am going to attempt to make a pull request to this project called p5.js now you don't know a lot about p5.js I mean if you watch any of my videos you probably know something about it but I encourage you to check out processing foundation.org p5 GS dot org all those links are in this video's description I little while back was creating a doodle classifier example based on the quickdraw dataset and while I was doing that I needed a function called load bytes now if I go to github p5.js and I search this repository for a function called load bytes which the idea of this function is a function that I can call just like load JSON or load strings or load XML or load image but what I want or just the raw bytes from a file a digital file if I search for this you're gonna find oh there's nowhere in the code it's nowhere in the commits but there are a couple issues about it one of which is here under finish file IO implementation this is from 2013 right it wasn't finished and one is from me 12 days ago implementation of load bytes because I filed this issue describing exactly what I'm talking about right now and published some code that accomplished it now here's the thing in the discussion here there's some nice discussion here Linsey why kenneth commented saying that using HTTP do which is a function that's part of the p5 library would be more consistent with the rest of the loading code it's a nice to have I'm going to submit this pull request without doing that just with using my code that uses the native JavaScript XML HTTP request should a lot of that using the native JavaScript HTTP request because I don't want to because using HTTP do is going to require adding and rewriting the HTTP do function as well and I want to kind of keep the scope of this particular video small now it might be that later it might be that this pull request doesn't actually get merged into the project or irie submit I did a different way but let's just sort of see if we can at least make it happen using this code that I have that load bytes and the other point of this I want you to be able to watch this and not really care about what it means to load bytes and how this implementation works just to see the process of adding some new code to kind of a large open source project that is all sorts of dependencies and build settings and things let's see if I can figure that stuff out while doing this in theory I should know how to do this but even if I do know how I'm probably going to get tripped up and have all sorts of problems I can tell it's gonna happen so let me say a couple things first number one is this this wiki is going to be really important this is on the p5.js wiki under slash development this is going to have some instructions that I'm going to need to follow to how to build the p5.js project which I'm going to need to do to test the new code that I want to implement and then also I would highly recommend you check out this video series from Luisa Pereira where she created a video series called looking inside p5 I believe there's a Spanish language and English language and these videos go through in great detail with beautiful animation of drawings and animations how the p5 library is structured and built so that will give you an excellent background to what I am going to about to attempt to do okay so what is the first thing that I need to do so what I'm actually going to do is I'm gonna go right here to p5.js and I'm gonna go over here to clone so what I'm gonna do is I'm gonna start fresh I certainly have on my computer the p5 just repository already I work with it I probably have different branches and forks ah you're on the no I'm not gonna clone it I am first gonna hit fork so what I want to do is work in my own fork so I'm gonna hit fork and I want to fork this oh look at this let's fork this to the coding train and I'm gonna fork this with a coding train it's gonna take a little bit of time oh it already finished okay so now what I'm gonna do is I'm gonna clone and this is good because even if this goes totally haywire maybe I don't want to actually submit what I do here to the actual p5.js project I just want this to be a little sandbox playground for me to learn about open source so here we go I'm going to grab this now I am going to clone from this particular URL I'm using git at github calm because I have already done this crazy SSH key passphrase thing which I would be happy to show in another video if you haven't done that step you might want to clone just using this the HTTP URL so I'm gonna do this I'm gonna hit copy and then I'm gonna go to my terminal where I am a weirdo who actually just uses the plain Mac terminal with no extra settings I aspire to do better I will do better someday and I'm gonna say git clone wait I first got to see where I am sure I'm gonna go to the desktop I'm just gonna put this on the desktop and now I'm gonna say git clone that so this is step one step one is clone the repository oh it's already done okay great now I have clone the repository step 2 deep breath step 3 change directory into the repository and then I'm going to open up all the code in a cook text editor and I'm gonna use the atom editor for that I have my computer configured in such a way that I can type atom dot and it opens a de moda matically and so now you can see I have the entire p5.js project here so first what I want to do is can I even just build p5 the way that it is without making any changes to it okay I don't want to make any change I don't want to worry about my pull request and all that stuff should want to see if I can build it so I'm gonna go back now to this particular and oh I did this first step right fork and clone right fork and clone for Kent clone I did that now I'm gonna I did see the npm install so npm node package manager install is a command that's gonna I have to have node installed on my computer check out my videos about nodejs but i'm gonna use no to install all the other libraries and other things that p5 the library itself depends on so i'm going to say npm install now i'm really definitely gonna have to wait I know do you dance why you run npm install' not to you could we could possibly edit this out but I think Google probably want it leave it in yeah how long this video ends up being I guess I could have a drink of water Cody Train brought to you by water thank you so much for the sponsorship I don't know where water is but it's the thing that gives us all life all right this is pretty good oh we got a lot more stuff to do keep on going oh we finished okay that was 33 seconds and we add added 1584 hooks and people are saying in the chat what about yarn you know someday I'll you know I you know me I'd like to kind of like live in the past for a little while so I'm using no yarn is another package manager' though that you could use instead of NPM and apparently it's like faster and better for some reason now okay to create the creek complete library from source run grunt so one thing that I should emphasize here is that when I go look at the code like where do I actually want to change the code somewhere right I want to add to load bytes function all the code for p5 is all here color core data events hmm i/o input output probably the code for load bytes should go in IO and if I look here and I go down files Jas maybe that's where it is let's look at files Jas and you can see here is there like a load JSON is here solo JSON is here in files dot j s so I just need to add p5 dot prototype dot load bytes to add that function but the thing is if you've ever used the p5 library right you don't have like a directory of all of these you just have that p5.js file or that p5 dot min dot JS file so there is a build process it would be unreasonable to try to develop this big library all from one file and be like oh I want to add something to it let me go to line you know 70 2421 so everything's broken out into separate files and then there's a build process the build process happens with where am I here via this other tool called grunt what's what's grunt grunt JavaScript let's look for that the JavaScript task runner so grunt is a task runner that will don't worry that you could configure to do a lot of things like run all the unit tests check the linting for style bill put all these files all together minify it all that kind of stuff that I have some video tutorials about in my github series in my linting and testing series but basically all the kinds of things that you might do with a JavaScript project grunt is something that can allow you to sort of sequence all of that and a lot of this work I should say was done by pause for a second I should I want to reference medium processing org wrapup post how do I find that google Summer of Code wrapup post medium processing this will get edited out here we go yep that's where was I why am i this there we go whoops okay and a lot of this work was done by sakshum Saxena for last year's google Summer of Code 2017 we did a lot of work to improve the infrastructure alas pecs and operations of the p5 library itself so all the sort of build stuff so let's try now and see can we run npm run grunt let's see what happens so this is exciting so let's see if I can talk through the things that it's doing oh ok so what am I missing oh I just said I actually I just I need to say npm run grunt I just typed and chimp grunt if I type NPM grunt it goes like this and all right here we go so it's running grunt its building some docks and the reference then it's running in a min task it's running some sort of type right it's building it it's linting it it's testing it all sorts of exciting stuff is happening oh it's running browserify which is something that people do and it's running uglify which is also something it's doing all these different tasks then boy wouldn't it be nice mocha to go through it so look at the little kitty cat and it's running all the unit tests the value of x is 10 boy this is gonna take a really long time false false so it's gonna take a really long time to do all this I think probably I'll just be back in a second one is done oh it's complete and it passed everything passed it was done without errors so now we can start to add our own code to it now maybe I want to like makes it duper oh yeah I'm gonna make a branch so I think I don't know I think what I'm gonna do is I'm gonna say git branch load bytes I don't call it fix or at load bytes add that's a good name for the branch I think I'm gonna add load branch maybe I should call it add load bytes okay so I'm going to create that branch and then I'm also going to check out that branch so now working on the code I'm in a different branch which is going to be helpful for me later when I want to compare pull request send echo there's a lot of stuff that I'm kind of you know this isn't like I visit the first video you're ever watching about git or github or open source a lot of this is gonna be unfamiliar to you hopefully you can pause here and find some of the background links and come back but okay so I'm in a separate branch now all right now I'm just gonna go to the code I'm gonna write some code code code code code code here we go alright so I'm gonna write some code stressed out all right ah so here's the thing let me give myself a little bit more room here one thing that's interesting to note about p5 is looking out what's all this stuff oh my goodness there's like this is just the load JSON function first there's these comments then there's some like crazy notation here there's like this looks like an example so there's a lot that I need to do just to add load bytes beyond just the load bytes function itself because I need to also make sure I include the documentation and eventually I'm gonna want to also probably add an example to the website and all sorts of other stuff but let's do one step at a time I think what might help us actually am a is let's use this load JSON implementation as a template so I'm actually gonna copy everything from load JSON like this and I'm going to put it I don't know if it if there's a correct order I'm gonna put it at the bottom I'm gonna put it at the end because I'm gonna put it after look at me I'm just like scrolling like a crazy person I'm gonna add it after a before a cheapy do and I'm gonna add it before HTTP POST oh this is very silly what's going on now HTTP GET load xml so i'm gonna add it after load xml before after load xml and before HTTP GET that feels like a good place to put it I paste this in here now then what I'm going to do is I'm gonna make sure I'm in the right place this is the load JSON function and it's right after the XML one okay so now I will really need to rewrite this quite a bit and I need to make this a little smaller can you still see this is this too small for you now I think I'll survive here loads a binary file from a fire all a URL and returns an object with a byte property containing a so what is it that it's containing when I my load bytes function it if I run the load bytes function it actually creates this with this you into eight array okay a array note that even if the JSON file contains an array and object so this is irrelevant this method is asynchronous meaning it may not finish before the next line in your sketch okay don't need JSON P so that can be removed now the method is called load bytes the parameter is a string which is name of the file or the URL to load object so I don't think I need the json p stuff that I don't need a callback and an error callback so I own a string a callback and an error callback function to be executed after load bytes completes data is passed in as its first argument function be executed if there is an error responses passed in as the first argument that makes sense return an object it only returns an object because the object has contains and a you int array bytes field property I'm gonna miss a property and then I'm going to say calling load bytes inside preload guarantees to complete the operation before we set up and draws called that is the case now there's an example here unfortunately I'm good what I'm going to do right now is I'm gonna take out the example maybe I can add one in later but I'm just gonna say to do add example and then outside of preload add example with preload outside of preload you may supply a callback function to handle the object to handle the data I'm gonna say and then what I'm gonna do here I'm going to delete this and I'm gonna say to do add add example without with callback wonder why it's sin texting house syntax highlighting because it's inside of this so this should really actually go probably like here yeah that's fine that's going to error on the tests okay so this to do is going to error on the tests what can I do here can I do this will that not error we'll find out so I'm trying to just add a note here to myself let's see what oh maybe this look this will just do oh yeah this is all I need to do okay so this all I need to do is add sorry I need to put this in comments I'm trying to figure out what it's expecting expecting JavaScript code here which I don't have ready to put so I'm gonna put this to do note with JavaScript comment okay what is this alt oh this is alt text I think this is like leftover from something that's not exactly right so this is a mistake I think I need to like take a look at this I'm gonna leave that there but this I don't think is right can we come back to that okay now I'm gonna get my code so I'm gonna change this to load bytes and I'm gonna go now to the code that I wrote another time and I've been sort of mucking around with it trying a few different things so what I'm gonna do is I'm gonna do this I'm gonna tape I'm gonna I'm gonna do this bit by bit I'm gonna just take out I was playing around with HTTP I'm gonna take that out so I'm gonna grab my code which is this and I'm going to copy it and I'm going to go back here and I'm going to I'm gonna leave this stuff here because you're gonna see why in a second because I actually uh what I want I want to retain this check for the data type argument so this is some code from load bytes which is checking to see here's that argument if it's a string I don't need to worry about this json p stuff so if it's a if it's a function and there is no callback then it becomes the callback otherwise it's the error and I can get rid of this and I can say I can say path should only the arguments index zero so this is actually this is probably more complex than it needs to be so I don't know if this is really necessary I but I'm gonna leave this like this so this is saying like oh this is already there you know what I'm gonna say yeah I'm gonna do this so this is a nice way I'm gonna leave it like this this is a way of just checking are there additional arguments if so put them in the right place then I don't want to do this anymore what I want to do is my own whoops load bytes code which is this and I'm gonna paste that in here now the difference is I wrote my code with a variable called data and the convention in p5 is return so I want to say var return equips return equals an empty object and then when the data comes in I'm going to say return dot bytes equals that array I'm gonna do the callback and then I also need to how do I have an error so on request dot on error this is my guess equals error callback so if error callback so I need to look up the documentation for this I need to look up the documentation I'm just guessing this on request is there a non error function Oh request onload oh request on air onload let's look for this oh yeah HTML request there's a there is a on load and is there or does this expect an error how do I get an error error notifications add event list so maybe I need to do this it looks like maybe I need to do this for the error lowercase on error but being told that maybe lowercase on error actually works so let's see if this is a function H HTTP XML rexella HCB requests on error yeah there's a non error there we go equals callback so that should work we're going to test all this stuff before I submit a pull request don't worry okay so now I think I've written my code I'm happy with it I don't have the examples but I have the stuff that's needed for the documentation I have a little description ah I am missing something though weirdly enough the way that p5 works when you have a function that it supports preload is I also need to register that function with load bytes I'm sorry register that function with preload so this has to go somewhere register a preload method now where does that go does that actually just go is that in this no so where does that happen in the p5 library hmm let's go back to the p5 repository and search for register preload method and let's look for code oh it's in core preload methods let's see hmm yep it's here it's in core so what I need to do is add it to this list we can see there's no load bytes in this list so I also need to go to core which is here under core core j/s let me look for a load JSON and find that here and now what I'm gonna do is I'm gonna put it right here as this in alphabetical order no I don't know that there's a particular logic to this order so I'm just gonna put it right after load XML I'm gonna say load bytes so I think that's probably all I need to do to get it to work with preload I think that's all I need to do let's just see I'm being in the chat I'm being told there might be a bug in the way that I called the date called a callback thank you for that so let me go back to files J s go back to my load bytes and I am calling the call back out with data which I renamed based on the p5 convention to ret okay so I think that's good all right so look we did it we're done goodbye I'll see you later no no there's so much more to do this is I think I have written all the code for adding the load bytes function to p5 now I've missed two important things one is I haven't finished writing the doc example documentation and two it's possible you know it is as in that thread that get up issue thread this isn't perhaps the ideal implementation of load bytes but it hopefully at least is one that works so now what I'm going to do is guess what I'm gonna do I'm just gonna run again NPM run grunt so let's just rebuild p5 I also haven't written any tests so I'll be back when this is done hmm okay this is good so this is no surprise there's no way I could have done that without getting any errors so I got some sort of error yes lint source failed so what did I do I wrote on so I have some some some code that doesn't that doesn't work that doesn't fit the Styles defined by the p5 opensource library oh boy boy there's a lot of stuff core js3 line 362 line 362 so let's go take a look at that core j/s line 362 oh boy what did I do what kind of horrifying something did I didn't make any changes here oh no oh no oh no something bad has happened I forgot I have had a beautifui jinn stalled and it's happens anytime I hit command s it reformats all my code with some styles defined by my atom beautify which don't match up with the p5.js library whoa so I got to undo out of this I really got to undo out of this I'm gonna undo out of this okay so now what I want to do here hopefully if I go back to because I didn't make any changes up here hopefully that's it now what I want to do is I want to go to my preferences packages atom beautify settings I want to go down to JavaScript and I want to disable this beautify on save I don't want to beautify this stuff I probably could like install the linting configure I could have all this setup in my text editor to check in advance but I'm not going to I'm gonna uncheck this I'm going to go back to core yes now why does it think there's still changes in cordage a/s mmm so let me do something here let me say I want to say git diff source core core Jas I just want to think what it thinks is different did I commit anything oh it's still this is still messed up hmm I could can I stash my changes yeah hold I'm thinking this could be edited out oh it's there I didn't undo it didn't undo past that oh because I didn't save it okay actually I did undo sorry I was confused so I undo out of that and save it now I've got to go to files dot yes now unfortunate what I'm going to do here I'm gonna do something a little bit insane which is that I'm going to grab my load bytes function I don't care if there are errors I need to fix there I'm gonna grab my load bytes function I'm gonna hit command X to get rid of it I'm then I'm gonna undo I'm gonna do undo all the way back to how this file was originally wow I made a lot of changes this is insane good thing I know I couldn't use get stash I probably just use gets so like stash all that now okay now I'm gonna hit save now this is if I if I if I do get diff I have made no changes from the p5 library I'm gonna make those changes again I'm gonna paste in my load bytes function I'm gonna hit save now I'm gonna go to court a as I told you this would go awry and I'm gonna look for lo JSON and I'm gonna add in my load bytes function I'm not no beautifying is gonna happen this time load bytes and I'm gonna hit save and now we can see core j/s has changed you can see by that Adam changed the color and files such as have changed but beautify didn't run I hope so now what I'm gonna do is I am going to try to run this again and hopefully I mean I'm sure I'm gonna be back it'll be some error other error you'll see me in a minute when the next error comes up Oh Kenneth Lim is there in the chat thank you for watching what time is it six o'clock alright failed alright alright I am back with more linting errors but at least there are only these linting errors in files digest so what's a path is assigned a value but never used ah I forgot like I've made mistakes in my code here that this is this is so good that it has linting because I I created this variable called path but then here I'm using file this needs to be path this definitely needs to be path here so that was a mistake you know I'm tempted to just run this again just to do one fix at a time because that fix might have that that might have messed up oh my goodness I think it got oh no it's doing the linting again so let's see if it gets past the linting this time it might have just only been okay more linting errors replace get with get so it wants me to use a single quotes I agree with you thank you p5 for making my dreams come true this should probably be single quotes as well okay so now that's good let's run it again I probably could run just the command for linting separately like instead of doing run grunt the whole time okay another linting error insert a semicolon line 752 a line 752 oh really really okay all right hey you want a semicolon there yeah at the end of this onload being equal to is it gonna want another one yeah oh yeah like I have one here that makes sense okay I'll buy that I'll buy that semicolon all right one more let's see if it gets past it let's see if it gets past the linting okay told to be request for the music up nope alright it didn't get past it we've got one more on Rick one our EQ is not defined Y is on our EQ not too fine I find by the way that often when I'm in here I'm shouting there's no reason for me to shout you can hear me just fine ah oh oh I just like have a total typo I have this says o n req when the variables name is ou re Q so this by the way is good evidence I have a linting tutorial by the way that well that that is out you can go check out my tutorial about linting this is why having linting especially with an open source library it's good I might have liked well I probably would've tested this at least tried to run an example before I submitted the pull request but has really helped me clean out and fix a whole bunch of things Thank You p5.js and your linting configuration let's try this one more time I'm feeling good feeling like it's gonna make it all the way through I'm looking at the chat just this will edit this part out okay it passed I rebuilt p5.js the entire JavaScript library with my new code in it and in fact if I go here now and I look there's a folder here somewhere oh it's probably in git ignore so it's actually not showing up because my atom editors configured not to show me folders but there is a folder called dist and I'm gonna manually go and look at it I'm gonna go into p5.js under wait wait it's not there under Lib Oh so hold on maybe it's not in distribution that's if I'm building a release sorry it's under Lib perhaps hold on Lib p5 yeah yeah yeah so it must have built to lid right we just look in that I just want to see I'm gonna I'm gonna say this over again yeah yeahjust is only gonna get him this is a file that was built today created at 546 today 69 okay great so let me let me go back here I'm just start from where here this is the sorry for those of you watching this live sometimes I do this because I like to edit this into a standalone video and I can like could have clean out some of the noise of it even though it's useful to see the mistakes and stuff but what I'm gonna do here is just come back here fake it okay look it built no errors I have actually now completely rebuilt the entire p5.js library with my new code all the tests passed you know with the caveat that I didn't actually write any tests for load byte so but at least I didn't break anything else that's in existing tests no linting errors my code style is right didn't complain it me that I'm missing something important so I can feel somewhat confident that I've done something that's reasonable now let's look let's look let's see okay so let's go into let's go into Lib so the built file is actually you can't see it here because it's actually in my atom editors configured not to show me files that are in get ignore but I can actually go here and open it up manually file open Lib this is the new p5 just library that I have now built manually and there's also this empty example this is wonderful because I'm gonna be able to now mess around in this empty example folder to test just sort of manually test to see if the code works so I'm gonna open this up and we can see we can look this has been built on March 12th that's today 2018 and I can look like I can do a fine now Adam is my complain at me because it's a really big file but I can look for load bytes look at this there's a there's a low byte that was that's not in p5 the code there's another load bytes there's another load bytes there's a load bytes is there and look at this here it is the load bytes method actually online 59 thousand thing 575 so this is now a version of p5 library it's not a rule it's not released it's not merged it's not part of the the actual p5 project yet but it did work to build a library so now what I'm going to do is I'm gonna go into this empty example now this empty example you'll notice points to those new built library files so I can start to test that code so what I'm going to do is I'm going to go to terminal here and I'm going to where am i I am in p5.js I'm going to go to to Lib I'm going to go into empty example I'm gonna run a little server just so the just so I can sort of see oh there's already a server running let me run a server on a different port then I'm gonna go to the browser and now now I can see okay didn't find these files mmm let's think about this oh you know why because I've got to go i its it needs I need to run the server I need to run the server from the from this directory right because empty that empty example points to these files so let me run the server from this directory and go to empty example now let's just see I'm in empty example let me do some stuff like create canvas 400 400 background 0 I won't make this part of my commit I don't want the empty example to be part of what I commit but I'm just messing around the code here just to test so here we go I can see okay so stuff is running now here's here is the real test let me just write the load bytes function in setup okay this is good that's an error I want if low bytes didn't exist is the p5 library we've got an error saying I don't know what load byte this so now I can I can kind of go what I have a some test code on my desktop where I have a data file this is some this is a binary file was 1000 cat drawings so I'm gonna copy that I'm gonna go to empty examples I'm gonna say just show and finder and I'm gonna go to empty examples and I'm gonna paste that in so now I have a binary file there I want to see that that so that binary file is there and what I want to try doing is I want to say load bytes cats 1000 dot bin so let's just see if I get any error there no error this is a good sign now here's the thing function let me put this in preload so did my preload integration work VAR data I'm just gonna be es5 for today equals load but I'll say let cuz that's how I can't say var anymore load bytes and then I'm gonna say console log data so let's make sure this works great the data is there that's the correct amount of data you know looking at some of the numbers I can see that this makes sense that I knowing what this file is this is the right kind of stuff there's a lot of black pixels and then some gray and white outlines so this looks like it's working and you know just to make sure preload is really doing what it should right it's empty there but by the time it gets the set up now what if I take this here and put it in set up now this shouldn't work because I'm no longer using preload right I'm no longer using preload so it's empty but I can add a callback I can say got data and I can write a function called got data with an argument data so this is the callback and I don't need to set it equal to anything anymore so this should now I don't need this draw function it's nice that that was there so this should now work I can see the data is there that's good and then I also want to let's test the error I'll so I'll call it got error so I have to make an error happen let's see if I can think about how to do that so let me consult log the error so let's see so this there shouldn't be in it no error happened that's good what if I change the name of the file there we go sketch so interestingly enough oh this is a problem so it called got error sketch touch yes no it didn't it it passed the error into got data so I have a mistake hmm I have a mistake somehow because the error got passed into got data hmm sorry I'm looking at the chat people are messaging me all sorts of things in the YouTube chat but I'm not really gonna be reading it okay so let me go so here's a problem I find I finding something that doesn't work correctly right Oh or okay I have a weird idea I have a weird idea of what the bug might be let me go back to files j/s I kind of I feel like this craziness that I did is kind of nuts so I'm gonna delete this because maybe the error callback actually was getting the wrong thing let me be more specific here so let me say equals equals arguments 1 equals arguments 2 so I'm just going to sort of more hard code in that the path is the first argument and what I probably want to do is I want to say if arguments.length this isn't I'm just going to do this for right now is greater than 1 then I'm gonna bake these two other callbacks and if arguments that length is greater than one set that else if arguments.length is greater than two this is very awkward somebody please give me a suggestion of doing this in a way that's more like p5 but let's just this I know will work like no error callback error callback so I'm gonna write it this way okay I'm gonna write it this way and then I'm going to build the library again and I'll be back once it built so this is the thing I can rebuild the library with my fix the code ah and I'll be back the p5 way is function path callback error callback right good point all right scratch all that this way that I wrote it here is is totally silly it would be interesting useful did you only need to do this kind of stuff if I need to sort of the arguments could come in in different orders of different types I need to test like there's an optional argument there's no optional argument here I'm just gonna say path callback I don't need to use the the arguments array let's simplify this and do this right so now these are optional arguments they will be undefined if they're not sent in so let me go back and run whoops let me run NPM grunt again and I'll be back assuming if there's an error or if everything passes all right I'm gonna let this run yeah all right whenever I hit on the dollar sign it tells me that it isn't available in my area I don't know what Livingstone is talking about oh you're trying to do the super chat don't worry about it you are watching from East Africa that is amazing to me don't feel you need to hit that dollar sign just watch share enjoy I'm thrilled to have you here okay all my tests passed again so now this was a lot of work just to see if that fixed the bug let's go back and let me hit refresh now and good no bad bad so that did not fix the bug so this file I'm getting the correct error 404 files not found but it's still passing the error message as far as I can tell probably because the risk all back so I think I probably need to think about this will there may be there's an error maybe this needs the error does the error does that is there an error callback that is part of Oh event we have to stop and think about this for a second no the Jas isn't cached because I have that right I should add some console logs in here for sure oh yeah let me just suck it thank you good quite good good point all right let me be really really sure about this and let me say console log error and then console log data so let me let me be really sure about this okay refresh data yeah it's definitely ending up in the got data function all right let's see Steven writes there is no error callback argument in onload you need to check error code okay so this event may be what it is that I need to do is is there does Oh a vent have an error code eight onload let's look at the onload documentation and how do I get the event status code and onload hold on sorry pause for a second here oh I know I mean I can just console log error oh I see okay so when this happens to me often what I like to do is go back to a bit of code without the library just so I can sort of figure this out before I put it into the library I thought I had done this already but I hadn't worked out the error thing so I'm actually gonna go back to this version of the load bytes function which is what I was working on previously just as like in a separate file in a p5 sketch and I'm going to I'm gonna what I'm gonna do there is I'm gonna say console dot log o event I couldn't do this in the library and rebuild the whole library but let's just go back to there and I have this sketch running in localhost 8080 the callback but let me I think this will be fine let me do this so now progress event I think there's this status someone was telling me bubbles cancel bubble current target path return value load something weird is going on let me let me add the callback because I want I don't want to do this with the callback got data got error well I don't have an error you just do got data function got data data console.log data let me get rid of the preload thing oops this is set up let me get rid of okay let me do this okay so this right so it's coming in here why on its oh it's status so it's not part of Oh event what's I'm looking at the chat to see if somebody says thing if request.status I can actually get the status in there okay thank you thank you sta RAK got it alright so what I'm looking for actually I didn't realize is in here let's console.log o our EQ let's console.log this variable and we can see there's the HTTP request there is a status and it got status 404 now here's the thing so what status do I get if it works so let's just console.log the status because there could be a lot of different error codes right isn't there an error callback though I kind of want the callback all right this doesn't seem right to me I mean III can keep going I'm gonna keep going with this so I put it back to the correct file 200 that's if it worked so basically I can check if it anything that's 400 or greater is gonna be an error so I could say I could say right here if status is greater than 400 maybe greater than 200 then air and error callback then I could say error callback and I guess I could just right now I could just pass it in an object so I could pass it in like but I feel like I should be giving the native error on ready state change function and Shep there or even on on request.readystate let's see five hundred plus maybe what Oh on error would be triggered by five hundred plus so what's a like if the network we're down like what if I turn my internet off now you might think oh no but is not reaching out so what if I get like a cross origin error all right let's I knew this was gonna become a problem I got to go it's 630 someone give me a quick on errors network errors for cores yeah I want that uh all right okay you know what the 404 I really shouldn't care so much because I can make the 404 error a special case because I'm actually I get the 404 error okay Austin in the chat is sending me a stack overflow question let's see how do find out Oh does not equal two hundred would be yeah that's much smaller I'm just much smarter hold on I'm off though I'm off the rails here let me just check something at the time wise what's going on here okay that or attach a reference to the request on the result object so it can be checked outside there was a super chat somebody's telling me oops I don't know how to find it well this YouTube interface is insane thank you super chat somebody tell me it's off the rails yeah okay wait hold on let's stop and think about this for a little while why not just check how it's done in outer p5 load functions oh why do you have to be so smart about things people watching the YouTube channel good point let me check that okay let me take this out let me go back all the way back to what I had oh I'm not even let me go back to here okay okay okay oh oh I should be using fetch no the reason why I don't want to use fetch is because Oh James Flynn thank you so much see now I see it from James Flynn even gives me a thing I can click on to see it thank you James Flynn that's very kind of you oh so I should be using fetch there's a polyfill in the build process of p5 hold on I'm off the rails here I'm gonna go and check does load JSON use fetch no it uses HTTP do that's why I'm not using fetch nobody's using a fetch ah the HTTP do use his fetch I can't this was not gonna work i th TV do is fetch underneath though okay its fetch underneath okay so but I feel like when I went down this road of using fetch cuz I did use fetch at one point like watch let's go find fetch if I go to mmm nest example I really have to go somewhat this is what I get for trying to do a bonus livestream in here and this right this is using fetch can I use fetch without a wait in all of this and promises global search in p5 Reuben is telling me that uses xmlhttprequest yeah I could just go with not checking it to be 200 I was trying to handle yeah that's a good point yeah you know what good point okay so I could go and use fetch I have to use the promise API yeah but but but I know it's polyfilled but I'm freaking me out I don't I know I could use a promise and that would be okay is our promises and other is there precedent for this though like are there promises used in the code base of p5 at the moment I know we want to refactor to do that someday it's too bad you guys are like way behind me HDTV uses promises oh because it uses fetch all right so let me just do this since it's not part of so what I could do is this basically I'm gonna grab this it's basically what I want so let's try this bear with me for a second camera went off so let's rewrite this I don't need this nonsense I don't need this nonsense oh but I have the oh wait thing oh it succeeds with any stats good alright never mind I got it I got it I got it we're gonna we're gonna go back we're gonna go back to redo redo no undo undo then redo okay okay yes I got you I got you everybody I got you everybody all right we do we do we do we do okay okay so now I'm in my example from before where I can muck around a little bit not get too stuck so what I'm going to do is I am going to just check thank you to the chat for pointing out that this variable inside of the callback on load function will give as a status property but I can say console dot log Oh our EQ status and what you will see if I have the correct right if I have the correct file name and I'm gonna go to this I will get the status code 200 if I have the incorrect file name I will get the status code 404 which makes sense 404 is an error code for file not found so what I'm going to do is I'm going to treat that as a special not as a special case but I'm going to basically say if a request static does status does not equal 200 and I'm going to do that and then I'm going to say if there is an error callback I'm going to do this in two separate lines just for right now I'm gonna say error callback I'm just going to pass in I'm gonna make up an error message with that status and so now I need to add file call back error callback otherwise called so and then I think when I went to call the callback I should say return so now so it gets out of here doesn't keep going back to do the response so now I should see whoops line 12 oh that only two equals there unexpected token line 15 no semicolon there okay let's get Jays line why Oh cuz I'm not passing in so I need to pass in oh this return should be outside of this if statement right so right now I what I did is if there's by not sending an error callback in nothing happens if I send an error callback in I can say function got error and I could say console dot log error now I get this status 404 so I don't know that's a little bit weird but this is something and now what I want to do is what happens if I try to use cores so I actually this file I mean if I try to use course if I try to request a binary file from somewhere on the internet that violates crossorigin resource sharing so that should give me a different kind of error so let's try a different kind of error I actually should have a I actually have some binary files right in this particular github repository and so I have this so I think if I go to view raw and I take this link let's see if I pass this in now will it maybe github actually I think unless I'm staying raw yeah this is not correct let's see what happens don't be definitely getting an error let's see what happens of course it blocked with cores okay good so I got this error it wasn't the right URL but just some arbitrary URL that was blocked with cores but no error callback got called but now I should be able to add down here on error equals error callback so I should I am going to manually execute the error callback here if there's a weird other status or I am going to just give it the air call back here and there we go I got the error here sketched out J s line 10 it gave me the hole excuse me the whole error hold the whole thing here frankly I don't p5 is already I'm already getting these errors so I don't know that I really need to do this error callback but yeah it's all but so this may be a bit of overkill but I've kind of looked into this and figured this out I'm going to now grab this bit of code where I check the status now and go back to my working on the actual p5 library I'm gonna go to files dot J s I'm gonna go to my load bytes function and I am going to add that in here so I'm going to you know what I'm gonna do actually for right now I'm just gonna say return because the truth of the matter is that error is going to be reported any way into the console so I think it actually makes more sense for me to just not don't go through with any of this other stuff and I think that ultimately makes more sense and then here I can also I don't know that I actually need this but why not leave this here alright so I think I think I'm gonna leave it this way so this is just like if it didn't work don't bother to try to pass it although the preload thing it'll get stuck in preload what will this do to preload okay let's build the library again let's build the library one more time I'll be right back don't treat I'm told not to treat status codes like integers so it's standard is to hang preload if it fails so this is fine okay so is my naught equal to 200 some sort of bad idea I should do not I should just do the the less formal in case it gets a string to string 200 Oh 200 and 300 or no errors 200 and 300 are all valid okay breaking news from the chat I'm being told that the status code 300 is also valid so why don't we just say if it's greater than 300 for right now are there other status codes between 200 and 300 100 is also possibly valid so when I just say greater than is it really just let's just say greater than 400 that's really the only errors I care about let's run let's run NPM grunt run grunt one more time I'll be right back and might one greater than equals okay and I'm being told that 400 might actually be okay so I'm going to say greater than and equals everyone in the side I've seen so many messages saying greater the people it's greater than equals greater than it equals so let's now we're I think we're golden now I think we've got it I'll be right back let me send the text message I'm gonna be home late when you run all the tests are you sure Rome you Lena asked are you sure the API doesn't provide us successfully and that translates from all the codes I am Not sure at all xmlhttp readystate triple equals four somebody will comment on my pull request and I'll change it later appointed okay it's done let's do some more checks okay so let's see here let me check now my empty example again let's just first see if it works correctly so I've got the got data and the got error callback so I am now going to check the example and we can see okay it works if I give it a nice binary file it if I give it the wrong file name great it gives me an error that's what I want the callback never happens because there is nothing to get file not found that's what I want let's see if I give it a URL that's like doesn't exist what does that do all right Oh got a 404 and it also got a No so this is fine and it got an error so that's fine I'm getting everything getting everything I want with the error callback maybe I want something more specific here but I'll leave this here and then what I'm gonna do is let me check preload again let me just check make sure preload is not broken and so I'm gonna say function preload and let data data equals load bytes with this madeup URL and let's say let's console.log the data okay so now I just want to check preload this is the preload code with let me check it first with an actual correct file whoops oh I hope in a console.log the string data I want to console ugh the data perfect now let me check it with a file that doesn't exist hangs and this is the actual this is what p5 does natively it hangs if the file doesn't exist it doesn't keep going so that's what it should be doing and then let's if I get a cours error across origin resources like I try to access some URL great perfect not found and that error so this is all perfect this is exactly what I wanted to do my tests have passed guess what I'm pretty much done that was a very loud Bell ok so now what happens now I want to say git status just to see what's going on in the repository so whoa where am I here modified oh yeah sorry so I've modified a bunch of things I modified empty example sketched out yes that's not part of the work that I'm doing I've modified core Duchess that is part of the work I'm doing I modified file such as that's the work that I'm doing I have not if I've added this weird binary file that's just for my own testing I don't want to deal with that so what I want to do now is I want to say git add source core core Dutchess because I want to add these changes to court Jas then I want to add a source I owe files dot yes ok then what I want to do is I want to say git commit oh boy it's gonna run something for me wow so there's and now ooh it is giving me now I can write my commit message ok implementing load bytes this is relevant to issue two six seven four and also there's another issue that it's relevant related to did this get closed oh I think this got closed this is so I'm not going to tag I'm not going to tag this particular issue so then I'm going to write this pull wrote this pull request I'm not gonna say pull request this commit adds load bites adds the load bites function to p5.js as demonstrated during a live stream on the coding train there are some there are some remaining issues here for example there are no tests and I am also not using HTTP do which would be more of the convention here for p5 as discussed in issue 2 674 I also I am also handling errors like 404 or cores in perhaps an odd way and would be happy for any feedback okay so this is my nice long commit message and what I'm going to do is I'm now going to so I have I have my git commit tied to Adam so I can now so I can write a nice long thoughtful commit message this will all be ignored this is just information for me I'm gonna hit close and now I'm going to look at terminal and the commit has been made to the add load bytes branch and now I am going to say now I'm going to say git remote V so the remote that this is tied to is the coding train a fork so I can say I'm gonna say git push origin load what did I call this branch get git branch add load bytes get push origin add load bytes so I'm gonna push if I have been needing this to master by the way I could have said push my changes to master to a new branch called add load bytes but since its I mean a branch already I would say git push origin add load bytes I forgot to your diary should I amend I definitely think I need to amend that I forgot okay so here we go I pushed it there now I'm gonna go to I'm gonna go to my fork who here is it so many things open I'm gonna hit refresh and look at this less than a minute ago I pushed this add load bytes branch I can now do compare and pull request compare and pull request I'm eyes right so this is now saying hey I'm going to I want to pull request add load bytes from coding train /p v GS to processing p5 just base master and then I think what I want to do is I want to suggest some reviewers so Kenneth Lim should definitely be a reviewer Kenneth Lim posted some great comments I don't know if oh I should definitely add something so when I did my commit message it had these like line breaks in it which are bothering me here and I also want to add some formatting like this the back ticks to format this I should say a thanks to for for for this branch which was a nice reference for me so I just wanna add a little thank you here too and I'm gonna go back to my my code where I kept a little this URL to remember it so and then I'm gonna write Oh it's okay if this doesn't get merged hopefully doing this on a live stream was helpful to somebody all right so now we're gonna look and see like look there's the change I made here's the load bytes function Oh also also an example code is missing finally I am not used to I'm rewriting my message dear diary Sincerely Yours the coding train okay looks like this URL wasn't copied correctly let's see yeah it looks like it wasn't either nope it works this is the correct URL okay so let's now go back and say preview and this can actually because of a nice way that it's rendering this can just go like this let's read this over implementing load bytes 264 dear diary this commit adds the load bytes function to p5.js as demonstrated during a live stream on the coding train there are some remaining issues here for example there under tests also example code is missing finally I'm not using HTTP due to morph de convención for p5 as discussed I'm also handling errors like 4/4 and perhaps an odd way ba ba ba thankful ba ba ba ba it's ok it's ok if this doesn't get merged hopefully doing this one last year was helpful to somebody okay all right I think we're ready everybody I think we've now come to the end of this video I think we've come to the end of this video drum roll please we are going to create the pull request and that was a 73 and full hour and 42 minutes video of me attempting to submit a pull request to p5 yes live on YouTube there is a mistake what's the mistake yeah if there's errors in the commit message I think that's okay somebody was telling me there was a mistake happy have oh happy oh that's fine happy to have any feedback I will just edit my comment there thank you alright so I don't know much yeah so Matt you know when uh if you end up watching this live stream as I know you probably will I do think that this could get edited into a useful video and we could probably cut out large swathe of me trying to like sort out the error code stuff and I wouldn't be maybe what I'm gonna do just for like later I'm gonna do something here okay I'm gonna just in case this helpful I'm gonna because I would like us to see if this could be 45 minutes or less okay I would like this to be published as a video that's 45 minutes or less so what I'm gonna do I'm gonna I'm gonna I'm gonna make that happen I'm giving a quick intro to the video you're about to watch where I attempt to make a pull request to the p5.js project and what I'm at trying to add is the load bytes feature now all that will be explained in the video but I ran into some like debugging issues that are not really relevant for the pull requests aspect of the video so there's gonna be some strange cuts in it of me trying to where I did a lot of debugging in between you're welcome to also check the video's description for the link to the full hourandahalf livestream but hopefully this video is much shorter and you're gonna get like the essential parts of it okay enjoy this pull request video all right now definitely don't edit out the nyan cat yes now I'm also going to ooh me I am sooo me left some review comments already awesome can I suggest me I am so mean I guess you have to be a member of the organization to review I could also request a review from Lauren McCarthy who is the creator of p5.js so let me just just in case hi it's weenie weirdly in the middle of this video I got really stuck just now trying to figure out how to deal with error codes so I'm going to cut out all of the research and clicking around and trying to do that and just come back to the point where I figure out like let me just implement the error codes this way just to try to make this video short if you want to see all that inbetween stuff this is way too long for a little interstitial this okay hold on hi it's me in the middle of this video weirdly there's a weird jump cut here because I spent a lot of time trying to figure out what to do with all the different error status codes I'm gonna cut all that out in the video just get to the point where I add some new code to deal with that if you want to see that whole debugging section check this video's description for the link to the original livestream okay keep watching if you want I don't know that you could I don't know if we need that in the middle hopefully we just have weird jump cuts and it's fine let's take a look at the comments how do I find the review comments conversation oh okay great thank you for this so this is great so me I am Samir already put in a nice comment here so maybe I'll adjust that later it's a video subscription instead of video description all right let me try this one I've always wanted to do this this could be the time alright we're gonna do it this time I've always wanted to do this hold on a sec it green only yeah here we go weird alright this video stopped at a weird biola I'm pausing this video because what happens next is me spending like a really long time trying to figure out what to do with error codes and the error callback and that's not really relevant to the pull request aspect if you want to see that part check the video description for the whole hour and a half livestream but I'm just gonna jump now to the part where I figure out what to do with the error codes and continue all right hope you're just playing this video panky you keep watching maybe okay so that could get green screened on top I think of be like the video pauses record scratch sound I come on in that type of thing okay I think that's gonna work alright everybody so I have a I have to go but let me make a few important announcements by the way people are saying please mean this you have no idea you this is not to be mean go back and try to find the live stream where I talked about net neutrality I've got like a baby like 45 minutes of me doing weird stuff in front of a in front of a green screen alright so I need to talk about a couple things really quickly number one I will be back together to talk about one thing I will be back on Wednesday morning 1030 a.m. Eastern Time what I will be doing oh and actually let me shout this out because this is really wonderful the stem coding YouTube channel from let's see if I can find this from Professor Chris Orban at OSU I mean I'm going to shout this out on Wednesday because I think I'm going to use the tutorial stem Cody if anybody can find this faster than me stem coding YouTube Orban maybe that'll get me there yep here we go okay so this is the stem coding YouTube channel I want to look just look under videos and PI day so this is a YouTube channel that has a lot of wonderful coding tutorials and stuff with p5 and they have a video about calculating all the digits of pi so anyway I was using it looking at this I might use this as a reference for some coding challenges on Wednesday I encourage you to check out this video in this YouTube channel they've got a lot of wonderful students and different people who present but what I have here is you can suggest a pide a coding challenge I obviously won't be able to do all of these so you can suggest ones or you can look through these and what I would ask you to do if you like one put a thumbs up reaction so let's see pi calculate the nth digit you will be using a neural net no no no I hope I can deal with that visualize aspects that make up pi whoa whoa ok I'm just gonna pick one to arbitrarily 3rd search for words in PI I like this one so I'm gonna thumbs up this one so you if you like one of these suggestions put a thumbs up there yeah so people are noticing ok so people are making making the point of again we go back to YouTube stem coding I'm going to explain something because this is only gonna come up more and more if you look at my suggestions on YouTube you might be wondering why are these all my suggestions but the reason is I am logged into a YouTube account which is Cody green which is tied to this email address coding rainbow live at gmail.com and this YouTube is a youtube account that I also purchased YouTube red for so that if I show a video in the live stream that the ads don't come and also I my kids watch YouTube and I don't want them to have to see all the ads so I've purchased YouTube red so that they don't have to see all their ads and you can see that this is a they'd like to watch a zelda videos Zelda is very big in our household right now stay tuned for the coding trade gaming channel where we play Zelda all day I'm sure everybody wants to watch that and so but I was talking about PI so anyway submit your challenge ideas up the ones that you like sort by most reactions so right now the one that is has the most up votes is search for words in PI and I'll be back this Wednesday morning okay so hello to Israel build breath of the wild probably not going to happen I hope that this ends up with something oh and Simon Simon Tiger rights going to make a github issue related to PI wonderful alright so I'll see you all on Wednesday thank you for tuning in this has been the coding train with your host person who gets really you thinks that just making a quick pull request video about load bytes will just take 45 minutes and then ends up spending like two hours livestreaming I've really gotta go it's way after 700 let me check my messages everything's fine and I'll see you on Wednesday okay well goodbye hello to France Bonjour and what a binge lots of questions here okay I've got to go see you all