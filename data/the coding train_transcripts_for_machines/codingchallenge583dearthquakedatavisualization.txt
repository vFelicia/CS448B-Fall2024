hello welcome to another coding challenge I'm going to build a 3d earthquake visualization you can see it right there I am going to do this in processing which is a Java based programming environment I'm going to use its 3d rendering capabilities I'm going to load a commaseparated data value data source from the United States Geological Survey with earthquake data I'm going to the image from NASA I'm going to texture it to a sphere I'm going to do all of that to build exactly this in the coding challenge and this is the result that I just did and I'm going to travel back in time the moment it starts decoding challenge there is a big issue with this which is that the actual earthquakes aren't aligned to that particular texture so that I'm leaving as a kind of challenge to the audience and I will come back next week on the live stream and show some solutions to that in addition the most confusing part of this video is probably this the math behind taking getting these almost building like structures to point out in the direction from the center of the sphere of the earth as a globe and to do that I'm using something called the cross product of vectors and so I cover that a little bit I expect that that's probably one of the confusing parts of this video and let me know in the comments it makes sense or doesn't make sense other solutions for the same problem and I'll come back ah I know what I forgot often often if you need to solve this problem you the thing you might want to research on I'll put some links in the description is something called an Euler angles or also quaternion I have to run away really fast whenever I say quaternion so but I'll come back it's just like it's an instinctual thing it's like the way my brain is wired but but in this case I did it in kind because these elements aren't moving and sort of turning I'm able to just kind of like align the rotation so see how that is let me know in the comments how that went enjoyed this coding challenge and maybe you'll still be watching at the end and maybe you'll make a comment maybe you'll share this like it whatever you're supposed to do to help like the videos get more whatever I don't know okay enjoy goodbye take a ride on the coding train oh okay here we are I am now going to attempt I've been probably going to do it in a way that everyone's going to point out how it could be done so much easier way afterwards so I'm already getting some great suggestions from the but I'm going to attempt to redo this previous challenge which was mapping earthquake earthquake data to a two dimensional map of the world and I am now going to map that data to a 3d sphere now you might be thinking to yourself the earth isn't exactly a sphere which is true and there's kind of this distinction between the concepts of latitude and longitude and azimuth moves as in the inclination anyway I'm going to kind of ignore that for the purpose of this video and really just treat the earth as if it were a perfect sphere and then you know perhaps people can in the comments suggest some ways to be more accurate about that or I can come back and do a followup video but that's that's going to give me a simple way for us to get started with the concept so so what I'm going to use to do this challenge is a tool called processing and processing is a programming language and environment built on top of Java all the syntax that I'll be writing in this code will be Java syntax and the libraries for drawing come from processing itself and there's a code editor with processing and I'm going to use so I'm going to first just make a saw a window on size 600 600 and I'm going to say P 3d so P 3d is allowing me to now have a 3d renderer so I can start to use functions that are available in processing for rendering 3d yay I'm going to make a background with my favorite grayscale color of 51 then I am going to say translate because I want the scent I want the center of my world weed center of the window and even in 3d and processing the default is the top left corner I'm gonna say translate I could say 300 300 but I'm going to say width / 2 height divided by 2 by the way I was I've noticed some people mentioning that it's often better practice by the way I'm all about bad practice bad practice I'm in favor of them to go back to multiply by 0.5 and seda divided by 2 since the division operation is you know trivially slower perhaps but anyway the point is I want to go to the center and then I'm just going to say steer and I'm going to say sphere 200 let's run this so look there we have our sphere so this is going to be the earth and what I want to do is I'm going to say fill 200 no stroke and by the way if I do that what you're going to see is it looks just like a circle so things in 3d can appear very flat unless you start to change your view the world and how you're looking at things so what I'm going to do here also something that I can do in processing is I could just say lights now there are a lot of functions in processing and I got a move over there's a lot of functions in processing for specific kinds of lights ambient lights and I can control the color directional light spotlight so I encourage you to investigate that but just lights is just kind of like hey there's some general lighting and I don't know how well you can see this but now there's some nice shading on this and other thing I'm going to do is I'm going to create a variable I'm going to call it just angle and I'm going to right after translate I'm going to rotate along the yaxis so one of the things about being in P 3d is that I can now move this over a little bit I can now I can not just wrote call rotate which rotates along rotates just in a 2d plane I can rotate around the y axis rotates the x axis or the z axis so rotate Y by angle and then I can just say you know angle plus equals zero point you know five or something what we would what we should see here is to be very hard to see as you can see now I have my sphere which I'm using to represent the earth kind of rotating around and you spinning around you can kind of see the shadowing so now what do I want to do I want to place a point on the sphere and I want to place that point based on a latitude longitude so let's if you recall I could I'm just going to just what I did the previous challenge is I I just kind of looked up something like latitude longitude pick city out of a hat Melbourne I like to pick cities I've never been to but hope you visit someday I can pick this latitude and longitude and I'm going to just put it up here now and I'm going to say float latitude equals okay now I always have to remember longitude are the lines on the skier that goes up top to bottom and go all the way around so that's really like the X what I'm thinking about as the X so longitude is eastwest one forty four point nine six thirty one latitude is northsouth thirtyseven point point eight one three six and when itself is negative when it's North it's positive I think let me make that negative again this is kind of irrelevant because it's just going to appear somewhat of the sphere there's no I won't be able to see if it's actually in Australia but just to get started let me do this now how do I convert longitude and latitude to an XY location okay interesting question now there are some ways that I could do it leave beaver expressed in angles so I probably could do some kind of rotation based on them and translation and this would be a valid strategy and I encourage you to maybe try that and post about it in the comments I'm going to do it using Mac's which is by that I mean I want to look at what is the formula to convert a latitude and longitude the angle for horizontal and vertical angle location into XYZ coordinates and this is what's known as spherical coordinates now again if I look I had this page open and then I went to a different web page so if I go to the Wikipedia page we can find where where where where here we go right here we can find these formulas so I encourage you to read up and look at the derivation of these formulas and how it works but essentially here I can look at the radius times sine of the latitude times cosine of the longitude now notice latitude it should be between 0 and PI and longitude should be between 0 and 2pi so one thing I'm going to need to do is adjust that range in order to get that full the full fear and because the values I'm getting her between negative you know negative pi divided by two pi divided by two so what I want to do now is I'm going to say right here I'm estate float latitude equals firstly I need to say like Donna called latitude so I'm going to call this what I'm gonna call this theta for latitude radians of latitude Plus and what did I say plus up high divided by 2 because I want to go from negative 92 92 zero to 180 and then I'm going to say float fee equals radians of longitude plus PI then I can literally apply these formulas x equals x equals where is this formula R times sine of last two times cosine of longitude R times sine of latitude times cosine of 1 to 2 oh and this should be theta and V and y is what sign sign sign sign and Z is R times cosine of theta R times cosine of theta theta and now what I can do is I can offer them what are R is the radius how far from the center am I going to position this point and in this case I made a sphere 200 so why not actually say R equals 200 make the sphere with that radius and then I'm going to say translate X comma Y comma Z and I'm going to say box make a box that's like box is a function in processing that will make a 3dimensional box and I'm going to make it 10 by 10 by 10 by 10 by 10 I guess it's just the only three dimensions with the height yep 10 by 10 by 10 okay well let's run this and see what I get where's that box there it is so you know is this in the right place loud and clear maybe my axes are flipped you know um there's really the question of like well what you know am I looking at the earth upside down right side up what's up so I mean there's no of having this discussion really hub coffee for my children like we're standing on the upside down part of the earth it's like what do you mean the upside down part of the earth it really depends on which way you're looking at it right so sort of interesting philosophical questions that I'm not going to get into but you can see I have now mapped a point yeah and my axes are flipped to to the to the earth itself so I could if I wanted to probably what would I do is make something negative maybe the Y value negative would put it on the bottom let's try that there we go so that's probably all I need to do to sort of flip the axes at least in this point right now and that's you know somewhere if we were looking we if we mapped earth we've got um we've got Australia down there we've got Melbourne okay so now now that we have this working it's just time to go get the data whoo yay let's go get the data so one thing I'm going to do in processing that thrills me to no end is there is a there's a whole set of data classes in processing and you can there's there's classes for working with a JSON based data XML based data just raw text data but the particular class that I want to use is called table and the table object is an object that can load on tabular data and some formats might be on spreadsheet formats like a tab delimited file a comma separated file and it so happens that the earthquake data is comma separated data and you might remember this if you watch the previous challenge what's comma separated data I'll show you so so if I go back to the US Geological Survey website and I just get let me just get the earthquakes for the past day I'm going to click on this link and then what I'm going to do my chat here is not scrolling when we go down here oh great I'm going to give me some world texture links I'm going to come back to that in a second so what I'm going to do here is I'm going to say and setup table equals load table books and I need to put double quotes and then I'm going to paste that link to the CSV right there in the code so let's look at processing gorg load table I think I spelled that wrong but you found it anyway so this is what comma separated data looks like it is it's often has a first a text file that has a first row which is header information so an ID followed by a species followed by a name and then each of the next row would be rows of data so there's a goat with an ID a 0 and a species a leopard with an ID of 1 a zebra with an ID of 2 so so this is the kind of data now what what does the earthquake data look like I can actually just paste whoops I can just paste that URL into the browser it's not it's going to download that CSV file and then I can open it in Mac preview oh look there's only one earthquake I better get some more data so in fine we'll use this just to start with and you can see what what the data is it's got a header row time latitude longitude depth magnitude and then it's got the data itself in the next row and if there were many more earthquakes there would be many more rows so I did only significant today so I did only have a significant which is only been one so far but this is good for us to start with ok because so now what I'm going to do is one thing I need to do in the load table function is I need to go to the end and add comma header this is a second optional argument to the load table function that tells processing that tells load table function that back CSV file has a header row and this is incredibly useful because now we can start to ask for data by Nate it will parse that test little partially tabular data with the knowledge of that header row so in in the draw loop what I want to do now is say for and I want to iterate over all of the rows of data each row is can be accessed in an object called a table row sink for table row row in table get rows so this is kind of a fancy maybe that's not right table Road table dot rows so this is a very fancy kind of loop this is a loop a Java enhanced loop that's like a for each kind of loop that says tables at Rose returns this iterator objects that kind of provide you all of the roads and this Luke says I want to look at each row one at a time and then for each row I can start to get data like I can say float lat equals row get float latitude so this is what's so incredibly useful if I load a CSV with etter information I can just access the data in each row based on what the headers name is and I can also if I know what kind of data it is whether it's a float or an int or a string I can call a particular get function and I can say float longitude equals row get float and you can see by the way I have code completion turned on the processing IDE so this is a feature of processing tree so it's and a longitude and then another thing I might want is a magnitude so let's just do print line lat/long magnitude just to see that that that data came out so if I now run this sketch I should see in the console loop there is no column name magnitude so I didn't pay close enough attention the the column name is actually just ma G format for magnitude so if I come back here and change this to mag and now if I run it there we go it's prettier over and over again but you can see that data is coming in latitude longitude and magnitudes so now what I could do is take we don't really need this this was just for testing I'm going to remove that I'm going to come down here and I'm going to take this code and I'm going to put it right here so now I can whatever I get from the data source I can now apply my conversion to XYZ now here's the thing if this is going to work now with just one box but ultimately I'm probably going to want many boxes so these translations that translated to XYZ needs to apply to each individual earthquake that I'm accessing so in order to not have the translates accumulate I need to add push matrix which is saving the current transformation state then I translate that I draw the box pop matrix which restores it so when it comes back in to the next one that previous translate won't affect it okay here we go we should see an earthquake somewhere now I you know I probably should number one make this box quite a bit larger maybe what I want to do is say fill 255 because that's the same color I have for the sphere I don't know what the spheres but yes so you can see there it is there it is on the sphere itself now let's go grab a lot of earthquakes from the last month and I'm going to go back to the USGS website and I'm going to go to past 30 days all earthquakes it's probably a terrible idea but I'm going to do it anyway and I'm now going to put that in here look I'm going to one thing I want to do is I want to just leave both case I need to do testing at some point I'll comment out the one day significant I will paste this in here and save now I'm getting everything for a month and then I'm going to run it we're gonna see a lot of spheres look at this there are all the earthquakes maps all over the sphere yeah that looks kind of reasonable let me let me change that now to make the box a little bit smaller okay so this looks more regional now there's a couple things I want to do I want to now angle I what I want is for the boxes to be extruded out based on the magnitude now I could just make the hole size I could just so I have a like a cube right the Box function only will ever draw a cube for me what I actually want to draw is something that can be like this boy I can't draw at all but you get the idea well what did I do you get the idea right I want to make there we go what am I making it worse I want to make a like a tower so box is a really convenient function to use because it gives me food just a box but for to make this kind of tower thing what I need to do is design my own shape so this particular shape I can create myself by saying begin shape and shape and then I could set a whole lot of vertices so I think about one of these planes just in the bottom this could be like the point negative 1 comma negative 1 comma negative 1 like if it and then this could be the point over here 1 comma negative 1 comma negative 1 right if this is sort of Z I could kind of just figure out and I could I could make a quad for this part of the of the I hope to call this tower it's almost like a cylinder but a box cylinder rectangle what if I call that's why gotta have a name looking to take here everyone's room above I'm seeing all the YouTube comments now so I could set all the points for this quad the miss quad miss quad miss quad miss quad miss quad how many quads with that it's 6 so what I'm going to do I'm going to come back over here and a box takes three arguments Thank You chat so I couldn't could do that but let's take a look oh thank you that's wonderful let's look at box processing cuddly so that's how you would have to do your own shape but and now seeing that I can actually give it three arguments and the three arguments are with height and depth so I think what I'm going to do is okay so let's just do I have the magnitude here I have it in mag and remember a magnitude for earthquake is based on the Richter scale so what I need to do is and then of course I have to think about the volume of but let's not worry about that too much let's just think about the height map to magnitude so what I'm going to do is say float H equals power 10 to the magnitudes 10 to the power of magnitude and then I can do a mapping which is if I say like max H is I think I used you know 10 to the 10th power I can actually just say H equals map itself from zero to max H to between you know 10 and 100 so now what I'm going to do is I could say maybe the width and height are always going to be maybe I want the height to be H and the X and z dimension the sort of width and depth will always be 5 so let's see what I get there okay oh so I can't tell if this work let me write let me not worry about this actually for a second let me just see if I can make some tall one so I'm going to make some with like a height of 100 and width okay so this is doing something but they're all pointing straight up so here's the next issue I want them to be pointing so then this is like a hard problem so if this is my sphere and I have something right on the edge of the sphere it's right now it's just pointing straight up I wanted to point out as if there was a ray shooting from the center of the sphere to the edge and continuing straight out so I have that ray the vector its position relative to the center I need to rotate this box to align it with that ray I probably could apply the rotation and translate out again but I'm going to have to do this with some math so one thing that I need I think math wise to do this is I need a vector which is just the axis like a kind of like let's sort normalized access that I can relate everything to and I'm going to make use it at the xaxis so I'm going to make a new vector which is the xaxis so a vector that the unit vector pointing along the x axis x axis is just 1 0 for y 0 for Z ok now where where am I here now what I'm going to do is I want to look at the angle between the xaxis and the vector itself so if this is my vector I want if I'm going to rotate kind of relative to the x axis I want to rotate it like this based on that angle so the nice thing is there's a function in p5 that use I'm sorry in processing but also p5 that uses the dot product behindthescenes another vector operation that I have some video tutorials about that give you that angle between so what I want to do here what I want to do here is say P vector and angle B for angle between but that's it really that's really like the I don't use angle because I'm using it already like yes angle between equals P vector dot angle between the xaxis and pause now remember pause is that oh there is no pause I'm saying cause I have to make a pause P vector equals new P vector pause X pause why pause V that position vector is the vector that points out from the center pause know what I think cause I'm doing this like I'm losing my mind XYZ so pause equals that P vector X Y Z okay this is good this is good so now I want an angle between the xaxis and pause what could you possibly be complaining about errors slope does not match oh yeah the angle between is a float not a vector it's just a float so by the way what did I let me just so you can see that it gave me this error type mismatch float does not match with cross link or P vector so you get an error like that it's because this function angle between returns a float and I said to set into a P vector which makes no sense what I want to do is establish a vector which is what I'm going to rotate around so for example this is the xaxis this is me rotating around the xaxis and what I want to do if I come back to over here right what I want to do if I want to rotate if I want to take this and I essentially want to I don't I want to rotate it to this point I want to rotate around the axis that's actually perpendicular out from these two vectors I'm not doing a very good job of explaining that this really needs a more thoughtful diagram I'm going to try to explain why we need the cross products here so let me diagram out what we have so far we have the xaxis and then we have a vector I'm going to use dot to note that this is coming out as if it were coming out like this this is the position but actually a way to think about that let's say the position is on a twodimensional plane like the xaxis right so what I ultimately need is to roll this is so good this is good what I need is to rotate this like this right this is what I'm drawing a box that's pointing straight up and I want to rotate it like this to match that direction so I need an angle to rotate it by and I'm going to be able to get that with this angle between that's the angle that I need to rotate it by maybe if I'm actually drawing this way is a better way to think of it so I might actually need to fix the box to be drawn this way and I want to rotate it like this so what access do I need to rotate it around this axis right I need to rotate it around this X now in this case if it was just 2d I know it just rotated around perfectly the z axis but what I want to do is called rotation around an arbitrary axis so let's say this was actually so instead of the position being on the same plane as the x axis what is the position we're pointing out here the axis that I want to rotate out is now perpendicular out maybe this way the way I get a vector that is perpendicular to two vectors that are connected is with something called the crossproduct okay so let's look at a diagram that I think will help explain this this is if this is vector a and this is vector V B this is showing you a and those vectors make a plane the crossproduct is the vector a cross B points out perpendicular from that plane so this is exactly the operation that I need to do to get that rotation axis so if I come back to my code I should be able to say now rotation axis I'll just call it our axis our axis equals x axis dot cross position and now here what did I get wrong oh and that's the vector right so the cross product returns a vector the angle between function returns an angle so now that I have the rotation axis I want to rotate around an arbitrary axis now how do you do that let's go look in the processing reference about rotate oh this is exciting processing morgue because distance might be a feature you weren't aware of there's this rotate function rotate is a function that you give it an angle look it rotates now it only says only thing you can give it as an angle but there's also like rotate X and that you can give it an angle and rotate Y so built into processing our rotation function for specific axis to x axis the y axis the z axis x y z ok so those are built into processing but I want to rotate around an arbitrary axis well this is not documented here in the in the main reference but this is actually a feature of the rotate function you could find it if you look at the Java Docs for processing for certain like advanced more advanced features what I can actually do is I can say rotate and I want to rotate by that angle remember I want to rotate by that angle around an arbitrary axis I could say our axis X or x sy our axis Z so the rotate function can actually take four arguments which is the angle of rotation and the XYZ of a vector of an axis of rotation and I think I got that right it could be that the egg the Angeles laughs I'm pretty sure the angle is first so let's now run this oh but I don't want to do the rotation here I want to do the rotation right here so after I translate to that location I want to rotate so let's now do that and we said oh that doesn't look right it's certainly rotating but it doesn't look right so I think the issue here is that I didn't draw what it what I did is I drew my looks wrong long I if I have that earth and I had that I kind of drew my boxes pointing up but then rotated to the x axis I mean I think I need to draw the boxes with the extrusion along the x axis for this to make sense so let me change that to the boxes the extrusion the value that's larger being the x value and there we go ah it works oh my god I'm so pleased oh that was really painful but totally work and I'm very pleased to see that Network so now in theory what I should be able to do is have the height be mapped to the earthquakes magnitude so let's put that back in and make this each and there we go now I guess I don't have okay so I'm not really able to see the distinctions very well between the particular earthquakes so I'm going to kind of fudge it here and I'm going to say like well I'm probably actually not there's really not any earthquakes right now in my data I have a magnitude of 10 so I'm going to just really consider the maximum that is like on the Richter scale of seven and then I'm going to map those ones that have a of a magnitude of seven to 100 pixels and the lower ones to ten and if I do that we should see here on getting some variations you can see there was one particularly really large earthquake and the other thing that's going on here is I've drawn these boxes actually be as a center the center is on the edge of the sphere so there's actually a rain going all the way inside that's probably cuing the stuff so I think we have to be more thoughtful about the relative scaling of these but you know we're getting something you know whatever that data might be you might not have earthquake data you could sort of see what the possibilities are here I could add color I could add textures I could be much more thoughtful let's do one thing just to see how kind of problematic what I've done is in a way if I want to actually see the you know what what we typically look like as the earth so I need to find a nice texture image to texture that sphere so let me go look for that okay I'm back I found there's a lot of places on the internet to get images of the earth I would attempt to use one from NASA NASA visible Earth I you know there's so many possibilities here I'm just going to grab November or I don't know December blue marble next generation and I'm going to download the image here I want just sort of the smallest one right now from the download this one and I'm gonna hit save and I'm going to go to my where is this project saved earthquakes 3d let me save this to the desktop earthquake 3d and then I'm going to save this to earthquake 3d I'm going to make a data folder and I am going to save this image I'm just going to call it a world earth earth JPEG alright now one thing I want to do is I want to check the dimensions of this image so I want to go to processing and go to look at that image and do it get info 5400 by 2700 sure why not let's just see if that works what not I said I wanted to check it and I'm like whatever it is is fine so here's the thing I can actually texture this sphere very very easily I think I might need to bring in a pshape object so let's just see first I want to I need an image and I'm going to call that image earth and then in setup I am going to say earth equals load image Earth's JPEG so now I have access to that image in the computer's memory just to be sure that this is working I'm going to say image earth 0 0 so now I'm just going to kind of draw that image in the background and we can see there it is there's an image of the earth so in the background I've got that image loaded now in theory what I would want to be able to do is just say texture earth right before I draw the sphere but that doesn't work so the way that I you can't I don't I don't believe in processing it works to automatically texture one of these primitive shapes of sphere actually is a shape that's built up by many different triangles but what I can do however is create a P shape and I'm going to call that globe this is already called something earth and I'm going to say globe E we'll create shape and then I think all I need to do is say fear and then give it let's make the radius a global variable and then give it a radius I think this now just create shapes this is a shape object that is a sphere and that has a radius now I should be able to say here where I'm drawing the sphere now I should be able to say and let me get rid of this texture I should be able to say shaped shape globe so I'm drawing instead of drawing the sphere as like and actually this is much more efficient but instead of computing for your geometry over and over again I have this work saved see your object that I'm just drawing into the into the scene so there we go now you can see the sphere that now I have it now it has a default stroke and it has a which is black and it also has a default fill so what I want to do first of all is I want to get rid of drawing me in that image and I want to I think I could say no stroke and then I think I can say just globe texture and then that Earth image so I think now this will give me that image of the earth actually the function is not called texture I forgot it's called set texture that's the way to set it set a particular image to auto texture that particular shape so now let's try running this and there we go so now you can see my earth is textured with that image from NASA and the earthquakes are on it however I have done something rather incorrect which is that if I kind of zoom in and look at this these earthquakes are just not in the right place if I slow down we slow down this rotation and because if you remember from that there's a lot of earthquakes that happen along at least along the California coast of the United States and up into Alaska and I think we'll be able to kind of see that collection of earthquakes here it is that's that collection of earthquakes that kind of goes along I haven't aligned the texture with this or XYZ transformation so this I'm going to leave as a challenge it's code will get published to figure that out and you know number one is I probably don't need to flip this why maybe flipping this why I might need to do something where I kind of rotate the earth into the right position to align so I'm not really I'm gonna research this I'll come back next week and show on the livestream solutions to this particular problem but but and also here's the thing regardless of that earth texture there's so much that you could do with this what other kind of data could you map to a 3d version of the earth what other what other ways could you visualize the earthquake data color you could certainly use you know particles emanating you know you could timelapse and show earthquakes over time or a very long period of time might be interesting are other kinds of data so hopefully this gives you this this tutorial gives you a sense of how to work with 3d how some of the math can get kind of tricky when you start in with vectors and rotations and also just we're a little bit about working with data in processing okay thanks very much and I'll see you in the future Cody Johnson