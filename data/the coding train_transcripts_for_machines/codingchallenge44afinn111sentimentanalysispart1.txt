hello welcome to a coding challenge again in this coding challenge I am going to build from scratch a web application that does sentiment analysis what is sentiment analysis so first of all I want to mention that the actual Oaks I'm in the wrong page the particular technique I'm going to use is a score based system using is using a list of words known as the F in 111 so there are a lot of ways to do sentiment analysis what I mean by sentiment analysis is here's some text here's some information I want to determine is it positive is it negative and I want to assign it a score is it a high number meaning very positive is it zero meaning completely neutral is it a low negative number meaning very negative and there are different ways you can do this there are machine learning systems that can be trained here's a lot of very positive we're essays and here's a lot of really negative essays learn about them here's an essay please give it a score there's you neural networks can do this there's a technique known as Bayesian classification that can be trained to look also be trained based on positive and negative text and there's I'm sure list many other techniques here but the technique that I want to look at in this particular video is quite a simple one and it involves a premade list of words that are assigned a valence a positivity or negativity score and so this list is a wellknown list the Athan 111 it is the newest version with 2477 words and phrases and these were labeled by fin arab Nielsen in 2009 2011 so what what is the F in 111 technique the 8th and 111 technique involves a pre assigned list of words so if I were to say like happy this has a score of 5 each each word gets a positive or negative valence score 5 being very happy very positive sad very negative no rainbow also very positive 5 I don't want to give rainbows a score of 4 and happy 5 that would be and I could think of what's like you know um turtle turtles are like a little bit sad Turtles turtles are happy turtle right okay so you get I'm not gonna try to me clearly I'm not qualified to make up a list of words and scores so if you have this premade list of words and these could be in any language this is a particular list in the English language and if you have thousands and thousands of them then if you have a particular text with a lot of words in it you could write a computer program to just look at each word and ask is it in the list if it's in the list lookup and score and add it to a running total and at the end you're gonna get some value like you might get 27 and it's going to be that's going to be aa positive this is a positive email a positive tweet positive essay or you might get negative 31 and this is very very negative so this is what would be known as the total score but you can also look at the comparative score meaning you know just because we have a really long document with the word happy and in a lot of times is that more positive than a short document with the happy it half the word happy and at fewer times so the comparative score would be the comparative score would be the total score divided by the total number of words okay so this is exactly what I want to implement so let's look back here sorry so the F in 111 is a particularly STUV words it was manually late this was a manually made by fin Europe Nielsen you could imagine what kind of research and thought went into this and I encourage you to read the paper and also if you use this list you should also reference the paper and everything is on this website which is linked in this video's description okay so what I'm gonna actually do is just download it oh I've already downloaded it I did that before it started so where would it be it would be in my downloads and here it is under a fin 111 so so here I'm gonna open this up and we can take a look at this list so you can see this has a set of several thousand words and you can see abandoned being negative two abandoned negative two etc etc etc compelled one congratulations to exert you can see here all the words and all their scores I can scroll through the whole thing so what first thing I want to do in this challenge I think is so much more convenient if this text file was actually a JSON file so let's write a little quick program to convert it to JSON I could do that in like node or Python or something but I'm gonna somewhat absurdly just do this in the browser so first what I want to do is I need to get this list and I need to go to my folder that has my code and I'm going to paste it in here so right now I have a folder that has an HTML file I have a libraries folder because I'm using the p5.js and p5 Dom library and sketch this is where I'm going to have my JavaScript code okay so now what I want to do is so here's the thing this file which I can load up here this is actually I'm almost certain is a tab delimited file meaning each word if the format of this file is word tab score so there's a variety of ways I could parse this and this may not actually work but let's test the p5.js library and see if load table works of this file so what I'm going to do is go back to my code and I'm gonna say var table function free I'm going to use preload which is a function that I can use to make sure certain images or media or data files are loaded before this the page the sketch even begins load table and then I can Eve to give it the file name a fin 111 dot txt and then I'm just gonna say console dot log table and let's see what happens and this is my so that's good look at this this is very promising you can see that a table object got loaded and it includes a array of rows with 2477 so frankly there's not really a huge need to turn this into JSON because I have it in this nice table object which makes it very easy to parse but let's for look up when I want to look up the scores I'm gonna want it as a JavaScript object so let's um let's see how do we iterate over this table so for VAR I equals 0 I is less than table dot get row count here's the thing I don't know that the table API off in my head so let's go to p5.js org reference and then what I'm going to do is look for a table and we could see low table p5 table so let's go to p5 table and we can see a bunch of the functions like get row count so this is something I certainly need to that I want to iterate over all the rows so I can say for VAR I equals 0 I is less than table get row count I plus plus and then I can get each row probably by saying get row I that seems probably like it's the case let's say console dot log row let's see if that works whoops let me go back over here so this looks good like I'm getting I'm getting a row object for every row in that table and I'm probably can save our word equals table dot get 0 and var score equals table get one and why am I saying that because if this file is in a table and each line of this text file is a row think of it as a spreadsheet a board is in column 0 1 is in column 1 so this is me saying load that text file into a table look at every single row get every row and then get the stuff that's in column 0 and get the stuff that's in column 1 and by the way I could actually label the columns with headers and use that there's lots of fancy of things you can do with tables in p5n processing but this should do so let's say console.log word score and let's run this undefined undefined so get I suppose is not the actual function oh and I said table because I need to say row probably all of you are noticing this I see in the chat that everyone noticed this like five minutes ago so row get cuz of course what I want to do is get column 0 from that row not from the table sorry about that and then we can see now why do I still see some undefined look at this it didn't split it it wasn't able to do it by tabs that's so sad low table so this might be a p5 jazz bug or I might just be wrong about how this table is formatted or I might need to like give it like a file extension let's try that oh look at that that worked so what I needed to do is because it's dot txt p5 couldn't auto detect that it was a tab delimited file so I was a time able to give it a second argument and give it a extension TSV to tell it that it is a tab separated file if it were a comma separated file meaning commas in between instead of tabs then that's what I had before it was getting the whole thing and then there's no second column okay so that fixed that okay so TSV great so now what I want to do is I'm gonna make an object called the eight Athan and it's an empty JavaScript object and what I want to do is I want to say I want to put in that object the word as the key the number as the value where does the key number as the value so I'm gonna say a fin word equals score and then at the very end I'm going to say console dot log effing and we're gonna look at this and we can see look at that there it is there now is that a fin list in JavaScript object every word with a score and I'm kind of scrolling through churches to see if anything broke like if there was a weird like apostrophe or something that broke it but it doesn't look like it did and just to remind you remember if I have an object I say objects something dot x equals 100 this is the same my laptops about to fall over as saying this so since these words are all strings and I want those to be the keys the properties of the objects I need to pass them in using this bracket syntax I can't do it like this because it's not a variable name at this point it's coming in as a string ok so now that that's done one of the lovely things about using p5 is I can just say save a fin 111 dot JSON a fin and I'm saying it's with two ends I think yeah so now I can just save that file say save that data as a JSON file and it should auto download that to me in the browser so let's run it again ooh file name index of okay so I think maybe I'm supposed to say the other way around first the data and then the file name that seems right there we go and you can see my browser I'm standing in front of it but my browser auto downloaded this file called a fin a fin because I must have like put that in my code by accident well where's my coat yeah whoops to ends there but that doesn't really matter the point is now I have this file a fin and I can put that oops I can put that here instead of the text file so let me rename it to fix it so what I did just is now instead of this text file I now converted that to a JSON file and of course it won't oh but this is I'm like I'm can open it right through here and we can see there it is so this is great because now to do the text analysis the sentiment analysis it's going to be so much easier if I already have this data in a JSON file and by the way you could probably Google a fin 111 JSON countless people all over the world that internet have done this already but I thought it was a useful useful demonstration to show you know in p5 how to convert between one format to another so now we're actually ready to do the sentiment analysis