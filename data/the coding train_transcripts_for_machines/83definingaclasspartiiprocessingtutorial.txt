Okay, look so we in the previous video We had a bunch of stuff here on the whiteboard that sort of magically went over here And it's now here in a Processing sketch. So we have the beginnings of a Processing sketch now again There's this sort of funny thing going on here Have we written this program in reverse like if I were to run this right now. What's it going to tell me? Cannot find a class or type named bubble. That's what it says down there. Cannot find a class or type name bubble. Well... Oh I am recording. Okay am I recording sound yes, I'm sorry. Okay I'm gonna keep going. I just I thought I maybe I forgot to hit record. Okay um Cannot find a class or type name bubble. Well of course it can't there's no bubble built into Processing. This is a new type that we are defining That's what we need to define in our class but so normally you might think "OK, I should write the class and then I can use the object or should I make the object but What we've done here is kind of an interesting thing This is now giving us the instructions for how we have to write the class. We know the class needs to have these functions in it. So this is a sort of design question that you want to think about as you're working on something Do you want to figure out what the object needs to do first then write the class to inform that or vice versa? It's an interesting question and you might try doing it both ways Truly what we've done here is first. We wrote a program That was without any functions at all and a lot of stuff in setup() a lot of stuff in draw() then we change it to a program that was with function so a lot of Variables some initialization and a bunch of functions in draw we've now moved that to our next stage Which is saying forget about all the inner workings of a bubble? How does the bubble even work? We don't even know we just know how to control a bubble. You know we're going to have a bubble We're going to have a new bubble and we're going to apply these three functions to it So how then do we define the class how do we have an actual but how do we get this to stop saying? Cannot find a class or type name bubble? Here's how we do it. We need to define a class. Class Bubble. Open curly bracket, close curly bracket. We're using the full height. Can you see that on your screen? Yes, you can. OK. We're using the full height here. We are now. We have a new block of code This is a big block of code Just like with a function setup(), a conditional line, open curly braket close curly bracket everything About how a bubble works is going to go in here. Again this is not an actual bubble object This is the bubble object. This is the bubble that's actually going to be in our code This is just what it means to be a bubble. What does it mean to be a bubble? Well one thing we know Is that we have to have a function call to send, we have to have a function called display, And we have to have a function called top So that means inside of the bubble class we need some function definitions for example. I could write void display and How is a bubble displayed? by as an ellipse. Maybe an ellipse at x y within the size of 64 right this is now a function inside of a class all bubble objects have the ability to execute this function They have the ability to say b dot display now This now should open our eyes to something else I said draw the bubble an ellipse x y Well where does that x y come from? In our previous version of this program... There was there were global variables x y. This is the x y for the bubble, they're just here above setup(). Is that where they should stay? Absolutely not. They absolutely should not stay there. What we're saying now is there's no such thing as a global x y. There's no global x y for this program there is, there are only x ys for bubbles. A bubble has an x y. Every single bubble will have its own x y. How we define that? By defining x & y here. float x float y What is a bubble? What is an object it is something that has both data and functionality I believe we discussed this in a couple videos ago. This is the whole innovation and excitement of objectoriented programming. Data and functionality together at last in beautiful harmony. This is it. Inside of the class we have the data for the bubble and the functionality for the bubble. We need to add move. I mean ascend. We need to add top, etc. But really we have everything here. We're missing one important thing. Let's go put this in our program real quick We have a couple more minutes before I feel like this video is too long. Ok so here we are. Ah oh my goodness. Oh, my goodness, whoa We got something new so it's coming up here ok what's going on? Where are we going to write this class? Where are we going to put this in our code? Well we could... as ee have done before... say new block of code down here Right there's my new block of code. I have a setup() block my draw() block. Now I need a class and put it down there. Processing this is fine, but Processing gives you a nice little feature here up here new tab. I can make a new tab meaning I'm going to call it bubble um Meaning I can actually write my class Over here now Should you really get that excited about this maybe not but this is just a really nice way to organize thoughts, your programming, etc. It's just so much more comforting. To be able to know here's my main program here's where I'm using my objects. I'm making them and they're doing stuff and then where are they defined, where are inner workings of them, how do I manipulate and make those objects better? Oh, that's in the other tab, that's where I'm gonna work on my bubble code. In each bubble again needs to have an x. in Needs to have a y, and it needs a display function. Which maybe says stroke(0), fill(127), and an ellipse x,y, 64,64. There we go, so interestingly enough, okay. Let's go here So we know that we didn't write the ascend function, and we didn't write the top function. But let's run this It actually works I can close this old one Put this new one over here where I standing? I have no idea. It actually works. What's going on? Where's that bubble? It's sort of stuck up there in the top left. Why? Where did we say where the bubble should begin? I wanted to begin in the bottom in the middle. The bottom in the middle. Where do I say where it should begin? Well here's where I declare the variables is that where I should give them their initial values? I could well we need to do one thing one thing better remember we said this in the previous videos that b equals new bubble is calling something called the constructor. The constructor is the place where the object is born. It is a beautiful shining moment, but truly It's just like It's like setup() for the object. Just like our program has things that happen after the beginning things that happened over and over again Objects have things that happen to them at the beginning What are their initial settings? Is it a blue bubble, is it a bubble in the middle of the screen? Is it a big bubble what are its initial conditions? We need to write that constructor. The syntax for the constructor is a little bit odd. It's not like something we've done before bubble parentheses, parentheses open curly bracket, close curly bracket. So it kind of looks like a function. It has a name, it has a space for arguments and it has an open curly bracket and a close curly bracket. The thing that's different is that there is no return type. This by the way just to complete this beautiful diagram is the constructor. It has no return type. In truth what is the return type? The return type is actually bubble! It's returning an object right it's saying Make a new object and store it in the variable b. Right so that's what it's returning, and its name must match the class name. So this is where you can initialize things like I could say it should start in the middle and at the bottom. Let's add that in to our program. Okay in the class. I'm now going to add The constructor, and there is where I want to say I want to be in the middle and at the bottom and We can just write that ascend function really quickly All right say y and We can put it back in and run it And there we have our bubble ascending now we didn't write the top function, so it's just going to float up and off the window, but now we see that here We need when we're going to make a bubble. We need to add all the variables we need to add the constructor we need to add all the functions we intend to call and all of those things are in a Cla.. in a, it's own block of code with the beginning curly bracket and end curly bracket. We have the data We have the constructor and we have the functions. This is the syntax so what I would say to you as an exercise is two things. One is you can grab this example Again, we'll have some system hopefully for grabbing use soon, and you see if you can just add that top function to it Or add some other functionality to it actually here you go What if, this is a tough one. Boy, this is a hard one, but it's a good one How could I... How could I do something where when I click on the bubble it pops or maybe just changes color? See how would you write that into the class itself. In other words... What if I want to do this ooh boy... We're out of time this video is going to shut off any second now. So you should... I'm gonnne give you as much of a clue and eventually this video is going to end. Just I have a time limit Okay, so what if I were to say something like b dot pop? And better yet. I might want to do something like if I click on it But whatever this is just a simple thing write a function when you click the mouse. It pops above it disappears It changes color or something like that. See if you can do that as an exercise, okay great and in the next video We're going to also look at how to make more than one bubble This was still going in the next video. We're going to look at how to make more than one bubble