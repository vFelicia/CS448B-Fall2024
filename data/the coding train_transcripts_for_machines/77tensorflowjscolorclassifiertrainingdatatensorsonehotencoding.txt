okay we're still working with our data at some point we're gonna start training a model what have I done so far okay so just to recap for a second I've got this whole database of crowdsourced colors with a label and now I've converted all that stuff to tensors so and I'm just looking at the inputs now the inputs that I want to use for my machine learning model so I 5643 RGB values so the shape of the tensor is 5060 or 43 comma 3 and I can look at it here I have all the RGB values normalized to 0 between 0 and 1 now I need to do the wise I need to figure out what are the target outputs associated with each RGB value and this is exciting because we are going to cover we being me and you being the person watching I am going to cover a concept known as one hot encoding so we have to understand why we're going to do one hot encoding I need to jump all the way to what would essentially be like the very end of this video series what am I asking the neural network that I'm gonna build right the neural network that I've been in build is gonna have three inputs are GB it's gonna have some architecture some configuration of all the stuff in the middle the inputs being RGB what do I want the outputs to be the output should be a label right I want to say is it reddish is it blue ish but this is just the label that we I've used as a human being to say what I think it is like if I was doing image classification the label would be cat or dog or rainbow or unicorn but those strings are not going to be meaningful in the sort of numbers based neural network system that I'm building I need this to return a number so we could think if there are nine possible labels I could return the number zero one two three four five six seven or eight now while I could try to do something where I just have one output and that's a floatingpoint number that kind of around till the nearest integer that indicates the label that's not going to work so well what I actually really want is I want a prop value I want a probability value for each one of these labels so we could imagine if there are nine labels why don't nine is such I should've made a ten if I could go back double back in time start this whole series over I would have made Ted labels because all this would be so much easier to work out but imagine there are nine labels I don't know why I'm drawing it like this but one two three four five six seven eight nine and what if I had a probability like oh there's a 10% chance it's the first label and there's a 20% chance it's the second label in the zero zero zero zero and then a 70 percent chance zero zero right all of these values might add up to 100% and we could say ah it's most likely this one which is index zero one two three four five six which maps to you know purplish so I'm trying to create the target outputs if I know that this particular color should be purplish the target output that I want is actually zero zero zero zero zero zero one zero zero zero one two three four five six seven eight nine labels zero through eight indices this is one hot encoding I am taking the idea of index six and making a vector a 1 dimensional vector full of zeros with a 1 in the spot that matches the label a 100% chance because if the neural network was working perfectly this is the output that I would get so one hot encoding is the idea of creating your vector having all zeros and sort of flipping a bit on in a way and just one of them a switch goes on and that's assigned one now I could come up with an algorithm pretty easily probably not easily but I could work hard on it and try it would be hard and I could say take all of my labels and I could convert every single label into an array with a 1 in the right spot luckily for us we're using tension flow j s and it has a function called TF 1 hot so I'm going to create the Y's for this system using the TF dot onehot function and that's what I'm gonna go do next all right so let's go look at the code and now what I need to do I made this colors array now let me make this labels array and if I say labels dot push now here's the thing what I want is for this I mean I could just push the label in it so let's just do that a record label let's just look at this real quick and I'm going to comment out the console logging and I'm gonna say console dot log labels so let's just see this should be right this is all the labels the strings of the labels so the first thing I need to do is convert each one of these into an index value so I need a mapping for that all right so I need to find my list of labels I could just type them out labels oh no but uh all labels equals I could say I could say label list let me call it like the list and a grayish blueish but I have that right here right in crowdsource color when I made those buttons these are all the labels 1 2 3 4 5 6 7 8 9 so if I come back to what I'm doing here and just put this here and then let me just do a find replace whoops let me do a find replace for just this I just need to get rid of this yes you're watching me like failing at doing fine replace and then let me look for ish and replace that with ish comma there we go now I have my array my label list array so now what I want to put in in the labels array is not the actual string of the label but label list index of that label so the index of function I need another parenthesis there the index of function will say look for this particular element in the array and giving back its index so let's look at that now let me run this again and we can see there we go now I have five thousand six hundred and forty three index values and guess what this is when I now want to go and I apologize and I wrote TF dot one hot up there you can't see it so let me just write that again TF one hot is the name of the function let's go to the tensorflow j s documentation page right over here and look i already have it open to one hot how convenient and basically this documentation let's see if we can understand this i need to give it all the indices that's what I already have I mean oh but you know what these have to be a tensor already so first I need to make a tensor of all those indices let's do that so I want to say let label tensor tensor tensor labels tensor let's call it equal TF tensor 1d labels and let's say let's just look at that label tensor labels tensor dot print let's just make sure that's kind of right we can see that's a big long tensor of all of the labels and then now the wise is TF dot one hot so if I go back and look at this one hot needs the list of all of those index values which are zero through eight and the depth the depth means how many possibilities are there and there are nine possibilities a non value will default to 1 and the off value defaults to zero but if I presume reason I wanted to one Haughton code with three the number three for every spot in the number point one for every non spot I could change those values but all I need to do then is say one hot labels tensor and um nine and then I could say wise dot print so X's dot print and wise doctrine so now I have my X's and Y's I remember the previous video I did this I looked at all the RGB i / 255 and then i sorry i lost my train of thought here and then I made those into a 2d tensor and now I've made the Y's and I what I do want to see is console.log let's look at X's dot shape and console.log wise dot shape also okay right let's look and see if everything seems right ah indices must be of data type int 32 Oh interesting so when I made this tensor my labels if we look at them are actually like if I go back and console.log the labels those are floatingpoint numbers because I wasn't really worrying about it when I was just working with regular JavaScript arrays but I need to very specifically make sure that I set the data type index values for a1 hot vector cannot be floating point values so I think if I do this we can see that fixed it right so now I have the shape right this makes sense there's five thousand six hundred forty three data points this each data point for the inputs for the X's has an RGB that's three and there are nine possible labels so I have the shape as 5643 nine possibilities and each one of those just is one hot encoded so this means blueish and this means purplish or whatever the mapping is I don't remember the second one is greenish and zero one two three four five the six one is 0 1 2 3 4 5 is pinkish that's the sixth one yes whatever so I this is gonna be really important which labels actually go with with index values is something that I'm going to have to save for the duration of this project because when I show the results to the user I want to actually show the strings not the number value okay so I am now ready to try to fit four sides up so what's next I need to architect the model right I got all the input data and I got all the output data I need to divide into training and testing architect the model fit the model and then I'm sort of done maybe so that's gonna be like many more videos into the future so I got at least three or four little more steps to build here until I have this like final version of this color classifier built with tension flow jazz wait wait don't leave just wait don't leave just yet I do want to think about memory management and I'm maybe I'm gonna think about memory management later but and the X's and Y's I'm going to want to use in the next video but I probably should after I make the one hot vector I don't need when I'm working with lowerlevel tend to float yes I've got to clean up stuff I'm not gonna use anymore and I don't need these labels anymore so I can dispose that one so that was just the last little tidbit here and then I'll move on in the next video I'm going to start creating the architecture of the neural network model itself and OH I'm gonna introduce some new concepts soft backs and crossentropy isn't that exciting you