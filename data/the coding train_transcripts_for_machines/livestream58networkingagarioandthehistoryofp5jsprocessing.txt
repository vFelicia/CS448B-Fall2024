coding rainbow this is not really the first episode of the new season starting this fall in September although today is September 1st um mostly I'm going to say that because I feel very out of sorts uh I've installed some new software I'm trying some new things out it's been several weeks since I've done a live stream I'm planning to get officially fully rolling uh next week next Tuesday the day after Labor Day or possibly next Wednesday I am going to for the first time ever this fall establish a regular schedule so I will be having an appointed time every week once per week and I'm going to also follow I definitely don't want to use the word syllabus unless it's spelled s i l l y like syus um but uh I'm going to follow a plan so you're going to be able to see kind of what I'm going to cover each week over the span of this fall and what I want to use today is to kind of talk about my plans kind of get myself organized um uh and just make sure everything's still working so I can kind of get going next week um so I see that the chat is there uh I I forgot to tweet that I'm live again so if you guys don't mind bearing with me for a second I'll put on some music first of all can you hear that can you hear that Applause it's not real people applauding I have a new new system oh shoot hold on this I I'm embarrassed to admit that I'm a half an hour late today because I was trying to get some sound software working and the way that I wanted to do it did not work but this should work Applause theme song so um let me know how this audio oh uh so uh oh The Face Place The Face Place is not working but you know what I'm sort of done with the face place if you don't know what I'm talking about I I actually mean Facebook I think it's called um can you let me know please how is this going so I I I I'm hoping to now be able to use this mobile device known as a uh iPad IP aad aod um I had an Android device I was trying to get to work and it didn't really work for me um where I can just kind of uh do my sound effects because that's really why you're here apparently oh there's a hole in my shirt yes so I thought I would wear the coding rainbow tshirt uh and I have some leads on how to make a uh more International Friendly uh tshirt shipping possible um but unfortunately there's this green stripe in the rainbow and as this is a green screen I can show you here very briefly all right I'm actually standing in front of a green screen so this is what this shirt actually looks like but the problem is this green color is much too similar to the wall behind me so uh when I come back to here there's like a weird Little Slice so I don't know maybe I should button up here so that doesn't look so weird of course I could make it even weirder with my green headband but um all right so uh I yeah why do I use all Apple devices I don't have a good answer for that question someday someday I will Branch out into the world of nonapple devices I'm sort of like caught I'm caught I'm sucked in I can't get out I keep trying to get out but they keep pulling me back in I'm looking at the chat um okay so um I have a water in the other room give me a moment here please and okay so I'm I'm so happy to see all these greetings online it's so nice again I'm kind of just trying to get set up here um so okay so let me start by uh doing a couple things uh let me introduce myself this is uh and what's going to happen this fall and uh um somebody take notes I got to talk through a whole lot of plans I have and I got to somehow get organized and figure out how to bring all this into fruition so I have a website it is called coding rainbow.com uh here you can see that I am currently live look at this I'm going to press play right here uh oh I got to turn the audio off hopefully uh oh I think it's okay let me know if you're hearing a weird crazy feedback where you hear my past self talking um oh yikes okay so oh look it's like infinite look at that I love this like uh we just keep zooming in forever and ever um okay so this is a live internet show about programming and creative coding uh I uh am here uh and I'm going to be here once per week teaching various topics so first thing you can do if you're new here is certainly just subscribe to the YouTube channel you will get notices when a new video has been published or when I'm going live uh if you're interested in tuning into the live streams I'm finally going to establish a regular time um which I will announce shortly it's going to be Tuesday afternoon or Wednesday morning it's looking like at this point and I will make that announcement on Twitter and over here uh and also in my email list which you can subscribe now the other thing that I have done here is I have I am I am using a service called patreon patreon is a crowdfunding platform that's different than something like a Kickstarter which is kind of like a onetime purchase it's a subscription model and so the course the the content that I'm planning to cover this fall uh let's see uh A2Z df16 I started oops and that's the wrong shiftman A2Z F16 uh this is a course that I am teaching um at it TP which is a twoyear Masters program at Tish School of the Arts which is at New York University and um uh this is the Silly Bus spelled s i l l i b s for that course um you can see that it is a course that is all about programming with text in JavaScript in the browser using both SC server side and client side uh JavaScript and various creative applications I'm going to cover basic thing I'm going to cover things like regular Expressions which you may not know what those are if you don't then you've come to the right place I'm going to look at working with data and apis I'm going to look at uh node and twitterbots which I've actually already done the videos for um I'm going to look at text analysis and different algorithms for text generation look at Chrome extensions we're going to look more at node various things like this so this is kind of my plan each week I'm going to do some of these topics so the the topics will always happen in my live YouTube stream which is the thing that I'm kind of practicing again right now and then in addition if you want to participate in a uh slack Channel where you can post and share assignments or ask questions or discuss the content of the course you can subscribe to the uh patreon so I'm going to click here one of the things I want to do today actually is I want to record so if I go to this become a patron link let's click on this uh um if I go here you can see here uh this is I think the video H I think this is like the video that would show up by default uh and so I need to make some sort of like quick hi my name is Dan welcome to patreon these are the kinds of things you're GNA why I'm doing this and this is what you so I need to do that at some point today so I could put that on patreon because right now if you go to patreon my intro video is just the mener sponge so the other thing that I'm thinking about so the $5 a month per month level sounds like this ridiculous sort of sales thing that I'm doing but um this is experiment that I'm trying in addition to teaching my physical course inperson at ITP I'm going to try to teach it online but sort of custom bake my own thing not through a big uh online uh education company um so uh the $5 a month subscription will uh give you access to that um slack Channel well that's good uh uh Christian in the chat writes the mener sponge vid was the one to hook me so I don't know maybe I should have kept that now I'm thinking of adding a $10 level I've really been loathed to do this but I've had some requests in which I will also send you a care package and I don't have a a care package will include some stickers uh I don't know if you can see these very well but these are some lovely stickers they're also on my laptop uh and I will also send you um copies of nature of code book some other things like that so I might put that together if you're interested in that let me know I kind of now that I've say this I even not not so sure that I want to do this but uh right you could just by the way you could I will give you the stickers for free if I happen to see you in person because I carry them with me but you can also purchase them uh at Sticker Mule let's see if a Sticker Mule coding rainbow Google search comes up yep comes up so you can also uh you can also just get them yourself if you're so interested in these stickers I think if you buy a sticker I get like 15 cents or something like that uh uh okay so uh um this is um so that's kind of um that's my plan for the fall so I want to try to spruce up the uh patreon page uh get a regular schedule going um and uh get some more online discussion and questions and kind of see how that goes and um I'm thinking and if this goes well I'll do another uh course in the spring probably on a physics simulation generative algorithms and machine learning I know a lot of people been requesting machine learning stuff and I have I've been doing some genetic algorithm videos and I've made some quick experiments in building a processing library and done some other stuff looking at node with JavaScript and different machine learning uh libraries but it's looking more and more like that's going to get pushed back a bit further as I kind of try to get things going for this fall um uh uh Ser Cy hello um um I would love to chat okay so um okay so that oh oh my God why are there how are there 132 people watching it must be that I actually announced that I was going to do this oh boy this is I better make this good I don't know maybe some people came for the dancing apparently have a very bad or good habit of just like I get like stressed out and full of anxiety and just start um playing some music and dancing okay so that's kind of now um so uh another thing that I'm planning to start doing this fall and I got to start scheduling that probably the week after next it'll start is I'm going to have some guests so I'll say more about that in the future but I'm going to have some guests come and show some things or maybe do some guest tutorials and those of you I've gotten messages from folks who are interested in participating in that I'm going to see if I can get a system for that going first and then I'll be able to kind of see how I can include other people no one request in the chat for no dancing okay okay the this Dot Song yes okay um all right I don't know how long I can oblige the no dancing um uh uh back I'll do back propagation if that's somehow like a dance where it's like back propagation somehow uh oh I think I like might have pulled something that was a little bit dangerous okay um all right so the other thing I want to look at now is the rainbow topics GitHub uh list so one thing that you may or may not be aware of if you are new is that I keep track of topics that I intend to someday explore and questions that I'm going to that I would like to answer on um this uh rainbow topics GitHub repository and I right and um and so things that I am um looking at doing today uh I've sort of made a little thread for this um so I want to follow I made a video tutorial about code and I want to follow up on some of the things on that tutorial uh maybe you want to look at or think about or talk about adding networking to my agario example uh I did I left off in August with looking at the traveling salesperson problem and solving it with a Brute Force algorithm and I wanted to expand that to use a genetic algorithm I want to make a patreon video I discuss my fall plan and scheduling which I've done and I think that I would like to uh talk about uh processing and p5js as two creative coding platforms that are part of the processing Foundation that I work on and contribute to and what those are how they're different and how you can contribute to those things and what's kind of coming for this fall um so um um so this is kind of what I'm thinking about uh for today let's take a look through um the topic list um and I'm going to sort it I probably shouldn't do this I'm going to sort it like this we can see what's just to see if there's anything actually what I kind of wanted to look for was questions um to see if there were some uh questions that I wanted to also try to answer uh um okay so yes yes yes ah you know what I really would love to do today but I guess I won't is I um also uh I am broadcasting this to Twitch I believe although I'm not looking at the twitch chat somebody asks um so so I uh also would love to do I I would love to do sometime this fall uh keep reminding me about this something about uh how to make a processing library and how to work with processing in Eclipse um okay so let me go back to here and um all right so I don't know um I'll start by answering a question that's been asked in the chat uh Brian woo asks hey can you tell us how you got into uh programming I can um how I got into programming uh was actually through this program that I now teach at called ITP I had done um you know I uh done other little sort of dabbling programming things here and there but I discovered programming through uh the creative arts and ITP which sort of lives in an art school and uh using programming as a tool to realize new and interesting ideas so that's that's really actually how I got into programming this kind of not that interesting of an answer um but I I first uh there learned actually programming using a macromedia director and the lingo programming language then I kind of got into Java a bit and from there I discovered processing in around 2003 and got involved with uh processing as an open source project since then and a couple years ago um oh yeah so uh a couple years ago I started working with JavaScript and P5 Jazz so um let me see here let's do let's let me do probably should be so by the way if anybody has any uh suggestions for a good iOS application that I could use as a soundboard um please let me know I I bought I I tried a couple but and then that's like a big pain to like load the sound files on there so I only have Applause thank you thank you very much and my uh somebody that song for me Cody Rainbow theme song uh Bumper Music okay uh yeah I do definitely need to do an updated video with my setup okay um so let's see it is about 220 in the afternoon I'm not prepared for this and let's see let's see can I make this do this okay here we go uh let's close this this this so I want to think about um okay 163 people is insane this is I'm like I'm at my worst right now it's like but since all so many of you are here uh uh uh time to tweet so we can get to 200 okay I didn't so why not uh so bear with me for a second I'm going to Twitter and I'm going to tweet I am live now for a pre season uh coding rainbow Test episode I'm calling this a Test episode uh because that's kind of what it is um wow this is crazy there's so many people watching I better do something interesting um okay sorry let me get back to the chat uh I'm I'm just like out of practice with my systems and everything okay um all right so I am going to to start today with uh a question which I which I asked myself apparently so I think I'm going to make uh this is going to go into my Q&A playlist um and uh what I want to sort of use this video as and I realized that a lot of you who are watching are maybe experienced programmers or familiar with these platforms and so you can can either uh tune out for a little while and go do something else or just leave me on in the background if you like or you can tune in and watch and kind of help give me some feedback as to what makes sense and that sort of thing so what I what I want to do will The evolutionary tsp be in this episode I hope so I I'm having a conflict which is that I've had so many people request that I finish the traveling salesperson problem and I've had so many people request that I do networking with the agario game and I can't seem to decide which is more requested or or not oh I forgot I have my bell um so um yes if you are hungry please eat something uh that I think is a good idea so what I want to use this video for um is I want to use this video as kind of a hello it's the fall maybe you are taking a course uh you know this could be a video that my students would watch who are about to enroll an introduction to computational media and I want to use this just to talk about the current landscape of creative coding platforms um a Twitter poll time I could do a Twitter poll I'll do okay I'll do a Twitter poll let's just see so if you uh on the Twitter poll I'm gonna um uh I'm going I'm going to just make it like one hour very short poll like one hour would be way too too long actually because I hopefully get to this in about a half an hour so I'm gonna make a poll I'm I'm at SHI I'm SL shift shiftman on Twitter uh a a guard .io networking tsp with genetic algorithm traveling sales person uh okay genetic tsp uh topic priority for today uh poll length zero days how about just uh 30 minutes I'm going to leave this poll going for 30 minutes there it is on uh Twitter I'll bring this up right here so those of you can uh vote and I think if I'm logged into my Twitter I'll be able to actually live see the results uh yep so here we go that's uh I'm going to leave this in the background please vote here and I'll just start oh one hour left I think I made it for just 30 minutes so um in 30 minutes whatever this is at that's going to be the decision I'm not it's not even up to me whoa seven votes okay that was exciting that was an exciting moment so far agario in the lead genetic tsp really that sounds like some sort of disease that you could contract so could probably come up with a better name for that okay so uh here we are again let me get back to the chat uh thank you first of all thank you everyone for tuning in um this is uh really a thrill for me to get to do this um and uh uh in hear from people all over the world who are watching and who have questions and are enjoying these videos that I'm doing and I apologize for you know mostly I get I get like you know n nine out of n you know 39 out of 40 feedback emails or tweets or like oh I like the weird dancing strange awkward whatever and then one out of those is like you're really annoying you're really annoying please like calm down and those really sit in the back of my mind so I'm I'm I don't know I'm feeling a little for some reason I'm feeling a little uneasy it's also just weird to be in there a room by myself I can't see you there's nobody here I can't hear any just like it's a very strange thing okay so let's start with our first Q&A um and I just want to make sure I am hooked up so I can go to the Whiteboard I can go here ah you know what I want to do sorry I want to download the most recent version of processing uh and I'm going to do that and 7030 uh okay processing is downloaded 5 seconds left um uh I'm going just copy this to the desktop and uh okay let's see how this is going oo agario networking boy that's the one I know how to do the least that'll be interesting uh yes yes Chris Jordan also mentions I was going to make the ellipses a bit more wobbly and um and not so perfectly round all the time yes I will uh let's let's remind me of that when I get to it because it looks like agario is probably winning okay is this the okay uh all right all right so here we go and I'm recording this and I'm streaming live let me cycle the cameras yeah I'm sorry for today I'm it's such a so amazing how large the audience is today and today was sort of like my like I just G to test things out to make sure they're still working uh take the top off of this T here okay here we go hello welcome to a Q&A video in this particular video I am going to talk about I'm going to answer this question now you might notice on this GitHub repository that it was this person whose name is shiffman who asked this question so you know somebody asked me this question I get this question a lot um and so I I just added it to the GitHub repo but I I I would like to point out if you're watching this video and you're interested in asking me a question that I might answer in a future video uh find the link to this GitHub repository in this video's description go there and ask ask your own question so the question for today is what is the difference between p5js and processing and I'm going to answer this by the way I haven't prepared anything so it's going to be kind of stream of Consciousness here but I'm going to answer this in a sort of broader sense so one of the things that's happening right now this very week for me um is that I am teaching a class at ITP which is a program at Tish School of the Arts New York University called introduction to computational Media this is a class for people who want to learn to program who have never written any code before whatsoever in their life and this is another question that gets asked a lot oh hey I'm interested in this code stuff I want to write some code what should I learn what should I use now I don't I don't even for a brief millisecond pretend to actually have the answer to that question I don't you know that that the answer to that question is different for a number of reasons but but you know your personal preferences background interest that sort of thing so many languages Frameworks tutorials Etc I can only sort of speak from my own experience in the sort of smaller scope of one of the things that I I'm interested in and work on personally which are tools that allow people to get up and running with programming very quickly and sketch out ideas in particular creative ideas often ideas that have a strong visual component now um and the tools that I enjoy for um these kinds of projects and for learning code and sketching out these kinds of ideas are and just happen to be coincidentally p5js and processing so I want to talk a little bit about the history um and and this is really now a video that is in some ways I'm focusing oh I already have this URL open on something called the processing foundation so processing Foundation is a uh nonforprofit uh United States uh 501c3 tax exempt Corporation sounds very official and like ominous processing Foundation but um uh and and it exists to maintain software platforms as well as develop uh and administer education uh community and diversity initiatives around code and creativity uh and you can read about the processing foundation on the website and encourage you to get involved and I'll talk a little bit about how you can get involved at least in contributing to open source maybe more towards the end of this particular video so I encourage you to check out the processing Foundation now let me talk through for those of you who might be interested my sense of the history history teacher time I don't know okay uh my sense of the history of processing and what it is and that these and what p5g is and also I want to talk about processing. piy or py U oh and then there's also processing for the r there's so much let's start small so 2001 I think I actually have done a lot of this in another video but I'm kind of repeating it just to kind of give some context here so 2001 processing and uh it was recently actually the 15th anniversary of processing itself Ben fry one of the creators of processing tweeted out a link to a workshop I'll try to find that and put it in this video's description it's not coming to me this moment but uh there was a the first kind of public Workshop using processing was in August of 2001 if I'm correct about that so the the cocreators of processing Ben fry Casey Reese and processing itself came out of their work at a place which still exists of course which a lot of you have probably heard of called the MIT media lab and their professor at the time named John maida uh worldrenowned uh designer artist luminary thinker uh former president of Ry professor at the MIT media lab John maida um and I apologize if I'm mispronouncing uh the name at all uh anybody's name throughout the course of this video so uh the group was called the Aesthetics and computation group that was the research group at the time and you know it would be great to have uh Ben and Casey just to sort of like bobbling heads here they don't need to be bobbling but this to actually talk here but I you know there's I think a a reason why processing came into existence on the one hand you're a person whose name happens to be Ben frier Casey Reese in 2001 you want to teach people about programming what do you use um there there was a uh a piece of software known as Design By Numbers at the time which was created by John maida and this uh this was a software platform that was designed for graphic designers to code and so a lot of the ideas of processing came came out of design by numbers and of course so many things came before that we can think of uh the logo programming language Turtle graphics and you know hypercard and uh the work of um Seymour papert anduh all sorts of various other types of kind of historical precedents for this idea of creativity through coding but the idea here boy I being really longwinded about this okay I'm just going to keep going I I can't see the chat now maybe everybody's left my 163 viewers has gone down to like 15 but um so this is kind of where everything came from this idea of okay number one a tool that uh I let's say I'm the person who's going to create processing why am I doing it one I want to make my own work so I need something with which to make my own work I also want to teach others to make creative work I need something to teach others so one of the things that's been there from the very beginning with processing is walking this fine line between a uh kind of beginner friendly easy to get started platform that you can use right from day one and write code and get stuff going in a simple and friendly way as well as a platform that you can actually use uh for um larger projects commercial work artistic work creative ideas sketching out ideas as you get more and more knowledge through code so it's something that can give you a a full Journey so the question then in this time is well what what is a good programming language to build processing with and build on top of now one of the limitations of Design By Numbers was that all it really let you do if I'm correct about this is make interesting algorithmic geometric Graphics through code but what if you wanted to connect Hardware or talk to the network or have your graphic sketch visualize uh data or you know Hardware being C other types of I was thinking camera but that's hard so one of the reasons that processing was built on top of java is that suddenly if you have this simple friendly environment with a simple drawing API but you build it with the language Java you're going to get all this other stuff for free it's going to be extendable you can write other libraries for it you could pull other Java libraries into it there was also at the time something called uh an applet and one of the key pieces of processing uh has always been uh the key sort of philosophical principles has been sharability so uh I'm going to make something I want to share it with my friends quickly easily instantly and the web is a great platform with which to do that I hope everything's still working yes okay um now so applets were the thing in 2001 if you have this animated graphics thing that you made and you want to put it in a web page you put it with a Java applet as you know anybody watching this now you either have never heard of an applet or the only sense of an applet is like a frustrating moment where there's some web pag is trying to load a Java applet you get like 50 different error messages try to restart reinstall Java like three times and it still never works and eventually give up and do something else um so this is kind of where processing came from so let me show you now of um over here I'm back over here taking a peek at the chat people are asking about Arduino which is kind of interesting to uh bring that into the picture as well but I'm going to run the current version of processing right now uh and I'm going to open it and so this is what processing is and in uh in its form today come on processing if it if it would come up I could then have this Applause did it come what what happened there oh it's there there it is so this is what processing looks like and I can do something like just say background oh and uh let's make the font a bit bigger uh and I can do something like this and I can say uh and I can run this sketch and there we go and I have my first bit of code so the idea here is that I am writing code in Java but a lot of what you would normally have to do your first day of a Java programming class where you need to like have a main thing and a class thing and set up your environment variables and open up something called Eclipse maybe or command line all of that is done for you inside of the processing development environment itself so processing is both a library of functions and classes you can call and do stuff with like background here's a nice sort of pink background ellipse which draws a circle on the screen and a development environment itself and this development environment has come a long way in 15 years there is a console here there's a separate errors pain when you have errors you can see here if I forget my semicolon suddenly you'll see missing a semicolon on line number two and a little red squiggly here and if I then put the semicolon back the red squiggly goes away there's even a debugger over here I think I made a video tutorial about the debugger that's on the processing website there are uh I can go to sketch import Library ad L whoops there's a whole uh contributions manager so if I go here I can find countless libraries to do various things uh with cameras and other pieces of hardware and color and uh gooey elements and physics engines so there's lots and lots of things I can do with processing I'm getting text messages which I was worried were like everything's not working okay so um so this is processing now I'm GNA I really should just scrap this and start over because I could answer the differences between processing pgs rather quickly and instead I I'm going through the sort of History thing so let's fast let me come over here you know if I were in an actual classroom with people I would get a read of the room A vibe people would raise their hands I would have a sense instead I'm just speaking to this this thing which is like a little circle here and it's a nice little thing but it's it doesn't really talk back to me okay so let's think about uh uh let's let me talk about a little bit what's what's now happening so there are so okay so the processing this is where this is this is really um this history now has many many years from 2001 all the way I would say around I believe around 2013 was when one of the first conversations started to happen uh around what if processing way you could think of this question of what if processing started over so instead of thinking about okay so there have been a lot of projects to Port processing to another environment so take a literal translation of the entire API by API mean all of the functions and things that processing can do and translate it to another language uh notably I'll mention two of them one of them is called uh processing. py which is a python version of processing and in fact if I come back over here uh I can access that instantly up here under Java I can actually switch here to python now I don't think this python will show up here by default you have to first go to add mode and then add python but if I switch to python I can suddenly type python code in here and run processing sketches using the Python programming language and access the entire pyth uh processing API there is another project um uh called processing.js and this project this is very confusing uh because all these named processing this was a project first created by John Rig which does something even more magical than just taking all of the processing API and translating it into JavaScript for a canvas element in the browser what John Rig was able to do is not only Port processing to JavaScript so you could write call make processing calls in jav JavaScript but this this also has an engine to take your processing code and translate it behind the scenes for you into JavaScript essentially so you don't you could write your processing code in Java and have it run in the browser in JavaScript through an auto magical process now so this um processing is a project maintained by the foundation itself processing. py is also a project M maintained by the foundation processing.js was a separate project as I said uh created and started by John Rig I believe it's now also used as an engine for the KH Academy a lot of the KH Academy tutorials I believe if it's still the case that John Rig does work with for KH Academy and at one point then procing duts was taken over by um some folks who work with the Mozilla foundation and um I've kind of I don't know if I have all the pieces of the history of that directly into my head I haven't been as involved with that particular project but this question in 2013 came up what if processing were to start over and someone that I would like to mention here is Lauren McCarthy uh processing found one of the things we do as a foundation is we offer fellowships small stipend to people who want who propose a project around a code Library an education initiative A diversity initiative and at the time Lauren McCarthy I believe was one of um I don't I one of the first processing fellows to think about and answer this question and so the question what and I'm not saying this question was actually posed but I'm thinking about it this way for now just for the sake of argument you know there's a lot of different paths that you could take I think and you could make good cases for all of them but this idea of sharability uh the idea of Simplicity back to the sort of Design By Numbers core ideas of of simp licity for withdrawing and sharability on the web everything came back to JavaScript again and again and again so on the one hand you could say Okay processing.js already exists what is the reason for having yet another JavaScript version so to speak of processing and I think what Lauren said and what Lauren did and now many others have done and contribute to Beyond just Lauren Lauren who started this project was s of say well this project called p5js and I want to talk about the little p in a moment this project called p5js is not just about saying processing is this thing that people like let's Port it to JavaScript but let's not Port the code or the names of all the functions or how everything works let's Port the goals the philosophies the principles behind processing openness friendliness accessibility uh um design visuals art let's Port all of those kind of core principles and ideal of processing and take those and design a new platform around those ideas in a new environment because if you're in the browser it doesn't necessarily make sense to do things the same way they've worked in what's now essentially a desktop application development environment processing so uh and you know what I'm realizing this video that I'm making is kind of the history of processing in p 5gs and I'm I'm going to make a separate video which just looks at the differences between the two and I'll make some code examples that go back and forth so I'm not actually answering that question in this video but that's fine so um so this I think is really the idea and JavaScript is such a different place than Java and being on the web is such a different place than being in a desktop application so many things are different Mo most notably to I I'll I'll mention two things right now one is that um in addition to all the drawing functionality that's part of processing p5js has a Dom manipulation library and what I mean by that is uh and I I've kind of made this crazy map here I I almost like don't want to erase anything so I'm just going to use this little corner over here if this is your processing window that you're drawing your lovely spiral pattern in that's all you get in processing your graphics window if this is your web browser and you're working in p5js and you create a canvas where you draw your spiral in it you get that in p5js as this canvas but you also get more because the canvas is just one element sitting on the web page and you could have some paragraphs you could have an image you could have like a little like uh audio player you can create so much more around the canvas on that web page and that's what p5js also offers it's not just as processing is to Java it's built on top of java P5 just is built on top of JavaScript but it also has hooks into HTML so here I think you know really Java there's also hooks into HTML uh CSS and uh um JavaScript okay so I'm kind of wrapping up this discussion of the history here since this is you might be watching this just as a video I don't know if you will but maybe you will I'm going to check now this is at the moment happening as a live stream so I'm just look in the chat to see if there any questions or Corrections so if you're watching this now and you said something 15 minutes ago in the chat but was important maybe add it again um so uh and so here I come back over here and I'm going to look um I don't actually see anything in the chat so I think perhaps I'm going to wrap up this video and what I'm going to do in the next video is I'm going to actually look at processing and p5js side by side and see how they work together and how some of the code how the code is actually different and similar and what some of the capabilities or what's faster here what's slower here what works better here um that type of thing yes uh JavaScript is slower okay so um thanks for watching this video a little bit about the history of processing and P ah I forgot something important so I want to talk about the little p because um JavaScript libraries actually if you'll notice uh often start with a capital P and I'm going to have to find you have to bear with me for a second I'm going to go to github.com processing p5js I'm going to go under issues I'm going to search for capital P P5 with a capital P and um I want to just read this to you because I want people to hear this and I uh Lauren I hope we'll have have a as a guest you can read a great interview with Lauren that was just done by kadenz and I'll try to link to that in this video description I can have her as a guest to make these statements herself but since I'm here on YouTube right now I believe strongly in the work that Lauren is doing and that the processing Foundation is doing to make uh these open source environments more inclusive and accessible and so I want to uh just essentially read this uh statement um to you which is a little bit of weird thing to do on a YouTube channel to just read something that's in a GitHub issue you don't if you want to click and read it yourself uh you can stop this video now but the there was a GitHub issue thread that started P5 with a capital P and um uh you know the question was sort of posed like hey there's like this this kind of a little bit of an advanced thing if you haven't programmed before that you'll see um new P5 is a way of doing this kind of crazy Make an instance of a P5 sketch and a sort of JavaScript standard might be Capital P5 right if you're making a new instance of a JavaScript library you might say it with a capital P and Lauren uh wrote this response which I think um which is uh really uh I think speaks to some of the goals and principal HDA project okay uh totally hear are you indeed name spaces in JS are generally capitalized this is a good point however we chose the lowercase p to indicate that we are breaking with tradition a bit with this library that is breaking the tradition of capitalizing but also trying to break with the tradition of many open source projects that are maledominated lacking diversity and privileging experienced developers in discussion over beginners and so to this end we are explicit in the community statement and the GitHub code of conduct so highly encourage any of you who are interested in open source and processing in p5js to go to this issue and click on and read the community statement and the GitHub code content um and are really trying to see what happens if you build an open Source toolkit founded on core values of diversity and inclusivity and this relates back um to something here which is that this question that I that I that I asked at some point in this video which is what if processing started over and this is something that Lauren said to me which I think is a key principle of p5js the question isn't just what is it that we should be doing right now to make a creative coding platform technologywise that's not the question it's not about make sure we support es6 and the fanciest new like whatever thing that's in the browser now what's happening in the world today how do we make something that responds to the land the cultural landscape of today that uh that that uh that breaks with some of these kind of uh uh traditions in open source development that have excluded a lot of people of varying backgrounds and skill levels uh and genders and Etc so um that's really sort of a key core principle that's it's it's not just about the code it's not this thing diversity and thinking about diversity is not a thing you do after you write the code it's something you have to do right from the beginning of a project itself um we are really trying to see what happens if you build an open source toolkit founded on core values of diversity and inclusivity letting all design decision flow from there um and um there's a lot more but the and Lauren writes for me the lowercase p p suggests a new tradition of including as many different kinds of people as possible in the project and um uh and I like this I like the word Plucky Plucky Little P Plucky little community and there's some more discussion here which uh um ah and this also I'll mentioned this is a nice little tidb for tidbit tidb tidbit for those of you um which is uh which is that where does this P5 come from so actually when processing was first created uh there was a URL which was proc I like to say process fiving uh because processing wasn't actually available so it had two fives in it instead of s's and which became P5 for short so processing has always has often been referred to as P5 for short and now little lowercase p with a five .js uh for JavaScript okay so boy this was a very very long video that uh if you watched and enjoyed I appreciate it I see in the chat people are asking talk about Network programming but you know I got to get through this stuff oh there's some more interesting discussion here so thanks for watching this video about the history of processing a little bit about it I'm sure I missed some important things I'm sure I missed some important people's names um and so if you have comments and thoughts about it please add them in the comments uh send me a tweet and I'm going to do one more video that's really back to this Q&A thing about uh the the sort of like technical differences between processing and P5 Jess okay uh thanks folks so I see um uh so um if you guys have requests about particular topics and you post them over and over again in the chat is not really going to help me uh get to it um any uh faster uh um okay um let's see here now let me go to the Twitter poll look at this I'm definitely going to do some networking today I'm excited about it give it a try uh okay um thanks Alvaro for keeping an eye on the chat trying to keep things organized there and posting links in there really really appreciate that um okay so um it is 300 um Running Out of Time those of you who are expecting agario networking got to get to it but let me just move along here and do part two to this really quickly um and um uh and um um let me do part two of this and I'm going to kind of open up uh both processing and p5js and look at them uh side by side a little bit so I'm going to use this P5 desktop editor um I'm going to not bother with a newer one right now uh and just uh oh little tidbit for those of you there is a new feature let's make this a separate video in a second I'll come back to that in a second uh ah somebody's reporting that there's some chroma key issues nothing I can do to fix that right now but people keep an eye on that and if if if people are seeing that please keep me posted about it okay uh so let me get sort of set set up here uh and and uh sidebar off okay okay uh so I want to talk a little bit about I'm going to come back to this um uh okay so I'm going to go back to that where's my web browser I don't know what uh here I lost the pages I had open uh code no no no issues uh qu labels question and there okay it happens when I ah yeah I can see that so I can work on fixing that uh I'm going to not bother with that too much right now if it's not a big problem okay um okay I think I'm back here hopefully I'm back sorry about this you guys welcome back this is not not going very well today but it's good I just needed a you're right there could be an issue with wirecast 7 I actually noticed that there's a uh an actually an updated version of wirecast 7 which maybe I'll try I was getting this freezing problem even without wirecast 7 but we'll see yast 7 has some features that are really useful to me so um I would like to see if I can use it um uh okay so volume wise uh you're fine volume wise great okay um all right let's try to move this along here folks I've got more head bands and things on um okay so let me look at agario here for a second our like you know little tiny version of it and one thing uh that somebody posted was the speed that you're moving is actually related to how far you are from the mouse in other words if I move the the mouse closer I'll kind of slow down and stop so I think that would be a good thing to add as an improvement so so um uh so I some people are in the chat are saying that they're maybe not oh yeah okay but maybe you guys are working this out okay so um let me just look at uh let's make this a little Improvement for a second and let's look at uh this is um how the um this is how the object moves if you recall from the previous tutorial these are like itchy and this is just is a little bit too weird um so uh this is um I basically create a vector that's pointing from the center of the screen to the mouse and then I just set that Vector automatically to a magnitude of three and then kind of uh uh interpolate towards that Vector so I sort of smoothly move move to it another thing I could do is actually just say um new velocity limit three so instead of setting it to three I just cap it at three that way if you're actually closer this would be only if you're closer than three pixels which uh um I think isn't going to be very good but the idea here is that you know I would slow down but it's I I can get myself but that's only if I'm within three pixels so let's actually I think what would be worth doing is saying let's um oh let's uh let's take that new velocity and like divide it by uh 10 and then limit it to three or maybe divide it by 100 even let's try 50 uh and that way you can see faster faster slow down so is this more like a Gario like I'm only moving if I think this is like a really small but like useful Improvement yes okay um is are people able to get the watch the live people in the chat are for some reason not is somebody seeing me live right now uh so I I I don't know what I uh I'm not sure what to do about YouTube not working because I think I am streaming live um okay um so that's taken care of that's a little tiny Improvement that I think is worth doing um and I'm just going to reply into that issue uh that uh and I'm gonna uh I'm going to sign in as me to GitHub and then I'm going to say on on uh today's live stream I I I added this feature by adjusting the vector calculation like so so you guys can find this on GitHub by the way little tidbit for you if you didn't know um on GitHub if you are adding code into a comment uh normally I would just do this and then I would add the three back ticks at the bottom right that's going to render as a code block but if I want syntax highlighting I can put the programming language right there and then if I click comment you'll see that I actually got this little code snippet with syntax highlighting little tidbit for those of you if you didn't know um hopefully you guys are seeing this live okay so now what I need to do it is 315 I've got about an hour to work on this okay so I'm going to take about an hour right now to go through how to add networking to this agario um agario example code code and at a certain point I'm going to uh start as if this is going to be a standalone video tutorial so let me um let me see uh uh and I know Chris Jordan had um Chris Jordan had um mentioned this sort of like making them Blobby and I do want to see if I can get to that but I want to focus on the networking thing so what I actually want to do is if you're if you're not aware if I go to my YouTube channel I already have an introd ction to node with websockets so I'm going to kind of bypass that and I'm just going to go to the uh I'm going to try to find that playlist for you guys uh I don't know why I don't see it websockets here we go so this uh tutorial is about websockets and p5js uh there's an introduction to node uh there's using Express with node there's connecting a client server with socket.io uh and and the shared drawing canvas so I'm going to go grab that example uh real quick uh and I'm going to grab that where is that um what's that called shared canvas uh node okay I know where to get it rainbow code I'm going to go to uh sockets it's called in here so here here it is under the rainbow code repository do I have that downloaded somewhere uh yes I do so let me grab here uh sockets so I'm going to grab this example put it here in agario and then I'm going to go to terminal again uh and I'm going to go into sockets and do uh node server uh uh and I'm going to say npm install so so I'm skipping over some things which are that uh what is node how do you set up a node project and how do you uh use the socket module to connect a client to a server um so uh and then I'm but this is going to be become important the terminal later so I'm going to get this a little bit more featured so let's just see if this is in fact still working this example so why is it so interesting uh so I'm going to draw a circle like this here and we should see it there and then I'm going to draw two stripes down the side like this and we see those on this one so uh this is sort of hard for you to see what's going on here but I'll make this a little bit more explicit this is an example that has uh it's like I I should adjust it let me adjust it here because it's kind of insane how uh I don't know what why this is so big and why the canvas is so small uh so what this example does so I should fix that somebody wants to update I'm a pull request on GitHub um so you can see what I'm doing here as I'm drawing on this side it appears on this side and as I'm drawing on this side that went away but if I minimize this you can see as I'm drawing here it appears on the other side so the the um so what I'm going to do I'm going to start I'm just going to do this on the Fly I I have not done this before I don't know that I even have a good sense of how to do it so this is going to be figuring it out together but I'm about to start part two of the agario coding challenge adding networking and so what I'm going to do is bring the agario code into this node project and change the server so that instead of sharing drawing you're sharing your location and other messages are sent for when you're eating or not eating now if anybody in the chat could help me out for a second uh and I realize you're probably like 10 or 15 seconds behind but let's say the here are two people playing let's I need to figure out how to make this work let's say you're two people playing agario the only two people playing it you start like this and you start like this so um you maybe you start over here right okay so hold on so one person is going to be a square one person is going to be a circle and it looks like this so what happens if you meet and you're like the same size who eats whom what can I how can I create an artificial scenario should I just create an artificial scenario where like one player randomly starts bigger than the other one you just get a random size and so obviously if there's a lot of people playing and things are growing over time it'll sort of like work itself out but just to like get it started and have a twoplayer demo what makes sense for me to do if anybody has any suggestions to that please okay um the bigger eats the smaller not they just overlap if they have the same value they hover on each other if they're the same size no one eats no one I've played them a little but if the same side you bounce off each other I think okay so obviously I'm not going to u whoops I'm not going to create as sophisticated a version of agario as the real game is um you need to be 90% of the size okay thank you um one with more speed okay so what I'm going to do I think is give you a random size when you start and I might kind of hardcode that in even just so and then and then it'll build in the feature um that the um if you're the same size you actually don't eat each other something like that okay uh great okay so um so here we go so this is going to be agario with networking and I'm going to uh uh just get myself ready here I've got Adam open and uh and I'm going to make this happen Okay so uh close this close this close this uh I just want to check something okay okay here we go all right um I'll cycle the cameras uh if it's 430 and I'm still here 430 p.m. Eastern I'm still here you guys should start yelling at me because I have to be at a meeting at ITP which is a maybe a 15minute city bike ride at five o'clock uh okay here we go I'm ready for this I'm excited I don't have sound effects today I screwed up too much stuff I think I do have this though uh oh it's only actually playing I I'm not going to bother with setting up the sound effects because you guys don't need that cycle the camera music okay uh okay sweatband you know too many people I can't I somebody find me on the internet some nice rainbow style things I can wear that don't have green in them and then I then I'll then I'll wear them okay uh okay here we go uh hopefully things won't freeze and we're just going to keep it moving let me have a sip of tea and a sip of water and we got one hour I think we can make this happen in an hour hello welcome to part two of the agario coating challenge in this challenge I am going to attempt to add networking so this is where I last left off obviously this is not the fully formed game agario it will not be by the end of this video but it'll give you a lot of the tools and Basics if you wanted to recreate it but hopefully you're watching this to learn about how to do some of this stuff and invent your own idea anyway so this was what I had before I had this sort of like world that I'm in that I can move around and I can start eating other little dots so but now what I need to do is take this this is a oneplayer version of the game there's no uh all the dots are just created randomly I need to make a version where if I launch it in one in a browser and you launch it in another browser we're both seeing each other in each other's canvas so I'm not going to start from the very very beginning with this because I do already have a playlist instead of tutorials about node and websockets so I'm just going to show you the uh that tutorial makes this example see how this in this canvas I am drawing a little pattern here um I'm going to refresh that because really what I want to draw draw is a nice rainbow that's the worst rainbow ever drawn in the history of time but you can see as I draw here it shows up over there as I draw here you know it shows up uh on the other screen so what is the um what is the uh um schematic what's the diagram of the things that are happening here there is browser instance one that's a browser there is browser instance two and in this case both browser instances are on my laptop and that's how I'm going to demonstrate everything today but certainly the idea here is that I could be playing this here in New York and you could be playing it in London or in Rio or in Tokyo or in Istanbul whatever any city that you could think of around the world I don't know why those cities popped into my head but they did so um and then there is a server which is written in node.js and the canvas the game itself is written just in using p5js client side and what's Happening Here is there is communication these clients don't talk to each other they both talk to the server and when one talks to the server I can send my position to the server and the server can then send my position back to the other one so I think this is the way there's a a lot of different ways you could probably implement this I think what I'm going to do is have each client drive around its own world and broadcast its position to the server and then the server will broadcast the positions of all the other clients back to all the other clients so they can draw those other clients in their own window that sounds a little bit like loopy loopy but hopefully it'll start to make sense once we start to program it so um uh okay you can't hear me hopefully uh I see somebody in the chat saying they can't hear me but hopefully everybody else can hear let me know if there's a sound problem okay so let me close this and get this open here and what I'm going to do now the first thing that I want to do is in this uh sockets example this is the actual code there's a folder oh I'm in the wrong window stop pause okay there's going to have to be an edit point there Mata who is uh helps me so wonderfully with the uh YouTube channel um this will have to be a point where because I walked over there and then uh I didn't switch the camera so uh because I don't have my automatic sensor that just does that automatically that I keep intending to set up uh and so let me let me do that again uh so I have to press one when I do that okay okay so over here what I want to do is I'm G whoops I want to come to this uh agario example and what I'm going to do is I'm going to go to the finder ah let me do this one more time because why did I lose that folder should have it here okay try that one more time okay I'm going to come back over here and this is where I have the code for both of those projects so this is this is the code for the first agario example and this is the code for that sockets example um that does the shared drawing canvas so now what I want to do is I want to grab there's this public folder right here this public folder is where the client side code Lids so what I'm going to do is I'm going to take the agario folder and I actually um I want to leave this I'm gonna I'm going to do something a little weird I'm going to do uh canvas so I just want to be able to refer to this code I'm going to put that in a different folder and I'm going to take agario and put that into here so now you'll notice um uh the node server is running uh on the port 3000 so if I type Local Host 3000 it's like I don't see anything but now if I go to Canvas you'll see this is that program and if I then go to agario uh that didn't show oh because you know why it didn't show up no let's check oh agario one I forgot that I called it agario one there it is there so I'm just now my not server is serving both the shared canvas client code and the agario code and that's useful to me because right now I want to be able to um pull pieces of the code from the shared canvas into agario so I can um uh so I can uh get not have to retype all that socket code from scratch okay so now let's go back to Adam and what I want to do is uh whoops uh pause time out frustrating moment here this happened to me the other day I have to um I don't want to waste a lot of time with this but okay it's fine uh okay never mind I had a weird glitch that I'm not going to worry about okay um so uh Mato sorry that's another edit point then I'm just going to come right back into it here so I'm not going to adjust the server at the moment this is all the code for the server and again it does the sort of basic stuff of setting up a port listening for connections spitting something out to the console when somebody connects and then there's some messaging stuff the messaging stuff is all going to have to change the messaging stuff is what is happening uh for the shared canvas drawing I'm going to have to change that but what I want to do is I really want to look at the client code so I want to look at uh the canvas sketch and I want to look at my agario sketch so I have both of these open I have the agario sketch and the canvas sketch and what I want to do is add a socket first I want to add a socket variable and uh and then I want to uh connect I want to connect when the sketch starts to the server so this is the basic idea the first thing I want to do is add a web socket to um add a web socket to my agario code now I'm missing a piece I believe because now I believe if I were to run that we're going to see an error message where it's like IO is not defined so I actually in addition to that I need to uh make sure I actually access the um sorry I'm in the wrong place I need to make sure I actually access the socket Library as well so I can access the socket Library by referencing a link to socket.io in the index.html so I'm also going to take that and go to the agario index HTML file and add a reference to the socket.io library and now you'll see there we go and if I look back at the server you can see we have a new client so I'm going to uh restart the server and I'm going to refresh agario and you can see this agario sketch has now connected to the server great um okay so now we've got step one we've got the sketch connecting to the server are you guys with me here are you with me please be with me um I'm very happy and that's really like just an exciting moment just to have it connect so let's look now what one thing we've really got to think about is I've got to look at my agario code now this should go away notice how I had this B bit of code at the beginning that just makes a whole bunch of blobs but there's no point in making these random blobs anymore the blobs should only actually exist if they're actual people playing the game so I am going to get rid of this in addition when I connect I should in addition to just connecting create a new instance of a blob the server is going to have to keep track of a list of all the clients that are current connected and I think we're going to have to figure out some way of giving those clients an ID number and there are probably some very clever and sophisticated ways I could come up with assigning IDs I might just to get started use a counter 0 one two three so we've got something that's going on here that I want to just think about here the server needs to keep track of list of connected clients this is data that the server needs to keep track of and that list is essentially going to be mirrored in the client as well and then the server is just going to update the positions continuously so when I go back to the server code right remember now it's very tricky to keep track of what's the server what's the client especially because they're both written in Java scripts there's a nicity to that but I'm going to go back to the server and what I want to do is add a variable so I want a variable at the top and I'm going to call it blobs Okay so that is all of the blobs that are currently connected okay and I think it would be useful probably to create a blob object a little unsure about this but let's let's do this for right now what if I create um I don't know if I really need a Constructor function but let's just do it just for the sake of argument a blob has an x a blob for the a blob has a y and a blob has an ID so I don't know but in other words that list should always be keeping track of what's the blob's ID and where is it so I'm wrote a Constructor function just in case I need to use it but I'm not entirely sure I do just yet because just doing this on the fly so when we have a new connection oh the socket gets an ID what a one I have an idea why don't we use that and we might end up using like some kind of like hashtable thing where we look up where we look up the client in a list based on its ID there's so many things we could eventually add to this we'll see but basically at this moment when we have a new client what I want to do is create a blob which is a new blob object with socket. ID now I don't know how I'm going to get the XY position just yet so we'll figure that out later I'm just going to type in 00 right now and then I want to say blob s. push l so in other words the moment that someone's connected we then have a new client now I think that actually to the truth of the matter is even better I have now have an idea maybe there the client should in addition to just connecting send a message like start so maybe there should be right because can I get um when a user socket uh okay hold on I have to think about this um when the server gets a message called Mouse does the do we yeah yeah yeah uh yes we should get the particular so we should still have access to that so socket ID so let's let's try something let's say there's a message called start and the message that comes in is uh rece uh is data dox data doy and I don't want to broadcast that back what I want to uh I want to leave that so what I just want to see is I what I want is for and I want to see uh socket sorry I'm figuring this out as I go it's hard to like talk it through and do it okay this is what I want to do I don't actually want to create the blob the moment the connected I mean the I want to I want the client to explicitly also send an additional message because here what I want to do is make a new blob object and then have the client send in its XY position so let's now go to the client's code and here what I want is to send bro how do I send something ah I need to go back to my previous example which uh this is how I send something to the server so I'm going to grab grab this code and go back to my agario sketch and I want to send to the server uh right the server is going to make oops the server made that I lost a little bit of code there sorry sorry sorry let me get that back socket. emit so and I want this to be start so I want the data to be blob. X blob. Y and by the way the blobs all need a size so does the server keep track of the size does the client keep track of the size I guess they both do for right now they're both going to keep track of it so let's make a size uh which is I think blob. R I assume um which by the way can I just emit The Blob it's gon to have all this other stuff in it so I I'm going to do this right now so there's definitely a way I can clean this up right so essentially what I just made this blob object and then I make this data object which is what I'm sending I can clean that up in a bit but uh okay so I make the blob object and just to be sure it's R yep and then I want to send that so let's see if this works let me go back to the server code and I realize what I'm going to get uh in addition I also want the blob to have an R to keep track of the size and I want to see that here as well just to make sure it's all coming in and make it with a data. r so there's a lot of redundancy here but this should give us the basic idea right if I restart the server and I now refresh the client we have connected I got undefined undefined so I got the ID and I got 64 why did I get undefined for the X's why so I'm going to have to debug that where's my debugging music someday I'll have it um let's look into this so where where are things being s oh I bet you I know why so the blob is actually using vectors so it has a position Vector so instead of um uh uh there when I'm sending the information I actually need to see blob said blob. dox blob. doy so now if I were to refresh this and see we can see now the client connects and it sends its ID it's X and it's Y and its size so just to make things kind of have a little variety right now what I want to do is I want the The Blob to send in a random location and a random size and the size will be smaller between 8 and 25 four so let's refresh this again and uh and interestingly there's a zoom thing happening because um everything's based on having a size of 64 but that's fine I'm not going to there's that thing where we're zooming I'm going to just leave that b for right now um so whoops I went to the wrong place and we can see that uh you know it's very hard to debug in node because now I'm printing out these floating Point things we're getting all these values you can see the stuff is in different places so this is really good right we both have a uh we we have now a client who connects who gets a unique ID and who broadcasts its starting up I'm attached here who broadcast it's starting X and Y and size okay here we go let's keep moving everybody I'm excited we're getting we're getting to this uh so okay so now here's the thing every time through draw The Blob updates its location so what I think we need to do right now is update the server's sense of where I am so what I need to do here is now say in draw I want to do this again but I want to emit an update message so I could probably combine these two but in the beginning a start message means I'm a new blob and now in draw I want to update my X and Y location continuously now latency and scale and all that are going to be complicated questions we're going to have to deal with at some point or maybe I won't deal with it but you will have to deal with it but this is kind of getting started right uh the chat U someone writes don't forget uh don't forget to delete Blobs of disconnected clients which I'll certainly have to do at some point okay so now what I want to do is in the server I need whoops sorry I have too many things open I'm going to just go to the server in the server code I need to deal with another message so that's the start message and this is an update message and I'm going to leave this in here and now instead of instead of um instead of creating a new blob and putting it in the array what I want to do is find the blob with that ID now I'm going to do this in a terrible way I'm going to do this in a brute force method of just looping through the array to find the correct blob later I would love to improve this by using kind of like a Dictionary lookup um but I'm going to just to have the Simplicity of having an array right now I'm going to just leave it this way so uh which is I'm going to start with a blob called which which is the one actually I'm just going to say VAR blob and then I'm going to Loop through the length of that array and I'm going to say if blob. ID oh sorry if a socket. ID equals blob's indexi doid right I want to find the blob who has the same ID as the socket then I want to say blob equals blob's index I and then what I just want to do is update the location so I want to say blob dox equals uh data dox blob doy equals data doy and blob do again I could certainly improve this and just copy the object or make it the same object but for Simplicity I'm say blob. R equals data. R so this is essentially here now updating that array so what I'm doing doing now is as the blobs update their location the array keeping track of where all the blobs are gets updated as well okay uh now I don't need pause. X here this is I this is accidental because the way that I programmed it maybe you could do this in a different more better way but I'm using a vector in the client but I'm not using a vector in the server a vector object that is okay so uh let's see what happens now when I restart the server and I also do this we should see now you can see here the you can see that the location is moving continuously and it's just I don't know it's going down let's see if I move let's see if we can I can like move into the client to see it now it's going back up so we we're not seeing anything move right because it only moves that it's drawn um relative to itself but you can see that this is actually working on some level and I by the way I'm GNA have to put some you know constraints around where the blobs can move to okay uh so we're good we've got now every blob and you can see now if I were to connect a second one you would see here and if I kill the server for a second we should see I don't only see one ID so let me try that again let me hit refresh here let We Fresh here and there should be h I have a new clent oh okay hold on there's an error here cannot set property X of undefined so I got some sort of error uh ah it must be oh the if I don't restart the server no we did get two client so this is I I really have to always just restart the server because the server's got this persistent uh list of clients and if somebody connects uh and then can't find that um can't find that in the list we're going to have a sends an update message so restart the server so you know there's some cleanup here I need to do um but I don't know why I'm not seeing more than one uh client message I'm GNA time out here for a second um to try to investigate this this I have to get edited out of the public version of this because I I'm a little confused um what I want to do is uh take this out whoops and run the server so one client connected AAA here's the last four digits and now oops another client connected let's close this so I definitely had both clients connect with two different ID numbers and two different locations um so why let's do something now where in the client so I'm going to put this back in and I'm just going to only console log the socket ID and I'm going to change the client to have uh sorry I'm going to change the client to have a frame rate of one so those update messages don't come in so fast uh and I'm going to close these and so here we're seeing kind of a heartbeat every frame of that one client's ID and now I'm going to connect another client we have a new client and I see the heartbeat of the second one and how come I don't see the heartbeat of the first one anymore let's see if I have an error here there's no errors there oh no no no they're both there that's just weird how oh you know what it [Laughter] is the code is actually working just fine you know what the you know what you know what browsers do they try to be smart and uh uh maybe you haven't figured this out yet but I'm going to show you look uh I'm seeing now the B client and now I am seeing the a client and the B client let's see if I can make it do both of them nope now I'm seeing both of them so if the window is not in focus in the browser it shuts down that draw Loop so I'm not able to yeah yes so everyone is already uh everyone in the chat has already figured this out at the same time I did or earlier but anyway okay so so I can go back into the video now let me get back to where I was and uh I'm going to go to the client and undo a bunch of things I kind of like having the frame rate one oh uh that's all I did in the client I think the client is good now whoops and the server what did I do I just changed this so that's good um okay uh yeah okay so um how are we doing on time 350 all right we're in good shape everybody so I'm gonna go back into the video and explain what was wrong uh and Mata who is uh I can just only thank over and over again as much as possible we'll splice this together um and I'm going to now say let me run the server again okay um I am back after some debugging which I realized aha browsers will play tricks on you sometime notice how I'm only seeing the updated location of one client it's not because it's not working it's because my browser is actually only showing me one client and the other tab which is hidden has gone to sleep this is a smart thing because why update an animation in a tab you can't see but if I pull this tab out and make it visible now you can see that I have both of them showing up as they both neither's asleep so this is something I just have to keep an eye on as I develop uh things further so okay so I'm going to put this back I'll I'll pull it out or just actually close it I'll pull it out later when I need to so now we need to add a feature there's a problem here which is that um uh I'm letting these blobs just go infinit off into like an infinitely large space and you can see its location currently is um its location currently is like negative thousand, something so I need to put something in the code to constrain them to a fixed space in the screen and the uh I could be um there's a lot of ways I could do this but I'm going to just do it in a really uh I'm just going to write a blob. constrain and in the blob object I'm going to write a function called this. constrain uh and I'm going to make that blob. dox equals constrain blob. p.x zero and WID uh and actually I'm going to say negative width to width and I'm going to say uh y negative height to height and because it's 0 0 I think is technically the center the way that I've written this if you remember from the previous tutorial so again I could make a bigger I can make a smaller world I can make it a flexibly sized World depending on how many blobs are there but I'm just going to do this and this should give me a nice now if I refresh this you can't see me moving but if if I look at this location at some point I don't remember what the size of the window is I think it's around 600 uh you're going to see that it sort of stopped at 600 so this is really useful because as I'm testing it I don't I want to be able to see things within sort of like a similar World okay so now what I want to do what I want to do now aha so I have everything working I have a server which is receiving information from clients each client having its own blob that's moving around the screen what I'm not doing is broadcasting back to the the clients where everything else is so oh boy I'm realizing there's a big complication that's going to arise in a moment but it's okay we're gonna we're gonna we're going to get through this together be in a happy place figuring this out but what I at least want to be able to see is step two here I want to see somebody else's blob appear on my screen I want my blob to appear on their screen okay so here we go let's figure out how to do that what I need to do is I need the server to broadcast and if you look uh if if you look here um I'm trying to think of the best way to do this to start um let's go back to the the the sorry the server code or have I I think the server code I've destroyed it I need to go and grab sorry uh so what I want to do is what I want to I just want to create a I want to create I'm trying to think here I want to think that I want to do is create just a heartbeat that every so often the server sends a list of all the current blobs and their location so I am going let's go back to the canvas example which I uh sorry I lost my original code let me find it ah let me find it this way uh uh sockets uh server so what I'm looking for is uh this io. sockets emit sorry I could have this was what I want to do is I'm going to write a function called set interval and what I want to do is have a heartbeat function happen every I'm going to have it once per second now just to make it really slow to update and I want this function heartbeat to emit uh heartbeat uh I call it a heartbeat I think that's a common word in networking like it's like your heart is continuously beating at regular intervals this is something that the server is just going to do at regular intervals and what's it going to do it's going to send out the full list of blobs and actually right now it's just going to send out hello so I just want to see and I I I just want to see a message I want to see that I can get the client to receive a message from the server every second okay so let's see how that works so I'm G to go back to the client code and the client code I need to go back into the canvas and see I got I need to add this uh this on method I want to do something when I receive that heartbeat so I'm going to bring that in and I'm going to put it in setup and and when I receive the heartbeat I just want to say console.log data so I just want to see that message come in okay so now I've added a heartbeat to the server and a heartbeat to the client so let's run this again let's run the uh client and we should see hello hello hello hello hello server is sending that now let's change the server to do something else instead of sending hello I'm got to go back to the server let's actually send that array let's just put the array in there let's see what happens if we just put the array in there we might have to stringify it I'm not sure but let's just put the array in there and see what we get o that was a loud noise um okay uh so I'm going to restart the server and I'm going to refresh the client and object object let's look in object there it is it's an array with uh so it's actually sending it as an object which is terrific you can see the ID R so I'm actually getting all this information in the client now bear with me here let's connect a second client and a third client and a fourth client and let's look at what that heartbeat looks like now I got to go look look at this an array of four things there we go all four things right there so what is it that we want to do all I've got to do now is Loop through those four things and display them on the screen the server sending me here's where everything is here's where everything is here's where everything is oh this is wonderful so let's go ahead and do that so I'm going to add to the client code um where's my client code so many different things here it is I'm in draw uh okay so here so I need an array oh that array blobs I already have it I'm going to say blobs equals data so that was an array and then what I'm going to do is I'm going to say four VAR I equals zero I is less than oh I have that there so funny that I have this here already and I was going through it backwards but I I they're not actually blob objects boy I'm just going to draw just to see that they're there I'm just going to draw an ellipse blobs indexi dox blobs indexi doy blobs index i. R * 2 and I'm going to draw it and I'm going to make it a different color and I'm going to say uh let's just make it like a blue or something so we see it as a different color so let's just see how that works there we go look those are the other blobs and I can kind of walk around and try to find them those are from the other clients and I could go to the other client and I could try to find probably presumably I have to refresh I could find the other blobs now one thing I might like to do is actually display the ID is that's going to kind of um kind of help things I don't know what's going on there if new blobs are connecting continuously uh let's just see blobs do length whoops uh there we go yeah I don't know why I have so many um so I there's some debugging that I've got to do here uh seven no it's right I guess I have seven tabs open do I have oops do I have seven tabs open I can't keep track uh you know what though the server hasn't been restarted and I've been doing all sorts of crazy stuff so in these kind of cases it's generally good to start over so let's just do two blobs and see if things are working so I'm gonna whoops and I went to the wrong server the wrong project 3000 here we go Okay so time out what's going on here I think there's something going on with the way that I draw everything relative to itself oh I know what it is I know what it is never mind back in I'm drawing myself and I'm drawing myself only once per second so as I move around uh it sort of looks like I it's like I I'm still drawing myself in a previous historical location so that I'm going to fix as I stop drawing myself which I need to do so one thing I want to do is I want to draw the blobs with their ID so let me just for a second see if I can make that happen really kind of quickly in a in a like a not so awful I'm going to say Phill 255 text blobs index ID and then I want to say blobs index i.x blobs index i.y plus r blob's in uh index i. R times uh three let's have it appear below and let's say text align Center am I getting the ID yeah okay oh the way that's not so let's make the ID a lot smaller I think probably the uh window yeah uh text size uh 12 and uh the times three was unnecessary uh okay so I want to see uh let's make this six what's going on with text size okay that's kind of what I wanted to do so I just want to be able to see quickly the ID below each of the blobs okay we're getting somewhere we're getting close now here's the thing I want to not draw myself there's going to be a third part to this clearly we're getting pretty close and I'm going to release this code and you guys can kind of get further on your own I'll come back and do the third part at some point but the a couple things I want to fix here number one is I want to uh I want to know my own ID and not draw myself so I need to have um in this particular uh sketch my own ID and I would like the uh I would like to send from the server a message just back to myself now um so when I send this first start I want in server to um I want the server to send a message back with the clients I ID like the client needs to know its ID so the question is how do we in uh how do we use uh node websockets to send a message only to this particular client and uh it's probably something like socket. emit or something but I'm just going to look this up uh Set uh node uh sockets send message to one specific client uh so here uh so uh so how do we do this you have to grab the client ID uh and we can just say io. client session ID uh. send let's see if that works um uh so let's see if this works like what if I then say this and so I want to say uh uh socket. I wonder if the client has this built in somehow does the client have this built in somehow let's look at this oh look there's the ID look the client already knows its own ID isn't that wonderful so I don't need to send it back the client knows its own ID now why does the client have to have it as um without the without the extra num slash a number but that's fine we can work that out so what I want to do here now um so I don't need this what I want to do in the client is I want to when I'm drawing them I want to only draw them if the ID is not my my own ID so uh I want to say as long as blobs indexi doid does not equal uh socket. ID but the problem with that is blob's ID has a couple extra characters at the beginning so I'll just do this I can just chop those off I think with substring substring is a method that will give me a part of a string and if I go back to the sketch and look please don't move around uh you can see that there are there are just two extra characters 01 so I want the substring to start at two um so I want the substring to start at uh two comma uh and let's just uh let's make this simpler let's say VAR ID equals blobs indexi doid and then I can say um id. substring to to the length of the string so I want to make a substring from the second character all the way to the end uh and as long as that's not the case then I can draw that particular blob okay so let's see here so we should be good in that um well there's a whole lot of blobs now we can see that I can find other Blobs of varying sizes if I kind of poke around the screen but I am not drawing myself um so we're in pretty good shape here let's let's change a couple things first of all let's restart the server I think that we can now in the server do a away with this console.log that's happening over and over again as everyone updates itself and we can um what we can do is now really test out two particular clients so to do do this what I want to do is kind of divide my I'm going to get rid of the I want to divide my wi screen in half here and I'm going to uh just go to I have two windows open that aren't connected yet to the server then I want to run the server connect this one to uh sorry agario one and you can see there's a client connected then I want to connect this one to agario one and there's another client connected so we can see what their location starting locations are and I should be able to now move around and try to find it anybody anybody where are you other blob I know you're out there somewhere so okay so we're going to have to do this it's nice to just look at these circles on the screen okay so I got to figure out what went wrong here I think we're on the right path let's do a little debugging here uh let me make this a bit smaller oh I don't know why oh there it is I don't know why I couldn't find you before come back which way let's let's go over here and look at where these blobs are there's two of them one is that oh negative 600600 which is over here I think should be the top left so where am I okay okay I am back okay so I'm going to um just uh console.log the blobs X and Y position uh so I can take a look at that and the other thing I was going to do here is only say if Mouse is pressed then uh update the location so I'm actually not going to move a particular blob unless uh unless you click the mouse so what I want to do is I need to find terminal again this is going to help me debug so I'm going to kill the server I'm going to uh re hit refresh which uh will make it so that it doesn't actually connect uh and then I'm going to restart the server I'm going to start one blob and it's saying undefined so hold on I need to fix that uh blob. p.x blob. doy uh so let me refresh again uh you can see okay so uh and that's now showing both of them them uh so hold on I'm got to restart the server and refresh this okay so you can see here this particular blob has shown up at this location 150 comma 24 and let me make this a little bigger there we go and now I'm going to go to the other blob I'm going to start a new one oops and you can see there it is so now I want to move this blob a little bit whoops uh and let me see if I ah and that worked there we go and it the thing is it's only updating it's only updating once a second uh and so I can move closer and you can see ah okay so let me fix that this this is totally working by the way uh but uh let's kill the server again I'm going to make this look a little bit better so I should I don't know what's reasonable but I'm going to have the server have its heartbeat um 30 frames per second is uh um and there's a th milliseconds in one second so let's say let's have the heartbeat happen every uh like 33 milliseconds let's see if it can handle that so I'm going to restart the server and I'm hit refresh here and I'm going to take that out and I'm GNA hit refresh here whoops I'm hit refresh here and we should see now as I move and let's get a third one going let's get a ah this I'm gonna get a third one going and one more come on you can do it agario there we go so we can see here uh if I were to move move around uh they're all responding to each other we've got a multiplayer kind of beginnings of a multiplayer agario here so okay everybody this is the end of part two I don't know how long this video was or if it was at all understandable or useful at the very least you sort of saw how difficult this is and the and I will release the code for what I've got so far so there's a big missing piece here which is that I've got to check intersection and figure out what to do actually uh add add the game mechanics where you when they intersect the bigger one eats the smaller one the your game the smaller one's game is over maybe you can start again there's a lot more steps to add to this but this I think is going to get you a little bit further as you can see the sort of basic mechanics of having a server keep track of a list of everyone connected have the clients Implement their own motion physics update their location to the server and if the server send those new locations back to the clients so that they update so you know there's a question of you know how do you deploy this what would happen if you suddenly had 100,000 people playing this all at once is node and websockets going to support that but you can sort of see the basic ideas of how you can have this more sophisticated networking multiplayer networking um working um so um thanks for watching this particular video uh this was part two and at some point I will release a part three which I do a few more steps although it might be a while before I get to that thanks again okay um so every what somebody in the chat is telling me something about declaring ID at the top of the code and I think I that is um you're right that that is no longer necessary I'm not using that for anything so I can take that out if that's what you were telling me um at one point I was going to keep track socket. ID always has this particular um socket's ID um okay um let's let's do a quick okay so uh so there's a couple things there's a lot of things I haven't gotten to today that I wanted to get to but uh and I'll get to them later another time um but let me see here uh uh part three you're definitely not going to get to the Blobby circles thing that can be done that can be done before I really have to go so um let's let's make that happen um let me just set myself up in um let me do this in a slightly different way I'm going to do um whoa what happened there sorry something weird happened and uh so I'm just getting myself set up here and I'm just going to go back to uh am I still running the python server okay yep okay so what I'm going to do here in here oh I forgot this is now all got all the socket stuff in it I'm going to get rid of that just going to get rid of the socket stuff just to simplify uh oops and close this and this actually technically could go before I think in the order of release could go before the networking thing uh okay so what I want to do is make this uh more Blobby than just a circle so and uh one thing I want to do in terms of the zoom thing uh there we go is that okay so the cameras are about to shut off okay so this is going to be another coding challenge the Whiteboard is visible uh and I need this over here I'm over erasing the whiteboard in case you're wondering where I went and uh what I'm going to do is um stretch for a second do some yoga I don't have I have none of my sound effects or anything but okay so here we are and really I'm GNA sorry close a bunch of things this is important and uh let's just do this okay um okay so here we go so all right I don't know what to to say this is oh boy I really have to go this is a bad idea it's fine I'm G to do it anyway thank you guys for being here today uh at one point there were actually over 200 people watching this which is kind of insane and it rightfully so there are only a little over a hundred people right now which makes a lot of sense based on how this has been going um okay here we go hello and welcome to babby out let start over hello and welcome to a coating challenge which I'm going to call Blobby coating challenge I want to make something that's a blob this is a this is sort of loosely a part of the agario coating challenges where there are these circular things moving around the screen but I'm in this coating challenge only thinking about just that sort of stationary Circle which is a nice perfectly round beautiful happy little circle right there but I want it to be wavy curvy on the edges and kind of feel a little Blobby so let's think about I'm going to come over to the Whiteboard here and draw some stuff um right this is a perfect circle which is drawn as an ellipse but another way I could draw this per perfect circle is by using a call to a function called begin shape and a call to a function called end shape and in between there I could make a lot of calls to a function called vertex so if I were to say put a Vertex here put a Vertex here put a Vertex here vertex vertex vertex and connect them all then I have what I started with a nice Perfect Circle but what if I were to make this vertex go out over here and this one come in over here then I might have something that appears kind of curvy and what if these Wiggle all around and kind of blob around then I have something that appears kind of squishy and Blobby now there are a couple different ways I could do this uh option number one I could do some kind of physics simulation with a lot of springy forces so I have this like almost as if these are all connected by Springs and as you pull one it pulls the other and it kind of flips back and oscillates and jiggles and that sort of thing I'm going to do that in another coding challenge you can take a look at one of my uh toxic Libs uh kind of like cloth simulations to get an idea of how you might do that another way I could do this is with pearlin noise and I think I'm going to try that right now or I could use like a sine wave in other words all I want to do is Alter this radius right uh each of these points is calculated based on an angle which I'll call Theta and a radius if I iterate over all the different angles but change the radius uh and have those R radi move move up and down randomly I can get something that seems kind of squishy and Blobby so let's see if we can make that happen the first thing I want to do is go into the blob object and find this show function which is right down here and you can see what's happening here I'm drawing an ellipse but I'm going to change that now and I'm going to do a couple things one is I'm going to say push and pop because I'm going to also use translate because I want to First translate to the center of this object and then once I've done that I can say begin shape and I can say end shape and then I can have a loop so what do I want my Loop to do I want an angle to start at zero and I want to go all the way to two how do you spell two pi and I'm going to go up by some amount I'm going to say 0.1 and I really should be more thoughtful about this but I'm just going to randomly do this and then I'm going to say I have an X which is now this object's radius times cosine of that angle this is a polar to cartisian uh conversion which I would refer you to another video where I go through this math in a bit more detail but now I can just set the vertex to that X and Y position so let's run this and see if we get basically the same result I find it hard to believe that that's really what happened am I looking at the correct code let me comment that out oh it's not there shockingly that looks way too similar I guess that worked oh you can see that it actually changed because it's not so perfect there on the right let's um let's um just to see see how this is actually working let's draw little ellipses and take out the vertices right you can see that's what I've actually done I've drawn all these little circles and connected them uh so there we go so this actually worked the thing is I want this variable this R to be something that changes so what if I said R equals this. R plus a random amount between neg5 and five and so and I used r instead what would we get now we would get something that looks like this you can see those radi are changing What if I did something where I said um I want to have an offset which equals map s of the angle uh which goes between negative and one and one tog five and five and what if I say angle plus frame count times 0.01 or something so uh and so this is now this. R plus offset that didn't do very much oh you know um I just realized uh yeah that's just moving all the vertices together with the same offset so they have to be offset from each other anyway the point of what I want to do is not that actually I want to make this a sign this sine wave thing work okay what I want is for each one I want to do I want to get this to work let's make this actually work I want wanted to do this I want you to just see what it looks like when there's a sine wave so I want to have this I need a separate value uh that's I that really should work or I guess maybe these angles aren't are changing by too much hold on let's let's make this work right do I need to multiply this by like some tiny amount or something um what am I what have I done wrong uh okay uh pause Time Out Hold on let me figure I I I I'm I'm drawing a a blank here for a second so um uh they each oh be they each should have uh let's put the ellipses in for a second right so this is the idea but I want them to be off I want it to look like this but I want them to be offset from each other so right if I do this oh because they're all frame count is the same is this not enough like if I do this yeah oh maybe I just need to multiply it by like a lot there we go thank you okay uh I'm I'm back uh whoops oh I'm back so actually the the the angles I just forgot are only between zero and 2 pi so there's only one cycle of the sine wave so I actually want to multiply the angle by a lot uh if I want to see that sort of oscillation so I I can get something kind of like this and you know I could play around with these uh you know values anyway you could you could get the idea of how I might and I could off you can get the idea of how I can do various kinds of different offsets to change the quality of that shape but let's actually just use pearlin noise which I think will produce some interesting results so what if I were to say um noise uh and I want to have um an X offset which I'll say equals zero noise of X offset which goes between 0er and one and I want to map that between 25 and 25 and I want that X offset to increase by some amount uh for each one of those so if we see this you can see now I have this kind of Blobby looking thing and each time I refresh it looks a little stranger now you'll notice I have an issue where I'm not able to connect the last point to the first point very well and there's ways we can kind of improve that but you can see I've got like this kind of goofy looking shape now what I can actually do there's a couple things I could do number one is I could add a y offset and the Y offset is kind of like uh a a global variable for this object it could start at it could start at zero itself and uh and the Y offset is a thing that doesn't change for each one but just changes over time itself so if I use two dimensional pearlin noise now you're going to see this kind of like Blobby of shape now the Y offset is changing rather fast so I might want to slow that down quite a bit and you can see now I've got some a more undulating like type thing I could have also by the way just not used twodimensional noise but I could have just I could just say x offset plus y offset and you'll see this is doing something this looks like it's actually kind of like spinning because the noise values are actually kind of rotating around so that's another effect that you can kind of get by just like changing where the noise is beginning and even this like this doesn't bother me so much but you could consider using something like this in aario to make it kind of a little bit squishier and um and that sort of thing so this kind of gets you the basic idea of having a bit of a plin noise ball so to speak I think what I'll do hopefully remind me in the comments is when I publish this code I might uh simplify this even further to just have that kind of shape thing and you kind of tweak it and let's think about and about improvements that we could make to um to tie the last point back to the uh first point itself um okay so thanks for watching this at some point I'd like to show you how to add some spring forces to this which will be another uh another nice um kind of quality to it as well okay thanks for watching this uh coding Challenge and I'll see you again in a future video uh yeah thank you go to your meeting okay so I'm GNA wrap up here uh somebody requested the uh pearlin noise song which I will play myself out with if I can load this up here um I'll be back next Tuesday or w Wednesday um um so this was a kind of a mess today but I I did get some practice in uh and I thank you guys for watching I'm goingon to um whoops what did I oh that was just the um sorry that was my sound effect version um okay so uh we did some stuff today I kind of got some agario Network Stu in there I talked about the history of processing a little bit and I'll be back on Tuesday to start this um fall course I'm GNA lower the volume here uh I think I did that's what I did I'll to um start this fall course and stuff and more stuff that I'm doing uh my brain is completely fried and uh but I enjoyed being back here Live on YouTube again I'm glad that you guys were here to watch if you H subscribe like share all that kind of stuff um keep watching keep giving me feedback posting the rainbow topics and I'll see you guys next Tuesday or Wednesday I'm not entirely sure which it will be and uh what I'm going to cover by the way is Javascript and strings in JavaScript and some of the P5 Dom Library stuff that's what I'll be doing next week and getting started with that particular syllabus okay uh I really got to run I've got 25 minutes to bike back over to NYU and hopefully I'll make it so I'm going to uh turn off the stream and have enjoy your holiday weekend if you're here in the unit States it's Labor Day um and I hope to see you all again soon thanks again you guys