okay we've looked at Angles we hopefully feel somewhat comfortable with trigonometry now we're ready for the next step the next step is simple harmonic motion what is that well we there's lots of examples of that that we could find that we're actually going to model in in the next video after this one we're going to we're going to model actual The Swinging of a pendulum we're going to look at the bobbing of a spring how can we model those things through forces um but we could think of lots of examples plucking of a string maybe the flapping of a butterfly's Wings we could even model with simple harmonic motion so how could we model simple harmonic motion well there is one incredibly simple way of doing it and so to do that let's take a look at um the sign function so if you've ever seen a graph of the sign function because maybe that's what you look at in your spare time it's going to look something like this it's a wave pattern right if this is a graph of y equals s of X now a couple things we should note about this this looks quite a bit like a soundwave a lot of what we're talking about here if you're a sound person you know way more about this than me you can correct everything in the comments below but one of the things so the sign function gives us this wave pattern so we've been we used sign to do kind of a polar to cartisian transformation thing in the previous video now we're just saying hey if sign gives us this nice wave pattern couldn't we draw that wave pattern on the screen or couldn't we we map the an object's location its Y location to the results of the sign function and have something move up and down notice something about this sign function it doesn't look like this right if it looked like this this would be kind of like our I just learned to program bouncing ball example right it hits the side it it goes over this way it hits the side turns around we have this nice easing to the top and speeding up and easing into the bottom and easing out of the bottom and easing to the top and easing right the fact that there's this nice smooth curve is something we can really used to our advantage in modeling different types of motion and behavior on the screen so a couple things about this one thing we should say is waves have properties to them um two properties that we can think of is one is amplitude and the other is period and I'll put here in parentheses frequency frequency is really just one divided by period so let's look at what those mean so amplitude uh it refers to the height of the wave the difference between the maximum part of the wave W and the minimum part of the wave you might remember some stuff about this when we looked at pearing noise actually maximum part of the wave to the minimum part of the wave that is the amplitude period is the amount of time it takes for the wave to repeat itself how long is one cycle that repeats and we can see here how long is that this if we look from here to here this is this section is an entire cycle of this wave and so this length is the period so a smaller period is faster oscillations a longer period is slower oscillations because I have no props or diagrams I'm just doing weird things with my body okay so these are the things we want to control if we are modeling the butterflyes wings is it a big amplitude are those big flapping or small flapping are the flapping very fast a low period or very slow a big period and frequency by the way is just the inverse of Peri of is how many how many uh Cycles in one unit of time so this is a very high frequency and this is a very low frequency so okay so that's all kind of in the abstract but how does this map to a processing sketch so let's think about that for a moment let's create a processing window I'm recording excellent a processing window and let's say we want to have this object just simply oscillate to the edge of the screen and all the way back back and forth oscillating back and forth so what is the amplitude of this oscillating motion well the amplitude we could think of as this distance from the center to the edge we could think of that as width divided two excellent what is the period what is the period in this oscillation well we say how long does it take for one cycle what is our unit of time like how long what like the aha I just thought of it in processing our unit of time is frames so we can think of how many frames does it take for it to get all the way to this side and all the way back to get to do one from from from from the center and back again so one full cycle we could think of in frames maybe our period we say is 200 frames so now what we need is a Formula we need to say if if we are um if we are trying to get the X location oscillating with this amplitude in this period how do we do that okay well let's go back to the sign function s of an angle what is the amplitude of that of the result of the sign function well actually s oscillates between one and negative 1 the biggest number you'll ever get out of the sign function is one the smallest number you'll ever get out of the sign function is negative 1 trust me you're never going to get anything bigger than a one or smaller than a negative 1 so if we say the value of x in this oscillation is equal to the sign of something and I'm probably going to run out of space here the sign of something if we multiply it by amplitude if we multiply something that goes between one and negative 1 by width divided by two we're going between width divided two and negative width byid by two so we can take the result of the sign function and multiply it by amplitude now how do we get the period H so in processing okay well first of all what is the period of the sign function well remember a circle full rotation of a circle well if we look at this this is zero what's over here 2 pi what's over here 4 Pi so every 2 pi in the sign function it repeats right if you remember that in our polar to cartisian coordinate transformation it takes us 2 pi radians to get all the way around you can think of going around in a circle almost as an oscillating motion so a full period for the sign function just the way it is is 2 pi so what we want to do is say hey if we take I'm going to just make these parentheses down here frame count what frame are we currently on divided by period and multiply that by 2 pi now we're going to have oscillation according to the period we want now why does that formula work frame count divided period time 2 pi remember 2 pi gives us a full cycle through the sign function so when frame count is zero what's 0 divided by period zero when frame count is 100 what's 100 divided period 0.5 so we're halfway way through the full cycle when frame count is 200 200 divided period is 1 so you can see this is like a ratio of our current frame count to the period how what percent are we 10% of the way through the period 50% 60% multiply that by 2 pi and we have this full cycle let's go see that actually work in a processing sketch so here we are I have a processing sketch here which is all set up and ready to go we have x equal to zero and we're drawing a Circle at X but now we want to M we want to have that Circle oscillate back and forth so we can say x equals so let's give ourselves an amplitude of uh width divide 360 and a period of uh we said 200 frames so X is equal to that amplitude times s of frame count divided by period and I'm going to run out of space it's very sad so I'm going to make this a little wider I'm wasting time in this video doing that but uh and um I'm going to say frame count divided by period times 2 pi so by the way you can say two times pi but there's a builtin constant in processing 2core Pi so if we run this now we can see we have this oscillating motion so it's as if there was almost maybe a rubber band a spring it might have looked better if it was moving up and down this maybe looked a little weird moving right and left but you can see here we go we've got this nice oscillating motion back and forth very simple with a period of 200 now that that can be flexible you know we could adjust the period you can see if I make a period of 30 it's going to oscillate back and forth much longer if I make a smaller amplitude it's going to just oscillate back and forth like that so so here's the thing this is kind of okay uh little example mishap I'm going to edit this back and starting now okay um so here's the thing okay so this works we have this nice little oscillating motion and we've really like we've got our period down exactly mapped to frame count we have our amplitude but honestly like using this elaborate formula is not really that practical and uh what I want to look at over here right we we've written out this formula which in kind of a messy way but really I can just I want to erase this part of the formula and I want to go back and put these parentheses here and ask a question what goes in there so we had this what what we put in there if we look over here really quickly is like amp frame count divided by period time 2 pi but what we really want in there what really what is that what ises that formula resulting it's a number that kind of goes up every frame right frame count is zero and then you divide by the period and then frame count is one and then you divide by the the period in frame count two and you divide by the period it would be much simpler if we just made up a variable called a or Theta and said A Plus equal 0.0 run and what is that that's really angular velocity I guess you can't probably see the bottom here um I got to work on that I know I said that before I swear I'm gon to get better um okay so what's going on here we could really simplify this example by using the concept of angle as position angular velocity angular acceleration and and we don't even need in this case we could we don't even need acceleration but we could see that this is a simpler way to do it and um with a higher angular velocity we're going to have a shorter period with a lower angular velocity we're going to have a longer period and let's take a look at that so here we are over here we're going to simplify this example fumbling fumbling here we go we're going to simplify this example I'm Gonna Save it as something um and I'm GNA say hey you know what just put a variable in there call it angle and forget about period make a variable called angle and let's just say angle plus equal 0.05 uh oops not a angle let's run that and see what we get it's pretty similar oh it's too slow I want faster oscillation faster all we need to do is increment that angle quite a bit more let's increment it a lot more and we could see I have faster so you could control that oscillating Motion in a much simpler way and we could even add acceleration to it as an exercise you might just add acceleration to this so this is incredibly simple a really simple way of using the sign function to give us angular uh oscillating motion simple harmonic motion now what can you do with this um we could easily probably make this video an hour and just keep going through example after example and what I want to do just very briefly is show you a few additional examples of how you could take this a step further and what I would suggest to you is you know look at these and try to recreate them yourself as an exercise and you can always go and look up the answers um they're linked uh the examples are linked in the GitHub repo so first first of all um one thing you could do to this is just think okay it's oscillating along the xaxis what if I also have it oscillate along the yaxis what would that look like well here's an example of what that looks like also with many many objects all oscillating so different periods different amplitudes along the X and Y AIS and you can see where you have these sort of um different um oscillating motions so you could uh you could create this kind kind of I don't know what to call this strange thing um by oscillating along multiple axes with variable um frequencies and uh amplitudes another thing we might look at is what if we took this one oscillating motion instead of having oscillate left to right have it oscillate up and down and what if we put one next to it and one next to it and one next to it a array of them all oscillating up and down with slightly off slightly off at a slightly different moment in time if we do that we get this so we can actually use the sign function essentially graph that sign function all these are just oscillating up and down they're just this one starts first then this one then this one then this one they're all oscillating up at different points in time and you get this kind of wave snaky pattern incidentally if you do this and try to do it with pear and noise that's pretty interesting as well you'll get um you'll get kind of a more random oscillating motion now once you know how to do this with what where you start to get really interesting wave patterns is if you say let me add a bunch of waves together what if I take um let me just describe this to you are we over here yes what if I take a wave with this period and amplitude and take one with this period and amplitude and then take one with the I I can't do three I don't know why I tried to do three right we kind of looked at this earlier with pearing noise if we add these two waves together maybe we get this pattern so one thing you can is start um having multiple oscillations adding them all together to create different um different P um more sophisticated patterns and I think I have an example that I can briefly demonstrate to you here this is example 3.9 in the GitHub repo so you can see look at this wave this wave is the result of a bunch of different random waves added together I think if I no I thought if I click the mouse it resets but each time I run it's a different wave pattern so you can see um in this example the way the code has been uded is we have an array of amplitudes and an array of of CH of of of of angular velocities and the last thing I think what what you might actually really look at um which is maybe perhaps most relevant to um the stuff that we're doing here is take a look at this oscillating motion what if you consider that to be the legs of an insect or the wings of an insect what if an object that you have moving all the around the screen According to some um in in twodimensional space what if that object could have its own intern internal motion so it's almost it's its little legs are propelling itself around the screen it's oscillating back and forth back and forth back and forth the faster it moves the more it accelerates the more those legs the the the shorter that period becomes when it slows down the period becomes longer so I have perhaps what I would look maybe uh offer is perhaps one of the Lamer versions of this but you can see an incredibly simple in version of that idea is that this these objects are moving according to position velocity acceleration with attraction this is the same example as in Chapter 2 forces attraction but each one has this little oscillating dot that the faster that's tied it's its period is tied to its velocity the faster it moves the faster it oscillates so it's as if it's kind of trying to like pull itself around the screen like that so you could come up probably with something much more creative and visually interesting to that and you could think of like lots of legs of a centipede that would be I would say a good exercise a kind of project for you I know was we're going to look at a pendulum in spring in a moment but you could really stop here and create a the whole project around the internal mechanics of of of an object that oscillates as it moves throughout the screen okay so uh that ends this uh video that's a um send me some projects you make and um we're going to look at in the next two videos we're going to look at a pendulum and a and a spring modeling a pendulum and a spring