hello again it's not the afternoon if you are watching this right now and did not watch this morning's first of all who knows where you are why you are watching this right now this is a live stream that I do every Friday in New York City my name is Dan the coding train this is the second part of a live stream that I started this morning so I spend about an hour and a half or close to two hours starting a project which I will get back to what that is and now I'm back much more tired this morning I felt like was one of those rare sessions and I actually felt went well usually whatever live stream is over I just feel like oh and I'm like sort of like miserable about it for the weekend and then you know post the edited content get it get that content up by the beginning of the following week on Monday or Tuesday and people write nice comments they go maybe it wasn't so bad but this morning actually felt like it was going well but right now I just feel like got to wake up got to get some energy so if you didn't watch this morning's live stream you could go watch it now or you could just keep watching right now and I will talk about a little bit what I did so far echo 34 thanks for your comment to be honest I haven't even sat down and looked at my email since I pressed stop on the live stream so I press stop on the live stream and I went to meetings and other things all the way through up until about 10 minutes ago and then I raced back up here so I will have to check out anything that anybody tweeted to me or emailed to me or github issued to me later all right so I'm just gonna jump right in on all of the introductory stuff I kind of did this morning Simon thank you for your suggestion about barns Leafs fern I will not be able to get to that today but I would love to do that at some point for sure so I'm gonna try to really if I I should be so lucky as to finish the project I started this morning so I don't think there'll be any separate coding challenge today other than the the project the tutorial project that I'm working on right now okay so let me just abused use a minute to we take a minute here to try to figure out where I was when we left left off this morning so I talked about in general the idea of what I'm doing I run in place do a couple jumping jacks that'll help blood flowing to the brain all right so we're working with a neural network system everyone keeps asking me what's a toy neural network I probably should just get rid of that word I think the reason the word toy is there and I want to race it right now because it'll be a continuity error but um the reason why the word toy is there is really just out of my own sheepish Ness and I want to emphasize that this particular JavaScript implementation is meant to be for educational purposes only and not only but it's meant to be for educational purposes and I'm not really worrying about it being a robust optimised piece of code and it's kind of like a caveat for all of those those people wonderful people on the internet who like to leave me comments about how poorly I've written my code which I admit all of you are right very poorly but that's the way I like it and because what would you have to learn if I didn't write poor code that you could think about how to improve and that I could learn to think about how to improve and also to differentiate it from the neural network functionality that is part of these other two JavaScript libraries that I will start using more and more as we get to projects of larger scale that's why the word toy is there okay so hopefully I wasn't too heavyhanded in my quick my just my brief discussion about the ethics of working with data and machine learning any feedback or thoughts about how I could approach that topic better I'm open in all ears about and so I talked overall about the project then I looked at the Google quickdraw dataset and the last thing that I did was create this processing sketch which when I run it would generate a binary file all right this is going to take a while there any other comments here now well general goes and retrieves all these doodles from the quickdraw data set and then writes the binary file back out to a smaller one and that is whoops that is here so I have cats a thousand rainbows a thousand trains a thousand I'm a little bit worried about these categories I think that cats and the rainbow will differentiate quite well and I guess well let's just see what happens all right so now what I need to do is I need to get set up here so I am going to go into a neural network coding train examples I'm going to start from the emne stun and then the copy whoops I'm gonna cop ah I'm gonna copy it I'm going to call this one doodle classification oh maybe I'll call it doodle classifier yeah whatever doodle classification works I don't want the amnesty data what's file dot txt that was me testing I don't want this I want the libraries the index of HTML and then I want oh I need my data files so I need to grab from the processing sketch these three data files and move them to the p5 example close close close at no no then I need to go to terminal and I need to open this up in terminal and to go here and sketch touch ok so now I want to take out everything so I'm just getting myself set up just delete everything let's say no loop so it doesn't loop if it doesn't need to and I'm probably gonna forget that I put that in there later when I wonder why my code doesn't work let's just get rid of draw and am i running a server already looks like I am let's go to the browser like in randomized terminal why is this that this I definitely want more space here whoops this by the way if I had more free time I would do this before I start live streaming but ok so let me turn this over here alright so I don't need this anymore I don't need I might I don't need this anymore I don't need this anymore I don't need this anymore and what I want to do is go to localhost examples doodle classification ok so interestingly there is some stuff in the HTML file let's take this out so I should think here's the thing let's think about this for a second let's make a plan when I previously did my M nest example I don't know if I would say wasted but I spent a lot of time I'm dealing with the Dom manipulation aspect of trying to do some reporting and the thing that I want to demonstrate better this time is I think I'm gonna separate the training and testing more precisely especially cuz I'm gonna use a very small data set so I'm going to basically train and run testing separately so I'm gonna have the whole thing run through the whole training set a certain number of somebody please tell me how do you pronounce this word epoch a Polk epoch epoch I like to say epoch you poach I like my eggs he poached I think it's epoch but I want to talk about that term epoch when you stake you should know that when you say first one sounds good to me I have no idea what you're referring to because that comes way after I was speaking ye POC a POC a POC epoch I could go to my word next tutorials so so what do I need I think I'm gonna just console.log stuff and actually really leave stuff out of the interface and the interface I'm just gonna show the doodles and then and then create a canvas that I can draw onto the way you say you think you say it but what if I don't know the way that I think I say I say it epoch epoch is good excellent so let's get rid of this let's not let's try to do everything we can to make use of my friend and your friend the console this is doodle classifier sketch now one thing I am going to do not part of this first step of the video is I'm going to create a new file and I'm going to call this file load bytes dot I'm just call it load binary dot J s all right so one thing oh wait the u.s. is different from the UK wait hold on all right I'm gonna I'm gonna take some time with this here I don't know if you'll be able to hear this well so this is UK and this is us and as we all know the UK way is the correct way I mean duh so I'm gonna say epoch all right no I'm looking my email which is the worst idea back to the slack channel chat ok now so you might have noticed if you were paying attention that in processing I use a function called load bytes which loads a binary file into an array of bytes so I might then decide to go to and look at p5.js as a project and say like okay well let me look for load bytes and by the way I could probably look in the reference this is would be where I would start but I'm skipping a few steps here so I'm gonna search the repository and we go to the code oh it's actually not even in the code so in an earlier version it was there was what I was looking for us there was like a little function signature function load bytes and then to do so what I'm gonna do is instead go to issues and look at this two days ago an implementation of load bytes open by somebody named let's say how do you pronounce that I think it's I think the proper pronunciation is chief Vaughn she's mine so I'm gonna look at this and I'm going to just grab this little this little thing here that I'll come back to in a minute I'm gonna put it in here I'm gonna change a couple things I didn't like about my implementation and I am going to I will speak about this in a moment just bear with me then I'm gonna go here and I'm gonna change this to load binary then I'm gonna go here and we're gonna we're gonna add preload and what am I looking for under data cats 1,000 cats 1,000 in so I think this is not going to work well let's see what happens and I need the data directory and then I would set up I want to say console.log cats yeah so we're stuck here so let me see if I can fix this just bear with me for a second then all will be revealed self decrement preload okay so I need this a little bit of code this is what I forgot and what is self refer to Oh cuz I need to refer to this oh because this is using HTTP do but can I just say P 5 P 5 prototype load bytes that's what I'm oh oh because I could say pre 5 prototype download bytes I see alright hold on everybody I'm gonna do this in a different way because I am NOT writing a library of P 5 prototype load bytes and then I'm going to do the awful not but I could change this with I could use es6 here let's do this just everybody hold on for a second does that work get ray buffer I mean maybe I could change it to this because it might as well use HTTP do decrement preload at the end of the callback huh let's see what this does load bytes is not to find y but I have to find it what am I missing this is what I wanted to not do spend all my time trying to deal with the data loading oh I have an error line 3 equals function hello hello ah yes okay wonderful look at me and look at me I am person now look at this look at me look at me everybody aren't you excited by this I I looked at this github issue which had this weird little VAR self equals this so that the this reference would get stored because this is some kind of callback thingy and I said oh no oh no I know about the arrow function I know about the arrow function which retains the context of this but sadly if I'm actually going to submit this as a pull request which I would like to do I am going to need to do it the other way because p5 the source code doesn't use es6 yet so let's say self so I'm gonna go back to the other way and all again I'm gonna get to what I'm doing here in a second all right great now I have one question why I'm gonna explain what's going on in a moment but I have one question for those of you who might be watching who know about this stuff better than me so here's what's going I apologize this is not super beginner friendly and I'm skipping a lot of steps here and I try to avoid this but something weird is going on here where I have to I'm creating this object because I have to make this object that I'm gonna fill in a synchronously here when the data is ready and then but return down here like I'm returning a reference to it kind of instantly so the only way for that reference not if I can't make I can't do this right if I do this this reference will be lost when this returns and you won't see the array but is there a less awkward way can I make a new empty array you int eight array up here fill it with the array buffer here so that what I'm returning is not an object with the bytes property that's my question oh yeah and so hold on VAR I just want to leave this es5 because yeah me I am so B it's a the comment you're making about this being a sort of like awkward weird thing I maybe we can have a discussion about how to improve this because I I agree this may be perhaps this could be something that could be improved but I'm gonna just leave it as is right now and then if I do this nope what did I do wrong oh why cats dot bytes should be that why is it undefined oh it didn't wait for preload no it did oh that's weird huh I could know I can't return data dot bytes I don't think so because it doesn't won't exist data dot bytes doesn't exist yet when I'm returning it I don't know the array the length of the array and Load bytes that's correct I don't know the length of the array until right here I'm gonna leave this but why I'm missing something about I'm missing something really silly why is it that I'm getting undefined here it's it's not preloads not waiting so I mean a setup is not waiting for preload to finish do i maybe I need to register it do I need to do that let's see there we go so I forgot about that I have to register a preload method and then decrement related ok we've done it I'm so so so so want to make this a pull request to the p5 library right now but that will send me off on a massive digression and yes I know I can use a promise and I could do all the es6 thing I am becoming the person who does that stuff and I would I will but at some point we have to that I think it's interesting it's a useful discussion to have that p5 adopting es6 but it just it's a big library and that's a big project to make that happen so ok great this is good enough for me right now so just to say what have I done what I am doing is I want the code to look like this because ultimately when load bytes work in p5 it will just the code will look exactly like this but load bytes doesn't currently work in p5 so I have a temporarily an extra file with a working version of the load bytes function that I have written and this is just using some native JavaScript to do a get request on the file and it's participating in something that's pretty awkward and weird but this preload this preload structure for p5 that allows you to have functions that have to finish before set up triggers ok I'm get my phone is buzzing all right um all right stop stop looking at my watch I need to I need to configure my No hold on let me configure my notifications correctly for once cuz we're gonna I'm gonna be here for a while so how do i notifications no way wait I need to go to my Fitbit app maybe and um and look for notifications no settings I'm getting zillion messages that I want to turn off oh wait I haven't no if I don't I can't no this is connected to my own ology it's just what it just makes things worse these brilliant ideas I have of how to effectively use technology I only slept five hours last night that's not good did I get any deep sleep I'm sure you guys are really interested in this right now yeah yeah I did actually okay um settings No okay forget it all right um all right I'm going to move on now I will hope the text messages will stop what is going on in the chat I know the mic ISM you did okay all right so line 10 has let's I mean this is thank you all right okay all right all right all right everybody all right everybody all right everybody let's get off the es5 es6 thing because you know we all should be using es 71 that is my favorite yes so this video is going to be about this next piece is all about getting the data from the data into javascript and i'm going to just open this up to demonstrate to start from here okay plus like who wouldn't want to have this nice little image of cats alright alright everybody oh yeah a part of me wants to a I should probably just I'm afraid of the you int eight arrays as well but I'm gonna kind of leave it be I think for right now actually I want to investigate something up I'll let it be all right all right being the chat I'm reading a chat all right all right I stopped it okay yeah okay let's use something different what if I think what if I do what if I start a hundred later holy get a clean set of cats let's see all right is this a clean set of cats anybody see any offensive or inappropriate drawings in here I do not I like that this one says meow now there are a thousand most are nine hundred more but at least in the image that I'm looking at it's not popping up with something inappropriate so let me quickly just replace our other cats with these okay somebody can take the time to go flag one of those as inappropriate that would be nice but you have to go to the Google quickdraw site to do that let's take a look at the rainbows rainbow and see how these look just to be sure oh I like these okay everything is good good rainbows no inappropriate rainbows okay now let's grab why can't I keep that folder open let's grab oh I saved it over the cats that's fine also when I release this code I don't want that to be in there rainbow 1000 that comes over here it's actually called rainbows 1000 let's take a look at the trains and let's quickly look at the trains drains look pretty good I don't see any that doesn't look like a train mm I don't know about these trains I'm trusting you slack channel I assume that the YouTube chat is just giving me false information let's I don't like that those first trains let's start 100 later whoo there aren't that many trains let's go back to the beginning for the trains whoops it's fine it's fine I got to move on from this I'm wasting way too much time the trains scanning the trains trains these are like totally not trains at all but we're gonna have to live with it okay now we can bring this over here whoops all right we're good we're good the set oh the soundboard is broken again the soundboard is broken again weird all right all right we don't need the soundboard we'll be fine sorry about that everybody now but I wanted to have the cats up at the beginning of this video cat and I had to start a hundred later he said a hundred times end does that make sense no no yeah yeah I don't know I don't know whatever oh no this is me just skipping them weirdly oh my this makes no sense what I'm doing but I'll just do it anyway oh loading the entire file from the internet every single time I run this sketch is such a disaster that does every 100 I know right so my offset yeah I crashed something totally frozen yeah I was doing every 100 no wonder we ran out of trains now there's like a party going on in the hallway it certainly feels like warm in here I feel like flush I just need to say 784 times 100 but whatever let me just get some cats I just want to see some cats morning morning is a good time I think to livestream for me apparently my brain completely melts down after like 2 o'clock I just want to see a few cats plus 100 times 784 plus times yep okay we'll cover this up here those are trains behind trains yeah trains are good there's no inappropriate looking trains here there's this totally inappropriate looking what is wrong with you people of the Internet one more time and then I'm just giving up on this why quit that's a good point all right all right this looks good I think we're good here I don't see any inappropriate cats does anyone see any inappropriate cats I cannot find one I'm doing my best all right it's a family show people it's not even a show or whatever all right last on Row 4 it's fine it's catlike it's just a poorly done that's just a poorly drawn cat yeah bad poorly drawn cats are okay this isn't even the data that I'm using this is just my opening screen to begin talking about this project okay all right can you guys by the way hear all the talking in the hallway this might be in the background of the rest of the videos for today there's a big party going on out there so there's nothing I can do about that all right get it together people all right all right I am back in my quest to create a doodle classifier I finished looking at and examining and processing the data in processing using the load bytes function and rendering the images to a window and saving out the data files so what I have now and I'm gonna so I'm gonna quit processing what I did in between the previous video in this one sure save is I went oops and I created a sketch called a folder called doodle classification and in that folder there are now there's a data folder with three files cats 1,000 rainbows 1000 trains 1000 so I have 1000 train doodles 1000 rainbow doodles and 1000 cat doodles now now do I really have enough data to make a highly accurate amazing impressive doodle classifier probably not I also probably don't have the neural network deep learning architecture to do it really really well because I might want to add something called a convolutional layer I will come back to that someday in the videos that I make but I just want to try to use my basic JavaScript neural network library in a very simple way use all those doodles as input to demonstrate the training process so how am I going to do this well first of all actually honestly I'm not even ready for this yet I need to just sort of see can I get the data into into JavaScript so if you look down started a p5 sketch and I'm going to add something like this to it function preload and I'm going to create some variables like cats trains and what's the other thing rainbows and I'm going to say cats equals load bytes cats dot cat's 1000 in so I'm going to load use preload to load all of these files now I've got something that I need to tell you if you if it is March 2nd 2018 and you are typing this code along with me this won't work because the load bite function as of the time of recording this video is not implemented in p5 I have with this example a little extra file that I'm calling load binary j s that has a version of the load bytes function written into it and I intend to at some point make a separate video hopefully about submitting that as a pull request to p5 then load bytes will work in p5 but hopefully I'm using version 0.6 zero of p5 or at least that's the version that I want to be using off to check what I'm actually using but so a future version will hopefully have it but this is hopefully going to work so I'm gonna try to load all three of these files so let's look one thing I wanted to mention by the way you can edit this out it's like plus that is I wanted to show you that I kind of had this moment this sort of like moments earlier today I realized like oh look at these nice small files there are seven hundred eighty four kilobytes well why are they 784 kilobytes because 784 kilobytes is 784 thousand bytes and remember each byte is one pixel of 2008 by 28 images with 784 so I have 1784 pixel images this is how binary works on the computer it's kind of excited to see that really work out so nicely the numbers work out so nicely so if I add this to my sketch and I go and refresh the page here whoops it's gonna say file not found why is it gonna say file not found because I forgot that I have them in a data directory so I need to add the data directory now I'm gonna do this now okay let's look at this Katz Katz is an object with a property called bytes and there you can see there's an array and if I kind of open this up we can see like oh boy there's a lot of stuff in there and I could kind of dig into and look these are those pixel values there's a lot of zero because there's a lot of black pixels because it's the drawings originally are white on black I think I'm gonna alter that but but so you could see this is working one thing you might might be new to you which is a little bit strange is that this is a you int eight array which I find to be somewhat terrifying because I'm used to just it's an array it's got stuff in it there are actually there is something in JavaScript which is called a typed array it's it's kind of like a contract you make saying this is gonna be an array but you know you can I'm gonna let I'm gonna tell you what's in it is unwilling available put this kind of data in it so you can store the data in memory more efficiently and so this is a particular kind of array that can only store integers that's gonna be particularly useful for us that's because we're loading that binary information time out wait a second yeah kilobytes is 1,000 right not the 1024 thing is something else yeah yeah okay I'm right I'm right am I gonna get flamed in the comments clapping you guys can hear everything I know it's a little unfortunate is it is it okay like this this is gonna be fine in the end like it's just gonna have weird background sounds in it I should get a soundproof room I guess it's okay yeah Kimmy bike okay all right all right all right I'm gonna move on all right yeah I agree k week Mon it was a 1024 for me also all right anyway yes the array just stores a great value all right all right so moving on let's at least try to draw the images into the p5 canvas so that we can see that things are working correctly so I'm gonna come back I'm basically now do exactly what I did in processing but in p5 and so in setup let's do the cats I'm gonna say and I'm gonna I'm gonna say let me just do 100 and I'm gonna use n to go through all 100 of these then what for each one I need to say I'm going to create an image and that oh you want to say I need to say create image so this is one thing that's tricky about p5 the function create image creates a basically block of pixels for you to work with create IMG creates a Dom element that can be embedded in the page and I could use either one in this case I'm just gonna make my life simpler and create an image that's 28 by 28 then what I need to do is go through all 784 pixels and I need to say image pixels index I equals cats index i + I need some offset so the offset offset is n times 784 right because each block is 784 pixels part of me wants to like split it up and have objects but whatever this is going to be fine cat + offset then I'm going to say image update pixels thank you thank you that's not a sound effect that's actually people from the hallway applauding there applauding for me though hopefully no one's gonna come knock on the door and say I'm being too loud load pixels and then I should be able to do exactly the same thing where I draw each image at an x and a y so X is n modulus 10 times 28 and and Y is well I'm gonna have to use floor here cuz no matter what JavaScript does floating point division and divided by 10 times 28 this is really what I did in the previous one I just want to be able to see that the stuff is coming in so this now I'm sure I've made some mistakes but let's just see if we see the cat's now in the canvas I see nothing I see nothing that is not good so let's see what could I have done Oh cats dot bytes so dot bytes I need to say there we go something's coming in but it's totally off ooh that looks like a mess what have I got wrong I plus offset I less than 784 cat's bytes image pixels i what am I missing here oh yes I forgot something super important in JavaScript native html5 canvas does not store each pixel as a single single integer so in processing each pixel is a single integer which can be segmented out into the rgba components the actual pixel array in JavaScript is 784 times for long there is a spot in the array for our for g4b for a so it's pixel 0 rgba pixel 1 RGB a so I need to I totally forgot have a times 4 here then Oh oh my goodness no no I can just do this time for here and whoops let me zoom out I can say let me get the actual value from the array and just put it in another and I can say pixel eye times four is Val and then that's the red value and these are just greyscale so plus one and I'm gonna goofily add a plus zero just through my code lines up because then plus two everything I'm doing right now is just for the purpose of drawing so and then this needs to be 255 so basically I want to say what's that single value inside of the cat's byte array and I need to take that value and give it to the red green and blue parts of the image and have no transparency and now I'm expecting to see there we go there's all the cats and I prefer it to look like this and there we go so now we can see that I can get the data in to JavaScript all right I think that's I don't know there's a little silly that this was like its own standalone video but I think I want to pause here because this is really just to like look at okay how do I have that data in processing how do I have that data in JavaScript so what do I need to do next in the next video what I want to do is divide out and actually let me do that in this video the first thing I want to do is divide all the data into training and testing because the next video what I want to start in the next video I want to write the line of code equals new neural network and I want to start training so let me think if I could cleverly figure out how to divide the data into testing and training so let's think about this I could have done that by the way I probably should just done that with the files really distracting I think people are winning awards you're still talking about the 1024 thing on the chat okay pause matchy I pause let me think about this I'm totally Awards it's the it's the Film Festival Awards that are happening out there okay all right let me think about this what I was thinking of doing was taking the objects and renaming the bytes like Trey I was gonna have like cats dot training and cats dot testing as like separate arrays yeah I don't think that that other thing is being livestreamed can I use let me just do some tests here was it slice is this how I do like slice yeah did that just give me like and then if I said start at 7 or 84 no so this is not I should look up the documentation for slice slice returns a shallow copy of a portion of an array into a new array and the arguments are from begin to end and not included okay great so that's what I'll do and then I can use oh and I can use splice to take it out so I could do what I could do right cats dot bytes so I could do cats dot test it testing equals cats dot bytes splice and then I would be saying something like I could just take the first 100 so I could say 0 comma 784 times 100 well if I'm saying the first 200 right no splice is not a function cat's subarray oh I'm do subarray but it won't take it out for me so now if I look at cats that worked but what if I want to delete I guess if I took take the end I could just ignore it you can't alter the array so that would be an argument for me preprocessing the data and doing two separate files yeah whatever no but I could just do two sub arrays this is kind of nuts but why not right because then I could do cats training equals cats dot bytes sub array and then I could say like zero seven or eighty four times eight hundred and then I would say cats testing equal cats dot bytes sub array 784 times eight hundred comma cats dot length cat stop bytes dot length right and then I have let me just clear this out here if I say cats I don't know if you guys can see this very well so this is what I want to do I think this is what I'll do that way I have all of it and I have testing and training okay all right let's do that I forgot where I like this is gonna have like a serious continuity issue but I don't remember where I was like I don't know what I was doomed into but on the back okay so one more thing before I move separate images as views into the array huh me I am Samia is writing my advice would be to create all the separate images as views into the array but that sounds complicated that's gonna take a lot of that's gonna require like a lot of coding and I don't really want to do a lot of coding I don't know move on okay I'm gonna do my solution oh oh I see oh that's a really good idea okay okay good idea that way each array is its own thing I like this I like this I like this I like this okay this is a really good idea okay okay okay I'm I'm on board now okay okay I'm on board I'm on board we're gonna make this happen all right you don't have a lot of time here it's already 430 all right I'm out of coffee switch to water okay one more thing before I move on to the next video let's prepare the data let's prepare the data into a raise of training images and testing images and there's a nice way that I've just learned that as a function I could use called subarray which allows me to essentially like pull out or point to a portion of the array so let me let me discuss what I'm gonna mean here so so this is the this is the raw data so I'm gonna just rename these like cats data cats data trains data rainbows data so I'm gonna I don't know why I'm using suddenly the underscore data naming convention but I just want to name these data because what I'm gonna do now is I'm gonna create some other arrays like cats cats training cats of trains oh boy who's bad trains training rainbows training let's just get the training data first so if I have a thousand images I want to use the first 800 as the training set and I must save the second 200 as the testing set so what I'm gonna do and we could comment all this stuff this was me just seeing that I could see it I'm going to say okay I'm going to say I want for example cats training to be a new array just a plain old array then I'm going to go from 0 all the way up to 800 and I'm going to say every element of cats training is cats data sub array and what the sub array array function wants is the beginning and the end of the sub array that I want to pull out so I always want to pull out 784 pixels essentially so I want to go from I well let's see I'm gonna go I'm gonna say offset equals I times 7 or 84 and so I want to go from offset to offset plus 784 and I think now is the time that I'm really putting this into a project that that 780 or number really should be in a variable and I've been to do something crazy Const is a way of declaring a variable that you never intend to reassign and it's a nice way of me protecting myself from ever reassigning it by accident and I probably should be using constant a lot more places in the way that I code but I use it very rarely so I'm going to say Const length Eliane for length is 784 so I'm gonna say I times le n and this is going to be offset le n so let's just so this should if I've done this correctly we should be able to see now I'm gonna hit refresh and I have a syntax error on line 45 oh no like using cots was really exciting wasn't it partygoers are outside that door forever in this video okay subarray is not a function because what do I need to say cats data dot bytes I forgot that that array is inside of an array called bytes and now if I look at cats training we can see there's eight hundred seven hundred eighty four pixel eight hundred arrays each ones with 784 elements in them so we can see here here's the first one here's the second one and this looks good you can see there's all the numbers this is good I now have my training data now I'm actually going to do something kind of a little bit nuts I'm going to change this to 1000 and let's see let's call that Const total input total data I don't know I don't know these are I got to think about my variable names total data so I might change that someday and I'm gonna say if I'm going to I'm gonna say if I is less than 800 do this I'm just going to do this hard code this right now else and then I'm gonna say cats testing is also an array Oh couldn't training and testing just have the same number of characters I like would be so much better if that were the case oh it's gonna my auto formats gonna change that oh well okay so now cats testing index I okay this is good now here's the thing this is correct but I've got to go from I I minus 800 so this should really be a variable I'm gonna say let I don't know what we're threshold it's very distracting well I'm gonna just call it threshold equal a floor 0.8 times total data and so now that's going to be there's going to be 800 going into training and 200 going into testing and this should not be 800 it should be threshold so this is how I'm thinking of my date i dividing it into testing and training and let's look at this threshold and now I can say cats training is 800 arrays and cats testing is 200 perfect we are doing well part of me now and I think I would like to do is actually make a variable just called cats one called trains one called rainbows I'm gonna make these objects and in the objects I'm gonna say cats training is an array and cats dot testing so I'm gonna make these properties cats training cats testing and now whoops if I just look at cats sorry if I just look at cats there you are we see I have the training and the testing the testing is 200 the training is 800 boy this is tedious but it's worth it we're working on we're preparing our data by golly I'm going to dedicate to whole to whole tutorial videos due to working on the day so now wouldn't it be nice if I made this into a function let's make this into a function let's refactor this into a function and I'm gonna just get I'm gonna I'm gonna call this prepare data call this prepare data I want to get a category and the data that goes with it so I'm adding the training and testing to a given category from given data look at me refactoring the code while I'm working and then I can just say prepare data cats cats data prepare data rainbows rainbows data and prepare data what was the last one trains trains data if I did this correctly we can look and see it cats there we go rainbows there we go and trains there we go now whether or not the data is still the correct data in there I'm just going to sort of feel somewhat confident that I did this correctly but I have now we have now completed sort of working within examining the data in processing to save some new data files with much less data in them I've now in JavaScript I'm able to load those binary files and I have a little function to divide it up into training and testing so now in the next video I can finally write the piece of code that I've been wanting to do all along let neural network equal new neural network so that is what will happen in the next video and thank you for watching perhaps I will see you there all right I'm getting some good comments Eliane ln is a little bit generic a little generic for a what's that oh I'm the wrong view what's that style guide that everybody uses it's like some some company looks like Airbnb it's JavaScript style guide or something air B & B JavaScript style guide so I feel like I'm supposed to use this right and and of course I don't and then I'm supposed to do this not Luke underscore Skywalker so I probably if should do this I will I will just do that right now nobody will notice a little continuity issue but it'll be fine so many more places that I put that probably oh yeah okay camelcase that is correct all right total data okay why is this year I don't want this can I make this a little smaller is this still okay sizewise okay yeah I could write this I could do that line 23 has an underscore data no I fixed it though right okay yeah I'm not really so big on the whole style guide thing you know me and my looseygoosey I'm trying to gab trying I'm listening I'm adopting and I'm changing my views I can see value in conforming to style and with making it easier and to manage and collaborate an open source okay someday I will come to all of that all right so now the next step all right all right so let's get to the next step it's 440 we've got at least another hour here I have I'm having like phantom buzzing like you know how when you're you I don't even have my phone in my pocket my phone will be on vibrate but I keep feeling like it's buzzing this camera just went off all right all right all right all right here we go try I'm just thinking for a second I think I want to move this that's fine okay all right okay all right okay here we go okay just out of curiosity here I'll leave this in here all right doodle classifier with you all right now I think we're here I mean this is like I'm ready to actually start trying to do guess yeah settle down outside the room I'm ready to try to start actually doing the neural network training so just to kind of recap you know hopefully you've watched some of the videos that are leading up to this particular one but what I have right now is I have a JavaScript program that loads 8 data for 800 doodles of cats 800 one thousand eight hundred a thousand tools of cats a thousand doodles of trains a thousand doodles of rainbows all these doodles come from the Google quickdraw data set which I covered in previous videos now what I've also done is prepare the data and separate it out into into eight it's about 80 percent twenty percent eighty percent for training and 20 percent for testing so the first thing that I want to do now is I need to create a neural network that will work with this data it needs to be able to receive a single image as input with 784 pixels and it needs to give me an output with three numbers which each represent a likelihood or like a score of how likely it is to be of a given category so we can think of maybe this category will be cat this category will be rainbow and this category will be train and low so let's actually set something up because we're altom utley everything is everything boils down to numbers and we think of this as an image and we think of these as string labels but it's going to make sense for us ultimately to use numbers so what I'm going to do just really in the code really quickly is I'm going to add at the top some constants like cat equals zero rainbow equals one so this will be kind of a mapping rainbow what was the other one train equals to this will map each one of those categories to a number okay so it's time to make a neural network object now I already have imported into my code sorry let me just take a break for a second I'm so distracted by the cheering and I just need to say that it's gonna it's okay never a dull moment here yeah all right hopefully this party's gonna end soon all right I already have as part of my index.html file a reference to my neural network library so when I release this code when I released this example and you're looking at the video description to find a link to the code you will find it with this library included and what this light where the this libraries repository is here on github under toy neural network Jas and what it allows me to do if I go back to my main sketch is I can create a variable I'm gonna call it I'm just dare I call it an end for neural network I'm going to and an for neural network and I'm going to say and an equals a new neural network so what arguments go inside the parentheses there the way the library is designed and this is not universal is first I need to say how many inputs are there 784 second I need to say something else and third I just say how many outputs I want which in this case right now is 3 the second argument is how many hidden nodes now you're gonna want to go back and watch my neural network build a neural network playlist which where I go much more into detail about what the hidden nodes are and how they work but right now the hidden nodes it's really you can think about it as the kind of magic in a way that's in between the input and the output that allows it to make lots that allows it to learn and so the more hidden nodes we have the more parameters there are the more things the more sophisticated in a way the neural network can be now of course there can even be not just the number of hidden nodes if there's if there's input hidden and output there what I'm talking about is sort of vertically how many hidden nodes are there but there could also be more hidden layers but this is again kind of beyond the scope of where we are currently in my videos about machine learning and neural networks right now the library I'm gonna just assume there's 784 inputs there's one input there's one set of inputs with 700 480 for one set of outputs with three and then there is a hidden layer which I'm gonna arbitrarily just say I don't know 64 sounds like a good number and if maybe things aren't working very well maybe I'll try making it higher if it's running too slow maybe I'll try making it lower so they'll be less math for it to do we'll just sort of play around with it okay so coming over here I'm now gonna say 784 then I'm going to say we forgot 784 I guess 64 and 3 so this is my neural network 784 inputs three outputs and 64 hidden nodes and time and I think I'm good I'm good I'm done no none now what I want to do is I want to Train it to learn I don't know why I'm all caps all of a sudden about cats so what I want to do is say for let I equals zero I is less than cats training dot length how many training data sets are there I plus plus then what I need to do so here's the thing by definition this is a cat so and I have set so I need to say the let me create the outputs right are the targets so I was going so well this morning I'm gonna create an array called targets and I'm gonna say that is 1 comma 0 comma 0 they stopped outside just give me a second again I'm sorry that I keep stopping but I can I can hear that the ceremony has stopped and now it's just people talking and it's gonna be that's gonna be much better for me I need like a cookie or something little jolt but I'm gonna get through this okay I'm gonna make an array called targets which really should have something like 1 00 remember this is supervised learning so what I'm doing is I'm giving it a known input with a known output and if I'm saying the first element is the sort of the output array of the output vector is related to a cat then the target for each one of these images is 1 comma 0 comma 0 now I'm just realizing I'm gonna have a problem here because I don't I'm gonna keep I don't want to train hmm I want to mix up my day at stop timeout we think about this this is not gonna work if I train on all the cats then all the Rainbows than all the trains I need to mix it up that data set has to be completely shuffled so this whole prepare data thing I kind of need to go back and do in a different way I need to train randomly this is no good so write each one of the and I need to normalize the images but that's okay that I'm not too worried about and that was a nice thank you for the alert about that so do I dare go back just pick one random one from a random array every time yes that would work however I kind of wanted to be more thought I guess I could just train I was so excited to say epoch so I was going to try to sort of as opposed to what I might normally do which is just train at random for a while I was actually gonna try to like go through every single data point all and finish and be like I did an epoch and then do the testing mmmhmm let's think about this I mean I could remove it I could create an array of indices to everything and then I could start removing stuff it doesn't matter the order of them at all the order should be random I would love for the order to be randomized each epoch so I think this will actually be okay if I create a separate arrays of all the indices and just pluck those out using like splice or pop I have to randomize the order make three counters shuffle Oh what if I do you think it's bad if I do one two three one two three that's bad right Concannon right I can kick at each training array than shuffle but I haven't retained which one is which so I would have to I have to give them a label like I could give each array and the FIR like another another thank you I could give each array a 780 fifth element which is its label but I should have done that while I was preparing the data but I can add that in now right like for example all I need to do is also is add in a label here and push that in at the end that's what I'm gonna do okay we're gonna well I'm we can even put it at the beginning because I then I can pop it off because these are just oh no no no these are just regular arrays mm no I can't alter these sub arrays I could make an object that has the label and then shuffle think I'm gonna do category training dot label yeah oh you mean that'll actually work like if I do this yeah that's what I would like to do like in other words but I need to do this will that actually work cuz JavaScript's so goofy let me just do this for a second yeah look at that it also has the label cat yeah I love JavaScript okay that's what I'm gonna do then I'm just gonna like concatenate here's the thing there wasn't really good but it's okay it's okay it's fine all right so let me go back to where is making the targets actually let me go let's see if I can go all the way back to here okay so I just realized something here's a terrible idea that I was about to do let me train the neural network with all 1,000 cats now let me train the neural network with all 1,000 trains now let me train the neural network with all 1,000 rainbows this is no good I need to tune or for this to work effectively I need to just be training it with all the training data in random order so it's like cat rainbow train train rainbow cat rainbow cat train train cat rainbow train so I'm gonna need to do I thought I prepared all the data in the previous video I gonna have to do some more work preparing the data and so one thing that I think that I can do is I can actually pass in what I'm gonna do here is pass in the label so this is a cat this is a rainbow I'm gonna give it and this is a train and I'm gonna add another argument called label what my shoe just came untied I'm going to add another argument I'm going to I'm going to add another argument called label and what I'm going to do this is a little bit goofy but you can do this kind of stuff in JavaScript this array I'm going to just give it an additional property and I'm going to give it that label and I'm gonna call it label so it's a little bit goofy I'm using the same variable name everywhere but I think in the end it's gonna make things make sense I will show it to you in the console and this is I threshold because I need the testing data and this is testing also needs a label so look at this let me just show you what's gonna happen now okay now that I've added that in i refresh the sketch let's look at the Rainbows you can see there's still 800 training rainbows 200 testing if I look at the testing ones and I look at number two for example this is the array and it has a label of one so all of the rainbows should have a label of one all of the cats if I look at just an arbitrary 101 have whoops and this is a weird thing you can do with JavaScript even though it's an array an array is an object and so I can attach some other properties to that object as well so the labels are in there now what I can do is I what I need to do is put all of them together into one big array and then shuffle it so what I should say is let training equal a blank array and then training equals training.com catcat start raining like cats should join it right and then just join the rainbows I don't know if this is right and the the rainbows and what's the other one I got the trains all right so here we go so that is now let's let's let's see what that comes up with console.log training let's look at that there we go 2,400 that's 800 times three uh yeah why is there oh yeah yeah it's 2400 of these wonderful look and now and this one in here is label one oh this is good this is actually making sense okay so I have all the training data in here but I want to shuffle that I want it to be in random order but so how do I shuffle an array let's go to the array I mean I know how to shuffle in array but let's go to array JavaScript I shuffle a function that is actually part of arrays where do I need to write my own how did you get mins crowd how did you get that beautiful animated rainbow me I am so me is saying I would move the sub array creation out of the if and label it there oh yeah that's much better but I'm gonna just leave it how it is okay so I have to write my own okay so I have to write I have to I have to write my own shuffler right it's not gonna do it for me just p5 oh I could pick a random one I think it's better just to shuffle it okay I've done this for other coding challenges haven't I Schiffman shuffle and array No hold on let's go to all the code for the coding train and look for a shuffle shuffle shuffle it's in looks like it's in the traveling salesperson here we go look at this shuffle why is it commented out but in the code alright this was my way of shuffling and then I do a swap it's in p5 oh it's NP 5 Oh wonderful that's so awesome that must be why that's why I commented it out thank you I'm behind so let me just see let me just see how this works so if I have okay so you're saying if I say shuffle a true it will actually shuffle the actual race okay great thank you oops no don't close that window okay well today is our lucky day because it just so happens that p5 has a function in it to shuffle an array so I'm gonna say shuffle training now one thing that's interesting about the p5 shuffle function and let me just show this to you in the breath let me just show you the student in the console and let's make sure this is true let's say I make an array and I say four one nine ten right so there's an array I could say shuffle the array a and it's giving me back a new array in a randomized order but if I look at the original array it's still in the original order so I could say a equals shuffle a but another way I could do it I believe in p5 is say shuffle a and then pass in a second argument that's a boolean variable true and then I get this array again in a random order but it's actually affected it's actually affected that array itself this is similar to when I looked at array functions like does the array function map alter the array or make a new array this is similar here so I'm gonna say shuffle training true so and then I'm going to console.log it again so this was it it should be like everything at the beginning should just be like one zero oh no no I'm sorry so the problem with console.log by the way is it tries to be this happens to me all the time it tries to be smarter than you and so even though it's console logging it here I changed that array and it so even though it's I'm console logging it before I call shuffle it's there in the console and it's like live updating as the date of that object changes so I would have to so I think we're just gonna trust that this is working and I'm gonna take this out and I'm just gonna call shuffle again and as I look at it we should see here okay the first one is a two the second one is a zero the third one is one perfect it is in random shuffled order excellent so now I can finally go through and train the neural network this is my image drawing stuff which I don't need so I am going to this is making the neural network this is preparing the data making the neural network and now randomizing and now we're gonna do something very exciting we are going to Train oops train for one and what's the word that I'm going to use I'm gonna add a term somewhere epoch which is in my view of the proper pronunciation of this word not how I like to nevermind anyway so epoch or epoch whatever so one epoch is tracing over all 800 of the training elements but in this case it's 800 times 3 so overall 2400 so I want to say for one époque I'm gonna say 4 let I equals 0 I is less than training dot length I plus plus and I'm gonna say the the data is training index I the label is training index i dot label so now what I need is I need the inputs and that let me say so inputs is training in his training index I is that array it's is a little bit confusing but let's think about it let's just do this so for a moment just so I get a handle on this I'm gonna actually just do one thing instead of training over all the training gain I'm going to just train over one so let's console.log the inputs and then console.log the label and I just realized I've got a major issue which is fine it's it's it's a major issue but but I can I could hit I could do this I actually need to make a new array I need to make inputs actually has to be a new array because what I want to feed if you remember I talked about this in one of my earlier videos I don't want to feed in the raw bytes of a number 0 through 255 into the network I want to feed in a normalized number so that byte value which is an integer or byte between 0 and 255 and divide that by 255 to get a floatingpoint number so I'm gonna make a new array again I'm not worrying about being efficient here and I'm gonna say let I'm gonna say 4 I'm gonna do another loop I'm gonna say just use j j is less than training index i dot length right which i know is going to be 784 so really i can use that global variable j plus plus and I'm going to say inputs index J equals training index I index J oh boy let's make another variable data equals training index I that way I can just say this I can say data dot length and now I can just say inputs J equals data J divided by 255 I can't override that data because that's an integer that says this this training array is reserved to be integers so now I have the inputs the inputs should be 784 floatingpoint numbers and then so let's look at that let's look at the inputs and oh let's look at that let's look at the inputs and then let's look at the label so we could see there are the inputs let's go into the middle somewhere where we have some color values mmm oh there we go so we can see these values have been normalized now we have floatingpoint numbers between 0 and 1 those are the inputs now let label and the label is for this particular one is 2 now here's the thing I don't what I need for the outputs is an array that has three that has three values in it it should have zeros for the category it is not and a one for the category it is that's often by the way we refer to as one hot encoding it's an array that has only one it's a vector that only has one element with the value of one everything else zero so the way that I could do that is I can say let targets now be an array with three zeros in it and then I could say targets index label equals one right because remember that label is a zero one or two so I either want this to be one this to be one or this to be one and now I could say console dot log targets so let's do that let's run this we can see look now every time I run this I'm gonna get something different because remember it's shuffling the array a different way but we can see though I got a lot we could see this is working I'm getting an image with 784 pic or not an image but an array of 784 floatingpoint values and I'm getting the target outputs so finally finally finally finally I can say neural network trained inputs targets so what is happening inside of this function so to really dive more deeply into what is happening inside this function you've got to go back and watch my playlist where I build the neural network library itself and write the code for the training function but just to give you kind of like just to give you just to give you an overview an idea here is what we're saying is hey neural network whatever state you're in take this input data and give me some outputs and maybe those outputs it's going to make a total guess so those outputs are going to be some arbitrary numbers like 0.4 0.9 0.003 it's gonna just come up with some but it's gonna be random when it starts but I've also given it targets and maybe I said the targets are one zero zero so this is its actual guess its prediction and this these are the targets and so what the neural network is able to do is calculate an error and the error is really something quite simple it's just the difference between and I mean subtraction oh and I say difference between what it guest and what the targets are and it uses that difference as a way of internally adjusting a whole bunch of dials which are essentially the weights of all of the connections between the inputs and the hidden layer and this output layer so you can go back and watch my neural network playlist to dive into how that process works more deeply but that basically what the library is doing so now in theory if I run this and I'm gonna take out this console log and I'm gonna put this back in I can say console dot log trained for one epoch hmm we're stuck is it just taking a long time or are we really stuck it just took a long time so that can take a while right it's slow because I haven't done anything to optimize my code it's just and really what I might want to do is like sort of like put this in the draw loop and have some kind of animation but I'll come back to that I'll then we'll add that in a future video I just want to see now what happens well let's try using let's try let's evaluate it okay so let's wait actually you know what we're good I got a stop here I mean we don't know if it's worked but I think this is a good point to stop and take a break and get ready for the next video because what is it that I need to do I now need to test how it did so the next thing I need to do is give it all of the test data don't train with it but just evaluate how well it does with all of that testing data so that's what I'll do in the next video then of course what I ultimately want to be able to do is I want to be able to use my mouse to draw a nice little train or rainbow or cat into this canvas right here and have it guess what it is okay so so hopefully this video about training has helped I know we're not seeing anything yet so we haven't gotten to the exciting part but we have now trained over all of the training data and if I looked at the neural network it's still there you can see it has some input nodes you can see it's got stuff in it I got to talk about the learning rate we'll get to all this stuff later okay see you in the next video all right I'm running out of steam but but I'm gonna keep going alright okay yeah I could have used map why didn't I use map I don't know why I didn't use map how come i didn't use map I don't know why I didn't use map I'm such a using map kind of person these days we'll refactor it later all right shuffle training okay all right all right it's time we are now going to take our code wait okay okay it's time what are you watching by the way you were watching a video where I am now in javascript in the browser training a neural network to recognize doodles of cats rainbows and trains and you don't get to see anything here yet we're gonna I'm gonna get to that eventually all I'm doing is reporting that I trained over one Epoque with 2,400 different doodles 800 cats 800 rainbows 800 trains now I don't to add to this video is I want to test I have also testing data which the neural network has not been trained with that is also labeled I want to see is it able to guess what any of that stuff is and how accurately is it able to guess so let's do that right now so one thing that I did previously is I took all of the training data and put it into one particular array so let's do that with the testing data as well shuffling doesn't really matter but as well shuffle it because I'm not actually training in this case so what will take out the shuffling so I'm going to say let testing be an empty array and I'm going to put in everything all of the testing sorry I don't know why I'm just copypaste and so this I'm gonna I am going to so actually let's do a little refactoring here let's let's take out let's take this and let's put this into a function called train or train epoch because I love the word epoch makes me sound like I'm doing something really fancy and futuristic so I'm gonna train for one epoch and so that's gonna go right here train epoch and you know this was kind of awkward what I did here and I thank you for DM me I have to be put in the chat I'm trying to be a person who uses some of these higherorder array functions these days so let's quickly hope I don't ruin everything one nice thing that I can do I don't need I don't need to have this little loop here I can just say inputs equals data map X X divided by 255 so this should this makes a new array which takes the previous array and divides each value by 255 and this uses arrow syntax and you can watch one of my higherorder function video tutorials about the map function but that just makes this a little bit cleaner so let's add that in and now let's run this again to make sure I didn't break it ah line 41 shuffle training oh I made this so let's pass in the training array and we're gonna train for one epoch finish finish there we go train for one epoch so now I'm gonna that still works I'm gonna comment this out and now I want to just check and take a look at the testing array to see if it has all the testing data in it and it does is 2600 which is right because if I had 800 it shouldn't have 2600 hold on what's going on here oh yes look at this that's a bad error I need to be concatenated with testing so much for my copy pasting terrible terrible all right I knew 2600 was wrong 600 600 is right because it's 200 times 3 I have 600 test data points so now what I need to do and let's just do this with one right I can still do I can evaluate how it's going to do with the testing data without actually without actually training it so let's look at how this goes so let's write a function let's write a function called testing wait what did I call this a train EPOC test all with the testing data so let's do something similar to this function and let's rename this data just so it's no no no let's not rename that so let's do test all with the testing data I don't need to shuffle it I want to go through everything I'm gonna do exactly the same thing on a map it same inputs the same targets the same way but now here's the thing I want to say let prediction or I'm gonna say let guess equal neural network dot predict inputs and actually I don't need to have targets right I just need to have a label right I want to predict my guess is what does it think it is so right now what I'm actually gonna do rather absurdly is I'm just going to console.log the guess and I'm gonna console.log the label okay and I'm going to just for a moment I only want to do this with one data point in the testing data set so I want to test everything okay so I want to run this code it's so quiet now run this code and I want to see what does it think it is and what should it be let's run this so we can see look at this these are the numbers that came out totally randomly zero point zero five zero point zero eight zero point zero eight eight eight two so it thinks it's a number two zero one two and actually it's a zero it got it wrong it thinks it was a train but really it was a cat but that's okay it just got it wrong but this is good so first of all I need to do something where I evaluate which one is it based on these numbers so I need to find the index of the maximum I need to find the index of the maximum value so let's go to testing okay so I need to turn this guess which is just three numbers into a classification so basically I want to say let classification something like the maximum of so let's see is p5 has a max function right where I can give it two values and it gives me the maximum one if I have an array with a bunch of values does the max function do anything for me it tells me which one was the maximum oh sorry ah let's I just want to make sure it's working I equals 0 to 9 111 for max a 111 but I want the index so does max secretly if I call it in a different way or I know Arg max is kind of the there is no p5 function called hard max does Array have Arg max that's the technical term that you'll see in a lot of kind of machine learning libraries argA max is a function that will give you the index to the maximum value in the array I could write my own function that does that I could probably use reduce for it I think I did that didn't I do that in my reduced tutorial I think I did that in my reduced tutorial pause for a second oh but I don't I don't think I ever published the code for those tutorials did I I could just write it right now I'm afraid I'm afraid I'm gonna take a break and have a little water clever so I could use I could use reduce and write my own art max function 60 in the chat just gave me a really great tip because I forgot what's that arrays have a index of function so look at this watch this if I say max a that gives me 111 what if I say a index of max a get gives me three because the index of three of sorry 111 is three right this would be negative one because it doesn't exist so I can say the classification is the guess index of and let's separate this out let n equal max of the guess like this is the max value and then I want to get the classification is the index of that max and then I could just say I can just say console dot log let's look at it to make sure this is right console dot log classification and label so guess are the raw array values classification is the Arg max the index to the one in that array that's the largest and this is the target label what it's supposed to be so let's run this so let's run this and we got so let's look at this it makes sense this is a tiny number 0.03 that's a big one 0.87 yes it gave me one zero one that's that's the oh I can do by the way just unfolded look that's correct let's look at this ooh this one more time we can see like Oh got one again now it got one it's always the middle one that's interesting but that's just random to it got two so this is working now you'll notice these don't add up to one point two point two point one six so again I really should probably be implementing softmax as the function that I use that when I went exiting out into the output from the neural network softmax is a special kind of activation function essentially and this is something I cover in the neural network series that takes whatever that output is and transforms it into probability values that will all and up to 100% but I'm gonna come back to that in another video this will just work just fine for right now and so I can say now let's say let correct equal zero if if classification equals the label then correct plus plus and then I want to say the percentage equals the number correct divided by the total which is testing dot length so console dot log percent so let's look okay zero percent correct zero percent correct kind of get lucky and get one I got one correct okay so now what I need to do is let's do it for all of them let's not console.log everything and we should see right just by sheer randomness we should see about one third correct right not there's been no training the neural network without any training without knowing anything should get one out bout one out of three career oh why do I have oh I'm sorry this should happen at the very end after all the loops are done you can see by the way I did get exactly that 35% 35% 24% so there's a lot is very feelings only two I look at that exactly one third correct so things are going as expected but can we improve it can we improve it just a little bit will this actually work it's sort of sad that I'm doing this without showing you anything visual but I'm kind of thinking you the person watching who has visual talent you could actually start to a project for this would be to animate the training process and all that but let's let's train for one epoch let's just run through the training set then let it test again I wish my sound effects were working because I would certainly use a truck and roll roll and then I'm gonna say testing result and by the way I want to move this data prep up here and then I'm gonna just say this so basically we've prepped all the training data we've prepped all the testing data see you much work by the way it is just to work with the data that is like a whole project unto itself then I'm going to train and then I'm gonna test and we're gonna see and wouldn't it be nice if the testing maybe returned it so let's actually return that value and console.log it down here cuz i feel like that's kind of what I want to do correct percentage correct okay okay okay here we go let's see training training training of training all the way I like to train elected trained training all the way hey training training training machine hey we got eighty percent correct this shows that things are working right we got eighty percent correct that is so exciting to me out the door Wow like it was kinda like so that's really interesting mmm wow this is very exciting I don't even know what to do now percentage correct eight let's just confirm that right ready I'm gonna comment out the training no training no training remember with training 80% correct no training 33% correct this is good machine learning it's a thing that sometimes kind of almost maybe sort of works but it's highly problematic for many important ethical and social reasons but that is something we will come back to so we should really be again this is a good point should I even be doing what I'm doing I think it's okay to be doing what I'm doing everything is pretty transparent we know where the data comes from we know what's in it and we could see it and we've learned something about neural network oh I'm just amazed here okay so I should finish up this video but let's let's just do something interesting let's say for let I equals 0 I is less than 5 I plus plus so what we're going to do is we're going to Train oh we're going to Train we're gonna say epoch I plus 1 I'm just gonna start with 1 and go to 6 so I can just say epoch plus I so now what I'm gonna do is I'm going to see I'm gonna do it five times let's see how the percentage in increases let's make sure my training function we randomizes the training data reshuffles the training data that's very important each time okay let's see how much better gets training training training all my epochs loading loading loading in training epochs training Oh 76% correct training training training training all my Fox you are watching a video where I am not editing out the fact of it 79% training training training I'm trading all the way I'm almost a puck three and here's what we say any one percent training trading training trading all the way I'm almost a puck for ad this is what we say Eddie we went down why why so there's kind of it's interesting to see this here so there's this is where now we're revealing I haven't really been I have not been I'm not doing everything that the quoteunquote best or optimal or way that I could be so for example this idea of soft backs and crossentropy I've really got to come back to that that's hopefully a way that's going to improve the training process it's gonna be able to squeeze out a little bit more accuracy if I add these two elements to my machine learning system I also have something where it's like hello my training 2400 drawings that's like the tiniest bit ever so I probably would want to run this with a much larger training set that's really gonna help I probably want a kind of a larger testing set as well just to have a better sense of how accurately this is doing but I think we're in pretty good shape here I feel like I'm happy with where I am so far in the next video what I want to do is kind of clean this up a little bit and think about maybe how to like animate the process like show that it's training so it's not just saying loading here forever until it gets to the end and then I'm going to add a part where I can draw my own little drawing and see if it could recognize my cat versus my rainbow versus my own train so in the next video that's what I'm gonna do and I'll see you there wait what's the N equals one sample size I I fixed that right yeah I fix it's going through all the testing data what have I done wrong this by the way I even though I feel like there's so much I could do better this is so much better than my end missed kind of oh it was good based on one output no issue though yes no no I know I know I know all right um so let me think here I am got to get going and go home soon but I definitely want to get this further today I don't I think maybe I won't I don't think I'm gonna do the softmax and crossentropy thing today I think I just want to work on making this visually a little bit more appealing that it's an example that people could work with a little more easily so maybe what I'll do is create a train button which will do the training a test button which will run the testing and then let you draw in canvas your own your own sort of thing all right so let's do that and let's do that just trying to decide if I kind of want to put this train so let me do this I really like working with separate JavaScript files train test is so I'm going to take the train epoch function and put that in train test I'm going to take the test all function and put that in train test I am going to here I'm going to add what do i what do I say input type equals button or something I'll just use Create button I'm gonna use the silly p5 create button and I'm gonna add another file called data prep dot J s and I'm gonna take this function and I'm gonna put that in there and I'm gonna go to index.html this little silly what I'm doing but this makes me happy train test and data prep this should be the same so now my sketch is is but cleaner here and I can make a button that just calls train I could make a button that just calls test yeah okay it was a button tag yeah plot error as a function of Deepak number oh I don't want to here's the thing if I had a I could invite imported something like matplotlib or whatever I just don't want to get into like drawing a graph in this but I could come back to that in a future video but I want to keep things pretty simple right now so I just move things to other files I think this is okay because I'm gonna need a draw function now get rid of this because what I could do when it's training I could have it not be blocking can I have a train like in a separate that's all yeah like I could have it I think I'm gonna skip the animation stuff yeah because what I could do is I could I could have it show like all the drawings while it's training but that's that's gonna be too much work right now that's a good exercise for somebody watching so all I'm gonna do is create buttons and then have make make it so I can draw in the canvas okay okay so I feel like what I want to do is yeah let's do this test and what do I say value or something oh I forgot to turn off the training please but entrain oh it's not value by the way guess who doesn't know HTML no wonder nothing was showing up in there okay train test oh look at this oh it's beautiful Oh beautiful oh that is just lovely let's do I don't know guess who also doesn't know CSS it was very hungry I guess that doesn't apply to the buttons yeah yeah whatever that's fine you can see those buttons you can use set timeout for non blocking yeah yeah but okay okay all right okay okay body yes oh I could do button ah there we go Oh beautiful that's the most beautiful thing I've ever seen uh oh no no wait wait come on margin that's what I want Oh lovely oh this is really getting good now okay so let me discuss all right I could make the training an ASIC I know I know I know but this is not that the problem these are all really good suggestions but I know and I should mention it but I really got a core thing here which is just a sort of demonstrate the concepts and I could go off be off on a tangent for so long to like promise of fie the training and everything so I'll come back to that don't like that this is okay oz delay equals new promise that timeout timeout okay okay here we go it's fine I don't care about blocking I'm all about I prefer synchronicity okay okay okay here we are it is time I am going to draw into this canvas a kitty cat and then I'm going to have something show me here tell me is that a cat or is that a rainbow or is that a train now before I can get to that I want to first at least make this somewhat interactive that I can train for an epoch just by pressing this button I can press this button to run the test to see how many things I've got correct so I did some things in between the last video in this video I added the buttons here in HTML I used my magical advanced CSS abilities to to alter how those buttons appear I'm now I am now officially a graphic designer and I have also by the way moved some of my code into separate JavaScript files so the Train epoch function and the test all function are in this JavaScript file and I have this data prep javascript file just to kind of move things around so the first thing that I want to do is I want to be able to attach events to those buttons so I want to say train button equals select and I'm using the p5 Dom function train and then I'm going to say train button mouse pressed and I will yeah yeah I'm just gonna say write train epoch so this will run the Train epoch function once and the if you don't know about arrow notation or then you can check out my video about that but I'm trying to use it a bit more in cases like this test button a select test and then I can say test button dot mousepressed and do the same thing now here's the thing that I'm gonna actually write this function out a little bit actually so hold on a second I like I want to use the arrow functions but I really just refactor refactor later let's make this let's make this easier to read EPOC so well I'll write an anonymous function that's okay I can handle that you can convert it in your head to an arrow function I'm going to call train epoch I'm gonna have a variable called epoch counter which is equal to zero I'm going to say epoch counter plus plus and then I'm just going to say create it actually I'm just gonna console.log it console.log and I'm gonna do exactly what I did here but I'm gonna say console.log epoch counter so every time I press that button it's going to train for an epoch increase the counter and console.log that and I'm gonna do almost the same sort of thing with the test button and test button test all and then I want to get the percentage correct test all I'm gonna say percent is percent and let me let me at least number format that number format percent 2 comma 2 and then let me also add a percent sign and one of these days what's that thing you can do in the s6 now the back ticks I'll get to that at some point okay so this is what I'm doing I'll have a train button and a test button let's see let's see how this goes I am going to train let me just test cannot read property length of undefined alright so one goofy thing that I set up here is I've got to pass in the data that I'm using which I sure I could refactor in a way which I don't need to do that but 30 to pursue do I not have the 100 times in there let's I thought in my train test I thought oh let me let me multiply it by 100 so the percent right is point 35 but I want to multiply it by 100 so I see 35 sent 35.5% so we could see test test test no matter what now I'm gonna train unfortunately this is all blocking I would want to do something and I could use es6 and promises or I could probably set time out there various ways that I could make this asynchronous so that it didn't look browser didn't freeze up while it's doing the training but I trained for one epoch I test it again and I got 78% so now at least we've got this interactive I can kind of keep pressing train if I if I have the patience to do it and see if it improves a little bit 80% now here's the thing let's do something really exciting what I'm going to do right now is I'm going to add a draw function actually I'm not even gonna add a draw function I'm gonna add a mouse drag function right whenever yeah I'm gonna add a draw function how to draw function and I'm gonna say stroke weight eight line P Mouse X P Mouse Y so this is in p5 the previous Mouse position then I'm going to add Mouse X Mouse Y then I'm gonna see what that looks like I don't see anything probably because I need to say I want what I'm drawing to be white there we go but now I want to only draw if I'm pressing on down on the mouse so I'm gonna say if mouse is pressed so now if mouse is pressed so I could draw my own cat I'm gonna work really hard on this I don't have a way so now all I need to do right all you need to do is grab the pixels of what I've just drawn oops grab the pixels of what I've just drawn and turn it into a 28 by 28 image that I sampled down and normalize to 780 for inputs give it to the neural network and have a neural network say so let's see if we can make that happen okay so what do I do now I'm gonna need another button and I'm gonna call this button guess and now I'm gonna say I'm gonna just grab all this code and I'm gonna say guess button equals select guess and when I press the mouse on that button what do I need to do so the first thing I need to do is I need to somehow make an inputs array that's all I need I need an inputs array with a bunch of numbers between 0 and 1.0 according to the pixels of what I've drawn what would be the best way to do this I could just read the pixels but it's 280 by 280 I think I can use copy I think are get I got an idea I think I can say let image equal get so I think the get function in p5 just grabs all the pixels from the canvas and makes it into a p5 image object so let's see what that does if I'm right about that yep I got an image that's 280 by 280 now what I can do is I could say image dot resize to 2828 let's take a look at that now I have an image that's 28 by 28 now let me load the pixels and guess what guess what everybody we are just right back to where we were earlier when we instead of reading in those bytes and turning them into pixels I now have pixels that I essentially want to turn into bytes so what I'm gonna do is write a nice little loop I equals 0 I is less than image pixels dot length and I'm gonna do something a little goofy here I'm gonna say I plus equal 4 so here's the thing this is by definition a grayscale image right I can't put anything but black white or grey in between here and so what what I want to do I'm thinking here I'm thinking here is that the red the green the blue values of each pixel are all going to be the same so I can actually just skip every four elements in that pixel array because the pixel array is RGB a RGB a RGB a so I should be able to look at just every fourth pixel every four not every fourth pixel every fourth element of the array and say the the brightness is that image dot pixels index I and then inputs now here's the thing that's a little bit awkward I should be able say I / 4 mm you know what I'm gonna do I prefer to say remember that variable I had called length let me use that that should be 784 another way I could do it is just say I times 4 right to skip ahead every 4 and then say inputs index I equals bright / 255 now let me just say console dot log inputs I just want to look at that did I am I getting an array that is 200 that is 784 floating point numbers long with each value normalized between 0 and 1 let's see let me just draw some stuff in here good guess and there we go now can I find ooh oh yeah yeah there we go look at this so it is working I mean I could have made a mistake somewhere but this seems about right so you know I I could be more thoughtful about drawing in softer way that mirrors the doodles a little bit more and the thickness is really going to matter so I'm going to have to figure it out now I'm being asked in the chat shouldn't it be the other way around black on white well here's the thing in all of my previous videos if I open up my processing sketch and this is a sort of point of confusion if you recall this is going to take a little while to load so I'm gonna talk while it's loading if you recall when I did all this stuff previously you did see a black pencil doodle on a white background which is this however what I did the moment I wanted to offer draw the pixels was I reversed it the data actually in the data set is the other way around so so machine learning wise I'm matching it correctly what I might choose to do just to like make this a bit visually more appealing is I might choose to just to be consistent here is let me go back to sketch where's my draw function where is that draw function what just happened did I put that draw function like Oh put the draw function in train test that was by accident let me move that back to sketch I'm gonna change the background to 255 and I'm going to change the stroke to zero and then I'm gonna do something weird which is I'm actually say 255 minus bright I'm gonna reverse it when I turn it into the data so I can actually look at it like this you know I kind of now in the canvas is white but I have an idea I'm gonna go I'm gonna say body can I say like background color and let's just make this some like light gray look at me look at me you my CSS yeah I could see now oh this is what I'm drawing my cat okay so so let's press so let's press guests and we can see it's still a whole lot of zeros so I think I'm good I think things are looking good okay now what I need to do is now I need to say it could be perfectly honest with you yeah let's leave it let's know what time let's now say let guess equal neural network dot predict those inputs and remember I did this in the testing I then already figured out the code in the testing to get that classification right remember this I have to find the highest in the in the output so I have to find the highest one and what index that is and so now I am going to say maximum classification and this is really goofy but I'm just gonna say if classification equals cat this is like the worst code anybody could ever write but I'm just gonna do it this way just to get this done and I'm gonna let those of you watching create your own variation of this with an actual interface and be more thoughtful about how you how you end end this up I got one more train console.log train okay are we ready are you ready are we ready I think we are so here we go so I'm gonna draw what I think is a cat some whiskers some whiskers I don't know and a little smiley old ah okay now I'm gonna guess what is that it's a rainbow of course it's a rainbow I haven't trained it yet so I shouldn't if I got the right answer we gotten just very very lucky now I am going to run the training okay it's training it's thinking it's gonna train for one it would be nice to have an animation I'm doing a different one let's just run the testing you know it's getting the test data right 80% of the time so even if at best this is going to fail one out of twenty percent of the time which is quite often you remember recent events in our history here okay a guess a train hmm let's train it one more time please II didn't think it was a rainbow this time let's train for another epoch try to get a little more accuracy here I think I can Orma lies the data correctly let's run the tests again 82% let's guess train so I sound bore doesn't work it's a train everybody and good night thank you very much this is the end of this video all right all right well let's do a rainbow so I don't have a way of clearing this unfortunately so let's add something or my sound effects still not working it makes me sad because at least I could do things like but the yeah resizing blurs and makes grey I should actually show what it looks like with it resized to make sure but is the sound effects still bad like oh okay great let's go back and do that again I mean I thought I'm very happy with it to fail but at least now I have the sound effects it'll be more entertaining okay all right I'm going to draw for myself a cat you know what I think this isn't thick enough one thing I should do let's let's actually let's take a look one thing that I could do here I want to see the resized image so let's make this a little bit thicker when I'm drawing I think that's gonna help where am i drawing again in the draw function let's make this 24 I think this is gonna be oh I don't know that's I'd have to look back at the train again oh I think it was actually fine let's just make it 16 okay that's a little bit better so I'm gonna try to make a cat but actually one thing that I wanted to is when I press the guest button I kind of want to see that resized image where is that so let me also let's just see if I can I'm just gonna draw it image guess 0 0 I just want to be able to see it like whoops execute draw image on mmm oh not the guess image image I just want to see what it looks like yeah that's the smaller version of it I think that's okay that kind of feels like what the doodles look like so let's try okay I'm gonna draw a cat I really should probably use the rainbow give it some nice whiskers and now I'm gonna guess what is this now I haven't trained the neural network at all so I really I just have like a one out of three chance of getting it right it's a train and look there's my doodle sample down so that's not correct but of course it shouldn't be correct now let's train the neural network and it's gonna have to wet we're gonna train for a bebop here we're training okay we trained let's run the testing just to see 75% okay that's pretty good let's guess it's still a train I do want to point out though whoa what am i console logging here and why was it different something weird is good oh you know what because it's got all these pixels there now in the canvas so that was bad idea for me to draw that up there that was sort of just for debugging let's try this again let's draw a rainbow rainbow my people were recognizable okay so I'm gonna draw my rainbow all right that's my rainbow I'm gonna guess it's it always thinks it's a train let's run the test data set it got 33 percent correct let's actually train the network not a rainbow probably it's very unlikely that this will work in any way oh we finished okay now here we go I'm now gonna guess again I can't brother look alright fine 5 5 s let's train it one more time we need to e box for it not to just always think it's a train I'm kind of suspicious here that something might be going wrong it always thinks it's a dream it's a conspiracy because it's second coding train all right we did two epochs let's run the test again hey our our accuracy went up from 33% to 80% I really should get rid of these unnecessary console logs and I'm gonna guess again here we go definitely gonna just say train isn't it oh I get trained by accident Deepak 3 test 81% okay here we go yeah at least I got cat I mean we got to be happy that we got cat right let's train again I mean 20% of the time it's good to be wrong and I'm most likely more than that now is it did is my data is the new data formatted exactly right okay do another epoch 81% alright I'm gonna pause for a minute here and investigate to make sure there isn't anything horribly wrong because what could be wrong I mean I'm not surprised as isn't working but if my data the way that I'm passing it and formatting the data is not the way it was trained then we've got an issue okay okay I think it's a pixel data problem yeah I think I wouldn't be surprised let's let's kind of like think about this a little bit so it's 7 or 84 pixels one is white I mean the data is right isn't the data in the training let's look at this so I want to look at training oh that's not a global variable cats right if I look at the training data it's all zeros oh but yeah it's all zeros but it I'm normalizing it later it's all zeros and then you know it's got a lot more nuance probably in terms of the antialiasing oh my I'm not sure the constants are right yeah that's a good question that also could be wrong how could that be wrong though so I should check that what else know what do I so let's let's get rid of some console logs they don't need and let's console.log the guests rainbow rainbow is the second one one this should be this one one and is that how I labeled them when I did training I mean I can't imagine that off I'm so let's see okay so let's sexually train it I mean the main problem here is I'm using like the tiniest dataset in the world it definitely needs more training I just would love it to just sort of work so let's guess again cat hey that's so that's you know a more expected result I'm just out of curiosity if I add the whiskers I need something I need to I know I can just do this cat cat cat cat tree I just want to set the background yeah thinner I mean I think I'm just suffering from 255 minus valve divided by 255 is wrong is that wrong no I think that's right i I mean I I did this very awkwardly in that I've changed the white on black black on white thing but I think I've done it consistently yeah let's look at one of the training images oh it's just such a pain to render them I don't feel like ready I'm tired it's the day I just want to finish this up let people play oh yeah fullsized cat right also I should probably just do a lot more I mean I mean this is going to look more like a train now okay hey Wow was really sure about it fascinating train it again maybe that's my issue give me another epoch yeah alright I need a clear canvas button yeah all right so let me get rid of this take your screen shot of this okay just just for the sake of argument where are my console logs did I do it in sketch yeah I don't want this anymore okay okay I know I could render the normalized image but I should render the normalized image to really be sure but I'm let's do that but I'm I'm lazy yeah I think the issue that the issue is so much I mean I really have done a bad job of I'm walking over here so let's just come I'm gonna just cut I got to be done with this so I'm gonna come back alright thanks for I'm back and I actually got it to recognize this cat so let's try doing this though let's just try again so oh and but actually let me at least add a clear a clear button so let's go here and let's add one more button button ID equals clear clear and I'm going to go to sketch touch a s and I'm going to say whoops clear a clear button equals select clear and then I'm gonna say clear button mouse pressed and I'm gonna just clear the background so now whoops mousepressed it's not a function now clear okay so we're in good shape here there we go so alright so now let me try draw my cat that's kind of more like a cat like this other cat drawing was so much better and more sort of like centered I mean really really the issue is that I'm using a very small training set but let's guess it is a rainbow that is clearly a rainbow thank you very much let's train for one Epoque let's test and let's guess it's the cat train everybody welcome to the cat train at least like it clear and I can try drawing another cat now I don't have to retrain whoops it's looks right let's train again let's train again and let's clear I can't clear till I finish training are you still watching this videos we're gonna we're gonna forget it to recognize subject 81% correct let me try a different link rainbow that looks more like a great rainbow that's definitely a train Bo it's funny when I went into my like let's let's go another you pot it's kind of gonna shuffle up the trading a little bit okay whoa Matthieu you're gonna have fun editing all this out I know I know your training data ranges from zero to 255 but your inputs range from zero to one and it's black on white I have normalized unaccounted for all of that because when I actually I mean I should really double check it but when I train I take the values and I normalize them by dividing by 255 then then draw thinner lines I wonder if the thinner lines would do it so that's that problem the data itself is black on white and I'm drawing white on black but I reverse it it's white on black I'm drawing black on white I'm drawing white on black on white the data is white on black so I invert it and then normalize that I think I have all that correct I mean I could be wrong thinner lines would be interesting to try oh I can't map if there are you into eight thingies it seems it to map changed it to map this is so good this is so good this is a great problem to have let's just do it in the testing cuz the testing is not very much stuff it's kind of normalized in there oh but am I only getting zeros and ones hold on no but the inputs shouldn't be oh yeah he's restricted to you int 8 so it's just zeros and ones which is gonna be weird yes yes yes this is bad from data map okay all right hold on everyone there's actually kind of a major problem right here I was being all fancy refactor we got to use this map function but that makes these inputs restricted to you into eight thingies integers only a zero or one I really want to just divide by 255 and make them nice floatingpoint numbers so I could go back to my loop or apparently I could say array from data dot map I believe this will create a new array and let me just check that in the testing I'm gonna say console dot log inputs and let me run test and now we can see yes this is a regular array with numbers that are somewhere in here oh let me look in the middle that are floating point numbers okay this is good this could be the source of a lot of our problems so let me take this and put this also here so that fixes it for the training and now oh and by the way while I was taking that break I added a Clear button and let me just show you the code for that trying to figure out what was wrong in sketch j/s there is now a Clear button and all that Clear button does is draw my background so we are ready to attempt again hopeful let's just see by the way what does it think an empty images it thinks it's a train because as we know it's always a train maybe I should try drawing a train let me draw the rainbow I feel like the rainbows got to be the most recognizable and I mean by the way I made the stroke a little bit thinner and I don't know let's make this the rainbow okay so now first of all I haven't trained it yet let's guess it still thinks it's a train obviously let's test oh I forgot to have that console.log 31% I want to get rid of that console.log in train test let's get rid of that so let me start over here for a second and let me draw my rainbow and let me guess it is of course a train as it always is let's run the test we got 30% right because we're just guessing let's train for an epoch oh it's finished I guess so involved in my dance let's we got eighty four eighty five percent correct this is good let's now guess it's a cat watch look it's got whiskers and a little like little ears and it is totally a catch it has guessed a cat let's clear and let's try drawing a train this is my train it's got a big choo choo thing there's my train this is the coding train so I'm there's so much that could be improved here the real problem is that I am using a tiny data set the other problem is the other problem is I haven't been really so thoughtful about thinking about this spatially I'm flattening this image into one vector of pixels and you know where where it's the using a so called convolutional layer in advance of this what this is just like final layer is something that could actually help this to work much more accurately I hope to come back to that in a future video also probably adding softmax and crossentropy are going to be a way to sort of squeeze out a little bit more accuracy but ultimately what i wouldn't be curious for you to do if you're watching this I mean there's going to be more videos in this playlist but this is if you're watching this you can and they don't exist yet what I would love for you to do is think about a way that you can try this with larger data try this with animation and think about ways to make this a bit more robust make it more creative and goofy and fun but we've got the basic idea here I'm looking at the chat sorry I'm sorry I'm looking at the chat when I was trying to end this video this is gonna be an edit point I frozen so that there will be good continuity so share with me what you make all the code for this will be published there's so much more to do with it but we've got a basic doodle classifier that mostly thinks things are trains so thanks for watching the coding train alright let's play around here clear let me draw a cat well I'm hungry I'm tired it's been a long week I'll be back next Friday this is my cat it's kind of working it recognized my cat can we edit that into I don't know you know I got a one out of three chance oh go on everybody this is exciting why is it that when I'm not in the mode of like making the video it stops working alright try increasing the stroke weight again alright I think this is pretty darn wonderful look at this this is getting okay not you could we like maybe like put together some montage towards the end that kind of maybe I could talk over it let's try this after this video ended I went and tried a whole bunch of other drawings and they worked so right now you're gonna see a quick montage of those moments where it worked that's probably useless but if you could put something in there yeah okay see good okay thanks everybody oops rainbow okay now it's not working all right the coding whatever that is alright everybody so I should show the percentage yeah yeah yeah my drawing might be improving all right everybody it is 630 this has been how many hours of live streaming has to spend today let me think about this I did an hour and a half this morning I started at about 330 for three hours I'm close to five hours at this point the end dance what is the end dance and let me think about all how many videos are gonna come out of this I guess I don't need to worry about this now what's the end what's the end dance and dance people demand and dance I don't know what that is is it when I read random numbers I definitely want to read some random numbers those of you stayed up to the middle of the night to watch this live stream you are soon gonna be able to go to sleep and I will be here to put you to sleep thirty one thousand two hundred and thirty forty one thousand two hundred forty three thousand nine hundred seventy three sixty two thousand one hundred and forty six seventy thousand two hundred and fortyfive thirtynine thousand eight hundred and fiftysix twentyfour thousand twentynine thirty eight thousand three hundred and eightytwo 9225 fortynine thousand eight hundred forty eight twenty nine thousand two hundred forty I'm in the wrong screen I've never done it from over here fiftysix thousand six hundred eighty five sixty three thousand seven hundred and one sixteen thousand is that the end dance I don't know so what else have I got to say spooky numbers thank you everybody do other epoch yeah yeah yeah train another epoch Oh actually it's it's it's so much more accurate than it was before just because of now it has it's not just a zero or one epoch oh no test eightysix percent so it's it's got 86 percent right which is pretty amazing I'll take a few questions all the data is 800 each its 2400 training data images and there's 800 rainbows 800 cat's 800 guess Jaime writes it's great Steve dreamed on the live stream rather than relentlessly happy video where are you from well I guess I'm from New York City I've lived in New York City since in a 1995 but I did grow up in the town of Baltimore go O's will you try next time with a massive data set yes I my goal is to work with a much larger data set and use something that's hardware accelerated like deep learn j/s with this new library that different group of collaborators here at ITP are developing called ml5 what did the cow say something like that and do you know how to style a web page definitely not and even if I did it would be the ugliest web page ever made alright so I am going to ohlet's while I'm here let's just go ahead let's see oh I modified em missed and I I don't know what I modified there let me add is there anything weird in this directory that I don't want to add I think it's fine so yeah so I'm now gonna put this on github oh whoa oh oh I learned something this week tiny subversions on twitter i went to a workshop about git and I now know that I'm doing it all wrong first of all I really have used this like I term I need to really work on my terminal because I should get I should have what branch I'm on and there's all sorts as I should have some color coded I got to get to that but I am no longer I am no longer never again am I going to use em I mean sure if I'm just changing the readme or short this is a shortcut when I commit I want to write a good solid description of what I'm writing so I'm gonna do this now I don't think I've configured a text editor or anything well let's see what happens ah ooh oh I think I might be in vim and my in vim or VI help me with this everybody alright so the commit message these will all be ignored but look at this it's telling me I need to configure a different text editor but I'll just do this right here in terminal I'm gonna write at the top I'm gonna say oh how do i how do i how do I use this thing no I don't want to exit I want to write my comments at the top I to type okay I insert this is the first this is me adding the quit the Google quickdraw Doodle classification example wait don't I write the short comment first and then so don't I do something like what's the proper way to do this so I want to say I'm just gonna say adding new doodle classifier example now so that would be the short message right and then now anything I put here would be the longer more descriptive thing so I'm going to say I spent the day recording videos recording a set of video tutorials about how to do image classification with a simple toy neural network there are lots of problems with this and the goal is purely educational and to have some fun I hope to improve this example in the future it could use an interface and some animations softmax function and working with a larger data sets and ml5 deep learn is there we go okay first line is the title others are the message so this is now my commit message I really worked hard writing it it's dear diary oh my god is totally oh except for the fact that I don't know how to use vim oh yeah dear diary well how do you sign off a diary yours forever the coding the coding train choochoo okay now what do I do to make sure I save this without losing it then it signs it escape WQ WQ escape I know does something I'll get wait hold on I'm not looking at that YouTube chat I don't want to lose this beautiful message I do escape first okay I did escape w that rights can I just do that first without Q then Q and then I'll quit I think I did it get log there it is oh my commits there this is the greatest thing ever everybody thank you to tiny subversions because I don't know screenshot this this is what I learned from Darius Kazemi who is amazing and it's so thoughtful about opensource thank you so much I'm so excited about this and now so you can all send that to him on Twitter if you want git push origin master wait a second it's not gonna let me do this isn't it didn't I like do some kind of like circle C I crazy continuous integration thing let's see what happens yeah it was fine with that it was fine with that now if we go to here we go to this commit there it is Oh glorious no I am going to make every single commit message I ever write with dear dear diary I don't know why is diary always capitalized we write dear diary alright so that's done you can now look at the code so here's the thing at the moment I probably won't don't want poll requests on this because I want to continue to expand and improve it but I would be very happy with although I guess I need to I don't know how to best manage this but I certainly would be ok with you could file an issue with a link to what you made I'm not sure yet I guess a community contribution on the page that goes on the coding training website anyway ought to figure that out but just be aware I do I'm very interested in proving this and making this example a bit better but for me it's somewhat important that the code that's online matches the videos although I think what I probably would do is this is sort of separate from the code that lives here so I could probably freeze the code here somewhere and then have the $20 network library be expanded a little bit alright oh yes the V flag I get a full diff in the editor okay it should be dere github yeah yeah okay I got to go home I am getting crazy I agree good bye everybody I will take one or two last questions oh so I hope that this chat can play back it's supposed to now but I don't know if I needed to configure something so somebody let me know and yeah all right I just got to go it's 630 I'm gonna go home and have a nice weekend Oh in the bomb cyclone apparently and I'm just looking to see if I have any emergency messages don't and yeah alright alright alright everybody goodbye no I will see you all next Friday I should be next Friday that's the plan I will not be here two weeks from this Friday Oh No maybe I will be there's some Friday in the future that I'm missing oh yeah yeah I think that is two weeks from this Friday that I am gonna be away so anyway I'll be around soon enough oh yeah thank you just in case anyone is wondering if you want to try this out right now coding trained github do slash toy neural network I know somebody just post that in the chat there's you can actually run the demo online we got to clean this up okay I gotta go thanks everybody I have to use the clips boy if I use the clips a lot I use the clips a lot IOL of eclipse weirdo I got to do a video tutorial about making a processing library with the clips someday goodbye