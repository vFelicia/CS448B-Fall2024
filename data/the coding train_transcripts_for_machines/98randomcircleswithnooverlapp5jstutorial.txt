hello in this video I'm going to look at a particular computer programming problem it's a computer graphics programming problem I'm going to look at it using p5.js and JavaScript but the ideas would translate into a lot of different environments and what is that problem so when they come over here to diagram it for you let's say you have a canvas that you're drawing in and your goal is you want to say I would like to fill this canvas with circles and I put the circles all randomly on the canvas so the goal is for the canvas to ultimately look something like this now notice the way that I drew this none of these circles are overlapping the truth of the matter is if you just try to draw hundred circles into the into a canvas into a window most likely through random probability and chance they're going to overlap so how do you guarantee that they don't overlap now there are probably a variety of solutions to this one of which they just thought of which i think would be great to demonstrate at some point would be to use some kind of like physics model so all these are kind of particles and they think they have a repulsion force so all these things move around and kind of self organize this nice spaced out pattern you might could even connect spring forces and that might be referred to as a force directed graph well and I just thought of an idea for another video topic that I'll do later but I'm going to do a simple solution I'm going to do a solution that's just about circles that don't move static having them appear without overlapping so let's first at least build the program that does this with the overlapping circles and I'm going to come over here and I have uh so first of all I think I should need to make the font a little bit bigger so first thing I have is I have a p5.js program here this is a JavaScript program it's got a setup function and a draw function the setup function is where I'm going to first create the canvas and I'm going to make a canvas that's 640 by 360 pixels wide and then I'm going to do something where I'm just going to say let's say how many circles should I do let's do 50 to start and I'm going to pick a random X and I'm going to pick a random Y and notice here what I'm doing here that I am asking for a random xfile value that's between zero and the width and a random Y values between zero and height now why not let's just I'm going to use a variable called R to indicate the radius of the circle this is probably something you're familiar with but just in case if this is a circle and that's the center of the circle the distance between the center and the outer edge that's the radius that's going to be a very important piece of data during this problem so let's just use a fixed radius right now of 48 for example and then I'm going to draw a circle at X comma Y and I'm going to say R times 2 because in P 5gs or processing if you're using those environments the the argument that you give to the ellipse function is actually the diameter or the radius times 2 but we want to use the radius for math later so if I do this and we give them some nice color like fill some red and some blue and run this sketch you can see it let's give them also a little alpha and maybe say no stroke and you can see there's all of our circles and of course they're all overlapping as you would expect 50 circles or hey pickles why they're not going to be now let's try to actually be a little bit more reasonable about this let's make them a little bit smaller and let's only do 25 so so this looks like now it is mathematically possible to place all these circles randomly without having them overlap so now we need to adjust this program to do that how do we do that so I'm going back over here by the way I'm just practicing making a video though this is actually I think that you might be watching and this is a real topic or something you could actually do okay so let's think about this let's be the computer for a second oh my god please whiteboard don't fall over let's be the computer for a second so first I want the computer beep boop boop boop I'm going to pick a place to draw a circle randomly here now as the computer d bee boo boo boo I'm going to pick another place to draw a circle now you can see I got lucky they don't overlap so the first thing I might want to do is let's I am the computer and I'm about to draw a circle so I pick a spot to draw that circle I don't actually draw it yet I just pick that particular XY so the question that I want to answer is does this circle overlap with the previous circle that I drew if it does don't draw it there throw it away and pick another circle if it does not it's fine and I can actually draw the circle there so how do I know then if two circles are overlapping well the way that I could determine that let's look at two other circles that are overlapping is by looking at the distance between the circles here is our one here is our two so each one of these circles has a radius and then there's a distance between them notice this is our one up to here and this is our two up to here if the distance between the circles you can see it has this extra space is greater than adding those two radii together then they're not overlapping but in here you could see the radius goes all the way to here the radius goes all the way to here the distance here in this case the distance is less than r1 plus r2 here the distance is greater than r1 and r2 so the relationship between the distance between the two circles and the two radii of the circles that is that is the all the information you need to determine if the circles are overlapping or not and p5.js has a function in it the distance function which allows which calculates that distance for you now it's not too hard to calculate it on your own it just involves the Pythagorean theorem link to some other place where that's described but for now I'm just in this particular video I'm just going to use the distance function okay so let's come back over here and let's look at this program now so here's the thing this is happening this bit of code this bit of code is happening 25 times so it happens once I've got an XY it draws a circle now it happens again I've got an XY how do I compare it to the previous XY I'm fortunately there doesn't seem to be a way that I can I need some mechanism by which I'm going to save all the existing locations of the circles in save them so I can check new circles against them and in that sense we need an array so what I'm going to do to this code is I'm going to add something I'm going to add at the top an empty array in JavaScript and empty array open bracket close bracket array being a list of things and I think a convenient thing that I could do is I could actually save this VAR circle equals and I could make a little object so instead of I'm sort of typing this out really quickly while I am NOT talking I am making an object now look at these two lines these two sections of code next to each other here are three we move this mouse here are three variables and X a Y in and are there are standalone variables we I might conceptually think of them as a circle an XOR but really they're just three separate variables now what I've done is made a JavaScript object called circle that has an X a Y and an R in it the reason why I've done that is because now I can say circles dot push circle now look at that I'm going to delete this zoom back out and look at this and I'm going to comment this out now if I run this program I don't see anything in the screen I don't see anything in the canvas but I did make all those circle objects and I put them in that array so now look what I could do now I can say another loop from I goes from 0 to the length and I'm going to put this code back and what am i doing here I'm actually saying draw this draw everything at from the array each element of the array circles index I draw the circle at circle index eyes X circle index eyes why and then circles is X I dot R times ooh and one more so this line of code got a little bit long but you can see and I think I'm going to move this over and stretch this out so and now I run this and you can see I have the same exact program I had before the difference is instead of simply drawing 25 random circles to the window I've now created 25 circle objects put them into an array and then drawn all 25 of those to the window the magic is here right here maybe I shouldn't add every single random circle that I make to that array maybe I should only add circles here that don't overlap with other existing circles right so okay so how do we do that well one thing I need to do is say right here I need another loop so look at this this right here this is my current circle does this this is my circle is this a valid circle or not here's my loop where I'm going to say bait I'm going to compare this circle to everything else that's in the array the first circle I pick there'll be nothing in the array so nothing will happen and that circle will get added to the array the second circle I pick it'll just check it against the first one if it's okay it'll get added to the array the third one I pick will get checked against the tip of Regas too and the fourth over the previous three etc etc okay so first thing I need to do is determine what is the distance between what that current circle and and I'm going to I'm just going to put in I'm going to put the circles index I into another variable so the other circle this is the current circle I want to check its distance against other circles and so I'm going to say other other X other dot Y if distance is less than Circle dot R plus other dot R then what they then they are overlapping and I'm caps because apparently screaming that so look this is exactly what we need to do we need to say for every circle check if check for the new circle check its distance against every other circle and check if it's overlapping or not if it's overlapping even one other circle I can't use it so how do we determine if I'm looking at all the circles if it's overlapping at least one well one way of doing that is to start with the assumption that it's not overlapping any of them so I can say okay overlapping equals false I'm going to start with the assumption that it is a valid circle it's not overlapping anything if it happens to be overlapping something I can set overlapping equal to true and I can actually just break out of the loop because as soon as it's overlapping one it's an invalid circle and now I can say as long as it's still not overlapping after we've checked all the previous one then put it into the array so look at this I'm going to zoom out here a little bit what's the algorithm here I'm going to do this sorry sorry I'm going to do this 25 times I'm going to pick a circle I'm going to assume it's not overlapping any other circles I'm going to check to see if it's overlapping any other circle and if it's overlapping one of those other circles I'm going to set that boolean variable to true I'm done and then you know if I did actually get through that entire loop and I still didn't find overlapping anything then I can put it into the array now there's a little bit of a problem here but this is pretty good so now I'm going to run this uh I can't read property ex of undefined so what did I miss back now and I restarted the p5.js editor and I also did notice the error here so let's look at this uncaught type error cannot read property ex of undefined so in align 19 which is this particular line of code right here so why why is that err what is this error so one thing that I did here you might notice is I have a loop I that is going 25 times for every new circle that I'm going to make 25 times I need to check every other circle J so what's the other circle not index I but J so what this needs to be here this was just a mistake this needs to be circles index J because this is the part where I'm checking the new circle proposal I have a circle proposal and I want to check that circle proposal against every other circle against every other circle J okay so now we should be able to run this and we should see look at that there are 25 circles all not overlapping because it can't add a circle if it overlaps one or another let's make sure that's true one two three four five let me move this over here this is going to be counting with me the live do this one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen fifteen why are there only fifteen circles I did ask to do 25 and I have to scroll up to see that right I asked to do 25 but there's only fifteen the reason why they're only 15 is because some of the circles it picks overlap another one and they don't get added so this is not actually a loop that I want to do 25 times I want to execute this loop until until I have reached 25 circles in the array so this loop can change while circles dot length is less than 25 I need to keep trying to pick a circle so this is just going to keep going pick a circle it overlaps at because they're little overlaps ah pick a circle it overlaps up because it doesn't overlap great so now this is a little bit dangerous but it's safe it's little dangerous because if I ever say Y circles that length is less than 25 you know it could be that it's just impossible for it to find a place where it could add a circle but I think right now we can reasonably say it's going to be able to find 25 places on the screen but let's just start with 15 and you can see you know each time I run this we're probably reliably going to have 15 circles and I'm going to make it 25 now we can see that each time I run you can see reliably I'm getting 25 circles and I would go through and count them I'm just going to have to assume that this is working now however if I were to change this to 300 I can almost for sure tell you this is going to crash let's just see what happens why not right nobody if you're like who's watching this video so I don't I don't run it you can see I did that's interesting that it there's a bunch there but you could see like I can't seem to can't seem to stop it I'm surprised that it even drew anything at all because it should just sort of be stuck in this loop maybe that's like the previous one but you can see that it's like completely stuck and I can't close it because I got an infinite loop so the only thing I can do right now is force quit the p5 editor and relaunch it and open up my sketch again called circles and set this number back to 25 but let's say we wanted to really push it in the great words of code anti code on Twitter let's push it a little bit what if I wanted to push it and try to get as many circles as I could fit well there's a variety of ways we could sort of think about doing this but one thing I could do and I'm going to make up a variable called my protection let me call it protection equals equals zero and actually what um you know I was going to say there's so many different like a whole bunch of different ways to do it but you want to do this the simplest way possible let's just say I have a counter that goes up every time and what I'm going to say is if protection is greater than 10,000 then I'm going to just break out of this loop so what I'm essentially doing is saying that you know I'm going to try to put 25 circles on the screen but if I've tried like 10,000 times it's probably not that the 10,001 time is going to get me those 25 circles so I should be able to now run this and you should see now if I were to make this now 300 I'm save it again in case I screw that up you can see a you can see that it's kind of getting to the maximum in 10,000 is kind of a big big number but you can see so that's kind of a quick and dirty solution at least and now that one thing we could do that's kind of nice here is maybe I could also think about giving these random sizes like between 12 and 36 and whoops and you can see here we have a kind of nice nice algorithm that fills our screen with circles of random sizes and I'm sure you know I want you know we could try to do something here and I could make this 50,000 and I could see like it's going to take a while it's running it's got to like try this like 50,000 times you can see like it took a little while but it gave us a nice no way circle packing algorithm just sort of a brute force this is not an efficient way of doing this don't get me wrong but it's sort of brute force algorithms of fill our screen with circles none of them overlapping so I will post this code in a link below with this video kind of run through a few of the questions and issues around an algorithm like this I'm sure there are lots of improvements that could be made to this and other questions that will arise and this was a bit of a this was not my estudios but it it does have a result where you can see the circles and so I will consider maybe doing a followup on this or something if there are some questions that you have the comments you want to ask and make some improvements to this particular example okay thanks for watching and see you soon