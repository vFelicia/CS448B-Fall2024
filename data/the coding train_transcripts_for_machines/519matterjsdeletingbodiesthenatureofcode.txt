okay I'm back for more matter.js it matter.js to me to make never mind it it was going to work but it didn't okay so what I want to do this is what I left off in the last video and the thing that I want to add to this is a mouse constraint but you know what there's something that I really should add first which is that even though um there's all of these uh part all these I'm going to call them particles circles and they leave and then I add some more I've never actually told my code or the matter.js engine that those circles have left the screen we can now ignore them so it's going to start to run very very slow after a while so first of all let me just change something here to demonstrate this which is to say instead of adding circles when I uh drag the mouse I'm just going to every time through draw I'm going to add a circle uh at the top um and just so there's going to be a new Circle every frame so now it's doing this automatically and you know I kind of want to move that top one a little further down there's not really a good reason to do this but uh let's do that yeah so this is a little better to sort of demonstrate just so see so now I move that a little bit down so we can see after a while I'm sure this is going to start running very very very slow so two things I need to do number one is I need to remove those objects from my array when they're off the screen but number two I probably also need to tell the physics engine stop trying to calculate geometry with them so I know how to remove them from my array so let's do that first so here in this this is where I'm kind of looping through and drawing all of them so I can write add some code something like if circles. is off screen then uh then circles. splice I comma 1 so what what is what is this doing so this is the idea here if and not if circles index I if this particular circle is off the screen then I'm done with it and splice is a function that removes an object from an array so I want to remove the I object from the array and I only want to remove one object so splice allows you to remove like I and then the two after it if I wanted to but I don't want to do that here so is offc screen this will just work right no it has no idea what is off screen is that's not some sort of function that exists um but it's something that I can write so I go into box. JS which really should be called circle. JS um I can write a function called is off screen and what do I want to do well first I want the position of the particle so I can say VAR PA equals this. body. position and now I can say you know there's a lot of things I could evaluate here but I'm just going to do something really easy if p.y is greater than height plus like 100 like it's not only at the bottom it's like 100 pixels below the bottom then a return true and yes yes yes yes actually so let's do this here everybody always complains I like to write silly code like this just to really kind of illustrate exactly what's going on if this is true return true otherwise return false but notice the way I just said that if this is true return true that's kind of silly this whole thing evaluates to true or false so something I can actually do to make my code a bit more concise is just return what this evaluates to so return true or false is pause y greater than he so so now we should this should kind of work and it's actually I I'm expecting it to work so let's just look here at um uh What's this called circles. length 144 145 so that's it's got to be working right if it's 145 now oh whoa but look what's going on see all this like crazy flickering what's that flickering so this is why you need that what I've done there's a flaw in what I've done a major flaw and I do have a video where I go through this but I'm going to mention it right now because you don't want to go find that other video so what's the issue here I'm going to I'm going to do a quick explanation let's say I have an array and it has circles in it a b c d and e and C is actually the one that's off the screen C is the one that's off the screen a b d Etc e are all on the screen so I check zero oh it's on the screen I check one oh it's on the screen I check two oh oh it's not on the screen anymore delete it so I remove it from the array you know what happens when you remove something splice something from the array this is what happens to the array that those two elements move down one that's gone so now check three it's fine what happened I checked a b c and then I checked E I never actually checked D because when I was checking index 2 I removed it and then D slid into index 2 so I just went un checked E so this is what's happening I'm kind of like skipping them and then I'm also like not rendering one CU it like moved and it didn't get rendered which is why it's flickering so what I actually need to there's a bunch of ways I could resolve this I'm sure there's like a very fancy JavaScript using some kind of sophisticated array function that you all will let me know in the comments but a quick way I could do is just go through the array backwards I could also do something like just say I minus minus like let me just back up one let's add that into the code and now we should see we don't see that flickering problem anymore because I'm not skipping any so but I could also Loop through the array back backwards um and now I can just check to make sure this is working you know it's growing but then it went down so definitely things are being removed now the thing is though I only removed them from uh I only removed them from the the array I think matter JS is still thinking about them it's still the world matter is like this world is full of circles and I'm going to figure out if they're bouncing even though if they're like thousands of pixels below the screen so I don't actually know how to do this let's look at the matter D chess documentation ah remove generic remove function removes one or many bodies constraints or composits to the given composite optionally searching its children recursively oh so there's all this kind of like ways that the bodies can have relationships that things can be like sort of tethered together if I remove one should I remove all the other ones but we're not in that sophisticated of a space right now so I'm just going to say I think what's going to work is if I go to uh box if it's off screen what I might want to do is also do something like circles because I might want to do this in other place like uh remove from World okay you guys can think of a better function name for that uh remove from world uh so this do remove from World equals function and I'm just going to say world. remove World this. body so I'm pretty sure that that and there's a way that we can test this actually so let's um let's run this so there's how many and I probably shouldn't have let's hold on let's let's first comment this out so right now I'm not calling my own remove from world so I am going and what are I'm going to get rid of these console laws logging things that are uh polluting my um um probably in the boundary yeah sorry uh okay so there's my array which is called circles 136 now there's also an array in matter which I believe is probably bodies Dot or no world. bodies I think the world itself keeps track of everything that's in it that's an array. length 913 quick circles. length 147 so you can see matter dos thinks there's 913 things whereas I think there's only 147 so now what I should be able to do and let's be more precise about this actually let's just indw let's console log these console log uh circles. length and then what did I say a world. bodies. length so let's look at both of these so we can see that they're kind of working together until they start to leave the screen my I'm deleting stuff but this just keeps going up and up and up and up and up so now what do I do if I put back in my function where I am additionally not only removing it from my array but telling matter digest to remove the body itself I think we're going to see this now be correct and there we go right wait hold on it's not exactly in sync I mean it's a little bit off why is it off oh look at this oh boy oh boy something weird has happened look at this weird bug certain ones have stopped and been removed I have a feeling this has to do with the way that I'm going through the array oh I know what's the problem is look at this boy I've been really careless H splice it and then remove I removed it from the array and then the stuff slid down and I told to remove the one after it which wasn't actually removed from the array so that was a really bad bug this has got to be first there might be a a different way I could think about organizing this to protect myself from that kind of error but this at least now we should see whoops we should see this fixed I'm in Mouse which I haven't even done yet okay so let's look Let me refresh here so let's see here now here we go once they start getting removed we should see that they're staying in sync uh there we go now one thing you'll notice if I just say no Loop here just to pause the sketch for a second you'll notice that the thing the number of things that matter dos thinks exist is always two more than what I think that's because there's two boundaries so this there's this is I think an interesting question which is I've introduced a great deal of redundancy and I'm keeping track of my like own arrays of stuff but matters actually keeps track of everything itself but I'm doing that just so I can have total control over the sort of visual design and and management of the entities and not have to rely on because I want to keep these things in separate arrays whereas matter.js the bodies array keeps everything in one array but you know there's reasons why you might not do it one way or the other but okay so I said this was going to be that I was going to introduce the Mouse but there was enough here just in looking at removing bodies from the world that that was a pretty good topic for this video and the next video the next thing I'm going to add is a mouse constraint where I can click on these things and drag them around so I'll see you in that video