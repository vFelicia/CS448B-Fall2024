in this video I'm going to look at augmenting the Twitter bot that I made in the previous video to post an image and where's that image kittens go where will that image come from that image is going to be something that I draw through appropriate other program and so this is this is the video where I combined this thing called processing with this other thing called node which I've been using to communicate with the Twitter API so let's just sort of diagram how this is working so I have this nodejs program called bot J s and bot j s has a connection via the twit package to the Twitter API and what bot J's can do is it can post a tweet you know every 10 seconds or can post a tweet based on an event like a follow any sort of thing and one of the things that can send with these tweets is an image so there certainly are node packages and you could use Python or any number of programming languages to generate images to post to Twitter but a particular programming environment that I love and use a lot that has a ton of functionality for drawing whether it's 3d and shapes and vector shapes or image processing or getting live feeds from a camera or reading from a sensor there's so much that you could do with this thing called processing now you might be saying like I don't I don't get that I know processing but this doesn't make any sense because if I launch processing and I open up I just go to examples and I open up some particular example like simulate and I go to flocking and I run this particular example you can see there's this window and there's this editor and I have to press play and it then it runs it is an animation like how does that any of that have to do with node well turns out one of the features of processing that you may or may not be aware of is there is something called command line processing command line processing is a way that you can say from the command line determine all the thing that I've been showing you in all of these videos you can say processing Java right we said from the command line node bot j/s you could say processing Java you know the name of your sketch now a little bit more to it than that but the idea is that you can execute the processing code from the command line so if you can execute the node program from the command line you can execute the processing program from the command line you can can you execute node and have node execute processing and the answer is yes so this is the this is essentially what I would like to show you how to do so let's look at some of the pieces here first of getting that set up so when the first things that you need to do by the way is this isn't a feature that's automatically available to you on your system so what you need to do is look under in the bed if you have processing running on your computer look under tools and look under install processing Java sorry processing Java so I'm going to click install processing Java I'm going to hit yes I'm going to enter in my password for machine and hopefully it's going to work and I'm going to know if it works by now when I come to terminal and do prot it I'm going to get some information so you can see like I that didn't seem to do anything but only because I have this like giant font you can see here that command line addition for processing zero but you can see that it's there and it's giving you some information about what you need to add to it in order to run in order to run your processing sketch so let's make a processing sketch that we could run from the command line now so I'm tempted to like draw a rainbow or something but let's just make something really very very simple I'm going to type in and let me make the font a little bit bigger if you haven't seen processing before welcome editor font size 36 welcome to processing I have a setup function where I'm going to make a size of a window I in the setup function I'm going to write a loop to say you know 500 times draw a circle and what am I going to do with the circle let's pick a random xvalue somewhere in the pixel space a random yvalue somewhere in the pixel space and a let's pick some random colors and a random green color blue color and then I'm going to say no stroke no fill oh no huh fill r0b and draw the ellipse at that location well a 16 by 16 oops and so first and we make this 640 by 360 which is a nice aspect ratio autoformat so let me run this program and I'm missing another curly bracket just to end setup now you know processing is a sophisticated environment where there's an animation loop and all sorts of but I just want to render a static image so I just want to run all my code only in setup and when I run this you can see that's what I get so maybe I should add like a grey background and maybe I actually want to do 5,000 of these circles and maybe I want to give them a little bit of alpha and I'm going to run it one more time and you can see there we go this is my beautiful picture that I have made with processing and you know just to have something to demonstrate demonstrate each each time so I so let's now see so what is the next thing that I want to do with this program the next thing I want to do is I want to save and up to a file and I'll call that file output dot PNG now let me save the actual sketch and I'm going to save the sketch in my node five directory this is where I'm actually working on the bot right now so I'm going to save this sketch I'm going to call it a rainbow you that's not really drawing a rainbow and if I run the sketch and I run it I can see now if I go into the directory there is now a PNG file called output dot PNG which is that image so I have a processing program that runs it draws an image it renders the image out so all I need to do now is have node trigger the processing program a processing draw the image save it have node pick up that image and send it to Twitter to tweet it okay so how do we get these steps now a couple things one thing I might add to this program is I'm just going to add the function call exit at the end because you know I kind of want to just see it run do its thing and quit because I don't really need to keep that window open so that's going to be useful and now I should be able to run this program from the command line so let's come back to here and how do we do that processing Java I'm I'm going to like try to imagine what the next thing I type is because I don't totally remember something like stache sketch equals so often with things that you trigger from the command line you need a set of arguments or parameters that kind of modify how it's working so I want to have my sketch be equal to and this is a really strange thing I'm going to do I'm going to put duck tick I think that's like it's like sort of like this backwards apostrophe thing that's like shift I don't know just like under the tilde next to the one on my keyboard PWD what this is doing is remember PWD is a command for UNIX for command line that means print working directory and what that's going to do is like automatically fill here the directory that I happen to be in because I need the path to where this processing sketch is and then slash the name of my sketch rainbow dash dash run so dash dash run means I want to run that sketch the sketch that I want to run is called rainbow in this directory I probably got this wrong let's see if this works it doesn't exist oh so first of all I'm in the wrong one reason it doesn't exist is I'm in node for set interval so I'm in the wrong folder so what I want to do is go back up a directory and go into node 5 you can see that's where that rainbow folder is so that's one reason why it didn't work so I'm going to add by the way the up arrow is what I'm pressing to get back to previous commands we're going to try it again and really hope it works well something's going on something's happening I see it I see it and oh it's still there why isn't it quitting that's strange let's go die not hit save was I already running it I don't know let's let's maybe I maybe I'm gonna maybe I shouldn't have processing open save changes to rainbow yes it did finish originally let's try it again there we go so you can see that it did it I just I just want to like do this all day long trigger processing programs from the command lines totally but so all you need to do is install processing Java have the argument deaf desk sketch equals the name of your sketch and then run and now watch this what I want to do is take this exactly this line of code and bring it in to my node program so I'm going to save our command equals that so all I need to do is now have node figure out a way to execute that command now how do you do this so something that node node is a process a node program is this thing called a process and node can have no program could have child processes things that it triggers that happen while that particular node process is running and so the way that you get access to that is through another call to require and I have that I already have my example up here so what I need is this particular require so this is the require statement where I want to make a variable called exact for like execute and I want to require something called child process it's a package that's built into node and get the executable thing from that so if I grab that and I put that here now I can say exec command and then I'm going to just write I'm just going to the callback is going to be processing so in other words what this will do and I'm going to say console dot log finished and I'm going to I'm going to I'm going to comment out the Twitter stuff now so all this program is doing now is importing this child process thing that's requiring this element that's part of node so that this command that I know works can be executed just like I would typing it into the console itself and when it's finished call this function that I've called processing so now right so this we know typing this we know runs processing sketch we see it happen now if I type this we should also see the project sketch run I'm finished ok though it's really exciting but that works because little scared I only learned I only figured out how to do this last night so then this is great and note and and since that processing sketch is always making an image that's in the same directory with the same name I can now post that image to Twitter so let's get let's get a little further here so now that we know here now this by the way there's some in when you look oh you look at my example at our post there's some arguments you can put in here you can get more information about what's happening with the process and if it something went wrong with it but you know for us right now we just want to know that this is the function we know that when this function executes the image has been made so we can actually go and tweet that image so what I want to do is basically take everything that I had before I don't need set interval yeah judy set interval sorry what I want to do ah yes yes yes yes yes I want to do let's think about this for a second right what do I want to do I want to execute this command in the function tweet it because every time I tweet I don't want going to worry about the interval just yet every time I tweet all right this is what I want to do in that function when the tweeted function occurs the first thing I want to do is trigger processing to run and then now once processing has run here inside of this function that's where I need to open the image from the file from the the window opens very loud and you open hoping the file from the hard drive and and upload that file to Twitter so let's I'm going to go to my sort of premade example again and this is sort of this is this crazylooking line of code that I'm going to bring into here it's the next piece of what we need you know if you're kind of trying to type along you could pause here and I'm going to need to stretch this out a little bit and I'm what I'm going to do is break this up in a few I'm going to the file name for us is what if I go to the finder here this is the drawer this is the project we're in Rainbow is the processing sketch so the file name is ring rainbow slash output PNG so it will always be rainbow slash output dot PNG and I've got this other line of code F s got read file sync so guess what there's another node package called FS for file system this is a node package that allows you to read files you don't actually have to add it as a package it just comes with node so it's another require that I need up here so I'm going to add var var FS equals equals require FS so now I can use the function read file sync and here and you just need to give it the file name and again I'm going to give it some parameters I'm going to break this into multiple lines of code so you can follow along more easily it's very very basic here actually that what I want to do is I going to use a coding known as base64 so now you can see to read a file I need the file name and I need to say like how I want to read it and reading it as base64 is a kind encoding for how the data the file will actually be read into the computer's memory right I need to store all the data from that file in a variable so I'm calling that variable be 64 content like a some other example I pulled it pulled this from had that as the variable name but it makes sense so this is now has all the information for that file this has the information that I want to pass to the Twitter API so once I have that read I'm going to go back to my example and you can see like look there is another all right now I'm doing just like exactly what we did before remember tweet post was is a call to the API where I want to post something and the thing I want to post is a status update but now what I want to do is post a media upload and that media upload is has data associated with it that's b64 content and I'm going to make this variable name less so you can kind of see it all here a little bit better so you can see this is the post media upload this is the stuff that needs to be associated with that post and then what is uploaded uploaded is a callback for when the information has been uploaded so a little nuance here is that I first have to upload the image before I could post a tweet so I'm not actually tweeting yet I'm just uploading some media to Twitter associate with my account once that's done I can have an ID associated with that media that I could then tweet with that media so now what I need is whoops what I need is the uploaded function so I need to write function uploaded I need to have this particular callback once I have this particular callback this is where you know this is where I will tweet because the image will be ready I can then tweet with the image so let's look at how we might do that so if I look back at my example you can see one thing is there is there are some arguments associated with this particular callback the key one that I need is data because data is going to have an ID I need a numeric index an identifier for that image that I uploaded because the images have an upload of it now when I tweet I need to refer to that image and the way that I do that is through something like this and I'm just going to call it ID right you can see media ID string is part of the data object that comes back and if I have that ID now what might I do I'm now going to create a object right this particular object my tweet object the same exact thing I always used to do I could say just going to say a coding Rainbow is the hashtag live from nodejs and then I'm going to need that's the status but my tweet now doesn't just have a status associated with it it has one other thing and what is that other thing it is a media ID now there could be multiple there could be multiple IDs so in this case I just have one right so I need to put it in an array but you could have five images associated with a particular tweet and actually one of my favorite bots is on zoom BOTS that just tweets four images each one slightly bored zoomed in on the next one and if you I like to look at it and just go duh duh duh I guess I need four of those don't that anyway you try that at home but you can probably improve on what I'm doing but you can see here now this is my tweet it's this plus the ID for that image okay so then of course I need to actually post it which is what we've already done so far status is update the particular tweet the tweeted callback and look I already have that callback down here so all this other stuff from the random number BOTS can go away and I have and I can just keep the tweeted function so let's make sure I'm all set here in there's a lot of like nested stuff here now so first the tweeted function we know executing processing works we know it generates this file name then we read the file we post we have this callback for posting the tweet we have this callback for when it's done and this is this is all inside the function processing which is inside the function tweeted so I think I'm missing one curly bracket here so you can see this should line up now right tweet it starts everything we the command line when that's done we execute processing we read the file we upload it when it's uploaded there's so many nested callbacks here right this is you can sort of like see this nested structure first execute the command when that's done this function then post a twit then post the upload the media when that's done call this function and then in that function post your status update and when that's done call this function to say something went wrong or it worked okay boy oh boy oh boy oh boy moment of truth this is a 20 minute video building this ever so slowly let's see if this actually works I don't have a good feeling about this but I'm going to give it a try so let me make sure I'm in the right place node 5 node bot dot J s okay first of all he's processing ran okay that's good not just waiting hoping it worked okay okay let's go let's go to Twitter and I'm going to go to my Twitter page for this A to Z account and I'm going to hope there we go we can see look that image is posted to Twitter this is like the most beautiful sight I've ever seen so this is an image drawn in processing posted to Twitter now again there's really nothing on this is a trivial result because every image is going to be kind of the same thing it's just a bunch of like purplishpinkish dots on the screen but imagine the possibilities of what you might be able to do with the generative algorithm that's going to post a different image every single time and of course what you might be able to do if you tie into like google image search with that or if you tie you know mashing up with other api's or if you're downloading images from other users a wide range of possibilities there so this is where I'm finishing this particular video and I will get to more scenarios with a bit more features but one thing that might be on your mind is this seems to only run on your laptop right so I have you when you're meant to like just leave your laptop open and have this thing like running forever and ever and ever and never close your laptop don't have a Twitter bot so you do need to deploy this somewhere it's a little bit tricky because you don't just at lots of servers we run node but what servers will run node and processing for you so I will soon show you a tutorial where you could do this using an Amazon ec2 instance using a trickin processing into thinking that there is a screen associated with it so processing you can see that window launches and it's fine because on this computer there is a windowing system but on a server there's often not a windowing system so deploying is another topic for yet another video so I will get to that at some point soon so hopefully you found this useful and helpful and interesting and you make something with it and you tell me that you made something with it and and share it and thanks for tuning in and I'll go have some lunch I've actually been recording videos now today for two and a half hours and so if this video wasn't any good it's because it's hat and thanks and I'll see you guys soon