hello and welcome to another computer vision tutorial video so in this video I'm going to talk about persistence with blobs ID numbers with blobs so what do I mean by that so you can see this is a cup that's in my right hand and this is a cup that's in my left hand and I previously made two other videos about how to do this kind of blob tracking thing from scratch although in truth you might just want to use a library for it which I'll show you in a future video but even so most libraries won't even do the next step I mean some do I'm sure but a lot of libraries won't do the next step which I'm going to show you is how do I know that this is the same cup over time and that this is the same cup over time what if I always wanted to replace this cup with an image of a of a hedgehog and replace this cup with an image of a tortoise so uh you know I won't get into weird animal pictures in this video I'm just going to use numbers so let's look and see first what happens if I just try to number these cups so where am i drawing them I am drawing them right here in this uh in this loop right here I'm saying Oh first of all I'm only bothering to look at any blobs that have a sigh I don't I don't want to look at little blobs I forgot that I had that in there but I'm only showing blobs that have a particular size so one thing one thing that I could do is I could just say int I equals 0 and here I could say I plus plus I could just number them according to the order that they are in the array and I'm going to put I in here and then in the blob function it's going to get a number and right afterwards I could say a textaligncenter and I'm going to say text size 6 I'm trying to make it big fill 0 and text that number and where should it be it should be at min X plus max X times this is like a little bit silly but I'm trying to find the middle of the blob you know I think I have a function called get X and no a different different different program I did that in max X minus min X times 0.5 this is a little bit silly here but I'm just going to do this really quickly so you can see what I mean min why max why min why you this is just me finding the center of that rectangle and now what I'm going to do is run this again and we should see some numbers come on blobs you can see I have a 0 and a 1 now first of all I forgot some things let's clean up some other stuff text size 64 I am drawing some others text text size 12 let's just leave that smaller and also you notice how it wasn't really in the center let's let's actually draw it just at the you know max Y a little bit above the bottom the text so I should have added this before I started recording this video but now you can see the problem here's blob 0 Oh No here's Bob zero here's blob 1 watch this oh that's 0 that's 1 that's 0 that's 1 that's 0 that's 1 right because the order that I'm finding them just has to do with where they are like this I get this one is always going to be 0 anything that's up at the top left right this is like way too much 1 so the order of the Iranian is nothing they're in a particular order in the rate just because the order that I found it and then you know what happens if I try to add a third one you can see that I can't reliably look I don't know what I'm doing anymore so I need a better system for this the blob detects the point of this is that the blob detection algorithm doesn't take into account time or history of a scene that it's looking at the only thing it takes into account is this instantaneous moment and it says here are the blobs that I see right now in some arbitrary order so in order to be able to track the which blob is which over time we need some methodology for doing that and in that sense we need another object so the particular program that I wrote in the previous videos has this a blob class which keeps track of a blob object but what the program does is it says it takes a scene which might have two it just says let me find the blobs in that scene and then let me erase them and let me look again and find the blobs in the scene let me erase them let me look again so I'm not keeping track of a history so what I want to do is add a new ArrayList which is essentially going to persist over time so this ArrayList in the first frame the first frame of the program if it sees two blobs it takes those two blobs and you can think of this as the the ArrayList that's persisting over time it then puts two blobs in that ArrayList and then it goes and looks at the you know the next frame it looks at for the blobs again and maybe it finds two blobs it tries to match them with what's in that in that history so and then suddenly if there were three blobs well we have to match which one is aid which one is B and then create a new one and then what if it suddenly only sees one blob well then it needs to find which one of these matches and then delete the other two so we're essentially always looking at what are the current blobs what were the previous blobs and can we match which one is which and which opens a very interesting question like how do we match which one is which which I will get to in a moment okay so let's come back here and what let's look at the code and sort of see where are we going to add this stuff so you can see there already is this array list called blobs but I'm going to change this I'm going to add another ArrayList and I'm going to say current blobs so current blobs are the current blobs for this particular frame and the ArrayList blobs will actually store the blobs over time that persistence that history of blobs so one thing I want to change right now is just change all of this so I need to look at current blobs instead right here and I need to also add this to current blobs and then here I want to look at all the current blobs so this should be whoops sorry this is wrong I want to add the blob to current blobs so this should be and this should be current blob so this is still the same exact program same exact program but I'm just calling the thing current blobs and you can see whoa something crazy has happened what happened I forgot something really important which is that I need to say current blobs dot clear now I want to back out of some things that I did previously I don't want to use this arbitrary index into the array as a way of giving the blobs an ID obviously we're doing to do something more sophisticated that's the whole point of doing this program but I'm going to leave this code in here that draws the number what I'm going to do is I'm going to give the blobs an ID number okay and that way every time we make a new blob it gets its particular ID so that's going to be right now all the blobs have an ID of zero and the other thing I want to change here is before when I was just showing the current blobs I was eliminating blah small blobs by just not showing them but what would make more sense honestly would be for me here right after I found all the blobs to just delete any small ones I'm going to go through the array backwards is greater than or equal to zero I and if and if blobs get index I dot size is greater than 500 then actually is remove the right function remove that particular bomb so what I want to do is is at the end of all of this right first I want to analyze the image and find the blobs that are in it then I want to delete any small blobs and by the way this is current blobs very important that I say current blobs current blobs current Bluffs and actually just to be totally clear about what's going on is I don't even want to have this as a global variable I want to just take this and instead of saying current blobs are clear every frame I'm going to make a new ArrayList called current blobs because I'm just going to look at what the current blobs are and then down here once I've analyzed or move all the blobs now this is the part writing to match current globs with blobs so now I want to go back to the whiteboard because we have a very important question to ask what are the three possible ways that current blobs and blobs could relate to each other that was a very awkward way of phrasing that question but basically there are there could be more current blobs than blobs right this is the case where I might see three current blobs but in my history there's only one so previously there was only one there could be fewer current then blobs so I could have just say only seeing two blobs but I had four previously or there could be equal equal blobs so there could previously have been two and there could now currently be two so I need to account for all three of these possible scenarios and you can see what I might do like Oh in this case I need to add two more blocks or in this case I need to delete two blobs or in this case I just need to match these two with these two so let's first look at the first scenario which is what if a current a current loves dot size is greater then curve blobs dot size is greater than blobs dot size okay so that's let's let's consider that as the first error and actually you know what I'm going to be a little bit I've been have to make things easier on myself I might be able to combine this stuff later but really I could just say what if blobs is empty if my history of blobs is empty that any blobs that are in current blobs need to be part of that history so I could just say for all blobs that are all blobs that are in current blobs blobs dot at B so this is this is possibility one there are no Bluffs possibility number one there are no blobs so I don't have to do any matching just add them all now I'm going to do something else else if blobs dot size equals current blobs dot size okay so what I'm going to do now is I'm going to now look at just the second scenario what if I previously had two blobs and now oh and here's the other thing by the way I should give them an ID number and let's actually keep track of a counter blob counter set it equal to zero so I'm going to just keep counting up and give them ideas over time so here's where I want to set this is where if I'm ever adding a blob I want to give it a particular ID and then who did it I'm losing my mind and then I want to say a blob counter plus plus okay so now we need now we need a method for saying I have these current blobs I have these previous blobs which one is which and so the method I'm going to use right now is a really simple one I'm just going to say if I'm a blob that's detected let me find a blob in the previous flame that praying frame a previous frame that I'm closest to we could do more sophisticated things by looking at the velocity of a blob over time in which way it's moving and try to predict its location and look at its size and also do matching with that but you know all that stuff is kind of dressing that we could add on later to make it more accurate I want something basic that's going to sort of be good enough so I just want to look for the closest so the first thing I'm gonna do is say for all blobs in uh my current blobs I then want to look at all and sorry bye wait that's my history of blobs my naming is a little confusing here I want to look at all for all current blobs in current blobs and here I want to have record distance is I'm going to make up some really big number right I'm just going to say and you know I'm just going to use the the processing distance function I'm not going to worry about square roots so I'm going to say record distance is like a thousand pixels away and I'm going to say first give me the distance between ah now I really need I really want to have a variable that keeps track of the center of the blob because the way my variables are they're keeping track of the top left in the bottom right of the blob so I think what I should do is make a variable called I'm just going to call it actually X you know what I think I'll just calculate it on the fly I'm going to write a function this is a little bit goofy I'm going to write a function called X which I don't like that I'm gonna say get X which returns max X minus min X times 0.5 plus min X right that's the that's the left side of the blob plus the width of the blob which is the maximum minus the minimum divided by two so and actually I'm going to just call this get center and I'm going to return a new P vector that has and I'm going to be longwinded about this this is the X and this is the Y this is turning into a rather long video and I'm going to return a P vector X Y so I think I'm going to need this quite a bit so this is just a function and it should return a P vector not be void that just gives me the center of the blob whenever I want it because what I want is Center B is this particular blobs get centered and then I want Center C be nothing better I'd see much better naming that other blob Center and then I want to look at the distance between those two and if if that distance is less than the record distance then the record distance is that distance and guess what that blob is the current reigning one that I've matched so what I'm going to do here is I also need to say make a variable called matched so and now I'm going to say matched is that particular current blob and at the end what I'm going to do is say the blob dot ID equals and interestingly enough so the blob has changed its size so I also want to like copy all of its stuff over but rather than doing that I wonder if would it work for me to just say this blob is equal to that blob and then it's okay that blobs ID is equal to that blobs ID and then then set let's see this particular app match right right the matched ID is the blobs ID that I just checked and then the and then the blob itself is then equal to matched now I'm a little worried that this is going to be an issue let's see why and I can say no just giving me a little error here so let's think about this so let's think about this algorithm I'm really thinking this through here so let's say okay so I I start with no matched blob then I go through all of my current blobs and oh I'm looping through okay I'm going through all of the existing the preexisting blobs and I'm finding the one that's closest in the current blobs when I find it I give that matched one that blobs ID and then I set that blob back evil to it so let's just run this for a second and and see what happens now I'm not going to be able to add or delete blobs in this case because I'm only ever doing something when I have no when I have no blobs or the equal number of blobs so I should get let's see what we run nothing yeah that's always a good sign so let's see if blobs is empty go through all the current blobs add them okay so let's let's add some debugging here adding globs let's see if we ever get this oh you know this would be fun to sew blobs should be empty right now oh oh if it's empty and guess what I only want to do this but that should and current blobs dot size is greater than zero like I don't want to do anything if there aren't any current blobs okay let's see here why did I added some blobs ah so you know what I so I think it got some a small blob must have appeared I might have to edit this part out guess what if you would like to see the results of your code in the window it helps to draw the stuff in the window okay so now I'm going to come back here and say for all the blobs for all the blobs in blobs bicho let's add that back in and now so you can see it got my nose as a blob and I can I update it if I just have one blob kind of near it now you would think that this which at least be able to match it with this so let's see if let's see if I can get that to work so one thing that I want to I want to give myself some debugging information on the screen I don't really care about the distance and color threshold right now so what I want to draw is text and I'm going to hold on I'm going to draw some debugging information on the screen hold on ah and I want to draw just say blobs dot size and I want to draw current blobs dot size and make this one a little further down and actually it's F let's have this be below so hopefully that's going to be big enough for me to see it you can't really see it that well let me zoom in whoops ah hold on we make this much bigger sorry everybody here we go let's see what's happening here okay so there's no blobs in either one blob now my matching is not updating okay so you can see that even when it's actually even when it detects one more blob it should match that first blob was detected it should match and follow it because it's the closest flaw so now we need to debug and figure out why that's not working so I knew I didn't really like I didn't really like the way of doing this I think I like I've got a like variable reference issue like I've got this variable that's sitting in the ArrayList but if I assign it I think I've kind of lost it still so I don't think this is going to work what I want to do is write a function I think it's gonna be a much better strategy is to say a blob dot copy matched it's copy the right thing or maybe a follow or become that's right let's call it become so what I want is this particular blob to become the matched blob it keeps its ID but it won't the cameras about to shut off it keeps its ID but it but it then takes on all the characteristics of the blob that its matched so I'm going to do that so I need to write a function called become and it receives another blob so really all I need to do is just say min X I just want to copy and I'm sure we could come up with a more efficient way of doing this but I just want to copy all the properties of one blob to another and since the ID is here in this blob that already exists I don't have to worry about copying the ID so that should work and now let's do this let's see if this fixes that particular problem there we go so you can see whenever it detects it it kind of follows it why is it being so why is the detection suddenly so poor I wonder if like my color calibration is off guess what everybody no wonder my code was performing so strangely I instead of removing the small blobs notice I'm removing them if the size is greater than 500 because before I was only drawing them for the size of greater than 500 so I actually want to delete all the small blobs not the big ones and that's why it was working very very poorly and this should fix that and we can see now I'm matching this blob perfectly but I've but uh I'm actually getting the boat as zero so hold on because I at when I was debugging this I started drawing the current blobs and actually this is useful to do but I'm not going to worry about that right now okay so now let's see what we've got so far now have one blob that is always ID zero but this one is never going to be picked up because I don't have any code for when there are when there are more blobs than when there when there were more blobs than was previously detected so let's go now into the algorithm and let's figure that out so I now have code for if the oh I have to fix some things but that's okay if the blobs are empty and there are current blobs just add them all and now I actually want to change this now I want to do something if there are if the amount of blobs are less than or equal to the current blobs so in this case even if they're less than or equal to I would still oh this is great because I kind of already have the code for this I would match all of the blobs that I can match and then what's ever left over I'm just going to add new blocks but here's the thing something I didn't add to this code is I can't match a blob twice so what if this one is if this current blob gets matched I can't say it's two different blobs at the same time so one thing that I want to do is in my blob I want to create a boolean variable called matched which by definition is set to false and then here if the matched oh I don't like that I call this matched and now I made my boolean variable named match because now I'm in the business of saying match matched equal true so let's think of I'm going to call this taken like it's it's taken it's not taken it's still available to be matched so I'm going to say once it's found its state is taken and if its distance is less than the record distance and that particular blob is not taken then it began it can be matched so in this case only blobs that haven't been matched before can be um can then be matched with a new blob in a new frame so once that's happened right all I need to do is say after all that matching is done so this is like match whatever blobs you can match and now after that whatever is left over make make new blobs so how do I do that I look at all the blobs in current blobs and I say if that blob is not taken if it was not matched then what I do exactly what I did when I was adding new blobs so it's blob whoops ah picture I give it its ID being the counter I add it and then I increase the counter so now if I run this code I'm pretty sure we now have the ability to say here's blob zero here's blob 1 mmm I wonder why now the problem is I can never remove them hmm come back why is it one together so this is in fact working the issue is it's going to break you can see how the ideas are staying it's going to completely break once one of the blobs goes away yeah actually it didn't completely break it's doing weird things because I can't ever delete blobs so the blobs can get stuck very easily because I don't have a way oh this is sort of a nice effect right I can always pick them back up again so because I don't have now what you see what's missing is I need a method for saying oh those blobs no longer exist so how do I add that in so I have in my code I'm testing what if it's empty what if there are no hit blobs historically but I found some blobs or what if I have had blobs historically but I either have the same amount of blobs I detected or more and now I need that last scenario else and this is really I could just say else a else if blobs dot size is greater than current blobs dot size so now here's the thing I'm I really should I'm going to need to refactor this later but just for the sake of argument right now I'm going to copy and paste this exact code okay what I'm going to do is copy and paste this exact code uh because I've got to think about this for a second my brain is working tick tick tick but basically what I want to do is I want to say let me um let me look at the blobs that I do have and see if I can match them but actually I think what might be an interesting way of doing this I could do it this way but let's keep let's do it this way I'm going to leave it the same I was going to say should maybe do it the other way around like let's look at all the current blobs and find the closest one and then see what blobs are left over hmm could do it that way I can't decide let me see I might have to I want to I want to loop to stay the same so let's do this let's think about this so the first blob I'm going to try to match it with something okay so now the thing is if there are no blobs left to be matched right then match will be no aha as long as matched is not equal to null then that one's matched and that blob should become it however otherwise if matched is no then this is a blob that I need to delete so I'm going to say this particular blob I should remove a mark for deletion I'm going to write some function right I want to delete it and I actually could just remove it right there but um you know this is a little bit of a problem actually I don't want to do this because I'm giving a big advantage to the first blob right I do need to do it the other way around right because what I'm saying is like there let's think about this for a second let's talk this through okay so the scenario is what what I'm currently seeing is one blob this is what the computer vision sees currently but previously historically there were three blobs previous so I can't loop through these blobs I don't want to loop through these blobs and find the closest one because it whichever blob I start with first is always going to find that one is the closest one so what I actually need to do is loop through these blobs and find which one they're closest to and then delete whatever is left over so I really do need to invert the way that that loop works so coming back over here what I want to do is in my outer loop I want to look at current blobs and then I want to again have a matched one and then I want to look through the blobs historically and then do the same sort of thing here I want to match now this is confusing I'm matching it sort of the other way around I'm looking at all the current blobs and matching up this kind of blob and right so I'm trying to find the one that's matched and then if match does not know that's taken and matched becomes the current blob right because that is the outer loop okay so I'm inverting what I'm doing I'm doing exactly we did before but just the other way around now at some point then oh yeah and so this is actually quite quite nice because then what I can do I don't have to do this mark for deletion thing I'm going to do exactly the same thing where whatever is left over right after I do this whatever blobs are not matched and in this case I'm actually going to blobs dot size minus one I'm going to loop through the loop backwards again is greater than equals 0 I I'm going to say into I equals I'm going to I want to delete these blobs so I want to say if if blobs dot get I okay so hold on blob B equals blobs dot get high ha I don't know I understand we're really going to watch this video then I want to say blobs dot remove I only if if B is if B was not taken now there's a little bit of an issue here in this case earlier when I was saying if a blob wasn't taken make a new blob out of it I could guarantee that blobs that worth taken will have the value taken as false the problem here is I'm not a hundred percent sure that's going to be the case because remember these are blob these blobs and this particular rate persist over time so I think something I need to make sure I do here which is a little bit awkward is I need to was I'm going through this I want to just quickly make sure taken is set to false so that when I get to the end of this loop and a set taken to true only the one that really was taken get set to true though that's a problem I don't want to do it here I need to do it once I can't do it there I want to do it once just really quickly at the very very beginning I'm sure somebody watching this video I just before we do anything so I think I'm just as a safety measure if I have more blobs historically than what I'm currently seeing then none of them are taken any of them could get matched and then whatever's left over gets deleted okay now let's see what happens I can't imagine that I've gotten everything right here but we can see if I did okay so there are no blobs currently and there are no blobs historically I'm going to move this up like this now there is one blob currently and there is one blob historically there are two blobs currently and there are two blob store now here comes the magic thing take it away look at that three four five okay I'm gonna put blob number five on my head oh this is now blob number six this is blob number nine cuz we had some small ones whoops combined that's now blob number ten and you can see they are keeping their ids you know obviously little things are going to go wrong if the blob disappears this is a balancing act but you can see this is actually working so we did actually so now this works I can't believe it I need a I need the whatever the opposite sound effect of this is is what I need right now for that having worked like shockingly now interesting enough why is there still seeing a blob there that's weird it's not seeing any blobs currently but there is one blob historically so if I bring this in that's going to be blob number 15 it's always leaving one blob leftover so that's a bug I need to fix that shouldn't be the case let's see if we can fix that and there's some other stuff I want to add to this but I think I might do that in a separate video um okay so why if oh you know what it is I have I know what the problem is let's look at what I missed okay if there's empty and there are actually blobs this is right if the if they're equal or there's more do this but guess what what if both of these are 0 yeah yeah no that should okay what's happened what the issue is when there's one one in the ArrayList but zero in this shouldn't that happen here there are more blob let so hold on I'm going to print a option three all right let's just make sure that's happening in this case that I'm worrying about what are we timewise 12 2001 0 0 0 leave so we should be seeing and right now option 3 option 3 option 3 so something's not working in option 3 if for some reason I'm not detecting any current blobs this one I need better Sun this loop is in the wrong place and it wasn't being checked because it was inside of the loop of looking through the curve blobs and there are none so that was just my problem there so now we should have this fixed and we should have blobs over time oh so I already found a bunch of blobs you can see here that these blobs are keeping their ID no matter the real test is like kind of going around in a circle because I know that they're changing the order that they're being found I it's finding multiple blobs so you could see they you know 26 27 28 29 so here's the thing do you notice how those numbers are getting pretty high very very quickly I'm not going to do this in this video I but I am going to do I'm going to make a separate video to do an improvement on this which one thing that I might say I'm going to leave this and type I'm not know if I'm going to get to this today it might be a while before this video comes out so I'm gonna leave this as an exercise here's what I would do next I should just do this today I'm gonna do this today but not in this video I believe this is an exercise anyway if you're watching this what I would make sense to do is to add some sort of timer in here so what if each blob had a timer and I don't actually delete it like I leave it on the screen for a little while so for another what if just the computer vision algorithm like flicks off for a second it would really like delete that blob and make a new one but if jitter is like a flash of light or something changed really slightly I turn the blob I want it to only be deleted if it really really times out like if it's if it's not been detected for at least one second or two seconds or half a second so this is an improvement that I would suggest you giving a try yourself but I'm going to do it in a video for you so if you can't figure out how to do it you'll be able to watch the next yo in which I will do okay thanks for watching I don't know if this came together or not but this is a video that shows you how to do persistence I don't know why I'm recapping what was in the video because I'm just done right now you should stop go outside and enjoy yourself and get away for the computer for a little while that's what I suggest okay thanks for watching I look for the code it'll be in it'll be in the description of this video you can find it and play with it yourself okay bye bye thank you