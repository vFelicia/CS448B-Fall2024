hello welcome you're about to watch another goal on 11 guests video and this video is all about the idea of interpolation so goal is gonna talk you through some art history examples which I wish I had the capacity to do myself on this channel and maybe someday I will live up to my ambitions to do so but which I think it's going to be a really interesting background and set up a coding challenge for you to do I'm gonna come in later in the video there's a few sound problems when I come in because I poorly mic'd myself so I apologize for that you should be able to hear and understand everything but when I enter all the sound problems are my fault not Golan's but I'm gonna come in and we're gonna talk about this coding challenge you're gonna see a bunch of examples and then if you so choose you'll be able to contribute to the repository the code repository and add your own version of the coding challenge but I want to say anything about what it is because I just want you to watch and enjoy Thanks enjoy hey everyone go on Levin here and by the good grace of Dan Shipman who's here here he is today we're gonna talk about interpolation in a coding train special episode which I'm first going to talk about sort of the the early history of interpolation in computer graphics and computer arts with kind of a little sort of fancy introduction all right who can't admire the natural poetry of the transformation of the butterfly and yet it's hidden away inside that chrysalis there we want to know what's going on in there you know turning water into wine is a miracle but how can we see it happen we want to see the steps as in this 1831 cartoon by Charles Philippe own who talks about who uses this kind of progressive stages of interpolation to show the degradation of the Kings regime okay computers are the ideal tool for visualizing transformations of this sort here we see the covers of Animorph right these popular books written for tweens which show of course right you know these these characters whose bodies turn into various animals what better time to kind of think about you know the transformation of the body then for tweens right and here we have a boy it turns into a horse girl turns into a starfish or maybe the other way around puberty so there's many different words that we use for talking about interpolation Architects call it lofting some people call it tweens some people call it interpolation or morphing morphing as I know it was was as you may know it from from from videos and so on was largely invented by Nancy Burson when she was an artist in residence at MIT in the late 70s and early 80s she used it to create these Beauty composites this is a the averages of Betty Davis and other movie stars of the 1950's and averages of Diane Keaton Brooke Shields and others from from the 70s and 80s trying to get this kind of ideal notion of female beauty as it's understood in the popular culture by averaging together these faces and sort of seeing if maybe there's some kind of latent kind of a structure there but we really start to see interpolation start in the late 60s with early computer art this is a project by by Chuck sori and James Shafer who created this progression from chaos to order and it's a it's a random distribution of each line of a hummingbird drawing and we see this kind of progression from from this kind of ordered situation here to a kind of chaotic one here as more and more noises done we see this similar project kind of prospect in examining from order to noise in this work by Manfred Moore called lady quark from 1972 in each of these squares here a perfect square is interpolating over 23 steps to a kind of randomized polygons and both of them have been we sampled in a number of ways and we see the kind of progression step by step by step from a square to a kind of perfect polygon this may be worth trying your own hand at recreating and the computer technique group ma hsiao Kimura and others in also 1968 created this series of posters in which a square interpolates not to randomness but to another form in this case the ideal form of a woman's face and there's a couple different versions of this project one with sort of linear interpolation and one with with non linear interpolation that begins to get at what we're going to talk about today like the exact character of the transformation so what we want to look at now here we see this kind of transformation in terms of two endpoints that represent things we understand well young and old we want to see how that happens but unlike Nancy Burson's work of 13 years later this project from the late 60s by Chuck Suri and James Shafer is sort of badly defined the lines that define one face and the other sort of interpolate from one position to the next but without much logic so you get this kind of glitchy situation in the middle this is a lovely project called fruit salad by use crane and an Adrian Haines also from the around 1970 and it's a mixture of the basic figures apple lemon orange and in this case chestnut which I guess they'll call a fruit and they're at the corners of the of the of the design so Apple in the upper left and lemon in the upper right chestnut and the lower left and orange in the lower right and with the add mixtures of these blended shapes in the middle and this is a project by William kilometer from 1970 through 75 circa then it was in this case shown a few years later where he interpolate from a banana to an ice cream cone he says because his wife liked both but you know the way of interpolating from a banana an ice cream cone was maybe not so obvious and so he's got some very strange intermediate shapes and in perhaps one of the most strange and absurd of all of these was this project called running Cola is Africa by again that the Japanese computer technique group Massoud Kimura and others in which the shape of the runner from the 68 Olympics transforms into a cocacola bottle and then and then into the continent of Africa so these kinds of complexities are a lot to deal with and I'm very interested interpellation Dan my host has done some fantastic interpolations himself but I want to keep it real simple I want to say like what's the simplest kind of interpolation we can do and I was very inspired by Oh Vasily Kandinsky x' book point and deplane he says look the simplest possible shapes okay are the the primary contrasting pair of planar shapes he says the minimally pointing in the maximally pointy right the circle and the triangle bruno Minari again looking at these kinds of simple shapes and saying like what can we do when we like examine these shapes and whooshes Wong in the early 70s this is hand drawn not with a computer thinking about how can we interpolate from one shape to the next so just looking at the these very basic shapes we asked like what are the ways we can get from one shape to the next I particularly like this one by wicious Wong here he has a circle that transforms to a triangle but it looks to be almost like a silhouette of a cone in 3d so with that I I want to show you today a kind of a coding challenge I want to pose to you and to introduce the challenge I'm going to show you how I've interpolated from a circle to a triangle I gave myself a week to come up with as many ways of interpreting from a circle to a triangle as I could think of and I'm going to show them to you all with Dan on my side there's a lot of ways of getting from A to B and John Cage once said if something is boring for two minutes do it for four if it's boring for four minutes do it for eight it's boring for eight minutes do it for 16 and then 32 and eventually discover it's not so boring after all so we're going to go through all of the ways that I could think of in a week and then we're gonna invite you to make more of your own and kind of think of all the different ways that you can think of to interpret from a circle to a triangle and hopefully get your contributions onto our github repo so before we really really get started I want to talk about maybe the under structure of the constraints of the problem that I'm going to post you guys and how I've made my 13 or 14 different solutions ah what's our goal we want to get from a circle to a triangle right we want to interpolate the question is how do we want to get there and there's so many different ways and there's no one correct answer but a lot of the solutions that I'm gonna show you that I've come up with involve subdividing these into multiple points sometimes maybe a hundred or 300 points so that we have more more stuff to play with so what's really happening well I'll have a for example and I'll have a triangle it looks something like this it's an equilateral triangle right although I maybe I didn't quite draw it like that and then they're gonna share three points as a point here there's a point here there's a point here that's shared by the triangle but what I've done is I'm actually subdividing secretly the circle into lots of little pieces like this and so there's little particles or pieces that go around the circle and so forth and there are matching or corresponding points on the perimeter of the triangle that matched these like this so there's points along the triangle that match these points and so for example in the very first transformation then I show you I'm gonna do the very simplest thing I'm just gonna move each of these points in towards its corresponding point and I say take this and move it towards this this one move it towards this this one move it towards this this one towards here just one towards here and then keep going right so that's gonna be the first transformation we'll talk about all the different kinds of other transformations we'll see there's actually a lot of different ways all of the different circles and triangles I'm showing you consists of some kind of perimeter that's been computed okay and in no cases are there any sort of tricks where I'm pasting like a white circle on top of a black circle right there's a computed perimeter and I'm drawing it with I think a six pixel thick or three pixel thick line all right let's go over here Dan you want to join me yes OOP okay we're both here now thank you for tolerating the fact that apparently this studio is made for hit righthanded I didn't realize that till today I'm thrilled to be here thank you so much for have this is awesome so I thought I would I would show you some of the things I came up with all right and I guess this is your first time seeing them right so yes yeah so yeah we're gonna we're gonna we're gonna do some surprises for Daniel okay I'm gonna show them out of order I have a github repo where they're where they're actually stored over here in my my github that's up what it'll be in the video the link in the video's description so there's a getting every spoke to show them out of order rather than the order I made them and I'm gonna show them in maybe an order that kind of introduces the concept better so this is the first one I want to show you down okay and in this one here okay it's just as I explained over there a white board ivory sampled the circle and I've subsampled the triangle into the same number of points and I'm moving each point from the perimeter of the circle into its corresponding place in the triangle right in a linear interpolation and are you actually using the lerp function that's part of p5 or did you did you write like I probably I'm using the loop function if I'm not I probably should it both are good yeah yeah alert function it's not too hard to make yourself right it's one line of code if you look at this I might be doing that but that's what's happening here those points are moving in from from the circle to the triangle on this kind of ray and those rays in this case actually those rays don't actually correspond to the radii of the circle so there might be some weird angles and they're really moving in strange directions the next for the next time I show you okay is instead of moving those points in linearly I want to basically on every frame of animation I nudged them in by a random amount okay and then I connect them with a Bezier so it looks smooth so uh Jaggi okay so that's number five okay so I'm gonna go over here I pretend to watching it watch over here but actually I have to look over you're not fine so if we look there you'll see that each of those is gradually moving in towards the corresponding point and then at the very end I do a computation to see how different they are from where they should be uhhuh and I flip it back but there's a challenge left to the reader is to figure out how to move it back from a triangle to a circle anybody oh wait so you said so I totally get this in my head right if but I would I don't get is how the Bezier plays a role here what does that do exactly and how do you what's different about just drawing because you must be using begin shape and end shape and setting all these points yeah but I wanted it to look smooth right right and if I hadn't used the Bezier then it would be zig zaggy John which is fine that's legit that's another way of doing it right but I want I only wanted I went to the only sharp vertices this was an artistic choice to be at the corners where the triangle China was yeah it almost looks like you're using something like Perlin noise or something because of the way the smooth the contours are but it's just random randomness I'll have to look at look in the github repo you'll find out or try it both ways yourself now let me show you another one now and it actually it ends up a very different situation and it looks really similar to the first one I showed you which is number 4 huh okay but it's a it's a different way okay hello buddies like little surprises here little surprise it is number zero okay and if we look at this one here okay check this one out you may think like what's the big deal it's like just moving really slowly uhhuh okay yeah and this one takes a little bit of knowledge about signal processing okay what I'm doing is here is the following I take the circle and I I subsample it into all the different points right I got maybe a couple hundred points around a circle and then I locally average every point with its neighbors hmm okay so that basically each one is moving towards its neighbors and it's tightening up the the ropes with the exception of three points that are that are fixed so I fixed point point point I say those points cannot move every other point can move right so when I so it's like a blur you're basically blurring the circle it's right triangle right exactly do you know I'm blurring the circle into a triangle but I'm fixing three points say those guys can't move Yeah right if I didn't fix those points then the whole thing was dreams and if you now you want this perfect equilateral triangle but if you picked three random points yeah what was probably a shrinkage tip anyway it's right not seriously yeah somebody should try it out okay now we're gonna move on I've shown those three so let's let's begin with some some easy ones here okay now this one what's this one here oh okay okay so whoa okay in this one when you guess what's happening well you must be doing one point at a time yeah so it's happen exactly what's happening here I start with a circle yeah and I'm gonna do and I have it the circle is subsampled into lots of points that are stored in an array okay and so each of your examples it's not necessary always just 200 points some of them have like 2,000 some of 200 or all the same number of points we don't know I have to look to find out Wow okay it actually sort depends on the example yeah that's what I mean it says it's not necessary like a require that's not a design constraint that you're saying to yourself like I wanted to do this with just this number of points you know a funny thing but a circle anyway getting right is it actually it's a bug recomm Peter like like you know like it's just a polygon with a lot of sides yes right so in this case here I have a polygon with a lot of sides which we nicknamed a circle right and then I I use some of the great operators really take that one oh yeah I'm doing I'm leaving the data I'm here so I I selected Li delete all the points off the side of course all points but three is I believe all the points red green that's what that this because I'm silly in my mind like interpolating each point one at a time to the spot all right I'm just gonna be a ridiculous always do eating him yeah because actually JavaScript has some really nice ways of playing with boys splice and delete and these kinds of other ways of like playing with arrays were usually literally delete data but I stash a copy off to the side so that after it's done with its operation i reflection the original copy that's number I'll still look number seven now okay whoa all right this one this one's easy you want describe it well now now you're just you're you're adding more points this one only does go both directions yeah it does right exactly so this one says well you know really there's a there's a way that they say to make a sculpture of an elephant uhhuh okay you start with a block of marble and you remove all the pieces of the marble don't wear like an elephant right so that's what's going on here I start with the so it started as a circle I somebody turn to look at the like break at this part here right now it starts as a circle yeah and I remove all the parts all the points of the circle that don't look like a star the triangle and then I yeah so boom voila triangle yeah okay that's number seven number thirteen we're gonna do okay what's going on here damn swell you go from a triangle to a hexagon hexagon to a whatever decagon that gone gone gone he drew Piedra no God Ghana's polygon he turned his face is a solid asado so yeah this makes me says start with three dublicate get six double get 12 double again and you just decide at 128 or whatever whatever the bad number is it's not 128 but it's some number you stop yeah fortyeighters organizations like that and it looks sufficiently like a circle W and there's a little bit of non linear interpolation in terms of the the way that it moves from one point of it to kind of give it a kind of acceleration but that's not that's just a grace note right that's right not actually necessary all right so that's that's there let's move on to number 202 all right this one I think a lot of Illustrator users and graphic designers will recognize what you busy curves that's right that's antique cars again so what's interesting is this okay when this one gets up to looking like a circle it's not actually a circle but there are some magic numbers then you can google around and find which define the locations of their control points these control points here these these control points right that define a perfect arc and a very close approximation good enough for government work for a circle with busy acres it's not a true circle but it's a it's three busiest right that are that with the magic control numbers look very close to a circle and so here what I'm doing is I'm moving those control points until they're so close together they essentially create a sharp vertex and two triangle yeah all right that's number two number three over here making this one I have a couple guidelines in there to help he's out I mean what's interesting to me is this looks just almost exactly like the first one that he proposed where each point is moving from the circle to the triangle like visually it feels like it has the same result that's fair that's fair it's not what's happening but it's not what's happened now okay so in this case here the graphic as a whole there's no subsampling at all in fact there's only three graphical elements that are apart from the red lines which is a guidelines to help you understand what's going on there are only three graphical elements okay the entire thing is always drawn with three circular arcs the difference is that the circular arcs they're their radii goes from the radius of the circle to infinity and when you have a circular arc whose radius is infinity straight line you end up with effectively a straight line which is what the triangles made it yeah right so those you can see the vertices of the triangle heading off to it so the corners with a darker defined from heading off to infinity when that happens you have this triangle it feels like breathing and we could feel like meditation or something better perform I was trained to doing that was oh three so let's move to on 206 what what's the original numbering just the numbering that you happen to do them in yeah sure yeah exactly okay this one I think is almost like that's pretty the logo right got kind of a logo graph oh yeah I think there's like air BnB is in there somewhere mm I by accident buzz marketed something like to cut that out but it doesn't video yeah this one's very simple what do you think's going on here let's see um well are you doing the same thing but with curved vertical adding removing points but with curved vertex no it turns out that what's going on here the math to do this was a little bit old with fit fussy this is an alternation of three circular arcs and three straight lines the straight lines are actually accomplished just by move by by you know I draw a vertex vertex at the end of work and then I drove another so diverse range the diversity so you can't use the actual arc function and the for here what you have do you have to like you have to calculate that arc so that you know where the end points are I probably could we could but you solely calculate the end points for the well so that would have been different way of doing it right right so what the ants just said is I could have done this by drawing an arc drawing a line drawing an arc drawing a line drawing an arc right but I didn't do it that way because I set the personal rule for myself and I invite you to have the same which is that the whole thing is computed as a similar scene on perimeter I've computed every point along this railing here and to do that I had to compute using sine and cosine I'm sure you get yeah yeah there's a video tutorial for that we'll try to include it in this video's description as well but yeah I compute all the points along the circular arc then I compute all the points along this circular arc and on the third one and the begin begin shape and shape takes care of the rest the stitches are all together and graze the straight lines in between great god I've got it got it got it and that was number six here's number 12 have a look here all right now there's some guidelines here as well you can see on this one I want to guess what's going on here well now this is how I imagined you did the previous one oh except that the line there's some other circles there yeah okay so this one is the alternation of their six circular arcs okay let's call them type a Type B okay okay the type a are simple to explain their corners great okay so the corners are circular arcs God and they're they change from the radius of the circle down to zero yeah okay so they get from the radius of the circle down to kind of pointy right okay but the B type arcs are alternating so it goes abababa around this rail and the B type arcs start at the radius and circle but go out to infinity right and so they get larger and larger and therefore straighter answer okay and so this is exactly the same as the previous one except for instead of that straight line there's the P type arc is that right maybe not close enough we cut that out too no all right that's 12 next I got I can check confessed and the last ones are really ugly okay that's good luckily they're like this these are like we can call them the rejects but like they're my one of the things I like to do with this channel is to make ugly stuff and then have the world out there of people who are talented at making beautiful stuff make more make it make it beautiful so somebody will figure out how to make your the ugly stuff turned beautiful these are gnarly alright number eight these are the the least loved okay um so gross but very simple you just push down on the circle to get a triangle right but again it's a computed perimeter so right so the there's an R computed and then I just draw a straight line but I don't make any attempts to kind of negotiate that range in curvature there right I just make like you know it's just it's just cropping in right right but notice I'm not doing this but like moving in some white rectangles or anything yes it's a computed perimeter all right okay number nine I think this might be the ugliest of the bunch maybe it is it is right the circle shrinks revealing a triangle got it exactly gnarly alright number 10 is for you physics enthusiasts out there I think yeah is the one whoa like a little sine wave or something no no sine wave spring spring the springs of course like for support yeah so it's kind of a same thing so I think I've got two different sets of rest lengths and/or rest positions and they basically they they go the way and then they get attracted to their other center breast positions doing and they kind of move from one to the other so this slosh and then when it gets close enough it's her flips above any other set so there's that one and the last one I have today Dan is number 11 and this one was starting his whoa yeah I can't even explain this one to put words to this I mean I can't even describe it this was actually a failed attempt to produce one of the other ideas and along the way I just kind of had this the accident and I was like oh I would never have thought of this it was a complete happy accident you're right right it's well it'll look to me if I were to explain this it's each side is subdivided into straightline an arc and the arc is I think you shrinking or increasing and I guess the radius for that arc and the point the center point of that arc is moving which causes the other something's happening with the radius of that arc it's not just like a bubble I have like an off by one error yeah is one of the other designs and that's how this yeah yeah yeah it was the one that looked like a logo right this was it this was this was a failed attempt to make the one that look like a logo and that's how it happened there so I thought it'd be fun to kind of open this up for everyone else yeah yeah I have one other special treat which is to say I also have all the same things for squares so Square to Circle Square to circle not squared a triangle well you could go do that through through through you could do circle to square it a triangle that's right now III did in fact many of these transformations I simply copy the transformation and you know I just added a fourth side and so the dosing system okay if you prefer squares the triangles and I I actually kind of do myself and then I wouldn't blame you if you did because triangles are so pointy and you're like ouch I don't want to do those points you can do this with squares instead so there's a github repo yet which has all these examples you got and we're just sort of coming up with this right now so yeah people could submit there's a variety of different ways one is these are so conducive to making a nice little gift you could tweet the gift paper with like a hashtag to gift that's right like wish between two to two coins well some of these that we just like the ten print hash tag or so maybe triangle circle triangle triangle circle then you can also we could create like a read markdown file in the github repo where people could link to theirs or they could just pull request the actual code into it so we'll write up some instructure's or something on the repo sounds great and I will I think what would be fun for me at least is to try to either come up with my own or just remake one of these as a little tutorial some people want to get started at some point might exist by the time that you're watching this but they'll be a followup video that'll be linked to of me kind of going through and making one of these that's right okay actually then you already have made one enough it was a fail it was a failed one though I think I didn't know it was not it was a feeling I actually have a link and if I just show you for a second over here in my repo I link to the one that Dan made it was the one where you were using super ellipses to morph or circle to a square oh so it was on it did somebody say we see more complicated by accident he's noting that he's actually gonna twice okay that's forgotten he has a ten minute coding challenge on shake morphing and another one at coding challenge number 19 on a super ellipse just specifically for circles to squares and does not work for triangles so that that would know that you're you're 2.2 the time code in the video yeah so this one I felt it was such a disaster that I never actually edited it out as a separate coding challenge video so maybe I'll redo that one or I'll just revisit it to see if it we can put it somewhere but yes you got the link right there and if you like this stuff I also have some more links over here in the github repo just for more reference isn't it awesome cool great thank you so much for being here this is something I try to honor did you actually make it all the way to the end of this video thank you so much for watching now if you made it all the way to this vid and of this video there's actually a really special treat in store for you after you listen to you talk for about 30 seconds I'll get to what that is in a second so I just wanted to come back and say here's the github repository uh github slash goal on 11 slash circle morphing I will put a link in the video's description all of the code examples are here and we'll come up with a way that maybe you can submit a link to maybe there's a way that you could just even add yours to this readme but if you want to share yours make an animated gif of it and add it to Twitter with the hashtag circle morphing since there's no results for circle morphing I look forward to many results for a circle morphing and it could be circle to triangle or circle to square or whatever you so choose so let's use that hashtag let's use this repository and at some point you'll see a video for me where I actually go through one of these and do a little tutorial about it as well okay so you watch this whole video and you watch this actual explanation for me now you will get to see goal unleavened reading from what I hope will be a new tradition for all coda train guests reading from the book of random numbers the coding trade storybook good night even though only not be the night but sleep tight and listen to the nice little bike bye I'm gonna read line oh nine fiveo fiveo nine fiveo fiveo 3 0 0 3 o 2 o 4 1 4 3 2 1 2 107 808 four seven eight eight six eight three seven seven five nine six three seven four one seven three one nine seven oh eight one eight eight one four six thank you you