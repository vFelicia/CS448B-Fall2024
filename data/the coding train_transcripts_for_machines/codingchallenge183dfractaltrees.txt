hello this video is a followup on my previous space colonization video now I wish I was talking about outer space colonization I am not I'm talking about an algorithm called space colonization which is outlined in this uh PDF paper here that you can find a link to in this video's description and it is possible with this algorithm to generate trees like this so last week time doesn't matter here but in my previous video I made a version of this algorithm I actually did it in JavaScript um using a JavaScript library called p5js but I have this same uh code running now in processing and I switched over to processing because the point of this video is to extend this algorithm into 3D so I want to take and let me run it here for you I want to take this idea which is using this branching algorithm come on and run please code using this branching algorithm uh to take this from a 2d world to 3D so let's let's talk about how this has to happen so first what's the what's the basic idea for this um what's the basic idea behind this algorithm so the idea of this algorithm is that you have a canvas and you fill this canvas with points and these points are known as leaves so maybe you fill this canvas with a bunch of points and then maybe you start at the bottom and you create a branch segment and you keep growing Branch segments all the way up until you get close enough to a particular to some of these leaves then what the algorithm does is it says okay any Leaf that's close to this particular Branch segment pull a force have it become an attraction Force so maybe this one and this one are close so a new segment is made and then this one and this one and this one are close to this one so a new segment is made here but this one is also close to this one um so another new segment is made so all of these Leaf points become these points of attraction that start just pulling out these branches and you can see that happen I'm going to come back to the code and I'm G to show I'm gonna I'm going to change here I'm gon to I'm going to in setup I'm going to say frame rate uh I'm going to just say five so frame five frames per second and we can watch this happen a bit more closely so you can see here these branches are getting pulled and pulled towards all of these points and as they get pulled towards these points those leaves disappear now now there's a couple things I want to mention about this I'm kind of recapping my previous video but I think it's worth it before we move to 3D to make sure we understand all the pieces here so number one I just want to kind of recap this particular program uh has a set of objects it has a leaf object that are these seed points here it has a branch object uh the branch object being these particular segments all of these segments and then it also has a tree object and the tree object keeps track of an array of Branch objects and an array of leaf objects so the algorithm goes something like for every leaf see what branches are within a minimum and maximum distance and add a force to those branches and then all and then have all those branches grow a new Branch off of them with a direction of that Force so the tree itself is iterating through all the leaves then uh applying forces to all the branches than making new Branch segments and as leaves are close enough to a given Branch they get deleted so this leads me to a to an issue though that I feel like is worth resolving in this example before we move on look at this there are some leaves that just won't go away they're there they're stuck there I can find another one uh over here is another one the reason why it's stuck there is that they're magically somehow exactly equidistant from a particular Branch set so the force can never go towards one to get a little bit closer um and then be removed from the system so I don't know I'm looking at you internet watching this video to come up with a a a solutions for this problem I had a wonderful solution uh suggested by Oliver in the chat recently um which is just to give each branch a little bit of extra random Force to it so that every once in a while as it's going there it'll randomly turn and in that case uh it'll eventually find these branches these leaves and get removed so let's add that here and I'm going to go uh to the part of the algorithm uh where uh we add those particular forces and actually what I want to do I want to do that I'm GNA do that in a different place than I did it before I was practicing this so this is where those new branches get added and this is where the Branch's Direction gets averaged based on how many forces were applied to it so what I want to do right here I'm just going to try making another random vector and I'm going to say I'm going to add that so right before the vector is about to be um right before the new branch is about to be born I'm just going to give it a little bit of random motion to it to see if it can like if it when it's getting stuck if it can skew towards one of those leaves so let's run this again oh and I have the frame rate at five so let me cancel that out let's run this again come on I don't know why my command R isn't work oh I'm in debug mode no wonder a so oh that's way too much look at that that kind of ruined it it did something but it's kind of like a crazy now so I probably shouldn't have added it here um okay okay so let me uh let me go back here let's so let's try to make that not so strong let's make it really really weak so I'm going to set its magnitude to uh something much much weaker and you can see maybe that wasn't strong enough so it's still like I've got these equidistance spots there so let's make it 0.1 that seem to do the trick ah there's a couple spots that are still stuck there let's try 0 five it's a little less kind of like curvy and fractally but it did work so I'm going to just like try three that looks pretty good so I think I settled on three as kind of my number that I want to do so you can see I at least have now resolved that problem the reason why I wanted to resolve that problem is I'm going to add something I don't want to be adding branches infinitely um and the other thing I want to do quickly to this before I move into 3D is uh is show you let's do something let's change the thickness of these branches so every Branch right now has a stroke weight of one but what if branches that are made earlier at the center are thicker than ones that are at the edge so a way that I can do that is right here this is where I'm actually drawing a line for every single Branch so every single Branch here is just a line between the um the Branch's position and its parents position connecting the one that's connected to it to itself so one thing I'm going to do here is just change this Loop to a regular Loop using index I uh to branches. size the reason what I the reason why I want to do that is what I want to do now is I want to say each branch is going to have a stroke weight so for example if I say stroke weight 10 you can see all the branches are really thick they have a thickness now of 10 pixels but what if I were to create a variable and map its index so the the the older branches are added at the beginning of the array so its index goes between zero and branches. size and have that go so the earlier ones have a thickness of 10 and the later ones at the end have a thickness of one and what if that is its Branch thickness you can now see we've got something here where the earlier they are at the beginning the thicker they are the more at the outside the less thick they are and I could like mess around with this mapping um I could you know just start with five or six I could actually go down to zero to get them like much skinnier even at the end which is kind of nice so I think this looks kind of nice and you can imagine what how this might have what kind of effect this might have depending on how you're seeding the points and where you're starting the root of the tree okay so I somehow said I this was a video All About 3D and I probably spent 10 minutes here just getting ready for that but we've recapped the algorithm and we've also made it a little bit better by adding thickness here and solved a particular problem and now we can actually do something that I believe will be quite simple uh in turning this into 3D so let's think about this so this is what's happening in a twodimensional plane I created in the canvas I just created random Leaf points anywhere so what I want to do instead in 3D is I I want to think of the canvas not as um not as a flat plane but as a sphere so I'm going to create random points all inside a sphere and then I'm going to have my first Branch the root of the tree in the center of the sphere again if you really want to create a tree what you might do is create some kind of like ellipsoid in 3D seed all the points start the root at the bottom but I'm just going to do something simple just to get this algorithm working and then that's up to you to be creative to try to create a different set of seed points with a different starting Branch okay so let's come back over here and see if we can do this okay so the first thing I need to do if I'm going to move into 3D is just add p3d oh I'm not here is just add ins size p3d so what did I just do I just added p3d so I want to so now it's rendering in 3D I can actually just run this and see like hey same thing but it's actually in 3D now just so we can like get a sense of the camera a little bit better I'm going to add a library called peyam so I've already installed this Library um if you haven't installed this Library go to add Library under sketch import library but I've already installed pyam so I'm just going to click import and uh all I need is this import statement at the top then I need to create a peyam object I'm going to say cam equals new peyam and I have to say this so peyam is this Library just automatically like makes this mouse interactive camera so you can spin around and zoom in and out of your scene um in a very default way and what I need to do it I so I need to say this referring to this sketch is where I want this camera to take over and then I also need to give it a um a z value like how far away do I want to be looking at it so I'm just going to say 100 for right now um and then I'm going to run this and sort of see what happens so I can't seem to find like oh there it is so I'm off one of things that pey cam does for you is it makes z00 the center of the window as opposed to the top left so here in my tree where I'm creating the leaves um I actually want to create them I want to create well first of all I want to create the root at 0 0 and then uh where I'm creating the leaves uh sorry I want to make the leaves not offset by the center of the window anymore so let me just do that and we should see now there we go now one thing is I'm kind of zoomed in so I can zoom out and I can spin you can see now this is totally flat this is kind of a nice effect just in of itself so I still have my twodimensional space colonizer but it's in 3D and I want to look at it from further away so let's make that 500 so you can see here so this looks exactly like what we had before but secretly it's in 3D now so this is actually I believe going to be in incredibly simple all I need to do is instead of making a twodimensional plane of leaf points right I'm not actually let's not call grow so what do I have here this system is just a whole lot of a whole lot of points in a twodimensional plane why are they that because all I did was make random 2D vectors so watch how simple this is going to be Random 3D I want to make I'm sorry Random 3D vectors and I'm going to run it and now you can see whoa okay so what's going on I made 3D vectors but I only see two dimensional points well there's a bit of a problem here which is that my points are ellipses so what I want to draw I need to draw those at their threedimensional location so I'm going to change this to translate pause. x pause. y pause. z and now the ellipse can be at 0 0 and I'm going to say put push Matrix pop Matrix to make each ellipse its own thing so I'm going to run this now whoops let me Zoom back out and you can see now I have this let me Zoom back in I have this 3D sphere of points now they're ellipses so as I turn to the side they're not long they're no longer facing forward and I can make them spheres you know there's any number of things I could do let's just make them spheres for a second just for fun what's more fun than making them spheres I'm just curious to see how slow this runs now notice look how slow this runs so I don't want to make them spheres because I don't even need to see them for this algorithm to happen but spheres require a ton of rendering because each sphere has like a zillion polygons and I could reduce the detail in the Spheres and there's all sorts of things I could do but I'm just going to leave them as ellipses so I'm going to run this again and you can see here now I have this so now all I should be able I I should just be able to grow the tree I mean all the math is going to be the same whether it's 3D vectors or 2D vectors so let's grow the tree again I'm going to turn grow on and we're going to run it let's see what happens it's something is working I can see all those branches happening and something didn't but look it's still flat it's so sad it's still flat so why is it flat well am I drawing the branches in 3D I probably have a line function that's just doing 2D so let me go back to the tree all the way at the bottom this is where I'm drawing each branch as a line between the Branch's position and its parents position so I just need to add the zcoordinate for these this line and I got to go all scroll all the way to the right here to get also b. parent. doz so now I should have a threedimensional line and let's see what happens it's growing it's growing it seems to be getting everywhere and now look at this there we go look at this crazy threedimensional wacky strange shape that I have and I can zoom on into it and look inside and scroll around and we can see there's different thicknesses it's thinner on the outside now some branches just didn't some leaves just didn't get reached and it's hard for me to uh I'm gonna I I can't tell if I have this equidistant problem anymore I don't think so I think some branches are just some leaves are just kind of too far away so uh you know there's some ways around that I could F fuss with the um uh this this sort of minimum and maximum distance like let me make the maximum distance 200 and I think that's going to help things so that uh I think that's probably going to yeah you can see now I got to everything um so that just by increasing that maximum distance leaves that are kind of too far away will get found now here's the thing there's a bunch of things that I've done here yeah it doesn't look someone in the chat writes it doesn't look like a tree it doesn't look at all like a tree so maybe before I go I'll make this look a little bit more like a tree but here's really your job so your job is to be a designer come over here please um so what have I done all that I have done is create sort of a default view of the algorithm working so and think about it in two Dimensions I made a sphere I filled the sphere with points and I started with in the middle and stuff is growing out so really I almost made this like veiny blood vessely like system um so if you want to make a tree you've got to be more thoughtful so on the one hand I I made a suggestion of what if you kind of create uh and actually something like this might work well what if you this is all your seed points look like this and then you actually start the root from the bottom so you need to come up what's your Vol and if you read the space colonization paper it will give you suggestions what's the volume where you create all of your seed points and then where do you start the rout so that's on the one hand going to make make it look more like a tree the other thing you need to think about is just you know I just use threedimensional lines which aren't really there's not a lot to them so you might think about well actually what you want to put are cylinders for each branch segment and maybe you want to texture those cylinders with some kind of like wood looking texture and then you want to add some lighting to the scene and then maybe you actually want to put at the points that are at the end you want to actually put actual leaves on like various parts of the brain so I think there's a lot of kind of visual dressing that you can add so there is two there's your seed points how those seed points are organized there's where you start the root those things will um get you sort of closer to the tree as well as your sort of visual dressing what's your lighting what's your texturing how are you drawing the branches are you adding like leaves attached to the branches that sort of thing so I would like all of you to explore those types of things um okay yeah the other people are saying it looks like Connections in a brain or a plasma ball thingy those are all excellent points so let me at least get you started to show you where you can make these kinds of changes so I'm going to uh save this as space colonizer 3D all the code will be uploaded on GitHub with a link and I also uh um and I'm let's just add a few more things to this before we go so what I'm going to do is say um uh let me make the scene that we're looking at a bit taller so I'm going to make it 900 by 600 we can see um uh sorry I want to make it uh 600 by 900 so I want to make it kind of oops oh my goodness I I hit something by accident here um I want to so you can see I just want to have my window be a little bit taller and then what I want to do is have the leaves start uh I want the leaves to just go out by like uh um still be a sphere but I want to offset that um so I want to say Yus equal like height / 2 so that should offset everything up yeah there we go so um so this is what I wanted to do but then I also want so that's way too much and then I also want the tree's root so in the tree object the root gets a point I want it to actually start at the bottom of the window which is 0 comma height divided two so I want to start the root at the bottom so this is bit more tree like so uh you know how successful this is I'll let you be the judge of that but you can see just by having kind of a tree at the starting just by having like a sphere of points up top and the root of the and starting the root at the bottom you get this kind of stock root like thing and then it starts to Branch out at the top but again maybe the there's a uniform distribution of random points now all in that sphere maybe there should be even more along the top and less on the bottom or some type of like cone shape I encourage you to experiment with it but this I think will get you a little bit further into seeing it's kind of treel likee and I'm just sorry I'm addicted to spinning around this um okay so I think this concludes um uh this video I'm just GNA some people in the chat are asking like what did I do to change so let me just mention again since I did that kind of quickly in the leaf object the leaf object this beginning function right here this is where the initial Leaf position positions are set every position is a random 3D Vector scaled according to the width of the window which is about 300 pixels and then I'm offsetting it by height divided by four so moving all the Y positions up that's where all the leaves are set now where does the tree begin growing the tree begins growing in the tree object and the variable is this root Branch so the root Branch incidentally has two arguments the root Branch gets where it's positioned so zero height divided by two so down at the bottom and also that Vector is the direction where it starts growing so incidentally if I were to change this to this we'd have a problem because nothing would happen the branches grow the tree is growing off to the right to Infinity so it needs to grow up so to speak there we go okay so I The PRP at growing is really quite lovely and nice and i''d also be interesting like you know all those branches objects what if you start moving the points after the fact add some Physics to it have it Blow In The Wind so many possibilities okay so um this was much longer than I had intended but this is hopefully a nice followup to the previous space colonization in 2D video and what I did here was fix a few things about it add thickness move it into 3D I hope that you make something with this and that you share it with me in particular add your own kind of visual design spin to it um and I look forward to seeing what you make thanks for watching