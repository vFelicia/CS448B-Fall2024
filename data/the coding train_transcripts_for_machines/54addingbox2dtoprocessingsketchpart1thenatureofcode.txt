hi so here's our goal we want to get to the point where we have written example what what corresponds to example five point two if you're falling on the book so if I run this example we see this is HelloWorld box2d we've got boxes coming out of a point they're falling they're responding to physics they're colliding they're bouncing off of these platforms all of the physics in this example are being controlled by box2d the if you look through the code you'll see all we're doing is asking where's the location what are the angles and drawing everything on the screen so how are we going to get there so here is our exercise we're going to back up and I'm going to show you look at example five point one what is example five point one it is a very simple processing sketch we have an empty ArrayList of box objects every frame we add a new box object and so here we can see I'm adding these box objects what we are exercised here is to give these box objects physics so let's look at the code for these box objects these box objects have already typed this in there ah erase that these box objects have an X and a Y and a width and a height they're static joana display method that's it if you kind of rewind yourself all the way back to the beginning of this video series this is what we were doing we said aha aha we want to add location velocity acceleration and apply force function and update method where velocity goes to the location acceleration goes in velocity we started to write all the code for the physics now we're going to take a different approach instead of writing all the code for the physics inside of this class we're going to store a reference to a physics object that comes from box 2d what is that physics object is that I had typed it in here before it's a body body so instead of location velocity acceleration we get a body the body has all that in it the body updates itself it figures out if it's colliding with things we don't have to implement any of that we just want a reference to that body that body is going to have to be given an initial position and X Y and a size but then it's going to be updated through box2d so this is kind of a new way of thinking it's like an object within an object like our object is a box but our box object really what it is it's a reference to a box2d body so the different approaches here and when we get to toxic lib actually gonna see a different approach to this kind of thing but this is the approach we're taking right now so the question becomes first and foremost how do we make this body object and unfortunately the answer to the question is it's somewhat of a nightmare and there's a lot of steps involved and the code is a lot of syntax a lot of methods and things to remember and I don't know that there's any way that you would be able to complete this exercise you know you could look try to look up the reference of the documentation so what I'm gonna do is talk through the steps to initializing this box2d body it's four or five steps we're going to talk through those without code and then I'm gonna look at the code implementation of that and point out where you will sort of where the reference is to kind of look up where all these functions are and what are all the parameters but there's no way to kind of I think easily go through all of it I said in the previous video and I didn't think it was very good so anyway here we are so let's so this is our job right now we need to initialize this body so I'm going to talk you through the steps of how to initialize a box2d body okay so step one create a body definition create a and I'm gonna call it body death so this is a body definition but the actual object we're going to create from box D from J box it's called body def now this is kind of a strange thing didn't we say we wanted to create a body this is just the way box 2d and lots of things work in order to create a body we need to create a body definition and from that body definition we'll make a body object so it's just kind of the organizational principle that we're working under in theory you could make multiple bodies from one body definition but we're not worrying about that right now okay so create a body definition now the body definition is where you set two really key parameters to the body one is simply and there's a bunch of things its initial position so where is it going to start in the world it needs an initial position the other thing we're going to give it is a type type is very important we're going to see three options I guess I'll write these down for you dynamic static they spelled it wrong and kinematic what are these three types well if the start everything is basically going to be dynamic a dynamic body is one that moves in response to physics that's what we want we want a body that moves in response to physics if you remember though in that example 5.2 there are those platforms that the boxes are landing on those are static bodies a static body is kind of an artificial thing it's a fixed body that can never be moved which is useful in lots of workouts you might want to make kinematic is kind of a funny thing and we'll get to it hopefully it actually happened on my list but we should get to it in a later video there are often times where you want any user controlled object in the physics world right we know we want static objects ones to just move and respond to physics but you might have one that's controlled by the mouse or controlled by your you know your hand in a computer vision tracking system so that is a kinematic body so when we create that body definition we need to set the position and the type and we'll see that in when we look at the code implementation number two we now need to create the body so this is simple this is just going to be one line of code once we've defined the body in all of its parameters and there's other parameters as well you can define like you can give it an initial velocity and certain things but we're just looking at these two right now then we can create that body object so what's the funny thing about a box2d body so if this is our box2d world we could think of the box2d bodies like a little tiny dot it's emptiness it had it's nothing it's just this sort of point singular point that moves throughout the space the magic of box2d the wonderfulness of out Bach CD is that there that that bodies have geometry but bodies actual bodies don't have geometry but we can attach geometry to a body we can give it a shape so the next thing we need to do is create a shape the shape is what it's going to define what that body looks like how it responds to collisions what is the form that it's actually taking though the body is just the sort of empty soul and the shape is the form that is at that's all if that makes any sense so um when we create the shape we can create a number of different kinds of shapes just some examples are polygon shape that's what we're gonna start with a polygon shape can be and any arbitrary polygon with any arbitrary set of vertices or it can be something like a box with a width and a height another kind of shape that we can create as a circle shape sorry so if we have circular objects you can imagine what that is we're gonna use we're gonna create a circle shape there are other things too one that just jumps in my mind right now is change shape and we'll look at some examples of a change shape a change shape is something you might use for a surface like a terrain and in a twodimensional world so there are different kinds of shapes and once we create that and define that shape what needs to happen is that shape needs to be attached to the body so the body experiences the physics location velocity acceleration it gets forces applied to it the shape is the geometry attached to that body the way we attach a shape to a body and if this is super exciting right is a fixture so we need to create a fixture a fixture you can think of as the glue that binds the shape to the body the interesting thing about the fixture is the fixture is the place where we get to set some other physics parameters notably density friction and restitution density friction and restitution so density you can imagine if is more dense it's going to be more it's gonna have a higher mass based on how big it is so density can affect the behavior of something by making it have a kind of weightier feel to it in the physics world friction is just how much friction does that body experience when it comes into contact with another sorry does that shape experience when it comes into contact with another shape and restitution you can think of as elasticity or bounciness so if you if you're dropping if I had a nice little you know basketball or something and I were to drop it how much would it bounce off the floor versus how much would sort of just land with a thud not bounce back up so and I'm dropping things up and caught it okay so these are all the parameters we get to define them create the fixture and the very last step which if I'm still on the board here is kind of put it all together and I'll just write that out here put it all together putting it all together means use the fixture to attach the shape to the body so you can you recall right we started with this question of I want my box object to instead of me having to add location velocity acceleration working on the physics I'm going to add a body to it I'm just going to put a body object to it and I need to you know probably in the constructor initialize the body so you would think that would just be body equals new body XY boom I'm done and it's just not that simple box2d requires a lot of steps to set up all the initial parameters about the body where is it what kind is it what's a shape how is that shape attached what are the physics parameters and these are those steps so these are those steps so in the next video what I want to do is actually look at how do we take each one of these steps and apply it in code so there isn't really a good exercise to go from this one to the next one but one of the things I would say that you might take the time to do is go back and review now go look at that box2d manual so go back and look at the link to the box of the manual read the little section about the body read the section about shapes read the section about fixtures and see if that if any of this kind of like is starting to gel into your head and in the next video we're going to look at each one of these steps in code and and see the example really happen okay