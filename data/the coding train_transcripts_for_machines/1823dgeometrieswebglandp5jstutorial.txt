all right I'm back so this now in this video I'm gonna look at threedimensional geometry no first of all actually let's not even look at three threedimensional geometry just yet this is three dimensional geometry it's a rectangle let me do a couple things I'm gonna just get rid of the fill so it's fine that it's black right now we'll deal with sort of color and that sort of stuff later I'm gonna just change the background of 255 so I can see it a bit more easily or I like to see where the canvas is I'm gonna make the background 175 okay now I'm gonna also say rect mode Center and let me make it like a little bit bigger and I'm gonna actually make it a rectangle so we can see oh look at that whoa oh cool so look at this this is such an exciting moment here why what what what's that so one thing one thing you will soon discover if you choose to embark on this journey into three dimensions is that shapes if you think of like oh we're gonna make a sphere or a torus which is like this doughnut shape or a pyramid shapes are actually three dimensional shapes three dimensional geometry are really collections of lots of small 2d polygons all tiled next to each other and we're gonna see more and more examples of this and amusingly through whatever sort of default rendering that's happening right now I'm seeing the full what the often referred to as the wireframe of this rectangle which I don't know why suddenly that appeared like when it wasn't before it soon as like but so let's see if we can let's say let's see if I can say no stroke to get rid of that there we go and now it's white I'm just curious let's give it a color now it's black interesting I don't know what I did before let's give it yeah okay so I'm in WebGL and this is the thing I can still work with twodimensional drawing in the same way but how can I prove that I really am in 3d so one thing you might have noticed that no no that you can do let's career let's let's make a variable called angle and set it equal to zero and I am going to right before I draw the rectangle say rotate by that angle and then I'm going to every time through draw increase the angle a little bit angle plus equals zero point you know zero seven or something some arbitrary number so let's refresh now look at this cannot what's this cannot read properly transpose three times three this looks horribly and scary and awful let's see if we can find somewhere mmm okay so it would really be nice someday we're gonna figure out a way for p5 to give us a little bit of a friendlier error message and actually if you go back to that processing or medium blog you'll see that I'm Alyce Chun has worked on this whole p5 just friendly error system but that's a separate the reason this is happening is that rotate in 2d if I have a two dimensional plane this is a two dimensional plane and I say rotate there's only one way to rotate but if I'm living in a three dimensional world I can now rotate by what axis this is the x axis so this is rotating along the x axis this is the y axis so this is rotating along the y axis or the z axis is the equivalent of rotating in 2d so I could say rotate Z and refresh the sketch let me move this over a little bit suddenly there we go I've got my rotating square now are we really in 3d I'm not sure yet but let's change this to rotate X now we can see the three dimension look at this it's like I'm very worried it's gonna hit me now the important thing to realize I mean this might be seems so ridiculously obvious but I feel obligated must state it this is still a two dimensional plane there's nothing threedimensional about this all we have done is unlocked a separate rendering engine which knows how to create the illusion of 3d perspective so who's to say whether I you know have a square and make it bigger and smaller is the square growing and shrinking or is it zoom and out in the third dimension but this is definitely in effect you could as a coding challenge I might say recreate this without WebGL and you probably could figure out like could you like maybe oscillate these these the vertices of this quad up and down to create this shape that looks like it's spinning but this is why WebGL exists so that we can just kind of do stuff without it so I can also now say like rotate Y and I can say you know just can like have it rotate maybe like slower along the y axis and we can see now here we go I've got this spinning plane and all we got to do is put general zod if we have the end of super bad three is that right flying off into space and I can add rotate Z angle times 1.2 and we can see now I have all three axes spinning so this is first step number one now another so so that's a 2d 2d plane there actually is a plane primitive in three so the question is we can use twodimensional shapes that can live in a 3d world but we can also and just like they're these choosing perimeters arc ellipse line point quad rect triangle there are now this whole list of other 3d primitives plane which is a sexually what I've just done box sphere cylinder cone ellipsoid torus let's look at box so I'm gonna comment out this rectangle and I'm just gonna say box now what if I don't put anything in there probably I'm not gonna see anything I would think oh look it gave me some default you can kind of see that there's something 3d there right a little hard to totally see because there's no shading there's no lighting so the threedimensional illusion becomes much more prominent once we've added more stuff but um one thing you can see here that I can do is with box if I say 200 now I have a box whose what are the dimensions of a box a rectangle has width and height a box has width height and depth so I can actually start to play with all those ten you know 150 and you can see now I have this spinning rectangular box that has a separate width height and depth so this is the basic working in 3d which is that you could just create ships now here's create threedimensional primitives you can you you can color them and you can rotate them here's the thing though how would I move this throughout the threedimensional space well rectangle right rectangle I give it an an X a Y and a width and a height box i gave it a width a height and the depth i think it's that order could I also give it like an x and a y like negative 50 10 no cannot draw stroke something's going on like crazy so that's just plain wrong the only way to position these threedimensional primitives in threedimensional space is with the translate function so in 2d you can use the translate function to move the origin point around and draw stuff relative to it same thing in 3d but the translate function is really required so if I did something like translate Mouse X Mouse y oops and you can see I'm kind of like whoa somehow it's sort of moving now here once again this is the thing I've really relinquished pinpoint accuracy of pixels first of all it's did I do I translate before I rotate it did I rotate before I translated what I really wanted to do was translate before I rotate at least for the effect that makes a big difference here because what I want to do is show you like I can but remember 0 0 is the center so if I really want to move it with the mouse I'd probably need to say translate Mouse X negative oh my god negative a with a little second if I'm true if 0 0 is the center and mouse X is at the center what do I want to do I just need to subtract that Center out so I need to say minus width divided by 2 minus height divided by 2 and I now have this 3d shape that I'm I'm moving around with the mouse but again 3d right I'm only translating along the X and the y axis something else I could do is I could say zero zero don't translate x and y but translate by the mouse along this use mouse X to translate along the z axis so now you can see as I move the mouse left and right the spinning rectangle is zooming in and out okay yay I'm taking way too long to go through all this stuff let's look at some of the other shapes and by the way coding trained viewers Simon Tiger create a nice little github gist that has a quick reference for all of these so let me look at one of these like I really like the Taurus Taurus is essentially a donut and it looks like a radius and a tube radius let's try that so a Taurus and let me give it a radius of 100 and a tube radius of 10 and go back to my sketch and we can see let me not zoom it anymore just rotate it and you can see there's my nice little three dimensional ring so the tube radius is there's almost like the thickness of the donut right so if I were to make this 50 you can see this is a much more delicious donut to eat because it's fatter around the butt and the actual radius itself is the radius of that circle so I could make that 50 with 10 you can see now I have a smaller one so I I could keep going through all of these there's cone I'd actually don't know let's go back to that list there's plain box sphere cylinder cone ellipsoid Taurus I encourage you to explore those on your own take a break see if you can there's actually a nice example on the p5.js website which I will go right now learn examples under web jeah 3d I'm gonna go to geometries so here we can very quickly see here or all of them let's see we can figure this out plane box cylinder sphere tourists come so what I would say it's like as an exercise see if you can recreate this position all of these shapes rotate them so you can get all these primitives to work you will notice here why are they there that's nice like rainbow color and that has to do with material so I think perhaps in the next video I want to quickly look at material and texture to see on how those work in 3d as well okay thanks for watching