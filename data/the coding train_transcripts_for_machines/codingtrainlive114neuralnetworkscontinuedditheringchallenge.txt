good morning Internet it's his me digital Schiffman live here from New York City at New York University at Tisch School of the Arts I am here like I often am on Fridays to present to you it went so much better during rehearsal this morning there's no rehearsal to present to you the coding train a weekly thing on YouTube where I do some coding stuff and I have an announcement to make which is that I do intend to keep Friday most likely as the day of my live streams going forward I kind of operate on the academic calendar but it looks like Friday is gonna be a free day for me in this spring once NYU classes get going I will probably alternate sometimes do a morning to my time morning timeslot which is this time right now around 1030 1100 Eastern Time and I will sometimes do a later time slot around a 3 p.m. 4 p.m. 5 p.m. Eastern Time so that's that's the kind of that's the kind of Oh update that I have so what's happening today on today's episode of the coding train you may be wondering well I am yet again going to continue my series on building a neural network in JavaScript pointless or fruitless as that may be I'm going to continue it I might smile the way up to the end of the feedforward algorithm meaning data into the neural network output out of the neural network the training and learning process is something I intend to approach next week I am also planning on doing a coding challenge I'm gonna try to do one coding challenge per week at least separate from the usual whatever sort of tutorial material that I'm doing and Floyd what is this called well let me just look up image stippling and I'll do a google image search for image stippling this is what I intend to do is work on an algorithm that can create an image from just a simple black and white dots and I'm going to use most likely the particular algorithm that's called Floyd it's a Floyd steinberg I want to say yeah Floyd Steinberg dithering and here's a nice Wikipedia page so I will attempt I will implement this particular algorithm in processing to get some sort of results like this ok so that's that's kind of what I have on the agenda for today any questions feeling kind of serious this morning I don't know why all right what else what else is happening oh I have something very exciting to announce a viewer act on github I believe the github name of this particular viewer is Neal's web Neal's web created an entire new website so this why am I not hold on bear with me for a moment let's make this happen let me login I'm gonna log into my github account so that I've logged in as I do this live stream today it's gonna take me a minute because I have very high security measures so the first thing that I need to do is type my username and then I need to go over here to my password manager boy oh oh yes live on the coding train me looking up my password and then I'm going to reveal it and it's like a really crazy weird string of characters and I'm gonna do this now I need to get my authentication code Oh bear with me everybody things I should have done before I started livestreaming titute Authenticator here waiting music I can't hear this four six one seven six eight verify ok back myself there alright so Neil's web created us go to this repository this is the repository that you might be familiar with because it's generally where I keep all the corresponding source code that goes with my videos so for example if I want to look for the source code for Langston's ant lankton zant which was a coding challenge I did last week I would go here under coding challenge and I would go all the way to the bottom and I would find first of all I be so thrilled to see that in addition to coding challenge 89 langston Langton Zant there is coding challenge 89 lenghtens and p5.js which even though I said in I would make a JavaScript version of the coding challenge I didn't but if I go to our the history here actually if I think if I just actually click on that we will see we can give a hearty thank you to Waratah me on github who I believe I mean more time he made the last commit to this directory and I'm pretty sure it was for Tommy who if I just go up here to sketch j s and go to history we can see yes this was for Tommy who contributed the JavaScript version so thank you we're Tommy alright so but I but I digress so this is what you might be familiar with this is where you can find the source code for all the coding challenge but uh oh but oh what is this new directory I see underscore coding challenges underscore coding challenges so you might have in the past I forgot this all right like oh I you want to submit your version of Langton Zant you might go here and see that there's a readme and then you could do a pull request of the dreamy and add your community variation this this is now the old system I'm gonna keep this old system going for a little bit longer because we're still working out the kinks of the new system created by Neil's web the new system is if I go back to this underscore coding challenges directory and I look for Langton ant right here this is now a markdown file this markdown file now it's a little weird to look at github is attempting to format this markdown file in a nice way for us to look at I'm just gonna click on raw so we can see it so this is a particular markdown that is oh and I believe actually oh no this is correct I believe this is a particularly the system called Jekyll and if there's time at the end of live streams I love this live stream I'm gonna run through a little tutorial about how to setup and run Jekyll on your computer Jekyll is a engine for templating and building websites with github pages well you don't have to use just github pages with it but you know pages works very well if it and so what you'll see here is now there is all this information right there is a contribution here that has a title and an author in a URL and another URL the URL of the author and a URL of this the source so maybe this is the URL of it running online the source and you can see there's some other stuff here what where what what is going on here this markdown file feeds a new website we coding train github.com Oh code rainbow code anyway so you can see here look at this this is now the new website that will compile and keep track of all of the challenges all the tutorials all of the streams and in fact someday there might be like a big blinking red light on air right now or something when I'm actually live that's a great idea and if I go back to coding challenges and I click here to the challenge you can see this is the page now for the coding challenge which has the video it has links to the example running in the browser I know my second laptop is visible I can get the code I can see the community contributions a link to how to add your own version and even all of the links that were referenced or discussed in the video so I'm tremendously excited about this because I've been wanting to put together something like this for quite a while but I could use your help so I would like this website to be a community project Neil's web sort of the defacto manager now this website having volunteered to create the first version of it and so I'll come back to this I don't want to I could probably go on and on about this but I would encourage you to as you're floating around this rainbow code repository number one check the wiki which has some pages that are like go through a little bit how this site works to check the github issues I could particularly use some input in the realm of interface graphic user experience design so if you are a designer and would like to contribute to this that would be wonderful and yes so hopefully there's some issues here that you can read through you can help with these and yeah so I'm looking I'm looking I'm looking see anyone so that's that's an important announcement other things to mention are if you want to join our slack you can support this channel through the patreon link and like and subscribe and share with your friends I'm supposed to say that stuff okay so now let's just get started but boom but bang the bun the bun bang boom okay here we go i what am i doing today I got to get myself set up here I was thinking about switching to using Visual Studio code but it's too used to Adam okay so I've got the neural network thing open let me run a server oh I already have this open does this are we doing how are we doing everybody all right ah ah okay I guess I need to put my little green paper on this laptop you can now see my very elaborate system let's switch briefly to the whiteboard camera which is all like no it's not this is my my cloaking device my livestreaming cloaking device piece of paper with a very well worn tape on the back which I will now bring over to here technology look at this cloaking device Oh cloaking device all right I am now going to put the cloaking device on the laptop to make the second laptop invisible so you can see the code more easily I'm going to slide this over girl networks live on the coding tree okay all right so let me what do I need here alright so the first thing that I think that I need to do is I want to make some improvements to the matrix library let me make a list of those things all right I want to I'm gonna make a mental list maybe I'll write down I want to use static methods that's item number one number two is I want to add a randomized function and number three is I want to add a map function so these are three things so I think the first thing I'm gonna do is just do some cleanup on the matrix library and actually before I start these are three things that were in my head let me see if anyone out there oh and you know what I want to add a I want to add a print method that's another one I don't want to die or a tape maybe like a print table I don't know what to call it but print method so let me see I now let this so in other words what I want to do first is make some improvements to this matrix library I want to change the name of this dot matrix to this data and I want to do do this list of things to it any other suggestions from the chat on on other things I should do to the matrix library before I start and by the way thank you everyone's compliments about my beard last week I think I was really planning to go get a haircut this week and do some grouping and I put it off it's like 60 degrees in New York today though Fahrenheit that is and I really feel like it's hot in here I should have gone to the barber shop yesterday but you were also kind to be on my mother if she's watching nicely now she's watching if she watches the first couple minutes I don't think she's made it this far and if she would tell me to get a haircut okay Tim says merge my pull request Tim are you the pull request that does the that is the like make the nice HTML table out of the out of the matrix I do want to merge I was just kind of holding off I don't know there's no reason for me to hold it hold off actually because eventually I'm gonna replace that library with the one that I'm building live it's mostly the same but yes okay Tim thank you for that I keep every time I look you add something and I'm very excited by it so apologies for not merging it there's actually no reason for me not to merge it let me merge it since Tim is watching live so you might be wondering you can look ahead there's a lot of mistakes there is actually this particular github repository shipment slash knurled network p5 this is essentially a finished version of what I'm building step by step in these videos and there's a wonderful pull request that I just learned is by viewer Tim and the live chat who created this amazing function that generates an HTML table and like displays it on the page so let's just go ahead and merge that in right now live on air nothing like merging a so let's see if I can make this confirm birds boo thank you Tim for the merge pull request we will speak I'll try this out later but there's there's a bunch of errors in the library and if I go under issues a lot of them were is it all in this thread there's a long discussion here about many things that are kind of problematic with the version of library that will hopefully be correcting as I go but I kind of been holding off because I will come back to this after I keep going okay so Tim created something I'm gonna I'm just gonna make a little print method that just does the console table for me but you can see Tim's method for putting the matrix on screen Oh another thing that I wanted to show is if you go to I can't remember who share this with me but if you go to I think matrix multiplication dot XYZ there's this wonderful little animation that demonstrates why should I go zoom out here that that demonstrates how the matrix multiplication works with the dot product and I actually just skipped to the end so I encourage you to check this out if you want some supplemental visuals for what I did last week okay I'm looking in so I'm getting some suggestions again replacing and names and adding more functions random I hope you people are just saying all right so um as I go if anybody else these other improvements of the matrix library that I can do please let me know again this is not meant to be a comprehensive linear algebra math library for JavaScript it's meant to be a little bit of like a little toy library right now to learn I have a randomize already I made a randomize already okay that's fine so I don't need to do that that's funny this is meant to be a little bit of a toy matrix library to sort of learn all the pieces kind of get our hands in there to manipulate how the matrix math works and learn a little bit about library development in JavaScript programming but ultimately I'm going once I get further along this will be replaced by a much more highly optimized and GPU what does I mean I'll talk about GPU compatible engine called deep learning is all right okay so let us begin all right welcome this is now part for our notes actually it's actually yet I would like part five I've no idea what the numbering is don't listen to me about the numbering just look for the number in the tail of the video but this is another video or this is the last video that I'm gonna do specifically about sorry I saw some stuff in the chat let's do it what are you coding okay sorry I got distracted all right what am i doing again all right here we go hello welcome to what I hope will be the last video about matrix stuff in this series building a neural network so what I want to do is in this video it's just a little bit of cleanup I'm working on this toy matrix library in JavaScript that does the math operations I'm going to need for the neural network that I'm gonna start building in the next video but before I get to that next video I want to clean up a few things and make the library a little better again my goal with this is really educational and for my own amusement in many ways I'm not trying to create this highly optimized or efficient comprehensive matrix math library just a little simple toy library with some key functions that I'm going to need and as we get later as I get further and further along I will eventually replace this with something else that someone has made which will be much better okay so what is it that I want to do I made a little list I'm checking it just once it's a list of my favorite things I'm just trying to reference random songs okay this is the list of things that I want to do and a lot of these came from comments from viewers so thank you for those one is I'm gonna add something called static methods to the library and why am I gonna do this well some of the functions that I have currently in the library affect the current matrix object that I call the function on matrix dot add some number to it that matrix itself changes when I add a number to all of the elements but some of the functions in the library actually create a new matrix object and return it don't affect the library the object that the functions being called on and this is where I want to introduce something called static methods which will make this more clear so I'll get into that as I introduce it I just notice there already is a randomized function in there but I might want to improve that a little bit although I'll come back to that later I want to add something called a math function and what I want to do with the map function is I want to be able to take any arbitrary function and apply it to every element in the matrix so if I could write a function that doubles the number and then I could just apply to the matrix to double every number in the matrix that's gonna be incredibly useful when I get to that neural network stage I have to say hey compute something like the sigmoid or the tan H the arktech there's gonna be all sorts of things that I want to do to every element of the matrix so a generic function called map like map this function to each number that's gonna be really useful and then I the other thing that I thought of his eyes just I do so much console table the values if I just make a print function that does that for me that'll make my life easier and nicer and programming anyways it should be more than it's more than this but sometimes it's just about making your life a little bit nicer on a daily basis okay so I'm gonna start working on these things there's a live chat going for the people who will happen to be watching this live and not the archived edited version so maybe I'll get some other suggestions along the way okay so let's first ah first thing that I want to do I got this comment several times from viewers this is a particularly I did a kind of poor job choosing the name for this variable so this variable right here this dot matrix which is part of a matrix the matrix class every matrix object has a matrix variable it's kind of problematic because it has the same name as the name of the class and this can really confuse people so one thing I want to do is just change this to data so a matrix object has a certain number of rows and columns in the twodimensional array that stores all the values that's just the data of the matrix object so I want to change that and then there's some fancy those of you watching probably know there's a like a fancy way to do this an atom let's see how do I do it like I always do this by accident and I can't do it on purpose where you click on something and it like changes everywhere else it is sorry sorry I I'm just looking at the chat control D okay I'm breaking news from the chat I've told the control D no but let's try it it's a lot no it must be command deep for the yeah there we go oh oh this is crazy but I don't want it never mind scratch that I'm gonna do it the oldfashioned way and I'm going to do just a find/replace I'm going to say this dot matrix replace that with dis data because basically everywhere that I'm referring to it I'm referring to it by this time matrix so let's do that replace all feel confident about that and hopefully that's okay all right so I've done that now let's let's move on what is the thing that I want to do I want ock static methods okay so let's look through this function randomize affects the data of this object fine this function add adds a number or adds another matrix to this particular matrix changing the values done transpose I know well I have such clear vision of what to do good to see by the stupid camera that goes on so I'm a little confused what to do here with transpose I'm gonna leave that I'll come back to it this is the one oh boy this is the one where I really really need to fix up cuz this is such this is such a disaster the way that I've written this function if if I get a matrix I create a new object and return that object if I get a single number I just multiply every value to this objects matrix so this is this is kind of a disaster I've kind of done two different wildly different things in the same function so what I want to do is add a static function and a static function the difference between a shoot let me do a little erasing of the whiteboard for a second move on I guess you can come with me as I erase the whiteboard we can lose all this stuff Oh God this whiteboard needs to be re painted I think it's just got so much so many imperfections okay race more since I know I'm going to need you later anyway okay all right so what do I need exactly by a static method so methods are functions that are part of a class that are attached to objects made from that class from that template and so in the case here what I'm really doing is I'm saying things like let M be a new matrix and if I were to say something like m dot multiply multiply this is not a static method in fact this is what I guess I think you would refer to as an instance method maybe it's a it's a regular function it's a function that's called on this particular instance of a matrix object but what if what I wanted to do is say what if I had two matrices M an N and I wanted to create our m1 and m2 and I wanted to say m3 is and currently the way the library works right now is I would say m1 dot multiply m2 this is currently the way the library works right now I don't won't be fine to keep it this way but I think what would work better is for me to actually say matrix dot multiply m1 m2 and this is a and you've seen this before right any time in jail JavaScript when you've done something like math dot random or math dot sign these functions are static functions part of the math object Oh God JavaScript it really tries to be crazy the naming of all these things but the point is it's a it's kind of a nice way of name spacing a collection of just utility functions and so there are some functions in the matrix library that operate on actual instances of matrix objects and other functions that are just kind of namespaced as part of the matrix world the matrix world and you could just put things in them and get things out of them and that's what I think I want to have this multiply function do so now I need to look up I actually have to look up that syntax for static methods in JavaScript because I don't know I've done this a bunch of times in the Java programming language but it's probably different in JavaScript so let me come back over here and let me look up static method JavaScript and I'm gonna type in Mozilla because I like to generally get the Mozilla Foundation documentation and here we go static keyword ah so it looks like all I need to do it's very very simple it's just put the keyword static in front of the function so if I now and the real question is can I have a stat the same the same function with two names in other words am I allowed to have I basically want to have a static version of multiply that receives two matrices m1 and m2 and a nonstatic version that receives a single number that is that that actually affects the that matrix itself so what I'm gonna do here is I'm gonna go and find I'm gonna go and take out this all of this math so this is all of the matrix product math that I worked out in the previous video and naming wise incidentally I called the two different matrix objects a and B so in a much simpler way I can just actually make the argument names a and B and remember I'm checking if as columns are not equal to B's rows okay so this should be fine I'm done and then here this multiply function is just the scalar product there we go I think I'm good right so here's the question can I make let's let's see if this works timeout what is going on the thermometer says 78 degrees in this room I came in this room this morning and it's at 76 I tried to open the window outside of the room get some fresh air in here it's so hot in this room I don't know why the climate control is not working you can't see what I'm doing but I'm trying to I'm trying to we'll some fresh your hair into this room all right hit that by accident what's having real temperature unit someone's gonna have to do the conversion for me okay all right let's see if this works but before I see if it works let me actually add this print function this is not going to be I'm gonna put do this on the bottom I'm gonna add a function called print and I couldn't just call it log maybe maybe a log is a better no no let's call it print and in the print function I'm going to say console dot table this dot data right so I want to just console table to this this dot data so let's take a look and let's let's let's try to manipulate some stuff in the console so let's say oops cannot read property matrix Jas line 45 of undefined so I messed something up so I had some other places in the code where I was not saying this dot data but some other matrix dot what neat now needs to be data so I can look for anywhere I'm actually saying dot matrix and you're some other places and some other places that's pretty good okay so I took care of that let's go back here all right oh I forgot that I had a sketch that's running that's trying some things out but let's let's just say m1 equals a new matrix that is 2x2 and I'm gonna say m1 randomized m1 dot print okay that's the matrix m1 dot multiplied 2 so I want to double all those values and then m1 dot print again m1 dot print and we can see okay so that's working my old multiply function the multiply function that takes a single number and affects every element of that matrix is working now let's see if the static one works so now I'm going to say let em m to be a new matrix and I'm gonna say m2 dot randomized and m2 dot print just to check it out whoops why did that not work oh I didn't give it so I probably so I forgot to give it a number of rows and columns I should probably add some error handling into the library instead it's like hey you forgot to give me the columns and rows or use a subtree fault value let's let's try that again m2 equals a new matrix that's also 2x2 let's print it out and let's randomize it and let's print it out and there we go okay so now let m3 equal matrix dot multiplied m1 m2 this is now how I want to get a new matrix which is the result of the dot product a matrix product between matrix 1 and matrix 2 and if I say m3 dot print okay so I can only assume that the math works correctly somebody watching this I should feel free don't pause and check that method write the comments if it's wrong but what I was really looking for I checked the math at the to work correctly last week so I'm really looking for now and I get am I allowed to have two methods one that's static with a given name and one that's not static with a given name and it looks like I am and it makes sense that it would be able to do that because they're called in completely different ways there's no reason why the computer should ever get confused between the instance the computer the JavaScript interpreter should ever get confusing the instance version and the static version all right everyone pause for a second all right let's see all right so what do I am I gonna do next here math oh I'm into the map function okay all right so as an exercise to the viewer what I would say for you if you're watching this and you're following along take this transpose function and make a static version that does what this is doing returns a new matrix object and and make and make and keep this version but make it actually internally change the matrix itself and transpose it so it's reusing the same variable I don't know if that's totally necessary but that may be well I'll do that on my own and adjust it I don't know it's the heat all right let me just for poor machi editing let me just say that again could you make a sign on the screen telling people what you are doing mmm that's an interesting idea the issue is I would want that to only go out on the live stream and not on the recorded versions and right now I don't have oh then I don't have it right now I don't have a way of separating that so but this is a good what I used to do is like just right in the video's description what I was doing that day and then I became lazy and stopped doing that but I will take that under consideration as an exercise to the viewer you know we can make some arguments whether what's what's the sort of optimal or most elegant way to write this live but for as an exercise for the viewer what you could do is take this transpose function and make a static version of it which is essentially this right we almost about to to it make a static version of this and perhaps leave an instance version which changes the internal data of the matrix object itself to be the transpose matrix but I'm going to leave that as an exercise for the viewer so the last thing that I need to do in this particular video is create a map function that's going to be a function that takes any generic function as an argument whoa so if you visit I think I think this might be the first time I've really done this in a video in JavaScript let's think about this for a second I can write a function let's let's think about how I'm gonna write this can I use this eraser it looks like I can all right so I am going to create a function that we got to think about this for a second so if I were writing a function and I did this already called something like add and it receives a number right this is a function I have in my matrix object world I'm gonna do is say plus equal you know I'm gonna have a whole bunch of for loops for every element of the matrix add this number to it that's what this function does what I'm saying I want to do is create a function called map and what that function does is it receives a variable maybe I'll call it FN right now for function maybe callback is it's not really a callback so it's not a callback FN for function and what it's going to do is it's going to execute this function somewhere in the code and this is something that you can't really easily do in a programming language like Java you can't make a function a variable that you pass around easily without some like real crazy gymnastics but this is very native to how JavaScript works arguments we think of M parameters to a function we think of Emma's Oh send these numbers in send these yeah send these other objects in but a function is the thing that I can send in just as well so let's look at how this would work in other words instead of adding a number to every element of the matrix I want to apply a function to every element of the matrix and let's look at how we do that okay so let's I think the ad function actually we can look here at this is kind of a useful I mean I'm gonna use this multiply function that instead of add it just multiplies this number to every elevator as a starting point so I'm gonna call this function map as a kind of generic term for mapping a function and what I'm going to do is I'm going to say so I want this same exact apply a function to every element of matrix and I'm gonna say right now I'm just going to create a variable let value equal this data IJ in other words I want to say I want to look through every element of the matrix and I want to take that value now this would be me just assigning that element of the matrix its value what's its value assignment this is this would not change the matrix at all but in two steps I pull the value out and I put it back in but if I have this function what why don't I just apply that function to the value and put it in so I can execute that function with the value and then assign the result of that function to the data makes sense so this'll might make even more sense once we see how it's used and you know this is only gonna work if I send in functions that are written in a certain way but we'll look at that and maybe somebody watching can let me know what's it is there a conventional name for what you might call a generic function that's being passed in you know I don't wanna I don't want to call it function because that's a reserved keyword I could call it func map its funk funk that's good I like that funk let's change it to funk okay all right so now let's let's in order to see if I've done this correctly let me go to sketch KS which is sort of just a bit of like code that I can use to sort of mess around and see if things are working uh lambda okay oh okay time out time out time out hugs I'm getting some good wouldn't data I'm sorry I'm reading some comments that I'm getting in the slack group here wouldn't data I J dot slice array.prototype.slice.call am de function need that I and J so yeah I know this is I see what you're saying here oh yeah you mean like this yes this is a good point okay I'm going to yeah I'll come back and mention that okay so cuz that that can be useful you're right but I'm not gonna worry about that right now okay okay so let me keep and in fact this will actually negate the need for certain functions like randomized potentially or ad because I could always create those functions and then call them through the map but let's look at this so let's say I have a matrix and I'm gonna say a dot randomized and then I'm going to say a dot print so what I want to see is just and I'll keep this just as a two by two matrix it's easier to see so I'm gonna refresh this page and we can say here's my random 2x2 matrix now what I want to do is I'm going to write a function called double it and it takes some arbitrary value let's call it X and it returns x times two so this is a function a generic function that receives a value and returns the doubled version of it so if I say an a dot map double it what this should do is it should send this function double it in through the function map it's going to it here run through and now it's saying this data i j equals double it now so it's calling the double it function for every value in the matrix so let's go back to here and if i say a dot print now and i run this we should see look at this here's a matrix with values two seven seven three or two seven actually whoa and now I have four fourteen fourteen six all the values are doubled great that works myself a little high I need a little reassurance no file in the form of bad lame sound effects okay hmm so ah so I'm being told in the chat that and this is by the way it's often referred to as a lambda function maybe but sometimes it is useful to actually use the index values so there are there are so there might be a reason why you want to optionally also pass in the IJ the row column location of of each when you're calling the function that's being passed in because you might want you might want to operate on it depending on where it is in the matrix maybe if it's an edge value you do something different so in that case this can be useful so this is a little bit of an additional advanced thing I'm gonna leave it out of my very simple library but I thought I should mention that and and it's up to you to then therefore so I could do something like as long as I is greater than zero return x times two otherwise return just X so I could start to do sort of advanced things like I don't want to just do this to everything but not to do something different to the first row kind of thing all right let me put this back all right all right today they do this the term for functions like map and functional programming is higherorder all right thank you for that Thank You Vlade for that all right so this brings me to the end of this particular video I am sure there are things I mean I'm really sure there are things this matrix class is missing that any comprehensive matrix class would need and I wouldn't be surprised even if we discover some things we have to change and alter to this as I start building the neural network but in the next video what I want to do is return back to this topic of a perceptron what happens when I have multiple perceptrons a multilayered perceptron and why all of a sudden does this concept of a matrix become so meaningful and important for the math of feedforward a neural network is actually often referred to as a universal function approximator right it receives input it generates an output why do I need matrices inside of that neural network to manipulate how I get the output from the input that's what I want to look at the next video the feedforward algorithm okay thank you Oh Oh Alka is saying in transpose I have a nested loop but I only need one loop and a slice yes that is correct so the other thing I should mention is that right I could you slice here there are lots of array functions like reduce fill map and you know in fact there's already the so I'm just not using those right now I was I was thinking about revising this library to use all of those array functions but then someone told me they were like very slow so I'd only be using them just to like make things look sure in terms of the code but I'm gonna I'm gonna I'm gonna I'm gonna I'm gonna I'm gonna stick to what I have all right so I'm definitely going to need to and I'm gonna open this door so try to get some fresh air into this room while I erase the whiteboard danger here is that there's people walking by in the hallway I have no idea that I'm livestreaming want to say hello but I'm going to live dangerously in order to get some hopefully cooler fresh air into this room so I think probably what makes sense is for me to divide this particular feedforward algorithm into two videos one where I just walked through and diagram how it's going to work and another I and J are bad variable names yes they are yeah I should be reading the chat diagram out the feedforward algorithm and explain how it works and then implement the code for it and then I will do a third video where I add the bias well maybe I need to talk about the bias right from the start so I have to figure I'm not retire Lee sure how do we do this this is like hard let's see over here okay let's see if I can get a little more fresh air that's gonna have to do that's a race over here what's the time everybody 1130 so I this has been about an hour I was hoping to be done at 100 let's see how that goes okay just those of you with the slack channel who are discussing the optimal way to rewrite some of the matrix library functions just to be clear you're just discussing that amongst yourself right I haven't done anything horribly wrong I need like we need like a secret emoji that you can include maybe use a trained emoji if it's something really important for me or something like that all right no you have not missed the challenge okay oh right yes yes yes so many people okay so many good comments all right actually before I start this let me go back and what I want to see here is I want to look at me open the door a little bit longer while I'm doing what I want to do is look at my playlist and this one I think okay so really what I'm doing here is returning back to ten point five so I'm going to return to ten point five and talk about the structure and look at how suddenly the matrix math is relevant to that and on to es6 three four hundred one more five so that was part five yeah okay all right okay close this other stuff and okay all right okay all right I'm back to talk about neural networks again now two things I would mention I'll be right back I swear is again I need all the information that I'm showing you has come primarily from two sources I mean I've definitely looked at other sources as well this book make your own neural network by Tyreke rasheed I'll include a link to the coding training Amazon shop if you want to get your own copy of this as well as three blue one Browns videos so three blue one Brown has a series as a YouTube channel that has a series of videos about neural networks and deep learning and I would encourage you to watch those as well along along with mine so I'm going to try to explain the stuff as I go but really my focus is on implementing the stuff in JavaScript whereas if you watch the three blue one Brown videos those really aren't the focus is on how does it work in gaining an intuition for understanding the math behind how the neural network works and the animations diagrams will be much better than anything I totally illustrate for you on this whiteboard but I'm going to go ahead anyway thanks for being here with me but go and watch those videos okay so a neural network is something that you can think of as a function it receives inputs and generates outputs and if you remember we started this playlist I started with this idea of a simple perceptron being a single neuron and that neuron could receive two inputs we might have cuff call those X 0 X 1 and generate one output calling that why would I now and so we use this to like train this perceptron if X 0 and X 1 or is actually a point in a two dimensional plane we can train this trying to return a positive one if it's above a line or a negative one it's a below a line so these are really toy problems just to kind of get a sense to produce a very like obvious result to see that it works so let's go forward with another toy problem that I refer to in my perceptron video what if these were just inputs were binary boolean values so true or false in other words 1 or 0 and this one I'm like hold on a sec turn this a little bit and this one is also true or false 1 or 0 this would work if I wanted this to up to solve for and basically I want the output to be a 1 or true only if both of the inputs are true and in all other cases it should be a false a 0 if I if I wanted this perceptron to solve or or I would get it by an output of 1 if just one of these were true and we could probably even like manually assign the weights to figure out to make this work but as I referenced in my previous video there is another kind of boolean operation called exclusiveor which means true and true gives me false true and false gives me true false and true gives me true and false and false gives me false so this is exclusive or meaning it's only true if one is true if they're both true it's false and this single perceptron can actually not solve this this is where we need a multilayered perceptron meaning we need a second perceptron we need to send both inputs into that as well and and then both of these need to be sent into the output known as Y so I'm actually going to rewrite this I'm now going to draw this like this this is actually now a neural network because we can think of the inputs as nodes these two perceptrons that I've been served in here as nodes and this output is a node and this is I better write it down here a 3 layer Network input the input layer can you see that the this is referred to as the hidden layer I'll talk about that in a second the hidden layer and the output now I am missing from this diagram something called the bias I will return to the bias later we saw that we needed a bias to like sort of like move this line that we're trying to learn where it is up and down so I will come back to the bias we'll leave that out for right now so we have this input layer a hidden layer out but now why is this called the hidden layer well it's kind of like hidden because me the person who's operating this neural network I am in charge of the input I won't give it the input and now me the person in charge of 0 network will read the output and use it presumably in my program so the user of the network is is kind of sending in the input and examining the output so hidden is hidden because it's actually a part of the network that the user the end user doesn't manipulate at all and as you'll see later on there can be multiple hidden layers these kinds of architectures can get quite sophisticated and complex and I'm gonna go through hopefully eventually on all these videos many much more elaborate neural network architectures that involve you know inputs in different ways and multiple hidden layers and attach this other thing and bla bla bla bla bla outputs can come back and feed back into the input there's all sorts of crazy stuff you can do but this is a very basic basic starting point a 3 layer Network one input layer one hidden layer one output layer ok I'm gonna pause for a second to see if there's any questions just gonna pop I'm just gonna turn this camera back on ok have a little drink of water here house how's this working out so far it I miss anything okay okay all right all right so a couple things one is you know the goal of this is use more interesting inputs and the hello world of machine learning that you'll see in every example in demo it's in the three blue one brown videos is a handwritten digit recognizer so in other words these inputs could be all the values of pixels of a given image and you could also be used you could use a system like this to try to predict the price of a house so the inputs could be the number of bedrooms or the zip code how do you know kind of getting convoluted here but so data how you collect and prepare and use data is a big important fundamental topic I can't really I'm not right now I'm using the simplest possible scenario where I don't have to worry about it my input data is just zeros ones true or false but don't don't miss out on this question thinking about how you collect data what could be missing from the data this is a really big important question I hope to come back to that in future videos as well okay but in this case I want to just use this very simple idea now how does the feedforward algorithm work so let's say we receive an input and the input is 1 and a 0 or 1 all right let me let me just start over my little train of thought there for a second let's take an input so let's have an input it again I'm gonna have to get to the bias later but let's say the inputs coming in the input coming in ah okay so first of all I know I know what I'm doing here I need to represent the input in some way so the typical way that we would represent the input is in vector notation looking like this X 0 X 1 so let's say I take an input of 1 & 1 what I need to do right remember these connections all have a weight this is if we think of this as hidden 0 this is this is X 0 X 1 maybe this is kind of like hidden 0 this is hitted 1 and again the hidden layer kind of a different number of neurons then the then the input layer but we're doing a simple scenario here this connection is a connection between 0 and 0 this connection is a connection between 0 & 1 it's a weight between 0 & 1 this is a connection between weight 1 & 0 sorry and this is a connection between weight between this is a connection of weight between input 1 and hidden neuron 1 now look at all these now what happens in a perceptron in a single neuron a single neuron receives the weighted sum of all the inputs meaning this particular neuron should receive and I'll write it down here X 0 times weight 0 1 plus X 1 X 1 times weight 1 0 whoa whoa whoa whoa whoa this is 0 0 apologies my handwriting is very poor this is weight input 0 2 hidden 0 so this is weight 0 0 this makes sense right the weighted sum is both inputs multiplied by their weights of corresponding weights added together is this now I also have to something called the bias in here come back to that so this is what I get this one down here is X 1 times the weight of from 1 to 0 plus X 2 times the weight of 1 to 1 right 1 to 0 1 to 1 ah no no no no no I keep getting this stuff wrong 0 1 right this is the sum of X 0 X 0 I should have had more coffee this morning X 0 X 1 X is here Oh times wait 0 between 0 & 1 plus X 1 times the weight from 1 to 1 plus a bias will call this bias 0 and bias 1 I'll come again so they come back to the bias this now look at this interesting this is so fascinating doesn't this all look so I could scope I could I could stop here and say hey guess what I'm gonna do for now I'm gonna write the code because I can use for loops right if I have like these neuron objects and I keep an array of them then I have like the weights then I could do a for loop that could just sort of like loop through everything and sum everything up but but but but guess what it so happens that this exact operation resemble something that I've been spending 4 or 5 videos about this is actually the formula and let's take out the itthat's why wouldn't remove the bias a second we'll come back to it for what if I think about these weights as living in a matrix right there's actually the if I have the if I have an input layer and an hidden layer and I need a weight that connects every input neuron to every head and neuron then I have a matrix whose dimensions are pause let me think about this yeah I'm gonna get I'm gonna hi grace watching sixyearold grace hi grace I appreciate your watching I have a sixyearold as well she does not watch my youtube channel well she's in school right now okay I doubt I seriously doubt her first grade classroom is watching my youtube channel so I know this is going to be two by two I'm just thinking about this for a second so this is going to be zero zero one zero yeah zero zero one zero zero one one one okay but if this worked if if there were three here this would be 3 by 2 so it's the number of inputs by the number of hidden I think that's right is that right could someone confer fact check for this for me if there were 3 inputs here there were this would be 3 by 2 right because you have 3 things all connected to there yeah okay assignment is telling me that I made a video explaining all this already it's quite possible doesn't hurt to do it more than once 2 by 3 yes yes yes 2 by 3 I meant to 2 by 3 because 2 rows 3 columns I just said 3 by 2 but I was like mentally I had it right 2 by 1 2 3 because I need to send 3 across to do the dot product with these 2 I have to have the same number of rows no the same number of columns as I have Rose don't uptick no no no no no no 8 this would be to buy this would be 3 by 2 1 2 3 by 2 1 1 these will be the connections connections from here to there connection from here to there can okay okay I got it think about this a few times okay okay number of columns equals inputs number of rows is hidden news okay if you think about this this relates exactly to something I've been spending many many many videos about if I take these weights and put them into a matrix okay so the number of columns should equal how many input nodes I have right and then the number of rows would have to be the number of hidden right remember so look at this this would be I could store the weights between 0 and 0 the weights between 1 and 0 the weights between 1 and 0 and the weights between 1 1 now I should have probably not used a square matrix let's making our life a lot easier but if I happen to have another hidden another input there were three inputs I would just have another row I would have weights from 2 to 0 weights from 2 to 1 but look at this if I take the dot product of this vector with this vector look what I get this X 0 times weight 0 0 plus X 1 times weight 1 0 if I take the dot product of this vector with this vector that is oh sorry this it's the matrix product the matrix product of the inputs with the matrix of weights gives you a resulting vector okay hold on and write this vector is going to be a 2 by 1 vector same as this and it's going to have this in the first spot and this in the second spot and that is those are the values that of the hidden now that's the value of the weighted sum of the hidden neurons if you remember from my perceptron video we have to pass those weighted sums through something called an activation function I will get to that in a second I'm trying to get to that site so what I want to do now is write this up a little bit better boy this is like hard okay let me erase this over here I need some more whiteboard space okay so let me rewrite this up here Philby wait hold on word I have a lot of space you have a lot of space this goes all the way to here I'm gonna rewrite this up here so I'm going to say the for any given let me think about this all right let me rewrite this up here so what I have just to review is I have a matrix of weights weight 0 0 weight 1 0 weight 0 1 weight 1 1 then I have the inputs X 0 X 1 and this would be a good time to add in the bias so why do I need a bias so if you recall from the perceptron example we needed the bias as a way of saying like you know you have this problem if you're sending in zeros the weighted sum of a whole bunch of things multiplied by zeroes is always going to be 0 but sometimes that actually should be a neuron that act a neuron that activates and so the bias is something that can help move say it doesn't it's not as hard to act we could have a high bias meaning it's not so hard to activate this neuron we're gonna add some arbitrary number to it to like move the value up a little bit or we could have a negative bias saying like oh we've got to really make this hard so this is a way of giving us more ability to sort of like have the neurons behave accurately and the bias ease is actually just another number that we add to that weighted sum so we can actually look at it like this this is and so another way of looking at this is to say the hidden layer equals the weight matrix I'll say that's capital a the mate with the matrix products of the inputs plus the bias I'm like thinking about my notation very carefully here because I need to pass this through an activation function but the activation function happens for each one yeah so okay so the weights are kind of like weights between I and J the inputs are 4 from 0 to J or J and the biases are like J we could think of it that way thinking about this where's the woo part of the white board oh yeah wo still the wrong order on the indices where do I have the wrong order on the indices right the W's before the x's and the indices are more logical okay hold on oh yeah crap it's just this one that's wrong right oh yeah oh my God look at this oh boy alright I guess what you've been watching this video for quite a while and I have a big big major mistake here and let me fix this I rewrote it up here so this by the way is 0 0 1 0 and this is 0 1 1 1 but don't I write the oh you hold on II I kind of supposed to do row column so this should be 0 0 0 1 Row 1 column 0 Row 1 column this is now right is this correct this would be the standard way of writing this is this correct yeah now I have to fix the diagram up here okay all right slightly awkward edit point there but I fortunately had a major mistake I appreciate that some of you were probably watching this video screaming at it then I have this mistake but so the convention for writing fertile I had the numbers wrong anyway but the convention for writing the the index values in a matrix is row column row column a three by two matrix is three rows two columns so these numbers here should be row column row column row 0 column 0 rows 0 column 1 this is row 0 this is column 0 this is column 1 now I'm in Row 1 column 0 Row 1 column 1 so that affects these right 0 0 times X 0 0 1 times X 0 then I have X 0 times 1 0 and X 1 times 1 1 which is correct and I like to also refer to weight 0 0 as well so now let me correct this whoo still in Row 1 column 1 now I'm in Row 1 column 0 and Row 1 column 1 and by the way I have seen right because gonna give it row row row row that makes sense because if these were if this is a matrix that just has one column this is really this but I don't I don't need those there I'm gonna sort of assume that you you will see a lot of people conventionally not starting with 0 but say X 1 X 2 but you know it's the same thing I guess I'm just I'm so used to counting from 0 that's how I have to do it I'm gonna pause for a second to factcheck that all right now can somebody factcheck me that I now finally do have that correct yeah tend to sing the network gets two layers not three but I you know it's the input and outputs are you know this is the input is a special case the input layer is just sort of like the input numbers so you're right but I'm gonna consider it three layers it's sort of the convention that I kind of understand and the input layer does the activation stuff only happens with these two layers not the first layer okay this video is not editable you you should be surprised what Mattia can do all right diagrams still wrong but matrix seems fine what's wrong in the diagram oh the diagram is wrong all right so now that I bat went backwards and fixed up these now I'm realizing that these are of course wrong right because the connections no wait wait I think the diagram is correct because these are the connections for for the first row and these are the connections for the second row so what's wrong with the diagram me I am somebody tells me the diagram is wrong but I it looks right to me the row is the target perceptron wo I WI o or wrong way around how come I don't see this this is the this is the weight from zero oh oh you're saying yeah yeah yeah yep yes yes yes yes I see okay okay I get it I get it I see it now oh this could be a case you know sometimes much it does say to me just go back and do it again and I wouldn't be opposed to coming back like later today are like someday next week and just redoing this if this doesn't work cuz a lot of times I have to do these explanations to work them and understand them but I see the mistake now because these are the two things that are getting summed x one times zero one okay okay good thing I stopped to factcheck this thank you again to the live chat I have the diagram wrong now because this even though this looks kind of right wait between zero and zero wait between zero and one I have the order of these incorrect because this neuron is being multi this this this weighted sum is X 0 times 0 0 X 1 times 0 1 so I need to put the row first the column second so this is correct these were the only two ones that were incorrect so now the diagram is correct this is correct and this is correct row being I column being J so we're ready now once I've got this once I've got this so the hit end this is what I'm this is basically what I'm saying hidden for every hidden node the weighted sum is the weight the weight matrix product with the input plus all the biases but this is not enough I need to figure out what do I actually send out through out of the hidden layer so what is the output it we the the math is it needs to through some activation function so we saw in my previous perceptron example that I had a very simple activation function it was the sine function and the sine function says if it's greater than zero send out a 1 if it's less than zero send out a negative one and if it's zero I don't know send out a 100 negative one pick one of those arbitrarily not random but be consistent so it turns out that what you pick as the activation function for a neural network can really affect how the neural network behaves and how well it solves a particular kind of problem and there this is a field of active research and there I'm gonna use the sort of function called the sigmoid function which I will represent with the Greek letter Sigma this is this is kind of the original activation function that was developed as neural network research began in the 80s 90s however we will see today that there are so sigmoid is one possible activation function tan H or inverse tangent oh and you can't see that sorry sigmoid is one possible activation function I know that's very high up terms white board tan H is another activation function and there is something also called relu or I have to say the French hey dude that's Tears for rectified linear unit the point of the activation function is what we want are values coming out of the neural network that have a very consistent range and we want to squish like then these weighted sums can be any value to be that could be like negative 5 bazillion right but I want to be able to take a function to kind of squash those values into some particular range tan H does a nice job of squashing the values between negative 1 and 1 sigmoid is a function that does a nice job of squashing the values between 0 and 1 and they do doesn't actually squash the values I'll come back to it later when we get to some other but it just takes away the negative value but this is act this is this is activation but I'm gonna use this sigmoid function I'm gonna use the sigmoid function let's take a look at the sigmoid function sigmoid function sigmoid function is a mathematical function having an sshaped curve and it looks something like this and I guess that was wrong I don't know why I said between zero and one oh yeah yeah yeah it was between serán one so hold on or logistic function let me come back so let's take a look this is the Wikipedia page for the sigmoid function actually it's not the Wikipedia page that's the Wikipedia diagram but I can go to the Wikipedia page and we can see here this is also referred to as the logistic function it uses that magic number e and it takes whatever the value is and does this to it at all no matter what number you pass into the sigmoid function you get a number back between 0 & 1 high values approach closer to 1 negative values approach closer to 0 so we unlike a sort of biological neural network where a neuron is either going to choose to fire or not we're firing these continuous activation functions that fire somewhere in the range but the given number outputs somewhere in the range between 0 and 1 so again this sigmoid function is not used that much anymore in kind of current neural network research and as I get further we'll look at other activation functions as well but it's sort of the classic one is the one used both in they make your own neural network book and the three blue one Brown videos ok so I'm thinking what is he what is he is the why am i blanking on why am i blanking on the is e is e the natural number and is there a constant in JavaScript right you a lers number no Euler's constant it's pronounced Euler right and it is the natural I go through all over the natural math e okay thank you all right that's what I want to check okay it's the base for the natural logarithm right okay it's close enough to point seven ish all right okay all right if if you've made it to the end of this video you deserve a special prize I don't know what that prize should be no it's gonna like give you a pair for my beard that's that's a very weird and creepy prize let's edit that out except not now that I actually do edit these videos that will be edited out I don't so confusing here so somebody will also make this decision the neural network but if you finish for the end of this video and this has helped you please let me know in the comments I'm sure this will spark a lot of confusion and questions and I can always come back and revisit this topic but I think I'm now at the point where I can actually take this feedforward algorithm and by the way the output and what I'm not mentioning here is this output layer is going to do the exact same thing it's going to take the weighted sum of all of its inputs pass it through the active plus a bias pass it through the activation function and and then give an output so you could quibble with this idea of being a 3 layer Network 3 layer Network because this first layer the input layer is kind of a special case it doesn't do anything it's just the input numbers but I'm going to call it a lair the input layer the hidden layer performs this math and the output layer right we could write the same thing what's is Sigma of all of the weights between the hidden and the output times the hiddens output plus some biases so and again this this this weight matrix refers to these weights this weight matrix refers to these weights and same thing for the biases so this is the idea can I now take this mathematical formula that I somewhat understand and implement it in code and use the matrix library that I've developed this is what and then if so can we actually solve train a neural network we have to do the whole training thing to produce the correct output for the XOR problem again this is just to sort of learn and figure out the lingo the and how all this stuff works so that later when I go to use some higherlevel libraries that do all this implementation for me because I really don't want to write all the code for this I mean I I sort of do but you don't maybe you do anyway I just want to get a sort of foundation of knowledge so now let's go to that next step come with me if you so choose creepy music underneath me down it up all right oops all right where am i timewise mmhm and I thought it was gonna be like way ahead of schedule yes thank you for everybody donating through the super chat I really do appreciate that I actually don't have a good system to like see those so I'm sorry this thing oh go look at them afterwards but I would say if you do want to support the channel patreon is an excellent way to do so as well okay all right the heat is having an effect certainly is it still sort of still so 78 all right let me have a drink of water here and anyone have any Corrections they want to offer Oh math IXP X is e to the X thank you that's good to know but using that bees and H's indices must be I naught J let me take a look at that good thing I and J look kind of similar so oh there I yes you're right you know I just left but in the corrections department I really having trouble being consistent and doing a good job of my kind of row columns indices I kind of had to do this to like get used to it I probably just go back and redo this whole video but these should really be I good thing I and J look very similar you could almost say that I got it correct but it's because it's the there is only one column there are many rows so the column is assumed to be like zero but we're looking at all the different rows etc etc so it should be i0 that should be a nice thanks all right let's see if I let's see if there are any other Corrections all right H and O I believe oh yeah I also missed over here I I thank you all right Matt yeah boy I'm so sorry so this we could also do amateur when you watch this later you know I'm not opposed to using some overlay in the video to like point out where the errors are during the video if they think that's going to be helpful okay okay we c'mon is leaving I love your index nagging index nagging it's like that should be the new song I'm nagging you about your indices get them right it's rows by columns not columns by rows but sometimes X by Y butts is the X is first or it's the I it's the J I don't know this is the number from my musical machine learning the musical it's the opening number indices indices everybody's got lots of indices nice all right yes yeah and so me so I do think also the convention is to start with one I just can't bring myself to do that because I'm so used to array indices as starting from zero but I do think you're right I think in a mathematical textbook you would see these as 1 1 1 2 2 1 2 2 when I make this video over because my gia tells me it was a total disaster and I should not be releasing this content whatsoever under any circumstances I will maybe start from what okay alright so look how many people are watching I don't know how many people are watching I can't look I don't have an I do have a place I can look actually who 634 that is nuts okay okay hold on hold on hold on okay all right so I okay I want to be able to do this coding challenge and I want to try to get out here out of here like a little after one so let's do that and I also want to get some fresh air in this room let's try it just for a minute open this up so the next point that I need to do and is to write the code for this stuff so let's do that there could be more neurons than inputs right yes all right okay let's try to get some fresh air a little more fresh air for the coding challenge I might have to just wear my tshirt yes Simon I did see your comment about activation functions thank you for that so I will as I get further will come back but I'm going to use sigmoid just for this demonstration hmm I realized what I need now but it's okay I'll add that into the matrix library during this video okay now we're at the moment I spent a lot of time looking like a crazy person trying to write out and understand the feedforward algorithm for a neural network a simple three layer network with an input layer a hidden layer and an output layer I try to work out the math and understand it understand it as the output of the hidden layer is the matrix product of the inputs times the weights plus the biases pass through an activation function that is sent out into the output which does exactly the same thing with the output of the hidden times the weights plus the biases pass through an activation function and then we get our answer is it true or false now I'm gonna try to take this algorithm and apply it in code and luckily for me I have already written all the code to do the matrix product so I just need to create matrices that have weights I need to generate an input I need to run through this math and look at the output I'm not gonna get a useful output in this video I'm going to get essentially a random output I do need to do the next part which is not going to be easy which is training the neural network adjusting law and tuning all the weights and biases so that the neural network learns what are the optimal weights and biases to output the correct that well correct is kind of a weird word to use here but this or desired output based on some training data so gotta get into all that training stuff later but here I just want to get the feedforward algorithm to work off I go alright so here's a find I'm realizing ie I need all these matrix videos to make my little matrix library and now I'm realizing there's something I really kind of needed which is that I mean I'm kind of gonna be ok with it here but I think it would be really convenient if my when I make a matrix if I could make one from an array and so what just really quickly I I don't like the positioning of this because basically what I want to do is this this input I want to be able to feed input into the neural network and I expect that the input is going to come in from a one dimensional array in JavaScript like I'm gonna generate an input because I pull it from a spreadsheet or something and but I need to quickly take that and make it into a matrix that has one row and one column in many rows so I need to add a function and I'm gonna make it a static function in this little matrix library I guess I'll put it red cut where I'm gonna call it static from array and I'm gonna assume that I receive an array so how do I do that what I need to do is I need to make a matrix that has the number of rows based on that array and one column I need to make a matrix object and then I can just say for let I equals zero eyes less in the arrays length I plus plus and I can say m dot data index I index 0 equals array index I now there's probably some and then I can return this matrix there's probably again I'm sure there's some way of using slice or something just to like sort of put the array in the right spot but this is my longwinded way to say okay if I have a 1 dimensional array let's make a matrix that has the number of rows for each spot in that array one column and then let's quickly put all the values from the array in all the spots in all those rows alright so we've got that so if we have that that assumes now I can call this feedforward function input and what do I need to do well first of all this neural network needs a weight matrix I need a weight matrix i need a weight matrix step stores the number of weights all the weights that connect all the input neurons with the hidden neurons and so I'm gonna call that this dot input let's call this weights input hitted now a naming is not my strength so I might come back and refactor the name for this later I could look up what it's called in this book that I've been again using to like learn a lot of this stuff and I'll reference again three one three blue one Browns video if you haven't watched the one about what is a neural network you might want to watch that first I'm implementing the code a lot of it based on the explanation in that video but I need all the weights that connect the inputs to the hidden and this is a new matrix that has how many columns and how many rows how many rows and how many columns is the way I should ask it because Rose comes first well for every input I need a boy I don't like I melt it out of my brain this is gonna be a little edit point for you Mattie oh I make sure I get this right so we this is I is the row J is the column so I need the number of rows or the number of the number of rows are the number of inputs and the number of columns why have I have I lost my mind here oh no this is there's hidden this okay is it number the number of rows is the number of hit call of the number of inputs the number of columns is a number of hitting neurons right okay I need a weight matrix that has us number of rows based on how many inputs there are and a number of columns based on how many hidden neurons are on and I kind of did a poor example of making this two by two so I don't ever see the difference but again there were another input I would just have another row right here of this of this particular of this particular matrix okay so I need to say this dot input nodes comma this dot hidden knows that's telling me the dimensions of the matrix stop factcheck tonight I got the wrong way around in it and I didn't even come over to this screen I totally got it the wrong way around ah come back to that again they're so hard you know if I were just doing this by myself in my office without like all these people watching on the livestream totally not make any mistakes I have heard really alright so if if there were another one of these right zero zero there would be another column because let's think about if there's only two here no I'm getting confused this is the end this is the inputs ah this is not the there would be another there was another input there would be a third one here so I would need the number of columns here to match the number of rows here so I would need another column here I would need another column here let's try that one more time go to the barbershop yeah the weight of I think the weight of my hair and beard is like dragging my brain slowly out of them through my ears so I need to make that weight matrix have let's think about this if I added another so this is I kind of done a problem here a little bit of a flaw here because this is 2x2 square it's so easy to like get mixed up but think about it if there were another input then I would need another column of weights so that the number of the number of rows matches the number of columns here so I should have the number of columns is the number of inputs I have and the number of rows is the number of hidden nodes so the weight matrix has the number of rows that is the hidden nodes and the number of columns that is the input nodes and it's so this is this is the number that when I create this neural network that's a 3 layer Network I'm going to set up the total number of inputs a total number of hidden not hidden layers nodes in one hidden layer and then total number of output nodes we'll see why you might want to have just more than one output node okay so those are the weights now I might as well while I'm here create the weights for between hidden and output again I'm going to think about the naming for this stuff later but the weights between input and hidden now I want the weights between hidden and output and in this case the number of columns is determined by the hidden nodes and the number of rows is determined by the output nodes so I have these two different weight matrices pause some factcheck me I got that right right right I'm waiting for someone to tell me that I got it right I probably should just have a little more confidence in myself today I feel like I have very little confidence in myself okay seems correct is good enough for me okay now I should also add in the bias I think I don't know why but I'm sort of like a kind of I'm kind of like I get to come back to the bias we've added it at the end let's do the feedforward algorithm for a second just without the bias and let's add that in in a little bit so a couple of things one is how do you cede the weights of a neuron when I create a neural network the whole point is I need to start with some set of weights and I'm gonna just start with random weights so I'm gonna say this dot weights ih dot randomized and this dot weights H o randomized so I would just put random weights in there again the whole point of doing this is to learn the optimal rates I'm gonna get to that in future videos but I need to start somewhere and by the way this is another area of active research like well how do you initialize are there good starting places like if you could start from a good place are you gonna have better results and random you know one thing one improvement that I've seen that I can make is I could just use like a Gaussian distribution of random numbers I should while I'm here though probably under randomize at least in that matrix function I think what I want is not I before I just made it random numbers between Oaks sorry I have the wrong thing clicked here random numbers between zero and ten but this needs to change I really want to have random numbers I'll say times two let's just do actually say minus 0.5 so that'll give me starting weights between negative 5 yeah whatever I'll do times 2 minus 1 times 2 minus 1 so that should give me random numbers between negative 1 and 1 so just to start with somewhere this is a good starting point for me having random weights whoops okay all right so now what can I do I can say let the let the input I'll call input layer equals matrix dot from array input so I first need to make the imp I need to make that a matrix and then I want to say let the hidden layer equal matrix multiply what do I want to do I want to multiply the weight matrix times the inputs this dot weights between the inputs and the hidden times the input layer now this I'm going to do this this formula right I kind of just did this part of the formula so I need to add the bias which I go back to and pass it through the activation function but I think I'm going to do this in multiple lines of code it's gonna make it a little bit simpler so I'm gonna put a comment here right now I'm gonna say hidden I'm gonna put a comment like add in the bias and then I'm gonna say hidden layer top map sigmoid right I need to take that hidden layer and apply the sigmoid function to it so I can use that map function that I wrote in the matrix library that takes a function and applies it to every single right this is doing the weighted sum this is creating the weighted sum and now I'm now I apply the sigmoid function now this is but if I run this code it's gonna say I don't know what the sigmoid function is so this is an area where what I need to do is write a sigmoid function and again as what I'm going to do probably later with this library is allow you to create a neural network that doesn't know that can operate with different activation functions there might actually be a variable inside the neural network that's just called the activation function but in this case I'm gonna write a function called sigmoid that takes X and then it returns what let's actually go and look at again I have it right here 1 divided by 1 plus e to the negative X so I believe in JavaScript I can say 1 plus wait wait who's that 1 divided by 1 plus and then I can from the math library the math library actually has let's look at this JavaScript math exp this particular function returns e to the X so this is actually such a common function that it's they're built into the JavaScript library but it returns e to the X I need to make it negative so X opponent XP negative X so this should be the sigmoid function so now I have the sigmoid function I've mapped it and that's now the hidden layer now the outputs are equal to matrix what we're like almost done with this we didn't so much work up into this point multiply this dot weights between what the hidden and the output times what times what the outputs of the hidden layer which is right here this is what I've now done hidden layer and then I can just return outputs now realistically I might want to return the outputs back as an array so technically speaking right we know that the inputs is an array the weights are in a matrix the outputs of the hit lair in an array times oh and then these weights are in a matrix and then the output is array in this case it might just be one number so what I could do is I just want the first column so can I say outputs oh I'm gonna oh I'm gonna say to array hold on but I didn't come back to the right screen anyway and that went off hold on are we on time here 1240 oh I forgot about it sigmoid oh and I forgot about sigmoid okay what did I do what's an easy way to turn the outputs because it's the second the column is the second dimension in the array how can I turn that I guess I could transpose that that seems crazy though I should guess I could write a two array function it's like almost eighty degrees can you see that I'm sweating it's like almost 80 increase in this room right once I've multiplied the weights times the output of a hidden layer I also need to apply sigmoid and now I could just say return output like this is it the input comes in turn it into a matrix create the hidden outputs by multiplying the weights map activating the sigmoid function then do the next weights to the output activating the sigmoid function return the output but I kind of want if I've said if I'm the end user of this library and I'm sending in an array for the inputs I kind of want to get an array back as the outputs so let's write a silly function to array which just takes any matrix and puts all the values into a one dimensional array and so I need to add that also to my matrix library which I can do to array and what I want to do there is let array equal an array and then if I just go through everything and say array dot push this date it now I guess I should be careful about how I'm doing this like I know how I want to do this if it's a matrix that's onedimensional I just want to have these in an array this one first this one second but if it's like this I probably want to do column column then the next row column column which is exactly what I'm doing here the columns in the inner loop so that should be fine and then say return array so this now is a function again there's probably some magical fancy functional programming array functions I could do to make this more elegant but this should work all right so guess what we're done except I remember I said I have to add in the bias and where I have to have to add in the bias here add in the bias so this is this is compute output of hidden layer right here and this is compute output of output layer so the only thing I'm missing now is the bias what is the bias the bias is another matrix just like just like the input so for each layer it's just a onedimensional array or you know one column one column multiple row matrix of random values and how I pick those random values and how we train the random values that's coming but let's come back to here and I can say I'm going to now also add this dot hidden bias equals a new matrix that has the number of hidden nodes for columns for rows and one column and this dot output bias is the number of output nodes and one column so why do we get we need a hidden bias an output bought bias why do we not need an input bias well again even though this is three layers this isn't really a layer in the in the truest sense it's just the actual raw input values as those go into the end layer all that math is applied with the bias as that output comes into the output layer all the math is applied with the bias for our final output okay so I should be able to also say now this dot hidden bias not randomized and again we might want to randomize the bias values in a completely different way but in this case I'm not gonna worry about that output bias dot and uh Mize and now where do we need to add that in I need to say hidden look we did them add in layer add hidden bias look at that oh so simple because we did all this work already right we have a matrix library that has an ad function that if you get an instance of another matrix you just add all the corresponding values if you get if you get an instance of a matrix you just add all the corresponding values so this is exactly what we want to do and whoops and it's done for us add the hidden bias and then here with the outputs at the output bias so I think strangely enough I'm done with this feedforward algorithm by no means am i done whatsoever with this series about building a neural network somewhat from scratch in JavaScript but I think I am truly done in terms of this particular algorithm now here's the thing this video is gonna end the next video ostensibly I'm gonna start looking at how to do the training process and I'm gonna use the XOR problem as a very simple problem to start with I wouldn't be surprised if I've made some mistakes here or want to fix some things up here so if that occurs and I get some comments and some feedback I will actually have another video where I do some cleanup or some alterations here before I get to that so the next video is either going to be the learning part or or the or fixing up this part but let's actually at least make sure I not any syntax errors we can't know whether we've gotten a good result or not because we have no test data to work with we haven't done the training part yet but I can at least now if I run this live if I let's let's let's go to my sketch I could write some test code so I could say hi I want to have a neural network call it NN be a new neural network that has two inputs two hidden nodes and one output node right and then what I want to do is create some inputs like 0 comma 1 and then I want to get the output the outputs to be neural network feedforward inputs right see this is the idea here we go machine learning or as I like to say trust Sheen kerning but anyways I make the neural network object my inputs are some data maybe that's eventually going to be some project and I'm really interested in that as exciting and interesting data that I've been thoughtful about and collected carefully and been transparent about how where that data comes from and how it works but all that aside here's my test data 0 comma 1 I want to feed that data into the neural network and I want to look at the output so now I'm gonna say console dot log outputs so here we go let's just see what happens ah input is not defined sketch line seven oh I need an S there that wasn't so bad alright I think this one is the sketch s line seven Oh input nodes what the no that's not a Vista I just assumed I have this dot somewhere never ever use this drum sound effect it only means I have terrible errors this might be this might be this time this is definitely a because I need to multiply in the hidden bias and the output buys the sigmoid is not this dot because I just defined it as a global function sigmoid just to be able to use it arbitrarily anywhere but so hopefully this is right now wait someone send me line 33 Oh out this should be outputs thank you save me from another error okay let's see here we go hey just watch to like very long convoluted poorly explained about neural networks and all you got was this number someone could make a tshirt that says I just watched your YouTube video and all I got was zero point two one zero three seven nine three three seven one eight six eight eight zero three four so we don't really know if I did it correctly because I haven't like done anything to test this and so if I find out I made some mistakes I'm sure we'll hear about them in the comments but I will certainly correct them in the next video thank you for watching okay whew yeah somebody please make that I definitely want to make that tshirt that I think would be a new patreon level yes a hard password Thank You Simon is telling me that I could transpose I could call the transpose function and then just take zero but okay hello Lebanon as amazing that someone from Lebanon is watching I love the International nasaw this audience okay so it is in some ways the end of today's livestream however it is not because even though it's like 79 degrees fahrenheit in this room apologies for being now the other thing is I'm gonna want to use the whiteboard for my coding challenge I don't think there's anything here that I really need to save so I'm gonna do the image stippling coding challenge before I leave I like to have four I like to make four like each live stream to make four standalone videos my goal is like live stream on Friday new video Monday Tuesday Wednesday Thursday that's kind of my goal for the channel so if you don't mind listening to my erase the whiteboard music totally should I kind of loved the idea of that tshirt and I so I definitely feel like the video where I wrote the code is fine but it's possible I should redo the whole explanation video I will wait and see I've definitely made worse matches edited together videos with many more mistakes and confusion than that one I won't have time today to do a video about Jekyll and how to contribute to the new coding train website that I showed at the beginning of this livestream but there is a lot of information about it on the github repository and I would love contributions in the form of code or visual design or interaction design so please consider that is something if you have some time and are looking to learn about contributing to an opensource project I should get a fan I need to send an email and figure out because maybe the climatecontrol it's actually not on in this room all right thank you for that snapshot of the whiteboard Matthew Braun perfect all right ah question what's a good sample image for me to use for doing this Oh a cat I'll use one of my kittens it's not one of my kittens where are all those images sorry I'm Alka yes I am implementing a dither algorithm so this isn't really maybe an image stippling challenge I'm gonna do a dithering challenge and then I'll maybe I'll do a part two of a part two so this is Floyd Steinberg dithering that's what we're gonna do and I need to find the cats I had from where are those cat images they were in the like kittens so this is here we go oh these are like low resolution because I'm Chrome extensions here we go kittens all right we're gonna do a strawpoll I'm picking the kitten one he's actually numbered you know what I'm just gonna pick nonce that one two three four five no there's only four I mean what's gonna work best this one's probably gonna work best I think this one probably works best for the for doing a coding challenge alright so let me quickly make a I want it to be square well I want it give me a pixel values in both oh so annoying right I have this nice little Prius I just can't see it mm six six six three eight four no let me just get something relatively close to getting the cat this is too many pixels let me hold on we make a copy of this kitten tools image size just like it like a thousand or something it's 1,200 just so I have more to work with and zero and now this is like the worst way to make something as square if I just open up Photoshop I know how to do it six three four five six five three there we go drop close enough tools adjust size 512 there we go there's my kitten oh I could do shift for square Oh I'm the worst oh it makes it a square Thank You Alka amazing let's go from here and do this it's so hot in here I cannot even express to you opening the door I'm just doing the setup here kitten I need to save save this now I each open up processing can't believe how much time who spent trying to sew is high contrasts yeah I think this will work contrast wise I think this will work so I'm gonna call this dithering dithering dithering dithering oh you know what I'm kind of wearing the perfect shirt for this and since it's so hot hopefully audio wise this won't affect things too much let's see here how's the sound the sound okay is the sound okay my wife gave me this shirt I need that kitten image where did I save that kitten image documents downloads desktop through the Ring a new folder all right ten challenges left before coding challenge number 100 oh boy alright so let me think about this what is let me understand what is the true definition of image stippling creation of a pattern simulating varying degrees of solidity or shading using small dots so this is that this particular dithering algorithm is a form of stippling but I think almost what's more interesting an example of image stippling is like look up at Robert Haugen why do I keep closing that door before I'm ready I'm closing that door before I'm ready it's like a reflex thing oh yeah here we go so these are some interesting examples which I will reference and then I will look at this algorithm and then yes okay okay and did the ring is what's the definition of dithering besides this be indecisive yeah add white noise huh did there yeah okay look at this the same thing one bit to the ring okay noise to random quantization here are blue alright well who cares about these definitions all right I'm ready for this challenge gradation using dots okay thank you all right is alka a real person all a good question okay let's get some air in here okay here we go hello welcome to today's coding challenge today's colleague challenge is to implement Floyd Steinberg dithering dithering dithering dithering and I'm going to do this dithering which is the thing that I actually spend most of my day just doing about I'm gonna do this dithering in processing which is a Java based programming environment works great for graphics I can load images that can replace souls which is what I need to do now the reason why I'm doing this is because I'm interested in this overall topic of image stippling which is a way of making an image basically out of dots and just as one reference for this I'm going to show you the work of Robert Haugen did some interesting attempts to do image stippling using like particle systems moving around and forces between the particles and I'd love to think about that as a followup but I'm going to in this video look at a particular dithering algorithm a way of quantizing an image and looking at errors and I'll kind of get to that as I go through it to get this type of look for an image but I do want to think of this for at least for you as a beginning step because if I could make this what if I consider all of these dots to be particles that can move and experience physics and go and find another place for another image there's a lot of possibilities there so let's get started so I have a blank processing sketch and in the folder I have a data folder and I have this image of a kitten which is 512 by 512 pixels so the first thing that I want to do is I just want to write a simple sketch where I have ap image object called kitten and then I say kitten equals load image and the name of the file is kitten dot JPEG and I am going to make a window that is 1024 by 512 so that I can draw the image of the kitten at on the lefthand side and if I run this we should see oh boy that image is that kitten is not 512 by 512 I must have missed something up so let me go in here and say tools adjust size 512 there we go little smaller and there we go so what I want is I want to be able to look at see if you see the original kitten here and that I want to see the did kitten on the other side so how does this algorithm work well fortunately for me among this Wikipedia page which explains it and it's got it right here but before I get to that let's talk a little bit about some of the things that have to happen for example in the pseudocode there's like this lance's find closest palette color what's that mean and then there's like this quant error thing so let's discuss sort of on the whiteboard what some of these pieces are so if I have an image an image is just a grid of pixels any given pixel having a column row location and I might think of that as X comma Y right it's in the X column 0 1 2 it's in the Y row 0 1 2 reason I picked the pixel 2 comma 2 I mean it has a color typically that color is going to be an RGB color meaning it's going to have some red value some green value and some blue value the idea of quantizing and image so typically speaking if I'm using the full range of digital color I have a lot of possibilities I have 0 to 255 256 possible Reds 256 possible greens and 256 possible blues but what if I wanted to reduce the number of possibilities what if there are only 4 Reds 0 1 2 & 3 4 greens I would have and I take an image of an original color take an image of that has the original full colors and I reduce it to a smaller instead of colors and this kind of process is applied to to make images most smaller file sizes and to do various kinds of effect so action let's just do that first and actually what I'm gonna do is quantize this image so that there's only two possible colors there's basically zero red or 255 red 0 green or 255 green and 0 blue or 255 blue so there's really 2 times 2 times 2 possible colors 8 possible colors so instead of 256 to the third power colors I want to see what does this image look like with just 8 possible colors let's make that happen first and we'll see later why that's part of this algorithm so the way I'm going to do that is I'm gonna operate on the same kitten image so I'm gonna do is load the original image and display the original image and setup then operate in on it and display the new image and draw you know there could be some animation stuff that I do or a different order but I'm gonna do that as a simple thing for right now okay so let's the first thing that I need to do is I need to look at all of the pixels and here's the thing even though I could just the pixels are stored in a one dimensional array so but I do want to say look at all the X values kitten and and based on that images with sorry I lost my what I was doing here for a second so I need a nested loop to look at every pixel for every X and for every Y so this is going to allow me to look at a given pixel from the kitten the problem is the pixels are actually stored into one dimensional array and I need and I want to think about the pixels as their XY positions come to need that later luckily for us there's a very simple formula X plus y times kitten dot with and I go through this formula in another video that I will link to from this video's description if you want to understand why this formula takes an X Y position and gives me the one dimensional location in the so here's the thing in order to quantize this image this color this color variable is actually just a big integer and I need to pull out the red value of the pixel the green value of the pixel and processing has these nice helper functions that if I just pass an RGB color to the red function I get the red value and the blue value of the pixel now how can i quantize the image basically what I want to say it's kind of like a threshold effect I want to say if if the range of college between 0 and 255 if I'm above 127 just make it 255 if I'm below 127 just make it zero and so I could use it if statement for that but there's actually kind of a fancy way I could do this let's say I take so I'm gonna say the new R is going to be equal to let's say I take the current R value and divide it by 255 what does that give me that gives me a number between 0 & 1 well what if I just round that number so if that number is 0.5 it'll be 1 if that number is 0 the low point 5 it'll be 0 so I can actually use the round function and then I could just multiply it by 255 so this is basically giving me two only two possible numbers no matter what R is I'm either gonna get 0 or 255 and I can do the same exact thing for G and the same exact thing for B and now what am I going to do I want to say kitten dot pixels index equals a new color with those values so this is me just saying pull the RGB values out quantize them to a smaller number of possibilities and make a new color and set it back to the pixels okay so and you know I've forgotten something kind of important which is that when I operate on an image in processing before app and operate on the pixels I should say kitten dot update pixels and then when I'm done I should say kitten dot no no no update pixels is when I'm done and before I operate on the pixels I need to say load pixels like lo pics are the same like hey hey you I want to work on the pixels right now update pixels saying hey I'm done but I'm done I'm done so now image kitten 512 comma 0 so I should see the quantized version on the right and the original image on the left let's see this looks pretty good right this kind of makes sense like if I only have a certain number of possibilities this is what I'm left left over with we can you know let's well interestingly enough what happens if I already right before I do any of this make it grayscale so I can just quickly filter that image and make a grayscale with the filter function and processing we can run it again so we can see you can see how this is working now there's only two possibilities it's either white or black and so this is identical to a threshold in effect and here well whoops let's let's leave that in but comment it out because we'll come back to it later now interestingly enough while we're here what if I want to have more possibilities oops since I had a little pause there let me see okay I mean just checking the chat to see if I've made something weird okay what if I want to have more possibilities what if I actually want to have instead of just two possibilities for each color four possibilities for each color well I can do something similar for example what I could do I think this would work right what if I multiply this by 4 and then divide it by this and divide 255 by 4 let me just put this in here usually don't like to do this and then let me explain it think about this what I'm going to get now is if I'm multiplying this number that's a floatingpoint number between zero and one by four and I round it I'm gonna get a zero one two or three right those are the only things I'm gonna get zero one two or three now I want to scale that up to basically like what are four possible colors in between zero and 255 so this also and this I was going to say I have to put floor here but luckily I don't and this is gonna really trip us up later if I'm not careful RGB our floats so this is going to turn into a float round will turn the result back into an integer zero one two or three can I get for ya I could get for this is actually giving me five possibilities right because if R is zero I'm gonna get zero so this is actually interesting enough giving me five possibilities 0 1 2 3 4 4 5 possibilities just like multiplying it by one gave me two possibilities zero or one so I'd actually have five possibilities here and then I want to scale that up this though this is an integer this is an integer it's going to give me an integer back so and what I might like to do here just to be like protect myself here a little bit is I might want to say nu nu R and I want these to be sure that these are integers because I'm quantizing to just a few sets of possibilities so this is indeed this is indeed an integer and so now so now I'm going to say a new r nu g newby newby so let's now run this and see what happens there you can see how now I have more color possibilities but still I've reduced the image to a smaller number of colors five five this was actually 5 times 5 times 5 so 125 possible colors I think not very many colors ok I should probably make this a variable call it like factor and I'll set that equal to four and put this in here and the same number goes here if I've done this correctly and if we run this it looks like this if I set this to be one it looks like this so this makes her if I want to do something interactive here I wouldn't want to operate on the original kitten image I want to have a separate image so I could like change it on the fly but I don't need that for right now okay so we've done the quantizing part now the other thing that I need to understand is the quantization error is that the right way to say that I'm not entirely sure but what I mean by that is let's say the actual let's look at a particular example the actual color is 255 comma 100 comma 10 look this is an actual color or if I were to reduce this color with one with two levels with a factor of one two levels I would get to 5500 right because this would round up to 255 this would round down to zero and this would round down to zero so the error is the difference between these two this minus this is 0 this minus this is 100 and this minus this is 10 that's the actual error let's let's let's do this a little bit differently let's make this 150 just so we can see so this would then be 10 but this would round up to 255 so the error would be negative 105 right so you can see this is calculating the error the reason why I need to work with this error and let's put this into the code real quick so I'm gonna say here err err err r equals nu r minus nu r error g equals g minus nu g and error B equals B minus newby newby okay so so the reason why I need this error is let's go back to that Wikipedia page basically this algorithm achieves dithering tillering using error diffusion meaning it pushes the residual quantization error of a pixel on to its neighboring pixels to be dealt with later so in other words it just keeps ah it's so different put it on it's kind of it keeps pushing the colors further or further apart away from each other kind of based on the error and so the pixel indicated with a star indicates the pixel currently being scanned and this is the amount of error it passes to its neighbors so in this case oh and what's kind of the order of matters here for each y from top to bottom for each X because I'm actually pushing the error based on pixels to the right bit so actually so the pixels that I'm using are pixels this is a pixel to the right this is a pixel to the left and down this is a pixel down it's kind of like the pixels on the bottom right of the image so let's check this out for each y from top to bottom no I have X so I need to do Y first that's going to make a difference so right now let's just make sure this still works it still works but now I need to start doing this error thing so for each so now this is what I've done already right I've gotten the the quantized pixel like I've done this part I calculated the error so all I need to do is start like funneling the error off okay so how do I do that let's actually grab this and put it in our code right here and let's comment it out comment that out and let's put this up here right this in fact is that whole first part of the algorithm this whole first part of the algorithm matches exactly with these three lines of code right here right I look at the old pixel I get new pixel and I said it and then I find the error so I've done that already now I just need to do this part so doing this part is hmm so first I need to say okay so here's the thing let's you know how I have this formula here X plus y times kitten dot with let's make that actually a function I'm going to call the function index and it just takes an int an integer Oh exit oh I should probably take a whiff too but I'm gonna be sort of silly about it and it's just gonna return because I'm gonna need to do this a lot X plus y times kitten dot with y oh and it's not a void function it returns an integer and then I'm gonna do this index X comma Y so what I'm going to do is like whenever I have an X Y I could just quickly get the index and return it and that will be the correct index into the pixels array I could have made this two lines of code but I think I think we can follow us I could follow this hopefully you can follow this because the reason why I just did that is because I need to say kitten dot pixels index X plus one comma Y right I am rewriting exactly this pseudocode right here and why okay so that's so I need to do this two x plus one comma Y I need to do this 2 X minus 1 y plus 1 I need to do this 2 X y plus 1 and I'm sure I could do this in some kind of like loop or something but I'm just going to write it all out right now just to know that it works X plus 1 y plus 1 so and like if I just for a second put zeros here just so I don't have any syntax errors and put a semicolon here semicolon let's just see okay great so this is what I'm doing and I'm gonna be kind of anal retentive about this and add some extra spaces just so it all lines up so I know I need to operate on these four pixels that's what it's telling you down here and what do I need to do this is the important part so this gets the the if you can see that these are all getting parts of the error seven plus three plus five plus six is 16 so this is getting like you know almost half the error like forty high 40s percent this is getting like a little bit of around a little less than a quarter of the error so okay so this amount is important so for each one of these I actually need to make a new color so I need to say so I need to mmmhmm I'm gonna have to do this with our I have to for everything have to do this with an RG and a B so when this is gonna be index XY here as well so now what I need to do is let's think about this I want to get a another new are I already used the variable name new are and I already called it an integer so uh let's okay let's say I'm gonna okay let's I'm gonna have a color called see I have an idea now I'm gonna rename just so I have different variable names I'd make this old are old G old be sorry for all this variable naming up old are old G bold be and then old old old okay so the reason why I'm doing that is because this is what I want to do I'm gonna actually say int index equals this index then color is kitten dot pixels that index now kitten dot pixels that index should now equal R equals red see red of see G equals green of see B equals blue of see it should equal and that our shouldn't how equal that I got it I got it I got it r should equal itself plus error r times 7/16 times 7/16 do you see why this is so what I need to do is I need to do this for our G and B G B G B G B so what I have a mistake here but for each one of these and now I set it back to the color I'm passing the error so let me look at that color get its RGB past part of the error onto it and then set that new color okay so the thing that's wrong with this is 7 divided by 16 is what I said it was like almost 50% almost point 5 but it's actually zero because both of those are integers so I need to be very careful and say 16.0 I need to at least explicitly in job in JavaScript I wouldn't have this problem and you'd explicitly say point zero because I want that to be a float so now I just need to do this with every single one of these so I need to do this over and over again four times and each time I do it I'm going to just use the same variable names but not read eclair them I don't love this style but it will do so now I need the next one is X minus 1 y plus 1 and the next amount of error I want is 3 comma 16 3/16 so 3 so I'm going to do that then I'm going to do what the next one is X y plus 1 X Y plus 1 and the amount of error is 5/16 X Y plus 1 is 5/16 then the last one and I can get rid of all my notes here from the pseudocode the last one is X plus 1 Y plus 1 X plus 1 Y plus 1 and 1/16 of the error okay I think yes yes I could make a function there's so many ways this could be cleaned up and I appreciate people who are watching this live different you good feedback I believe that is an exercise to the viewer I just want to run this right now okay so I have an array and there's Oh what is my problem here look at this I am looking at every single pixel but for every single pixel I'm dealing with neighboring pixels right I'm dealing with things like for this pixels XY I'm dealing with X plus one comma Y which is this pixel it's one over an X the same Y but when I do this there's no pixel over here so I need to deal with the edges and I could be thoughtful about this but just to get this algorithm to work let's look at these I am going to the right and the left but only to the right of Y only down Y wise wise so I can start X 1 if I start at 1 I'll always have a neighbor to the left and I can go all the way up to minus 1 meaning I always have a neighbor to the right and for y I can I can start at 0 because I never look up and I can go over this way so now let's run this and I really should I've learned my lesson so many times to not use this drum roll effect so I usually have some mistakes but but try it right now hey I think I kind of got this yeah look it's sort of hard to see cuz there's so much crazy detail in the outside here but I think did I leave the factor as one I think this is right you don't ease your way for me I'll see if this is right is let's filter out let's juice the grayscale one and look at it yeah it's definitely right so you can see this image is now kind of dithered so to speak you could ask the question using a lot of white dots is it a lot of white dots on a black background or is it a lot of black dots on a white background the truth of the matter it's neither all I've done is set every pixel to either white or black but I've made it have this appearance of being like a lot of dots next to each other and so the question here is how might I take this like if I used a lower resolution image drew the dots as ellipses and then blew it up what kind of other visual effects could I get here and we could see this we could kind of look you know if I change the factor to four and ran it again you know you can see that it's the same sort of thing is happening it's dithered but I'm only now I have I think five different gray possibilities it's a white white dark dark gray light gray medium gray no dark bright great gray I don't know what you get the idea so I think a bit rate is an issue here so ah I think I've done something which is that this video is not gonna work very well on YouTube because you're not really gonna be able to see this detail but I think if i zoom in right I think you can you can kind of see hopefully you can see see this detail all right so what could you do with this I'm gonna stop here I'm gonna go back to taking out gray let's look at it with so you can see here this is dithered but now many different RGB colors maybe 125 RGB possibilities I think so what could you do with this I and I'm gonna actually leave the code with one and leave the grayscale in what I think could be interesting is number one work with a much lower resolution image but display it at much higher resolution and maybe draw ellipses or particles as each one of these dots whether it's a black dot or a white dot draw it with some texture some image or something what if those dots somehow are the seeds of a particle system and then I think eventually I want to come back maybe I'll do a followup challenge like that but those would be some exercises that I would try you can read over a link also to Robert Hodgins description of this stippling you can see the particle checks the pixel array to see what shade of grey needs to represent if it shows blackness it grows smaller and it's magnetic charge diminishes it fits white it grows larger as does its charge so this is kind of like a force directed selforganizing physics based system that creates these white and black dots to represent an image you know and certainly a I will try I will create or somebody will pull requests for me a JavaScript version of this so that you can also see a version that runs in the browser although the pixel array works differently in html5 canvas and in p5.js and pixel operations in the browser unless you're using shaders or some kind of advanced technique often are very very slow whereas in Java and processing that can operate quite quickly all right thank you everybody oh if I stop moving I'm told it's just to show this to you I'm told that if i zoom into it and then I stop moving it will resolve this will be the thumbnail let's get that mouse out of there this will be my thumbnail okay thanks for watching alright everybody I am finished today I'm finished today it is 130 I do have to go I haven't had lunch this has been a close to three hour livestream which is usually about as much as I can handle I will read some random numbers I don't know I I had the system where I was like going through it and remembering where I left off I don't know what to do about this random numbers that maybe I need new shtick I think that cat image should be for behind me here I'll stand right here in the white area fifty nine thousand five hundred and thirty six for those of you who are in Europe actually Europe it's only like dinnertime those are you are somewhere in the world right now where it's bedtime lie down relax I will read to you from the coding train bedtime story a million random digits with a hundred thousand normal deviance twelve thousand five hundred twenty sixty three thousand two hundred and forty sixty nine thousand and maybe eight eleven thousand eight hundred and thirty six sixty three thousand nine hundred and thirty five forty eight thousand nine hundred and fifty eight ninety three thousand and forty six thirteen thousand five hundred eightytwo that was it alright okay I will take questions from the chat for about two twoandahalf minutes so you can post your questions in the chat now I will remind you pause let me just remind you I don't have time to go through this in more detail the coding train github is rainbow code this is the new system for compiling every single video a page for each video links relevant to the video contributions from the community the live stream schedule everything now should be is on this new website which is a github repository rainbow code and if you would like to contribute to it please take a look at these github issues I should probably label the ones that are website related as a post that are just like code example related so that's something I should and you can also look on the wiki that has a guide for contributing and I would love as much help as possible with this thank you again to Niels web on github who just had the idea to make this website and it's amazing and in particular some visual design or interface design user experience design that I think would be helpful okay so in if you want to support the channel you could go to patreon.com/scishow to you will get an invitation to the slack group where I have my first question what was your first computer good question my first computer was an Apple 2 plus I believe I was in second grade at the time I grew up in Baltimore Maryland and I was an Apple 2 plus and I learned a little bit about programming and basic on it when I had it I was not I never really did programming more than just a tiny bit until I was a 28 or 29 but in second grade and did a little bit and in seventh grade and in a little bit and I did basic in second grade yeah Thank You Gil for your donation I appreciate it did you take computer science in school it did not I have never taken a computer science course I did take I did go to the graduate program here at ITP where I took introduction to computational media which is a learner program computer science like course through the lens of media and art will go to the barber shop what is your morning beard vet Eugene I take a shower wash that's it do I play any video games yes I recently I have two children they are six years old and nine years old we recently over the holidays acquired a Nintendo switch so far I have played a lot of just dance snipper Clippers and Mario Kart and today arrived in the mail Mario what's it Super Mario Odyssey so I've not played it yet but I will play it this weekend he's toying around especially for my all my just dance moves I've all I've learned some new dance moves I have to switch to a different song what's a good one this is work this is a new dance move either from jest against some other ones too like all right whatever I can't do it but I've been playing I love Just Dance it's the thing about the game that's ridiculous though is unlike like a Kinect tracking game which is doing some full skeleton it's just kind of I assume using the accelerometer and the control that you hold your hand so you can almost do nothing you just move this one hand around and get just as good vice Kors if you did all the dance routines move all right that was about a minute in I think so I don't know if people would watch a gaming channel for me and maybe with my kids involved I'll consider it what does your school think of these videos and patreon any legal issues others should know if they want to do something similar I'm definitely operating in somewhat of a gray area here I advance I do have the benefit of being at an art school so I think it's different and so I consider this work that I do you know that there's other departments here Tisch like the dance department and the film school and the TEL and a lot of people who teach make movies or make TV shows and I make youtube videos and I've been ITP so I consider this an extension of my research and professional practice it's complicated and confusing and there's certain things that I probably am and I'm not allowed to do I don't really know what those things are I'm just experimenting and learning and would somebody tell three I can or cannot I will rethink what I'm doing but yeah I do have a lot of support from my department ITP in learning about this and making videos and I really am also you know I'm trying to use this channel as a place for other people to feature other people and tutorials and that type of thing as well are your children interested in programming I guess I should just let this play while I'm talking I pause for every question never be done yes they're there they're interested you know I think most of my time as a parent has been trying to keep them away from technology at least as they were very very little I think that there's hard to replace the wonders of the physical world and the companionship of other human beings but you know now that they're you know getting a little bit older and almost towards middle school age one of them at least I think it's working with computers and learning about programming as a wonderful thing to do not to the exclusion of other things but could you write an OS if you wanted seriously doubt it no can you do a JavaScript tutorial without p5 I probably could and maybe I will but I you know that's not really my wheelhouse so much but I appreciate the thought kid what was your first programming language asked Simon in the slack group my first programming language was basic when I did a little bit of it in second grade but I think I just did it a tiny bit then then I believe in middle school I used assembly language for a class that I took and maybe a little basic again but then I didn't program all the way up until I was 28 or 29 I have to look at him I can't remember and the first programming I learned then was actually with the lingo programming language with Macromedia director and I recently got to meet John Henry Thompson who created the lingo programming language and is I this is not his current website well here it is who's amazing and is working on a lot of really interesting projects if you don't know about John Henry Thompson learn about John Henry Thompson's work so many things that I'm doing that we're doing now come directly from all the work that he did with the lingo programming language Macromedia director and many other things and he's working on a project right now called dice I saw a presentation distributed instrument for computed expression so I encourage you to check this out it's wonderful how old are you 44 how is your elbow it is doing much better you can see my I mean I'm basically recovered although I don't have full extension but I do have full and I still have a little weakness I'm still doing some physical therapy exercises but I would say I'm pretty well okay all right I've got to go now I will just take these last two questions are you currently writing planning new books no but the three book projects that I would like to do if I had time were one nature of code in JavaScript which I may actually get to a version of learning processing but like an intro book but with JavaScript and the third one would be a book all about programming with text as data so algorithms for generating poetry or analyzing texts and that kind of thing so by the time that's what I would do but right now I need like a big block of time to just focus on something like that so I speak a little bit of French okay so anyway thank you for watching everybody I will see you next Friday I expect next Friday will also be a morning time around this time but stay tuned I announced on Twitter when I have a time I post it on this new website or you know I'm making out in this whatever I try to announce everywhere and schedule it on YouTube as best as I can so thank you have a wonderful weekend the edited versions of all these videos will come out next week and I look forward to seeing you all next time on YouTube goodbye