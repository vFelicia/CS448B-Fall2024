welcome to today's coding challenge today's coding challenge is to build a web application that allows users to make a little doodle drawing in a canvas and then have that drawing saved to a firebase database and then create a gallery of all those drawings are a way for users to like click and find their previous drawings something like that so the first thing I need to do and I'm going to use it I'm going to use first of all you might want to check out my shared canvas tutorial series which showed how to have use WebSockets to have a kind of collaborative whiteboard so this is kind of connected to that in some ways but I'm gonna use the p5.js javascript library for canvas drawing and I'm gonna use firebase for saving the data and I have a whole tutorial series about firebase if that's new you could go back and watch those and then come back here if you like deep breath okay so actually I already have a little usually I do these coding challenges with no code whatsoever but I have a little bit so far because I have the firebase configuration stuff already in my code because I don't want to have to like type all that out and if you want to know how to get this fire base configuration stuff go back and watch my firebase tutorials okay so the first thing that I need to do is I want to I'd make the canvas a little bit bigger 400 400 let's just actually do 200 200 and then I'm gonna make a draw function and I'm gonna add a background so now I want to just see that I have a canvas perfect so now what I want to do is figure out a way to store points as I click and drag the mouse hmm let's see so let's use the I think I want to use the I think I could just do actually I'm just gonna do this a little bit silly this is gonna fix this later but I'm it just used in the draw loop if mouse is pressed then I need to have I need to create an object which is a drawing and that object and actually I'm gonna make that object and array right because i drawing is gonna be an array of points let's just start with that if mouse is pressed drawing dot push and I'm gonna say I'm gonna save our point equals an object which has an X which is Mouse x and a y which is Mouse y and I want to push that point into the drawing so now if I drag the mouse around and I look at in the console that drawing object you can see it's a big array of all these x and y positions so obvious I would like to see something where I'm drawing so I can say I can write a loop to look at everything in that array and I can say at the beginning I can say begin shape at the end I can say n shape and these are all p5.js functions then I can just say vertex drawing index I dot X drawing index i dot Y and I can say a stroke 255 stroke I'm gonna make it kind of thick stroke weight 4 and no fill so I'm gonna make a generic path just a shape with no fill and as I do this I've got the dry now look what's happening though every time I lift the mouse I only have one array so as I add new points it connects to the previous ones so I got to make this actually a little bit more sophisticated what I want and this is I didn't do this in the shared canvas example but I'm gonna do this in here what I actually want is every time I press the mouse I want to start a new cycle of drawing so I'm actually going to create tie some events I'm gonna say canvas mousepressed and I'm gonna say start drawing and then I'm gonna say canvas mouse released and I don't need to start drawing I don't know I'm gonna call it start path like the drawing is going to be an array of paths n paths so what I want is I also need a variable m to call it current path which is also going to be an array so now I need a function current path a start path and what I'm going to do there is I'm say current path equals array what I want to do now is end path I want that current path to get added to the drawing drawing dot push current path so when I press the mouse down I starting a new path when I release the mouse I've ended that path and that full path that array goes into the drawing so these points don't get added to the drawing they get added to the current path so if we look at that now here I'm not loop I'm looping through the drawing and then the drawing is now I need two loops an array of paths so for every drawing I say a path equals drawing index I and then for every and then I need to I can't use I again for every spot in the path set a vertex and begin shape should be here which I should have a begin shape and an end shape for each path ok so now I kind of changed a lot of stuff who knows if I have some bloods in there I'm sure I do I always tend to have bugs but the idea here is that the drawing is now an array of paths and each path is an array of points so let's see what happens now the only thing is I don't see it until I release because I'm only drawing the path when it's created so I also want to make sure and there might be a more efficient way that I could do this actually all I need to do this is actually really easy as it I actually just want to I actually don't even need the end path because I want to put the path in the array oh no sorry sorry sorry that I moved the wrong thing ah whoops current paths push point right the drawing can get that current path as soon as it starts I actually don't need to tell it when to stop because oh I shouldn't I could be using if mouse is pressed here I could just get I was gonna put a different variable and to know when I start and stop but so I actually don't need to tell it to stop because it'll stop as soon as I release let's see if this works n path is not defined so I think that I don't need this release anymore that could be useful in other context and I can do this there we go so this is a full drawing and we can see what is the drawing the draw is four different arrays this array is 43 points this array is 46 points this array is 29 points so now I have a thing so all I need now is a Save button because if I have a Save button I can now send this drawing to firebase that was the whole point of this video in the first place so I have a little doodle machine and now I need to save that drawing to firebase and you can imagine by the way you could add color to this all sorts of things I'm checking to make sure audio and everything is working okay so let's think about I have the firebase code when do I want to send the drawing to firebase okay so I'm gonna add first of all I'm gonna do stuff in HTML here so I'm gonna do div ID equals a canvas container just to like have the canvas placed in a particular div and so when I create the canvas I can say canvas parent canvas container there we go yay so that still works and now what I want to do is add a Save button button ID equals Save button and say save so I should see now a button that says save so now all I need to do is in my code I need to get access to that button so here in setup I want to say save I probably don't need this as a global variable so I'm gonna save our Save button equals select the ID I called it Save button and then I could say save button mouse pressed save drawing and I'm going to now I need a function I'm just gonna put it at the bottom function save button save drawing and at the end in this function what do I need to do I need to connect to firebase so I need to make up a new reference I'm gonna call it firebase dot and we'll call it drawings and then I need to do what reference dot push current Oh what the drawing it's already and I'm like well what object do I put it's already in an object now I wonder if there's an issue if you know there might be some metadata that I want to also add to the drawing or something in which case it might actually make sense to make this an object like like what if I wanted to put name like later what if I wanted to have the name associated with the drawing so I'm just gonna do this right now and I'm just gonna have the name hardcoded in there sorry I have an issue where something came up on my previous screen here so so this is just to show you that later in case you want to add other data that I can kind of wrap it in an object so what I should see now when I so I'm gonna make a drawing and I'm going to write my name de hey and I'm gonna put a little rainbow on top for whatever reason i'ma hit save and I got I got an error Oh firebase reference is not a function and look at this by the way I have a real problem where I clicking this like extends the drawing so that were obviously gonna have to fix by it's not it's database dot reference so let's fix that other problem to this start path is happening it should happen only when I oh now see is this is a problem mouse is pressed is a global variable across everything so this is why this is why I need the released event so what I need here is to add released again and I need a boolean variable like I'm gonna call it is drawing it's gonna be set to false and when I press the mouse so only if is drawing is true should I be adding points so when I start the path is drawing equals true and when I'm done is drawing equals false and that way when I click on the button it doesn't think that I'm drawing so let's try this again and let me also by the way just to see that I'm gonna show you one thing that I didn't show in my firebase tutorials which is when I send the data where do I do that I can also have a call back I'm gonna call it data sent and I'm gonna write that as a separate function of course I could use anonymous functions but status and I'm just gonna say console.log status so that should give me a success message and I'm also gonna say var result and I'm gonna say console dot log result dot key just to see that things are working so let's try this again I'm gonna make a nice rainbow and I'm gonna hit save I got a key I got a no probably cuz there wasn't an error so there's probably this probably is like error status but let's just assume that it worked let's go to the console oh my goodness so by the way this is what happens when you publish your keys on a live stream and have public security rules other people are creating entries in the database I'm not gonna go in and look it's just in case there's some unpleasant language in any of them but thank you for all your hello messages into my database I'm gonna go into drawings and look at this drawing you look named an drawing and you look at it's an array the first element has all of these points in it the second element has all of these points in it so all of the data for that drawing is now in the database we're done I mean we're done with half of this okay for the next step in this particular application that I want to do is create a listing below of all the available drawings and a way that I can click on them and see them and I'm going to do this right here now in this coding challenge so something that I can do is that I can create and I show this in my firebase tutorials is I can create a I can say database I can I can look at the reference database dot ref drawings and I can say ref dot on value which is an event that will get triggered whenever anything has ever changed in the database ref on value got data error error data in case there is an error and now I can just have a call back and I'm gonna go all the way down to the bottom again and I'm gonna say got data like and I'm gonna say air data and just in case there's an error I want to be able to see that in the console and now in got data I want to say var drawings equals data Val and then I want to get all the keys object object dot keys drawings and then I want to iterate over all the keys and say console and each key is keys index I and I want to look at I just want to look at the key first so I'm just gonna look at all the keys let's see if this works so now we can see that that came out here in the console the key for one drawing you know to make another drawing heart that's a terrible heart save and we can see I now got two keys and I can actually add and I can actually make a whole nother end three just for this drawing and I could hit save and now I have three keys and I don't know what I got undefined for but I'm not going to worry about that right now so hopefully if I go back to the firebase console we can see that there are three drawings in here now and everybody else hello everybody has hacked my database and is giving all these hello messages which I love to see hello Oklahoma where the wind falls I really should I'm such a I'm not showing my musicaltheater stripes here by like getting the lyrics wrong to Oklahoma someday I'll be able to reference that better okay so now what I want to do is create a clickable list here where any of them that I click on I could actually look at that particular drawing so what I want to do is go into index.html and and I'm going to add a ordered list and I'm going to give that a ID like drawing list and in the code I'm going to instead of console logging the keys I'm going to say an ela I'm going to create an Li element and it's going to it's going to just have the key in it just going to do that just to sort of like see that that works and I'm going to say Li dot parent drawing list so if we do this if i refresh this page we should see that the drawing the the elements are down here I have those drawings ordered by key and I should probably give them a name would be again I could add name to this which would be a much better thing to display or date created all sorts of things that you could think about doing after the fact if you want to improve on this but what I really want to do is make those clickable so I'm gonna just make this I'm gonna actually make this an empty an empty element and I'm gonna create a span element with actually I'm gonna create an a element a link element which is create a with the key in it and then I'm going to create an event called show drawing so and then I'm going to parent that to the Li elements so I have a full list the list has Li elements and inside each Li of element is a link and when I click on those I should show the drawing so now I need a function called show drawing and I just want a console dot log this dot HTML so we should see I just want to see the content of what's in when I click on it the HTML function will give me the content of the Dom element associated with this event oh boy made this compliment Oh undefined undefined undefined well look at that click oh boy tried to go to a link okay so what do I need to do here so I should create a ohohoh that's where it's going and it's got the key in it sorry so I messed up when I do use create e I need to give it the place where it's supposed to link to which I'm just going to use the pound symbol because I'm actually handling they'll click in JavaScript and key is the content so that should be better and let me go back it's still oh there we go so now you can see all these links and when I click on them I've got the ID so now what I want to do is when I click on any one of these I want to retrieve it retrieve the drawing from the database how do I retrieve the drawing from the database so similarly to how I asked for all of the data I'm actually going to ask for one piece of data in a very similar way so I'm going to down here in show drawing I know that the key is actually the thing now I'm probably going to ultimately need to store the key in a different way but it's kind of convenient that if the key is is the content of that link so I can just pull it out so once I have that key I can say VAR f equals database dot dot ref database dot ref sorry what is it what was it drawings and then I can use the path slash Plus that Euler key and then I can say ref on value.i you know what I must make a function called one drawing and I can also have air data I can use that same callback for an error and then I can have this function one drawing which gets data VAR the drawing equals data Val and I'm just going to console.log it so now this should be every single one of those links when I click on it will go to the database and ask look in the database not in the drawings right remember the database has this nice tree here so when I look just at drawings I get all of these but if I do drawing /id I get what's in here so let's try that now and see if this works oops I need to go back to the page hit refresh and I'm gonna click and look at that it came back the drawing with this array of data I'm gonna click here I got a different drawing notes dan is hardcoded in there so they all look like they're the same you can see this is different this drawing only had two strokes in it there was a rancher so this is actually working and guess what I can do now I can all I need to do is say current drawing equals drawing dot drawing now I'm using the horse drawing way too much because it's what's named here so so I'm just gonna say like DB drawing just to like have it DB drawing so a DB drawing dot drawing I don't know if this is making it better or worse but now we should see that when I hit refresh here click here ooh so setting current drawing was kind of a good idea but I just realized in the main draw loop I'm I'm only drawing the things that are in the drawing or in the drawing array so actually current drawing the current path so actually what I need to do sorry is say drawing equals D is not currently there's no current drawing drawing equals DB drawing so let's try this and now if I click here there we go so if I click on any of these I have my previous drawings and if I annotate the if I add to it and hit save it should be in the database oh I forgot to clear that and I have all of these and the last one is the new one hey that's pretty great oh I kind of finished but I made a mistake which is I didn't clear the list when I add new data so I need to do that too okay so I'd like to add a couple more features to this web application before I finish up one is I need a button to like clear the drawing because once there's a drawing here there's no way for me to start over a new drawing so the first thing that I want to do is just add another button and I'm gonna go to index.html and I'll add a button I'll call it a clear button and I'll say clear and then I'm gonna refresh the page we see that the clear button is there so now what I need to do is in the JavaScript code what I need to do is find where I'm doing stuff with buttons and I'm going to use the same technique by using the p5 Dom libraries function select to select the Clear button and then the Clear button will get an event called clear drawing and remember the drawing is just this array so if I want to clear the drawing oh this is like a very simple thing to do and I know I could just put an anonymous function here but for clarity I'm kind of just doing this I don't know if it's actually for clarity this might be worse but I'm going to I'm going to go to the bottom like code and write this callback function clear drawing and all I need to do there is reset the array to nothing so now I can draw something right dadadah I can hit clear I can start over a smiley face I can hit clear I could load up one of these drawings I could hit clear and start over or I can load this and I could start up on it so you're starting to think there's a lot of possibilities here of some kind of exquisite corpse style collaborative drawing editing thing so you know I don't have color I don't have there's so much you could add to this if you want to like build off of this and make some sort of exciting thing I hope you do okay so now we have the Clear button what's another feature I want to add well one thing that's a bit of a problem is I'm gonna add another drawing I love hearts so I'm going to just do some more hearts I'm gonna do a drawing with three hearts now watch what happens when I hit save it updates the list but it's really hard to see because again if you're gonna work on my work I would renate how to add a name field and add a name for all these but what you're seeing here is that it's duplicating the whole list again when I add just one so something that I need to do and I did this in another example recently is I want to find where I'm creating that list which is right here and I want to give every one of these elements a class and I'm gonna just call it a listing so this I'm gonna give this and this is again p5 Dom library as a class function that gives it a listing class and then when I when I oh oh I'm sorry I'm in the right place already so this is the part where I create that so before I create it I want to and it's probably more efficient way to do this because I could just sort of request from the database just anything new or I could be more thoughtful about this but I'm just gonna kind of do this thing where I clear the whole list so so I'm gonna just make a variable called ELT for elements and I'm gonna do select all and I'm gonna say dot listing and then I'm going to loop through all of those elements and call the p5 Dom library function remove which removes the Dom element from the page so before I generate the list I'm gonna clear it because I'm gonna get all the data from the database again so now we should have i refresh the page we can see here are all my drawings and now I'm going to clear and make another drawing which I'm gonna try to make a cube my kids love to draw 3d cubes it's like sort of this like fascinating thing for like little kids okay so I did that hit save and we can see now that's just there so dynamically added to the page so we really really really gotten far along in a way this is done I could say like okay well I want to do something to add a feature to edit a drawing update a record in the database delete a drawing from the database those are things I'm going to leave for you to investigate you know again all the documentation for this is at this URL fire google.com slash slash slash read and write so this is where you can see where these functions on value that sort of thing but what I want to do oh you know what I realized I did something which I really should probably change there's two more features one is this is the function I wrote earlier to show one individual drawing so whenever I call ref dot on like I did with all the data I'm I'm tying an event to that record in the database forever so if that record ever changes this event will trigger again and a lot of times you want that but in this case I might want to just only get the data from the database just once and I can actually change this from on to once so once will not tie that event forever but just one time so now I'm gonna hit R if I'm the wrong page I'm gonna hit refresh let's hopefully this still works and you can see this still works but if I add a drawing it will refresh the whole thing okay so we're still in the Sun but something that would be really good to add to this what if I what if what I want to do is be is be able to share my drawing with somebody else well right now the only way to do that is to is to sort of email somebody the ID and then tell them to go to this page and click on the ID what if I could encode into the URL something like question mark ID equals my drawing and so what if each one of those drawings could have a permalink where you could share that permalink and the drawing would show up so here's how I'm gonna start doing that the first thing I want to do is just create that permalink so when I'm making these listings in addition to this link that dynamically updates the drawing on the page I'm gonna do exactly the same thing again I'm gonna say create a but instead I'm gonna say question mark ID equals plus key that's the link and then what I wanted to say is I'm just gonna say permalink and then what I'm going to do so let's do this and we should see now oh and I need to parent it also oh and this should be I'll just call this perma and I'm gonna say perma dot parent li so it also goes in that list and you can see now on up you can see now I have the this and then also these permalinks now the spacing is all up so obviously with CSS and thinking about styling and be more thoughtful about the HTML I'm just gonna do something quick which is like perma dot style this is a p5 Dom library for adding some CSS Styles I don't mean if I just add some padding will that do it make it I can differentiate between those two yeah so now I can see I have the permalink and the actual so this is now showing me the drawings and now if I click on one of these it goes to the page where the drawing does not show up but look what happens it you are it creates a URL query string with ID equals this so I can have the page read that URL query string how do I do that well there's lots of ways you could do it but since I'm using the p5.js framework there is a p5.js function for this so I'm gonna go to the p5.js org slash reference oops that's the website a reference and I'm gonna have to look for this URL ah so get URL params so there's three functions here but I can actually just get the parameters that are on the page in an object so if I look at the reference for this all I need to do is call get URL params so I'm going to do that in setup so I'm gonna come back here to setup and I'm gonna say well I'm gonna do this right at the beginning actually and I'm going to say params equals get URL params with this right and I'm just gonna say console dot log params so I'm gonna go back to the page Here I am into the the code I'm gonna open up the console so I can see it I'm gonna hit refresh and you can see this is what came in an object with a field ID which is the key from the database that's all I needed perfect right so and you can see that if I delete that from the URL path and just go I'm getting an empty object so what I can actually do here is I can say if params ID exists if that object has an ID then what do all first of all this has got to happen you know this has got to happen after I connect to the database so I'm gonna do the down here and then didn't I already have a function that's like show drawing right this shows a drawing for a particular key now here's the thing I kind of I should probably give this an argument so I'm gonna put argument here so if I already have the key if I don't have the key right this is a way of having a function optionally take an argument so on the one hand it's an event that comes from that link and it gets the key from the Dom element but I can also just call that function with a key so I can say if I don't have the key then key equals this otherwise though if I just create it with the key and so where do I do that in in in I'm sorry but didn't set up right so much scrolling right here if I have an ID I can just say now show drawing with with params ID so this should now and let's let's see if this works let's do console dot log params ID so make sure that this actually goes here so let's just look to the I'm now loading it and it's empty so I don't see anything and I can still UPS alright first argument was an invalid path so I messed up that function somehow let's see what happened here oh you know what it must have arguments when it's as the callback so this didn't work what a nice idea let's let me let me actually figure this out and I'm this been making this video a little bit longer but I think it's gonna be worth it let's look at the arguments array you can always say arguments to look at what are the arguments for a function in JavaScript whether you've specified them as actual parameters in the function definition or not so what I want to do is do this click on here so the argument it passes it a mouse event so and so the first element is a mouse event so I can probably say something like if key is not an instant instance of this is really silly what I'm doing when I could just write a separate function but let's see if this works I don't know if that actually is going to work if ki is an instance of a mouse event let's see what happens there oh that worked so what I'm doing now is I'm using this I'm repurposing the same function for two different uses on the one hand I want to be able to call the function with a key on the other hand I want this function just to happen as part of a mouse pressed event and key what I call it with a key will actually be a key but otherwise it might be a mouse event so I'm gonna override whatever it is by getting it from HTML fit it so now we can see I've got the blank object and everything works but I can now go to the Poorna link which refreshes the page and gets that because the key comes in permalink every time i refresh the page it could come up with that drawing and I could add something to it like it could make this a weird alien face or something and I'm gonna hit save and now I have all these drawings here are all my drawings I could click on and let me make this a little smaller so you can see then I can click on all the drawings and I have a permalink to all these drawings so how do I control click or option click it'll open in a new command click it'll open it in a new tab so I'm command clicking on all of these and we can see their separate pages that load these drawings from the database automatically so this really brings us to the end of this tutorial this is a p5.js sketch that allows users to create their own drawing UI can write a message to all thank you I was gonna try to write thank you for watching and it's gonna take me way too long plus my doodling mouse handwriting is terrible thank you I can make a drawing I can hit save it adds it to the database I can on the same page click between the drawings and I can also get a permalink so this page anytime i refresh the page starts with that drawing I could obviously make a separate page I could make them here's what you should do if you're watching this and want to do an exercise grab this code it'll be in the description linked the code for this will be linked on github obviously you'll have to create your own firebase database I'll probably take out the keys I guess but rework this to make a separate you that shows like a gallery of all the drawings and you know there's been a lot of wonderful collaborative drawing applications on the web I'm thinking of Aaron Koblin sheep market I think I'll link to that in this video's description as well as you can see as a kind of nice inspiration for this kind of project so thank you for watching and I don't know if this this might ended up being a long video I've lost my Dell but that concludes the database p5.js sketch for saving a drawing into a database and having a gallery of drawings example and if you make something with this please share it with me on Twitter at Schiffman please share a link in the comments ask your questions in the comments and I look forward to seeing you in another video tutorial soon okay bye bye