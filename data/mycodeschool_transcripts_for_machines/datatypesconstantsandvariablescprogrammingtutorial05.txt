In our previous lesson,we saw the basic structure of a C program by writing and executing a simple program to print "Hello World" on screen,but printing "Hello World" on screen is not doing something very meaningful.In a typical task that we would like to perform using a computer program,we will have some data,and then we will have to perform some operations on these data.Let's try to understand this through an example.Let's say we want to perform this task of calculating simple interest.The data that we will work upon will be principal amount,which will be a positive number.It can be a real number because it can have fractional part.Rate of interest,once again it can be a real number,because it can have fractional part.Time(in years) will be a positive integer.To calculate the interest,we will have to perform two multiplication operations and one division operation.We will have to use this formula.Even if we want to perform all this computation manually,we will have to collect and store all thsi data somewhere.If the data is not too complex,we can store it in our own head,in our own memory,else we will have to write it down on a piece of paper.Now,when we will perform an operation on data,new value will be created or some previous value will be modified.Once again,all of this has to be stored,either in our own memory or on a piece of paper.Now,if we will try to solve such a problem using a computer program,first of all,all the data that we want to work upon,should go to computer's memory and if some operation is performed,newly created data,once again has to be inserted,modified or updated in computer's memory.So we must have ways in our program to store,access and modify data in computer's memory.If you look at this expression here, (P x r x t)/100 ; P,r and t here are variables.Variables,by general definition, are things that can change.In this expression,P,r and t can be anything.100 in denominator is a constant.A constant is something that won't change.100 is a 100 in any part of the world.We have concept of constants and variables in programming also.You can think of constants as value of different types,that you can write directly in your code in your program.An integer,a real number, a character or a sequence of characters,that we call a string in programming.Names,words,phrases and sentences;in a program,all of these are strings.If we use values for these different types directly in our code,then we call them constants.There are defined a set of rules to create constants of different types and sometimes a constant can also have a name or identifier.I will talk about these conceots in a while.We can think of a variable as a unique name or identifier for a section of computer's memory where we can fill in some data.So if p and q are two variables in my program, you can imagine them in the memory like i am showing here.p is only a name for this section of the memory and using the identifier p in our program,we can store some data here in this section of the memory.Basically,we can read and write to this section of the memory.Similarly,q is another variable that is identifier for this part of the memory.Once again,using the identifier q,we can read and write to this part of the memory.In programming,quite often we use this term identifier for name,that's why i am saying identifier alot of times.Once again,to create and work with variables,we have to follow the rules of language.Constants and variables in our program means to store and represent data.Now,data can be of various types.Different types of data are represented differently.We saw some of the types while writing these constants.Data can be a number,sometimes an integer,sometimes a real number.Data can be a word,phrase or some sentence and then there can be all kinds of complex forms of data and the kind of operations that you perform on different types is different.Moreover,any data that has to be stored in computer's memory has to be binary,has to be a pattern of 1's and 0's.Any data from the real world first has to be encoded or converted to binary and then it can be stored in computer's memory.So there will be different encoding mechanisms for different types of data.We will talk about this in detail later.For now,just understand that different types of data are stored differently in computer's memory.A constant or variable in a program must be of a defined data type.A programming language gives us definition for some basic data types that we call "Primitive types",and then the language gives us tools to create complex types or composite types using primitive types.So primitive types are already defined in the language and composite types need to be defined by us.In our initial lessons we will mostly be talking about and working with primitive types.Most famous primitive data types are int for integer,char for character,float for real number and there's another one for real numbers,it's called double.int,char,float,doubleall of these are keywords.Keywords are reserved words that are always used in a program for a specific purpose,with a specific meaning so these keywords will always be used to mark the data type of something.There are some other primitive types in C.We will talk about them later.There is one more building block that we need to know about and then we can go ahead and write some programs to perform some real computations.We must know about operators.Constants and variables are means to store and represent data.Operators specify what to do with data,what operation to perform with data.I will list down some of the operators.Operators are also of different types.We have arithmetic operators +, for addition and subtraction, * for multiplication and backslash for division and percentile sign for modulus operation.These are arithmetic operators.A single = sign is called assignment operator.It is used to assign value to a variable.And we have operators that we call relational and logical operators. == sign is for equality operator.If you want to compare two values for equality,you use == sign and this is a logical operator.And then we have operators like , <= and >=.These operators are called Relational and Logical operators.We will get to know these operators when we will use them in a real program.Constants,variables and operators are combined together to create mathematical and logical expressions that would evaluate to something.For example let's assume that p and q are variables of type integer,then p + q will evaluate to the sum of values stored in p and q.p + 2 will evaluate to value stored in p plus 2.Now 2 is a constant here.2 is a constant of type integer and we can have complex exoressions also like this one to calculate simple interest.Let's now see how we can use these building blocks in a real program.I will start where I had left.This is the program to print "Hello World" that we had written earlier.As we had discussed, a C program is organised in entities that we call functions.We must always have a function named main in our program.Program execution always starts with first statement in main function.There are some functions that are pre implemented and available to us in what we call language libraries.To use those functions,we need to reference the libraries to which they belong.This statement here #include is referencing the library stdio.h.printf function that we are using here is a part of this library.The first line that i have written here, is a comment in my program.Comment in a program is a text that is ignored by the compiler.It is not considered for execution.You write a comment in a program for things like mentioning the name of the author of the program or for describing problem statement,or for explaining some part of your code all in natural language.There are two ways to write comment.If you write something starting two forward slashes,then everything starting the slashes till the end of that line is a comment in your program.You can begin a comment after a C statement also.Another way to write a comment is start with a forward slash and then put an asterisk sign and then everything after that is a comment unless you close the comment with another asterisk sign and then a forward slash.Enclosure asterisk would come first.Using this method,you can write a comment in multiple lines.Okay,so what i am going to do now is, I am going to write a comment "using contants and variables".So we are going to learn,how to create constants and variables in a program.I am going to leave this printf statement as it is for now.To use a variable in a program,we first need to declare it.To declare a variable,you write a statemnt like "data type space variable name".A C statement msut always end with a semicolon.This statement is a variable declaration.We have declared an integer variable, a variable of type integer named a.Basically, what we have done is,we have reserved some space in the memory to store an integer,and we can read and write to this memory using this variable name or identifier 'a'.To fill in some value in this memory or this variable,and we can fill in only integer because this is a variable of type integer. We can write a statement like a equal some constant and a semicolon to end the statement.Filling in some data initially in a variable is called initializing the variable.The statement a equal 12 is an initialization.We can declare and initialize a variable in same statement.Instead of writing these two statements,we can write a single statement like int a equal 12.So,we are declaring as well initializing here.12 is an integer constant here.As we had seen,constants of different types are written differently.This "Hello World" here is also a constant.It is a constant of type string.String is not a primitive data type.Its a composite data type.String is a sequence of characters.Character is a primitive data type.A string constant is always written as a sequence of characters within double quotes.This string constant is being passed to printf function as argument.When we pass something to a function, we call it an argument to the function.And a function can take more than one argument.It can take arguments.What I am going to do is, I am going to change this string constant.I am going to write a equal percent d.So i am putting this percent sign here and then d,and now i am going to pass one more argument to this functionvariable a.How many arguments a function will take and what all arguments it will take depends upon the definition of the function.Printf() can take one or more arguments.The first argument must always be a string constant.If i will put a %d somewhere in this string constant,then printf will expect another argument of type integer,and we can pass either a constant or a variable of type integer.Now,when printf will print this string,it will replace this %d with the value of this integer.Things will be clear if I will run this program.Upon running the program,this is the output I am getting.Printf is printing the string but it has replaced %d with value in variable a.This is called printing a formatted string using printf.If we want to print only the value in a and nothing else,we can get rid of this part.And now we are printing only the value in a.Printf is a magical function.It can do alot of wonderful things.We will see all of that later.For now,this printf statement is printing the value in integer variable.Okay,so we are declaring and initializing an integer variable and then printing the value in that integer variable.Let's now create some more variables of other types.I want to create a character variable, so I will type in data type char and then i need to type in a name.I cannot use the variable name a again.Two variables within same function cannot have same names.And when i say same names,a and A are different.You can have a variable name as A and it's fine.Now, i can initialize my character variable with a character constant.A character constant is written as a character within single quotes.To print value in character variable,instead of writing %d,write %c and then pass the variable c as another argument.Printf will now print the cahracter for you.Now , I want to create a variable of type float.So, I'll be able to store a real number.Name of a variable does not always have to be a single character.It can be a set of characters.The rule to create a variable name is that you should start with a letter and then you can have letters,numeric digits and one more possible character underscore.Ideally a variable name should be something meaningful from real world.And there is one more rule.Your variable name should not be a reserved keyword in C.Keywords are to be used for specific purpose in a program,like break is a keyword.So you cannot have a variable named break.I will name this variable real_number.There can be no space in a variable name,so the underscore character can help bridge two words.We can intialize this variable with a constant of type float.And to print the value in this variable,we need to say %f, and then we need to give the name of the variable as second argument.When I am running this,as you can see this real number is getting printed.Ok, so with this much, we understand how to store basic primitive data in variables.In our next lesson, we will see how we can take data as input from user of the program.Right now,we are filling in all data from within the program.We will also solve problem involving simple arithmetic.This is it for this lesson.Thanks for watching !