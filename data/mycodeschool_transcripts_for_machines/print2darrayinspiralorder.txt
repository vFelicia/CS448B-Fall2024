in this lesson we are going to solve one programing interview question and the question is given a twodimensional array of integers we want to traverse and print the elements in the array in spiral order for example if we have a 2d array like this let's call this input array we have four rows and four columns here our input array may have any number of rows and any number of columns and now let's say we want to traverse this array in spiral order in clockwise direction so what we will do is we will start at two and first reverse the top row we will go like two four six eight so we will go right and then we will go down along the rightmost column and then we will again go left along the bottommost row and we will traverse the array something like this and as output we have to print all the elements in the array as we traverse it in spiral order so let's say we want to print a commaseparated list of elements so our list will be something like 2 4 6 8 16 9 8 1 2 3 2 5 9 12 5 and 11 so how do we approach this problem there are some straightforward observations the first observation is that we can have 4 possible directions while traversing the array we can go along a row from left to right or we can go along a column from top to bottom let's call this direction down or we can go along it will row from right to left let's call this direction left or we can go along a column from top to bottom let's call this direction up we will go on changing directions in a cyclic manner from right we will go down down to left left to up and from up again to right and we will not go in a row or column twice so once we are done with row or column we will not go to that row or column again we can perceive this problem something like this first we will print the top row from left to right and now we do not need to come back to this row again now let's say we will keep on reducing the array as we traverse a row or column so that the array that remains to be traversed is there and that which is traversed is not there so first we will traverse the top row and then we will change our direction and traverse the rightmost column and once we are done with the rightmost column we will traverse the bottom most row and then we will go to the leftmost column and once again we will go to the topmost row whatever is the topmost after all this removal of rows and columns once again we will go to rightmost column this time we have only one element in the column and once again we will go to bottom most row this is what we will be left with after all the peeling off let us now implement this logic of peeling off a row or column once we are done traversing it we do not actually need to delete elements from the array to achieve this what we can do is we can mark the boundaries of the un traversed array using some variables so what I'm going to take do is I'm going to take four variables one to mark the topmost row of the un traversed array another to month bottommost row of the un traversed array want to mark the leftmost column of the on traversed array and another to mark the rightmost column of the on traversed array I am calling these variables TBL and are respectively I will also write the pseudocode here let's say we want to write a function named Prince spiral that will take a twodimensional array a and two more arguments the number of rows and number of columns in the array let's say M is the number of rows and n is the number of columns what we are doing here is initially we are defining four variables T that will be initially set as 0 B that will be initially set as M minus 1 that will be the index for the bottom most row I am short of space here so I am writing multiple statements in the same line we will have L that will again be 0 initially and R will be n minus 1 initially now I will define one more variable named dir for direction and initially it will be set as zero let's say if the IR is zero we mean the right direction if it is 1 we mean the direction toptobottom 2 means right to left left and 3 by 3 we will mean bottom to top initially we want to go from left to right so initially dir is 0 these 4 variables at any point will mark the boundary of the un traversed part of the array that will be a sub array now we will say something like this while T is less than or equal to B and L is less than or equal to R and and this condition should be true for the one traversed sub array to be valid I'll come back to this particular condition why it is important now depending upon the value of dir we will have four cases in traversal if direction or this valuable dir is equal to zero then we need to traverse the topmost row of the un traversed array from left to right and to traverse the topmost row of our row number will be the same only the column index will vary so we will say for il2 our print a TI for the row marked by variable t we will go from leftmost column to rightmost column and print all the elements and once we are done printing this row we need to discard that row so we will set the new top we will now say d plus plus so here in this example initially Direction is 0 and top is T is 0 so what we will do is left is also 0 we will go like this we will keep on printing these elements and once we are done printing the row we will increment T so T will now become 1 and then we also need to change directions so we can say something like now Direction should be 1 now we should go from top to bottom along the rightmost column of the un travel study so we will say that if Direction is equal to 1 now we will print the rightmost column this time the column index will not change only the row index will change say 4i t2b for all rows from top to bottom print a I are in this example here we will go something like this this is the topmost row our will remain the same from top to bottom we will print all these elements and once we are done we will decrement our now we will say our so this will be our new R and we will change the direction again now our direction will be 2 from 1 we will go to 2 now when direction is 2 that means we want to go along the bottom most row from right to left so we will say something like this I will start at R and we will decrement I down to L and we will print a bi the row index will not change and now we will decrement B now remember the index increases here from top to bottom and we are going from bottom to top towards the top and direction will now be 3 so we have traversed this part we will go in this order 1 2 and then 3 and finally we will have one more condition when we will want to go from bottom to top along the left most column direction will be equal to 3 this may look messed up because I'm really short of space here and this time we will iterate from be down to T and print e I l and then we will increment L and set the direction as 0 again so L will now be incremented in this example this will be the end of our by loop and also the end of our function only one of these conditions in the while loop will be executed in one go that will mean traversing in one direction redefining the boundaries and changing the direction for this example at this stage direction is zero so we can go from left to right in the topmost row so we will go like this tea will now be incremented it will become equal to B and our direction is 1 we will come to this while condition we will check this condition this is true T is less than or equal to B and L is less than or equal to R a direction is 1 so we need to print the rightmost column and we need to decrement our and our direction becomes 2 so we need to print the bottom most row and we need to deke riman be ok at this stage this condition in the while loop will become false so we will exit if you will try to think this condition will become false only when we will be done printing all the elements this is how our while loop will look in real code remember our indices are increasing from left to right so this is 0 at column 1 at column 2 at column and through 8th column and similarly from top to bottom we are going like 0 1 2 3 and this is what we had written previously in the pseudo code except that we are changing direction by this statement we are not changing direction inside the loops so if Direction is 0 initially it will go on increasing like 0 1 2 3 and once it becomes 4 we are taking a modulo by 4 so it will become 0 again give this some thought and you'll get it so this was printing a 2d array in spiral order thanks for watching