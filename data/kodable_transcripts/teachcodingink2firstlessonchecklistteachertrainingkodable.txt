00:15 - all right
00:16 - so to kick off this training we're going
00:17 - to talk about where to start
00:19 - this is um something that's going to be
00:21 - critical
00:22 - if you are interested in trying coding
00:24 - but perhaps
00:26 - you're not so sure what to do first
00:28 - you're feeling a little nervous you
00:30 - might be
00:31 - unsure about it perhaps your admin has
00:34 - decided
00:34 - for you that you're going to teach
00:36 - coding and you just need a little bit of
00:38 - support about what to do first
00:40 - that's totally understandable and we're
00:42 - going to break down
00:43 - everything you need to know about
00:45 - getting started so you feel
00:46 - a bit more comfortable and confident
00:49 - when you finally do get rolling with
00:50 - your students
00:52 - so first thing first is to think about
00:55 - things that are not actually the content
00:57 - you're going to be teaching but rather
01:00 - the tools and everything that you have
01:02 - currently
01:03 - that you will use that will set you up
01:05 - for success so my recommendation is to
01:07 - take stock of everything you already
01:09 - have
01:10 - the opportunities that are already
01:12 - available to you and your students and
01:13 - i'll run through
01:14 - this quick checklist that you can go
01:17 - through yourself
01:19 - and make sure that you check off each
01:20 - item you take stock of everything you
01:22 - have
01:22 - so that when it's time to choose or
01:24 - implement a coding curriculum
01:26 - you're a little bit more prepared so
01:28 - this checklist will include things like
01:31 - taking stock of your setting where
01:33 - you're teaching what type of setting
01:35 - you're in
01:37 - the equipment you have so the devices or
01:40 - the lack of devices your personal
01:44 - teaching style
01:45 - as well as the learning style of your
01:48 - students
01:49 - and then once you kind of have a good
01:51 - idea of these four things
01:53 - you really clearly understand where
01:55 - you're going to be teaching what tools
01:56 - you have
01:57 - how you love to teach and how your
01:59 - learners like to learn
02:00 - you can then either pick a program or a
02:03 - platform some sort of tool to help you
02:05 - or perhaps that has been assigned for
02:07 - you and
02:08 - you can explore it with with this
02:10 - different framing with these things in
02:12 - mind
02:12 - so we're going to break down each of
02:14 - those items in the checklist a little
02:16 - bit further
02:17 - and again if any questions come up about
02:20 - different
02:20 - different pieces that i'm going to be
02:22 - talking about i will touch on a few more
02:24 - things later in the webinar
02:26 - but if you do have questions please feel
02:27 - free to ask them so
02:29 - the first one is your setting so
02:32 - what space are you working with are you
02:34 - in your own classroom are you
02:36 - pushing into other classrooms that's
02:38 - what i did when i was a computer science
02:40 - teacher i had a cart
02:42 - of chromebooks that i would wheel from
02:43 - classroom to classroom to
02:45 - bring computer science to the different
02:47 - classrooms of the school but perhaps you
02:49 - have your own classroom
02:50 - and then with that comes schedule so
02:53 - what kind of time
02:54 - do you have to teach coding how often
02:57 - will you be seeing students every week
02:59 - will that change week to week so you'll
03:01 - hit on your setting and your schedule an
03:04 - example might be
03:05 - that my students will be coding in my
03:08 - classroom
03:08 - i have 30 of them we get to do coding
03:11 - once a week
03:12 - for 45 minutes so that's just an example
03:15 - of
03:15 - how you can take stock of what you
03:16 - already have and the answers to these
03:19 - questions
03:21 - they don't dictate whether you can or
03:22 - cannot teach coding because
03:24 - you really can teach coding using any
03:27 - space with any pocket of time
03:29 - but i bring this up because the answers
03:31 - to these questions will help inform the
03:33 - type of program
03:35 - you think about using like codable or
03:37 - something else
03:39 - what types of coding lessons and tools
03:41 - would just be best for you to
03:43 - utilize and later in this training we
03:45 - are going to break down
03:46 - in depth more about different settings
03:49 - and what kids coding can look like
03:51 - in a bunch of different settings and
03:52 - that will include time constraints as
03:54 - well
03:56 - the second thing to think about is
03:58 - equipment take stock of what you have
04:00 - do you have internet access are kids
04:03 - going to be working on chromebooks or
04:05 - ipads how many devices per student do
04:08 - you have
04:09 - maybe you don't have any technology and
04:12 - similar to the last slide
04:13 - you don't need anything specific to be
04:16 - able to teach coding
04:17 - computer science concepts can be learned
04:19 - online on tech devices
04:21 - or offline via worksheets and unplugged
04:24 - activities or
04:26 - makerspace projects again the answer to
04:29 - the equipment question will simply
04:30 - inform
04:31 - what types of activities you can explore
04:34 - and i will be diving more into unplugged
04:36 - coding as well
04:37 - when we talk about different use cases
04:40 - and
04:41 - coding in different settings later on in
04:42 - the training
04:45 - the third thing to think about when
04:46 - you're getting started is
04:48 - something that i think a lot of teachers
04:50 - overlook because you guys are so used to
04:52 - putting your students before yourself
04:54 - but it is important to think about your
04:55 - own preference
04:56 - in teaching style and learning so
04:59 - how do you plan or structure your class
05:02 - periods
05:03 - how do you like to teach so an example
05:06 - would be
05:07 - direct instruction you like to be at the
05:08 - front of the classroom giving a
05:10 - presentation
05:11 - or you like more open-ended free time
05:14 - and choice-based stations
05:16 - this one is important because if you
05:17 - plan to teach coding in a way that is
05:19 - more
05:20 - open-ended and exploratory then you
05:23 - would want to choose a coding
05:25 - tool a platform that is also child
05:28 - directed
05:29 - with scaffolds built into it in case
05:31 - kids get stuck
05:32 - and they're working on their own and if
05:34 - you like more direct instruction then
05:36 - you can choose something that
05:38 - will involve a little bit more teacher
05:41 - teacher influence
05:42 - since it's developed to be that way so
05:45 - in the example of codable we have a hint
05:48 - system built into our games with a lot
05:50 - of scaffolded levels so that would be a
05:52 - good choice if you like more
05:54 - open-ended child-directed learning
05:57 - it'll just inform what kind of tool you
05:59 - choose to use
06:01 - and finally something really important
06:04 - to think about is your learners
06:06 - so you know your students best you know
06:08 - what they're capable of
06:10 - you know where they might struggle and
06:12 - all of this is going to inform how you
06:14 - approach
06:15 - coding so for example if you know that
06:17 - your students
06:18 - thrive when they have more structure and
06:20 - scaffolding and hand-holding
06:22 - then you would choose like i said one
06:25 - type of tool
06:26 - that has more scaffolds and hints built
06:29 - into it as opposed to
06:30 - a more open-ended creation one that
06:32 - doesn't have as many supports which
06:34 - would
06:34 - be really well suited for a different
06:36 - group of students
06:37 - i remember when i was a computer science
06:40 - teacher
06:41 - my my students were really quick to ask
06:42 - me for help when they got stuck they did
06:45 - not like that feeling
06:46 - so i knew that before we launched into
06:48 - our coding curriculum we needed to do
06:50 - some sort of practice about how to ask
06:53 - for help and how to help each other
06:55 - as opposed to just waiting for the
06:57 - teacher to respond since
06:58 - i had a lot of other things i was doing
07:00 - in the classroom so that's one example
07:02 - you know your students best you know
07:04 - that they might need certain support in
07:07 - different areas and the type of tool you
07:09 - choose to teach coding
07:10 - will depend on that and then finally so
07:13 - you've ran through your checklist you've
07:14 - taken stock of your setting
07:16 - and your equipment and how you like to
07:18 - teach and how your learners like to
07:20 - learn
07:20 - then you can pick a coding platform
07:23 - to help you and when i say platform i'm
07:26 - referring to any
07:27 - product or service that you can access
07:31 - that will provide a coding curriculum
07:32 - for you if you are brand new to coding
07:35 - then
07:36 - you very well might not have a clear
07:38 - idea for
07:40 - what to teach or how to structure unit
07:42 - plans and courses
07:44 - and learning paths we will cover some of
07:46 - that today but
07:48 - i would not expect you to know all of
07:50 - that right off the bat
07:51 - and the good news is that you don't need
07:54 - to reinvent the wheel
07:55 - there are some excellent resources that
07:58 - you can use to teach coding
07:59 - and you don't need to make up the
08:01 - curriculum on your own
08:04 - there is of course a scenario where
08:06 - you're not the one choosing
08:07 - right so perhaps admin or someone else
08:10 - at your school has told you to implement
08:12 - coding
08:12 - with a specific platform they've given
08:14 - you the platform and they say you're
08:16 - going to be using this
08:17 - and that's totally okay too i still
08:19 - recommend
08:20 - running through this checklist of
08:23 - setting equipment
08:24 - you're learning the learning style of
08:26 - your learners and your teaching style
08:29 - so that when you're exploring whatever
08:30 - program you're going to be using like
08:32 - codable you can keep those scenarios in
08:35 - mind it'll help
08:36 - a little bit with your planning
08:42 - you