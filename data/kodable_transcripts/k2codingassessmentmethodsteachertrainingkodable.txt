00:07 - [Music]
00:16 - our next section will be about how to
00:18 - assess k2 coding so we've talked about
00:20 - the standards kind of where we're coming
00:22 - from what different learning outcomes we
00:25 - might be looking towards
00:27 - for our k2 students and now we're going
00:30 - to talk specifically about methods for
00:32 - evaluation
00:34 - and
00:35 - again i mentioned it on the last slide
00:36 - but you get to decide
00:39 - what
00:40 - success looks like in your computer
00:41 - science classroom there's no one way to
00:44 - teach and measure progress in coding for
00:47 - elementary students so the essential
00:50 - question becomes
00:51 - if we want to approach measuring
00:53 - progress in like a holistic way but the
00:56 - standards are not one size fits all
00:58 - what methods can we actually employ that
01:02 - will reflect the unique experiences and
01:05 - strengths of our students and this is
01:08 - where i believe that formative authentic
01:11 - assessment is crucial
01:14 - and the methods i'm going to chat about
01:15 - today
01:17 - the three of them were developed at the
01:19 - harvard graduate school of education
01:21 - where they're conducting research about
01:23 - computer science assessments in
01:25 - elementary grades
01:27 - and they've outlined three approaches to
01:29 - assessing computational thinking which
01:31 - is what i will touch on now
01:34 - and
01:35 - i'm gonna
01:36 - mention engagement at the end
01:38 - but i think that these three evaluation
01:41 - strategies plus
01:43 - a general measurement of your student
01:45 - engagement will make for a really strong
01:48 - assessment strategy
01:52 - i do love this quote from the harvard
01:55 - graduate school of education
01:57 - in one of their research papers they
01:58 - mentioned that most concept-oriented
02:01 - assessments like quizzes on the
02:03 - definitions of concepts were
02:05 - insufficient in representing a learner's
02:08 - development as a computational thinker
02:10 - so that just sort of gives an
02:11 - introduction for the idea that quizzes
02:14 - and tests about coding concepts might
02:17 - not be enough and we'll figure out some
02:19 - other ways to
02:21 - to reflect learning
02:24 - so first up is artifact-based interviews
02:28 - so this is one the first method that
02:29 - they mention that can be used to gauge
02:32 - computational thinking skills so in this
02:35 - approach learners are engaged in some
02:38 - sort of conversation
02:40 - about
02:41 - their
02:42 - computational product so like what
02:45 - project they're working on in class and
02:48 - how so typically these it's called an
02:50 - interview but i think of it more like a
02:52 - conversation
02:53 - are
02:55 - with a student using a work sample
02:57 - something the student has produced to
02:59 - guide the discussion
03:01 - it's just a conversation so basically
03:04 - learners have a chance to describe what
03:05 - they worked on and why and there's a ton
03:08 - of ways that interviews like this can
03:10 - happen
03:12 - commonly it would be with a teacher but
03:15 - i understand that interviewing all if
03:18 - you have like 50 students interviewing
03:20 - all of them one-on-one about a project
03:22 - might be really time-consuming these
03:24 - conversations can also be peer-to-peer
03:26 - they can be
03:28 - formal or like an informal check-in
03:30 - throughout class kind of in passing
03:33 - and it can even be tracked with a rubric
03:35 - if that's desirable and will help you
03:37 - stay organized i included a screenshot
03:39 - here of an example rubric that the
03:42 - graduate school offers that shows some
03:45 - example questions that you might pose to
03:47 - your students about the coding project
03:50 - that they're working on and then
03:51 - different ways to score
03:53 - um their types of responses
03:56 - you can see that the questions are super
03:57 - open-ended i mean it's important to
03:59 - approach
04:01 - any sort of conversation like this with
04:03 - an open-minded mentality so why this
04:06 - method
04:08 - during conversations learners might
04:10 - offer insights or reasoning for their
04:12 - decisions that you the teacher
04:15 - may not have been aware of
04:17 - and taking time to have these
04:19 - conversations it'll really help students
04:21 - build confidence knowing that their work
04:24 - matters it's worth the time to talk
04:26 - about it
04:27 - and that you are curious
04:29 - to learn more about it
04:31 - down's how downsides as i mentioned
04:34 - depending on how many students you teach
04:36 - and interviewing all of them about their
04:38 - work could be very involved but i just
04:41 - feel like this type of
04:43 - evaluation this type of interview
04:46 - when it comes to a coding project where
04:48 - there's so many layers and different
04:51 - mindsets and concepts that are coming
04:52 - into it you can really dig in and find
04:56 - nuggets of insight that you're that you
04:58 - had no idea your student was thinking
05:00 - about when they created what they did
05:06 - all right the second evaluation method
05:08 - after the artifact-based interviews is
05:12 - design scenarios so in this approach
05:16 - learners will encounter
05:18 - like a series of creative projects or
05:20 - challenges
05:21 - and engage with them using
05:24 - knowledge and skills that they've
05:26 - developed over time
05:28 - so this method is effective because it
05:31 - invites students to synthesize their
05:33 - learning and they're going to use a
05:35 - bunch of skills that they've developed
05:37 - in new creative
05:40 - innovative ways so as the teacher you're
05:42 - able to evaluate
05:44 - not only if they're applying certain
05:47 - concepts correctly like for example are
05:50 - they
05:51 - showing are they demonstrating an
05:52 - understanding of sequence is the code
05:54 - that they wrote or the blocks they put
05:56 - together or the puzzle they're trying to
05:58 - solve is the answer in the correct
06:00 - sequence but also how creative the
06:03 - application of that knowledge is
06:05 - projects design scenarios are
06:08 - open-ended and there's not one right way
06:10 - to solve them so students can really
06:13 - synthesize their own learning and what
06:15 - they found important in their own way
06:18 - another really interesting way to use
06:20 - design scenarios would be to do sort of
06:21 - like a reverse
06:23 - a reverse process so
06:25 - you the teacher could create a project
06:28 - or find a project that exists online
06:30 - already from another teacher and then
06:33 - have students evaluate it by
06:36 - explaining what the project does
06:38 - describing how it could be extended or
06:40 - added to
06:42 - finding
06:43 - a bug in the project or an error and
06:46 - trying to fix it or taking the project
06:49 - and remixing it
06:51 - in their own way
06:52 - so this type of process where it's like
06:55 - a design scenario but flipped where the
06:57 - students are doing the critique it'll
06:59 - really demonstrate
07:01 - if students have a grasp on the
07:03 - mechanics of the project and if they
07:05 - know enough
07:06 - about the content
07:08 - to add and remix it
07:10 - so i love
07:12 - love this assessment method
07:14 - students can approach it
07:16 - in their own way
07:18 - there's no one right way to solve it so
07:20 - every child has the opportunity to be
07:23 - successful and bring self-expression to
07:25 - the projects and again there are rubrics
07:28 - and different tools out there that can
07:30 - help you evaluate
07:32 - projects like this design scenarios but
07:35 - again since you know your students best
07:39 - you can really lead the charge there and
07:40 - i included images here from
07:43 - different projects we have available at
07:45 - codable where this sort of design
07:47 - scenario
07:49 - could take place
07:53 - and the final method that
07:55 - the harvard graduate school recommends
07:57 - for assessing computational thinking is
07:59 - learner documentation so in this
08:01 - approach learners are engaged in
08:04 - developing
08:06 - like reflective traces of their learning
08:09 - as an accompaniment to any other
08:12 - creations or work that they've done so
08:14 - one approach to learner documentation
08:17 - that i've seen
08:19 - for a lot of teachers work well is to
08:21 - have students create a design journal in
08:24 - which they are reflecting on their
08:27 - process and their progress throughout a
08:29 - project
08:30 - and i think
08:32 - self-reflection like this is really
08:34 - important it will help highlight areas
08:36 - in which
08:37 - learners demonstrate
08:39 - self-efficacy self-confidence and may
08:43 - also illuminate areas where students
08:45 - might be struggling that's not obvious
08:48 - just from looking at the project or
08:50 - looking at their work
08:51 - but they might dig into it when asked to
08:53 - reflect on it later
08:55 - and
08:56 - it's basically just an added layer that
08:58 - goes beyond
09:00 - the what and the when of schoolwork and
09:03 - hones in on the why and the how of it uh
09:06 - if we only look at the quantifiable
09:09 - amount of work that a child has
09:11 - completed in a given time period
09:14 - we'd miss a lot of nuance so
09:16 - learner documentation and reflection
09:19 - is crucial
09:22 - and then my final piece on these
09:25 - evaluation methods
09:27 - what about rubrics quizzes tests i i
09:29 - think all of these are still okay in
09:31 - fact i think rubrics are extremely
09:32 - useful tools i mentioned one on the
09:34 - artifact based interview slide
09:37 - i'm definitely not one of those teachers
09:39 - that never did a quiz or a test but i do
09:41 - recognize that it's difficult to capture
09:44 - student performance
09:46 - like in a set time period in one hour
09:48 - and 30 minutes so feel free to
09:50 - incorporate these
09:52 - you probably won't want to rely on them
09:53 - as your sole means of evaluation
09:56 - especially for
09:57 - computer science education because there
09:59 - are
10:00 - so many nuances to computational
10:03 - thinking so many softer skills that are
10:06 - really difficult to capture in a quiz or
10:08 - a test so these tools are still useful
10:10 - definitely not saying to throw them
10:12 - aside just recognize that for a for a
10:16 - subject as intricate as computer science
10:19 - having more of these self-reflective
10:22 - pieces projects
10:24 - conversations
10:25 - will be needed to kind of get to the
10:27 - bottom of it
10:30 - and then finally before we move on to a
10:33 - breakdown of project-based learning i
10:35 - will just take one minute to talk
10:36 - engagement i feel like this is a real
10:38 - buzzword especially in the age of
10:41 - virtual learning uh but it is important
10:43 - here especially with
10:45 - coding education
10:47 - measuring progress
10:49 - is informative for your teaching
10:51 - practice standards are useful absolutely
10:54 - and demonstrating learning
10:57 - to admin and parents is of course
11:00 - very important but i do invite you to
11:03 - think about why you want to bring coding
11:05 - into your classroom in the first place
11:08 - it's likely because you know
11:11 - coding is a skill that will benefit your
11:13 - students for their entire lives
11:15 - it's also likely because you want to
11:17 - foster a love of learning and an
11:18 - excitement
11:20 - to interact with technology in new ways
11:22 - and a desire to persist when faced with
11:25 - challenges find solutions all of this
11:28 - stuff
11:29 - this is all only possible if kids
11:32 - stick with it and if they don't give up
11:34 - when it gets hard because i can tell you
11:36 - i am currently in the process of
11:38 - learning how to code myself and oh boy
11:40 - it really does get hard so
11:43 - all of this to say that engagement and
11:46 - enjoyment
11:47 - of coding is paramount and
11:51 - i'd say a thousand times over that
11:53 - regardless of standards and evaluation
11:54 - methods if your students are excited and
11:56 - motivated to learn
11:58 - then it's a success they will keep keep
12:01 - going with it they will learn more as
12:03 - they grow so
12:04 - at the end of the day when you're
12:06 - thinking about all these different
12:07 - methods to gauge learning outcomes and
12:10 - progress i definitely encourage you to
12:13 - think about how you're measuring
12:14 - engagement whether that be
12:18 - time spent or
12:20 - number of projects created but for a lot
12:22 - of students it would just be
12:24 - you know motivation and interest in
12:26 - continuing so it's going to be up to you
12:28 - to decide what that looks like but
12:30 - definitely an important piece of the
12:32 - puzzle
12:36 - [Music]