With timestamps:

00:00 - if you new to my channel make sure to
00:01 - subscribe and click on the notification
00:03 - bow so you never miss out when I upload
00:07 - a brand new video
00:09 - so there's only a couple of things left
00:11 - to do now in the shop we've got to code
00:15 - it so that if the player accidentally
00:16 - resets while they're in the shop we
00:19 - reset everything for when they respawn
00:21 - we need to open up the shop whenever you
00:25 - walk up to the shopkeeper
00:30 - then we're gonna have to code an event
00:32 - when you reset so you can get your tools
00:35 - back and then we're gonna have to work
00:38 - on these saving of your items so what
00:43 - we're going to work on first is we're
00:44 - gonna work on the player resets event
00:46 - we've got this remote event called
00:48 - player reset so let's go back into our
00:51 - local script here and at the bottom what
00:53 - we're gonna do is we're going to just
00:55 - create one last event on the client and
00:59 - that's gonna be cooled now we're gonna
01:02 - say just replicate storage dot player
01:05 - reset : Connect throw on to player
01:10 - receptor on client event Curran connect
01:15 - function now we're going to be firing
01:18 - this from the server when they reset and
01:21 - we're just going to be doing the same
01:23 - thing as we did with the exit button
01:24 - really we're gonna be setting Lee shop
01:26 - brain it's visibility:visible to force
01:31 - we're gonna be setting the current box
01:33 - value to zero we're gonna be setting the
01:37 - shop write the model name value to zero
01:42 - as well we're then just going to set the
01:45 - border backward buttons to enabled color
01:48 - so you can say shop frame dot board in
01:52 - fact I think we have a variable for
01:54 - forward yep we can just say forward not
01:58 - image alert 3 equals the enabled button
02:03 - color and the back button image color 3
02:07 - equals enabled button color and then we
02:11 - just need to set the camera a camera
02:13 - type back to custom a camera subject
02:19 - objects back to the players humanoid the
02:24 - player-character humanoid and we need to
02:28 - set there in shop value
02:31 - back to false so there we go if they
02:35 - reset when they're in the shop hopefully
02:39 - everything should be all good so let's
02:42 - test this out so they're in the shop so
02:44 - they buy something and they reset booth
02:49 - and what's going to happen
02:53 - is once they re join
02:57 - okay the camera did not go back to
02:58 - normal but everything else did so let's
03:00 - have a look if anything's wrong
03:02 - and nothing seems to be wrong so let's
03:06 - have a look in this script
03:12 - yes of course because we haven't
03:15 - actually fired this event yet it's not
03:17 - gonna work so that's what we're gonna do
03:19 - now we're gonna go into the saving
03:21 - script and at the top here we're gonna
03:24 - create a character added event swings a
03:29 - player got character added cut them
03:32 - connect function car with a character
03:36 - you can call this whatever you want so
03:38 - the car or ammeter is just their
03:41 - character okay so the model which has
03:42 - their humanoid and all their body parts
03:44 - so when they reset this is going to run
03:47 - when they're when the player is
03:50 - respawned
03:50 - so we want to firstly fire off this
03:54 - event so game dot replicate a storage
03:56 - dot layer a reset along fire client we
04:02 - want to fire this event for that
04:04 - specific player and we want to set their
04:07 - in shock value back to false
04:10 - just in case the event doesn't reset it
04:13 - for some reason and then we need to make
04:16 - sure that when something has been added
04:19 - to their character okay this is when
04:23 - they join the game as well if something
04:25 - gets added into that into that to their
04:27 - character so in other words when a tool
04:30 - gets added that means that they've
04:31 - equipped at all so we're just updating
04:33 - the equip to value to that tools name so
04:37 - we can say car child added so that's
04:40 - when something's been added : connect
04:42 - function and then the parameter the
04:46 - argument here is going to be child so
04:48 - the child is the object which was added
04:50 - into their character so if child come on
04:53 - is a if it's tall
04:57 - then when a set the players equipped
05:00 - value to the child's name and that's
05:05 - just basically going to update the
05:07 - equipped value and then we want to give
05:10 - their tool back because at all might
05:13 - have been lost if they reset without
05:15 - that if they reset then they'll lose the
05:17 - tool we can say if game server storage
05:20 - got tools curl on find first child
05:24 - player or wait for child equipped dot
05:31 - value then because remember we need to
05:34 - wait for it to be added into the game
05:36 - because it might not be there
05:40 - we can just do player wait for child in
05:43 - shop up here as well so if that tool is
05:48 - a valid member of the tools holder over
05:51 - here and we're going to want to clone
05:55 - that tool so we can say local tool to
05:57 - equip oops this is what they're going to
05:59 - equip equals game dot server storage dot
06:02 - tools and square brackets
06:04 - hey equipped value and we can do curl on
06:08 - clone on this and we say talk to a quip
06:12 - dot parent equals player wait for child
06:16 - and backpack
06:19 - and that will give their tool back to
06:21 - them when they reset or rejoin so this
06:25 - is which unless they give the tool back
06:27 - like that so that is the character added
06:31 - event done you're going to test this out
06:32 - again
06:33 - we should everything should reset
06:35 - perfectly when when we click on the
06:38 - reset one let's open up the shop buy
06:41 - something and let's click on reset
06:45 - so we're just gonna die
06:51 - we respawn cameras come back to us the
06:54 - GUI is gone away and everything is back
06:57 - to normal and we still have our drill
07:00 - which we equipped so I've got the better
07:02 - power drill I'm gonna go back into the
07:04 - shop because I don't want this tool
07:05 - anymore and instead we're gonna get a
07:08 - normal power drill
07:09 - so we exit the shop we've been
07:11 - teleported back and we have got our
07:14 - normal power drill you see it's a
07:16 - different tool looks the same but it is
07:18 - a completely different tool so what we
07:21 - need to do now is script it so then we
07:24 - walk up to our good friend the
07:26 - shopkeeper over here nako we're going to
07:29 - open up the shop and one obviously one
07:31 - we click on the exit button will get
07:33 - teleported back to here which really
07:36 - works so only a few things left to do
07:38 - and then our shop will be perfectly
07:40 - ready so what we're gonna do we're gonna
07:44 - go over to the shopkeeper over here and
07:46 - there should be a union now whenever the
07:49 - player steps within this boundary there
07:53 - is going to be a script which detects
07:56 - the hit and then it's going to fire off
07:59 - the remote event so you can change this
08:01 - however you want you can move this
08:03 - because say if you moved it closer then
08:07 - it would be detected just as you hit the
08:10 - as you hit the the inner part but if you
08:13 - just put it a little bit closer to the
08:15 - the desk here and then after the play
08:19 - we'll have to walk in a little bit
08:21 - before the screen begins to fade it
08:23 - gives that nice illusion is like when
08:25 - you walk into this into this zone then
08:28 - you're going to have the shop open up so
08:32 - you can put it where you want I'm going
08:34 - to put it a bit close to the desk so
08:35 - that it doesn't trigger right away and
08:37 - then we're going to insert a script into
08:39 - this union okay and inside the script is
08:43 - where we're going to do the hit
08:44 - detection and open up the shop
08:52 - so what we're going to do we're going to
08:54 - define a variable or our event called
08:57 - the closed shop so open shops are
09:01 - opening the shop and say local event
09:03 - equal game but replicated storage and
09:06 - then we can say wait for child open shop
09:10 - because that's what we trigger on we
09:13 - want to fire the event and I pimp the
09:16 - shop when I'm going to do a touched
09:18 - event so script up parent got touched
09:20 - code on connect function hit and
09:25 - anything that goes inside this event is
09:27 - going to run or be executed whenever the
09:30 - part of the brick gets touched and hit
09:33 - is going to be the object which touch
09:35 - the brick we're going to check to see if
09:37 - the object which hit the brick is
09:40 - actually a real player and it's not just
09:42 - a random object so you can say if it's
09:45 - got parent : fine first child and I'm
09:50 - going to say humanoid in quote marks and
09:53 - game drop players and we want to see if
09:57 - they have a player model to make sure
09:59 - that they didn't leave the game we say
10:02 - game the players get player from
10:03 - character and in the brackets we can say
10:06 - hit doctor parent
10:10 - then we know that it's a legitimate
10:12 - player and what we can do is we can
10:14 - insert our code which is going to check
10:19 - to see if they're already in the shop so
10:20 - if you actually want to get the player
10:23 - the players actual object so that the
10:25 - player where their leader starts and
10:27 - everything else is stored so it's a
10:28 - local player equals game and dot
10:31 - player's column gets a player from
10:34 - director its dot parent so this is the
10:39 - player in game dot players we want to
10:42 - check to see if they're in shock value
10:44 - is set to false which means they're not
10:46 - currently in the shop if player dot in
10:49 - shock value equals equals false and we
10:53 - will allow them to go into the shop and
10:56 - we'll set it to true player in chopped
11:00 - at y equals true and then we will fire
11:03 - the event for this client so you can say
11:06 - event fire client player just like that
11:11 - then we want to set their walk speed to
11:15 - zero so they can't walk away on the shop
11:17 - area or walk back in to re trigger this
11:20 - script you can say hit dot parent dr.
11:24 - humanoid duck walk speed equals zero
11:27 - just so that they're bound to the shop
11:30 - and they can't walk away so they're
11:32 - within that circular or semi circular
11:35 - boundary so now that that's done if we
11:40 - go and test this out we should be able
11:44 - to walk up to nako eighty eight and he
11:46 - should be able to open up the shop for
11:48 - us so let's go and run over now I am
11:51 - able to run because I have a plugin
11:53 - which allows me to sprint or leave a
11:56 - list all my plugins in the description
11:57 - below cuz they really makes we're rocks
11:59 - to do a lot easier so I'm here gonna
12:02 - walk into the boundary and nothing
12:04 - happens so let's have a look see why
12:07 - that does not work and try and debug it
12:13 - so we're back in the script we're just
12:15 - gonna doula we're testing to see what's
12:17 - wrong here we're gonna print test to
12:20 - actually see if the touched event is
12:23 - running
12:25 - in a play here and just jump straight in
12:28 - okay so it's printing a test so the
12:32 - touched event is definitely running now
12:35 - let's move this test to the if statement
12:39 - to see if that's executing I don't think
12:43 - it will be for some reason so that's
12:45 - what we're going to be looking at and if
12:47 - we just go again okay it's printing test
12:50 - so we know that it's going to be
12:53 - breaking because the if statement sorry
12:58 - so the if statement is true but
13:00 - something seems to be breaking here with
13:02 - the get player from character so let me
13:04 - just move the test further on down to
13:07 - see if it's breaking at this line
13:13 - by the game
13:15 - back in okay so it's not breaking at
13:19 - this line so I think the players in
13:21 - shock value must be equal to true
13:25 - because if this if statement does not
13:28 - seem to be executing so let's go into
13:31 - our saving scripts and have a look here
13:33 - so in shop is set to false and it's in
13:38 - the player hi there we go it there's our
13:41 - issue in shop is an int value when it
13:44 - should be a ball value so if you're
13:46 - watching and you've you've done the same
13:49 - and you've set you're in shop to an int
13:51 - value it needs to be a ball value okay
13:54 - it must be a ball value because either
13:56 - true or false so make sure that you set
13:59 - it to a ball value and if we go and test
14:02 - this again hopefully it's gonna work
14:07 - now if we go over here and there we go
14:09 - the shop is opened and you can see we
14:12 - have the ability to buy a super power
14:15 - drill we can buy the better power drill
14:17 - at the power drill or the normal one so
14:20 - we're going to click to buy it I've got
14:24 - the item but what if I want to get a
14:26 - different type of drill and go back into
14:29 - the shop and if I try and press the
14:32 - arrow keys to move here I'm just
14:33 - pressing down on s to move me backwards
14:36 - or should be away from the the area now
14:39 - but no because I stayed in that same
14:42 - position and I got teleported away so
14:44 - it's all good it's all working and my
14:47 - player is freezing when we get into that
14:49 - boundary of the semicircle so is the
14:54 - shop opening script all good or working
14:57 - so that is another part of the video
14:59 - done and it's looking more like a shop
15:02 - now it's looking really good just a few
15:04 - more things left to go actually the last
15:06 - thing we have to do is we have to work
15:10 - on datastore to save our tools save our
15:14 - currency and then this video will be
15:17 - completely finished and you will have
15:19 - your own mining simulator shop so let's
15:21 - get straight in to the data saving
15:26 - so to scrape the saving what we're gonna
15:28 - do going to go into the saving script
15:30 - here and we're going to make it so that
15:33 - we can save our currency and our
15:36 - equipped value as well as the tools
15:39 - currently in our player tools folder so
15:42 - that when we rejoin the game we can load
15:44 - these in and we will have all of our
15:46 - tools back in our inventory ready for us
15:48 - to equip in the shop so the first thing
15:52 - that we're going to do at the top of the
15:55 - savings script we're gonna say local
15:58 - data store equals game come on get
16:03 - service data store service in quote
16:08 - marks then we're gonna say : get data
16:11 - store and you can call this data store
16:16 - whatever you like I'm just gonna call
16:18 - mine tools but if you change it all of
16:21 - your players data is gonna get lost
16:22 - because it's it's attributed to that
16:25 - data store name so I'm calling mine
16:27 - tools because we're saving tools and a
16:30 - few other things but we'll just keep it
16:31 - tools and what we're gonna do is we're
16:34 - gonna have to create some keys to save
16:37 - this data so below all of your different
16:40 - values which you've created at the
16:42 - bottom we're gonna want to create two
16:44 - keys first key is going to be for the
16:47 - tools that we're going to save so we're
16:49 - gonna say local tools equals and then
16:52 - our key is gonna be tools as a string
16:56 - dot player dot user ID so the way
17:03 - datastore works is that you have a key
17:06 - each specific player and then you write
17:09 - data to that key and then when they join
17:12 - the game you can check to see if there's
17:14 - any data attributed to that key and if
17:17 - there is you can load in and when they
17:19 - leave the game you can save data to that
17:21 - key so we're just getting this players
17:23 - key because it starts off with tools and
17:26 - it has their unique player ID I'm gonna
17:29 - do the same thing for the equipped value
17:31 - so local equipped equals equipped dot
17:35 - dot layer dot user ID I do have some
17:39 - data store tutorials coming out
17:40 - on my child soon to do watch out for
17:42 - those so we've got our two keys and now
17:46 - we want to check to see if there's any
17:48 - data for our tools key so you can say
17:50 - local data equals datastore turn on get
17:54 - a sync and then we can put tools in here
17:58 - because that's our key and local equips
18:01 - data equals datastore : get a sync and
18:06 - we can just put equipped in here because
18:08 - that is the key or our equipped data now
18:11 - we're gonna do the equipped first so
18:13 - we're gonna check to see if there is
18:15 - some data in this key so we can say if
18:17 - equipped data is not equal to note that
18:23 - means if there is some data then then we
18:26 - can just say equipped dot value in fact
18:29 - this is not going to work because we
18:33 - have a well in fact it is gonna work I
18:36 - guess we can just put we could just say
18:39 - equipped key here because we were
18:42 - defining equipped appear and we're
18:44 - defining another equip so let's just
18:46 - change this to equip equipped key and we
18:49 - can change that here so equipped a City
18:51 - Hall stay still get a sync equipped key
18:53 - and then down here after we then we can
18:56 - say equipped key throwing say equipped
18:59 - dropped value equals and then we can
19:04 - just say equips data we were loading in
19:07 - the what the equipped was last time into
19:11 - the players current value so we've
19:14 - loaded in the equipped value now we just
19:17 - need to load in their tools into their
19:19 - inventory so what we're gonna say is if
19:22 - data is not equal to nil if there's some
19:24 - tools then what's going to happen is the
19:27 - we're gonna save the tools as a table
19:30 - and we can loop through that table and
19:31 - add each tool into their inventory so
19:34 - what we're going to do is we're gonna
19:35 - say for I comment tool in pairs data
19:39 - because that's what we're looping
19:41 - through do let me drop a few lines
19:45 - and inside of here what we're gonna do
19:48 - is we're gonna check to see if that tool
19:50 - is in service in tool models and it is
19:54 - so it's right isn't the tools folder
19:56 - then we know it's a real tool I'm gonna
19:59 - clone it into the players player model
20:02 - folder so we can see if game dot server
20:05 - storage not tools curl find first child
20:10 - tool then and inside of this for loop if
20:15 - the tool is a legitimate tool in the
20:17 - game we can just clone this tool by
20:19 - saying local pool equals game dot server
20:23 - storage got tools find first child at
20:28 - all so we're just getting that tool
20:30 - objects and then we're going to clone it
20:32 - so local in fact we can just say local
20:35 - clone tool local clone tool equals game
20:41 - itself storage tools find first child
20:42 - tool clone we can clone it and then we
20:46 - can say cloned tool dock parent to
20:49 - equals game but server storage got two
20:52 - models throw player tools and then
20:56 - square brackets we're gonna get their
20:57 - folder which is called that which is
20:59 - their player name so we put player dot
21:01 - name in square brackets and then let's
21:06 - have a look clone to up we spelt it
21:08 - wrong cloned tool so there we go we have
21:10 - cloned the tool into the players player
21:16 - tools folder in fact let's just do let's
21:19 - just do a find first child instead just
21:24 - in case it has not been created or
21:26 - accidentally gets deleted or something
21:28 - so there we go we have cloned the tool
21:30 - into their player tools folder and we
21:35 - should have successfully loaded the data
21:37 - now if they don't have any data and we
21:41 - know that there must be a new player or
21:44 - there might have been some date loss but
21:46 - usually it's a new player but what we're
21:49 - gonna want to do we just cannot want to
21:50 - wrap this in a peak or
21:53 - okay something goes wrong this get a
21:54 - sink doing say local success an error
21:58 - message equals he call function like
22:04 - this
22:08 - Piko function aha
22:14 - you
22:15 - just like this so we're wrapping this in
22:19 - a function and as P cool so that if
22:22 - something goes wrong your data stores
22:23 - are down it won't throw an error and it
22:26 - won't mess up the rest of the script it
22:27 - will just contain an error and we can
22:30 - check to see the if success then print
22:34 - data or the tools was successfully
22:39 - received what was successfully so we've
22:44 - got the data so we can say found and if
22:49 - it wasn't a success we can print or we
22:52 - can warn there was an error and we say
22:56 - error message so this just prevents any
23:00 - errors from occurring which could break
23:02 - the script
23:02 - maybe if data stores were down that's
23:04 - why we wrap it in a P cool we're gonna
23:06 - want to do the same thing for our
23:08 - equipped data you did the same thing
23:11 - local success error message equals P
23:14 - cool function and we have an end and a
23:17 - closing bracket and we want to just copy
23:20 - this and paste it below it
23:22 - now we're gonna want to define equipped
23:27 - data just before just before this P cool
23:31 - I'm gonna set it to nil so that we can
23:33 - update it and if something went wrong
23:35 - then we would still have this variable
23:37 - declared but it would be nil so we know
23:39 - that something went wrong okay we're
23:41 - gonna do the same thing for data we're
23:43 - just gonna get rid of this local and
23:45 - above it we're gonna say local data
23:47 - equals nil so there's no data yet
23:49 - but if everything goes well that data is
23:52 - going to be updated with the current
23:54 - tools table so we have wrapped our get a
23:58 - sinks in P equals which would prevent it
24:00 - from erroring and we also added an else
24:02 - just in case the data isn't found
24:04 - reverse a new player that should be
24:06 - everything done or getting the later the
24:09 - last thing we need to do is set it up so
24:13 - that when the player leaves the game we
24:15 - can save their data so this part is
24:18 - relatively simple all we need to do is
24:20 - just go outside of this player added
24:22 - event and at the bottom of our script
24:24 - we're gonna say game and dot players dot
24:27 - player or removing
24:28 - : connect function and then we can drop
24:34 - a few lines make sure that the end with
24:37 - the closing bracket is added in and then
24:40 - we're going to create a table called
24:42 - tools this is the table which we're
24:44 - going to save
24:46 - and what we're going to do is we're
24:48 - going to loop through everything inside
24:50 - our inventory so in player tools before
24:53 - I comma object sorry tool not objects
24:57 - well though it can be called object if
24:59 - you want in pairs and inside of these
25:02 - brackets we're going to be looping
25:03 - through player tools folder so we can
25:04 - say game dot so storage got player tools
25:07 - and square brackets we can say the
25:09 - player's name don't forget to put player
25:12 - as an argument here a player dot name
25:16 - into our brackets and then say get
25:19 - children just like that then we're gonna
25:23 - say do and inside of this loop will
25:26 - you're just gonna add each tool into
25:28 - that table swing say table dot insert
25:30 - and then we can say tools and then come
25:33 - at all dots and name just like that and
25:38 - I've done that we just need to set a
25:40 - sink so set the data store values for
25:43 - each key so what we can do is we can say
25:47 - in a peak or local success error message
25:52 - equals P call function and inside of
25:56 - this function we can say datastore turn
26:00 - on set async and then if they tools
26:04 - because that's our key
26:07 - don't forget that actually what we can
26:12 - do is to make the keys a little bit
26:14 - readable we can add a hyphen after the
26:17 - after the word in the string and then we
26:20 - can have our user ID come after that
26:24 - just so it makes it a little bit easier
26:26 - to read instead of having your alright
26:29 - your aids dorky looking like this like
26:33 - this it could look something like like
26:36 - this which is a little bit easier just
26:37 - to see so up to you but make sure that
26:39 - you're keeping it the same names when
26:42 - you're setting a sink and getting a sink
26:43 - else we'll have some data loss so we're
26:46 - setting the the tools and we just want
26:51 - to give we want to pass that tool table
26:53 - so we're saving this table to the
26:56 - players data store with a specific key
26:59 - and then we can do the same things
27:01 - little earlier if success then print
27:05 - later saved
27:10 - else wouldn't print that there was an
27:13 - error and we can give that error message
27:17 - so we're gonna do the same thing now
27:20 - just copy and paste this but this time
27:23 - we're gonna change tools to equipped and
27:28 - because that's what we did earlier we
27:30 - called the datastore equipped that's
27:33 - what I key is called and then instead of
27:35 - tools we're just gonna give the players
27:38 - equipped value so player not equipped
27:41 - dot value just like that and we're gonna
27:44 - copy the same thing again with our
27:47 - success and our error message and there
27:50 - we go that's all done what we can then
27:53 - do is print at the end of this later
27:57 - successfully saved and then our side of
28:04 - this player moving you have to do a bind
28:06 - to close function so that when the last
28:09 - player leaves the game the game server
28:11 - doesn't shut down immediately just so we
28:14 - can make sure that everyone's data has
28:16 - been saved especially if the game shuts
28:18 - down as well save everyone's data you
28:21 - can say game curl on buying two clothes
28:23 - and then in brackets we can save
28:25 - function and inside of here we're just
28:28 - gonna say for I what player you win a
28:32 - loop through each player and kick them
28:34 - so the data gets saved or icon a player
28:38 - in pairs game doc players column get
28:40 - players Open bracket close bracket
28:42 - there's another bracket because we're
28:44 - ending that pairs bracket do drop the
28:48 - line and then we going to say if player
28:50 - then player : kick and then the message
28:55 - we're going to do but give to them is
28:57 - that this game is shutting down
29:02 - and what move done that what we can do
29:04 - is outside of the for loop we can wait
29:07 - we can wait for the data to be saved I'm
29:11 - just going to wait about 10 seconds you
29:14 - could do a bindable event and wait for
29:17 - that event to be fired when the data say
29:20 - for example but to keep it simple we're
29:22 - gonna say for 10 seconds because that
29:24 - should be enough time for the data to be
29:26 - saved
29:27 - so I think that is everything so what
29:32 - we're going to do is we're just going to
29:33 - go and take this backdrop here and I'm
29:35 - just gonna go and place it underneath
29:38 - the base plate so we can't see it but
29:40 - I'm also gonna do because obviously we
29:42 - can't really see it because underneath
29:44 - the base plate when you go into lighting
29:46 - and set the ambient to quite bright and
29:51 - then we're gonna go up here and I'm
29:54 - gonna place a spawn location just next
29:58 - to my shop next to nako so that we can
30:00 - just quickly go in and test and let's go
30:04 - in and see if this works
30:07 - they click on Play
30:11 - and you can see that we do not have any
30:15 - cash that might be could be because of
30:18 - the saving and the access yes that's
30:21 - right because we need to publish this
30:23 - game first to be able to test the data
30:25 - stores in roblox to do so we're to go
30:27 - ahead and publish it so you can click on
30:29 - file or you can press alt P to publish
30:32 - it and then we'll go into a roblox game
30:33 - and test this out
30:36 - once you've published your game then
30:38 - you're gonna want to make sure that you
30:39 - go to configure game by clicking on the
30:42 - three dots next to the title and then
30:44 - you want to check the box next to the
30:47 - text which says enable API access to
30:50 - studio services and that's if you want
30:52 - to test it in place solo but you don't
30:54 - have to do that if you want to test it
30:55 - in game like me so we're gonna head into
30:58 - roblox now test this game out see if the
31:01 - shop works to see if it saves my data
31:03 - let's hope that it does and that shall
31:05 - be the end of this video
31:09 - one thing that we need to quickly fix
31:11 - which I found earlier on before we go
31:13 - and test this out you need to go into
31:15 - the local script and you need to make
31:17 - sure that over here we've got player
31:20 - door character humanoid that you just
31:22 - say wait for child and then we put the
31:28 - humanoid in these brackets just so that
31:31 - this humanoid we can wait for it to be
31:33 - loaded into the game before we start
31:36 - working with it so go ahead and publish
31:38 - your game and let's go ahead and check
31:39 - it out
31:41 - so I'm in the game and we're gonna walk
31:43 - up to our good friend Nico who's gonna
31:46 - give us the shop and you can see we're
31:49 - in here the back button is disabled and
31:53 - we can click forwards and go forwards
31:56 - and backwards so that's all good the
31:59 - cameras working perfectly so let's go
32:01 - ahead and try and buy an item now and
32:04 - you can see it's equipped and we can try
32:06 - buy another item and that one's equipped
32:09 - now we can go back and equip other items
32:13 - get our super power drill so you can see
32:16 - the equipping works perfectly fine so
32:18 - we've got the epic power drill I'm gonna
32:20 - exit the shop and I've got my drill over
32:22 - here and go back into the shop if we
32:26 - wanted to change that
32:27 - I'm currently got the epic power drill
32:29 - equipped and if I try and take it
32:31 - multiple times nothing happens and we
32:34 - can equip the better power drill now and
32:36 - there we go we've got our better power
32:38 - drill and you can see the money is being
32:41 - taken from my balance when we're buying
32:43 - all of these different drills so now
32:45 - let's go ahead check the output and see
32:47 - what's being reported my stained console
32:51 - and here we go so you see it's printing
32:57 - out every time we are looking at a new
32:59 - item it's printing out all the
33:01 - information from that table but let me
33:03 - go and leave the game and let's see if
33:06 - our data gets saved I'm currently on
33:09 - let's have a look
33:12 - 2800 cache and I've got the better power
33:14 - drill now let's go ahead and leave the
33:16 - game
33:22 - now I'm going back into the game and you
33:24 - can see our data did not save some
33:27 - reason so let's go ahead and work out
33:29 - why that did not happen
33:32 - so I'm back here in the game and you can
33:34 - see that my data has successfully been
33:37 - saved however the cache has not saved us
33:40 - because we didn't actually script the
33:41 - cache to save but I will show you how to
33:44 - do that later on at the end of the video
33:46 - but you can see we've got the better
33:48 - power drill still and that was the item
33:52 - that we left the game with let's go back
33:54 - to nako and go back into the shop and if
33:57 - we go over to the epic power drill it
33:59 - says that it's equipped and you can see
34:01 - that we have the ability to equip all of
34:03 - these other tools we do not have to buy
34:06 - them anymore because it has remembered
34:07 - and saved that we bought them all so
34:10 - there you go we have our mining
34:13 - simulator shop working perfectly just
34:15 - how we want it to be totally thought of
34:17 - and able compliant saves the data and it
34:20 - works 100% just awesome
34:25 - so that is the end of this tutorial on
34:28 - how to make a mining simulator shop now
34:32 - if you want to learn how to save your
34:34 - cash in-game and don't worry because I
34:36 - did a video on how to make a currency
34:38 - system just like the one we've done and
34:40 - also how to save it I'm gonna leave a
34:43 - card to that video which can you can go
34:46 - and check that in the top right corner
34:48 - of the screen I'm also gonna leave links
34:50 - down in the description to that I'm
34:52 - gonna leave links to all of my plugins
34:53 - that you can use to install because they
34:55 - really do help with a roblox development
34:58 - and I'm also going to leave the code in
35:01 - the description for this video so you
35:03 - can take it if it doesn't work for you
35:04 - I'm also going to give you a copy of
35:07 - this game and all of the objects which
35:10 - you need to put into the game as well as
35:12 - a little tutorial a written guide how to
35:14 - insert this into your game and that is
35:17 - everything so thank you for watching
35:19 - this series it has been a very very long
35:23 - day of recording I have spent all day
35:25 - recording this video you can see on the
35:28 - bottom left corner on my screen I have
35:30 - been recording this video for over for
35:32 - over six hours I've been planning it for
35:35 - many weeks making sure everything works
35:37 - seamlessly this is a lot of scripts that
35:40 - come together in this tutorial book
35:42 - fixing making the code much better I've
35:44 - put a lot of work into this I'd
35:45 - appreciate if you subscribe to my
35:47 - channel like the video and share it with
35:49 - anyone else who you think would like to
35:51 - make a roblox mining simulator shop just
35:55 - like this one so I hope you enjoyed it
35:57 - if your code doesn't work some reason
35:59 - then please do try the come in the
36:01 - description for a debug itself I've
36:03 - tried to make this as easy as possible
36:05 - to copy out and explain I hope you
36:08 - learned something from it and make sure
36:10 - to subscribe
36:10 - turn on the notification about be
36:12 - notified when I upload new video and
36:14 - this is Alvin blocks telling you to keep
36:17 - scripting

Cleaned transcript:

if you new to my channel make sure to subscribe and click on the notification bow so you never miss out when I upload a brand new video so there's only a couple of things left to do now in the shop we've got to code it so that if the player accidentally resets while they're in the shop we reset everything for when they respawn we need to open up the shop whenever you walk up to the shopkeeper then we're gonna have to code an event when you reset so you can get your tools back and then we're gonna have to work on these saving of your items so what we're going to work on first is we're gonna work on the player resets event we've got this remote event called player reset so let's go back into our local script here and at the bottom what we're gonna do is we're going to just create one last event on the client and that's gonna be cooled now we're gonna say just replicate storage dot player reset Connect throw on to player receptor on client event Curran connect function now we're going to be firing this from the server when they reset and we're just going to be doing the same thing as we did with the exit button really we're gonna be setting Lee shop brain it's visibilityvisible to force we're gonna be setting the current box value to zero we're gonna be setting the shop write the model name value to zero as well we're then just going to set the border backward buttons to enabled color so you can say shop frame dot board in fact I think we have a variable for forward yep we can just say forward not image alert 3 equals the enabled button color and the back button image color 3 equals enabled button color and then we just need to set the camera a camera type back to custom a camera subject objects back to the players humanoid the playercharacter humanoid and we need to set there in shop value back to false so there we go if they reset when they're in the shop hopefully everything should be all good so let's test this out so they're in the shop so they buy something and they reset booth and what's going to happen is once they re join okay the camera did not go back to normal but everything else did so let's have a look if anything's wrong and nothing seems to be wrong so let's have a look in this script yes of course because we haven't actually fired this event yet it's not gonna work so that's what we're gonna do now we're gonna go into the saving script and at the top here we're gonna create a character added event swings a player got character added cut them connect function car with a character you can call this whatever you want so the car or ammeter is just their character okay so the model which has their humanoid and all their body parts so when they reset this is going to run when they're when the player is respawned so we want to firstly fire off this event so game dot replicate a storage dot layer a reset along fire client we want to fire this event for that specific player and we want to set their in shock value back to false just in case the event doesn't reset it for some reason and then we need to make sure that when something has been added to their character okay this is when they join the game as well if something gets added into that into that to their character so in other words when a tool gets added that means that they've equipped at all so we're just updating the equip to value to that tools name so we can say car child added so that's when something's been added connect function and then the parameter the argument here is going to be child so the child is the object which was added into their character so if child come on is a if it's tall then when a set the players equipped value to the child's name and that's just basically going to update the equipped value and then we want to give their tool back because at all might have been lost if they reset without that if they reset then they'll lose the tool we can say if game server storage got tools curl on find first child player or wait for child equipped dot value then because remember we need to wait for it to be added into the game because it might not be there we can just do player wait for child in shop up here as well so if that tool is a valid member of the tools holder over here and we're going to want to clone that tool so we can say local tool to equip oops this is what they're going to equip equals game dot server storage dot tools and square brackets hey equipped value and we can do curl on clone on this and we say talk to a quip dot parent equals player wait for child and backpack and that will give their tool back to them when they reset or rejoin so this is which unless they give the tool back like that so that is the character added event done you're going to test this out again we should everything should reset perfectly when when we click on the reset one let's open up the shop buy something and let's click on reset so we're just gonna die we respawn cameras come back to us the GUI is gone away and everything is back to normal and we still have our drill which we equipped so I've got the better power drill I'm gonna go back into the shop because I don't want this tool anymore and instead we're gonna get a normal power drill so we exit the shop we've been teleported back and we have got our normal power drill you see it's a different tool looks the same but it is a completely different tool so what we need to do now is script it so then we walk up to our good friend the shopkeeper over here nako we're going to open up the shop and one obviously one we click on the exit button will get teleported back to here which really works so only a few things left to do and then our shop will be perfectly ready so what we're gonna do we're gonna go over to the shopkeeper over here and there should be a union now whenever the player steps within this boundary there is going to be a script which detects the hit and then it's going to fire off the remote event so you can change this however you want you can move this because say if you moved it closer then it would be detected just as you hit the as you hit the the inner part but if you just put it a little bit closer to the the desk here and then after the play we'll have to walk in a little bit before the screen begins to fade it gives that nice illusion is like when you walk into this into this zone then you're going to have the shop open up so you can put it where you want I'm going to put it a bit close to the desk so that it doesn't trigger right away and then we're going to insert a script into this union okay and inside the script is where we're going to do the hit detection and open up the shop so what we're going to do we're going to define a variable or our event called the closed shop so open shops are opening the shop and say local event equal game but replicated storage and then we can say wait for child open shop because that's what we trigger on we want to fire the event and I pimp the shop when I'm going to do a touched event so script up parent got touched code on connect function hit and anything that goes inside this event is going to run or be executed whenever the part of the brick gets touched and hit is going to be the object which touch the brick we're going to check to see if the object which hit the brick is actually a real player and it's not just a random object so you can say if it's got parent fine first child and I'm going to say humanoid in quote marks and game drop players and we want to see if they have a player model to make sure that they didn't leave the game we say game the players get player from character and in the brackets we can say hit doctor parent then we know that it's a legitimate player and what we can do is we can insert our code which is going to check to see if they're already in the shop so if you actually want to get the player the players actual object so that the player where their leader starts and everything else is stored so it's a local player equals game and dot player's column gets a player from director its dot parent so this is the player in game dot players we want to check to see if they're in shock value is set to false which means they're not currently in the shop if player dot in shock value equals equals false and we will allow them to go into the shop and we'll set it to true player in chopped at y equals true and then we will fire the event for this client so you can say event fire client player just like that then we want to set their walk speed to zero so they can't walk away on the shop area or walk back in to re trigger this script you can say hit dot parent dr. humanoid duck walk speed equals zero just so that they're bound to the shop and they can't walk away so they're within that circular or semi circular boundary so now that that's done if we go and test this out we should be able to walk up to nako eighty eight and he should be able to open up the shop for us so let's go and run over now I am able to run because I have a plugin which allows me to sprint or leave a list all my plugins in the description below cuz they really makes we're rocks to do a lot easier so I'm here gonna walk into the boundary and nothing happens so let's have a look see why that does not work and try and debug it so we're back in the script we're just gonna doula we're testing to see what's wrong here we're gonna print test to actually see if the touched event is running in a play here and just jump straight in okay so it's printing a test so the touched event is definitely running now let's move this test to the if statement to see if that's executing I don't think it will be for some reason so that's what we're going to be looking at and if we just go again okay it's printing test so we know that it's going to be breaking because the if statement sorry so the if statement is true but something seems to be breaking here with the get player from character so let me just move the test further on down to see if it's breaking at this line by the game back in okay so it's not breaking at this line so I think the players in shock value must be equal to true because if this if statement does not seem to be executing so let's go into our saving scripts and have a look here so in shop is set to false and it's in the player hi there we go it there's our issue in shop is an int value when it should be a ball value so if you're watching and you've you've done the same and you've set you're in shop to an int value it needs to be a ball value okay it must be a ball value because either true or false so make sure that you set it to a ball value and if we go and test this again hopefully it's gonna work now if we go over here and there we go the shop is opened and you can see we have the ability to buy a super power drill we can buy the better power drill at the power drill or the normal one so we're going to click to buy it I've got the item but what if I want to get a different type of drill and go back into the shop and if I try and press the arrow keys to move here I'm just pressing down on s to move me backwards or should be away from the the area now but no because I stayed in that same position and I got teleported away so it's all good it's all working and my player is freezing when we get into that boundary of the semicircle so is the shop opening script all good or working so that is another part of the video done and it's looking more like a shop now it's looking really good just a few more things left to go actually the last thing we have to do is we have to work on datastore to save our tools save our currency and then this video will be completely finished and you will have your own mining simulator shop so let's get straight in to the data saving so to scrape the saving what we're gonna do going to go into the saving script here and we're going to make it so that we can save our currency and our equipped value as well as the tools currently in our player tools folder so that when we rejoin the game we can load these in and we will have all of our tools back in our inventory ready for us to equip in the shop so the first thing that we're going to do at the top of the savings script we're gonna say local data store equals game come on get service data store service in quote marks then we're gonna say get data store and you can call this data store whatever you like I'm just gonna call mine tools but if you change it all of your players data is gonna get lost because it's it's attributed to that data store name so I'm calling mine tools because we're saving tools and a few other things but we'll just keep it tools and what we're gonna do is we're gonna have to create some keys to save this data so below all of your different values which you've created at the bottom we're gonna want to create two keys first key is going to be for the tools that we're going to save so we're gonna say local tools equals and then our key is gonna be tools as a string dot player dot user ID so the way datastore works is that you have a key each specific player and then you write data to that key and then when they join the game you can check to see if there's any data attributed to that key and if there is you can load in and when they leave the game you can save data to that key so we're just getting this players key because it starts off with tools and it has their unique player ID I'm gonna do the same thing for the equipped value so local equipped equals equipped dot dot layer dot user ID I do have some data store tutorials coming out on my child soon to do watch out for those so we've got our two keys and now we want to check to see if there's any data for our tools key so you can say local data equals datastore turn on get a sync and then we can put tools in here because that's our key and local equips data equals datastore get a sync and we can just put equipped in here because that is the key or our equipped data now we're gonna do the equipped first so we're gonna check to see if there is some data in this key so we can say if equipped data is not equal to note that means if there is some data then then we can just say equipped dot value in fact this is not going to work because we have a well in fact it is gonna work I guess we can just put we could just say equipped key here because we were defining equipped appear and we're defining another equip so let's just change this to equip equipped key and we can change that here so equipped a City Hall stay still get a sync equipped key and then down here after we then we can say equipped key throwing say equipped dropped value equals and then we can just say equips data we were loading in the what the equipped was last time into the players current value so we've loaded in the equipped value now we just need to load in their tools into their inventory so what we're gonna say is if data is not equal to nil if there's some tools then what's going to happen is the we're gonna save the tools as a table and we can loop through that table and add each tool into their inventory so what we're going to do is we're gonna say for I comment tool in pairs data because that's what we're looping through do let me drop a few lines and inside of here what we're gonna do is we're gonna check to see if that tool is in service in tool models and it is so it's right isn't the tools folder then we know it's a real tool I'm gonna clone it into the players player model folder so we can see if game dot server storage not tools curl find first child tool then and inside of this for loop if the tool is a legitimate tool in the game we can just clone this tool by saying local pool equals game dot server storage got tools find first child at all so we're just getting that tool objects and then we're going to clone it so local in fact we can just say local clone tool local clone tool equals game itself storage tools find first child tool clone we can clone it and then we can say cloned tool dock parent to equals game but server storage got two models throw player tools and then square brackets we're gonna get their folder which is called that which is their player name so we put player dot name in square brackets and then let's have a look clone to up we spelt it wrong cloned tool so there we go we have cloned the tool into the players player tools folder in fact let's just do let's just do a find first child instead just in case it has not been created or accidentally gets deleted or something so there we go we have cloned the tool into their player tools folder and we should have successfully loaded the data now if they don't have any data and we know that there must be a new player or there might have been some date loss but usually it's a new player but what we're gonna want to do we just cannot want to wrap this in a peak or okay something goes wrong this get a sink doing say local success an error message equals he call function like this Piko function aha you just like this so we're wrapping this in a function and as P cool so that if something goes wrong your data stores are down it won't throw an error and it won't mess up the rest of the script it will just contain an error and we can check to see the if success then print data or the tools was successfully received what was successfully so we've got the data so we can say found and if it wasn't a success we can print or we can warn there was an error and we say error message so this just prevents any errors from occurring which could break the script maybe if data stores were down that's why we wrap it in a P cool we're gonna want to do the same thing for our equipped data you did the same thing local success error message equals P cool function and we have an end and a closing bracket and we want to just copy this and paste it below it now we're gonna want to define equipped data just before just before this P cool I'm gonna set it to nil so that we can update it and if something went wrong then we would still have this variable declared but it would be nil so we know that something went wrong okay we're gonna do the same thing for data we're just gonna get rid of this local and above it we're gonna say local data equals nil so there's no data yet but if everything goes well that data is going to be updated with the current tools table so we have wrapped our get a sinks in P equals which would prevent it from erroring and we also added an else just in case the data isn't found reverse a new player that should be everything done or getting the later the last thing we need to do is set it up so that when the player leaves the game we can save their data so this part is relatively simple all we need to do is just go outside of this player added event and at the bottom of our script we're gonna say game and dot players dot player or removing connect function and then we can drop a few lines make sure that the end with the closing bracket is added in and then we're going to create a table called tools this is the table which we're going to save and what we're going to do is we're going to loop through everything inside our inventory so in player tools before I comma object sorry tool not objects well though it can be called object if you want in pairs and inside of these brackets we're going to be looping through player tools folder so we can say game dot so storage got player tools and square brackets we can say the player's name don't forget to put player as an argument here a player dot name into our brackets and then say get children just like that then we're gonna say do and inside of this loop will you're just gonna add each tool into that table swing say table dot insert and then we can say tools and then come at all dots and name just like that and I've done that we just need to set a sink so set the data store values for each key so what we can do is we can say in a peak or local success error message equals P call function and inside of this function we can say datastore turn on set async and then if they tools because that's our key don't forget that actually what we can do is to make the keys a little bit readable we can add a hyphen after the after the word in the string and then we can have our user ID come after that just so it makes it a little bit easier to read instead of having your alright your aids dorky looking like this like this it could look something like like this which is a little bit easier just to see so up to you but make sure that you're keeping it the same names when you're setting a sink and getting a sink else we'll have some data loss so we're setting the the tools and we just want to give we want to pass that tool table so we're saving this table to the players data store with a specific key and then we can do the same things little earlier if success then print later saved else wouldn't print that there was an error and we can give that error message so we're gonna do the same thing now just copy and paste this but this time we're gonna change tools to equipped and because that's what we did earlier we called the datastore equipped that's what I key is called and then instead of tools we're just gonna give the players equipped value so player not equipped dot value just like that and we're gonna copy the same thing again with our success and our error message and there we go that's all done what we can then do is print at the end of this later successfully saved and then our side of this player moving you have to do a bind to close function so that when the last player leaves the game the game server doesn't shut down immediately just so we can make sure that everyone's data has been saved especially if the game shuts down as well save everyone's data you can say game curl on buying two clothes and then in brackets we can save function and inside of here we're just gonna say for I what player you win a loop through each player and kick them so the data gets saved or icon a player in pairs game doc players column get players Open bracket close bracket there's another bracket because we're ending that pairs bracket do drop the line and then we going to say if player then player kick and then the message we're going to do but give to them is that this game is shutting down and what move done that what we can do is outside of the for loop we can wait we can wait for the data to be saved I'm just going to wait about 10 seconds you could do a bindable event and wait for that event to be fired when the data say for example but to keep it simple we're gonna say for 10 seconds because that should be enough time for the data to be saved so I think that is everything so what we're going to do is we're just going to go and take this backdrop here and I'm just gonna go and place it underneath the base plate so we can't see it but I'm also gonna do because obviously we can't really see it because underneath the base plate when you go into lighting and set the ambient to quite bright and then we're gonna go up here and I'm gonna place a spawn location just next to my shop next to nako so that we can just quickly go in and test and let's go in and see if this works they click on Play and you can see that we do not have any cash that might be could be because of the saving and the access yes that's right because we need to publish this game first to be able to test the data stores in roblox to do so we're to go ahead and publish it so you can click on file or you can press alt P to publish it and then we'll go into a roblox game and test this out once you've published your game then you're gonna want to make sure that you go to configure game by clicking on the three dots next to the title and then you want to check the box next to the text which says enable API access to studio services and that's if you want to test it in place solo but you don't have to do that if you want to test it in game like me so we're gonna head into roblox now test this game out see if the shop works to see if it saves my data let's hope that it does and that shall be the end of this video one thing that we need to quickly fix which I found earlier on before we go and test this out you need to go into the local script and you need to make sure that over here we've got player door character humanoid that you just say wait for child and then we put the humanoid in these brackets just so that this humanoid we can wait for it to be loaded into the game before we start working with it so go ahead and publish your game and let's go ahead and check it out so I'm in the game and we're gonna walk up to our good friend Nico who's gonna give us the shop and you can see we're in here the back button is disabled and we can click forwards and go forwards and backwards so that's all good the cameras working perfectly so let's go ahead and try and buy an item now and you can see it's equipped and we can try buy another item and that one's equipped now we can go back and equip other items get our super power drill so you can see the equipping works perfectly fine so we've got the epic power drill I'm gonna exit the shop and I've got my drill over here and go back into the shop if we wanted to change that I'm currently got the epic power drill equipped and if I try and take it multiple times nothing happens and we can equip the better power drill now and there we go we've got our better power drill and you can see the money is being taken from my balance when we're buying all of these different drills so now let's go ahead check the output and see what's being reported my stained console and here we go so you see it's printing out every time we are looking at a new item it's printing out all the information from that table but let me go and leave the game and let's see if our data gets saved I'm currently on let's have a look 2800 cache and I've got the better power drill now let's go ahead and leave the game now I'm going back into the game and you can see our data did not save some reason so let's go ahead and work out why that did not happen so I'm back here in the game and you can see that my data has successfully been saved however the cache has not saved us because we didn't actually script the cache to save but I will show you how to do that later on at the end of the video but you can see we've got the better power drill still and that was the item that we left the game with let's go back to nako and go back into the shop and if we go over to the epic power drill it says that it's equipped and you can see that we have the ability to equip all of these other tools we do not have to buy them anymore because it has remembered and saved that we bought them all so there you go we have our mining simulator shop working perfectly just how we want it to be totally thought of and able compliant saves the data and it works 100% just awesome so that is the end of this tutorial on how to make a mining simulator shop now if you want to learn how to save your cash ingame and don't worry because I did a video on how to make a currency system just like the one we've done and also how to save it I'm gonna leave a card to that video which can you can go and check that in the top right corner of the screen I'm also gonna leave links down in the description to that I'm gonna leave links to all of my plugins that you can use to install because they really do help with a roblox development and I'm also going to leave the code in the description for this video so you can take it if it doesn't work for you I'm also going to give you a copy of this game and all of the objects which you need to put into the game as well as a little tutorial a written guide how to insert this into your game and that is everything so thank you for watching this series it has been a very very long day of recording I have spent all day recording this video you can see on the bottom left corner on my screen I have been recording this video for over for over six hours I've been planning it for many weeks making sure everything works seamlessly this is a lot of scripts that come together in this tutorial book fixing making the code much better I've put a lot of work into this I'd appreciate if you subscribe to my channel like the video and share it with anyone else who you think would like to make a roblox mining simulator shop just like this one so I hope you enjoyed it if your code doesn't work some reason then please do try the come in the description for a debug itself I've tried to make this as easy as possible to copy out and explain I hope you learned something from it and make sure to subscribe turn on the notification about be notified when I upload new video and this is Alvin blocks telling you to keep scripting
