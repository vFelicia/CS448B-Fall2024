With timestamps:

00:00 - hello welcome to video number six in my
00:02 - scripting series today we're going to be
00:04 - looking at functions what they are how
00:08 - you can use them and why you should use
00:10 - them so let's get started and in my
00:13 - previous video we went over instancing
00:16 - and variables so if you don't understand
00:18 - what this means go ahead and check them
00:20 - out I'll put a link in the top right
00:22 - corner over here and also in the
00:24 - description so what I've done here is I
00:27 - have created a block of code which in
00:30 - the script the code will create a part
00:33 - give it a name set its properties its
00:36 - brick color anchored position whatever
00:38 - and it will put it in the workspace now
00:40 - if we run this script you can see our
00:43 - part has been created exactly how we
00:46 - want to do so this is my part and I've
00:50 - only generated one part so far but if I
00:53 - wanted to generate five parts let's say
00:56 - then I would just copy and paste this
00:59 - code five times and there we go one two
01:03 - three four five I should now have five
01:06 - parts generated okay they've been
01:08 - generated they're all in the same place
01:10 - though so if we just drag them out one
01:12 - two three four five so we've got these
01:16 - five parts and if we head back to our
01:18 - scripts we now have 50 lines of code in
01:23 - our scripts just to generate five parts
01:26 - which seems quite a lot and if you just
01:30 - wanted to do the same thing over and
01:31 - over again this just seems really
01:32 - unnecessary having to write out 50 lines
01:34 - of code to insert five parts and maybe
01:39 - you'd want more parts in your game
01:40 - perhaps you perhaps you would like 500
01:44 - parts right you're not going to want to
01:46 - copy and paste this out 500 times
01:48 - look we were already at 200 lines so
01:51 - this is just not efficient and it's
01:55 - gonna take up way too much space in our
01:57 - scripts and it's just gonna look
01:58 - horrible for anybody who wants to look
02:01 - at it so if we wanted to insert a part
02:06 - multiple times or we wanted to do an
02:08 - action a number of times we could save
02:11 - ourselves having to copy and paste the
02:13 - same code over and over again by making
02:16 - it a function and a function is a
02:19 - defined set of code which will run when
02:24 - we call it by a name so if I wanted to
02:30 - create a function to generate a parts
02:33 - then I would only need to write out all
02:36 - of this code once and then I could call
02:39 - the function by its name say 50 times
02:42 - and it would reduce the number of lines
02:45 - of code that I'd have to write
02:47 - significantly so let's create a function
02:50 - I'm going to show you how to create one
02:51 - so firstly you have to tell the scripts
02:54 - that you want to create a function we do
02:56 - this by saying function and it should
02:59 - appear in blue if you've got the default
03:01 - script editor colors which you probably
03:03 - have once you've told it you want half a
03:05 - function we're gonna have a space and
03:06 - then we're gonna write the name of this
03:09 - function so you can name it whatever you
03:10 - like and this is what we're going to
03:13 - well the name that you give to this
03:15 - function is what you will write when you
03:17 - want to call it later on so I'm going to
03:21 - name this function to generate parts for
03:24 - obvious reasons I just calling the
03:26 - function by what it's going to do and
03:28 - then I'm going to have a pair of
03:30 - brackets or parentheses or whatever you
03:32 - call them in in your language and these
03:37 - brackets I will explain them in a future
03:39 - video but they're very important for
03:41 - using functions we're not going to be
03:42 - talking about them today but you need
03:44 - those brackets on the end and that's
03:46 - just syntax that's just how we write
03:49 - functions then drop a line and you
03:52 - should have an end added in by roblox
03:55 - you need to make sure you have this end
03:56 - added here because it tells the script
03:58 - where this function ends so now that
04:01 - we've created our function any code we
04:03 - want to execute when we call the
04:05 - function any code that wants to run when
04:08 - we call it needs to go in between these
04:10 - two lines so needs to go in this space
04:14 - here so we're going to take our code to
04:17 - generate a part we're just going to cut
04:19 - it out and we're gonna put it I'm gonna
04:22 - paste it inside of here now when you are
04:25 - using a function when you
04:27 - got code inside of a function you have
04:28 - to make sure it's organized and it looks
04:30 - good so we're going to indent it we're
04:32 - going to move it along to the side so to
04:35 - do that we highlight it and we press tab
04:37 - on the keyboard and that will just make
04:39 - sure it's it's organized it looks pretty
04:42 - and so that you know that that's just
04:44 - the way that we do it and how other
04:46 - scripters want it to look like so that's
04:49 - as good practice so now that we've got
04:51 - our function we've generated it we've
04:53 - given it a name generate parts and we've
04:56 - put the code that we want to run when we
04:58 - call it inside here so now surely if we
05:04 - run the scripts that should generate our
05:06 - part as usual because it's just
05:07 - executing this function well know if
05:10 - you'd listened to earlier and when I
05:12 - said about having to call it you realize
05:14 - that these scripts will not do anything
05:17 - and it will not run any code inside of a
05:20 - function until you call it by its name
05:23 - so even though we've defined this
05:25 - function it's not going to do anything
05:27 - we've just told the script what we want
05:30 - to do when we call this function by its
05:33 - name when we trigger it we haven't
05:35 - triggered this function yet we haven't
05:38 - triggered it by saying its name so if
05:41 - you wanted to run this function you'd
05:43 - have to call it by its name so we just
05:46 - say generate parts and we then need to
05:50 - put these brackets on the end to let the
05:52 - script know it's a function that we're
05:53 - going to call so when we write the name
05:56 - of our function and the two brackets the
05:59 - script is going to look up this function
06:01 - which we've already defined earlier in
06:04 - the script it's going to find it and
06:06 - then it's going to execute any code
06:09 - inside of the function so unless you
06:12 - call the function down here the script
06:15 - this is going to ignore this so now that
06:18 - we have called it by its name and we run
06:20 - the game it should insert our part for
06:23 - us so there we go it's inserted one part
06:26 - because we've got to this point in the
06:29 - scripts realize that we want to call
06:31 - this function and it has executed the
06:34 - code in here to create a part now if I
06:38 - wanted to insert five parts ago
06:41 - all I would need to do is copy this line
06:45 - which calls the function and paste it
06:48 - five times and already you can see that
06:51 - this has saved us having to write out
06:53 - the whole instance new and all of these
06:57 - properties that we want to edit we can
06:59 - just call this function five times run
07:03 - the script and there we go one two three
07:06 - four five parts generated in just 18
07:11 - lines not even that if you count the
07:13 - whitespace so you can see how functions
07:16 - allow you to save time if you are
07:18 - repeating the same code over and over
07:20 - again and not only do they save you time
07:22 - but they also make your code look much
07:24 - neater this code is way way WAY neater
07:27 - than the original and that when we had
07:29 - like 50 lines or whatever we don't even
07:32 - need to scroll down we can just see
07:34 - everything in one go and this is just
07:36 - good good clean code that we've written
07:38 - so we've used a function and we've
07:41 - called it to repeat the same code that
07:45 - we wanted to execute all we need to do
07:47 - need to write out once and then we can
07:50 - call it as many times as we like very
07:51 - very good so that is what a function
07:53 - does it executes code which we have
07:57 - defined already down here when we call
08:00 - it now a few things you have to define a
08:05 - function before you execute it so this
08:09 - whole function generate part end stuff
08:12 - and any of the code inside here that is
08:14 - that this this this part is defining the
08:17 - function telling the script what to do
08:20 - when we call it because if we call this
08:24 - function and remember that the script
08:27 - goes line by line
08:28 - it doesn't start that it doesn't start
08:29 - down here it starts up here so it goes
08:31 - on line 1 2 3 4 5 6 7 8 9 10 until it
08:36 - gets down here so it goes step by step
08:39 - from the top so if we called our called
08:42 - our function at the top and then defined
08:44 - it later on you can't do this because if
08:48 - the script is running from the top and
08:51 - it sees generate parts well we haven't
08:53 - got
08:55 - and the script doesn't know that this
08:57 - that we are going to be calling a
08:59 - function because we haven't defined it
09:01 - at this point it's only until line 8
09:04 - that this function is defined so if we
09:08 - run the game we're gonna get an error
09:11 - and it says attempt to call global which
09:14 - is the function but it doesn't know it's
09:17 - a function that's why it doesn't say
09:18 - function because it hasn't been defined
09:20 - yet so it just it just thinks it's a
09:22 - global attempt to call this thing called
09:25 - generate part and then it's saying it's
09:27 - a nil value when it's a nil value it
09:29 - means that it's nothing
09:31 - it hasn't been defined as anything yet
09:33 - so generate part is currently equal to
09:37 - nothing it has no meaning
09:38 - until you get to line 8 until you define
09:42 - the function until when when you define
09:45 - it after the function sorry when you
09:48 - call it after the functions been defined
09:50 - you can see no error and it runs
09:52 - perfectly five times so that is what a
09:56 - function is a function allows you to put
10:00 - code that you're going to be executing
10:03 - multiple times in there so you don't
10:05 - have to keep writing it out but it will
10:06 - save you time it'll make your scripts
10:08 - look nicer and this is only the
10:10 - beginning
10:10 - functions are really powerful and in the
10:13 - next videos we'll be looking at how to
10:15 - pass information when you call your
10:18 - function you can pass information to it
10:21 - so that your parts can be dynamic and
10:23 - they don't have to all be the same maybe
10:25 - on line 14 you want to generate a loop
10:29 - pass right which has a transparency of
10:31 - not 0.5 and maybe down here you then
10:34 - want to have a red part which is much
10:36 - bigger in the next few videos we'll be
10:38 - looking at how to pass information to
10:41 - these functions which will make them
10:43 - much more advanced and it will actually
10:46 - it will give you more meaning as to why
10:50 - we use functions because right now you
10:52 - might be thinking oh well I don't really
10:54 - get the point of this we can just copy
10:55 - and paste the code out it's not that big
10:57 - of an issue and yes you could say that
11:01 - but in the next few videos you will also
11:04 - see why
11:05 - functions are so powerful and why you
11:07 - will be wanting to use them so thanks
11:10 - for watching
11:10 - as I said check out my other videos in
11:12 - this playlist I've got lots of them so
11:15 - far this is the sixth one so you've got
11:17 - five other ones to watch if you've just
11:20 - stumbled upon this one right now and
11:23 - there are gonna be more coming soon so
11:24 - by the time you're watching this video
11:26 - there might be another one out so click
11:28 - on the thumbnail on the right side of
11:30 - your screen to go straight there don't
11:32 - forget to subscribe to my channel click
11:34 - on the album blocks logo in the middle
11:36 - of your screen right now or by clicking
11:39 - the subscribe button down below
11:41 - don't forget to like share it with
11:43 - somebody maybe like a friend or someone
11:45 - else who you you know on roblox so that
11:48 - they can also learn about functions it's
11:51 - good to spread the knowledge so thanks
11:53 - for watching and I'll see you in the
11:55 - next video

Cleaned transcript:

hello welcome to video number six in my scripting series today we're going to be looking at functions what they are how you can use them and why you should use them so let's get started and in my previous video we went over instancing and variables so if you don't understand what this means go ahead and check them out I'll put a link in the top right corner over here and also in the description so what I've done here is I have created a block of code which in the script the code will create a part give it a name set its properties its brick color anchored position whatever and it will put it in the workspace now if we run this script you can see our part has been created exactly how we want to do so this is my part and I've only generated one part so far but if I wanted to generate five parts let's say then I would just copy and paste this code five times and there we go one two three four five I should now have five parts generated okay they've been generated they're all in the same place though so if we just drag them out one two three four five so we've got these five parts and if we head back to our scripts we now have 50 lines of code in our scripts just to generate five parts which seems quite a lot and if you just wanted to do the same thing over and over again this just seems really unnecessary having to write out 50 lines of code to insert five parts and maybe you'd want more parts in your game perhaps you perhaps you would like 500 parts right you're not going to want to copy and paste this out 500 times look we were already at 200 lines so this is just not efficient and it's gonna take up way too much space in our scripts and it's just gonna look horrible for anybody who wants to look at it so if we wanted to insert a part multiple times or we wanted to do an action a number of times we could save ourselves having to copy and paste the same code over and over again by making it a function and a function is a defined set of code which will run when we call it by a name so if I wanted to create a function to generate a parts then I would only need to write out all of this code once and then I could call the function by its name say 50 times and it would reduce the number of lines of code that I'd have to write significantly so let's create a function I'm going to show you how to create one so firstly you have to tell the scripts that you want to create a function we do this by saying function and it should appear in blue if you've got the default script editor colors which you probably have once you've told it you want half a function we're gonna have a space and then we're gonna write the name of this function so you can name it whatever you like and this is what we're going to well the name that you give to this function is what you will write when you want to call it later on so I'm going to name this function to generate parts for obvious reasons I just calling the function by what it's going to do and then I'm going to have a pair of brackets or parentheses or whatever you call them in in your language and these brackets I will explain them in a future video but they're very important for using functions we're not going to be talking about them today but you need those brackets on the end and that's just syntax that's just how we write functions then drop a line and you should have an end added in by roblox you need to make sure you have this end added here because it tells the script where this function ends so now that we've created our function any code we want to execute when we call the function any code that wants to run when we call it needs to go in between these two lines so needs to go in this space here so we're going to take our code to generate a part we're just going to cut it out and we're gonna put it I'm gonna paste it inside of here now when you are using a function when you got code inside of a function you have to make sure it's organized and it looks good so we're going to indent it we're going to move it along to the side so to do that we highlight it and we press tab on the keyboard and that will just make sure it's it's organized it looks pretty and so that you know that that's just the way that we do it and how other scripters want it to look like so that's as good practice so now that we've got our function we've generated it we've given it a name generate parts and we've put the code that we want to run when we call it inside here so now surely if we run the scripts that should generate our part as usual because it's just executing this function well know if you'd listened to earlier and when I said about having to call it you realize that these scripts will not do anything and it will not run any code inside of a function until you call it by its name so even though we've defined this function it's not going to do anything we've just told the script what we want to do when we call this function by its name when we trigger it we haven't triggered this function yet we haven't triggered it by saying its name so if you wanted to run this function you'd have to call it by its name so we just say generate parts and we then need to put these brackets on the end to let the script know it's a function that we're going to call so when we write the name of our function and the two brackets the script is going to look up this function which we've already defined earlier in the script it's going to find it and then it's going to execute any code inside of the function so unless you call the function down here the script this is going to ignore this so now that we have called it by its name and we run the game it should insert our part for us so there we go it's inserted one part because we've got to this point in the scripts realize that we want to call this function and it has executed the code in here to create a part now if I wanted to insert five parts ago all I would need to do is copy this line which calls the function and paste it five times and already you can see that this has saved us having to write out the whole instance new and all of these properties that we want to edit we can just call this function five times run the script and there we go one two three four five parts generated in just 18 lines not even that if you count the whitespace so you can see how functions allow you to save time if you are repeating the same code over and over again and not only do they save you time but they also make your code look much neater this code is way way WAY neater than the original and that when we had like 50 lines or whatever we don't even need to scroll down we can just see everything in one go and this is just good good clean code that we've written so we've used a function and we've called it to repeat the same code that we wanted to execute all we need to do need to write out once and then we can call it as many times as we like very very good so that is what a function does it executes code which we have defined already down here when we call it now a few things you have to define a function before you execute it so this whole function generate part end stuff and any of the code inside here that is that this this this part is defining the function telling the script what to do when we call it because if we call this function and remember that the script goes line by line it doesn't start that it doesn't start down here it starts up here so it goes on line 1 2 3 4 5 6 7 8 9 10 until it gets down here so it goes step by step from the top so if we called our called our function at the top and then defined it later on you can't do this because if the script is running from the top and it sees generate parts well we haven't got and the script doesn't know that this that we are going to be calling a function because we haven't defined it at this point it's only until line 8 that this function is defined so if we run the game we're gonna get an error and it says attempt to call global which is the function but it doesn't know it's a function that's why it doesn't say function because it hasn't been defined yet so it just it just thinks it's a global attempt to call this thing called generate part and then it's saying it's a nil value when it's a nil value it means that it's nothing it hasn't been defined as anything yet so generate part is currently equal to nothing it has no meaning until you get to line 8 until you define the function until when when you define it after the function sorry when you call it after the functions been defined you can see no error and it runs perfectly five times so that is what a function is a function allows you to put code that you're going to be executing multiple times in there so you don't have to keep writing it out but it will save you time it'll make your scripts look nicer and this is only the beginning functions are really powerful and in the next videos we'll be looking at how to pass information when you call your function you can pass information to it so that your parts can be dynamic and they don't have to all be the same maybe on line 14 you want to generate a loop pass right which has a transparency of not 0.5 and maybe down here you then want to have a red part which is much bigger in the next few videos we'll be looking at how to pass information to these functions which will make them much more advanced and it will actually it will give you more meaning as to why we use functions because right now you might be thinking oh well I don't really get the point of this we can just copy and paste the code out it's not that big of an issue and yes you could say that but in the next few videos you will also see why functions are so powerful and why you will be wanting to use them so thanks for watching as I said check out my other videos in this playlist I've got lots of them so far this is the sixth one so you've got five other ones to watch if you've just stumbled upon this one right now and there are gonna be more coming soon so by the time you're watching this video there might be another one out so click on the thumbnail on the right side of your screen to go straight there don't forget to subscribe to my channel click on the album blocks logo in the middle of your screen right now or by clicking the subscribe button down below don't forget to like share it with somebody maybe like a friend or someone else who you you know on roblox so that they can also learn about functions it's good to spread the knowledge so thanks for watching and I'll see you in the next video
