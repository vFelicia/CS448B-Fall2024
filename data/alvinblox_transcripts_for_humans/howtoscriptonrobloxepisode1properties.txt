With timestamps:

00:00 - hey everyone this series is going to
00:02 - teach you how to script on roblox
00:05 - and in the first video i thought we'd
00:06 - look at something called properties
00:09 - so any roblox object has a list of
00:12 - properties which describes how it acts
00:14 - in the game how it looks for example and
00:16 - if you go to the view tab
00:18 - and click properties then whenever you
00:20 - select something such as a part
00:22 - you're going to see these lists of
00:23 - properties so we've got properties which
00:26 - change the color
00:27 - of a part we've got properties that
00:30 - change is transparency
00:32 - we've got material properties loads of
00:34 - different properties
00:36 - which change how this part looks and
00:39 - acts now these properties are very
00:42 - important
00:43 - in scripting because you can change them
00:45 - with a script and that's what scripting
00:48 - really is
00:48 - it's just about changing properties
00:51 - at different times and then when you put
00:54 - together all of these changing
00:56 - properties you you start to make your
00:58 - game
00:58 - interactive and so let me show you how
01:01 - you can change these properties with a
01:02 - script
01:03 - it's very simple so if we go into the
01:04 - server script service
01:06 - this is where we're going to put our
01:08 - scripts for this video
01:10 - we're going to insert a script okay this
01:12 - is a server script
01:14 - we'll dive into the different types of
01:16 - scripts in another video
01:18 - but what you need to know i'm just going
01:19 - to make my script a little bit bigger
01:22 - what you need to know is that to firstly
01:24 - change a property you need to
01:26 - tell the script which object you want to
01:30 - change the properties of
01:31 - so in this case we want to change this
01:33 - parts property so let's say we want to
01:35 - change
01:36 - its transparency which basically tells
01:39 - us
01:39 - whether you can see through a part or
01:41 - not now we can obviously change this in
01:43 - the properties window
01:44 - but what if we wanted to change it while
01:46 - the game is running through a script
01:49 - well we can't just you know click it and
01:51 - change it because we aren't controlling
01:53 - the game we have to do it through a
01:54 - script
01:55 - so we have to tell the script which
01:57 - object we want to change
01:59 - a property of and to do that we
02:02 - reference it
02:03 - and referencing is just telling the
02:04 - script where the object
02:06 - is in the game so this part is inside of
02:09 - the workspace
02:10 - the workspace is a service and it
02:12 - contains all of the
02:13 - parts and objects that we can see in the
02:16 - game such as this part
02:17 - this terrain etc so to reference this
02:21 - part
02:21 - very simple we just have to say game
02:25 - because the workspace service is in the
02:28 - game
02:28 - what we're looking at in the explorer is
02:30 - everything inside the game so
02:32 - firstly when we want to reference a
02:34 - service we have to say
02:36 - game so we say game and then from there
02:39 - we can choose one of these services now
02:42 - we're choosing the workspace
02:44 - and then we can choose any object that's
02:46 - inside this workspace because you can
02:48 - see
02:49 - these three objects the camera terrain
02:52 - and parts
02:52 - are all inside of the workspace when we
02:55 - close the workspace service
02:57 - you can see they get hidden and you can
02:59 - see that they're indented slightly which
03:01 - shows that they're
03:02 - members of the workspace so anything you
03:04 - can see in the game world
03:06 - that you can interact with and select
03:08 - such as this part
03:10 - is in the workspace so we say
03:13 - game.workspace
03:14 - and then dot each time when you want to
03:16 - reference a new object
03:18 - inside of the previous one so we want to
03:20 - look inside the workspace
03:22 - and we want to get this part so let's
03:24 - write out part
03:25 - that's the name of it there you go and
03:28 - it
03:29 - showed up in the autocomplete menu we
03:31 - now have our part
03:33 - so now that we've got our part
03:35 - referenced we've got access to the part
03:37 - we can now uh view all of these
03:39 - properties
03:40 - if we click on dot so if we press dot to
03:43 - insert a dot you can see all of these
03:46 - blue icon things appear in this list
03:50 - right
03:50 - don't worry about these ones we'll get
03:52 - to them in a later video
03:53 - so all of these blue icon things are
03:55 - called properties
03:56 - things that we can change so for example
03:59 - let's choose one of them
04:00 - we can view all of the properties
04:02 - available in this properties window so
04:04 - let's choose one so let's choose
04:06 - uh transparency okay so
04:09 - once we've now got our property we can
04:12 - change it
04:13 - just by saying equals and then we can
04:15 - set it to a new number
04:17 - obviously transparency is a number it's
04:19 - between zero and one
04:20 - zero being opaque you can't see through
04:23 - it and
04:24 - one being totally transparent you can
04:26 - see through it so
04:28 - it's a number between zero and one so
04:30 - any number in between
04:31 - will show a degree of transparency okay
04:34 - so
04:34 - if we just set this to one then it's
04:37 - going to become
04:38 - transparent fully transparent we'll be
04:39 - able to see through it
04:41 - so we have just updated the transparency
04:44 - property of this part
04:45 - to be one now this isn't going to run
04:48 - until we start the game because all
04:50 - server scripts
04:51 - like this one here only start running
04:54 - when the game
04:55 - starts running now this game is
04:56 - currently not running
04:58 - but to run it we can click on this
04:59 - little arrow
05:01 - under the play button and click on run
05:03 - we can press f8
05:05 - and if you look at that the part has
05:08 - disappeared
05:09 - it's still in the game but it's
05:10 - transparency property
05:12 - has just been set to one so that's
05:14 - because these scripts
05:15 - ran as soon as the game began and
05:17 - instantly set the parts transparency to
05:19 - zero
05:20 - but we've just manually gone and changed
05:22 - it back to zero through the properties
05:24 - tab
05:25 - so that is a property there are loads of
05:26 - properties in roblox studio
05:28 - there are so many actually that we don't
05:31 - just
05:32 - change transfer change properties by
05:34 - setting
05:35 - the property to a new number for example
05:38 - if we look at
05:38 - our name property this describes the
05:41 - name of the part so i could change this
05:43 - to be called
05:44 - brick or i could call it alvin blocks
05:46 - you can call it whatever you want
05:48 - but it has to be text right it has to be
05:51 - letters and characters
05:53 - you can also have numbers but in
05:55 - scripting we
05:56 - whenever we want to set the text of
05:57 - something uh such as name
06:00 - we use something called a string so
06:01 - let's just set the name
06:03 - property to be equal to something we
06:06 - still use the equal sign
06:07 - that just tells the script that we're
06:09 - updating the property to a new value
06:11 - but this time we want to set it to some
06:13 - text so
06:14 - if we wanted to call it my part for
06:17 - example
06:18 - well this wouldn't work we can't just
06:20 - say my part because the script gets
06:22 - confused here
06:23 - it's thinking well i i don't know what
06:25 - you mean by my part it's unknown to me i
06:28 - can't see it in the game anywhere
06:29 - it probably thinks we're looking for an
06:31 - object called my part
06:32 - but to get around this we just put it in
06:35 - a speech marks like this
06:37 - in in these like quotes so you can use
06:39 - speech marks or you can use the these
06:41 - quotes
06:42 - or apostrophes now you can see it's gone
06:45 - pink and that's because we have just
06:48 - defined a string
06:50 - and a string is a it is any characters
06:54 - of text you can have numbers as well but
06:57 - to be a string
06:58 - it's within these speech marks and that
07:00 - just tells the script
07:02 - that we are inserting some text here and
07:05 - that it shouldn't get confused
07:06 - this is just some text that we want to
07:08 - set our property to so this is a string
07:11 - because it is some text some characters
07:14 - some letters numbers
07:15 - wrapped inside these speech marks so
07:17 - whenever you're setting a name
07:19 - or using some text as a property you're
07:22 - going to use
07:22 - those speech marks because it's a string
07:25 - let's just look at some other
07:26 - properties for example material now if
07:28 - you wanted to update the material
07:31 - what we would do is instead of saying
07:34 - let's see what materials have we got
07:35 - we've got grass for example instead of
07:37 - saying grass
07:39 - all right you could say it in speech
07:41 - marks like this right
07:42 - but for materials it's best
07:46 - practice to use something called an enum
07:48 - an enumeration
07:50 - like this so you say enum and then you
07:53 - do a dot
07:53 - and then you do the name of the property
07:55 - so material
07:56 - and then another dot and the game will
07:58 - actually so the scripts will actually
08:00 - give you a list
08:01 - of materials to choose from and this is
08:04 - what an enum does it gives you a
08:05 - selectable list
08:06 - and this is just best practice whenever
08:08 - you're setting something
08:09 - such as a material which is a drop down
08:12 - so if you were to select pebble
08:13 - this would be your property so you're
08:15 - you're getting it from a list
08:18 - and that's what an enum is it is a
08:19 - little bit confusing you may be
08:20 - wondering you know
08:21 - why can't you just put it in speech
08:23 - marks but it's best practice
08:25 - to put it as an enum and an enum
08:28 - is just it's just a list it lets you
08:31 - choose from
08:32 - a predefined list and that is just best
08:35 - practice for roblox scripting if you run
08:37 - this script
08:38 - you can see immediately hold on we have
08:41 - an error
08:42 - let's go to the output window and it
08:44 - says part is not a valid member of
08:45 - workspace
08:46 - all right so we're learning something
08:48 - already here we've got an error
08:50 - now you're going to encounter a lot of
08:51 - errors in your code and that's because
08:53 - sometimes you will have made a typo
08:55 - or you will have forgotten to change
08:56 - something and whenever your script
08:58 - doesn't work
08:59 - now we could tell it didn't work because
09:00 - the material didn't update
09:03 - it's still marvel what we want it to be
09:05 - cobblestone
09:06 - so what's gone wrong well if we go to
09:08 - the output window by clicking view
09:10 - output then the script will print out an
09:13 - error message and it says
09:15 - server script so in this server script
09:17 - one line one here you can see
09:19 - line one part is not a valid member of
09:22 - workspace
09:22 - so it's saying i looked in the workspace
09:24 - for a a brick
09:26 - called part and it's not there that's
09:28 - because we changed the name
09:29 - to alvin blocks so let's change that to
09:32 - alvin blocks
09:33 - and run the game and this time it should
09:36 - instantly update
09:37 - our parts property to
09:40 - cobblestone don't worry about these
09:42 - errors here that's from a plug-in that
09:44 - i've got that is malfunctioning at the
09:46 - moment
09:46 - but there you go that is how you uh
09:49 - change properties in roblox scripting
09:51 - very important
09:52 - and also you've learned that there are
09:54 - different data types that we can
09:56 - set properties to so not just numbers
09:59 - but also strings
10:00 - whenever we want text we wrap them in
10:02 - those speech marks
10:04 - materials we use enums and also
10:07 - for properties such as anchored
10:09 - archivable
10:10 - can collide for example can collide is a
10:13 - property
10:14 - which we'll learn about in the future
10:16 - you can also set them to be boolean
10:18 - values and a boolean value
10:20 - is true or false and that represents
10:23 - whether
10:24 - one of these boxes would be checked or
10:26 - unchecked so false would be unchecked
10:28 - true would be checked we'll be looking
10:30 - at those properties in another video
10:32 - but thanks for watching your first
10:34 - roblox scripting tutorial
10:35 - if you enjoyed it please drop a like
10:37 - drop me a comment with
10:38 - any future videos you want to learn
10:40 - about and
10:42 - don't forget to subscribe and turn on
10:43 - your notifications of course thanks for
10:45 - watching i'll see you in the next one

Cleaned transcript:

hey everyone this series is going to teach you how to script on roblox and in the first video i thought we'd look at something called properties so any roblox object has a list of properties which describes how it acts in the game how it looks for example and if you go to the view tab and click properties then whenever you select something such as a part you're going to see these lists of properties so we've got properties which change the color of a part we've got properties that change is transparency we've got material properties loads of different properties which change how this part looks and acts now these properties are very important in scripting because you can change them with a script and that's what scripting really is it's just about changing properties at different times and then when you put together all of these changing properties you you start to make your game interactive and so let me show you how you can change these properties with a script it's very simple so if we go into the server script service this is where we're going to put our scripts for this video we're going to insert a script okay this is a server script we'll dive into the different types of scripts in another video but what you need to know i'm just going to make my script a little bit bigger what you need to know is that to firstly change a property you need to tell the script which object you want to change the properties of so in this case we want to change this parts property so let's say we want to change its transparency which basically tells us whether you can see through a part or not now we can obviously change this in the properties window but what if we wanted to change it while the game is running through a script well we can't just you know click it and change it because we aren't controlling the game we have to do it through a script so we have to tell the script which object we want to change a property of and to do that we reference it and referencing is just telling the script where the object is in the game so this part is inside of the workspace the workspace is a service and it contains all of the parts and objects that we can see in the game such as this part this terrain etc so to reference this part very simple we just have to say game because the workspace service is in the game what we're looking at in the explorer is everything inside the game so firstly when we want to reference a service we have to say game so we say game and then from there we can choose one of these services now we're choosing the workspace and then we can choose any object that's inside this workspace because you can see these three objects the camera terrain and parts are all inside of the workspace when we close the workspace service you can see they get hidden and you can see that they're indented slightly which shows that they're members of the workspace so anything you can see in the game world that you can interact with and select such as this part is in the workspace so we say game.workspace and then dot each time when you want to reference a new object inside of the previous one so we want to look inside the workspace and we want to get this part so let's write out part that's the name of it there you go and it showed up in the autocomplete menu we now have our part so now that we've got our part referenced we've got access to the part we can now uh view all of these properties if we click on dot so if we press dot to insert a dot you can see all of these blue icon things appear in this list right don't worry about these ones we'll get to them in a later video so all of these blue icon things are called properties things that we can change so for example let's choose one of them we can view all of the properties available in this properties window so let's choose one so let's choose uh transparency okay so once we've now got our property we can change it just by saying equals and then we can set it to a new number obviously transparency is a number it's between zero and one zero being opaque you can't see through it and one being totally transparent you can see through it so it's a number between zero and one so any number in between will show a degree of transparency okay so if we just set this to one then it's going to become transparent fully transparent we'll be able to see through it so we have just updated the transparency property of this part to be one now this isn't going to run until we start the game because all server scripts like this one here only start running when the game starts running now this game is currently not running but to run it we can click on this little arrow under the play button and click on run we can press f8 and if you look at that the part has disappeared it's still in the game but it's transparency property has just been set to one so that's because these scripts ran as soon as the game began and instantly set the parts transparency to zero but we've just manually gone and changed it back to zero through the properties tab so that is a property there are loads of properties in roblox studio there are so many actually that we don't just change transfer change properties by setting the property to a new number for example if we look at our name property this describes the name of the part so i could change this to be called brick or i could call it alvin blocks you can call it whatever you want but it has to be text right it has to be letters and characters you can also have numbers but in scripting we whenever we want to set the text of something uh such as name we use something called a string so let's just set the name property to be equal to something we still use the equal sign that just tells the script that we're updating the property to a new value but this time we want to set it to some text so if we wanted to call it my part for example well this wouldn't work we can't just say my part because the script gets confused here it's thinking well i i don't know what you mean by my part it's unknown to me i can't see it in the game anywhere it probably thinks we're looking for an object called my part but to get around this we just put it in a speech marks like this in in these like quotes so you can use speech marks or you can use the these quotes or apostrophes now you can see it's gone pink and that's because we have just defined a string and a string is a it is any characters of text you can have numbers as well but to be a string it's within these speech marks and that just tells the script that we are inserting some text here and that it shouldn't get confused this is just some text that we want to set our property to so this is a string because it is some text some characters some letters numbers wrapped inside these speech marks so whenever you're setting a name or using some text as a property you're going to use those speech marks because it's a string let's just look at some other properties for example material now if you wanted to update the material what we would do is instead of saying let's see what materials have we got we've got grass for example instead of saying grass all right you could say it in speech marks like this right but for materials it's best practice to use something called an enum an enumeration like this so you say enum and then you do a dot and then you do the name of the property so material and then another dot and the game will actually so the scripts will actually give you a list of materials to choose from and this is what an enum does it gives you a selectable list and this is just best practice whenever you're setting something such as a material which is a drop down so if you were to select pebble this would be your property so you're you're getting it from a list and that's what an enum is it is a little bit confusing you may be wondering you know why can't you just put it in speech marks but it's best practice to put it as an enum and an enum is just it's just a list it lets you choose from a predefined list and that is just best practice for roblox scripting if you run this script you can see immediately hold on we have an error let's go to the output window and it says part is not a valid member of workspace all right so we're learning something already here we've got an error now you're going to encounter a lot of errors in your code and that's because sometimes you will have made a typo or you will have forgotten to change something and whenever your script doesn't work now we could tell it didn't work because the material didn't update it's still marvel what we want it to be cobblestone so what's gone wrong well if we go to the output window by clicking view output then the script will print out an error message and it says server script so in this server script one line one here you can see line one part is not a valid member of workspace so it's saying i looked in the workspace for a a brick called part and it's not there that's because we changed the name to alvin blocks so let's change that to alvin blocks and run the game and this time it should instantly update our parts property to cobblestone don't worry about these errors here that's from a plugin that i've got that is malfunctioning at the moment but there you go that is how you uh change properties in roblox scripting very important and also you've learned that there are different data types that we can set properties to so not just numbers but also strings whenever we want text we wrap them in those speech marks materials we use enums and also for properties such as anchored archivable can collide for example can collide is a property which we'll learn about in the future you can also set them to be boolean values and a boolean value is true or false and that represents whether one of these boxes would be checked or unchecked so false would be unchecked true would be checked we'll be looking at those properties in another video but thanks for watching your first roblox scripting tutorial if you enjoyed it please drop a like drop me a comment with any future videos you want to learn about and don't forget to subscribe and turn on your notifications of course thanks for watching i'll see you in the next one
