With timestamps:

00:00 - if you new to my channel make sure to
00:01 - subscribe and click on the notification
00:03 - bow so you never miss out when I upload
00:07 - a brand new video so what I'm going to
00:10 - do is we're going to insert a GUI into
00:14 - the game now so I'm going to give you a
00:15 - free my free GUI which I'm using for
00:19 - this project now it's not the best DUI
00:21 - I'm sure you can do better but I'm going
00:24 - to insert it into the game
00:27 - and I'm going to just show you how it
00:30 - looks so we've got a black BG and that
00:34 - stands for black background and that is
00:37 - just a simple black background which
00:40 - will appear to animate the screen when
00:42 - they load up the shop so it's gonna fade
00:44 - it's gonna fade like this so we're gonna
00:47 - set that to one so it's completely
00:50 - transparent for now we've also got a
00:52 - shop frame now this is what it looks
00:56 - like and obviously when they're in the
00:58 - shop
00:59 - it's gonna look something like this so
01:00 - they can click on the arrows to move it
01:02 - forwards and backwards down here this
01:04 - blue button will be telling them that
01:06 - they can either equip it or buy the item
01:09 - and we've got exit button here as well
01:11 - we're going to want to just delete the
01:14 - scripts we'll see there's not going to
01:15 - be a script for you I'm going to delete
01:17 - the script so we can add them back in
01:18 - ourselves and code it ourselves but I'm
01:22 - just gonna walk you through everything
01:23 - inside this GUI to make sure you know
01:26 - what everything's used for so obviously
01:28 - we've got a GUI object I've also got a
01:31 - value and that's going to be the current
01:33 - box that we're looking up so will it be
01:35 - box zero that we're currently focused on
01:37 - obviously when we move forwards or
01:38 - backwards that's gonna be set to box one
01:40 - box two box three all the way around you
01:43 - get the idea we've got an initiate shop
01:46 - bindable event and you'll see what
01:48 - that's for later on we've got our black
01:51 - BG which we just went over now in our
01:53 - shop frame we've got a value called
01:55 - model name and what that is going to do
01:58 - is it's just going to tell us the name
02:00 - of the tool which we're currently
02:02 - looking at so are we looking at the
02:04 - better drill or the epic drill at the
02:06 - moment we've then got our basic image
02:09 - buttons for back and forward a Buy
02:11 - button our exit button and a description
02:14 - and a title okay so you can't actually
02:17 - see them at the minute but that's
02:19 - because we haven't got any text in them
02:21 - so now what we can do is we can start
02:25 - scripting this GUI so that we can
02:29 - so the different items one win game I'm
02:31 - also going to need to slip their camera
02:33 - as well so that when they join or sorry
02:35 - when they enter the shop we can change
02:37 - their camera from being set to their
02:39 - player to be over here on the boxes
02:44 - okay so we're going to start scripting
02:46 - the camera first so let's go into the
02:49 - shop frame and let's just make it
02:51 - invisible for now and then we can go
02:54 - back into the shop insert a local script
02:56 - and this is where we're going to script
03:00 - the camera so we're gonna have a remote
03:03 - event in server storage and this is
03:07 - going to be called open shop so whenever
03:12 - we step on this block next to nako it's
03:17 - going to trigger that remote event and
03:19 - then when the client receives that
03:21 - remote event when it's triggered we're
03:23 - going to switch their camera to box zero
03:27 - and we're going to open up the GUI and
03:30 - initiate this bindable event which will
03:33 - open up the shot frame and set
03:37 - everything going so the first thing we
03:39 - want to do is create a variable or
03:41 - create a few variables actually or
03:44 - replicated storage and all of our GUI
03:46 - objects so exam ocol replicator storage
03:49 - equals game get service a replicated
03:52 - storage
03:54 - and then we're gonna want to get the
03:56 - shot frame so I'm copying pasting these
03:58 - in because it's gonna make it a lot
03:59 - quicker so shot frame lowercase s the
04:04 - shop uppercase F a frame make sure to
04:06 - get that right same replicates storage
04:09 - we're just getting the shot frame right
04:11 - all of our GUI elements are located
04:13 - we're then going to get the back and
04:16 - forward buttons so local back equals
04:18 - shot framed up back and look forward
04:20 - equals shot framed at forward we're then
04:23 - going to get there by description title
04:26 - GUI elements everything inside of our
04:29 - frame
04:31 - we're also going to get the camera off
04:34 - the player soon sake aimed at workspace
04:37 - current camera because that will be the
04:39 - players local camera which they'll be
04:40 - able to access this camera object is
04:43 - gonna be called current camera whenever
04:45 - a players in the game and whenever a
04:48 - player edits their camera there are only
04:49 - changes for them no one else in the game
04:51 - so each player has their own current
04:53 - camera in the workspace and then we're
04:55 - going to want to have a variable for
04:57 - item roller
05:00 - so game dat workspace wait for child
05:02 - item roller so a waiting thought to be
05:04 - added into the game and I'm also gonna
05:06 - want to have black B G and that's going
05:10 - to be the black background which will
05:13 - fade in and out whenever whenever they
05:16 - open up the shop they close the shop ok
05:20 - so we're gonna have current box which is
05:24 - the value we talked about earlier so
05:26 - script up parent wait for child current
05:28 - box and we also want to have a variable
05:32 - at the top here local player equals game
05:35 - dot players dot local player now this is
05:37 - gonna be the player who is running the
05:41 - shop and that the player which this code
05:43 - is running on so you can say game top
05:45 - players dot local player now the what we
05:50 - want to do we want say replicate is
05:52 - storage dot open shop dot on clients
05:56 - event colon connects open bracket
05:59 - function open bracket close bracket and
06:02 - drop a few lines now this is an event
06:03 - it's gonna run whenever it's somebody
06:06 - whenever someone opens that shop
06:09 - whenever that remote event is triggered
06:11 - so what we want to do is you want to set
06:13 - their camera type to scriptable this
06:16 - means that we can manipulate the camera
06:17 - and put the camera wherever you want to
06:20 - focus on so in this case we want to
06:22 - focus it on the item roller on the box
06:26 - so we have to change it to scriptable
06:27 - the camera dot camera type
06:34 - whoops camera camera type equals
06:37 - scriptable just like this we're then
06:40 - gonna want to fade the black BG so you
06:43 - can say for I equals so we're going from
06:46 - one which is completely transparent to 0
06:49 - which is opaque not transparent and
06:52 - we're going down in the increment of
06:54 - negative and not point 1 so every time
06:57 - it loops through the background
07:00 - transparency it's going to be chore I is
07:02 - gonna be changed by negative not point 1
07:05 - you're gonna set like BG black VG's
07:10 - background transparency to whatever the
07:18 - eye value is gonna be and then do
07:21 - weights naught point naught 5 so that it
07:24 - doesn't run immediately and so that we
07:26 - can see it changing and fading we're
07:29 - then going to want to await a short
07:31 - amount of time we just do wait not point
07:34 - 2 seconds so that we can see the fade
07:38 - that's fur and we're going to want to
07:42 - interpolate the camera now this means if
07:45 - the camera is currently at one location
07:48 - and we want to move it to another one
07:50 - smoothly without just changing it we can
07:53 - interpolate it so it's smoothly goes
07:56 - from one point to another point doing
07:58 - say camera put on interpolate and we're
08:04 - gonna take
08:06 - he won't worry we wanted to go so we
08:08 - wanted to start off at box zero soon say
08:12 - item rora and then in square brackets
08:15 - say box zero dot camp Part C frame a so
08:22 - the camp art remember is what I said was
08:24 - where the camera is going to be looking
08:26 - at so it's going to be this part and we
08:28 - want it to look in this direction so
08:30 - let's go back to our local script and we
08:33 - want to say camp uh dot C frame ice and
08:38 - roller
08:38 - I'm not saying exactly the same thing ox
08:41 - 0
08:44 - hitbox Nazi frame
08:48 - not point one so normally you will
08:52 - specify two different see frames okay
08:54 - for it to go to go from one to the other
08:57 - but we want to set it to box zero
08:59 - because that's where we start off so we
09:02 - can choose it to start off at box zero
09:03 - and end at box zero so it's not actually
09:06 - interpolating it's just setting the
09:08 - camera to that box zero scamper so now
09:13 - once the camera is looking at that box
09:15 - we can say shop frame not visible he's
09:20 - posed true and then we can fire off the
09:25 - bindable event which will work with
09:27 - later biasing scripts not parent but in
09:31 - this shape shop along fire you'll see
09:35 - while we're doing this later on when we
09:36 - code that bind will event but for now we
09:39 - want to fade that bindable not so we
09:43 - want to fade that frame again so that so
09:46 - that now that the camera is pointing to
09:47 - the the box we can fade it back so they
09:50 - can actually see see the items in the
09:54 - boxes so we can just copy this code from
09:57 - earlier it's for loop and change it
10:00 - slightly so we're going to change it
10:02 - from I equals 1 0 negative not 0.1 we
10:06 - can do 0 it starts off at 0 opaque it
10:10 - goes to 1 which is transparent and this
10:12 - time we're incrementing it by naught
10:14 - point naught 5 each time which is not
10:16 - negative it's just not point naught 5
10:19 - that should be everything done or
10:21 - opening up the shop let's go and test it
10:24 - out see if it works we're gonna go and
10:26 - play the game as a player I'm gonna
10:29 - manually fire off this event so we can
10:32 - do game not replicated storage oops it
10:37 - was open shop and we can just do fire
10:40 - all clients because we're the only ones
10:42 - in the game so you can see it has faded
10:46 - GUI is opened up the it's faded the the
10:52 - black BG it's opened up the shot frame
10:55 - and it's pointed our camera to look at
10:58 - the first box box zero
10:59 - you don't believe me if we have a look
11:01 - in workspace and we click on the item
11:04 - roller box zero you can see that is the
11:06 - selected box so the camera is pointing
11:08 - to that box because the the camera see
11:11 - frame is set to the cam part which is
11:14 - just here pretty cool you see the
11:17 - nothing works so far you know the
11:19 - buttons work that's what we're gonna be
11:21 - coding now
11:25 - right so the next big thing that we're
11:27 - going to do is we're going to code it so
11:29 - that we get all the data for each
11:31 - specific item but before we do that
11:34 - let's just insert all of the remote
11:36 - events and remote functions that we're
11:38 - going to need when we are programming
11:40 - the rest of this script so these are all
11:45 - of the remote functions remote events
11:46 - that we're going to be using it won't be
11:48 - of use now but if we get them all added
11:50 - in you'll see what they're used for
11:52 - later on and it will make the tutorial a
11:55 - lot quicker so let's insert a replicated
11:59 - interactive key to storage some remote
12:01 - functions we're going to have three
12:04 - remote functions and we're going to have
12:07 - for remote events so let's just
12:10 - duplicate three more and let's name the
12:13 - first remote function create transaction
12:16 - the second one is going to be called get
12:19 - tools port and the third one is going to
12:22 - be called request information
12:26 - information
12:29 - then the remote events we've got open
12:32 - shop our second one is called closed
12:34 - shop our third one is going to be called
12:37 - equipped tool our fourth one is going to
12:40 - be called player a reset okay you've got
12:45 - all of our AMA events and functions in
12:47 - here and now we can continue to program
12:51 - the rest of it
12:54 - right so the bindable event initiate
12:56 - shop which were firing here is going to
12:59 - show all of the data for each item it's
13:04 - going to get the data for each specific
13:08 - item that we're looking up and it's
13:10 - going to update the the price whether
13:14 - it's equipped or not and it will also
13:16 - show us the name of the item equips and
13:22 - whether it has a description or
13:23 - something so what we're going to do is
13:25 - we're going to create another event for
13:27 - this bindable event here so we can say
13:32 - we can just paste same code from earlier
13:35 - this event or you can get rid of
13:37 - everything inside of it and we can
13:39 - change open shop to initiate shop
13:47 - Shh shop and we can change replicated
13:51 - storage to scripts dot parent just like
13:54 - that we also need to change on client
13:57 - event to event just like this so now
14:00 - that we've done that we can start coding
14:02 - the bindable event now what we're going
14:05 - to do is we're going to need to define
14:08 - two more variables and they're going to
14:11 - be called disable button color and
14:14 - enabled button color and this will all
14:16 - make sense in a minute the disabled
14:18 - button color is I'll actually I'll show
14:22 - you what it does in a moment so what
14:27 - we're going to do is we're going to
14:28 - firstly get the current box about you
14:31 - okay so current box is going to be the
14:34 - box which we're currently looking at
14:35 - which the camera is currently pointing
14:37 - to so he's a local box name equals
14:41 - current box so this could be box 1 box 2
14:45 - or box 3 okay so what we want to do is
14:50 - we want to say box name not value equals
14:54 - 0 so we've got a variable for this box
14:57 - okay and we're setting this to 0 because
15:00 - if it's a box 0 which it currently is
15:03 - it'll just be set to 0 if it's box 1
15:05 - we'll set it to 1 and if it's box 500 it
15:08 - would be set to 500 so you don't need
15:10 - the box you just need the number because
15:12 - it's an int value what we're going to do
15:15 - is we're going to set well because it's
15:17 - currently at box 0 we can't go back we
15:20 - can only go forward so we're gonna make
15:22 - the back button come just gray so it
15:26 - looks like it's disabled so we can say
15:29 - you back image color 3 equals disabled
15:33 - button color and this disabled button
15:35 - color is a grayish color darkened color
15:39 - which will make the button look as if
15:41 - it's grayed out and obviously the
15:43 - enabled button color is just 255 255 255
15:48 - which is an RGB value for completely
15:50 - white so it will just make the button
15:53 - look completely bright so we can say
15:56 - forward
15:58 - image color 3 it was enabled button
16:01 - color so this is just helping the user
16:03 - know what they're supposed to click to
16:06 - make it a little bit easier and look
16:08 - make sure your shop look more
16:09 - professional what we're gonna do now is
16:12 - get the information for the specific box
16:15 - we'll currently looking at so every time
16:17 - we click the back button or the forward
16:19 - button we're gonna fire this initiate
16:21 - shop event and it's going to get the
16:23 - information for the new box and update
16:26 - the description title by button and the
16:29 - the price which is gonna be in the Buy
16:32 - button so what we can do is we can just
16:35 - create a value called model so local
16:38 - model equals nil this will make sense in
16:39 - a moment zoom in a little bit so you can
16:42 - see and what we're doing is we're going
16:45 - to get the model of the tool which is
16:47 - currently selected
16:48 - so remember box name value is going to
16:53 - be set to a number so we can get the
16:55 - current selected box by saying box dot
17:00 - Box name just like this so that's going
17:02 - to return box zero so we're gonna use
17:04 - this and we have a for loop to loop
17:07 - through every everything inside of box
17:12 - zero okay so what we want to do is we
17:16 - want to say for I come up objects in
17:19 - pairs and we say item roller and then we
17:23 - can say in square brackets box
17:28 - dot box name value and then in square
17:33 - brackets we just want to put this this
17:35 - in square brackets here so
17:39 - actually we need to get rid of the
17:40 - square bracket there we go so we're
17:42 - finding the box which is called box and
17:44 - then concatenating it with the value of
17:46 - box name so that'll be box 0 then we
17:50 - want to get children so get everything
17:54 - inside of this box I mean once they do
17:59 - line and there we go so this will start
18:03 - to make no sense but we're currently
18:05 - looking inside of this box model here
18:09 - okay now what we're going to do is we're
18:13 - gonna because remember there's going to
18:15 - be a model of the tool inside of this
18:17 - box okay for example it's gonna look
18:20 - like this because the drill is going to
18:22 - be somewhere in in this box right like
18:27 - this
18:30 - okay so mm what we're gonna do is let's
18:35 - go back to the script where we want to
18:37 - check so we're looping through every
18:40 - objects inside of this box model and
18:42 - you'll say if objects is a model then we
18:49 - can say model equals object hey so we're
18:52 - attribute in this this model of the tool
18:54 - to this model variable and then we're
18:59 - gonna say shop frame dot model name dot
19:03 - value equals objects drop name
19:07 - okay so updating this value called model
19:10 - name to whatever the tool inside this
19:13 - box is called so if the tool is called
19:15 - super power drill then model name is
19:18 - going to be called super power drill and
19:19 - we're gonna use this later on for a lot
19:22 - of different things and you'll see what
19:23 - it's used for later on so what's what
19:27 - we're doing here is we've with now our
19:30 - model variable is now set to whatever
19:34 - tool is in this box
19:36 - so whatever tool you're gonna get if you
19:39 - buy when the camera is set to box zero
19:42 - or box one or box two every time we move
19:46 - the camera forward or backwards we're
19:49 - running this bindable event which is
19:51 - going to update the box value and it's
19:55 - gonna look inside of this new box to
19:57 - find the tool and then it's gonna set
19:59 - that model value to the object of the
20:02 - tool if you don't understand this don't
20:05 - worry it will start to make more sense
20:06 - as we go along so what we're going to do
20:09 - now is we're going to get the data
20:12 - or the specific objects for example and
20:15 - which it costs the description the title
20:18 - etc whether we've already got it
20:21 - and we have to use our remote function
20:23 - here which we're going to use the
20:25 - request information remote function and
20:28 - we're going to be the reason we're using
20:30 - the remote function is because we're
20:32 - getting the data from the server so that
20:34 - it can't be hacked or Exploited for
20:36 - example if you had this information on
20:39 - the client and someone could easily
20:41 - change the price to one coin so that he
20:44 - could the exploit so he or she could
20:46 - have that's item without having to pay
20:49 - for it they could exploit your your
20:51 - items which isn't very good so what
20:54 - we're going to do is we're going to make
20:56 - a request to remote function and get the
20:59 - data for the specific item
21:02 - so to invoke this remote function all we
21:05 - have to do is say local data equals game
21:08 - dope replicated storage
21:13 - can say request information so to invoke
21:17 - the server what we have to do is we have
21:20 - to say local data so that's going to be
21:22 - our variable where the data which is
21:24 - going to be returned is going to and
21:26 - then we're gonna say replicated storage
21:30 - and then we're going to get the request
21:34 - information we might event and then we
21:38 - can say : invoke server and then in
21:42 - brackets we can say we can send over the
21:44 - model so we're giving the script where
21:48 - the whether you remote function is going
21:51 - to execute we're giving it the model
21:53 - which we want to find the data for and
21:55 - then we're going to code on the server
21:56 - we're going to use that model to find
21:59 - the tool and we're gonna send back as a
22:01 - table a bunch of data which we can show
22:04 - in our GUI so now we've done that we
22:06 - actually need to script the remote
22:09 - function on the server so we can go back
22:10 - to our server scripts in server script
22:12 - service and we're going to do an on
22:15 - server invoke a function so to do that
22:18 - you just need to say game don't
22:20 - replicate the storage and then we can
22:23 - say wait for child and we say request
22:27 - information dot on server invoke so when
22:33 - the server has been invoked by the
22:35 - client we say equals function and then
22:39 - we want to pass two arguments one for
22:43 - the player that sent this remote
22:45 - function that invoked it and the other
22:47 - argument is going to be the the item
22:50 - okay
22:51 - so we've got our two arguments we can
22:53 - drop a line and you see then end has
22:56 - been added to the script here so what we
23:00 - want to do is we want to create a
23:01 - variable in this server script which is
23:03 - going to be the table where all of the
23:05 - data is stored so you can say local data
23:08 - equals and then we can make a table like
23:11 - this so a table I said earlier it holds
23:14 - multiple values which can change so
23:17 - multiple variables so we now just want
23:20 - to make a couple more variables to use
23:22 - for getting the data and without some
23:25 - variables that are going to store each
23:28 - piece of data so the price whether it's
23:30 - bought already or not
23:33 - the description the title etc so we can
23:36 - say local bought equals false we're
23:40 - going to want a description so local
23:42 - description and add to get the
23:44 - description we're gonna have to go into
23:46 - the tool models folder and we're going
23:49 - to we're gonna have a folder in here and
23:53 - we're gonna call it information okay so
23:56 - inside of tour models we're gonna find
23:58 - the name of the item and we're gonna
24:00 - create a folder now we just we're gonna
24:03 - want to click on the plus here for our
24:06 - tool and insert a folder and we're going
24:09 - to call this folder information okay and
24:13 - we're gonna want to put inside of that
24:15 - folder three of values okay so we want
24:18 - we're going to want to have one int
24:20 - value which is going to be our cost and
24:22 - then we're going to have two string
24:25 - values it's gonna be the cost type and
24:27 - the description so a quick description
24:30 - about the item and the cost type so that
24:33 - we know what the user is going to be
24:35 - paying in now this might be useful if
24:38 - you're going to want the player to be
24:41 - able to buy items with different
24:42 - currencies so maybe gems or coins but if
24:46 - you're just sticking to one currency
24:48 - type as we are here you won't really
24:51 - need to have a cost type but we're gonna
24:53 - include it anyway just in case you want
24:55 - to add that into your shop so to get the
24:59 - description what we need to insert our
25:01 - three values first so in they go and
25:04 - we're just going to want to copy this
25:07 - folder into all of the other of the
25:11 - tools now you're gonna want to update
25:13 - the information values for each tool so
25:16 - you might want to change the description
25:17 - the cost type and the coins so if you
25:21 - wanted your your tool to cost a thousand
25:24 - coins you'd set the coin the cost value
25:27 - in the information folder to a thousand
25:31 - or whatever you want it to be I need to
25:33 - make sure that it's different for all
25:35 - your different tools else they're going
25:36 - to cost the same amount of money so to
25:39 - get the description we just have to say
25:41 - game a lot server storage and then we
25:44 - can say doc tool models and then in
25:47 - square brackets we can say item name
25:49 - because that's the name of our tool the
25:53 - object the argument which we passed then
25:55 - we're just gonna say dot information to
25:57 - get the folder description value and
26:01 - that is now bounded or attributed to the
26:04 - description variable so what we can do
26:07 - now is do the same thing for the title
26:09 - for the cost cost type etc so we can say
26:13 - local very cool title equals item dot
26:18 - name because that's just obviously the
26:20 - name of the item which you're passing
26:21 - the cost local cost equals game but we
26:27 - can just do the same thing here copy
26:30 - this line of code for the description
26:31 - and paste it in here and we just need to
26:34 - change the description to cost and what
26:37 - we want to do now is do the cost type so
26:41 - local cost type equals same thing I'm
26:45 - just going to change it to cost type and
26:47 - what we want to do now is we want to
26:49 - check to see
26:50 - whether the user has already bought the
26:53 - item and then we can return whether it's
26:54 - already bought or not so that we can say
26:57 - whether the item needs to be equipped or
26:59 - if it needs to be bought so to do this
27:02 - we need to check to see if the item is
27:05 - in the player tools folder okay because
27:08 - the player tools folder is their
27:10 - inventory it's going to show all of the
27:11 - different tools which they own so we can
27:14 - check to see if the item is currently
27:15 - inside of that folder and if it is we
27:18 - know that they've already bought that
27:19 - tall so we can say if game got so
27:24 - storage
27:27 - dots player tools and then in square
27:31 - brackets we're gonna do the player's
27:32 - name so there folder will be called
27:35 - their name so the Alvin blocks for
27:37 - example or dot shedletsky and then we
27:40 - can see but in fact what we want to do
27:43 - find first child because there might not
27:46 - be the the item might not be there so
27:48 - just in case we get an error we can say
27:50 - item name so find first child under name
27:53 - so if the tool is in their inventory
27:56 - then we know that they have bought it
27:59 - and we can set port to true else if they
28:04 - don't have the item we can just say bots
28:07 - equals false just like this so now we
28:10 - know whether the player will have bought
28:12 - the tool or not
28:15 - so what we need to do now is we need to
28:17 - insert all of this data into the data
28:20 - table and then we can just return it
28:23 - back to our local script so very easy we
28:26 - just have to do table dot inserts
28:28 - and then we want to give the table which
28:33 - we're inserting these values into which
28:35 - is data we want to give thee so
28:39 - whereabouts on the table with the first
28:41 - item is going to go so that's in
28:43 - position 1 and the piece of data that we
28:46 - want to insert into the table is going
28:49 - to be our title now we're going to want
28:51 - to copy and paste this we're gonna do it
28:54 - five times so one two three four five so
28:57 - we have five table door inserts we're
28:59 - gonna change them but in the middle to
29:01 - increase by one each time so we have a
29:03 - value going into position one if I
29:05 - you're going to person to person three
29:07 - person for panel five you get the idea
29:09 - our data scan we kept the same we just
29:12 - want to update the last parameter here
29:15 - so that's going to be the data so the
29:18 - second one we're going to have
29:20 - description third one is going to be the
29:23 - cost fourth one is going to be the cost
29:26 - type and a fifth one is going to be
29:29 - bought so what we're doing is we're just
29:33 - inserting all of this data into the
29:34 - table in order so the order is the
29:37 - number in the middle so what what
29:39 - position it's in the first parameter
29:42 - data here as you can see in yellow is
29:45 - the table which we're inserting into and
29:48 - the last value is the data or inserting
29:52 - at that position so we're doing it five
29:54 - times to insert all these values into
29:57 - our table and your table when all of
29:59 - these values have been inserted might
30:01 - look something like this so we could
30:05 - have mega drill this drill is mega for
30:13 - the description the cost three hundred
30:16 - and fifty the cost type could be coins
30:19 - and whether it's bought or not so true
30:22 - or false and you can see this data gives
30:25 - us a lot of information about whether
30:27 - the true
30:28 - all is port or not what the tool does
30:32 - how much it costs what how much you
30:35 - gonna pay and the name of the drill so
30:38 - we can return this back to our local
30:40 - script and we can we can update our GUI
30:44 - with the values for this specific drill
30:47 - and every time they click the backward
30:49 - and forward button we can run this and
30:51 - request information again and we can get
30:55 - the data for that item so to return it
30:58 - back
30:58 - we just need to say return data and that
31:01 - is gonna send back the full table to the
31:05 - local scripts so what we can do now it's
31:08 - head back to the local script and try
31:11 - and see if the data has been sent over
31:14 - so let's go back into the local scripts
31:17 - and data should be a table now okay so
31:23 - it should look like what we just made
31:25 - with our 5 values and we should be able
31:28 - to manipulate that table so that we can
31:30 - get the values out of it and put it into
31:32 - our GUI so what we can do is we can say
31:35 - for I comment V in pairs and then we can
31:39 - say data so looping through the data do
31:42 - you drop a line and we can say print V
31:46 - okay so what we can do is we can go and
31:50 - check this out and hopefully the data
31:52 - will be sent back to us
31:56 - okay so again error here and it says
31:58 - Alvin blocks is not a valid member of
32:00 - folder and this is because we haven't
32:03 - created a folder for our players data to
32:06 - go in so he needs to write a script that
32:08 - when the clay joins the game we can
32:11 - create a folder to load all of their
32:13 - data into and then save it when they
32:15 - leave the game
32:18 - you
32:28 - you
32:29 - [Music]

Cleaned transcript:

if you new to my channel make sure to subscribe and click on the notification bow so you never miss out when I upload a brand new video so what I'm going to do is we're going to insert a GUI into the game now so I'm going to give you a free my free GUI which I'm using for this project now it's not the best DUI I'm sure you can do better but I'm going to insert it into the game and I'm going to just show you how it looks so we've got a black BG and that stands for black background and that is just a simple black background which will appear to animate the screen when they load up the shop so it's gonna fade it's gonna fade like this so we're gonna set that to one so it's completely transparent for now we've also got a shop frame now this is what it looks like and obviously when they're in the shop it's gonna look something like this so they can click on the arrows to move it forwards and backwards down here this blue button will be telling them that they can either equip it or buy the item and we've got exit button here as well we're going to want to just delete the scripts we'll see there's not going to be a script for you I'm going to delete the script so we can add them back in ourselves and code it ourselves but I'm just gonna walk you through everything inside this GUI to make sure you know what everything's used for so obviously we've got a GUI object I've also got a value and that's going to be the current box that we're looking up so will it be box zero that we're currently focused on obviously when we move forwards or backwards that's gonna be set to box one box two box three all the way around you get the idea we've got an initiate shop bindable event and you'll see what that's for later on we've got our black BG which we just went over now in our shop frame we've got a value called model name and what that is going to do is it's just going to tell us the name of the tool which we're currently looking at so are we looking at the better drill or the epic drill at the moment we've then got our basic image buttons for back and forward a Buy button our exit button and a description and a title okay so you can't actually see them at the minute but that's because we haven't got any text in them so now what we can do is we can start scripting this GUI so that we can so the different items one win game I'm also going to need to slip their camera as well so that when they join or sorry when they enter the shop we can change their camera from being set to their player to be over here on the boxes okay so we're going to start scripting the camera first so let's go into the shop frame and let's just make it invisible for now and then we can go back into the shop insert a local script and this is where we're going to script the camera so we're gonna have a remote event in server storage and this is going to be called open shop so whenever we step on this block next to nako it's going to trigger that remote event and then when the client receives that remote event when it's triggered we're going to switch their camera to box zero and we're going to open up the GUI and initiate this bindable event which will open up the shot frame and set everything going so the first thing we want to do is create a variable or create a few variables actually or replicated storage and all of our GUI objects so exam ocol replicator storage equals game get service a replicated storage and then we're gonna want to get the shot frame so I'm copying pasting these in because it's gonna make it a lot quicker so shot frame lowercase s the shop uppercase F a frame make sure to get that right same replicates storage we're just getting the shot frame right all of our GUI elements are located we're then going to get the back and forward buttons so local back equals shot framed up back and look forward equals shot framed at forward we're then going to get there by description title GUI elements everything inside of our frame we're also going to get the camera off the player soon sake aimed at workspace current camera because that will be the players local camera which they'll be able to access this camera object is gonna be called current camera whenever a players in the game and whenever a player edits their camera there are only changes for them no one else in the game so each player has their own current camera in the workspace and then we're going to want to have a variable for item roller so game dat workspace wait for child item roller so a waiting thought to be added into the game and I'm also gonna want to have black B G and that's going to be the black background which will fade in and out whenever whenever they open up the shop they close the shop ok so we're gonna have current box which is the value we talked about earlier so script up parent wait for child current box and we also want to have a variable at the top here local player equals game dot players dot local player now this is gonna be the player who is running the shop and that the player which this code is running on so you can say game top players dot local player now the what we want to do we want say replicate is storage dot open shop dot on clients event colon connects open bracket function open bracket close bracket and drop a few lines now this is an event it's gonna run whenever it's somebody whenever someone opens that shop whenever that remote event is triggered so what we want to do is you want to set their camera type to scriptable this means that we can manipulate the camera and put the camera wherever you want to focus on so in this case we want to focus it on the item roller on the box so we have to change it to scriptable the camera dot camera type whoops camera camera type equals scriptable just like this we're then gonna want to fade the black BG so you can say for I equals so we're going from one which is completely transparent to 0 which is opaque not transparent and we're going down in the increment of negative and not point 1 so every time it loops through the background transparency it's going to be chore I is gonna be changed by negative not point 1 you're gonna set like BG black VG's background transparency to whatever the eye value is gonna be and then do weights naught point naught 5 so that it doesn't run immediately and so that we can see it changing and fading we're then going to want to await a short amount of time we just do wait not point 2 seconds so that we can see the fade that's fur and we're going to want to interpolate the camera now this means if the camera is currently at one location and we want to move it to another one smoothly without just changing it we can interpolate it so it's smoothly goes from one point to another point doing say camera put on interpolate and we're gonna take he won't worry we wanted to go so we wanted to start off at box zero soon say item rora and then in square brackets say box zero dot camp Part C frame a so the camp art remember is what I said was where the camera is going to be looking at so it's going to be this part and we want it to look in this direction so let's go back to our local script and we want to say camp uh dot C frame ice and roller I'm not saying exactly the same thing ox 0 hitbox Nazi frame not point one so normally you will specify two different see frames okay for it to go to go from one to the other but we want to set it to box zero because that's where we start off so we can choose it to start off at box zero and end at box zero so it's not actually interpolating it's just setting the camera to that box zero scamper so now once the camera is looking at that box we can say shop frame not visible he's posed true and then we can fire off the bindable event which will work with later biasing scripts not parent but in this shape shop along fire you'll see while we're doing this later on when we code that bind will event but for now we want to fade that bindable not so we want to fade that frame again so that so that now that the camera is pointing to the the box we can fade it back so they can actually see see the items in the boxes so we can just copy this code from earlier it's for loop and change it slightly so we're going to change it from I equals 1 0 negative not 0.1 we can do 0 it starts off at 0 opaque it goes to 1 which is transparent and this time we're incrementing it by naught point naught 5 each time which is not negative it's just not point naught 5 that should be everything done or opening up the shop let's go and test it out see if it works we're gonna go and play the game as a player I'm gonna manually fire off this event so we can do game not replicated storage oops it was open shop and we can just do fire all clients because we're the only ones in the game so you can see it has faded GUI is opened up the it's faded the the black BG it's opened up the shot frame and it's pointed our camera to look at the first box box zero you don't believe me if we have a look in workspace and we click on the item roller box zero you can see that is the selected box so the camera is pointing to that box because the the camera see frame is set to the cam part which is just here pretty cool you see the nothing works so far you know the buttons work that's what we're gonna be coding now right so the next big thing that we're going to do is we're going to code it so that we get all the data for each specific item but before we do that let's just insert all of the remote events and remote functions that we're going to need when we are programming the rest of this script so these are all of the remote functions remote events that we're going to be using it won't be of use now but if we get them all added in you'll see what they're used for later on and it will make the tutorial a lot quicker so let's insert a replicated interactive key to storage some remote functions we're going to have three remote functions and we're going to have for remote events so let's just duplicate three more and let's name the first remote function create transaction the second one is going to be called get tools port and the third one is going to be called request information information then the remote events we've got open shop our second one is called closed shop our third one is going to be called equipped tool our fourth one is going to be called player a reset okay you've got all of our AMA events and functions in here and now we can continue to program the rest of it right so the bindable event initiate shop which were firing here is going to show all of the data for each item it's going to get the data for each specific item that we're looking up and it's going to update the the price whether it's equipped or not and it will also show us the name of the item equips and whether it has a description or something so what we're going to do is we're going to create another event for this bindable event here so we can say we can just paste same code from earlier this event or you can get rid of everything inside of it and we can change open shop to initiate shop Shh shop and we can change replicated storage to scripts dot parent just like that we also need to change on client event to event just like this so now that we've done that we can start coding the bindable event now what we're going to do is we're going to need to define two more variables and they're going to be called disable button color and enabled button color and this will all make sense in a minute the disabled button color is I'll actually I'll show you what it does in a moment so what we're going to do is we're going to firstly get the current box about you okay so current box is going to be the box which we're currently looking at which the camera is currently pointing to so he's a local box name equals current box so this could be box 1 box 2 or box 3 okay so what we want to do is we want to say box name not value equals 0 so we've got a variable for this box okay and we're setting this to 0 because if it's a box 0 which it currently is it'll just be set to 0 if it's box 1 we'll set it to 1 and if it's box 500 it would be set to 500 so you don't need the box you just need the number because it's an int value what we're going to do is we're going to set well because it's currently at box 0 we can't go back we can only go forward so we're gonna make the back button come just gray so it looks like it's disabled so we can say you back image color 3 equals disabled button color and this disabled button color is a grayish color darkened color which will make the button look as if it's grayed out and obviously the enabled button color is just 255 255 255 which is an RGB value for completely white so it will just make the button look completely bright so we can say forward image color 3 it was enabled button color so this is just helping the user know what they're supposed to click to make it a little bit easier and look make sure your shop look more professional what we're gonna do now is get the information for the specific box we'll currently looking at so every time we click the back button or the forward button we're gonna fire this initiate shop event and it's going to get the information for the new box and update the description title by button and the the price which is gonna be in the Buy button so what we can do is we can just create a value called model so local model equals nil this will make sense in a moment zoom in a little bit so you can see and what we're doing is we're going to get the model of the tool which is currently selected so remember box name value is going to be set to a number so we can get the current selected box by saying box dot Box name just like this so that's going to return box zero so we're gonna use this and we have a for loop to loop through every everything inside of box zero okay so what we want to do is we want to say for I come up objects in pairs and we say item roller and then we can say in square brackets box dot box name value and then in square brackets we just want to put this this in square brackets here so actually we need to get rid of the square bracket there we go so we're finding the box which is called box and then concatenating it with the value of box name so that'll be box 0 then we want to get children so get everything inside of this box I mean once they do line and there we go so this will start to make no sense but we're currently looking inside of this box model here okay now what we're going to do is we're gonna because remember there's going to be a model of the tool inside of this box okay for example it's gonna look like this because the drill is going to be somewhere in in this box right like this okay so mm what we're gonna do is let's go back to the script where we want to check so we're looping through every objects inside of this box model and you'll say if objects is a model then we can say model equals object hey so we're attribute in this this model of the tool to this model variable and then we're gonna say shop frame dot model name dot value equals objects drop name okay so updating this value called model name to whatever the tool inside this box is called so if the tool is called super power drill then model name is going to be called super power drill and we're gonna use this later on for a lot of different things and you'll see what it's used for later on so what's what we're doing here is we've with now our model variable is now set to whatever tool is in this box so whatever tool you're gonna get if you buy when the camera is set to box zero or box one or box two every time we move the camera forward or backwards we're running this bindable event which is going to update the box value and it's gonna look inside of this new box to find the tool and then it's gonna set that model value to the object of the tool if you don't understand this don't worry it will start to make more sense as we go along so what we're going to do now is we're going to get the data or the specific objects for example and which it costs the description the title etc whether we've already got it and we have to use our remote function here which we're going to use the request information remote function and we're going to be the reason we're using the remote function is because we're getting the data from the server so that it can't be hacked or Exploited for example if you had this information on the client and someone could easily change the price to one coin so that he could the exploit so he or she could have that's item without having to pay for it they could exploit your your items which isn't very good so what we're going to do is we're going to make a request to remote function and get the data for the specific item so to invoke this remote function all we have to do is say local data equals game dope replicated storage can say request information so to invoke the server what we have to do is we have to say local data so that's going to be our variable where the data which is going to be returned is going to and then we're gonna say replicated storage and then we're going to get the request information we might event and then we can say invoke server and then in brackets we can say we can send over the model so we're giving the script where the whether you remote function is going to execute we're giving it the model which we want to find the data for and then we're going to code on the server we're going to use that model to find the tool and we're gonna send back as a table a bunch of data which we can show in our GUI so now we've done that we actually need to script the remote function on the server so we can go back to our server scripts in server script service and we're going to do an on server invoke a function so to do that you just need to say game don't replicate the storage and then we can say wait for child and we say request information dot on server invoke so when the server has been invoked by the client we say equals function and then we want to pass two arguments one for the player that sent this remote function that invoked it and the other argument is going to be the the item okay so we've got our two arguments we can drop a line and you see then end has been added to the script here so what we want to do is we want to create a variable in this server script which is going to be the table where all of the data is stored so you can say local data equals and then we can make a table like this so a table I said earlier it holds multiple values which can change so multiple variables so we now just want to make a couple more variables to use for getting the data and without some variables that are going to store each piece of data so the price whether it's bought already or not the description the title etc so we can say local bought equals false we're going to want a description so local description and add to get the description we're gonna have to go into the tool models folder and we're going to we're gonna have a folder in here and we're gonna call it information okay so inside of tour models we're gonna find the name of the item and we're gonna create a folder now we just we're gonna want to click on the plus here for our tool and insert a folder and we're going to call this folder information okay and we're gonna want to put inside of that folder three of values okay so we want we're going to want to have one int value which is going to be our cost and then we're going to have two string values it's gonna be the cost type and the description so a quick description about the item and the cost type so that we know what the user is going to be paying in now this might be useful if you're going to want the player to be able to buy items with different currencies so maybe gems or coins but if you're just sticking to one currency type as we are here you won't really need to have a cost type but we're gonna include it anyway just in case you want to add that into your shop so to get the description what we need to insert our three values first so in they go and we're just going to want to copy this folder into all of the other of the tools now you're gonna want to update the information values for each tool so you might want to change the description the cost type and the coins so if you wanted your your tool to cost a thousand coins you'd set the coin the cost value in the information folder to a thousand or whatever you want it to be I need to make sure that it's different for all your different tools else they're going to cost the same amount of money so to get the description we just have to say game a lot server storage and then we can say doc tool models and then in square brackets we can say item name because that's the name of our tool the object the argument which we passed then we're just gonna say dot information to get the folder description value and that is now bounded or attributed to the description variable so what we can do now is do the same thing for the title for the cost cost type etc so we can say local very cool title equals item dot name because that's just obviously the name of the item which you're passing the cost local cost equals game but we can just do the same thing here copy this line of code for the description and paste it in here and we just need to change the description to cost and what we want to do now is do the cost type so local cost type equals same thing I'm just going to change it to cost type and what we want to do now is we want to check to see whether the user has already bought the item and then we can return whether it's already bought or not so that we can say whether the item needs to be equipped or if it needs to be bought so to do this we need to check to see if the item is in the player tools folder okay because the player tools folder is their inventory it's going to show all of the different tools which they own so we can check to see if the item is currently inside of that folder and if it is we know that they've already bought that tall so we can say if game got so storage dots player tools and then in square brackets we're gonna do the player's name so there folder will be called their name so the Alvin blocks for example or dot shedletsky and then we can see but in fact what we want to do find first child because there might not be the the item might not be there so just in case we get an error we can say item name so find first child under name so if the tool is in their inventory then we know that they have bought it and we can set port to true else if they don't have the item we can just say bots equals false just like this so now we know whether the player will have bought the tool or not so what we need to do now is we need to insert all of this data into the data table and then we can just return it back to our local script so very easy we just have to do table dot inserts and then we want to give the table which we're inserting these values into which is data we want to give thee so whereabouts on the table with the first item is going to go so that's in position 1 and the piece of data that we want to insert into the table is going to be our title now we're going to want to copy and paste this we're gonna do it five times so one two three four five so we have five table door inserts we're gonna change them but in the middle to increase by one each time so we have a value going into position one if I you're going to person to person three person for panel five you get the idea our data scan we kept the same we just want to update the last parameter here so that's going to be the data so the second one we're going to have description third one is going to be the cost fourth one is going to be the cost type and a fifth one is going to be bought so what we're doing is we're just inserting all of this data into the table in order so the order is the number in the middle so what what position it's in the first parameter data here as you can see in yellow is the table which we're inserting into and the last value is the data or inserting at that position so we're doing it five times to insert all these values into our table and your table when all of these values have been inserted might look something like this so we could have mega drill this drill is mega for the description the cost three hundred and fifty the cost type could be coins and whether it's bought or not so true or false and you can see this data gives us a lot of information about whether the true all is port or not what the tool does how much it costs what how much you gonna pay and the name of the drill so we can return this back to our local script and we can we can update our GUI with the values for this specific drill and every time they click the backward and forward button we can run this and request information again and we can get the data for that item so to return it back we just need to say return data and that is gonna send back the full table to the local scripts so what we can do now it's head back to the local script and try and see if the data has been sent over so let's go back into the local scripts and data should be a table now okay so it should look like what we just made with our 5 values and we should be able to manipulate that table so that we can get the values out of it and put it into our GUI so what we can do is we can say for I comment V in pairs and then we can say data so looping through the data do you drop a line and we can say print V okay so what we can do is we can go and check this out and hopefully the data will be sent back to us okay so again error here and it says Alvin blocks is not a valid member of folder and this is because we haven't created a folder for our players data to go in so he needs to write a script that when the clay joins the game we can create a folder to load all of their data into and then save it when they leave the game you you
