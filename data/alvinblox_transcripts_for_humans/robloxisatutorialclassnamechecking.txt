With timestamps:

00:00 - in this tutorial I'm going to be showing
00:02 - you how to use is a on roblox so that
00:06 - you can check to see if an object is a
00:09 - specific class name or a specific object
00:14 - type so let's get started
00:17 - [Music]
00:24 - welcome back to another video my name is
00:27 - Ivan blocks and if it's your first time
00:28 - on my channel then please do consider
00:30 - subscribing and turning on the
00:32 - notification bow so you don't miss out
00:34 - on one upload future videos so in this
00:37 - video we're gonna be looking at
00:38 - something called is ah and what this
00:41 - does is it allows you to check if an
00:44 - object is of a specific type so for
00:47 - example if you had a model and you
00:51 - wanted to check whether all of its
00:53 - descendants everything inside of that
00:55 - model were parts then you can use is a
00:58 - to check whether they they are a certain
01:01 - object so let's get started by inserting
01:04 - a script into the workspace and what
01:07 - we're going to do is we're going to
01:09 - insert a couple of parts into the
01:12 - workspace okay now that we've done that
01:16 - let's just group them together in the
01:18 - model and let's go back to our script so
01:22 - what we're going to want to do is we're
01:23 - going to just quickly create a for loop
01:27 - which is going to loop through
01:28 - everything in the model and then we're
01:30 - gonna check each object to see whether
01:33 - it's apart so we're gonna say for I
01:38 - comma parts in pairs Open bracket close
01:42 - bracket and then inside of these we can
01:45 - say game got workspace got model :
01:49 - get descendants so what's it going to do
01:53 - it's going to get every single part
01:55 - inside of this model and then we can say
01:58 - do and what's going to happen is it's
02:00 - going to loop over every single part and
02:02 - we can check to see whether it is
02:04 - actually a part so what we want to say
02:07 - is if parts colon is a open bracket
02:13 - close bracket in fact we're going to do
02:14 - is we're going to change this part to
02:17 - objects which gonna change the name to
02:18 - object from you'll see why in a minute
02:20 - so let's say if objects : is a open
02:25 - bracket close bracket and inside of here
02:27 - in speech marks we're gonna say parts
02:31 - then we're going to print the objects
02:37 - named and we do a space dot object that
02:42 - named dot dot and then in speech marks
02:45 - we're gonna say space is of class and
02:51 - then another space I'm gonna docked up
02:53 - objects and actually we can just say
02:57 - part okay so what what's happening is
03:00 - we're looping through every single
03:02 - object in this model we're checking to
03:05 - see whether it's a part using is a and
03:08 - remember what we're doing is a or is a
03:10 - we are going to have to have a pair of
03:13 - brackets or parentheses and then inside
03:16 - of that we're going to have some speech
03:17 - marks with the object type so how do you
03:20 - know what an object's type is because
03:23 - it's not the name of an object it's its
03:26 - type so if we go into the properties tab
03:29 - over here and we click on a part and you
03:32 - can see here there is a real only
03:34 - property which we can't edit called
03:36 - class name so every object will how its
03:38 - own class name and you see this class
03:40 - name is called part so we know we will
03:43 - know that this is a part if its class
03:45 - name is called part because this part
03:47 - could be called anything it could be
03:48 - called hello but its class name is still
03:52 - a part because it is a part as what
03:54 - we've added into the game if we look at
03:56 - a model we can see that its class name
03:58 - as a model workspace that's obviously
04:01 - workspace but let's insert something
04:04 - let's insert a humanoid that will be of
04:06 - class humanoid no matter what the name
04:08 - is it's still a humanoid and it's what's
04:12 - used to identify different parts so if
04:14 - we want to check through different parts
04:16 - and make sure that they are the correct
04:18 - type we can use is ah okay so what
04:23 - should happen is it should print out the
04:26 - object's name Park is off class part
04:29 - because the and it should print it out
04:31 - one two three four five times because
04:33 - everything in this model is a part and
04:35 - there are five objects in the in the
04:37 - model so let's go ahead and open up the
04:40 - output
04:41 - let's go and just clear this and let's
04:43 - win the game and hopefully it should
04:45 - print out five times and there we go
04:47 - it's printed out the object name part is
04:49 - of class part and you see it's printed
04:52 - out five times
04:53 - it's just put a x five sign just so it
04:56 - doesn't clog up our output so it's
04:59 - checked every single object and it has
05:01 - found that they are all parts but if
05:04 - well let's see let's let's imagine that
05:07 - there are some parts there are some
05:08 - objects in there that aren't actually
05:09 - parts let's just say else prints the
05:14 - objects named dr. objects dot name is
05:20 - not a part
05:22 - okay so else means that if it is not a
05:25 - part then it's going to print this out
05:28 - saying that the object named and that
05:29 - it's object name is not a part so let's
05:32 - go and add some different objects in
05:34 - this add a force field looks like quite
05:36 - a few force fields in here let's give
05:41 - them different names let's just give
05:42 - them some normal names okay and let's
05:50 - just add in a trust part okay a tryst
05:55 - part is different to a normal part by
05:57 - because it looks like this okay it's
06:00 - different to a normal part and you can
06:02 - see the class name is different
06:03 - it's just part and sort of part so the
06:06 - script should have some objects which it
06:11 - won't which won't be normal parts so it
06:14 - should say that there are some parts
06:16 - which are not actual parts and there we
06:18 - go
06:19 - it says the object named and it's got
06:21 - the name is not apart let's go have a
06:24 - look at our model yeah we can see that
06:26 - isn't apart because it's a force field
06:28 - so it's printing out these different
06:30 - part names because it's checked to see
06:33 - whether it is a part he's found that the
06:36 - object isn't a part so it is printing
06:39 - its results so is a is just a way of
06:44 - checking the type of an object there are
06:47 - lots of different objects class names
06:48 - and if you wanted to print
06:53 - let's say for example print game dot
06:57 - workspace model : is a lemmings a model
07:03 - this should print out true because we're
07:07 - checking to see if the part in the model
07:11 - which is called model we're checking to
07:14 - see if it's class name is actually
07:16 - called model so because it has check
07:19 - this and it's found out that it's true
07:21 - it's going to print true to the output
07:23 - now let's see if we change this to part
07:27 - it's going to have a look and see
07:29 - whether this model is a part but we know
07:31 - it's not a part because it's actually a
07:33 - model the class name is a model so it's
07:35 - now printed false now you could also do
07:40 - this by just print by just saying print
07:43 - game dot workspace dot model dot class
07:47 - name ok and it would print out a model
07:50 - but we use is because it allows us to
07:53 - just get a true or false value of
07:57 - whether an object is a certain object or
08:00 - not and then we can use it in if
08:02 - statements while loops etc just to loop
08:04 - through all of our different objects in
08:06 - the game and make sure that they're a
08:07 - specific type so that's the end of this
08:09 - tutorial hopefully you enjoyed it found
08:11 - it useful if you just please leave a
08:13 - like down below make sure to subscribe
08:15 - and so long notification by um already
08:17 - this album blocks telling you to keep
08:20 - scripting
08:21 - [Music]
08:35 - you
08:36 - [Music]

Cleaned transcript:

in this tutorial I'm going to be showing you how to use is a on roblox so that you can check to see if an object is a specific class name or a specific object type so let's get started welcome back to another video my name is Ivan blocks and if it's your first time on my channel then please do consider subscribing and turning on the notification bow so you don't miss out on one upload future videos so in this video we're gonna be looking at something called is ah and what this does is it allows you to check if an object is of a specific type so for example if you had a model and you wanted to check whether all of its descendants everything inside of that model were parts then you can use is a to check whether they they are a certain object so let's get started by inserting a script into the workspace and what we're going to do is we're going to insert a couple of parts into the workspace okay now that we've done that let's just group them together in the model and let's go back to our script so what we're going to want to do is we're going to just quickly create a for loop which is going to loop through everything in the model and then we're gonna check each object to see whether it's apart so we're gonna say for I comma parts in pairs Open bracket close bracket and then inside of these we can say game got workspace got model get descendants so what's it going to do it's going to get every single part inside of this model and then we can say do and what's going to happen is it's going to loop over every single part and we can check to see whether it is actually a part so what we want to say is if parts colon is a open bracket close bracket in fact we're going to do is we're going to change this part to objects which gonna change the name to object from you'll see why in a minute so let's say if objects is a open bracket close bracket and inside of here in speech marks we're gonna say parts then we're going to print the objects named and we do a space dot object that named dot dot and then in speech marks we're gonna say space is of class and then another space I'm gonna docked up objects and actually we can just say part okay so what what's happening is we're looping through every single object in this model we're checking to see whether it's a part using is a and remember what we're doing is a or is a we are going to have to have a pair of brackets or parentheses and then inside of that we're going to have some speech marks with the object type so how do you know what an object's type is because it's not the name of an object it's its type so if we go into the properties tab over here and we click on a part and you can see here there is a real only property which we can't edit called class name so every object will how its own class name and you see this class name is called part so we know we will know that this is a part if its class name is called part because this part could be called anything it could be called hello but its class name is still a part because it is a part as what we've added into the game if we look at a model we can see that its class name as a model workspace that's obviously workspace but let's insert something let's insert a humanoid that will be of class humanoid no matter what the name is it's still a humanoid and it's what's used to identify different parts so if we want to check through different parts and make sure that they are the correct type we can use is ah okay so what should happen is it should print out the object's name Park is off class part because the and it should print it out one two three four five times because everything in this model is a part and there are five objects in the in the model so let's go ahead and open up the output let's go and just clear this and let's win the game and hopefully it should print out five times and there we go it's printed out the object name part is of class part and you see it's printed out five times it's just put a x five sign just so it doesn't clog up our output so it's checked every single object and it has found that they are all parts but if well let's see let's let's imagine that there are some parts there are some objects in there that aren't actually parts let's just say else prints the objects named dr. objects dot name is not a part okay so else means that if it is not a part then it's going to print this out saying that the object named and that it's object name is not a part so let's go and add some different objects in this add a force field looks like quite a few force fields in here let's give them different names let's just give them some normal names okay and let's just add in a trust part okay a tryst part is different to a normal part by because it looks like this okay it's different to a normal part and you can see the class name is different it's just part and sort of part so the script should have some objects which it won't which won't be normal parts so it should say that there are some parts which are not actual parts and there we go it says the object named and it's got the name is not apart let's go have a look at our model yeah we can see that isn't apart because it's a force field so it's printing out these different part names because it's checked to see whether it is a part he's found that the object isn't a part so it is printing its results so is a is just a way of checking the type of an object there are lots of different objects class names and if you wanted to print let's say for example print game dot workspace model is a lemmings a model this should print out true because we're checking to see if the part in the model which is called model we're checking to see if it's class name is actually called model so because it has check this and it's found out that it's true it's going to print true to the output now let's see if we change this to part it's going to have a look and see whether this model is a part but we know it's not a part because it's actually a model the class name is a model so it's now printed false now you could also do this by just print by just saying print game dot workspace dot model dot class name ok and it would print out a model but we use is because it allows us to just get a true or false value of whether an object is a certain object or not and then we can use it in if statements while loops etc just to loop through all of our different objects in the game and make sure that they're a specific type so that's the end of this tutorial hopefully you enjoyed it found it useful if you just please leave a like down below make sure to subscribe and so long notification by um already this album blocks telling you to keep scripting you
