With timestamps:

00:00 - so a lot of people want to know how to
00:01 - make cutscenes in roblox very very
00:03 - simple so firstly insert a part this is
00:07 - where the camera is going to be at the
00:10 - start to begin with so what you need to
00:13 - do is anchor the part that can collider
00:16 - to false and whether you make it
00:19 - transparent or not doesn't really matter
00:20 - I'm going to leave it half transparent
00:22 - for now so we can see it but the most
00:24 - important thing is if you go to the
00:26 - surface tap in the properties window and
00:29 - you click on front surface so if you
00:33 - think of the camera we're going to
00:34 - position the camera to be in this
00:35 - position so it's going to be looking at
00:37 - where the front surface is so if you do
00:41 - that and you just position the front
00:43 - surface to be rotated and positioned in
00:46 - the way you want it to be so the front
00:48 - surface will be wherever the camera is
00:50 - going to face okay so when you've got
00:53 - your first one let's just name it you
00:56 - know test one let's insert another part
00:59 - and what you can do actually is set the
01:01 - front surface to a motor so you can
01:04 - actually see it it's now pointing out
01:06 - from the front surface you can see that
01:08 - it's going to be in this direction so
01:10 - let's just duplicate this and put it
01:14 - somewhere else over here for example so
01:17 - now we've got our two parts I'm going to
01:19 - name this one part two let's go ahead
01:22 - and script them okay so to make a tween
01:25 - it's very simple we have to do it in a
01:27 - local scripts because the camera is
01:29 - controlled locally on the client for
01:31 - each player so in our local script I've
01:33 - put it in the starter GUI we firstly
01:36 - have to make a variable for the tween
01:38 - service then I'm making a variable for
01:40 - the camera because that's what we're
01:41 - gonna be animating and I'm also creating
01:43 - a variable for the length of the
01:45 - cutscene so if you want it to last 12
01:47 - seconds keep it at 12 but change it to
01:49 - the amount of seconds you want then I
01:51 - set up between info now this is required
01:53 - to tell the script what our tween should
01:55 - look like so we have to give it the time
01:58 - which is going to be in seconds I've
01:59 - just passed the variable then a comma to
02:02 - separate from everything else then the
02:04 - style so what the animation will look
02:06 - like you can choose from a predefined
02:08 - list I've chosen sine or there you can
02:10 - choose any of these have a play with
02:12 - them
02:13 - easing direction you have to choose in
02:15 - or out or in out not shake it all about
02:18 - so choose one of these and that just
02:20 - determines the way that the animation
02:23 - plays so does it go from you know just
02:26 - go from backwards you know and plays it
02:28 - the other way around
02:29 - so I've kept it a tap out and then we've
02:32 - got the repeats count so whether it will
02:35 - repeat itself I don't want that so I've
02:37 - set to zero then this false is gonna be
02:40 - whether it reverses obviously it's not
02:41 - going to repeat so it can't reverse so
02:43 - that's false and also zero is the delay
02:45 - time so if you wanted it to delay once
02:47 - it's got there before it goes back if
02:49 - you did repeat it you'd put an amount of
02:51 - seconds in there but what I've done is
02:53 - I've created a function and it's called
02:54 - tween and it will take two arguments
02:56 - Part one and Part two so part one is an
02:59 - object and so it's part two and part one
03:02 - is going to be the part where the camera
03:03 - starts off at so we firstly have to set
03:06 - the cameras camera type to be scriptable
03:07 - so it's an enum and when he set it to
03:10 - scriptable that's allowing you to edit
03:12 - the camera with the scripts if he didn't
03:14 - do this it wouldn't work properly
03:15 - because the camera wouldn't go from part
03:17 - one it would go from your character so
03:19 - once we've set a descriptor ball we're
03:21 - then able to change the C frame so the
03:23 - position and rotation of the camera to
03:25 - be looking at part one so the way that
03:28 - part one is facing so if you imagine
03:30 - because it's fate is going to be looking
03:32 - from the front surface going outwards it
03:34 - would be looking here okay so then we
03:37 - create the tween we give it the camera
03:39 - because that's the object which we're
03:40 - going to change the properties of in
03:42 - this case we'll be changing its C frame
03:44 - property we're going to give it some
03:46 - tween info so this is the info we've
03:48 - created to tell the scripts how the
03:49 - tween is going to animate and what it
03:51 - will look like and then this table here
03:53 - the third argument is the list of
03:56 - properties which we're going to change
03:57 - so we're only going to change the camera
03:58 - C frame we're telling the script that we
04:00 - want to move the camera to part two C
04:03 - frame so if part two was over there well
04:06 - the script would would just animate it
04:08 - like this and it would just find the
04:10 - fastest route to get to this part to get
04:12 - to the second part C frame and it will
04:14 - smoothly animate it because we've given
04:15 - the tween info which tells us how long
04:17 - it should last for the style of the
04:19 - animation etc so we then play the tween
04:22 - and then we have to wait 12 seconds
04:25 - because this doesn't yield
04:27 - as soon as we press play and we start
04:29 - the tween it will just move on to the
04:31 - next line of code which would be to
04:33 - reset the camera to be looking at your
04:34 - character again we don't want to do that
04:36 - straightaway we need to wait the length
04:38 - of the cutscene so have the weights with
04:40 - the same amount of time after the tween
04:42 - between code and play then we'll wait
04:44 - the 12 seconds before it resets the
04:46 - camera when it sets the camera type it
04:48 - back to custom so outside of the
04:50 - function I'm just waiting two seconds to
04:52 - allow the player to spawn in and then
04:53 - calling the function and I'm passing
04:55 - through the two parts so game dot work
04:58 - space test-1 is where the camera will
04:59 - start off and game dot work space test2
05:02 - is where it's going to end up so let me
05:04 - go and show you this now and we wait the
05:06 - two seconds so that we can spawn in you
05:09 - can see the camera is now smoothly
05:11 - transitioning to the second part so
05:13 - really really cool and of course you can
05:16 - edit and change it so it could be
05:17 - starting over here and you know we could
05:20 - have it just a part over here just to
05:21 - show you the camera moving and if we
05:26 - just go in and change the length maybe
05:29 - to ten like this and we start it up
05:32 - again you'll see the just really
05:35 - smoothly animates once again from the
05:38 - first part to the second part just like
05:41 - that and you've got a really lovely
05:42 - cutscene so obviously you don't have to
05:46 - you don't you have to keep these these
05:48 - parts visible you can just make them
05:49 - transparent as long as they're anchored
05:51 - so they stay in position and can collide
05:53 - is false so you can't collide with them
05:55 - which is really important to know that
05:56 - the camera will be looking at whatever
05:58 - the front surface of each part is going
06:00 - to be looking at and if you wanted to do
06:02 - this you know multiple times just keep
06:04 - calling this tween function so for
06:06 - example if you wanted to do it again
06:08 - from going from test to two then another
06:11 - part called test three just put another
06:13 - part in there call it test three and
06:17 - we'll just change the name test three
06:19 - and you've got that second function cool
06:21 - so once the first tween is done and with
06:23 - the camera is now at test two you can
06:26 - put it to test three so let's go and
06:27 - give that a try and set the cutscene to
06:30 - three seconds for now here we go
06:34 - ghost
06:35 - one and then it goes to part two just
06:38 - like that pretty awesome huh and you
06:41 - might want different times for you know
06:43 - different tweens so you could move the
06:45 - cutscene time and the whole tween info
06:47 - stuff into the tween function like this
06:50 - so it's a different cutscene time and
06:53 - you could have an argument called let's
06:54 - call it cutscene time you can't use the
06:56 - word time because that's using scripting
06:58 - for something else but you could then
07:01 - just get rid of this variable and change
07:03 - the cutscene time in between info to the
07:05 - cutscene time argument is now in the
07:07 - tween and then if you passed the timer
07:09 - you would see one second for the first
07:12 - ten second for the second and it would
07:14 - go at different speeds so the first
07:16 - tween should be really fast whereas the
07:17 - second one shouldn't be see really fast
07:20 - and then really really long so that's
07:22 - how you do tweening in roblox with the
07:24 - camera I hope you found this useful
07:26 - do check out my video on see frames it
07:28 - should make it easy to understand and
07:29 - yeah please like the video subscribe if
07:32 - you enjoyed it share it with a friend
07:33 - and I'll see you in the next one thanks
07:34 - for watching

Cleaned transcript:

so a lot of people want to know how to make cutscenes in roblox very very simple so firstly insert a part this is where the camera is going to be at the start to begin with so what you need to do is anchor the part that can collider to false and whether you make it transparent or not doesn't really matter I'm going to leave it half transparent for now so we can see it but the most important thing is if you go to the surface tap in the properties window and you click on front surface so if you think of the camera we're going to position the camera to be in this position so it's going to be looking at where the front surface is so if you do that and you just position the front surface to be rotated and positioned in the way you want it to be so the front surface will be wherever the camera is going to face okay so when you've got your first one let's just name it you know test one let's insert another part and what you can do actually is set the front surface to a motor so you can actually see it it's now pointing out from the front surface you can see that it's going to be in this direction so let's just duplicate this and put it somewhere else over here for example so now we've got our two parts I'm going to name this one part two let's go ahead and script them okay so to make a tween it's very simple we have to do it in a local scripts because the camera is controlled locally on the client for each player so in our local script I've put it in the starter GUI we firstly have to make a variable for the tween service then I'm making a variable for the camera because that's what we're gonna be animating and I'm also creating a variable for the length of the cutscene so if you want it to last 12 seconds keep it at 12 but change it to the amount of seconds you want then I set up between info now this is required to tell the script what our tween should look like so we have to give it the time which is going to be in seconds I've just passed the variable then a comma to separate from everything else then the style so what the animation will look like you can choose from a predefined list I've chosen sine or there you can choose any of these have a play with them easing direction you have to choose in or out or in out not shake it all about so choose one of these and that just determines the way that the animation plays so does it go from you know just go from backwards you know and plays it the other way around so I've kept it a tap out and then we've got the repeats count so whether it will repeat itself I don't want that so I've set to zero then this false is gonna be whether it reverses obviously it's not going to repeat so it can't reverse so that's false and also zero is the delay time so if you wanted it to delay once it's got there before it goes back if you did repeat it you'd put an amount of seconds in there but what I've done is I've created a function and it's called tween and it will take two arguments Part one and Part two so part one is an object and so it's part two and part one is going to be the part where the camera starts off at so we firstly have to set the cameras camera type to be scriptable so it's an enum and when he set it to scriptable that's allowing you to edit the camera with the scripts if he didn't do this it wouldn't work properly because the camera wouldn't go from part one it would go from your character so once we've set a descriptor ball we're then able to change the C frame so the position and rotation of the camera to be looking at part one so the way that part one is facing so if you imagine because it's fate is going to be looking from the front surface going outwards it would be looking here okay so then we create the tween we give it the camera because that's the object which we're going to change the properties of in this case we'll be changing its C frame property we're going to give it some tween info so this is the info we've created to tell the scripts how the tween is going to animate and what it will look like and then this table here the third argument is the list of properties which we're going to change so we're only going to change the camera C frame we're telling the script that we want to move the camera to part two C frame so if part two was over there well the script would would just animate it like this and it would just find the fastest route to get to this part to get to the second part C frame and it will smoothly animate it because we've given the tween info which tells us how long it should last for the style of the animation etc so we then play the tween and then we have to wait 12 seconds because this doesn't yield as soon as we press play and we start the tween it will just move on to the next line of code which would be to reset the camera to be looking at your character again we don't want to do that straightaway we need to wait the length of the cutscene so have the weights with the same amount of time after the tween between code and play then we'll wait the 12 seconds before it resets the camera when it sets the camera type it back to custom so outside of the function I'm just waiting two seconds to allow the player to spawn in and then calling the function and I'm passing through the two parts so game dot work space test1 is where the camera will start off and game dot work space test2 is where it's going to end up so let me go and show you this now and we wait the two seconds so that we can spawn in you can see the camera is now smoothly transitioning to the second part so really really cool and of course you can edit and change it so it could be starting over here and you know we could have it just a part over here just to show you the camera moving and if we just go in and change the length maybe to ten like this and we start it up again you'll see the just really smoothly animates once again from the first part to the second part just like that and you've got a really lovely cutscene so obviously you don't have to you don't you have to keep these these parts visible you can just make them transparent as long as they're anchored so they stay in position and can collide is false so you can't collide with them which is really important to know that the camera will be looking at whatever the front surface of each part is going to be looking at and if you wanted to do this you know multiple times just keep calling this tween function so for example if you wanted to do it again from going from test to two then another part called test three just put another part in there call it test three and we'll just change the name test three and you've got that second function cool so once the first tween is done and with the camera is now at test two you can put it to test three so let's go and give that a try and set the cutscene to three seconds for now here we go ghost one and then it goes to part two just like that pretty awesome huh and you might want different times for you know different tweens so you could move the cutscene time and the whole tween info stuff into the tween function like this so it's a different cutscene time and you could have an argument called let's call it cutscene time you can't use the word time because that's using scripting for something else but you could then just get rid of this variable and change the cutscene time in between info to the cutscene time argument is now in the tween and then if you passed the timer you would see one second for the first ten second for the second and it would go at different speeds so the first tween should be really fast whereas the second one shouldn't be see really fast and then really really long so that's how you do tweening in roblox with the camera I hope you found this useful do check out my video on see frames it should make it easy to understand and yeah please like the video subscribe if you enjoyed it share it with a friend and I'll see you in the next one thanks for watching
