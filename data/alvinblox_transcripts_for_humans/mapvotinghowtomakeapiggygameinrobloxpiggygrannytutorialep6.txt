With timestamps:

00:00 - welcome to part 6 of my piggie series in
00:03 - this episode I'm going to teach you how
00:06 - to add a map voting system to your game
00:08 - so firstly you're going to need to
00:10 - create a GUI for the map voting now to
00:15 - save some time again I'm going to
00:18 - publish this as its own model so head to
00:20 - the description take the model and then
00:23 - you'll be able to insert it via tool box
00:27 - so into the tool box click on the grid
00:30 - head to my models and insert the map
00:32 - voting kit which you should have taken
00:35 - then if you just drag this into your
00:37 - main GUI and I've closed the core tool
00:41 - box so make sure it's in main GUI and
00:43 - then what you need to do is for all of
00:46 - the maps that you have if you go inside
00:49 - of the map voting frame and you go
00:50 - inside the grid frame you'll see that
00:52 - we've got a UI grid layouts and that
00:55 - arranges all of the GUI elements inside
00:58 - of the grid into a grid so I've got two
01:02 - two buttons in here because I've added a
01:04 - second map now this will only work
01:07 - obviously if you have more than two maps
01:10 - so he's only got one map at the minute I
01:12 - wouldn't suggest adding this although
01:14 - you can do and you can use the second
01:16 - model as a test so the more maps that
01:19 - you add just duplicate another image
01:21 - button and it will add it to the grid
01:24 - and the more you add then what the more
01:26 - it will put together so when you create
01:29 - a new map you need to name the image
01:32 - button so this image button it needs to
01:34 - be the exact same name as your map so if
01:39 - you've got a map which you've added I
01:41 - need to actually add a second one called
01:43 - chapter two but if you were to add
01:47 - another one you wanted to call it epoch
01:49 - chapter then you'd have to name your
01:53 - image button I pick chapter so you need
01:57 - to have these in place before you start
01:59 - the game or publish the game these need
02:02 - to be in place and then you don't need
02:04 - to do anything else keep the names of
02:06 - the text labels the same but you can
02:08 - change the chapter name Tech
02:10 - to the name of your your map so epic
02:13 - chapter and we can say that that is
02:16 - Chapter three okay so once you've done
02:21 - that we're going to select map voting
02:23 - and set the visible property to force
02:27 - now we're going to create another local
02:29 - script in the main GUI and this is going
02:31 - to be for our map voting I'm gonna name
02:33 - this clients map voting and inside of
02:38 - here
02:38 - I'm firstly going to loop through all of
02:42 - the image buttons in our grid frame so
02:45 - um we're gonna create a variable for
02:47 - that grid frame I'm gonna call it local
02:50 - vote grid then I'm going to loop through
02:54 - everything inside that folder so for I
02:57 - be in pairs vote grid
03:00 - come on get children do we need to make
03:03 - sure that we're selecting only the image
03:05 - buttons and not the UI grid layouts so
03:08 - if V colon is a image button and also
03:14 - that there is a map in the chapters
03:16 - folder of the same name and replicated
03:20 - storage dot chapters find first child V
03:24 - dot name because the name of the image
03:27 - button needs to be the same as the name
03:28 - of the map then and what we'll do is
03:33 - we'll set up a mouse button one click
03:35 - event so when the image button is
03:38 - clicked connect function we're going to
03:41 - fire a remote event to tell the server
03:43 - that we've placed our vote so going to
03:46 - replicate the storage insert the remote
03:48 - event and call it place votes then we're
03:54 - gonna say game got replicated storage
03:56 - dot place votes fire server and we need
04:01 - to tell the server the name of the map
04:02 - that we're voting for so the name of the
04:04 - image button V dot name when you've done
04:08 - when you've done that we can now head
04:10 - into a server scripts to handle the
04:13 - voting part so I'm going to go into
04:15 - service script service into the event
04:18 - handling in fact
04:20 - we're gonna go into the game logic into
04:22 - the round module and I'm going to edit
04:26 - the map selection script okay
04:32 - so again he's only got one map at a
04:33 - minute I would leave the random
04:36 - selection until you've got another map
04:37 - so this is only going to work well if
04:41 - you have more than one map
04:42 - everyone's gonna be voting for the same
04:44 - one but to make the map voting work
04:46 - we're going to remove that and we're
04:50 - going to firstly create a big table to
04:55 - contain all of the votes for each map
04:58 - then we're going to loop through all of
05:01 - the chapters in the game and create a
05:03 - sub table inside that big table for that
05:06 - specific map so the final table will
05:08 - look something like this and inside each
05:22 - table will be the names of the people
05:23 - that voted like this and then you can
05:30 - see which table has the most votes so
05:33 - what we'll do is we will say for I V in
05:37 - pairs game got replicated storage of dot
05:40 - chapters get children so looping through
05:44 - all of the chapters in the game and
05:46 - we're going to create a sub table inside
05:47 - the big table and that's very simple we
05:49 - just say votes and in square brackets
05:51 - the name of the map which is going to be
05:53 - the name of the sub the sub table and
05:56 - we're going to set it to a blank table
05:59 - then when we get a place vote request
06:03 - from the client through that remote
06:04 - event we can add the player's name to
06:07 - that table so very simple we just need
06:11 - to set up a connection an event
06:14 - connection called local place votes
06:17 - connection we're creating a connection
06:20 - so we can disconnect it when the voting
06:23 - time is up so that we can stop the votes
06:25 - from coming in and we're going to create
06:27 - that to write events
06:31 - . so game doors rad k storage up place
06:34 - votes when we get a fire server we can
06:37 - pick that up with the player and the map
06:39 - name which we got sent as a parameter
06:43 - then we're going to end it with the
06:46 - closing brackets and after 15 seconds
06:50 - we're going to disconnect that
06:52 - connection so people won't be able to
06:54 - send in their votes because we're no
06:57 - longer listening to the remote event now
07:00 - when we get that place vote we need to
07:02 - firstly check if there is an actual
07:03 - table in the big table with the maps
07:06 - name so if the votes map name then if
07:10 - there is that table for that map then
07:12 - we're going to loop through the all of
07:17 - the different map tables in that big
07:19 - table to see if they've voted before and
07:21 - we're going to remove their votes so the
07:24 - V value will be the player votes tab for
07:30 - each map in pairs we're looping through
07:33 - the votes table so the player votes tab
07:36 - will be the individual table for each
07:38 - map so the chapter 1 table chapter 2
07:41 - table etc so we need to then loop
07:43 - through that player votes table we're
07:46 - gonna use a different high value so we
07:47 - don't overwrite it for X well it's not
07:51 - over right but just yeah just so that we
07:53 - can have a different name so we don't
07:56 - get confused for those values so for X
07:59 - and then player name is going to be the
08:01 - value in that table that we'll be
08:03 - looking at for each player in pairs
08:06 - player votes tab do we're going to need
08:11 - to check to see if the player name
08:15 - that's in that table is equal to the
08:17 - player object's name so player dot name
08:20 - so if we found the player that's trying
08:23 - to place a vote if we found that they've
08:25 - already placed a vote in another table
08:27 - we need to remove it so we're going to
08:28 - say table dot remove player votes tab
08:31 - will remove from the current player
08:35 - votes table we're going to remove that
08:38 - index value of that player because
08:41 - X is the index value the counter of
08:44 - where that players votes is stored
08:48 - within the chapter votes table and we're
08:51 - removing it then we're going to break
08:53 - out of the for loop because we're no
08:54 - longer looking for it with breaking out
08:55 - of this for loop here and that will run
08:59 - for the rest of the chapters in case for
09:01 - some reason they have another vote
09:03 - somewhere else so that will remove their
09:05 - votes from the table if they're already
09:08 - voted for a certain map now we need to
09:10 - add their vote into the new table that
09:14 - they want to vote for so very simple
09:16 - table dot insert and we're going to say
09:18 - the votes table we want to insert it
09:20 - into that specific map table and we're
09:23 - gonna insert the players name like that
09:25 - and there we go now when somebody is
09:30 - voted we need to update the GUI to show
09:33 - the new number of votes for all players
09:35 - so we're going to create another row
09:37 - height event I'm going to call this
09:38 - remote events website is a folder I'm
09:42 - going to insert a remote event I'm gonna
09:43 - call it update votes count okay and then
09:50 - if we go into the clients script again
09:53 - we can just set up a very simple
09:56 - connection event for this so we will say
10:01 - game bottle replicated storage dot
10:05 - update votes counts dot on client events
10:08 - connect function and we're going to send
10:12 - the votes table to the player and we'll
10:15 - just pick it up with an argument called
10:17 - data and if we just go back to the round
10:20 - module what we can do is we can say game
10:25 - replicate that storage dot updates vote
10:27 - counts fire all clients and we're going
10:31 - to send the big votes table so we can
10:33 - decode it and get the information about
10:35 - the number of votes for each map on the
10:37 - client next what we need to do is create
10:41 - a value in replicated storage and this
10:45 - value is going to be a ball value and
10:48 - it's going to be called map voting
10:52 - and this is so that if you're in the
10:54 - menu and because we don't want to show
10:57 - the the voting GUI if you're in the menu
11:01 - so when you press the menu button we can
11:04 - check to see if a map voting is
11:05 - currently happening and if it is
11:07 - currently happening then we can show you
11:08 - the map votes GUI we'll get to that in
11:11 - just a little bit later on but what
11:14 - we'll do is before the wait 15 starts
11:18 - we'll set this value to be true and then
11:23 - after 15 seconds we'll set it to be
11:24 - false so that we can tell it other
11:26 - scripts that the map voting has now
11:28 - finished now we need to workout after 15
11:34 - seconds which map got the most votes so
11:37 - we're going to need to loop through the
11:38 - big table but we're going to create two
11:40 - variables one for the most votes the
11:43 - number of most votes and the most voted
11:46 - map so local most votes I'm going to set
11:50 - that to nil for now and local most voted
11:53 - it's also going to be now then we're
11:56 - going to loop through the big map table
11:58 - so for I and then each individual table
12:01 - within that votes table sorry will be
12:03 - called map table and so for each
12:07 - individual table for each map we need to
12:11 - count the number of votes that they've
12:12 - had so the local votes are going to be
12:15 - the number of objects within that map
12:17 - table so because we're inserting the
12:20 - players name into each table then
12:22 - there's going to be two objects if
12:24 - there's two votes for a map so this is
12:27 - this votes variable will tell us how
12:30 - many votes that map has had now we need
12:33 - to check if most votes is nil to begin
12:36 - with because it could be the first map
12:38 - that we're checking so if it is we'll
12:40 - set the most votes to the current amount
12:42 - of votes and the most voted will
12:45 - obviously be the index of this table
12:47 - because it's the first one we've checked
12:49 - but if there currently is a map with the
12:55 - most votes it might be the next time
12:58 - that loops round we need to check if the
13:01 - number of votes is greater than or equal
13:02 - to the current most votes
13:06 - and if it is then we're going to change
13:09 - the most votes to be the vote count of
13:12 - this map and the most voted will be the
13:15 - index of this map table so we have
13:20 - updated the map the most votes value to
13:24 - the map because we've seen that it's got
13:26 - a greater vote count than the one that
13:28 - currently has the most votes so now what
13:33 - we can do is outside of this for loop we
13:36 - need to firstly check to see if after
13:38 - we've gone through all maps that most
13:40 - votes if it's nil or if most voted is
13:44 - nil then so if there is a so if no votes
13:52 - has been recorded then we're just going
13:54 - to select the map randomly which is what
13:56 - we've been doing before so we can just
13:58 - firstly create a chosen chapter variable
14:01 - and if there are no votes we will select
14:06 - a random map which is the code that
14:08 - we've done before taking a random map
14:11 - out of replicated storage else if there
14:15 - have been votes recorded then we're
14:17 - going to just say chapter chosen chapter
14:19 - equals game dot replicated storage got
14:22 - chapters and we're going to get the most
14:26 - voted because this I it's not actually
14:31 - going to be an index count it's going to
14:32 - be the name of the map because it's it's
14:34 - the key now when you have a table inside
14:36 - when we've set it up like we have here
14:38 - and if we go this week what we can't go
14:41 - back but the eye part is going to be the
14:43 - name of the map because when we inserted
14:47 - all of the sub tables we gave the table
14:51 - its name was going to be the name of the
14:53 - map so the eye part is the name of the
14:55 - map so the most voted is going to be the
14:58 - name of the map so we can just say game
14:59 - to write weekend storage dot chapters
15:01 - and in square brackets put most voted
15:03 - and most voted will be the name of the
15:04 - map with the most votes and then what we
15:08 - can do is say status dot value equals
15:12 - chosen chapter name has been selected
15:15 - wait
15:16 - da two-string most votes to print out
15:20 - the amount of votes that they got we can
15:22 - do a wait five seconds and then we'll
15:24 - return the chosen chapter back to the
15:28 - game logic script so what we've got to
15:32 - do now is we need to code the remote
15:38 - event which is going to make the GUI
15:40 - appear and then go off screen again so
15:42 - we'll insert another remote event here
15:43 - and I'm gonna call it toggle map those
15:49 - now if you go back to your client map
15:51 - voting and we'll leave this update vote
15:54 - count for a second but we're gonna
15:56 - create the we just want to copy this
15:58 - line and put it in again we're going to
16:00 - change update vote count to say toggle
16:03 - map votes and we're going to have an
16:07 - argument to be the visibility so whether
16:09 - it's true or false so then we can
16:12 - firstly check to see if the player isn't
16:15 - in the menu because we don't want to
16:16 - show it if they're in the menu so if not
16:18 - game dot players got local player find
16:21 - first child in menu then scripts the
16:28 - parent map voting invisible equals
16:33 - visibility because script the parent is
16:36 - the main GUI and we've now got this map
16:38 - voting frame in there so if you get an
16:39 - error check that you've got the map
16:41 - voting frame in your main GUI so this
16:46 - will now make the GUI appear or
16:48 - disappear when we call it from the
16:51 - server so we need to go back to the
16:52 - round module and now we can firstly at
16:56 - the top of the scripts at the top of the
16:58 - function we can say game look replicate
16:59 - storage got toggle map votes curl on
17:02 - fire old clients and true to make it
17:05 - visible
17:07 - and then later on just after the 15
17:10 - seconds when we set the map voting value
17:13 - in replicated storage back to false
17:14 - we're going to fire again but set it to
17:16 - false so make sure you've changed the
17:18 - true to the false now all that's left to
17:22 - do is to loop through the data that
17:25 - we've sent to the update vote count
17:27 - function and then we will just update
17:31 - the votes text label in the chapter
17:34 - image button so I'm going to show you
17:36 - how you can do that right now
17:39 - so so if you think the data argument is
17:45 - going to be the main votes table then
17:47 - the eye is going to be the name of the
17:48 - map and the V is going to be the value
17:50 - attached to it which is gonna be that
17:52 - table full of players so we can firstly
17:56 - check to see if the there is a image
18:00 - button in our vote frame grid with the
18:03 - chapter name so there is obviously
18:05 - chapter 1 chapter 2 and epoch chapter so
18:08 - if there is a image button there then
18:10 - it's going to set the text of the votes
18:13 - text label to the number of objects
18:17 - within that table so so if there are two
18:21 - in that table for chapter one then we're
18:24 - going to update the image buttons votes
18:26 - text to be two lastly if we go into the
18:31 - client main script just so that we can
18:33 - make the the voting do I appear when you
18:37 - click the play button so let's imagine
18:42 - someone's in the game and they've joined
18:45 - after the map voting screen has shown up
18:47 - for all players but they then press the
18:49 - play button midway through voting and we
18:51 - need to make it show up for them so what
18:54 - we're going to do is in the intro to
18:55 - play function event we're going to say
18:59 - if game got replicated storage dot map
19:03 - voting dot value equals equals true so
19:06 - that we know that a vote is currently in
19:08 - progress so if there was a vote
19:09 - currently in progress then we're going
19:11 - to say scripts got parent got map tile
19:15 - so you got map voting not visible equals
19:18 - true
19:19 - and we should be good to go okay here we
19:24 - are and we are the voting has started so
19:28 - miss a vote three so hopefully he'll
19:32 - change his vote to Chapter three go
19:42 - and it says epic chapter has been
19:44 - selected with one vote brilliant and
19:49 - then the round begins I'm going to
19:51 - actually run some code to kill everybody
19:54 - so we can start a new round okay cool
20:11 - awesome so we can just start another
20:13 - round and this time we're going to vote
20:23 - for a chapter two so hopefully everyone
20:28 - votes for chapter two here it does keep
20:30 - thee it just keep the stats from the
20:33 - previous round so if you if you voted
20:37 - for chapter 3 it will start off saying
20:38 - one vote for chapter three but then when
20:41 - someone votes it will reset so there we
20:43 - go it says chapter two has been selected
20:44 - with four votes brilliant now let's try
20:50 - and balance the votes now if we can oh
20:56 - okay
20:58 - hopefully it stays balanced and it
21:01 - selected epic chapter and if there are
21:05 - two maps with the same amount of votes
21:07 - it will basically just randomly choose
21:08 - the them because it will just be the
21:11 - first one it finds which has them the
21:12 - most it will be the last one I think
21:15 - actually that it loops through if it has
21:17 - the same amount of votes because it will
21:19 - update the most voted to that map so it
21:23 - doesn't really matter because if they
21:24 - have the same amount of votes anyway it
21:26 - will be random
21:29 - so shout out everyone that just came
21:30 - along and helped me test it out so kayo
21:32 - Hana Sione Dyna mr. keleti ggd savage
21:35 - log P one two three four six
21:37 - mr. crazy GG one two three Nick through
21:39 - seven seven swag fam
21:41 - TTFN and as I perk you alright so now
21:47 - what you could do as a way to stop the
21:49 - votes appearing and to reset them when
21:52 - the map voting GUI comes back on the
21:55 - screen is doing something like this so
21:56 - in their toggle map vote you could say
21:59 - for I comma V in pairs scripts got
22:06 - parents sorry the votes grid come on get
22:09 - children do if V find first child votes
22:19 - then the votes dot text equals zero but
22:25 - in a string like this and then whenever
22:29 - you fired from the server and toggle map
22:33 - votes votes you watch closely there was
22:42 - five votes imagine that was the old
22:44 - votes when that next got fired if we
22:48 - just open up their map voting again it
22:49 - gets reset so there we go so that's how
22:54 - you add map voting to your piggy game
22:56 - now there won't be any more uploads on
23:01 - this series for a while because I've
23:04 - pretty much finished it off now might
23:05 - add some more features in the future and
23:08 - I will keep supporting it but as I said
23:10 - where I take a break and do some other
23:12 - videos so thanks for watching hope you
23:13 - enjoyed the theory so far and hopefully
23:15 - I'll see you in the next one
23:16 - Cheers bye

Cleaned transcript:

welcome to part 6 of my piggie series in this episode I'm going to teach you how to add a map voting system to your game so firstly you're going to need to create a GUI for the map voting now to save some time again I'm going to publish this as its own model so head to the description take the model and then you'll be able to insert it via tool box so into the tool box click on the grid head to my models and insert the map voting kit which you should have taken then if you just drag this into your main GUI and I've closed the core tool box so make sure it's in main GUI and then what you need to do is for all of the maps that you have if you go inside of the map voting frame and you go inside the grid frame you'll see that we've got a UI grid layouts and that arranges all of the GUI elements inside of the grid into a grid so I've got two two buttons in here because I've added a second map now this will only work obviously if you have more than two maps so he's only got one map at the minute I wouldn't suggest adding this although you can do and you can use the second model as a test so the more maps that you add just duplicate another image button and it will add it to the grid and the more you add then what the more it will put together so when you create a new map you need to name the image button so this image button it needs to be the exact same name as your map so if you've got a map which you've added I need to actually add a second one called chapter two but if you were to add another one you wanted to call it epoch chapter then you'd have to name your image button I pick chapter so you need to have these in place before you start the game or publish the game these need to be in place and then you don't need to do anything else keep the names of the text labels the same but you can change the chapter name Tech to the name of your your map so epic chapter and we can say that that is Chapter three okay so once you've done that we're going to select map voting and set the visible property to force now we're going to create another local script in the main GUI and this is going to be for our map voting I'm gonna name this clients map voting and inside of here I'm firstly going to loop through all of the image buttons in our grid frame so um we're gonna create a variable for that grid frame I'm gonna call it local vote grid then I'm going to loop through everything inside that folder so for I be in pairs vote grid come on get children do we need to make sure that we're selecting only the image buttons and not the UI grid layouts so if V colon is a image button and also that there is a map in the chapters folder of the same name and replicated storage dot chapters find first child V dot name because the name of the image button needs to be the same as the name of the map then and what we'll do is we'll set up a mouse button one click event so when the image button is clicked connect function we're going to fire a remote event to tell the server that we've placed our vote so going to replicate the storage insert the remote event and call it place votes then we're gonna say game got replicated storage dot place votes fire server and we need to tell the server the name of the map that we're voting for so the name of the image button V dot name when you've done when you've done that we can now head into a server scripts to handle the voting part so I'm going to go into service script service into the event handling in fact we're gonna go into the game logic into the round module and I'm going to edit the map selection script okay so again he's only got one map at a minute I would leave the random selection until you've got another map so this is only going to work well if you have more than one map everyone's gonna be voting for the same one but to make the map voting work we're going to remove that and we're going to firstly create a big table to contain all of the votes for each map then we're going to loop through all of the chapters in the game and create a sub table inside that big table for that specific map so the final table will look something like this and inside each table will be the names of the people that voted like this and then you can see which table has the most votes so what we'll do is we will say for I V in pairs game got replicated storage of dot chapters get children so looping through all of the chapters in the game and we're going to create a sub table inside the big table and that's very simple we just say votes and in square brackets the name of the map which is going to be the name of the sub the sub table and we're going to set it to a blank table then when we get a place vote request from the client through that remote event we can add the player's name to that table so very simple we just need to set up a connection an event connection called local place votes connection we're creating a connection so we can disconnect it when the voting time is up so that we can stop the votes from coming in and we're going to create that to write events . so game doors rad k storage up place votes when we get a fire server we can pick that up with the player and the map name which we got sent as a parameter then we're going to end it with the closing brackets and after 15 seconds we're going to disconnect that connection so people won't be able to send in their votes because we're no longer listening to the remote event now when we get that place vote we need to firstly check if there is an actual table in the big table with the maps name so if the votes map name then if there is that table for that map then we're going to loop through the all of the different map tables in that big table to see if they've voted before and we're going to remove their votes so the V value will be the player votes tab for each map in pairs we're looping through the votes table so the player votes tab will be the individual table for each map so the chapter 1 table chapter 2 table etc so we need to then loop through that player votes table we're gonna use a different high value so we don't overwrite it for X well it's not over right but just yeah just so that we can have a different name so we don't get confused for those values so for X and then player name is going to be the value in that table that we'll be looking at for each player in pairs player votes tab do we're going to need to check to see if the player name that's in that table is equal to the player object's name so player dot name so if we found the player that's trying to place a vote if we found that they've already placed a vote in another table we need to remove it so we're going to say table dot remove player votes tab will remove from the current player votes table we're going to remove that index value of that player because X is the index value the counter of where that players votes is stored within the chapter votes table and we're removing it then we're going to break out of the for loop because we're no longer looking for it with breaking out of this for loop here and that will run for the rest of the chapters in case for some reason they have another vote somewhere else so that will remove their votes from the table if they're already voted for a certain map now we need to add their vote into the new table that they want to vote for so very simple table dot insert and we're going to say the votes table we want to insert it into that specific map table and we're gonna insert the players name like that and there we go now when somebody is voted we need to update the GUI to show the new number of votes for all players so we're going to create another row height event I'm going to call this remote events website is a folder I'm going to insert a remote event I'm gonna call it update votes count okay and then if we go into the clients script again we can just set up a very simple connection event for this so we will say game bottle replicated storage dot update votes counts dot on client events connect function and we're going to send the votes table to the player and we'll just pick it up with an argument called data and if we just go back to the round module what we can do is we can say game replicate that storage dot updates vote counts fire all clients and we're going to send the big votes table so we can decode it and get the information about the number of votes for each map on the client next what we need to do is create a value in replicated storage and this value is going to be a ball value and it's going to be called map voting and this is so that if you're in the menu and because we don't want to show the the voting GUI if you're in the menu so when you press the menu button we can check to see if a map voting is currently happening and if it is currently happening then we can show you the map votes GUI we'll get to that in just a little bit later on but what we'll do is before the wait 15 starts we'll set this value to be true and then after 15 seconds we'll set it to be false so that we can tell it other scripts that the map voting has now finished now we need to workout after 15 seconds which map got the most votes so we're going to need to loop through the big table but we're going to create two variables one for the most votes the number of most votes and the most voted map so local most votes I'm going to set that to nil for now and local most voted it's also going to be now then we're going to loop through the big map table so for I and then each individual table within that votes table sorry will be called map table and so for each individual table for each map we need to count the number of votes that they've had so the local votes are going to be the number of objects within that map table so because we're inserting the players name into each table then there's going to be two objects if there's two votes for a map so this is this votes variable will tell us how many votes that map has had now we need to check if most votes is nil to begin with because it could be the first map that we're checking so if it is we'll set the most votes to the current amount of votes and the most voted will obviously be the index of this table because it's the first one we've checked but if there currently is a map with the most votes it might be the next time that loops round we need to check if the number of votes is greater than or equal to the current most votes and if it is then we're going to change the most votes to be the vote count of this map and the most voted will be the index of this map table so we have updated the map the most votes value to the map because we've seen that it's got a greater vote count than the one that currently has the most votes so now what we can do is outside of this for loop we need to firstly check to see if after we've gone through all maps that most votes if it's nil or if most voted is nil then so if there is a so if no votes has been recorded then we're just going to select the map randomly which is what we've been doing before so we can just firstly create a chosen chapter variable and if there are no votes we will select a random map which is the code that we've done before taking a random map out of replicated storage else if there have been votes recorded then we're going to just say chapter chosen chapter equals game dot replicated storage got chapters and we're going to get the most voted because this I it's not actually going to be an index count it's going to be the name of the map because it's it's the key now when you have a table inside when we've set it up like we have here and if we go this week what we can't go back but the eye part is going to be the name of the map because when we inserted all of the sub tables we gave the table its name was going to be the name of the map so the eye part is the name of the map so the most voted is going to be the name of the map so we can just say game to write weekend storage dot chapters and in square brackets put most voted and most voted will be the name of the map with the most votes and then what we can do is say status dot value equals chosen chapter name has been selected wait da twostring most votes to print out the amount of votes that they got we can do a wait five seconds and then we'll return the chosen chapter back to the game logic script so what we've got to do now is we need to code the remote event which is going to make the GUI appear and then go off screen again so we'll insert another remote event here and I'm gonna call it toggle map those now if you go back to your client map voting and we'll leave this update vote count for a second but we're gonna create the we just want to copy this line and put it in again we're going to change update vote count to say toggle map votes and we're going to have an argument to be the visibility so whether it's true or false so then we can firstly check to see if the player isn't in the menu because we don't want to show it if they're in the menu so if not game dot players got local player find first child in menu then scripts the parent map voting invisible equals visibility because script the parent is the main GUI and we've now got this map voting frame in there so if you get an error check that you've got the map voting frame in your main GUI so this will now make the GUI appear or disappear when we call it from the server so we need to go back to the round module and now we can firstly at the top of the scripts at the top of the function we can say game look replicate storage got toggle map votes curl on fire old clients and true to make it visible and then later on just after the 15 seconds when we set the map voting value in replicated storage back to false we're going to fire again but set it to false so make sure you've changed the true to the false now all that's left to do is to loop through the data that we've sent to the update vote count function and then we will just update the votes text label in the chapter image button so I'm going to show you how you can do that right now so so if you think the data argument is going to be the main votes table then the eye is going to be the name of the map and the V is going to be the value attached to it which is gonna be that table full of players so we can firstly check to see if the there is a image button in our vote frame grid with the chapter name so there is obviously chapter 1 chapter 2 and epoch chapter so if there is a image button there then it's going to set the text of the votes text label to the number of objects within that table so so if there are two in that table for chapter one then we're going to update the image buttons votes text to be two lastly if we go into the client main script just so that we can make the the voting do I appear when you click the play button so let's imagine someone's in the game and they've joined after the map voting screen has shown up for all players but they then press the play button midway through voting and we need to make it show up for them so what we're going to do is in the intro to play function event we're going to say if game got replicated storage dot map voting dot value equals equals true so that we know that a vote is currently in progress so if there was a vote currently in progress then we're going to say scripts got parent got map tile so you got map voting not visible equals true and we should be good to go okay here we are and we are the voting has started so miss a vote three so hopefully he'll change his vote to Chapter three go and it says epic chapter has been selected with one vote brilliant and then the round begins I'm going to actually run some code to kill everybody so we can start a new round okay cool awesome so we can just start another round and this time we're going to vote for a chapter two so hopefully everyone votes for chapter two here it does keep thee it just keep the stats from the previous round so if you if you voted for chapter 3 it will start off saying one vote for chapter three but then when someone votes it will reset so there we go it says chapter two has been selected with four votes brilliant now let's try and balance the votes now if we can oh okay hopefully it stays balanced and it selected epic chapter and if there are two maps with the same amount of votes it will basically just randomly choose the them because it will just be the first one it finds which has them the most it will be the last one I think actually that it loops through if it has the same amount of votes because it will update the most voted to that map so it doesn't really matter because if they have the same amount of votes anyway it will be random so shout out everyone that just came along and helped me test it out so kayo Hana Sione Dyna mr. keleti ggd savage log P one two three four six mr. crazy GG one two three Nick through seven seven swag fam TTFN and as I perk you alright so now what you could do as a way to stop the votes appearing and to reset them when the map voting GUI comes back on the screen is doing something like this so in their toggle map vote you could say for I comma V in pairs scripts got parents sorry the votes grid come on get children do if V find first child votes then the votes dot text equals zero but in a string like this and then whenever you fired from the server and toggle map votes votes you watch closely there was five votes imagine that was the old votes when that next got fired if we just open up their map voting again it gets reset so there we go so that's how you add map voting to your piggy game now there won't be any more uploads on this series for a while because I've pretty much finished it off now might add some more features in the future and I will keep supporting it but as I said where I take a break and do some other videos so thanks for watching hope you enjoyed the theory so far and hopefully I'll see you in the next one Cheers bye
