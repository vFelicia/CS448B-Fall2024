With timestamps:

00:00 - hi everyone welcome back to another
00:01 - video this is episode number 16 in the
00:04 - scripting series today we're going to be
00:06 - looking at repeating what it is what
00:08 - it's useful for and all that good stuff
00:10 - so let's get into it so in the previous
00:13 - video we looked at while loops do
00:15 - recommend you check that out if you have
00:17 - not already because we will be referring
00:19 - to while loops in the video and
00:21 - comparing them to what repeating is so
00:24 - repeating is a way of well it's in the
00:29 - name repeating code over and over again
00:31 - just like a while loop
00:33 - I repeat code forever until a certain
00:36 - condition has been met it's very similar
00:39 - actually so what it will do is if you
00:41 - write out repeat and then after that you
00:45 - need to write until that's the syntax so
00:49 - we say repeat until and these two words
00:53 - are basically what you need to create a
00:56 - repeat statement so what it's going to
00:58 - do is you're going to have your code in
00:59 - between these two words and this code
01:03 - here is going to just keep on repeating
01:05 - forever and ever well on and on let's
01:08 - say until a condition is met so your
01:12 - condition is going to go here so the
01:16 - condition like we said in the while
01:17 - loops is the thing that needs to be met
01:20 - the thing that needs to be true the
01:21 - statement that the script is going to
01:24 - check every time that this loops to see
01:28 - whether it's true or false and if it is
01:29 - true if the condition is true it's going
01:32 - to stop repeating if the condition is
01:34 - false it's going to keep on repeating
01:36 - because that condition hasn't been met
01:38 - yet so let's let me give you a few
01:40 - examples here so here is our while loop
01:44 - which we have looked at before in the
01:46 - previous video and the while loop will
01:49 - firstly check the condition the first
01:52 - time it runs it's going to check this
01:53 - condition it's going to say okay is the
01:56 - number of objects in this folder called
02:00 - parts if you're not sure about what this
02:01 - means you don't need to know about it
02:04 - just yet but I'm just gonna simplify it
02:05 - for you what this highlighted piece of
02:08 - code does is it basically checks the
02:11 - number of objects inside this folder so
02:13 - this hashtag will give us the number of
02:15 - objects stored in this parts folder
02:18 - currently it is zero but if I was to put
02:21 - this scripts inside the folder they
02:23 - would now be one object inside the
02:25 - folder so this would be one so all it's
02:29 - doing is checking the number of objects
02:31 - or children in that folder so in this
02:35 - example the condition is checking
02:37 - whether the number of children in this
02:39 - folder is less than two and it's going
02:41 - to keep on repeating this it's gonna
02:45 - keep on looping through and it's just
02:46 - gonna keep on printing not enough parts
02:49 - in the folder if it's less than two and
02:52 - that's what it's going to do and let's
02:53 - just have that weight in there
02:55 - so that it doesn't crush our script now
02:56 - if we were to run this you can see it
02:59 - just keeps on printing out not enough
03:01 - parts in the folder because there is not
03:04 - there's not enough parts there needs to
03:06 - be let's have a look here it needs to be
03:10 - over to for it to break this while loop
03:13 - so let's go ahead and put two objects in
03:15 - here it doesn't matter what the objects
03:17 - are I know we said parts but in fact we
03:21 - will just put parts because that's what
03:22 - we told it to print for so we'll do a
03:25 - mesh part and another part and there we
03:28 - go boom it stops printing out you can
03:30 - see it's gone purple that means that the
03:32 - while loop is broken whatever and the
03:34 - the X eight one eight is no longer
03:36 - increasing so we know that when two
03:40 - parts or two objects were inserted into
03:43 - that folder it was enough to break the
03:46 - while loop because the next time it went
03:49 - around every naught point naught 3
03:51 - seconds it checked ok how many objects
03:54 - are there in this folder and there were
03:56 - two so 2 is not less than 2 so it would
04:02 - be enough to meet the condition so the
04:05 - condition was indeed false because there
04:09 - was not less than two objects in the
04:11 - folder so it just broke out of the while
04:13 - loop so that is the while loop now the
04:15 - repeat version if you're doing repeating
04:18 - it's quite similar now let's bring them
04:20 - both up and compare them
04:23 - so down here we've got the repeat
04:25 - version and this is using the repeat
04:27 - statement which we're learning about
04:29 - today now the main difference in the
04:32 - repeat statement is that is going to run
04:34 - at least once the code inside of here is
04:37 - guaranteed to run the first time
04:40 - regardless of this condition because
04:42 - it's ordered so that we're firstly
04:45 - saying repeat so we're telling the
04:46 - script to execute the following code ok
04:50 - so it's gonna execute it the first time
04:52 - and remember scripts go line by line so
04:55 - we're starting off on line 1 saying
04:56 - repeat all right and then we're in the
04:59 - middle of this repeat statement now
05:00 - we've gone straight into the repeat
05:02 - statement so now we're on line 2 and
05:05 - we're printing out not enough parts in
05:07 - the game or in the folder I should say
05:09 - so it's printing that out and then we're
05:11 - doing the weight and now we're on line 4
05:14 - and on line 4 is where we do the
05:17 - condition check so we don't do the
05:19 - condition check at the start like the
05:21 - while loop does if when the game started
05:25 - it checks
05:27 - straight away the number of parts in the
05:29 - folder ok because it's the first line in
05:32 - the while loop so if there is more than
05:35 - 2 or 2 if there's not less than 2
05:38 - objects in the folder then it's just not
05:41 - going to run the while loop isn't it's
05:42 - not going to run any of this code it's
05:44 - just going to basically skip to the end
05:46 - of what to the next line of code which
05:49 - isn't in the wild loop so it would go
05:51 - straight here whereas in the repeat it's
05:54 - going to print out not enough parts in
05:56 - the folder so even if you did have
05:58 - enough parts in the folder it would
06:01 - print out not enough parts in the folder
06:03 - on the first time because the scripts
06:05 - has been told to start a repeat
06:08 - statement so it's gonna it's gonna do
06:11 - this gonna do this code and then it's
06:13 - gonna check if there's enough parts in
06:15 - the folder so you could have enough
06:17 - parts in the folder to begin with and
06:18 - the scripts still gonna say there's not
06:20 - enough parts in the folder so if you had
06:22 - some code that you only wanted to run if
06:24 - a certain condition was met it's not a
06:27 - good idea to use repeat because it's
06:30 - going to run this folder sorry run this
06:32 - code straight away if you want this code
06:35 - to only run when
06:36 - has been met you don't want to use this
06:39 - you want to use a while loop so that's
06:40 - the main difference between them now
06:42 - let's check out the repeat version and
06:46 - see what happens when we do use that
06:48 - just to show you so let's disable these
06:51 - other two and we're now running off with
06:53 - this script so what should happen is it
06:55 - should print out not enough parts in the
06:57 - folder it should keep on printing that
07:00 - out until there's let's say less than
07:05 - sorry
07:07 - until yes we'll do greater than one
07:11 - because remember we are wanting to keep
07:14 - printing this out until there is over
07:19 - one amount of parts in the game so when
07:22 - there's two or more parts in the folder
07:25 - we want to basically get out of this
07:27 - repeat because we've hit our condition
07:30 - we want this to keep repeating until
07:32 - there are enough parts in the folder
07:34 - until there's at least two parts in the
07:36 - folder so when we say greater than one
07:38 - well it has to be two or more doesn't it
07:39 - so it can't be equal to one it has to be
07:41 - greater than one so let's check this out
07:43 - see what happens
07:44 - so you can see again it's just repeating
07:48 - over and over again not enough parts in
07:50 - the folder I'll do hope I'm not getting
07:52 - you all confused here with all this
07:53 - enough parts in the folder basically
07:56 - we're just checking how many children
07:58 - there are in the folder and it's going
08:01 - to keep repeating these to answer code
08:04 - until there are two or more parts in the
08:06 - folder as you can see down here we've
08:07 - got the little incremented down here
08:10 - which is going up very very quickly and
08:12 - if we do go ahead and insert two parts
08:14 - into the folder and now so we've got one
08:17 - in there let's duplicate it and bam it
08:19 - has exited the repeat statement because
08:24 - it has kept looping around and until
08:27 - there has been two parts so every naught
08:30 - point naught three seconds it's been
08:31 - checking and eventually it has detected
08:35 - okay there are two parts in the folder
08:37 - and we wanted it to be greater than one
08:41 - and that condition has been met so what
08:43 - we're saying is repeat this code over
08:45 - and over again until this condition here
08:49 - has been
08:49 - if this condition hasn't been met keep
08:51 - on repeating don't carry on the script
08:54 - don't get to line 6 don't print this out
08:56 - until this condition here has been
09:00 - proven true until it is true so when it
09:04 - repeats we know that this condition is
09:06 - going to be false because it's never
09:07 - going to be true until the repeat stops
09:12 - so sorry the repeat will only stop when
09:14 - this condition is true when it's false
09:17 - it's just going to keep repeating so
09:19 - that is what I repeat statement does and
09:22 - let's just give you another example here
09:28 - now because you'll be thinking okay
09:30 - that's cool yeah you can check the
09:31 - number of parts in a folder but what is
09:34 - this useful for I mean what is the point
09:35 - of just using a repeat for this what am
09:38 - I going to use this in my games so one
09:41 - of the most used I guess
09:44 - well what repeats a good for a good
09:47 - example of is kind of like checking for
09:49 - the parts in the folder but for checking
09:52 - if there's enough players in your game
09:53 - so for example again if we use the hash
09:56 - tag method which again you don't need to
09:58 - know about but what it does is it gives
10:00 - us a number or a number of things so a
10:03 - number of parts in the folder number of
10:05 - players in the game what we can say is
10:09 - repeat and we could do prints not enough
10:14 - players in the game and we want this to
10:20 - keep on repeating we want our weight as
10:22 - well so it doesn't crush the script so
10:24 - it doesn't just keep looping really
10:27 - really quickly until it crashes itself
10:28 - we need a delay to stop it from
10:30 - overloading so we want to just keep
10:33 - repeating this and we don't to move on
10:36 - basically so if we have some code which
10:38 - is for the rest of the game
10:40 - maybe like intermission you know or
10:46 - teleporting players basically that the
10:48 - game stuff right we don't want that to
10:51 - start until there is enough players in
10:55 - the game so we can say until game dot
10:59 - players curl on get players this gives
11:03 - us a table of players in the game and
11:05 - then we can use the hash tag to count
11:08 - how many players are in that table so
11:10 - it's giving us the number of players in
11:11 - the game again you don't need to know
11:13 - this yet but all you need to know is
11:15 - that it gives us a number of players
11:16 - currently in the game and we can say
11:18 - greater than or equal to a number so if
11:21 - you want at least two players in the
11:23 - game to start
11:23 - we can just set that to two and what's
11:25 - going to happen is it's going to keep
11:27 - repeating this code until this condition
11:29 - which is whether there are two or more
11:32 - players in the game has been met when it
11:34 - has been met the rest of the code down
11:36 - here will execute because it will move
11:39 - on because currently what it will do is
11:41 - it will enter the repeat statement it
11:43 - will print this it will wait and then it
11:45 - will check okay is there is the
11:47 - condition being met how many players are
11:50 - in the game and if there's one player in
11:51 - the game and I say okay so one is not
11:54 - greater than or equal to two so this
11:57 - condition is false this condition hasn't
11:58 - been met so we're gonna go around again
12:00 - we're going to go back up to the repeat
12:01 - we're gonna repeat this code again I'm
12:03 - gonna print it out we're gonna wait okay
12:05 - we're gonna check again is the condition
12:07 - met and somebody has joined the game
12:09 - this time around so it is going to see
12:14 - that there are now two players in the
12:15 - game and it is equal to two so it can be
12:18 - greater than or equal to so there's two
12:20 - players in the game this condition has
12:22 - now been met and we can break out of
12:25 - this repeat loop so it's not gonna
12:26 - repeat over again it's not gonna go back
12:28 - to the start it's just going to break
12:30 - out and it's going to move on to line 6
12:32 - and do the rest of the code if you have
12:35 - any code underneath it so let's just do
12:37 - a print saying we can start a game now
12:42 - and let's check it out
12:45 - we actually need to run this in place in
12:47 - a server for this to work so that we can
12:50 - add players into the into the game and
12:53 - just so you can see this actually
12:56 - happening I'm changing the weight to
12:58 - check every four seconds so instead of
13:01 - naught point naught three seconds what's
13:03 - going to happen is the two players are
13:05 - going to enter quite quickly there's not
13:08 - really much delay between them joining
13:10 - so you won't be able to see the effect
13:12 - so this should help help us in being
13:15 - able to see it happen when it's
13:17 - happening live so let's start the server
13:19 - I'm also going to change it to four
13:21 - players so that we can see it happening
13:24 - with with more players joining as we go
13:26 - along okay so here we go the server is
13:30 - being created let's just head over here
13:34 - okay so we couldn't really see it
13:36 - happening but we can head back to the
13:38 - output and see what's happening here so
13:40 - what's happened is it has printed out
13:42 - not enough plays in the game for three
13:45 - times so every four seconds it printed
13:48 - that out so it lasted 12 seconds before
13:51 - the game could start and then when it
13:53 - went round again in the repeat loop it
13:57 - saw that there were now four players in
13:59 - the game so it broke out of that repeat
14:02 - loop and it printed out we can start the
14:05 - game now so when it printed that out we
14:08 - obviously know that it stopped there
14:10 - what the repeat loop and it just carried
14:15 - on with the rest of the script so it
14:16 - printed that out so that is the repeat
14:18 - statement which is very useful in
14:21 - scripting it's a good alternative to the
14:23 - while loop if you don't need to use that
14:26 - but you will be using it a lot more not
14:28 - just for things like this there are many
14:30 - more use cases which you'll find out as
14:33 - you go along and it's something that you
14:35 - do need to know so the main difference
14:37 - between a will repeat statement and a
14:39 - while loop is that the repeat will
14:42 - execute the code it will run the code in
14:44 - between the repeat and the until once so
14:48 - it will repeat it no matter what the
14:50 - outcome of the statement is of the
14:53 - condition because
14:55 - it always comes first it comes before
14:57 - the condition so it's going to run once
15:01 - then it's going to check the condition
15:03 - if the condition is true so if the
15:07 - condition is false it hasn't been met
15:09 - yet then it's going to repeat it again
15:12 - but if it is true then it is going to
15:13 - have run that one time whereas with a
15:16 - while loop it is checking the condition
15:18 - first so it will not ruin at all if the
15:22 - condition is false and one other
15:25 - difference is that for a while loop the
15:28 - condition has to be true for the code to
15:32 - execute inside of it whereas in a repeat
15:34 - and the condition here actually has to
15:37 - be false for it to repeat again because
15:40 - when it is true when it finally just
15:43 - become true it's gonna it's gonna stop
15:45 - and is gonna carry on the rest of the
15:46 - code it's gonna stop the repeat the
15:49 - looping of the repeat statement so that
15:51 - is the repeat statement repeat loop
15:56 - compared to the while loop so I hope
16:00 - that video was useful please do share
16:02 - the video with anybody that you think
16:04 - will find it useful if they're also
16:06 - learning roadblocks scripting don't
16:09 - forget to give it a like so that I know
16:10 - you're enjoying this one I know a lot of
16:12 - people gave quite a lot of likes on the
16:15 - wild loot video which made me want to do
16:18 - this one because you guys really liked
16:19 - that one don't forget to subscribe as
16:21 - well for more roblox scripting content
16:23 - and I'll see you in the next one
16:25 - Cheers bye

Cleaned transcript:

hi everyone welcome back to another video this is episode number 16 in the scripting series today we're going to be looking at repeating what it is what it's useful for and all that good stuff so let's get into it so in the previous video we looked at while loops do recommend you check that out if you have not already because we will be referring to while loops in the video and comparing them to what repeating is so repeating is a way of well it's in the name repeating code over and over again just like a while loop I repeat code forever until a certain condition has been met it's very similar actually so what it will do is if you write out repeat and then after that you need to write until that's the syntax so we say repeat until and these two words are basically what you need to create a repeat statement so what it's going to do is you're going to have your code in between these two words and this code here is going to just keep on repeating forever and ever well on and on let's say until a condition is met so your condition is going to go here so the condition like we said in the while loops is the thing that needs to be met the thing that needs to be true the statement that the script is going to check every time that this loops to see whether it's true or false and if it is true if the condition is true it's going to stop repeating if the condition is false it's going to keep on repeating because that condition hasn't been met yet so let's let me give you a few examples here so here is our while loop which we have looked at before in the previous video and the while loop will firstly check the condition the first time it runs it's going to check this condition it's going to say okay is the number of objects in this folder called parts if you're not sure about what this means you don't need to know about it just yet but I'm just gonna simplify it for you what this highlighted piece of code does is it basically checks the number of objects inside this folder so this hashtag will give us the number of objects stored in this parts folder currently it is zero but if I was to put this scripts inside the folder they would now be one object inside the folder so this would be one so all it's doing is checking the number of objects or children in that folder so in this example the condition is checking whether the number of children in this folder is less than two and it's going to keep on repeating this it's gonna keep on looping through and it's just gonna keep on printing not enough parts in the folder if it's less than two and that's what it's going to do and let's just have that weight in there so that it doesn't crush our script now if we were to run this you can see it just keeps on printing out not enough parts in the folder because there is not there's not enough parts there needs to be let's have a look here it needs to be over to for it to break this while loop so let's go ahead and put two objects in here it doesn't matter what the objects are I know we said parts but in fact we will just put parts because that's what we told it to print for so we'll do a mesh part and another part and there we go boom it stops printing out you can see it's gone purple that means that the while loop is broken whatever and the the X eight one eight is no longer increasing so we know that when two parts or two objects were inserted into that folder it was enough to break the while loop because the next time it went around every naught point naught 3 seconds it checked ok how many objects are there in this folder and there were two so 2 is not less than 2 so it would be enough to meet the condition so the condition was indeed false because there was not less than two objects in the folder so it just broke out of the while loop so that is the while loop now the repeat version if you're doing repeating it's quite similar now let's bring them both up and compare them so down here we've got the repeat version and this is using the repeat statement which we're learning about today now the main difference in the repeat statement is that is going to run at least once the code inside of here is guaranteed to run the first time regardless of this condition because it's ordered so that we're firstly saying repeat so we're telling the script to execute the following code ok so it's gonna execute it the first time and remember scripts go line by line so we're starting off on line 1 saying repeat all right and then we're in the middle of this repeat statement now we've gone straight into the repeat statement so now we're on line 2 and we're printing out not enough parts in the game or in the folder I should say so it's printing that out and then we're doing the weight and now we're on line 4 and on line 4 is where we do the condition check so we don't do the condition check at the start like the while loop does if when the game started it checks straight away the number of parts in the folder ok because it's the first line in the while loop so if there is more than 2 or 2 if there's not less than 2 objects in the folder then it's just not going to run the while loop isn't it's not going to run any of this code it's just going to basically skip to the end of what to the next line of code which isn't in the wild loop so it would go straight here whereas in the repeat it's going to print out not enough parts in the folder so even if you did have enough parts in the folder it would print out not enough parts in the folder on the first time because the scripts has been told to start a repeat statement so it's gonna it's gonna do this gonna do this code and then it's gonna check if there's enough parts in the folder so you could have enough parts in the folder to begin with and the scripts still gonna say there's not enough parts in the folder so if you had some code that you only wanted to run if a certain condition was met it's not a good idea to use repeat because it's going to run this folder sorry run this code straight away if you want this code to only run when has been met you don't want to use this you want to use a while loop so that's the main difference between them now let's check out the repeat version and see what happens when we do use that just to show you so let's disable these other two and we're now running off with this script so what should happen is it should print out not enough parts in the folder it should keep on printing that out until there's let's say less than sorry until yes we'll do greater than one because remember we are wanting to keep printing this out until there is over one amount of parts in the game so when there's two or more parts in the folder we want to basically get out of this repeat because we've hit our condition we want this to keep repeating until there are enough parts in the folder until there's at least two parts in the folder so when we say greater than one well it has to be two or more doesn't it so it can't be equal to one it has to be greater than one so let's check this out see what happens so you can see again it's just repeating over and over again not enough parts in the folder I'll do hope I'm not getting you all confused here with all this enough parts in the folder basically we're just checking how many children there are in the folder and it's going to keep repeating these to answer code until there are two or more parts in the folder as you can see down here we've got the little incremented down here which is going up very very quickly and if we do go ahead and insert two parts into the folder and now so we've got one in there let's duplicate it and bam it has exited the repeat statement because it has kept looping around and until there has been two parts so every naught point naught three seconds it's been checking and eventually it has detected okay there are two parts in the folder and we wanted it to be greater than one and that condition has been met so what we're saying is repeat this code over and over again until this condition here has been if this condition hasn't been met keep on repeating don't carry on the script don't get to line 6 don't print this out until this condition here has been proven true until it is true so when it repeats we know that this condition is going to be false because it's never going to be true until the repeat stops so sorry the repeat will only stop when this condition is true when it's false it's just going to keep repeating so that is what I repeat statement does and let's just give you another example here now because you'll be thinking okay that's cool yeah you can check the number of parts in a folder but what is this useful for I mean what is the point of just using a repeat for this what am I going to use this in my games so one of the most used I guess well what repeats a good for a good example of is kind of like checking for the parts in the folder but for checking if there's enough players in your game so for example again if we use the hash tag method which again you don't need to know about but what it does is it gives us a number or a number of things so a number of parts in the folder number of players in the game what we can say is repeat and we could do prints not enough players in the game and we want this to keep on repeating we want our weight as well so it doesn't crush the script so it doesn't just keep looping really really quickly until it crashes itself we need a delay to stop it from overloading so we want to just keep repeating this and we don't to move on basically so if we have some code which is for the rest of the game maybe like intermission you know or teleporting players basically that the game stuff right we don't want that to start until there is enough players in the game so we can say until game dot players curl on get players this gives us a table of players in the game and then we can use the hash tag to count how many players are in that table so it's giving us the number of players in the game again you don't need to know this yet but all you need to know is that it gives us a number of players currently in the game and we can say greater than or equal to a number so if you want at least two players in the game to start we can just set that to two and what's going to happen is it's going to keep repeating this code until this condition which is whether there are two or more players in the game has been met when it has been met the rest of the code down here will execute because it will move on because currently what it will do is it will enter the repeat statement it will print this it will wait and then it will check okay is there is the condition being met how many players are in the game and if there's one player in the game and I say okay so one is not greater than or equal to two so this condition is false this condition hasn't been met so we're gonna go around again we're going to go back up to the repeat we're gonna repeat this code again I'm gonna print it out we're gonna wait okay we're gonna check again is the condition met and somebody has joined the game this time around so it is going to see that there are now two players in the game and it is equal to two so it can be greater than or equal to so there's two players in the game this condition has now been met and we can break out of this repeat loop so it's not gonna repeat over again it's not gonna go back to the start it's just going to break out and it's going to move on to line 6 and do the rest of the code if you have any code underneath it so let's just do a print saying we can start a game now and let's check it out we actually need to run this in place in a server for this to work so that we can add players into the into the game and just so you can see this actually happening I'm changing the weight to check every four seconds so instead of naught point naught three seconds what's going to happen is the two players are going to enter quite quickly there's not really much delay between them joining so you won't be able to see the effect so this should help help us in being able to see it happen when it's happening live so let's start the server I'm also going to change it to four players so that we can see it happening with with more players joining as we go along okay so here we go the server is being created let's just head over here okay so we couldn't really see it happening but we can head back to the output and see what's happening here so what's happened is it has printed out not enough plays in the game for three times so every four seconds it printed that out so it lasted 12 seconds before the game could start and then when it went round again in the repeat loop it saw that there were now four players in the game so it broke out of that repeat loop and it printed out we can start the game now so when it printed that out we obviously know that it stopped there what the repeat loop and it just carried on with the rest of the script so it printed that out so that is the repeat statement which is very useful in scripting it's a good alternative to the while loop if you don't need to use that but you will be using it a lot more not just for things like this there are many more use cases which you'll find out as you go along and it's something that you do need to know so the main difference between a will repeat statement and a while loop is that the repeat will execute the code it will run the code in between the repeat and the until once so it will repeat it no matter what the outcome of the statement is of the condition because it always comes first it comes before the condition so it's going to run once then it's going to check the condition if the condition is true so if the condition is false it hasn't been met yet then it's going to repeat it again but if it is true then it is going to have run that one time whereas with a while loop it is checking the condition first so it will not ruin at all if the condition is false and one other difference is that for a while loop the condition has to be true for the code to execute inside of it whereas in a repeat and the condition here actually has to be false for it to repeat again because when it is true when it finally just become true it's gonna it's gonna stop and is gonna carry on the rest of the code it's gonna stop the repeat the looping of the repeat statement so that is the repeat statement repeat loop compared to the while loop so I hope that video was useful please do share the video with anybody that you think will find it useful if they're also learning roadblocks scripting don't forget to give it a like so that I know you're enjoying this one I know a lot of people gave quite a lot of likes on the wild loot video which made me want to do this one because you guys really liked that one don't forget to subscribe as well for more roblox scripting content and I'll see you in the next one Cheers bye
