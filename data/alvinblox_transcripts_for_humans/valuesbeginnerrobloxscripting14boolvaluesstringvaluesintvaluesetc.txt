With timestamps:

00:00 - hey everyone welcome back to another
00:01 - video this is Alvin blocks before we get
00:04 - the video started you may notice a
00:05 - change in the audio quality that's
00:07 - because I've just invested in a brand
00:09 - new microphone so hopefully everything
00:11 - sounds great I'm still working on the
00:13 - audio and they're little tweaking of the
00:17 - audio quality so do stick with me on
00:19 - that but today I'm going to be showing
00:21 - you values in roblox value objects and
00:25 - what they're useful for so let's get
00:27 - straight into the video so you've
00:30 - already learned in this series about
00:32 - variables and how we can hold data in a
00:35 - variable in a script but the problem
00:38 - with variables is that they are script
00:40 - specific so you can only access a
00:43 - variable if it has been defined or
00:45 - created in the same script so if I was
00:48 - to have a variable called my var and I
00:51 - wanted to print out my var from another
00:54 - script maybe let's create a second
00:56 - script and let's try and print out my
00:59 - var if we were to ruin this code then
01:03 - the game would say nil because in this
01:05 - script it has a sorry in this script it
01:08 - has try to print out my heart but it
01:10 - doesn't know what it is because it's
01:12 - only checking this script to find that
01:15 - variable so what I'm saying is you can
01:18 - only access modify you know view or
01:24 - print variables that have been defined
01:27 - in the same script so you can't access
01:30 - them from another script they are only a
01:33 - part of the script that they are defined
01:35 - in so you know I could print it in this
01:37 - script and that would be fine but what
01:39 - if I wanted to access and a number or
01:42 - you know it's like a variable some data
01:44 - from a different script well that is
01:46 - where values come in so a value is an
01:49 - object that we can put into our game
01:52 - just like a script is an object we have
01:54 - value objects so you can store them
01:58 - anywhere you like the most common places
02:01 - we store them are in server storage
02:05 - sometimes in the workspace
02:07 - sometimes in replicated storage as well
02:09 - but we're just gonna put them in server
02:11 - storage today because we can access them
02:13 - from all of our scripts there although
02:15 - it doesn't really matter so let's type
02:19 - in a value in this search box here and
02:23 - you can see loads of different values
02:24 - come up all these different objects
02:26 - they're classed under values and they're
02:29 - all they all represent different data
02:31 - types so we have a bull value brick
02:34 - color value C frame value color 3 value
02:37 - in value number value blah blah blah so
02:40 - all of these different values are used
02:43 - to hold data just like we would hold
02:46 - them in a variable although the
02:47 - difference is because they're objects we
02:51 - can reference them from different
02:53 - scripts and grab their values we can
02:56 - even update their values so let's insert
02:58 - a ball value you have different values
03:00 - for different data types or different
03:02 - types of data that you want to store so
03:04 - we if we will have a ball value then the
03:07 - objects would have a property all all of
03:11 - these value objects this can get a bit
03:13 - confusing by default they are called
03:16 - value but the objects themselves have a
03:19 - property which is called value and what
03:22 - we can do is we can set that value to
03:25 - the data that we want so just like you'd
03:27 - set a variable you'd give some data to a
03:30 - variable you'd hold that data in the
03:33 - variable the data that's held in this
03:34 - value is under the value property so in
03:39 - this case it's a ball value because
03:41 - that's the class name so let's just call
03:43 - this ball value for now so we know which
03:45 - is which so our ball value it currently
03:48 - holds false that is the data held a
03:51 - false value so when the box is unchecked
03:54 - that means it is false when we click it
03:56 - and check it that means that the value
03:58 - is true so what we can do is if we just
04:01 - delete this script here we can firstly
04:04 - get our value and we can say game
04:06 - thought server storage dot ball value
04:09 - okay now if we wanted to print out or or
04:14 - access the current value of this ball
04:17 - value we can just say dot value because
04:20 - a value is the property name and Dan is
04:23 - going to be that is going to give us the
04:25 - current value which is
04:27 - only false but if you were to print that
04:29 - out it would give us false okay and if
04:35 - we were to make the value property true
04:37 - I should now print out true and there we
04:41 - go
04:41 - it does indeed so what that means is if
04:46 - we were to create a second script we
04:48 - could access the overall you still let's
04:53 - call it script two and in fact let's add
04:57 - a wait five in here okay we'll do a
05:02 - print this is gonna be it's gonna look
05:05 - confusing for a second but I'm gonna
05:06 - explain what we're gonna do so in script
05:09 - - we are firstly printing out the value
05:13 - then we're gonna wait five seconds and
05:14 - print it again then in our second script
05:17 - so via our first script we can set the
05:20 - value to something different so let's do
05:22 - a wait three here and then after three
05:26 - seconds let's just get rid of this print
05:27 - here and to actually set a value - to
05:31 - change the value we have to firstly get
05:33 - the value property and then we can say
05:35 - equals and then we can set it to our
05:38 - data now because this is the ball value
05:40 - it will only take true or false value so
05:42 - I'm going to set it to true so what's
05:44 - going to happen is script number two
05:46 - it's firstly going to print out the the
05:49 - value property of the ball value then
05:51 - after three seconds script number one is
05:54 - going to change that value to true and
05:56 - then what's what's going to happen in
05:58 - script two after that five seconds it's
06:01 - going to print out the value again and
06:03 - it should have changed so let's have a
06:05 - look what happens just clear our outputs
06:07 - and run the script again so it prints
06:11 - out true and then after five seconds it
06:13 - should have been changed by the other
06:14 - script and it's still true oh that's
06:17 - because we actually then he left it set
06:18 - on true so if were to try again you see
06:21 - it's originally false and then it
06:24 - suddenly gets changed you only just saw
06:26 - that there it gets changed and then it
06:28 - gets printed as true let me just show
06:30 - you again in case you're confused so to
06:32 - start off with its false after three
06:33 - seconds
06:34 - our first script will change it to true
06:37 - and then
06:38 - after that five seconds have passed it
06:40 - will print out true so what's happened
06:43 - is we're basically using two scripts
06:45 - here one script is getting the value and
06:48 - another script is setting the value but
06:50 - you can set a value and also get a value
06:53 - from the same scripts I was only doing
06:54 - this method to demonstrate that you can
06:56 - access a value object from any script in
07:01 - your game as long as it's a service
07:04 - scripts if it was if a ball value was
07:07 - stored in say the starter GUI or starter
07:09 - pack then it would be stored on a
07:11 - player's computer on the client so you'd
07:13 - only be able to get them from local
07:14 - scripts in the starter GUI starter pack
07:16 - or in the player but if it's in say
07:18 - server storage service script service or
07:20 - the workspace then you could only get it
07:22 - from server scripts that are in service
07:24 - script service service storage or
07:25 - workspace and replicated storage that's
07:29 - a bit of a funny one actually if you had
07:30 - a value in replicated storage you would
07:32 - be able to get it so read it from the
07:35 - client and also from the server but
07:37 - you'd only be able to update it to
07:39 - change that value from the server and
07:41 - that's because if the client was given
07:44 - permission to edit a value then they
07:47 - could basically export the game for
07:50 - example if you had a status value in
07:52 - here which was updated by the server and
07:54 - then read to on all the clients so all
07:57 - the players in the game
07:59 - read this ball value say it was a string
08:01 - value and it stored some text to go up
08:04 - here in a GUI maybe like an intermission
08:06 - and then it says round starting in three
08:08 - two one blah blah blah it would only be
08:11 - able to be read read from on the client
08:15 - but the server would be able to write to
08:17 - that value let me give you a few more
08:19 - examples of values then because we have
08:23 - got quite a few let's just type in value
08:26 - we have string value here so same thing
08:29 - again it's insert itself and it just
08:31 - calls it value so I'm going to change
08:33 - the name to string value and because it
08:35 - is a string value it can only take a
08:37 - string so let's just change the name to
08:39 - string value so string value value we
08:42 - couldn't set it to true if we set it to
08:44 - true if we try to set it to true we're
08:47 - going to get an error okay it's going to
08:49 - say bad argument we can't do that
08:50 - because it expected
08:51 - string and instead of got a bull value
08:53 - of boolean so we can give it some text
08:57 - so it's a string so it's in in speech
09:00 - Mart's to say hello run the script after
09:03 - three seconds our value should update to
09:06 - hello there we go so we have just
09:08 - written to that value and same thing
09:11 - again we can print out the value and you
09:15 - may be thinking okay what's the point of
09:17 - just printing out values but they are
09:19 - really really useful so if I set this
09:22 - value to hey there and then after three
09:23 - seconds we print out what that value is
09:26 - set to it's going to print out hey there
09:28 - so this is useful for example if you
09:31 - have a status value you could have a
09:34 - status value in the replicated storage
09:36 - then you could write to that value just
09:40 - like we did here to update it and then
09:44 - say in a GUI you could have a script
09:47 - that gets the value of that string value
09:50 - and puts it as the text of a GUI for
09:52 - example so very very useful and also if
09:55 - you want on that script communication
09:56 - between two scripts and you want to get
09:59 - some data that you have stored in
10:01 - another script in a variable or you can
10:03 - use values like the string value to to
10:08 - share that data between two scripts and
10:09 - to communicate with them another example
10:12 - you could have a int value an int value
10:17 - and a number value they are quite
10:19 - similar let me just show you so we have
10:21 - in value number value an int value will
10:24 - only take integer numbers so like 1 2 3
10:27 - 4 a number value will take any number
10:29 - even if it is a decimal so 1.1 1.2 1.3
10:33 - it will still take 1 2 3 4 5 normal
10:36 - integer numbers but it will also take
10:38 - decimal numbers an int value will only
10:41 - take integers so you could have an int
10:44 - value with a number of players still
10:47 - alive in your game and when somebody
10:49 - dies in one scripts that you could have
10:51 - look at an event which is triggered when
10:53 - somebody dies you could decrease that
10:55 - value by 1 in another scripts you could
10:57 - be constantly checking that value to see
10:59 - if it is set to 0 so if there's zero
11:01 - players left you want to end your game
11:02 - so you can see how scripts will work
11:05 - gather to not only set values but to get
11:08 - them to read from them so that's why
11:09 - they're so powerful and so that they're
11:13 - really really helpful in roblox
11:15 - development now I'm going to show you
11:16 - one more example here we have a seat
11:18 - frame value on our C frame value if
11:21 - you're not too
11:23 - if you're not too good with C frame this
11:25 - is basically like a position value but
11:28 - it also has rotation so it tells an
11:30 - object how it should be positioned and
11:32 - rotated and you can see it has no value
11:35 - property well it actually does have a
11:37 - value property but it's hidden in the
11:39 - properties window and if you want to set
11:41 - a C frame value you would have to
11:44 - actually do it in a script so for
11:46 - example if I was to say game got so
11:48 - storage dot C frame dot value I would
11:51 - have to set it like this so I'd have to
11:54 - give it a C frame okay for example I'm
11:57 - just going to give it a C frame here but
11:59 - you can only set it from a script you'd
12:01 - still be able to you'd still be able to
12:04 - get it though so you could do this let's
12:08 - see if this works so I'll just add a
12:10 - weight in here and I set the value and
12:12 - then I try and get it as well you can
12:14 - see I've set it and then I'm also able
12:16 - to get it in print its values okay and
12:19 - it has X Y and is there values as well
12:22 - for the three coordinates so that's just
12:24 - an example you probably won't need to
12:26 - use C frame values yet but there's all
12:27 - sorts of different values have a play
12:29 - with them some are pretty cool you can
12:32 - actually set them from the value so you
12:34 - could set a color to a color three value
12:36 - and then you'd be able to actually get
12:38 - to the the the color from that value a
12:40 - good use case for that would be if you
12:42 - had a whole script that's created GUIs
12:47 - with different width from colors and you
12:49 - just had a default red color they would
12:51 - like a color scheme you want to keep the
12:52 - same red color throughout all of your tu
12:55 - eyes and the same green color you could
12:57 - set your red to a certain color and then
12:59 - all your DUIs when you have to set a
13:01 - color you could just get the value from
13:02 - this color three value and then that way
13:04 - you could if you wanted to change the
13:06 - color of your duis a little bit you only
13:09 - have to change this one color here and
13:10 - the scripts would do all the work for
13:11 - you but there you go this there's an
13:14 - example and a couple examples of how
13:16 - values work again
13:18 - I have just got a new mic so let me know
13:20 - what you think of the audio quality I'm
13:22 - gonna refine it over the next couple of
13:23 - videos make it sound really cool also as
13:26 - well a great thing about this microphone
13:28 - is that you won't be able to hear the
13:30 - keyboard as much this is just me typing
13:32 - on it right now
13:35 - so you can see it's not as loud as it
13:37 - was before so hopefully this will be a
13:39 - good microphone and if you enjoyed this
13:42 - video please do click the subscribe
13:44 - button it's in the middle of your screen
13:46 - now or you can click the so we can click
13:48 - the album blocks logo in the middle of
13:49 - your screen or you can click the
13:51 - subscribe button down below don't forget
13:52 - to like comment if you have any
13:54 - questions or ideas for further videos
13:55 - and thanks for watching I'll see you in
13:58 - the next one

Cleaned transcript:

hey everyone welcome back to another video this is Alvin blocks before we get the video started you may notice a change in the audio quality that's because I've just invested in a brand new microphone so hopefully everything sounds great I'm still working on the audio and they're little tweaking of the audio quality so do stick with me on that but today I'm going to be showing you values in roblox value objects and what they're useful for so let's get straight into the video so you've already learned in this series about variables and how we can hold data in a variable in a script but the problem with variables is that they are script specific so you can only access a variable if it has been defined or created in the same script so if I was to have a variable called my var and I wanted to print out my var from another script maybe let's create a second script and let's try and print out my var if we were to ruin this code then the game would say nil because in this script it has a sorry in this script it has try to print out my heart but it doesn't know what it is because it's only checking this script to find that variable so what I'm saying is you can only access modify you know view or print variables that have been defined in the same script so you can't access them from another script they are only a part of the script that they are defined in so you know I could print it in this script and that would be fine but what if I wanted to access and a number or you know it's like a variable some data from a different script well that is where values come in so a value is an object that we can put into our game just like a script is an object we have value objects so you can store them anywhere you like the most common places we store them are in server storage sometimes in the workspace sometimes in replicated storage as well but we're just gonna put them in server storage today because we can access them from all of our scripts there although it doesn't really matter so let's type in a value in this search box here and you can see loads of different values come up all these different objects they're classed under values and they're all they all represent different data types so we have a bull value brick color value C frame value color 3 value in value number value blah blah blah so all of these different values are used to hold data just like we would hold them in a variable although the difference is because they're objects we can reference them from different scripts and grab their values we can even update their values so let's insert a ball value you have different values for different data types or different types of data that you want to store so we if we will have a ball value then the objects would have a property all all of these value objects this can get a bit confusing by default they are called value but the objects themselves have a property which is called value and what we can do is we can set that value to the data that we want so just like you'd set a variable you'd give some data to a variable you'd hold that data in the variable the data that's held in this value is under the value property so in this case it's a ball value because that's the class name so let's just call this ball value for now so we know which is which so our ball value it currently holds false that is the data held a false value so when the box is unchecked that means it is false when we click it and check it that means that the value is true so what we can do is if we just delete this script here we can firstly get our value and we can say game thought server storage dot ball value okay now if we wanted to print out or or access the current value of this ball value we can just say dot value because a value is the property name and Dan is going to be that is going to give us the current value which is only false but if you were to print that out it would give us false okay and if we were to make the value property true I should now print out true and there we go it does indeed so what that means is if we were to create a second script we could access the overall you still let's call it script two and in fact let's add a wait five in here okay we'll do a print this is gonna be it's gonna look confusing for a second but I'm gonna explain what we're gonna do so in script we are firstly printing out the value then we're gonna wait five seconds and print it again then in our second script so via our first script we can set the value to something different so let's do a wait three here and then after three seconds let's just get rid of this print here and to actually set a value to change the value we have to firstly get the value property and then we can say equals and then we can set it to our data now because this is the ball value it will only take true or false value so I'm going to set it to true so what's going to happen is script number two it's firstly going to print out the the value property of the ball value then after three seconds script number one is going to change that value to true and then what's what's going to happen in script two after that five seconds it's going to print out the value again and it should have changed so let's have a look what happens just clear our outputs and run the script again so it prints out true and then after five seconds it should have been changed by the other script and it's still true oh that's because we actually then he left it set on true so if were to try again you see it's originally false and then it suddenly gets changed you only just saw that there it gets changed and then it gets printed as true let me just show you again in case you're confused so to start off with its false after three seconds our first script will change it to true and then after that five seconds have passed it will print out true so what's happened is we're basically using two scripts here one script is getting the value and another script is setting the value but you can set a value and also get a value from the same scripts I was only doing this method to demonstrate that you can access a value object from any script in your game as long as it's a service scripts if it was if a ball value was stored in say the starter GUI or starter pack then it would be stored on a player's computer on the client so you'd only be able to get them from local scripts in the starter GUI starter pack or in the player but if it's in say server storage service script service or the workspace then you could only get it from server scripts that are in service script service service storage or workspace and replicated storage that's a bit of a funny one actually if you had a value in replicated storage you would be able to get it so read it from the client and also from the server but you'd only be able to update it to change that value from the server and that's because if the client was given permission to edit a value then they could basically export the game for example if you had a status value in here which was updated by the server and then read to on all the clients so all the players in the game read this ball value say it was a string value and it stored some text to go up here in a GUI maybe like an intermission and then it says round starting in three two one blah blah blah it would only be able to be read read from on the client but the server would be able to write to that value let me give you a few more examples of values then because we have got quite a few let's just type in value we have string value here so same thing again it's insert itself and it just calls it value so I'm going to change the name to string value and because it is a string value it can only take a string so let's just change the name to string value so string value value we couldn't set it to true if we set it to true if we try to set it to true we're going to get an error okay it's going to say bad argument we can't do that because it expected string and instead of got a bull value of boolean so we can give it some text so it's a string so it's in in speech Mart's to say hello run the script after three seconds our value should update to hello there we go so we have just written to that value and same thing again we can print out the value and you may be thinking okay what's the point of just printing out values but they are really really useful so if I set this value to hey there and then after three seconds we print out what that value is set to it's going to print out hey there so this is useful for example if you have a status value you could have a status value in the replicated storage then you could write to that value just like we did here to update it and then say in a GUI you could have a script that gets the value of that string value and puts it as the text of a GUI for example so very very useful and also if you want on that script communication between two scripts and you want to get some data that you have stored in another script in a variable or you can use values like the string value to to share that data between two scripts and to communicate with them another example you could have a int value an int value and a number value they are quite similar let me just show you so we have in value number value an int value will only take integer numbers so like 1 2 3 4 a number value will take any number even if it is a decimal so 1.1 1.2 1.3 it will still take 1 2 3 4 5 normal integer numbers but it will also take decimal numbers an int value will only take integers so you could have an int value with a number of players still alive in your game and when somebody dies in one scripts that you could have look at an event which is triggered when somebody dies you could decrease that value by 1 in another scripts you could be constantly checking that value to see if it is set to 0 so if there's zero players left you want to end your game so you can see how scripts will work gather to not only set values but to get them to read from them so that's why they're so powerful and so that they're really really helpful in roblox development now I'm going to show you one more example here we have a seat frame value on our C frame value if you're not too if you're not too good with C frame this is basically like a position value but it also has rotation so it tells an object how it should be positioned and rotated and you can see it has no value property well it actually does have a value property but it's hidden in the properties window and if you want to set a C frame value you would have to actually do it in a script so for example if I was to say game got so storage dot C frame dot value I would have to set it like this so I'd have to give it a C frame okay for example I'm just going to give it a C frame here but you can only set it from a script you'd still be able to you'd still be able to get it though so you could do this let's see if this works so I'll just add a weight in here and I set the value and then I try and get it as well you can see I've set it and then I'm also able to get it in print its values okay and it has X Y and is there values as well for the three coordinates so that's just an example you probably won't need to use C frame values yet but there's all sorts of different values have a play with them some are pretty cool you can actually set them from the value so you could set a color to a color three value and then you'd be able to actually get to the the the color from that value a good use case for that would be if you had a whole script that's created GUIs with different width from colors and you just had a default red color they would like a color scheme you want to keep the same red color throughout all of your tu eyes and the same green color you could set your red to a certain color and then all your DUIs when you have to set a color you could just get the value from this color three value and then that way you could if you wanted to change the color of your duis a little bit you only have to change this one color here and the scripts would do all the work for you but there you go this there's an example and a couple examples of how values work again I have just got a new mic so let me know what you think of the audio quality I'm gonna refine it over the next couple of videos make it sound really cool also as well a great thing about this microphone is that you won't be able to hear the keyboard as much this is just me typing on it right now so you can see it's not as loud as it was before so hopefully this will be a good microphone and if you enjoyed this video please do click the subscribe button it's in the middle of your screen now or you can click the so we can click the album blocks logo in the middle of your screen or you can click the subscribe button down below don't forget to like comment if you have any questions or ideas for further videos and thanks for watching I'll see you in the next one
