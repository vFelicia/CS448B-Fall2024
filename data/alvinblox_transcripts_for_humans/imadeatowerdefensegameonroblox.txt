With timestamps:

00:00 - okay so last year in january 2020
00:03 - i created this tower defense simulator
00:05 - game
00:06 - completely from scratch but i didn't do
00:07 - anything with it i was planning to
00:09 - either release it as a game and i was
00:11 - just making it for fun
00:12 - or maybe even as a tutorial and i was
00:14 - kind of just left it to sit
00:16 - in my roblox account doing nothing i
00:18 - thought it would be great to do a video
00:20 - showing how i made this game
00:21 - so you can see how they work and maybe
00:23 - in the future i'll do a tutorial series
00:25 - on how to recreate this so let me show
00:27 - you how the game works let's just go and
00:29 - load in here
00:30 - so if you haven't played tower defense
00:31 - simulator the aim is that you get
00:33 - waves of zombies here and you have to
00:35 - place down fighters
00:36 - to kill them so if i place down my
00:38 - little fighter over here he's going to
00:40 - start shooting the zombies
00:41 - and hopefully the wave will be cleared
00:43 - and if we do let any zombies get over
00:45 - here
00:46 - to our little bank area this is kind of
00:49 - like our
00:50 - our city i guess we don't want them to
00:51 - get over here because our health
00:53 - of our city will start to be destroyed
00:56 - and we'll lose the game so
00:58 - you have to place down these fighters
01:00 - and they will
01:01 - attack the zombies you can see we're
01:02 - already starting to lose a bit of health
01:04 - there
01:04 - so i'm just going to place down a load
01:06 - of fighters because
01:09 - every new wave which appears brings
01:11 - tougher zombies more zombies faster
01:14 - zombies etc
01:15 - so we've got two zombie types in the
01:17 - game
01:18 - they're just default npcs for now but
01:20 - you can definitely customize them you
01:22 - can have all sorts of different maps
01:23 - i've only got one map here
01:25 - and this is basically it this is the
01:27 - game once you get to
01:29 - maybe wave 9 or 10 the zombies will be
01:32 - very fast they'll
01:34 - come in hordes of very very
01:37 - powerful zombies you'll get bosses which
01:40 - eventually
01:41 - you will need a lot of fighters in order
01:43 - to defeat them but the game isn't too
01:45 - advanced
01:46 - i mean you usually in a tower defense
01:47 - game you have to actually pay money to
01:49 - spawn these fighters but i can have as
01:51 - many as i want here
01:52 - so let's just go and spawn a load and
01:54 - i'll come back to you when when i've got
01:55 - a massive army of them all right i'm
01:57 - nearly dead over here so we need to get
01:59 - a load of new units in over here
02:01 - before the next wave of zombies arrive
02:03 - because this is going to be a very
02:05 - powerful wave i think if we let any
02:06 - zombies get to the end here
02:08 - we're going to be dead here we go here
02:10 - come the zombies
02:11 - and yeah they're way
02:14 - too powerful for us and we were defeated
02:16 - game over
02:20 - but you can see how the game works it's
02:22 - working pretty well we've got the
02:24 - the zombies moving along the path and
02:26 - i'm happy with it so let me dive in and
02:28 - show you how this game works
02:29 - so first of all i created my zombies and
02:31 - i put them in this folder
02:33 - and i created a module which uses object
02:35 - oriented programming so i can create a
02:38 - function
02:38 - which spawns a zombie and sets up the
02:41 - zombie with their character
02:43 - gives them a specific name and sets
02:45 - their properties such as their health
02:46 - etc
02:47 - and then what i do is i spawn the zombie
02:50 - and move them
02:51 - to the spawn point which is actually
02:54 - over here now if we
02:55 - have a look at this invisible part you
02:57 - can see i've got
02:59 - my paths here so i've got path one path
03:01 - two
03:02 - a three four five six they're all
03:04 - numbered and each path
03:06 - has a starting node well we have a
03:08 - starting node for this
03:09 - this first path and we have an end node
03:12 - over here
03:12 - so i'm telling those i'm making two
03:14 - positions where you can form
03:16 - a straight line for the zombies to walk
03:18 - on so the zombie is going to spawn over
03:20 - here
03:20 - and they're going to walk to the end
03:22 - node and when they get to this node here
03:23 - they're going to move to this one and
03:25 - then they're going to move to this one
03:26 - so you can see how they they move across
03:28 - the path over here
03:30 - to get to the exit so what we do is we
03:33 - have our
03:34 - enemy module here which spawns a zombie
03:37 - and then we have
03:37 - this move function which loops through
03:40 - all of those paths those numbered paths
03:43 - and it will move
03:44 - the npc the the enemy to the end node's
03:48 - position
03:49 - and then we'll wait until they get to
03:50 - that position and then we'll go again
03:52 - to the next one and eventually when they
03:54 - get over here
03:56 - to the finish line we will detect when
03:58 - they get to the final node and when they
04:00 - do
04:00 - we'll subtract some health off our bases
04:03 - total over here so when they break out
04:05 - of this for loop
04:06 - they must have got to the end of the
04:07 - path so we'll see okay
04:09 - is the base still alive have we still
04:11 - got some health
04:12 - and if we have we're going to damage it
04:14 - by a certain amount that
04:16 - the zombie damages and that's why i
04:17 - decided to use object oriented
04:19 - programming
04:20 - because we can set different damage
04:22 - values for different uh zombies so we
04:24 - could have
04:25 - a dumb zombie which only does 100 damage
04:27 - or you could have a super boss zombie
04:29 - which does a hundred thousand damage and
04:31 - so by saying self dot damage
04:33 - i can access that damage property which
04:36 - is assigned
04:36 - to each individual zombie and if we go
04:38 - over to
04:40 - our other script here you can see in the
04:42 - main script i've actually got
04:44 - a massive dictionary table of the
04:47 - different waves
04:48 - so we've got wave one and in the first
04:50 - wave i'm going to spawn
04:51 - two dumb zombies they're going to have a
04:53 - delay of two seconds
04:55 - in releasing them and they're going to
04:57 - have four walk speed
04:58 - and the damage they're going to give is
05:00 - 250
05:01 - so each time they get to the end it's
05:03 - going to take 250 off
05:04 - our total but you can see as we progress
05:06 - down to wave 2 wave 3 wave 4
05:09 - wave five six seven and eight you can
05:11 - see in wave seven
05:12 - they do thirty thousand damage so that's
05:14 - why towards the end of when i was
05:16 - playing the game
05:17 - they were doing more damage to my base
05:19 - and then we have
05:20 - a little event over here which detects
05:23 - when the base's health changes
05:25 - and when that does we just we just will
05:27 - check to see if it's less than zero
05:29 - and if it is then we're going to set a
05:31 - variable to say that the game is over
05:33 - and we can check if it is true when we
05:35 - start the next wave and it will stop
05:37 - that from happening
05:38 - so this is the main game loop so every
05:40 - new wave
05:41 - we're just looping through this massive
05:42 - table of waves here and then we're
05:44 - getting the
05:45 - number of zombies from this table here
05:47 - and then we're going to spawn
05:49 - each individual zombie over here and
05:52 - then we will just wait in this little
05:55 - loop to make sure that
05:56 - there are no zombies left if the enemies
05:58 - have all been defeated then we can move
06:00 - on to the next wave but if they haven't
06:02 - then the game is over but if we get to
06:05 - the
06:06 - end of the waves because we've only got
06:07 - eight waves so once we get to the end of
06:09 - the waves we finish this final one
06:11 - we're going to get to this part of the
06:12 - code and it's going to say if your base
06:14 - health is still above zero
06:16 - then you win the game and we can fire a
06:18 - little event which will show
06:19 - something on the screen to say
06:20 - congratulations you win now let me show
06:22 - you how i made the fighters which you
06:24 - can actually place down
06:25 - using your mouse so firstly i created a
06:27 - database
06:28 - which gives information about all of the
06:30 - different fighters which you can use
06:32 - so i just list them in this table each
06:35 - individual one
06:36 - it has a cost although it doesn't
06:37 - actually take that cost from your
06:39 - balance
06:39 - all of the the fighters are free at the
06:41 - minute but i was going to add that in a
06:43 - future update i didn't get around to it
06:45 - but i just put all of my fighters in
06:46 - here and i have a reference to where
06:48 - they're located in the game
06:50 - so in replicated storage i have all of
06:51 - my fighters in here
06:53 - and then i have a script in the starter
06:56 - gui which actually handles the placing
06:59 - of those fighters so we've got
07:02 - the gui which will load in all of those
07:05 - fighters when the player joins the game
07:07 - when this event is fired
07:08 - and then for each individual fighter
07:10 - when we click the fighter
07:12 - then we will have a mouse connection
07:14 - here which when you move the mouse
07:16 - it finds the c frame of where your mouse
07:19 - is
07:20 - on the floor so you'll get your mouse
07:22 - position and it will
07:24 - just do some calculations here to make
07:26 - sure that the fighter is placed on top
07:28 - of the floor
07:28 - and it will move the fighter around with
07:31 - your mouse and then when you click the
07:32 - mouse
07:33 - it's going to fire off to the server
07:35 - it's going to tell it to place the
07:36 - fighter down
07:37 - and then when the fighter is placed it's
07:39 - going to start attacking the zombies so
07:41 - just like
07:42 - the zombies had their own damage
07:44 - property each individual fighter can do
07:47 - different damage
07:48 - to to counter the zombies and that help
07:50 - to beat them
07:51 - then we've got some code over here which
07:53 - just changes the
07:54 - gui bar at the top every time your
07:57 - health changes
07:58 - and if it's if it's under 75 then it
08:00 - will change to amber if it's under 50
08:02 - it will go to orange and then obviously
08:04 - if you're low on health
08:05 - under 25 it will turn red and this code
08:08 - here
08:09 - just tweens it and if you lose the game
08:11 - it will say
08:12 - game over here is the object oriented
08:14 - code for the fighters
08:16 - so just like the enemies we create a
08:18 - function which
08:19 - individually will make the fighter and
08:22 - it will assign a level of damage
08:24 - it will create the character and
08:25 - position it and animate it
08:27 - i created an animation which i load into
08:30 - the
08:30 - the fighter so it looks like it's
08:32 - holding the gun and firing the gun
08:34 - and then i have a function which
08:37 - actually
08:38 - attacks an individual enemy so what
08:40 - we'll do is we find
08:42 - the closest zombie to the fighter
08:44 - because we want to attack the one that's
08:46 - closest to that fighter
08:47 - so that's why you've got to be tactical
08:49 - in where you place them you place them
08:51 - near the start then
08:52 - you're going to be attacking the the the
08:54 - zombies as they come
08:55 - out of the spawn so this function here
08:58 - will find the closest enemy
09:00 - to that fighter it will return it and
09:02 - then we have another function which we
09:04 - use to attack it
09:06 - and to damage it and i was actually
09:09 - going to create some more
09:10 - uh functions which find the the most
09:13 - powerful
09:13 - zombie so you could attack just the most
09:15 - powerful one and it's all about tactics
09:18 - so
09:18 - in a tower defense game you've got to be
09:20 - tactical in where you place them and
09:21 - which
09:22 - zombies you decide to attack then we
09:24 - also have some values in replicated
09:26 - storage which i update on the server
09:28 - just so that we can tell the clients the
09:30 - health of the base
09:31 - uh what current wave we're in etc so you
09:34 - can easily access that from guis
09:36 - but that's pretty much it and this is
09:38 - just kind of a great example of why you
09:40 - should use object oriented programming
09:42 - in certain projects not every single
09:44 - project but it allows you
09:46 - to have individual classes for things so
09:49 - you have a class for your fighters and a
09:51 - class for your enemies
09:52 - and you can track individual enemies
09:54 - which you spawn
09:55 - and keep them all in in one place so you
09:57 - know all of the fighters that you have
09:59 - spawned it's just a great way to
10:00 - organize your code
10:02 - so hopefully this gives you an insight
10:03 - into how a tower defense game works
10:05 - and let me know if you want to see a
10:07 - tutorial series on this i can't promise
10:08 - anything
10:09 - but i'll definitely look into making a
10:11 - series on this i know it's a very
10:13 - popular topic so leave a like if you
10:15 - enjoyed it to let me know you want to
10:16 - see that
10:17 - drop a comment if you have any questions
10:18 - or anything you want me to answer
10:20 - and i'll see you in the next video don't
10:22 - forget to subscribe turn on your
10:23 - notification bell
10:24 - and i'll see you in the next video
10:26 - thanks for watching i'll also leave a
10:28 - link to this
10:28 - game as well in the description so you
10:30 - can go check it out for yourself so
10:32 - thanks for watching guys i'll see you
10:33 - next time cheers

Cleaned transcript:

okay so last year in january 2020 i created this tower defense simulator game completely from scratch but i didn't do anything with it i was planning to either release it as a game and i was just making it for fun or maybe even as a tutorial and i was kind of just left it to sit in my roblox account doing nothing i thought it would be great to do a video showing how i made this game so you can see how they work and maybe in the future i'll do a tutorial series on how to recreate this so let me show you how the game works let's just go and load in here so if you haven't played tower defense simulator the aim is that you get waves of zombies here and you have to place down fighters to kill them so if i place down my little fighter over here he's going to start shooting the zombies and hopefully the wave will be cleared and if we do let any zombies get over here to our little bank area this is kind of like our our city i guess we don't want them to get over here because our health of our city will start to be destroyed and we'll lose the game so you have to place down these fighters and they will attack the zombies you can see we're already starting to lose a bit of health there so i'm just going to place down a load of fighters because every new wave which appears brings tougher zombies more zombies faster zombies etc so we've got two zombie types in the game they're just default npcs for now but you can definitely customize them you can have all sorts of different maps i've only got one map here and this is basically it this is the game once you get to maybe wave 9 or 10 the zombies will be very fast they'll come in hordes of very very powerful zombies you'll get bosses which eventually you will need a lot of fighters in order to defeat them but the game isn't too advanced i mean you usually in a tower defense game you have to actually pay money to spawn these fighters but i can have as many as i want here so let's just go and spawn a load and i'll come back to you when when i've got a massive army of them all right i'm nearly dead over here so we need to get a load of new units in over here before the next wave of zombies arrive because this is going to be a very powerful wave i think if we let any zombies get to the end here we're going to be dead here we go here come the zombies and yeah they're way too powerful for us and we were defeated game over but you can see how the game works it's working pretty well we've got the the zombies moving along the path and i'm happy with it so let me dive in and show you how this game works so first of all i created my zombies and i put them in this folder and i created a module which uses object oriented programming so i can create a function which spawns a zombie and sets up the zombie with their character gives them a specific name and sets their properties such as their health etc and then what i do is i spawn the zombie and move them to the spawn point which is actually over here now if we have a look at this invisible part you can see i've got my paths here so i've got path one path two a three four five six they're all numbered and each path has a starting node well we have a starting node for this this first path and we have an end node over here so i'm telling those i'm making two positions where you can form a straight line for the zombies to walk on so the zombie is going to spawn over here and they're going to walk to the end node and when they get to this node here they're going to move to this one and then they're going to move to this one so you can see how they they move across the path over here to get to the exit so what we do is we have our enemy module here which spawns a zombie and then we have this move function which loops through all of those paths those numbered paths and it will move the npc the the enemy to the end node's position and then we'll wait until they get to that position and then we'll go again to the next one and eventually when they get over here to the finish line we will detect when they get to the final node and when they do we'll subtract some health off our bases total over here so when they break out of this for loop they must have got to the end of the path so we'll see okay is the base still alive have we still got some health and if we have we're going to damage it by a certain amount that the zombie damages and that's why i decided to use object oriented programming because we can set different damage values for different uh zombies so we could have a dumb zombie which only does 100 damage or you could have a super boss zombie which does a hundred thousand damage and so by saying self dot damage i can access that damage property which is assigned to each individual zombie and if we go over to our other script here you can see in the main script i've actually got a massive dictionary table of the different waves so we've got wave one and in the first wave i'm going to spawn two dumb zombies they're going to have a delay of two seconds in releasing them and they're going to have four walk speed and the damage they're going to give is 250 so each time they get to the end it's going to take 250 off our total but you can see as we progress down to wave 2 wave 3 wave 4 wave five six seven and eight you can see in wave seven they do thirty thousand damage so that's why towards the end of when i was playing the game they were doing more damage to my base and then we have a little event over here which detects when the base's health changes and when that does we just we just will check to see if it's less than zero and if it is then we're going to set a variable to say that the game is over and we can check if it is true when we start the next wave and it will stop that from happening so this is the main game loop so every new wave we're just looping through this massive table of waves here and then we're getting the number of zombies from this table here and then we're going to spawn each individual zombie over here and then we will just wait in this little loop to make sure that there are no zombies left if the enemies have all been defeated then we can move on to the next wave but if they haven't then the game is over but if we get to the end of the waves because we've only got eight waves so once we get to the end of the waves we finish this final one we're going to get to this part of the code and it's going to say if your base health is still above zero then you win the game and we can fire a little event which will show something on the screen to say congratulations you win now let me show you how i made the fighters which you can actually place down using your mouse so firstly i created a database which gives information about all of the different fighters which you can use so i just list them in this table each individual one it has a cost although it doesn't actually take that cost from your balance all of the the fighters are free at the minute but i was going to add that in a future update i didn't get around to it but i just put all of my fighters in here and i have a reference to where they're located in the game so in replicated storage i have all of my fighters in here and then i have a script in the starter gui which actually handles the placing of those fighters so we've got the gui which will load in all of those fighters when the player joins the game when this event is fired and then for each individual fighter when we click the fighter then we will have a mouse connection here which when you move the mouse it finds the c frame of where your mouse is on the floor so you'll get your mouse position and it will just do some calculations here to make sure that the fighter is placed on top of the floor and it will move the fighter around with your mouse and then when you click the mouse it's going to fire off to the server it's going to tell it to place the fighter down and then when the fighter is placed it's going to start attacking the zombies so just like the zombies had their own damage property each individual fighter can do different damage to to counter the zombies and that help to beat them then we've got some code over here which just changes the gui bar at the top every time your health changes and if it's if it's under 75 then it will change to amber if it's under 50 it will go to orange and then obviously if you're low on health under 25 it will turn red and this code here just tweens it and if you lose the game it will say game over here is the object oriented code for the fighters so just like the enemies we create a function which individually will make the fighter and it will assign a level of damage it will create the character and position it and animate it i created an animation which i load into the the fighter so it looks like it's holding the gun and firing the gun and then i have a function which actually attacks an individual enemy so what we'll do is we find the closest zombie to the fighter because we want to attack the one that's closest to that fighter so that's why you've got to be tactical in where you place them you place them near the start then you're going to be attacking the the the zombies as they come out of the spawn so this function here will find the closest enemy to that fighter it will return it and then we have another function which we use to attack it and to damage it and i was actually going to create some more uh functions which find the the most powerful zombie so you could attack just the most powerful one and it's all about tactics so in a tower defense game you've got to be tactical in where you place them and which zombies you decide to attack then we also have some values in replicated storage which i update on the server just so that we can tell the clients the health of the base uh what current wave we're in etc so you can easily access that from guis but that's pretty much it and this is just kind of a great example of why you should use object oriented programming in certain projects not every single project but it allows you to have individual classes for things so you have a class for your fighters and a class for your enemies and you can track individual enemies which you spawn and keep them all in in one place so you know all of the fighters that you have spawned it's just a great way to organize your code so hopefully this gives you an insight into how a tower defense game works and let me know if you want to see a tutorial series on this i can't promise anything but i'll definitely look into making a series on this i know it's a very popular topic so leave a like if you enjoyed it to let me know you want to see that drop a comment if you have any questions or anything you want me to answer and i'll see you in the next video don't forget to subscribe turn on your notification bell and i'll see you in the next video thanks for watching i'll also leave a link to this game as well in the description so you can go check it out for yourself so thanks for watching guys i'll see you next time cheers
