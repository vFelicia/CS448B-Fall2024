With timestamps:

00:01 - learning scripting on roblox can be
00:03 - difficult so i decided to ask some of
00:05 - the best roblox developers out there
00:07 - what they did when learning to script
00:09 - and whether they have any tips for
00:11 - upcoming developers
00:12 - as well as this i recently did a survey
00:14 - where i asked a hundred developers about
00:16 - how they learned to script
00:17 - and i'll show you the results later on
00:19 - in the video firstly we're gonna hear
00:21 - from both bomber he's a former roblox
00:24 - intern
00:24 - and he was on the winning team of the
00:26 - rdc game jam
00:28 - 2020 like most people
00:31 - i got started by analyzing and tinkering
00:33 - with free models in open source code
00:35 - once i had a little bit of knowledge i
00:36 - would just try making things
00:39 - i'd pick something i wanted to make and
00:41 - get started
00:42 - and i got stuck a lot and when i did i
00:44 - would google the specific error message
00:47 - mathematical question api or whatever
00:50 - and by doing so i wouldn't just be
00:52 - blindly following a tutorial
00:54 - on how to do this how to do that i was
00:57 - learning the
00:58 - guts and what made these programs tick
01:01 - and
01:01 - understanding it so that i would be able
01:03 - to use that knowledge in other
01:05 - applications and as time went on i got
01:08 - stuck less and less often until i
01:10 - crossed the line of
01:11 - knowing how to script something i want
01:14 - to pick up on which bomb i spoke about
01:16 - is that it's important to learn the code
01:18 - instead of just learning how to make
01:19 - something since learning the code and
01:21 - understanding what elements of code do
01:23 - will allow you to create things yourself
01:25 - and will make you able to visualize
01:27 - projects in your head lots of people
01:30 - struggle to plan
01:31 - scripts out because they don't fully
01:32 - understand the code basics
01:34 - and they don't know where or why
01:35 - elements of code should be used
01:37 - picking apart free models and open
01:39 - source code helps you understand why a
01:41 - developer has chosen to use code in
01:43 - their scripts
01:44 - because you get to see the decisions
01:45 - that they've made and this is a great
01:47 - way to learn
01:48 - if you're ever struggling to understand
01:50 - where you'd use some code
01:51 - always ask for help whether it's on the
01:53 - forums or just by asking a friend
01:55 - because you'll be able to see a
01:57 - practical example of where this code is
01:59 - used
02:00 - so thanks to both bummer for sharing his
02:01 - story you can check out his game
02:03 - lua learning on roblox is a great
02:05 - resource for learning to script
02:07 - i'll leave a link in the description
02:10 - next we're going to hear from wesley
02:11 - he created roblox deathrun which has
02:14 - nearly 300 million visits
02:16 - and has been on roadblocks since 2008
02:18 - he's also been a roblox intern
02:20 - so over to you when i started out on
02:24 - roblox the first game that i wanted to
02:25 - make was a hide-and-seek game
02:27 - i had played a few that were popular at
02:29 - the time and i thought it would be quite
02:31 - fun to make my own twist
02:32 - with my own map and be able to build it
02:34 - myself but at the time i had
02:36 - no clue how to script it so the first
02:38 - step that i did is i went out looking
02:40 - for
02:41 - things that i could learn from so i went
02:42 - to the three models i found mini game
02:44 - scripts hide and seek scripts anything
02:46 - that i thought
02:47 - would be remotely similar to what i was
02:49 - looking for
02:50 - now with this it was not my intention to
02:53 - just take a script
02:54 - and use that as it was i actually wanted
02:56 - to learn from it
02:58 - and essentially piece together my own
03:00 - game script
03:01 - from all of these other scripts that i
03:03 - found so the first step
03:05 - was to actually start reading through
03:07 - every single script line by line word by
03:09 - word
03:09 - make sure that i understand every single
03:11 - thing that it did
03:12 - and my number one resource for that was
03:15 - the roblox wiki which nowadays is the
03:17 - developer
03:18 - hub and essentially just looking for the
03:19 - api reference for every single thing
03:21 - that i did not understand
03:23 - it was a very tedious process but while
03:25 - doing that i actually
03:27 - got quite a good hang of what every
03:29 - single bit of code did
03:30 - and i think later that week i was able
03:33 - to take the best pieces of code from
03:34 - each script
03:35 - i understood how to tie up all the
03:37 - variables together
03:38 - and in the next week i had a working
03:40 - height in c game
03:42 - it wasn't perfect but it worked now the
03:44 - reason why i wanted to tell you that
03:45 - story
03:46 - is because i still use this same
03:47 - approach today
03:49 - whenever i want to do something that i
03:51 - haven't yet done
03:52 - or i want to work with a new api or want
03:55 - to do anything that i haven't had
03:57 - experience with
03:58 - the first thing that i do is i'll look
04:00 - up a practical example of someone else
04:02 - who has done it
04:02 - to see how they implemented it to see
04:05 - the types of decisions that they made
04:07 - when working with that feature or
04:09 - mechanic and with that approach you get
04:12 - a lot more experience and you really
04:14 - start to understand
04:15 - a feature or mechanic or a new api a lot
04:18 - better than if you were to just read
04:20 - through the api documentation
04:22 - by looking at what someone else has done
04:24 - with a piece of code or a certain
04:25 - mechanic
04:26 - you already get a good idea of how this
04:28 - can be used
04:29 - in a game or in a script or wherever you
04:32 - want to apply it
04:33 - and if you're watching alvin's videos
04:34 - you're already applying this on a daily
04:36 - basis
04:37 - because you're seeing someone else work
04:39 - with the code you're seeing someone else
04:41 - work with the feature
04:42 - and then after you've seen it you go and
04:44 - try it yourself already having seen what
04:46 - it can do
04:47 - just really sets you up for success and
04:49 - really helps you to understand
04:50 - how this can benefit your own work in
04:52 - your own games and at that point
04:54 - if you come across a piece of code or a
04:56 - snippet that you don't know how to work
04:57 - with you at least have a better idea of
04:59 - what you want that snippet to do
05:01 - so when you go look it up on the
05:02 - developer hub or the api reference
05:05 - it's a lot easier to understand it
05:06 - because you have a much bigger sense of
05:08 - context so that's how i started 10 years
05:11 - ago
05:11 - and it's still the same approach that i
05:13 - use today and i hope it also helps you
05:15 - to get a much better understanding of
05:16 - your code as you're writing it
05:18 - even when you're working with things you
05:19 - haven't worked with before thanks wesley
05:22 - you can find wesley on twitter at wesley
05:24 - rblx i'll leave a link in the
05:26 - description
05:27 - did you notice that he said he started
05:29 - making roblox games for fun
05:31 - back then there was no devx the only
05:33 - incentive was to earn roe bucks to buy
05:35 - hats and items
05:36 - and so most developers were just
05:38 - creating games as a hobby
05:39 - my advice to you would be to treat
05:41 - roblox development as a hobby as you get
05:43 - started
05:44 - and make small projects which you find
05:46 - fun because learning scripting shouldn't
05:48 - be a chore
05:49 - it should be something you enjoy okay
05:52 - so earlier in the video i told you about
05:54 - a survey that i did of 100 roblox
05:56 - developers
05:57 - so i asked them what they did when
05:58 - learning to script and what the best
06:00 - resource they used was
06:02 - 65 of the developers used free models to
06:05 - pick apart
06:06 - code inside and 58 actively made small
06:10 - projects to help build on their
06:11 - knowledge
06:12 - many of the respondents mentioned how
06:14 - they used tutorials and the roblox wiki
06:17 - which is now called the dev hub to gain
06:19 - initial basic knowledge
06:20 - and once they had that knowledge they
06:22 - began to start making basic games
06:24 - and they'd go online to ask for help
06:26 - whenever they got stuck
06:28 - a good quote which i'd like to mention
06:30 - is that your first game may be awful
06:32 - but you can't make your 50th game
06:34 - without making your first
06:36 - so as bad as that first one might be you
06:38 - can always improve on what you didn't do
06:40 - well at
06:41 - in the future finally let's hear from am
06:44 - also known as mister a former roblox
06:47 - accelerator
06:47 - intern and developer of my droplets she
06:50 - also recently began posting
06:52 - roblox development videos on her youtube
06:54 - channel and i'll leave a link to that in
06:56 - the description if you want to check it
06:57 - out
06:58 - when you have an idea that you want to
07:02 - script
07:02 - try to break it down into the smallest
07:05 - bits and pieces
07:06 - as much as you can and look up how to do
07:09 - those individual things
07:11 - if you're trying to do something math
07:12 - related try to figure out
07:15 - what exactly you're trying to calculate
07:19 - look up if anybody else has already
07:21 - solved it that helps for one thing
07:24 - if you want to make a menu look up how
07:27 - to
07:28 - manipulate a button on roblox look up
07:30 - how to
07:32 - use user input service that kind of
07:34 - stuff just look up
07:35 - small bits and pieces of the whole idea
07:37 - that you have
07:38 - and try to figure out how to do those
07:41 - pieces whether it's taking code from
07:43 - other people and putting into your game
07:44 - and manipulating it or
07:46 - starting completely from scratch and
07:48 - just looking up each individual piece
07:50 - that you want to make
07:50 - sometimes it can be hard because
07:52 - searching for keywords can be difficult
07:55 - but usually even today i just look up
07:57 - the exact thing that i want
07:59 - if nothing is coming up for this
08:00 - specific idea that you want you want to
08:02 - break it down further and simplify it
08:04 - uh so that you can explain it better to
08:07 - the internet
08:07 - eventually you will find some bit of
08:09 - code that in the end you can manipulate
08:12 - and figure out how it works
08:13 - and script exactly what you want and in
08:16 - that
08:17 - sense you're going to learn a lot from
08:19 - that experience and grow as a programmer
08:21 - so it's really helpful to just look up
08:23 - any kind of small ideas that you have
08:25 - sometimes people
08:26 - have like like if you've heard of
08:30 - uh inktober there's things for
08:31 - scriptures too
08:33 - i think it's called a coder advent
08:34 - calendar um you can look up that kind of
08:36 - stuff if you're
08:37 - lacking in ideas and kind of try your
08:40 - best to
08:41 - try these challenges and make these
08:43 - things that people want you to make
08:44 - that can also be pretty fun so that's
08:46 - another way for you to get small
08:48 - projects but really the goal here
08:50 - is just to apply what you learn as much
08:53 - as you can
08:54 - through different small projects that
08:55 - you create
08:57 - that's how i personally was able to get
08:59 - really far as a programmer
09:00 - because i had ideas that i actually
09:02 - wanted to implement and i was passionate
09:03 - about them and so it was really
09:04 - motivating for me to
09:06 - actually like see my work coming to life
09:10 - and happening
09:10 - so yeah just try to apply everything
09:14 - you can as often as you can
09:17 - another great reason why you should
09:18 - create smaller projects as an said is so
09:20 - you can see the progress that you're
09:22 - making
09:22 - which will help you to stay motivated in
09:24 - the long term personally when i was a
09:26 - beginner scripter i tried to make huge
09:28 - games which even now
09:30 - would take me months to do since they're
09:31 - so complex and it would just totally
09:33 - knock my motivation as i soon realized
09:35 - it was too much for me to do back then
09:38 - a big thanks to boat bomber wesley and
09:40 - mister for featuring in the video
09:42 - all of the links to their social
09:43 - channels will be in the description
09:45 - smash a like on the video as you're
09:46 - leaving if you enjoyed it subscribe for
09:48 - more content by clicking on my logo on
09:50 - the screen now
09:51 - anne's logo is also on screen so click
09:53 - that to subscribe to her
09:55 - and check out my old video where i
09:56 - played my old roblox games by clicking
09:58 - on the thumbnail
09:59 - thanks for watching i'll see you next
10:01 - time

Cleaned transcript:

learning scripting on roblox can be difficult so i decided to ask some of the best roblox developers out there what they did when learning to script and whether they have any tips for upcoming developers as well as this i recently did a survey where i asked a hundred developers about how they learned to script and i'll show you the results later on in the video firstly we're gonna hear from both bomber he's a former roblox intern and he was on the winning team of the rdc game jam 2020 like most people i got started by analyzing and tinkering with free models in open source code once i had a little bit of knowledge i would just try making things i'd pick something i wanted to make and get started and i got stuck a lot and when i did i would google the specific error message mathematical question api or whatever and by doing so i wouldn't just be blindly following a tutorial on how to do this how to do that i was learning the guts and what made these programs tick and understanding it so that i would be able to use that knowledge in other applications and as time went on i got stuck less and less often until i crossed the line of knowing how to script something i want to pick up on which bomb i spoke about is that it's important to learn the code instead of just learning how to make something since learning the code and understanding what elements of code do will allow you to create things yourself and will make you able to visualize projects in your head lots of people struggle to plan scripts out because they don't fully understand the code basics and they don't know where or why elements of code should be used picking apart free models and open source code helps you understand why a developer has chosen to use code in their scripts because you get to see the decisions that they've made and this is a great way to learn if you're ever struggling to understand where you'd use some code always ask for help whether it's on the forums or just by asking a friend because you'll be able to see a practical example of where this code is used so thanks to both bummer for sharing his story you can check out his game lua learning on roblox is a great resource for learning to script i'll leave a link in the description next we're going to hear from wesley he created roblox deathrun which has nearly 300 million visits and has been on roadblocks since 2008 he's also been a roblox intern so over to you when i started out on roblox the first game that i wanted to make was a hideandseek game i had played a few that were popular at the time and i thought it would be quite fun to make my own twist with my own map and be able to build it myself but at the time i had no clue how to script it so the first step that i did is i went out looking for things that i could learn from so i went to the three models i found mini game scripts hide and seek scripts anything that i thought would be remotely similar to what i was looking for now with this it was not my intention to just take a script and use that as it was i actually wanted to learn from it and essentially piece together my own game script from all of these other scripts that i found so the first step was to actually start reading through every single script line by line word by word make sure that i understand every single thing that it did and my number one resource for that was the roblox wiki which nowadays is the developer hub and essentially just looking for the api reference for every single thing that i did not understand it was a very tedious process but while doing that i actually got quite a good hang of what every single bit of code did and i think later that week i was able to take the best pieces of code from each script i understood how to tie up all the variables together and in the next week i had a working height in c game it wasn't perfect but it worked now the reason why i wanted to tell you that story is because i still use this same approach today whenever i want to do something that i haven't yet done or i want to work with a new api or want to do anything that i haven't had experience with the first thing that i do is i'll look up a practical example of someone else who has done it to see how they implemented it to see the types of decisions that they made when working with that feature or mechanic and with that approach you get a lot more experience and you really start to understand a feature or mechanic or a new api a lot better than if you were to just read through the api documentation by looking at what someone else has done with a piece of code or a certain mechanic you already get a good idea of how this can be used in a game or in a script or wherever you want to apply it and if you're watching alvin's videos you're already applying this on a daily basis because you're seeing someone else work with the code you're seeing someone else work with the feature and then after you've seen it you go and try it yourself already having seen what it can do just really sets you up for success and really helps you to understand how this can benefit your own work in your own games and at that point if you come across a piece of code or a snippet that you don't know how to work with you at least have a better idea of what you want that snippet to do so when you go look it up on the developer hub or the api reference it's a lot easier to understand it because you have a much bigger sense of context so that's how i started 10 years ago and it's still the same approach that i use today and i hope it also helps you to get a much better understanding of your code as you're writing it even when you're working with things you haven't worked with before thanks wesley you can find wesley on twitter at wesley rblx i'll leave a link in the description did you notice that he said he started making roblox games for fun back then there was no devx the only incentive was to earn roe bucks to buy hats and items and so most developers were just creating games as a hobby my advice to you would be to treat roblox development as a hobby as you get started and make small projects which you find fun because learning scripting shouldn't be a chore it should be something you enjoy okay so earlier in the video i told you about a survey that i did of 100 roblox developers so i asked them what they did when learning to script and what the best resource they used was 65 of the developers used free models to pick apart code inside and 58 actively made small projects to help build on their knowledge many of the respondents mentioned how they used tutorials and the roblox wiki which is now called the dev hub to gain initial basic knowledge and once they had that knowledge they began to start making basic games and they'd go online to ask for help whenever they got stuck a good quote which i'd like to mention is that your first game may be awful but you can't make your 50th game without making your first so as bad as that first one might be you can always improve on what you didn't do well at in the future finally let's hear from am also known as mister a former roblox accelerator intern and developer of my droplets she also recently began posting roblox development videos on her youtube channel and i'll leave a link to that in the description if you want to check it out when you have an idea that you want to script try to break it down into the smallest bits and pieces as much as you can and look up how to do those individual things if you're trying to do something math related try to figure out what exactly you're trying to calculate look up if anybody else has already solved it that helps for one thing if you want to make a menu look up how to manipulate a button on roblox look up how to use user input service that kind of stuff just look up small bits and pieces of the whole idea that you have and try to figure out how to do those pieces whether it's taking code from other people and putting into your game and manipulating it or starting completely from scratch and just looking up each individual piece that you want to make sometimes it can be hard because searching for keywords can be difficult but usually even today i just look up the exact thing that i want if nothing is coming up for this specific idea that you want you want to break it down further and simplify it uh so that you can explain it better to the internet eventually you will find some bit of code that in the end you can manipulate and figure out how it works and script exactly what you want and in that sense you're going to learn a lot from that experience and grow as a programmer so it's really helpful to just look up any kind of small ideas that you have sometimes people have like like if you've heard of uh inktober there's things for scriptures too i think it's called a coder advent calendar um you can look up that kind of stuff if you're lacking in ideas and kind of try your best to try these challenges and make these things that people want you to make that can also be pretty fun so that's another way for you to get small projects but really the goal here is just to apply what you learn as much as you can through different small projects that you create that's how i personally was able to get really far as a programmer because i had ideas that i actually wanted to implement and i was passionate about them and so it was really motivating for me to actually like see my work coming to life and happening so yeah just try to apply everything you can as often as you can another great reason why you should create smaller projects as an said is so you can see the progress that you're making which will help you to stay motivated in the long term personally when i was a beginner scripter i tried to make huge games which even now would take me months to do since they're so complex and it would just totally knock my motivation as i soon realized it was too much for me to do back then a big thanks to boat bomber wesley and mister for featuring in the video all of the links to their social channels will be in the description smash a like on the video as you're leaving if you enjoyed it subscribe for more content by clicking on my logo on the screen now anne's logo is also on screen so click that to subscribe to her and check out my old video where i played my old roblox games by clicking on the thumbnail thanks for watching i'll see you next time
