With timestamps:

00:00 - hello welcome to the fifth video in my
00:02 - roblox scripting series today we're
00:04 - going to be looking at instancing in the
00:07 - previous video we learned about
00:08 - variables I recommend you go check out
00:10 - before you watch this one else it won't
00:13 - make much sense so we're gonna jump
00:15 - straight in so instancing allows you to
00:18 - insert things into your game from a
00:21 - script now we can insert things such as
00:24 - a part by just clicking on this button
00:26 - or by going to model advanced object and
00:30 - selecting something here but what if you
00:32 - want to insert something at a specific
00:34 - time or you know something that we want
00:37 - to use later on we will use a script for
00:39 - that so let's insert a script into
00:43 - service script service and I'm gonna
00:45 - show you how to insert things from a
00:48 - script so what we're going to do to
00:51 - insert something into the game is we're
00:53 - going to use instance okay so when you
00:55 - say instance that just means like
00:58 - objects in roblox and then we want to
01:02 - say we want to insert and one of these
01:04 - so we say instance don't you okay and
01:06 - you can see here it says create a new
01:09 - object of type Val so Val is going to be
01:14 - the object that we want to insert so we
01:16 - say instance new and then we do a pair
01:19 - of brackets or parentheses and after the
01:21 - new and then inside these brackets we
01:24 - write the name of the objects you want
01:27 - to insert so a full list of the objects
01:29 - you can insert can be found by going to
01:31 - model advanced objects and then you just
01:33 - find the thing you want to insert so
01:36 - we're going to insert a part if we go to
01:38 - P there it is in fact let's just search
01:42 - for a part that's what we're going to
01:44 - insert so you can insert any of those so
01:47 - in speech marks we just write part okay
01:49 - and it auto fills here so once you've
01:52 - done that that will insert the object
01:55 - into your game now if we run here you
02:00 - will see that nothing happens okay and
02:02 - that is because we haven't told the
02:04 - script where we want to put this okay so
02:06 - as I've said before if you want to
02:09 - insert something that can be seen you
02:10 - put it in the workspace as that
02:12 - where everything that we see in the game
02:14 - world gets rendered so we need to tell
02:18 - the script where to put this part so
02:21 - there are two ways to do this the first
02:23 - way is to just put a comma after the
02:26 - name of the thing you want to insert and
02:28 - then you write the path of where you
02:30 - want to put it okay so if I want to put
02:32 - it in workspace I can just say comma
02:34 - game dot workspace and if we run the
02:37 - game this is going to insert the part in
02:40 - the workspace there it is yeah there we
02:43 - go it got inserted so we've told the
02:48 - script to what we want to insert and
02:50 - where it's going to be placed in the
02:52 - workspace but we can't actually give it
02:55 - any more information right now the only
02:57 - things we can tell it is it what its
03:00 - gonna be and where it's gonna go there
03:02 - are the only two things we can pass to
03:04 - an instance got a new function so what
03:07 - if you wanted to give us some properties
03:09 - maybe like you know give it some color
03:11 - maybe change its anchored property we
03:14 - need to change these properties for
03:17 - something we want to instance maybe we
03:19 - want to put it in a certain location
03:20 - change its size etc so to do this we're
03:24 - gonna take this instance new calling of
03:28 - this inbuilt function and we're gonna
03:31 - set it to a variable so let's just say
03:34 - local and we're gonna give our variable
03:36 - a name so we can call it my part you can
03:39 - call it whatever you want and we're
03:41 - gonna make it equal to this instance new
03:44 - because when we call instance new here
03:46 - what it's actually doing is creating
03:48 - this part and basically it's returning
03:50 - the part that was created to this
03:53 - variable so my the the variable my part
03:56 - is now equal to the part which we just
03:59 - inserted now now that we've in now that
04:03 - we've made it a variable we can change
04:06 - the properties of this part so think of
04:08 - my part as just being the part that we
04:10 - just inserted we can now change all of
04:13 - the properties that a part has so we
04:16 - could say for example change its
04:18 - transparency and we could set up to not
04:20 - 0.5
04:22 - say my part or anchored he comes true
04:25 - okay we could even set its position so
04:28 - I'm not sure if we've covered
04:30 - positioning things yet with vector3 but
04:32 - you can set its position like this and
04:35 - you can put it in a certain place so we
04:37 - could say five five five and that will
04:39 - put it in that location so now if we run
04:43 - the game again and we wait for it to
04:46 - load the part should be crated but it
04:49 - should have these properties assigned to
04:50 - it as well so there we go the part was
04:53 - created it's five studs off the ground
04:55 - in its position as you can see there we
04:57 - go it's also anchored and the
05:01 - transparency is set to more point five
05:02 - so you can change properties of the
05:04 - thing that you insert as long as you
05:08 - make it a variable now last part of this
05:10 - video I told you about this second while
05:15 - actually telling the script where to put
05:17 - this this this objects by using the
05:20 - second argument in this function of
05:23 - games at workspace now this is actually
05:25 - bad practice and you shouldn't tell the
05:27 - script where you want the object to go
05:29 - until you've defined all of these
05:31 - properties because basically it's just
05:34 - less efficient to fool the scripts to
05:37 - put it in the workspace and then change
05:40 - its properties so the best practice is
05:42 - to actually get rid of this and just
05:44 - instance it like that and only provide
05:46 - to the instance function the name of the
05:49 - object that you're going to insert and
05:51 - then once you've applied all of these
05:52 - properties then you can say my parts dot
05:56 - parent equals game dot workspace now you
06:00 - need to tell the scripts where it's
06:03 - going to go else nothing is going to be
06:05 - instance instance well it is but you're
06:09 - not gonna see it because tweak if we get
06:11 - rid of the parent the script has created
06:13 - it but it hasn't actually placed it
06:15 - anywhere so there is no path so where
06:18 - you have to say my part dot parent and
06:21 - we can tell it where we want it to go
06:22 - and that could be anywhere it could be
06:24 - workspace it could be server storage but
06:26 - we're gonna insert it into game data
06:28 - workspace and if we won the game there
06:30 - we go
06:30 - so for best practice put that parent
06:33 - right at the end once
06:34 - you have to find all of your properties
06:37 - so that was how you instant things in
06:39 - roblox studio I hope you like this video
06:41 - it was a short one and I haven't done
06:43 - any of these beginner videos for a while
06:45 - and sorry about that but they will be
06:47 - coming back again soon so if you enjoyed
06:49 - it make sure to subscribe make sure to
06:51 - click the like button share it with
06:53 - anybody else and leave a comment if you
06:55 - have any questions thanks for watching
06:57 - and I'll see you in the next one

Cleaned transcript:

hello welcome to the fifth video in my roblox scripting series today we're going to be looking at instancing in the previous video we learned about variables I recommend you go check out before you watch this one else it won't make much sense so we're gonna jump straight in so instancing allows you to insert things into your game from a script now we can insert things such as a part by just clicking on this button or by going to model advanced object and selecting something here but what if you want to insert something at a specific time or you know something that we want to use later on we will use a script for that so let's insert a script into service script service and I'm gonna show you how to insert things from a script so what we're going to do to insert something into the game is we're going to use instance okay so when you say instance that just means like objects in roblox and then we want to say we want to insert and one of these so we say instance don't you okay and you can see here it says create a new object of type Val so Val is going to be the object that we want to insert so we say instance new and then we do a pair of brackets or parentheses and after the new and then inside these brackets we write the name of the objects you want to insert so a full list of the objects you can insert can be found by going to model advanced objects and then you just find the thing you want to insert so we're going to insert a part if we go to P there it is in fact let's just search for a part that's what we're going to insert so you can insert any of those so in speech marks we just write part okay and it auto fills here so once you've done that that will insert the object into your game now if we run here you will see that nothing happens okay and that is because we haven't told the script where we want to put this okay so as I've said before if you want to insert something that can be seen you put it in the workspace as that where everything that we see in the game world gets rendered so we need to tell the script where to put this part so there are two ways to do this the first way is to just put a comma after the name of the thing you want to insert and then you write the path of where you want to put it okay so if I want to put it in workspace I can just say comma game dot workspace and if we run the game this is going to insert the part in the workspace there it is yeah there we go it got inserted so we've told the script to what we want to insert and where it's going to be placed in the workspace but we can't actually give it any more information right now the only things we can tell it is it what its gonna be and where it's gonna go there are the only two things we can pass to an instance got a new function so what if you wanted to give us some properties maybe like you know give it some color maybe change its anchored property we need to change these properties for something we want to instance maybe we want to put it in a certain location change its size etc so to do this we're gonna take this instance new calling of this inbuilt function and we're gonna set it to a variable so let's just say local and we're gonna give our variable a name so we can call it my part you can call it whatever you want and we're gonna make it equal to this instance new because when we call instance new here what it's actually doing is creating this part and basically it's returning the part that was created to this variable so my the the variable my part is now equal to the part which we just inserted now now that we've in now that we've made it a variable we can change the properties of this part so think of my part as just being the part that we just inserted we can now change all of the properties that a part has so we could say for example change its transparency and we could set up to not 0.5 say my part or anchored he comes true okay we could even set its position so I'm not sure if we've covered positioning things yet with vector3 but you can set its position like this and you can put it in a certain place so we could say five five five and that will put it in that location so now if we run the game again and we wait for it to load the part should be crated but it should have these properties assigned to it as well so there we go the part was created it's five studs off the ground in its position as you can see there we go it's also anchored and the transparency is set to more point five so you can change properties of the thing that you insert as long as you make it a variable now last part of this video I told you about this second while actually telling the script where to put this this this objects by using the second argument in this function of games at workspace now this is actually bad practice and you shouldn't tell the script where you want the object to go until you've defined all of these properties because basically it's just less efficient to fool the scripts to put it in the workspace and then change its properties so the best practice is to actually get rid of this and just instance it like that and only provide to the instance function the name of the object that you're going to insert and then once you've applied all of these properties then you can say my parts dot parent equals game dot workspace now you need to tell the scripts where it's going to go else nothing is going to be instance instance well it is but you're not gonna see it because tweak if we get rid of the parent the script has created it but it hasn't actually placed it anywhere so there is no path so where you have to say my part dot parent and we can tell it where we want it to go and that could be anywhere it could be workspace it could be server storage but we're gonna insert it into game data workspace and if we won the game there we go so for best practice put that parent right at the end once you have to find all of your properties so that was how you instant things in roblox studio I hope you like this video it was a short one and I haven't done any of these beginner videos for a while and sorry about that but they will be coming back again soon so if you enjoyed it make sure to subscribe make sure to click the like button share it with anybody else and leave a comment if you have any questions thanks for watching and I'll see you in the next one
