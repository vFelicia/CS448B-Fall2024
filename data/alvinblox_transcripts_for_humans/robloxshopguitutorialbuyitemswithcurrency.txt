With timestamps:

00:00 - in this video I'm going to be showing
00:01 - you how to create a GUI shop which will
00:04 - allow players in your game to buy
00:06 - virtual items let's get started welcome
00:11 - back to another video my name's Alvin
00:12 - blocks and today it wouldn't be creating
00:14 - this GUI which will allow players to buy
00:18 - items in your game with virtual currency
00:20 - now my last video I taught you how to
00:23 - create a currency system which saves and
00:26 - which will allow you to buy stuff and
00:27 - today we're making a shop which will
00:29 - allow you to spend that currency so the
00:32 - first thing that we're going to do is
00:34 - we're going to make sure that we've got
00:35 - this GUI in our game so I've already
00:38 - made the GUI now if you want to make
00:39 - your own GUI and also want to use this
00:41 - script you're gonna have to make it look
00:43 - the same as mine okay so it's gonna have
00:46 - to have a main frame item description
00:48 - it's gonna have to look like this but if
00:50 - you want to take this GUI you just need
00:52 - to go to the description of this video
00:54 - and there'll be a link to the model you
00:56 - need to take that model then go to the
00:58 - toolbox and it should be in your models
01:01 - you just click my models you'll be able
01:03 - to drag it in and place them into these
01:06 - start at GUI so we're going to just
01:09 - script this GUI today we're going to
01:11 - Swift it so that it shows the item
01:13 - you've currently selected and then we're
01:15 - going to get some information about the
01:16 - item and show it on the right here and
01:18 - then whenever you click the buy button
01:20 - we're gonna make a request to see if you
01:22 - have enough money to buy the item and if
01:24 - you do we will give the player or you
01:27 - the the item well to get started you can
01:30 - see we have two frames we have item
01:32 - description and a list inside of this
01:35 - main frame and the list is where all of
01:37 - our items are going to go so each item
01:40 - is going to be an image button and the
01:41 - name of that image button is going to be
01:43 - the name of your gear okay so if you're
01:45 - wanting to give a sword the name of your
01:47 - image button would be sword the same as
01:49 - your tool on the item description we
01:52 - have a Buy button we also have an image
01:54 - label which is going to be the selected
01:56 - image and then inside that image label
01:58 - we've got a text label and that's going
02:00 - to display how much these selected item
02:02 - costs and this far you hear selected
02:04 - item will change whenever we click one
02:07 - of these image wear buttons so we're
02:09 - going to start by coding
02:11 - I leaderboard scripts if your game
02:13 - curtain does not have a leaderboard I'm
02:15 - just going to quickly add one to our
02:16 - game so we're going to insert a script
02:18 - into service script service and we're
02:20 - just going to want to get a a normal
02:22 - leaderboard script and it looks like
02:25 - this okay you should know how to do
02:29 - leaderboards if you have watched my
02:32 - tutorials before or you're getting into
02:33 - monetization it's very simple when a
02:36 - player enters the game we add a folder
02:38 - who leader starts and inside of that we
02:39 - put some currency called points you just
02:42 - want to change points to the name of
02:43 - your currency so if it was called cash
02:45 - you change this to cash for example but
02:47 - we're gonna keep at points for today in
02:49 - our shop and there we go that as our
02:51 - leaderboard done I'm just gonna call
02:53 - this script the server handler so we're
02:55 - gonna put all of our service scripts in
02:57 - this in this one big script here and
02:59 - we're going to get started then by
03:01 - coding our image buttons here so that we
03:05 - can show the selected year on the right
03:06 - so to do that we're gonna have to insert
03:08 - a local script into our first gun which
03:10 - is called hyper and also we also need to
03:15 - insert into the server storage a folder
03:18 - called shop items
03:22 - just like that and you need to make sure
03:24 - the s and I are capitalized for shopping
03:27 - items and inside of here is where we're
03:29 - gonna put all of the tools which the
03:31 - player can buy so for each tool which
03:33 - you're gonna sell you're gonna want an
03:35 - individual folder okay so this is what
03:37 - its gonna look like so a plate we've
03:39 - pasted this folder inside of shop items
03:42 - so whenever you've gone your item just
03:44 - copy and paste this folder and change
03:47 - hyper to the name of your tool so you
03:50 - can see the tool currently inside the
03:52 - folders called hyper and that's what
03:53 - we're gonna give the hyper gun here so
03:55 - inside the folder we've got the tool and
03:57 - we've also got a value called points
03:59 - this is how much you want this gun to
04:01 - cost if you want it to cost 300 points
04:04 - you'd want to set this value to 300 but
04:07 - we're just gonna keep at 99 for now and
04:09 - I'm also just gonna do another folder
04:12 - and which I can just copy in here called
04:15 - portal gun so we've also got a gun
04:18 - inside this folder called portal gun and
04:20 - that is gonna cost us 77 points so we've
04:24 - got our two guns now in the shop items
04:26 - folder we've got our server handler
04:28 - script we just need to add one more
04:29 - thing which is our remote functions so
04:32 - remote functions they allow you the
04:34 - client which is the player to talk to
04:37 - the server so the client can make a
04:39 - request the server and the server can
04:41 - send some information back so for
04:43 - example when we click on the image
04:46 - button here we're gonna make a request
04:48 - from the client to the server and we can
04:50 - ask how much the gun costs and then the
04:53 - server is gonna send back to us he's
04:56 - gonna send back feedback the cost of
04:58 - that item so that you can't exploit
05:00 - either game to change how much
05:02 - everything costs so let us insert a
05:05 - remote function in here and we're just
05:07 - gonna call this one get info so one of
05:10 - them is going to be for getting
05:11 - information about the tool and we're
05:13 - going to just duplicate it I'm gonna
05:15 - have another one which is called check
05:17 - sale I'm gonna get onto that a bit later
05:19 - on but check sale is going to make sure
05:21 - that the player that the transaction is
05:24 - legal and that the player is allowed to
05:26 - buy the specific tool so let's head back
05:31 - to our local script then and we're gonna
05:32 - want to do we want to define a couple or
05:34 - variable
05:35 - right now so we want to firstly define
05:38 - replicated storage so that is where the
05:40 - remote functions are so we can say local
05:43 - replicated storage equals game
05:46 - come on get serviced and then in speech
05:49 - mark so we can say replicated service
05:53 - that's replicated storage okay so this
05:58 - is a replicated story it's where all of
05:59 - our remote functions are and we can just
06:02 - quickly say replicated storage to get to
06:04 - them next we want to define the selected
06:08 - item value so we can say local selected
06:10 - item equals script doctor and got
06:15 - parents doc parent weight of child
06:18 - selected item so we're just waiting that
06:21 - selected items to be added into the game
06:23 - and this is the value that were going to
06:24 - update whenever you click on the one of
06:27 - the gears we can update the selected
06:29 - value so that when we click the Buy
06:31 - button we know what we're going to
06:33 - purchase so the next thing the next
06:36 - variable want to declare is the selected
06:39 - image label here so you can say local
06:41 - selected image equals script not parent
06:45 - dot parent dot parent the item
06:49 - description and then we can say wait for
06:53 - child in fact now we don't need we can
06:55 - say wait for child item description dot
07:00 - selected image okay and then what we're
07:04 - gonna want to do is we're going to want
07:06 - to define the selected name which is the
07:09 - text label inside of the selected image
07:10 - so we can say local selected name equals
07:15 - selected image and then we can say dot
07:19 - selected name and that is what we're
07:22 - going to update with the number of
07:24 - points of how much something costs so
07:27 - we're going to want to now have a mouse
07:29 - button one click event so this is gonna
07:31 - run whenever one of the image labels
07:33 - have been clicked and what we want to do
07:36 - is we want to make your remote function
07:37 - request now so we want to request to one
07:40 - of our remote functions to get some
07:42 - information about the tool which has
07:44 - just been click
07:45 - so we want to get the price of the tool
07:49 - so we can say local price and then we
07:51 - can make a call to our remote function
07:53 - we can invoke it by saying we can say
07:56 - replicated storage and then once they've
07:59 - got get info and then we say : invoke
08:03 - server and then we can pass we can pass
08:08 - through to the server script a parent or
08:10 - name because this is the the name of the
08:13 - tool remember I said the image buttons
08:15 - need to be called the same as the actual
08:17 - tool object this is because we are
08:20 - passing the name of the image button and
08:22 - that is going to work as the tool name
08:24 - so that when this request is seen by the
08:27 - server we can see that the player wants
08:29 - to buy this specific tool so just so
08:32 - that the both the tool name and the
08:34 - image button are the same it just makes
08:36 - it easier to know what the player wants
08:38 - to buy so we just need to make sure that
08:40 - there is actually a value that's been
08:42 - returned for the price so if price is
08:44 - not equal to nil then what we can do is
08:47 - we can update the selected image
08:49 - selected name and selected item values
08:53 - to the to link to the tool which is
08:56 - going to be bought so we can say
08:58 - selected name dot text equals price and
09:03 - then double dot and then in speech marks
09:06 - we say points with a space so we're
09:09 - concatenating the price with with points
09:12 - so it will show up how much the items
09:15 - going to cost what's wrong here
09:17 - selecting that home a spelling mistake
09:19 - up here on the variable just make sure
09:21 - that selected name and then what we're
09:24 - going to do is we're going to update the
09:25 - selected image so reflected image dot
09:29 - image equals and then we can say script
09:31 - dot parent or image because we just want
09:34 - to update this image here well to update
09:37 - that to whatever the clicked image will
09:40 - be so you can just say script or parent
09:42 - or image and then we just want to say
09:44 - selected item value equals script dot
09:48 - parent got name so we're dating this
09:51 - value here to whatever the image buttons
09:53 - called
09:54 - so if we selected hyper then this would
09:56 - be called the value of this
09:59 - during value would be hyper so when we
10:01 - click on the Buy button we can easily
10:03 - find out what is selected so that is all
10:06 - we need to do for the for the first part
10:09 - which is actually getting how much it
10:11 - costs let's just have a look and see if
10:13 - it works
10:14 - you can open the game and we have a
10:17 - small error let's have a look what it
10:19 - says it says silletti name is not a
10:21 - valid member of image label on line 4
10:24 - let's have a look
10:26 - selected name is it has a capital S
10:30 - force let's name let's try it again
10:32 - I tries to leave the errors in for you
10:35 - guys so you can see what's going wrong
10:36 - and how to fix it I so you can see we've
10:38 - got the hyper laser gun and if we click
10:40 - on it nothing happened ok
10:42 - and we can click on this one and nothing
10:45 - happens ok let's just have a look
10:47 - something might be going on here so our
10:50 - heart of course no wonder it's not
10:52 - working we haven't coded it on serviette
10:54 - whoops that was my bad so we actually
10:56 - need to code the request here to to
11:01 - actually get the information and send it
11:02 - back so no wonder it's not working
11:03 - because you haven't done that yet so
11:06 - what we can do in this service scripts
11:08 - and the server handler now what we can
11:10 - do is we can create an event for when
11:12 - the remote function is fired so to do
11:15 - that we can just say replicated storage
11:18 - I want to make a variable for that at
11:21 - the top so local replicated storage
11:24 - equals game get service replicated
11:30 - storage ok and then we just want to do
11:37 - another variable for the shop items it's
11:41 - a game and get service server storage
11:46 - because that's where the shop items held
11:48 - wait for child shop items so this is
11:54 - where the tools are held
11:59 - okay so we've got our two variables we
12:01 - just now want to get the replicated
12:04 - storage and then we say dots get info on
12:10 - server event kernel connect function and
12:15 - then we want to have an argument here
12:17 - that will be the player that requested
12:19 - this remote function and also the item
12:23 - which they have chosen and then we just
12:26 - want to return back the price of our
12:29 - item so we can say return shop items and
12:33 - then we say item in square brackets
12:35 - because that's the name of the item got
12:37 - points value so that's gonna return back
12:40 - the the points how much it costs so if
12:46 - we try out the game now and let's just
12:48 - have a look on server event it's not
12:50 - over our course yet I know what's wrong
12:52 - here so this is a common mistake what's
12:55 - happened is it's this event has been
12:57 - written as if it's a a remote event but
12:59 - it's actually a remote function which is
13:01 - a callback function so because we're
13:04 - returning something we have to actually
13:05 - write it like this so we can say dot get
13:09 - info and because it also Roemer event
13:11 - we're gonna have to say on server invoke
13:14 - equals function so on server invoke
13:19 - means that when it's been invoked so
13:20 - it's it's a remote function not over my
13:24 - event so you have to invoke it and then
13:26 - the event looks a little bit different
13:27 - because you say equals and then we just
13:29 - declare this function here so if you try
13:32 - this again I think there might be
13:34 - another error yet because we need to get
13:35 - rid of this this bracket let's run it
13:39 - again and there we go you can see it
13:41 - we've clicked the hyper laser gun is
13:44 - found how much it costs and it has
13:46 - returned back at the price so it update
13:49 - that text label and we've also updated
13:51 - the image labels image so we need now we
13:54 - need to put this local scripts into the
13:57 - other gun so whenever you're making a
13:59 - new gun make sure that this local script
14:01 - is inside it's image button and now we
14:03 - can get started with the Buy button so
14:06 - let's insert a local script into the
14:08 - Bible synth and let's get rid of this
14:10 - print hello world and
14:12 - what's happened here is we want to
14:13 - define a couple more variables so we can
14:15 - just quickly take this replicated
14:18 - storage variable to get us started from
14:20 - the other script and then we want to
14:22 - define the selected item so we're going
14:25 - to want to say local selected item
14:27 - equals script dot parent parent or
14:30 - parent weight for child selected item
14:34 - and we want to also get the well we also
14:38 - want to now have some variables for the
14:42 - button so if the purchase failed we want
14:45 - to show a / ed color so local red color
14:48 - equals and then we want to do is you
14:50 - want to select a color for this so color
14:54 - 3 so I can just say cut a 3 from RGB and
14:58 - then we can do a red value so let's just
15:01 - do 255 so that's 4 red unless add a
15:04 - little bit green and blue in so it looks
15:06 - a bit like a persimmon color and then we
15:09 - can do local green and color equals
15:12 - color 3 dot from RGB and then for this
15:17 - one the color that we're going to use is
15:19 - 2 2 3 4 1 1 1 so it's mainly a green
15:24 - color just to show that the purchase was
15:26 - a success so now that we've done that
15:29 - the next variable we want to create is a
15:31 - time delay which is going to be 2
15:34 - seconds so when they click the button
15:36 - and it says purchase failed or put your
15:38 - success there'll be a 2 second delay
15:40 - before it goes back to saying bye
15:43 - so we want to do is we also want to just
15:45 - define another variable called success
15:47 - and you'll see why we're doing this in a
15:49 - moment but this is just so if we can
15:53 - tell whether the purchase will success
15:56 - or not and then we'll allow them to to
15:58 - buy the item so we're going to want to
16:01 - insert a mouse button click event like
16:03 - this and we want to make a remote
16:06 - function request again okay so we want
16:12 - to set success to false for now whoops
16:17 - spelt it wrong so Express because we
16:19 - don't know whether it's gone right or
16:21 - wrong but if it did go all right when we
16:23 - get the request back we
16:25 - updates the success value back to true
16:27 - so we can say if selected a voucher
16:30 - selected item value is not equal to nil
16:36 - then we can make a request to the remote
16:42 - function so if there is a selected item
16:44 - then we can actually request to make a
16:47 - transaction so we can say success equals
16:51 - replicator storage check sale invokes
16:55 - server
16:57 - and let's add in the other bracket and
17:03 - let's give Li selected
17:05 - let's pass through the selected I can't
17:07 - talk today selected item value we want
17:10 - to pass that through and what happen is
17:14 - we're gonna script it so that the you
17:17 - remote function the server script will
17:19 - either return true or false so it would
17:22 - either be a success or it won't so we
17:24 - can check to see if the success then we
17:29 - can have an else here and in this block
17:31 - of code we're just gonna say script a
17:34 - parent of text equals success and what
17:38 - do we say purchased we can wait two
17:41 - seconds
17:42 - in fact we wait the time delay because
17:45 - that's what we've defined as a variable
17:46 - and then with no script or parent text
17:49 - equals
17:52 - by just like that and then we just want
17:55 - to do the same thing in the house doing
17:58 - in case something did go wrong we want
18:01 - to say purchase failed and we want to
18:04 - wait the time delay and we're also just
18:06 - gonna put it back to buy but we also
18:08 - want to change the text color here so we
18:10 - want to say script or parent text color
18:12 - 3 whose green color and let's just put
18:19 - that over here as well in the success
18:23 - just so that if it was I clicked while
18:26 - it was red it goes back to green and
18:28 - then we can just make it red here for
18:30 - when it's a purchase failed 3 equals red
18:34 - color just like that so there we go we
18:36 - have got our Buy button complete all
18:39 - that's left is for us to code the check
18:42 - sale server-side so we can do the same
18:46 - thing here we can copy this this one
18:49 - server invoke and just paste it and
18:51 - change get info to check sale because
18:54 - we've got the same arguments of player
18:56 - and item and then what we're gonna do
18:58 - we're just gonna get rid of this return
19:00 - we're gonna make it a bit bigger and
19:02 - we're gonna want to say local price
19:05 - equals shop items so we're getting the
19:09 - price again so item in square brackets
19:11 - that's the name got points got value and
19:14 - then we can say if player leader stats
19:17 - got points value is greater than or
19:21 - equal to the price then we've got
19:24 - another if statement here and inside of
19:28 - here we're gonna want to have an else
19:29 - where we can return false because if
19:33 - they haven't got enough money
19:34 - we know that the purchase is gonna be a
19:36 - fail so we want to return success as
19:39 - false otherwise we're gonna return true
19:41 - and here's where we want to handle the
19:45 - we want to deduct the points from their
19:48 - balance so we can say player dot lead
19:50 - you start stop points dot value equals
19:52 - player that leader starts two points to
19:53 - allow you take away price this deducting
19:56 - it from their account balance and then
19:58 - what we're gonna do is we're gonna say
20:00 - local gear which is the tool equal shop
20:03 - items
20:04 - and then square brackets item because
20:06 - that's the folder then we want to say
20:09 - item again because inside the folder
20:11 - there will be an object with the same
20:13 - name which is the tool and I want to
20:15 - clone up and we want to put this in the
20:20 - players starter gear so that they get it
20:25 - when they reset and we also just want to
20:27 - clone it once more so that we can put it
20:29 - inside of their backpack
20:34 - so the backpack is where it shows up on
20:36 - your inventory you can select it but if
20:40 - you reset the backpack gets cleared but
20:42 - if it's in your starter gear as well
20:43 - then it's gonna go back to your backpack
20:47 - when you reset but it doesn't save I do
20:50 - I'm gonna have a weapon saving tutorial
20:53 - out very soon so make sure to watch out
20:56 - for that on my channel but apart from
20:58 - that I think that is everything let's go
21:00 - and test this out and make sure that it
21:02 - works so there might be a couple of
21:03 - errors so we'll sleep so we're gonna
21:06 - click on the items you can see the
21:08 - updates with a selected item click on
21:10 - buy you can see we have been given the
21:13 - tool you might not be able to see it
21:15 - because the GUI is in the way just try
21:17 - and buy another item being see we can
21:20 - buy as many items so you want don't
21:21 - worry about the error it's just an error
21:23 - in the tool I didn't make the tool but
21:26 - you can see we can shoot you can do
21:27 - anything you can update this with your
21:29 - custom weapons and it will still give
21:31 - you the weapon as long as you change the
21:33 - names of everything but just to finish
21:36 - off let's just add a little toggle
21:38 - button which will allow us to open and
21:40 - close the GUI so to do this we're just
21:43 - gonna wait for it to come back
21:45 - I know roblox studio has been having a
21:47 - couple of loading issues recently but
21:49 - that's alright and we're gonna insert a
21:51 - text button I'm just gonna quickly drag
21:54 - it over here it's not gonna be the best
21:56 - button and we're gonna change the style
21:58 - I'm gonna make the text white I'm gonna
22:02 - make it text scaled and just say shop
22:05 - and inside of here we now have a local
22:07 - script and then we can say mouse button
22:12 - one click event so swept up parent or
22:14 - muss one button one click so when it's
22:16 - been clicked when you say script doctor
22:18 - and doctor in mainframe doc visible
22:22 - equals not
22:23 - script or parent or parent up mainframe
22:26 - not visible so this will just change the
22:28 - main frames visibility to the opposite
22:32 - of what it currently is so it's kind of
22:33 - like a toggle so if it's on it'll go off
22:35 - if it's off its off it'll go it will
22:37 - come back on so there we go we've got a
22:39 - little toggle you can see you can close
22:41 - it and we can reopen it and we can buy
22:42 - things
22:44 - I think if we reset you should be able
22:46 - to keep your items hopefully because
22:49 - it's in the starter gear yep you get to
22:53 - keep the item and I think that is
22:56 - everything we just want to actually
22:58 - change this to we want to make this GUI
23:03 - I want to make the mainframe invisible
23:06 - for now so that it can be opened it
23:08 - doesn't open up straightaway but there
23:09 - we go that's the end of this tutorial on
23:11 - how to create a shop which can get you
23:15 - gears when you pay virtual currency
23:18 - don't forget to check out my other video
23:21 - on how to make currency system because
23:23 - this these two videos were made for
23:25 - roblox their relations are you'll be
23:27 - able to see the article on their medium
23:29 - page I don't forget to subscribe to my
23:31 - channel
23:32 - Alvin blocks for more roblox scripting
23:33 - tutorials I should have liked the video
23:35 - a ton on the notification bell and I'll
23:38 - see you in the next video the sound
23:40 - blocks telling you to keep scripting

Cleaned transcript:

in this video I'm going to be showing you how to create a GUI shop which will allow players in your game to buy virtual items let's get started welcome back to another video my name's Alvin blocks and today it wouldn't be creating this GUI which will allow players to buy items in your game with virtual currency now my last video I taught you how to create a currency system which saves and which will allow you to buy stuff and today we're making a shop which will allow you to spend that currency so the first thing that we're going to do is we're going to make sure that we've got this GUI in our game so I've already made the GUI now if you want to make your own GUI and also want to use this script you're gonna have to make it look the same as mine okay so it's gonna have to have a main frame item description it's gonna have to look like this but if you want to take this GUI you just need to go to the description of this video and there'll be a link to the model you need to take that model then go to the toolbox and it should be in your models you just click my models you'll be able to drag it in and place them into these start at GUI so we're going to just script this GUI today we're going to Swift it so that it shows the item you've currently selected and then we're going to get some information about the item and show it on the right here and then whenever you click the buy button we're gonna make a request to see if you have enough money to buy the item and if you do we will give the player or you the the item well to get started you can see we have two frames we have item description and a list inside of this main frame and the list is where all of our items are going to go so each item is going to be an image button and the name of that image button is going to be the name of your gear okay so if you're wanting to give a sword the name of your image button would be sword the same as your tool on the item description we have a Buy button we also have an image label which is going to be the selected image and then inside that image label we've got a text label and that's going to display how much these selected item costs and this far you hear selected item will change whenever we click one of these image wear buttons so we're going to start by coding I leaderboard scripts if your game curtain does not have a leaderboard I'm just going to quickly add one to our game so we're going to insert a script into service script service and we're just going to want to get a a normal leaderboard script and it looks like this okay you should know how to do leaderboards if you have watched my tutorials before or you're getting into monetization it's very simple when a player enters the game we add a folder who leader starts and inside of that we put some currency called points you just want to change points to the name of your currency so if it was called cash you change this to cash for example but we're gonna keep at points for today in our shop and there we go that as our leaderboard done I'm just gonna call this script the server handler so we're gonna put all of our service scripts in this in this one big script here and we're going to get started then by coding our image buttons here so that we can show the selected year on the right so to do that we're gonna have to insert a local script into our first gun which is called hyper and also we also need to insert into the server storage a folder called shop items just like that and you need to make sure the s and I are capitalized for shopping items and inside of here is where we're gonna put all of the tools which the player can buy so for each tool which you're gonna sell you're gonna want an individual folder okay so this is what its gonna look like so a plate we've pasted this folder inside of shop items so whenever you've gone your item just copy and paste this folder and change hyper to the name of your tool so you can see the tool currently inside the folders called hyper and that's what we're gonna give the hyper gun here so inside the folder we've got the tool and we've also got a value called points this is how much you want this gun to cost if you want it to cost 300 points you'd want to set this value to 300 but we're just gonna keep at 99 for now and I'm also just gonna do another folder and which I can just copy in here called portal gun so we've also got a gun inside this folder called portal gun and that is gonna cost us 77 points so we've got our two guns now in the shop items folder we've got our server handler script we just need to add one more thing which is our remote functions so remote functions they allow you the client which is the player to talk to the server so the client can make a request the server and the server can send some information back so for example when we click on the image button here we're gonna make a request from the client to the server and we can ask how much the gun costs and then the server is gonna send back to us he's gonna send back feedback the cost of that item so that you can't exploit either game to change how much everything costs so let us insert a remote function in here and we're just gonna call this one get info so one of them is going to be for getting information about the tool and we're going to just duplicate it I'm gonna have another one which is called check sale I'm gonna get onto that a bit later on but check sale is going to make sure that the player that the transaction is legal and that the player is allowed to buy the specific tool so let's head back to our local script then and we're gonna want to do we want to define a couple or variable right now so we want to firstly define replicated storage so that is where the remote functions are so we can say local replicated storage equals game come on get serviced and then in speech mark so we can say replicated service that's replicated storage okay so this is a replicated story it's where all of our remote functions are and we can just quickly say replicated storage to get to them next we want to define the selected item value so we can say local selected item equals script doctor and got parents doc parent weight of child selected item so we're just waiting that selected items to be added into the game and this is the value that were going to update whenever you click on the one of the gears we can update the selected value so that when we click the Buy button we know what we're going to purchase so the next thing the next variable want to declare is the selected image label here so you can say local selected image equals script not parent dot parent dot parent the item description and then we can say wait for child in fact now we don't need we can say wait for child item description dot selected image okay and then what we're gonna want to do is we're going to want to define the selected name which is the text label inside of the selected image so we can say local selected name equals selected image and then we can say dot selected name and that is what we're going to update with the number of points of how much something costs so we're going to want to now have a mouse button one click event so this is gonna run whenever one of the image labels have been clicked and what we want to do is we want to make your remote function request now so we want to request to one of our remote functions to get some information about the tool which has just been click so we want to get the price of the tool so we can say local price and then we can make a call to our remote function we can invoke it by saying we can say replicated storage and then once they've got get info and then we say invoke server and then we can pass we can pass through to the server script a parent or name because this is the the name of the tool remember I said the image buttons need to be called the same as the actual tool object this is because we are passing the name of the image button and that is going to work as the tool name so that when this request is seen by the server we can see that the player wants to buy this specific tool so just so that the both the tool name and the image button are the same it just makes it easier to know what the player wants to buy so we just need to make sure that there is actually a value that's been returned for the price so if price is not equal to nil then what we can do is we can update the selected image selected name and selected item values to the to link to the tool which is going to be bought so we can say selected name dot text equals price and then double dot and then in speech marks we say points with a space so we're concatenating the price with with points so it will show up how much the items going to cost what's wrong here selecting that home a spelling mistake up here on the variable just make sure that selected name and then what we're going to do is we're going to update the selected image so reflected image dot image equals and then we can say script dot parent or image because we just want to update this image here well to update that to whatever the clicked image will be so you can just say script or parent or image and then we just want to say selected item value equals script dot parent got name so we're dating this value here to whatever the image buttons called so if we selected hyper then this would be called the value of this during value would be hyper so when we click on the Buy button we can easily find out what is selected so that is all we need to do for the for the first part which is actually getting how much it costs let's just have a look and see if it works you can open the game and we have a small error let's have a look what it says it says silletti name is not a valid member of image label on line 4 let's have a look selected name is it has a capital S force let's name let's try it again I tries to leave the errors in for you guys so you can see what's going wrong and how to fix it I so you can see we've got the hyper laser gun and if we click on it nothing happened ok and we can click on this one and nothing happens ok let's just have a look something might be going on here so our heart of course no wonder it's not working we haven't coded it on serviette whoops that was my bad so we actually need to code the request here to to actually get the information and send it back so no wonder it's not working because you haven't done that yet so what we can do in this service scripts and the server handler now what we can do is we can create an event for when the remote function is fired so to do that we can just say replicated storage I want to make a variable for that at the top so local replicated storage equals game get service replicated storage ok and then we just want to do another variable for the shop items it's a game and get service server storage because that's where the shop items held wait for child shop items so this is where the tools are held okay so we've got our two variables we just now want to get the replicated storage and then we say dots get info on server event kernel connect function and then we want to have an argument here that will be the player that requested this remote function and also the item which they have chosen and then we just want to return back the price of our item so we can say return shop items and then we say item in square brackets because that's the name of the item got points value so that's gonna return back the the points how much it costs so if we try out the game now and let's just have a look on server event it's not over our course yet I know what's wrong here so this is a common mistake what's happened is it's this event has been written as if it's a a remote event but it's actually a remote function which is a callback function so because we're returning something we have to actually write it like this so we can say dot get info and because it also Roemer event we're gonna have to say on server invoke equals function so on server invoke means that when it's been invoked so it's it's a remote function not over my event so you have to invoke it and then the event looks a little bit different because you say equals and then we just declare this function here so if you try this again I think there might be another error yet because we need to get rid of this this bracket let's run it again and there we go you can see it we've clicked the hyper laser gun is found how much it costs and it has returned back at the price so it update that text label and we've also updated the image labels image so we need now we need to put this local scripts into the other gun so whenever you're making a new gun make sure that this local script is inside it's image button and now we can get started with the Buy button so let's insert a local script into the Bible synth and let's get rid of this print hello world and what's happened here is we want to define a couple more variables so we can just quickly take this replicated storage variable to get us started from the other script and then we want to define the selected item so we're going to want to say local selected item equals script dot parent parent or parent weight for child selected item and we want to also get the well we also want to now have some variables for the button so if the purchase failed we want to show a / ed color so local red color equals and then we want to do is you want to select a color for this so color 3 so I can just say cut a 3 from RGB and then we can do a red value so let's just do 255 so that's 4 red unless add a little bit green and blue in so it looks a bit like a persimmon color and then we can do local green and color equals color 3 dot from RGB and then for this one the color that we're going to use is 2 2 3 4 1 1 1 so it's mainly a green color just to show that the purchase was a success so now that we've done that the next variable we want to create is a time delay which is going to be 2 seconds so when they click the button and it says purchase failed or put your success there'll be a 2 second delay before it goes back to saying bye so we want to do is we also want to just define another variable called success and you'll see why we're doing this in a moment but this is just so if we can tell whether the purchase will success or not and then we'll allow them to to buy the item so we're going to want to insert a mouse button click event like this and we want to make a remote function request again okay so we want to set success to false for now whoops spelt it wrong so Express because we don't know whether it's gone right or wrong but if it did go all right when we get the request back we updates the success value back to true so we can say if selected a voucher selected item value is not equal to nil then we can make a request to the remote function so if there is a selected item then we can actually request to make a transaction so we can say success equals replicator storage check sale invokes server and let's add in the other bracket and let's give Li selected let's pass through the selected I can't talk today selected item value we want to pass that through and what happen is we're gonna script it so that the you remote function the server script will either return true or false so it would either be a success or it won't so we can check to see if the success then we can have an else here and in this block of code we're just gonna say script a parent of text equals success and what do we say purchased we can wait two seconds in fact we wait the time delay because that's what we've defined as a variable and then with no script or parent text equals by just like that and then we just want to do the same thing in the house doing in case something did go wrong we want to say purchase failed and we want to wait the time delay and we're also just gonna put it back to buy but we also want to change the text color here so we want to say script or parent text color 3 whose green color and let's just put that over here as well in the success just so that if it was I clicked while it was red it goes back to green and then we can just make it red here for when it's a purchase failed 3 equals red color just like that so there we go we have got our Buy button complete all that's left is for us to code the check sale serverside so we can do the same thing here we can copy this this one server invoke and just paste it and change get info to check sale because we've got the same arguments of player and item and then what we're gonna do we're just gonna get rid of this return we're gonna make it a bit bigger and we're gonna want to say local price equals shop items so we're getting the price again so item in square brackets that's the name got points got value and then we can say if player leader stats got points value is greater than or equal to the price then we've got another if statement here and inside of here we're gonna want to have an else where we can return false because if they haven't got enough money we know that the purchase is gonna be a fail so we want to return success as false otherwise we're gonna return true and here's where we want to handle the we want to deduct the points from their balance so we can say player dot lead you start stop points dot value equals player that leader starts two points to allow you take away price this deducting it from their account balance and then what we're gonna do is we're gonna say local gear which is the tool equal shop items and then square brackets item because that's the folder then we want to say item again because inside the folder there will be an object with the same name which is the tool and I want to clone up and we want to put this in the players starter gear so that they get it when they reset and we also just want to clone it once more so that we can put it inside of their backpack so the backpack is where it shows up on your inventory you can select it but if you reset the backpack gets cleared but if it's in your starter gear as well then it's gonna go back to your backpack when you reset but it doesn't save I do I'm gonna have a weapon saving tutorial out very soon so make sure to watch out for that on my channel but apart from that I think that is everything let's go and test this out and make sure that it works so there might be a couple of errors so we'll sleep so we're gonna click on the items you can see the updates with a selected item click on buy you can see we have been given the tool you might not be able to see it because the GUI is in the way just try and buy another item being see we can buy as many items so you want don't worry about the error it's just an error in the tool I didn't make the tool but you can see we can shoot you can do anything you can update this with your custom weapons and it will still give you the weapon as long as you change the names of everything but just to finish off let's just add a little toggle button which will allow us to open and close the GUI so to do this we're just gonna wait for it to come back I know roblox studio has been having a couple of loading issues recently but that's alright and we're gonna insert a text button I'm just gonna quickly drag it over here it's not gonna be the best button and we're gonna change the style I'm gonna make the text white I'm gonna make it text scaled and just say shop and inside of here we now have a local script and then we can say mouse button one click event so swept up parent or muss one button one click so when it's been clicked when you say script doctor and doctor in mainframe doc visible equals not script or parent or parent up mainframe not visible so this will just change the main frames visibility to the opposite of what it currently is so it's kind of like a toggle so if it's on it'll go off if it's off its off it'll go it will come back on so there we go we've got a little toggle you can see you can close it and we can reopen it and we can buy things I think if we reset you should be able to keep your items hopefully because it's in the starter gear yep you get to keep the item and I think that is everything we just want to actually change this to we want to make this GUI I want to make the mainframe invisible for now so that it can be opened it doesn't open up straightaway but there we go that's the end of this tutorial on how to create a shop which can get you gears when you pay virtual currency don't forget to check out my other video on how to make currency system because this these two videos were made for roblox their relations are you'll be able to see the article on their medium page I don't forget to subscribe to my channel Alvin blocks for more roblox scripting tutorials I should have liked the video a ton on the notification bell and I'll see you in the next video the sound blocks telling you to keep scripting
