With timestamps:

00:00 - hello this video is about how to use
00:03 - remote functions in roblox in the
00:06 - previous video we looked at remote
00:08 - events and also filter enabled which
00:10 - we'll be going over in this one as well
00:12 - but the difference between remote events
00:14 - and remote functions is that they're
00:16 - basically they do the same thing but a
00:18 - remote function can return information
00:21 - or messages back to a local script once
00:25 - it's been fired okay so once it's done
00:28 - an action on the server it can return
00:30 - information back telling us you know
00:32 - whether it was completed or whether it
00:35 - failed etc so we can send messages back
00:38 - in the video we're going to be going
00:39 - over remote functions and we're gonna be
00:42 - doing a demonstration to show you how
00:44 - they work as well and how they would
00:47 - work in in a roblox game like certain
00:49 - use cases so let's get straight into it
00:52 - so I've got a rocket here credit two
00:56 - darkened and an eternity by the way for
01:01 - the model which are found in the toolbox
01:04 - this rocket we're gonna make it go to
01:07 - space okay and what we want to do is we
01:11 - want to only launch this rocket
01:14 - if a player knows the code okay so only
01:18 - certain players will be able to launch
01:20 - it so you'll need you need the code now
01:23 - what we'll do now we've already got the
01:25 - script to launch the rocket okay it's
01:27 - somewhere in this model but we're not
01:29 - gonna learn how to actually you know get
01:32 - into the scripting of launching a rocket
01:33 - but I've set this rocket up so that this
01:36 - value called launcher if we just change
01:39 - it to true or false it doesn't matter if
01:41 - we just change it change its value then
01:44 - the rocket will all lift off okay so
01:47 - what I've got here in our local scripts
01:49 - in this rocket launch GUI I've got a
01:52 - text box and a tap and a text button
01:55 - called launch button so when the user
01:57 - inputs their their code in this box okay
02:01 - and then they click launch we're going
02:04 - to launch this rocket but we've got a
02:06 - check to see whether the code is crew
02:08 - now we'll go into this local script and
02:11 - this is what I currently have now there
02:13 - are a couple of issues with this code
02:15 - the first issue is that because we are
02:19 - trying to fire the rocket from the
02:22 - client and we have failed to enable
02:24 - turned on these we're going to we're
02:26 - going to make this change on the server
02:28 - in the workspace but this change is only
02:31 - gonna it's only going to change for us
02:33 - okay because the server is going to see
02:36 - that we're trying to change the value of
02:37 - the launcher and then because filter
02:40 - enabled on it will prevent us from
02:42 - making that change okay
02:44 - I explained more about that in the
02:45 - previous video if you haven't checked it
02:47 - out I'll leave a card or put a link in
02:49 - the description so I'll show you if we
02:52 - go into the game here we go
02:57 - I'll just type in the code again 1 3 3 7
03:01 - it says firing rocket so the local
03:04 - script has said it's fired but it's not
03:07 - going anywhere
03:08 - ok and if you go into the rocket model
03:10 - the launch of value is set to true on
03:13 - our end on the client okay but if we
03:16 - head to the server and this is the
03:18 - service copy of the game and this is
03:19 - what we this is what all the other
03:20 - players would have it is it should still
03:23 - be false yeah there we go it's still
03:24 - false ok
03:25 - and it wouldn't launch it would only it
03:29 - would only set the value to be true but
03:32 - because this these scripts that are in
03:34 - the rocket our server scripts and they
03:36 - run on the server the service copy is
03:39 - still set to false so it's not going to
03:41 - go anywhere so we have a problem we
03:43 - can't launch the rocket from the client
03:46 - so we're going to need to use a remote
03:48 - event or a remote function so which one
03:51 - do we use and this brings us to our
03:52 - second problem and this is that we are
03:55 - storing the code to launch the rocket in
03:59 - the local script and this is a really
04:01 - bad thing to do let me just change the
04:04 - text of our text let's here there we go
04:06 - and this is a really bad thing to do
04:09 - because anybody that doesn't know the
04:11 - code if we're storing it in a local
04:13 - script you know that local scripts they
04:16 - run on the players computer ok so the
04:19 - player runs the local script so this
04:21 - means that a player could and produce
04:25 - exploding software to view the local
04:28 - scripts ok and they could see aha the
04:31 - code is 1 3 3 7 and now they know what
04:33 - it is ok so that's what we don't want we
04:36 - don't want players to be able to exploit
04:38 - the game to find out what the code is so
04:41 - we're going to need to store the code on
04:44 - the server this is because if we store
04:46 - it on the server in a server script
04:49 - which runs on the server clients don't
04:51 - have access to to to those scripts ok so
04:56 - we're gonna have a script in server
04:58 - script service ok and we're also going
05:01 - to need a remote function but why do we
05:04 - need a remote function and not a remote
05:05 - event well
05:08 - I said a remote function returns
05:10 - information back to the client once we
05:13 - have triggered that remote function so
05:16 - an example would be if we put in the
05:18 - wrong code and then we checks whether
05:20 - the code was correct on the server if it
05:23 - was correct then we would launch the
05:25 - rocket on the server and then we could
05:27 - send information or message back to the
05:31 - local script to say that it was a
05:33 - success and then we could set the text
05:36 - of our textbox to say success launching
05:39 - rockets but if the code was wrong we
05:42 - could send a message from the server to
05:44 - the client saying that it was an
05:45 - incorrect code and that way we could
05:48 - display on the screen to our player that
05:51 - the code was wrong
05:51 - and they need to try again okay so the
05:54 - first thing we're going to tackle is
05:56 - checking whether the code is correct on
05:59 - the server and actually firing the
06:02 - rocket on the server so let's get rid of
06:04 - this if statement here and instead we're
06:09 - going to find our remote function now if
06:11 - you haven't got a remote function in
06:12 - your game yet click on the plus in
06:13 - replicating storage and then just type
06:15 - out remote function and just add one in
06:18 - there okay we're good at widget and keep
06:20 - it named right function because it's the
06:22 - only one we have in a in our game so
06:24 - we're gonna say at game don't replicate
06:26 - the storage dot remote function and then
06:29 - what we're going to do is instead of
06:31 - saying fire server we're going to invoke
06:35 - it okay so yeah if you want to trigger a
06:38 - remote function we say we invoke it so
06:42 - we say : invoke server now what we're
06:45 - gonna do we need to pass our data to the
06:48 - server we need to tell the server what
06:51 - the client has inputted okay into the
06:53 - textbox and that will be the code
06:55 - obviously so as a parameter we're going
06:58 - to send to the server the contents of
07:01 - our textbox okay because the server
07:03 - actually can't access anything in the
07:05 - player GUI so we need to send that to to
07:09 - the server okay
07:11 - so we've put that as a parameter and
07:14 - that data is going to be sent to the
07:16 - server so now let's go into our server
07:18 - script and actually script how we're
07:21 - going to pick up this request okay this
07:24 - this invoke so in our server scripts
07:27 - let's just put service script here so
07:29 - you know what we're in so scripts and
07:32 - we'll do the same local scripts okay in
07:37 - our service script we are going to set
07:40 - up a listener okay
07:42 - similar to an event listener it's
07:45 - actually what I'm gonna bind our remote
07:49 - function so whenever that gets triggered
07:51 - we're gonna bind it to a function called
07:55 - a callback function I'm explain what one
07:57 - of those is soon so firstly we're gonna
07:59 - say game dot replicated storage dot
08:02 - remote function we put it in replicator
08:04 - storage so it can be viewed by both the
08:07 - server and the client so game don't
08:10 - replicate storage dot remote function
08:11 - now because we've invoked it from the
08:13 - client I'm picking it up on the server
08:15 - we just say dot on server invoke so when
08:19 - the server is invoked because on on the
08:22 - client we said invoke server so on
08:25 - server invoke what we do instead of
08:27 - saying : Connect we just say equals
08:30 - function okay and we create a function
08:34 - just as you would in in a normal script
08:37 - if you're making a function to run code
08:38 - now this is called we're binding it to a
08:43 - function
08:43 - so whenever a whenever the remote event
08:46 - is invoked we bind it to this function
08:49 - and any code inside of this function
08:51 - will run whenever we invoke the server
08:54 - invoke that remote event now we've got
08:57 - our arguments the arguments are the data
09:01 - which we pass through the parameters
09:03 - remember we passed our code which the
09:06 - user inputted but we also passed the we
09:10 - also pass the name of the player
09:12 - automatically roblox passes that for us
09:14 - and we don't need to write it in our
09:16 - local script it just automatically pasts
09:18 - but the player comes always comes first
09:21 - on server so it will put our player in
09:23 - first our player argument and you can
09:26 - call these arguments whatever you want
09:27 - so it could be PLR it could be player
09:30 - player you could even say dog but we're
09:33 - gonna say player because that just makes
09:34 - the most sense and then the second one
09:36 - obviously it's going to be our code
09:38 - which they have inputted and that code
09:40 - is going to correspond to textbox dot
09:43 - text okay so now we've got our arguments
09:46 - what we need to do is we need to check
09:49 - to see whether the code is correct okay
09:52 - so we can just say if the code is equal
09:56 - to and then we're going to do a string
09:59 - okay because the text box text is always
10:02 - a string okay if even if it's a number
10:04 - that number is going to be in a string
10:05 - so the code which you want the player to
10:10 - use to launch the rocket you're going to
10:11 - put in here so we could put one three
10:14 - three seven I'm going to change it to
10:15 - one three three seven move just to be
10:18 - different so if the code is equal to one
10:21 - three three seven noob
10:22 - don't forget the two equal signs by the
10:23 - way because it's an if statement so if
10:25 - that is their correct code then we're
10:28 - gonna drop a line make sure that end is
10:30 - added in and then what we can do is we
10:33 - can launch the rocket by saying game dot
10:36 - work space dot rocket model and then we
10:39 - can say a dot launcher dot value equals
10:44 - true okay and again we only just setting
10:48 - it setting the launch of value because
10:49 - there are other scripts in this rocket
10:51 - which which will cause it to take off
10:53 - and what we've done here we've just
10:55 - launched the rocket and we can just do a
10:58 - print to say rocket launched so what
11:02 - we've done so far is the exact same as a
11:05 - remote event we have we have invoked it
11:09 - and fired it as we would with the remote
11:11 - event and we've picked up on the server
11:13 - and we've launched it now if we head
11:15 - into the game and we put in a different
11:19 - code it's not nothing's happening okay
11:22 - but if we put in one three three seven
11:24 - noob
11:26 - you can see it's started to shut the
11:29 - door and launch and if we head into the
11:32 - rocket model not only is it true the
11:35 - value is true for us on the client but
11:37 - it's also true on the server so all
11:41 - clients and the server will be seeing
11:43 - the same thing because they're launching
11:45 - of the rocket and the the setting of
11:48 - this fire too true has been done on the
11:50 - server in a server script this one here
11:52 - because it's been invoked by a remote
11:55 - function and the code was already
11:58 - written ok there we go we're going off
12:00 - in our rocket the code is already
12:01 - written in this script and we were just
12:04 - waiting for the remote function to be
12:05 - invoked by the client and so we've done
12:10 - exactly the same as a remote event but I
12:13 - told you that with the remote function
12:16 - we can return information back to the
12:18 - local script if you're not gonna return
12:19 - information back you might as well just
12:21 - use remote event but we're going to
12:22 - return back whether the code that they
12:26 - entered was the right one or if it was
12:28 - incorrect so if the code is equal to 1 3
12:31 - 3 7 noob then at the end of our at the
12:35 - end of this if statement just before the
12:37 - the end we're gonna say return and this
12:40 - is how we send messages back send
12:42 - information back you say return and the
12:45 - the data that comes after return gets
12:48 - sent back to the local script ok so we
12:50 - could return true ok if it was a success
12:54 - else if the code is wrong then we could
12:57 - return false ok it doesn't matter what
13:00 - you return you could return a string
13:02 - saying true or you could say return you
13:05 - could return correct code it's up to you
13:08 - you could write you could return
13:09 - anything but we're just gonna do true or
13:12 - false for now ok so we're returning that
13:15 - to our local script and it's going to
13:18 - send either true or false back to the
13:20 - local script here ok so returning just
13:23 - means to to send back a value in this
13:26 - case so we're sending back the value
13:28 - true or false to the local script so how
13:31 - do we pick up what we've returned ok
13:34 - we're back in our local script and I'm
13:36 - saying that you can return things but
13:38 - how do we actually get that information
13:40 - well what we do is we take this line of
13:43 - code the invoke invoke server and we're
13:46 - going to set it as a variable okay
13:48 - so local and then I'm gonna call it
13:51 - result so the result is what's going to
13:53 - be returned back so the result is equal
13:55 - to replicate storage remote function
13:58 - invoked server okay and when we do
14:01 - return something say it was returned to
14:04 - true then result would actually equal
14:07 - true okay so the the value that we
14:10 - return basically replaces this line of
14:13 - code okay
14:14 - the invoke server basically recently
14:17 - will return whether it's true or false
14:19 - and then if the result will either be
14:22 - equal to true or equal to false and just
14:24 - to prove this if we say print result
14:27 - here alright and we go and try again
14:32 - and we put in 1 337 new and click launch
14:37 - you can see it returned true but if we
14:39 - just type in something different it
14:41 - returns false okay so its return true or
14:44 - false and then it's been set as the
14:46 - results of variable and there we go it's
14:48 - printed it out so now we can do an if
14:52 - statement to say if results is equal to
14:55 - true then we could say launch button
14:58 - text is equal to success just 1 equals
15:03 - their else if it's if it's not true it's
15:08 - gonna be false we could say launch
15:10 - button text you cause it fail ok and do
15:15 - the same thing again we'll play the game
15:18 - we put in 1 3 3 says fail but if we do 1
15:22 - 3 3 7 new again it says success so it's
15:27 - just it's firing back a value to the
15:29 - local script from this from this server
15:31 - to basically say whether it was whether
15:34 - it was a success or not ok now this is
15:36 - only one use case for a remote function
15:39 - ok you can return back any data so let's
15:42 - say you had a load of items that in a
15:45 - shop which have stored on the server you
15:47 - could return back a table with
15:49 - information about those items like the
15:51 - name from the price and the the object
15:54 - if you wanted to use it like a viewport
15:56 - frame and I'll be making more videos on
15:58 - how that works with a remote function
16:01 - and in the future I do have some videos
16:03 - which do already use remote functions
16:06 - for things like shops such as my sword
16:09 - fight game series with a shop or the
16:11 - mining simulator shop on my channel but
16:14 - you don't have to return true or false
16:16 - again you could return success or you
16:20 - could return epic fail ok and you could
16:25 - say in the local script if result is
16:27 - equal to success as a string don't
16:30 - forget because we returned it as a
16:32 - string datatype because of those speech
16:34 - marks else if result is equal to epic
16:37 - fail
16:39 - then again it would say fail okay so
16:42 - that is how a remote function works okay
16:46 - it's the same as remote events okay it
16:49 - does an action on the server when you
16:50 - call it from a local script but the only
16:52 - difference is that a remote function
16:55 - will return some data to the local
17:01 - script if you're not returning any data
17:02 - use if you're not planning to use a
17:05 - remote event if you're planning on
17:07 - returning something back to the to the
17:10 - local script though like whether it was
17:12 - a success or not or also another example
17:14 - is if you're trying to buy something
17:16 - okay you always want to do the checking
17:20 - to see if they have enough money or
17:22 - deducting the money on the server so
17:25 - that can't be exported and then if the
17:27 - player doesn't have enough money you can
17:28 - return back to the local script to say
17:30 - that they haven't got enough or if they
17:32 - do have enough money you could return
17:34 - back saying it was a success and that
17:35 - they now have the item so if you aren't
17:38 - returning user remote events and also I
17:42 - need to tell you this a remote function
17:44 - yields okay yields okay that was pretty
17:47 - hard to say yields okay if you didn't
17:51 - know what I said
17:51 - yields okay what that means is if it
17:54 - yields then nothing nothing else in this
17:57 - local script is going to run until you
18:00 - have returned a value okay so if we
18:02 - called the right function here the local
18:05 - scripts going to stop until all of the
18:08 - code has been executed in the sell
18:11 - script until you've returned something
18:13 - okay so the script the local script
18:16 - won't continue until you have got
18:19 - something returned from the remote
18:22 - function okay and that's why
18:26 - the success text we're checking to see
18:30 - if resolve was equal to success but you
18:32 - can't do this if statement until you
18:34 - have something returned to your result
18:36 - value like a true or false value so
18:39 - remote function invokes server it yields
18:42 - and that just means that the script will
18:44 - stop at this line until something is
18:47 - returned back to the local scripts
18:48 - whereas a remote event wouldn't because
18:51 - it never returns anything okay
18:54 - so that is all for this video thanks for
18:57 - watching and I'll see you in another one
18:59 - if you have any suggestions filtering
19:01 - enabled content etc leave them in the
19:04 - comments down below I read them all and
19:07 - I'll take on your your feedback and your
19:10 - ideas if I can don't forget to use
19:13 - crater code album blocks when you buy
19:15 - Road books or builder's club don't
19:18 - forget to subscribe
19:19 - turn on the notification bow and again
19:21 - I'll see you guys in the next one thanks
19:23 - for watching

Cleaned transcript:

hello this video is about how to use remote functions in roblox in the previous video we looked at remote events and also filter enabled which we'll be going over in this one as well but the difference between remote events and remote functions is that they're basically they do the same thing but a remote function can return information or messages back to a local script once it's been fired okay so once it's done an action on the server it can return information back telling us you know whether it was completed or whether it failed etc so we can send messages back in the video we're going to be going over remote functions and we're gonna be doing a demonstration to show you how they work as well and how they would work in in a roblox game like certain use cases so let's get straight into it so I've got a rocket here credit two darkened and an eternity by the way for the model which are found in the toolbox this rocket we're gonna make it go to space okay and what we want to do is we want to only launch this rocket if a player knows the code okay so only certain players will be able to launch it so you'll need you need the code now what we'll do now we've already got the script to launch the rocket okay it's somewhere in this model but we're not gonna learn how to actually you know get into the scripting of launching a rocket but I've set this rocket up so that this value called launcher if we just change it to true or false it doesn't matter if we just change it change its value then the rocket will all lift off okay so what I've got here in our local scripts in this rocket launch GUI I've got a text box and a tap and a text button called launch button so when the user inputs their their code in this box okay and then they click launch we're going to launch this rocket but we've got a check to see whether the code is crew now we'll go into this local script and this is what I currently have now there are a couple of issues with this code the first issue is that because we are trying to fire the rocket from the client and we have failed to enable turned on these we're going to we're going to make this change on the server in the workspace but this change is only gonna it's only going to change for us okay because the server is going to see that we're trying to change the value of the launcher and then because filter enabled on it will prevent us from making that change okay I explained more about that in the previous video if you haven't checked it out I'll leave a card or put a link in the description so I'll show you if we go into the game here we go I'll just type in the code again 1 3 3 7 it says firing rocket so the local script has said it's fired but it's not going anywhere ok and if you go into the rocket model the launch of value is set to true on our end on the client okay but if we head to the server and this is the service copy of the game and this is what we this is what all the other players would have it is it should still be false yeah there we go it's still false ok and it wouldn't launch it would only it would only set the value to be true but because this these scripts that are in the rocket our server scripts and they run on the server the service copy is still set to false so it's not going to go anywhere so we have a problem we can't launch the rocket from the client so we're going to need to use a remote event or a remote function so which one do we use and this brings us to our second problem and this is that we are storing the code to launch the rocket in the local script and this is a really bad thing to do let me just change the text of our text let's here there we go and this is a really bad thing to do because anybody that doesn't know the code if we're storing it in a local script you know that local scripts they run on the players computer ok so the player runs the local script so this means that a player could and produce exploding software to view the local scripts ok and they could see aha the code is 1 3 3 7 and now they know what it is ok so that's what we don't want we don't want players to be able to exploit the game to find out what the code is so we're going to need to store the code on the server this is because if we store it on the server in a server script which runs on the server clients don't have access to to to those scripts ok so we're gonna have a script in server script service ok and we're also going to need a remote function but why do we need a remote function and not a remote event well I said a remote function returns information back to the client once we have triggered that remote function so an example would be if we put in the wrong code and then we checks whether the code was correct on the server if it was correct then we would launch the rocket on the server and then we could send information or message back to the local script to say that it was a success and then we could set the text of our textbox to say success launching rockets but if the code was wrong we could send a message from the server to the client saying that it was an incorrect code and that way we could display on the screen to our player that the code was wrong and they need to try again okay so the first thing we're going to tackle is checking whether the code is correct on the server and actually firing the rocket on the server so let's get rid of this if statement here and instead we're going to find our remote function now if you haven't got a remote function in your game yet click on the plus in replicating storage and then just type out remote function and just add one in there okay we're good at widget and keep it named right function because it's the only one we have in a in our game so we're gonna say at game don't replicate the storage dot remote function and then what we're going to do is instead of saying fire server we're going to invoke it okay so yeah if you want to trigger a remote function we say we invoke it so we say invoke server now what we're gonna do we need to pass our data to the server we need to tell the server what the client has inputted okay into the textbox and that will be the code obviously so as a parameter we're going to send to the server the contents of our textbox okay because the server actually can't access anything in the player GUI so we need to send that to to the server okay so we've put that as a parameter and that data is going to be sent to the server so now let's go into our server script and actually script how we're going to pick up this request okay this this invoke so in our server scripts let's just put service script here so you know what we're in so scripts and we'll do the same local scripts okay in our service script we are going to set up a listener okay similar to an event listener it's actually what I'm gonna bind our remote function so whenever that gets triggered we're gonna bind it to a function called a callback function I'm explain what one of those is soon so firstly we're gonna say game dot replicated storage dot remote function we put it in replicator storage so it can be viewed by both the server and the client so game don't replicate storage dot remote function now because we've invoked it from the client I'm picking it up on the server we just say dot on server invoke so when the server is invoked because on on the client we said invoke server so on server invoke what we do instead of saying Connect we just say equals function okay and we create a function just as you would in in a normal script if you're making a function to run code now this is called we're binding it to a function so whenever a whenever the remote event is invoked we bind it to this function and any code inside of this function will run whenever we invoke the server invoke that remote event now we've got our arguments the arguments are the data which we pass through the parameters remember we passed our code which the user inputted but we also passed the we also pass the name of the player automatically roblox passes that for us and we don't need to write it in our local script it just automatically pasts but the player comes always comes first on server so it will put our player in first our player argument and you can call these arguments whatever you want so it could be PLR it could be player player you could even say dog but we're gonna say player because that just makes the most sense and then the second one obviously it's going to be our code which they have inputted and that code is going to correspond to textbox dot text okay so now we've got our arguments what we need to do is we need to check to see whether the code is correct okay so we can just say if the code is equal to and then we're going to do a string okay because the text box text is always a string okay if even if it's a number that number is going to be in a string so the code which you want the player to use to launch the rocket you're going to put in here so we could put one three three seven I'm going to change it to one three three seven move just to be different so if the code is equal to one three three seven noob don't forget the two equal signs by the way because it's an if statement so if that is their correct code then we're gonna drop a line make sure that end is added in and then what we can do is we can launch the rocket by saying game dot work space dot rocket model and then we can say a dot launcher dot value equals true okay and again we only just setting it setting the launch of value because there are other scripts in this rocket which which will cause it to take off and what we've done here we've just launched the rocket and we can just do a print to say rocket launched so what we've done so far is the exact same as a remote event we have we have invoked it and fired it as we would with the remote event and we've picked up on the server and we've launched it now if we head into the game and we put in a different code it's not nothing's happening okay but if we put in one three three seven noob you can see it's started to shut the door and launch and if we head into the rocket model not only is it true the value is true for us on the client but it's also true on the server so all clients and the server will be seeing the same thing because they're launching of the rocket and the the setting of this fire too true has been done on the server in a server script this one here because it's been invoked by a remote function and the code was already written ok there we go we're going off in our rocket the code is already written in this script and we were just waiting for the remote function to be invoked by the client and so we've done exactly the same as a remote event but I told you that with the remote function we can return information back to the local script if you're not gonna return information back you might as well just use remote event but we're going to return back whether the code that they entered was the right one or if it was incorrect so if the code is equal to 1 3 3 7 noob then at the end of our at the end of this if statement just before the the end we're gonna say return and this is how we send messages back send information back you say return and the the data that comes after return gets sent back to the local script ok so we could return true ok if it was a success else if the code is wrong then we could return false ok it doesn't matter what you return you could return a string saying true or you could say return you could return correct code it's up to you you could write you could return anything but we're just gonna do true or false for now ok so we're returning that to our local script and it's going to send either true or false back to the local script here ok so returning just means to to send back a value in this case so we're sending back the value true or false to the local script so how do we pick up what we've returned ok we're back in our local script and I'm saying that you can return things but how do we actually get that information well what we do is we take this line of code the invoke invoke server and we're going to set it as a variable okay so local and then I'm gonna call it result so the result is what's going to be returned back so the result is equal to replicate storage remote function invoked server okay and when we do return something say it was returned to true then result would actually equal true okay so the the value that we return basically replaces this line of code okay the invoke server basically recently will return whether it's true or false and then if the result will either be equal to true or equal to false and just to prove this if we say print result here alright and we go and try again and we put in 1 337 new and click launch you can see it returned true but if we just type in something different it returns false okay so its return true or false and then it's been set as the results of variable and there we go it's printed it out so now we can do an if statement to say if results is equal to true then we could say launch button text is equal to success just 1 equals their else if it's if it's not true it's gonna be false we could say launch button text you cause it fail ok and do the same thing again we'll play the game we put in 1 3 3 says fail but if we do 1 3 3 7 new again it says success so it's just it's firing back a value to the local script from this from this server to basically say whether it was whether it was a success or not ok now this is only one use case for a remote function ok you can return back any data so let's say you had a load of items that in a shop which have stored on the server you could return back a table with information about those items like the name from the price and the the object if you wanted to use it like a viewport frame and I'll be making more videos on how that works with a remote function and in the future I do have some videos which do already use remote functions for things like shops such as my sword fight game series with a shop or the mining simulator shop on my channel but you don't have to return true or false again you could return success or you could return epic fail ok and you could say in the local script if result is equal to success as a string don't forget because we returned it as a string datatype because of those speech marks else if result is equal to epic fail then again it would say fail okay so that is how a remote function works okay it's the same as remote events okay it does an action on the server when you call it from a local script but the only difference is that a remote function will return some data to the local script if you're not returning any data use if you're not planning to use a remote event if you're planning on returning something back to the to the local script though like whether it was a success or not or also another example is if you're trying to buy something okay you always want to do the checking to see if they have enough money or deducting the money on the server so that can't be exported and then if the player doesn't have enough money you can return back to the local script to say that they haven't got enough or if they do have enough money you could return back saying it was a success and that they now have the item so if you aren't returning user remote events and also I need to tell you this a remote function yields okay yields okay that was pretty hard to say yields okay if you didn't know what I said yields okay what that means is if it yields then nothing nothing else in this local script is going to run until you have returned a value okay so if we called the right function here the local scripts going to stop until all of the code has been executed in the sell script until you've returned something okay so the script the local script won't continue until you have got something returned from the remote function okay and that's why the success text we're checking to see if resolve was equal to success but you can't do this if statement until you have something returned to your result value like a true or false value so remote function invokes server it yields and that just means that the script will stop at this line until something is returned back to the local scripts whereas a remote event wouldn't because it never returns anything okay so that is all for this video thanks for watching and I'll see you in another one if you have any suggestions filtering enabled content etc leave them in the comments down below I read them all and I'll take on your your feedback and your ideas if I can don't forget to use crater code album blocks when you buy Road books or builder's club don't forget to subscribe turn on the notification bow and again I'll see you guys in the next one thanks for watching
