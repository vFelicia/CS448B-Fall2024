With timestamps:

00:00 - - [AlvinBlox] In this
video I'll be showing you
00:01 - how to create your own
sword fight game on Roblox.
00:05 - So you can fight other players,
be the last one standing,
00:08 - earn rewards and much
more that will help you
00:11 - learn how to script.
00:12 - Now make sure you watch all this video,
00:14 - you don't wanna miss any of it
00:15 - 'cause I'm gonna be teaching you
00:16 - how you can make your first
game on Roblox with scripting
00:20 - and you'll be able to publish it
00:21 - and even potentially earn Robux
00:23 - so you don't wanna miss out on that.
00:25 - If you're new to my channel
make sure to subscribe
00:27 - and click on the notification bell
00:29 - (bell ringing)
00:30 - so you never miss out when
I upload a brand new video.
00:32 - To start off with what we're gonna do
00:34 - is we're gonna go and
click on "Baseplate".
00:38 - And this is gonna create a blank space
00:40 - where we can start making
our sword fight game.
00:43 - So wait for it to load and
then what we're gonna do
00:46 - is just click this tutorials away.
00:50 - And we also don't need this game window.
00:52 - The two windows that we
are gonna need though
00:54 - actually the three windows
that we're gonna need
00:56 - is the explorer which is over here,
01:00 - we're gonna need the properties tab
01:01 - and we're also gonna need the output.
01:04 - And we don't need the toolbox yet
01:05 - but we might be using it later on.
01:08 - So let's just go ahead
and make this full screen.
01:11 - And we can begin by
firstly creating a lobby
01:15 - for the players to stand in
when the game isn't running
01:19 - or if they get kicked out.
01:21 - So I'm just gonna scale
down the baseplate.
01:24 - And I'm gonna do this quite quickly
01:25 - 'cause it's quite simple
making the baseplate.
01:27 - And it doesn't have to be too good
01:30 - so we're just gonna go into the baseplate
01:32 - and we're gonna change
the top surface to smooth.
01:37 - And we can change the material as well.
01:40 - I'm just gonna change mine to pebble
01:44 - and we'll make it green.
01:47 - Okay so there's my lobby I'm
just gonna rename the baseplate
01:51 - to lobbybase and what I'm gonna do
01:54 - is I'm gonna insert a spawn
location on to this base.
01:58 - And what we're gonna do
is double-click the spawn
02:02 - to get rid of this decal.
02:04 - And then we're gonna make the
spawn location transparent
02:08 - and we're gonna set anchored to true
02:10 - and make sure CanCollide is false.
02:12 - So that the players can walk through it
02:14 - it doesn't look like a brick
which they will stand on.
02:18 - So what we're gonna do
02:20 - is we're gonna find the spawn location
02:22 - and we're just gonna
duplicate it a couple of times
02:24 - and place them around the lobby
02:25 - so there are lots of
different places to spawn.
02:28 - And once we've done that you can just
02:31 - group everything together
in the explorer tab
02:34 - by clicking on the first
one, holding down shift
02:37 - and clicking on the last item.
02:39 - Then you're gonna press control and G
02:41 - or command G if you're on a Mac.
02:44 - And we're gonna call this lobby.
02:47 - So if we go and spawn into the game
02:49 - we should land on our green lobby.
02:53 - Let's wait for it and there we go,
02:57 - we spawned on one of our spawns
02:59 - and there we go that's the lobby complete.
03:02 - Next thing that we're gonna need to do
03:03 - is we're gonna need to make a map
03:05 - for the players to fight on.
03:06 - So because this is a sword fight game
03:08 - we will do two maps and
then we'll be able to script
03:12 - so that the game will
randomly choose one map
03:15 - out of the two each round.
03:17 - So let's get started
by making a desert map.
03:21 - So we're inserting a part
I'm just gonna make it
03:23 - quite long and quite wide as well
03:27 - so that there's enough
space to walk around in.
03:29 - We change the color first
to a light, pale yellow.
03:39 - And then we're gonna change the material
03:41 - to let's have a look, we'll do sand.
03:45 - And let's go and add some walls
03:48 - so the player can't fall off the map.
03:52 - We're just gonna make them
quite simple, drag them along.
03:55 - (computer mouse clicking)
03:57 - Woops.
03:59 - We'll drag that again.
04:01 - (computer mouse clicking)
(bell ringing)
04:03 - Just over here.
04:06 - And then we're gonna
just scale the wall up
04:10 - so that they can't jump over it.
04:12 - And then we're gonna duplicate it
04:13 - with control D or command D.
04:15 - I'm gonna drag it over to the other side.
04:20 - Like this.
04:23 - Here we go.
04:24 - And then we're just gonna
take both of these walls,
04:26 - select them, duplicate them again.
04:29 - Let's just turn off collisions
04:30 - so that they don't spawn on top.
04:33 - So we've made a duplicate
and now I'm pressing
04:35 - control R to rotate them.
04:37 - So now we have our border
walls surrounding the map.
04:41 - What we want to do is we
want to change the name
04:44 - to border wall, in fact let's
just select all of the walls
04:49 - apart from the base and
call them border wall.
04:54 - We're gonna set transparency to one,
04:56 - make sure they're anchored
and we're also gonna set
04:59 - CanCollide to true so that the players
05:01 - they can't basically walk through them.
05:04 - Okay, let's just move this wall back
05:07 - because it's not at the edge of the base.
05:12 - Like that and let's just
check the other wall.
05:15 - Make sure that that is
at the edge of the base.
05:18 - There we go.
05:21 - Let's do this a little bit
more, there we go, oops.
05:24 - (computer mouse clicking)
05:27 - Okay so we've got the walls all in place.
05:31 - So we can suck them again
05:33 - and make sure transparency is set to one.
05:36 - Woops we don't wanna do that to the base,
05:37 - we wanna keep the base transparency zero.
05:40 - But now if we go and click play here
05:43 - and we spawn in our map
we shouldn't be able
05:48 - to fall off the edge.
05:51 - Okay, we didn't spawn on the
map, let's try that again.
05:56 - Clicking play here and I
know the base is not anchored
06:00 - so we need to anchor the base
06:02 - and so it doesn't fall of the
map and we can stand on it.
06:04 - So anchored just means that it's locked
06:06 - and it won't fall down.
06:08 - So here we go, we're in our
map and let's just go and walk
06:11 - to the edge of the map
and try and jump off.
06:15 - And you can see we can't walk off,
06:16 - we're restricted by the
walls that we just made.
06:20 - Okay, so that is the map,
06:23 - let's just go into the
toolbox and add some cacti
06:26 - from free models, you can build
them yourself if you want.
06:30 - You can make your map look
much better than mine,
06:32 - I'm just gonna insert some cacti.
06:34 - (squeaking)
06:42 - And we can also get rid
of this little plant.
06:44 - So we just want this
cactus let's just make sure
06:46 - there's nothing bad in
side of these parts.
06:49 - Nope they all look good.
06:50 - So I'm gonna take the cactus
and we're just gonna duplicate
06:54 - and move them around the map.
06:58 - Okay there we go.
06:59 - So what I'm gonna do is I'm
just gonna select the floor
07:02 - and change the name to
floor so we know what it is.
07:05 - Then I'm gonna select
everything on our map
07:09 - and I'm gonna go press
control G or command G
07:12 - on a Mac to group all together.
07:14 - And we're gonna call this desert map.
07:17 - Now we just need to add
some spawns into this map.
07:20 - So it's not gonna be a spawn location
07:23 - because a spawn location puts you
07:25 - back on that spawn when you reset.
07:27 - But we want to put our players on a spawn
07:30 - in the map when the game's starting.
07:33 - So we're gonna insert some basic parts
07:35 - and later on we'll use these
07:36 - to teleport the player onto the map.
07:39 - So we're gonna just create our part,
07:41 - we're just gonna part name to spawn part
07:46 - or let's call it SpawnPoint.
07:50 - We're gonna make sure it's anchored,
07:51 - we're gonna set CanCollide to false
07:53 - so that they can walk through it.
07:54 - And we're gonna set transparency to one.
07:58 - Now what we can do is do
the same as we did earlier
08:01 - and duplicate the spawns,
and move them around the map.
08:04 - You wanna make sure you have
enough spawns for all players
08:06 - in your game to be teleported
to a different one.
08:09 - 'cause you done want
people to be teleported
08:11 - to the same spawn 'cause then
there would be spawn kill.
08:15 - And you also want it to be random
08:16 - so you don't know where
you're gonna spawn next.
08:19 - So I've added a few
SpawnPoints into my game.
08:21 - I've got let's see, two, four,
six, eight, 11, we've got 11.
08:27 - So I'm gonna just select
all of my SpawnPoints.
08:30 - Press control G and I'm gonna
call this model SpawnPoints.
08:35 - (typing on keyboard)
08:37 - Remember I'm calling it
SpawnPoints with a capital S and P
08:40 - so make sure that yours is
exactly the same as mine.
08:44 - And then what we're gonna do
08:45 - is we're gonna take
these SpawnPoints model
08:47 - and we're just gonna drag
it inside our desert map.
08:51 - So each map needs to have
a model called SpawnPoints
08:55 - and inside that model there's going to be
08:58 - lots of SpawnPoint parts
09:00 - where the player could be teleported to.
09:02 - If you don't have SpawnPoints in your map
09:04 - it's not going to work.
09:06 - So now that we've got our
first map what we're gonna do
09:09 - is drag it into ServerStorage
09:12 - and we're gonna create a folder
09:13 - in ServerStorage called maps.
09:16 - So just click on the plus, type in folder,
09:18 - press enter and name this maps.
09:22 - Then we're gonna drag our
desert map into that folder
09:25 - and I know we said we'll be doing two maps
09:27 - but we'll just do one for now,
09:29 - and if it works we might
add a second one later on.
09:32 - So now that we've got our maps in there
09:34 - we just need to do one last
thing and insert a sword.
09:37 - Now to keep this series short
09:39 - I'm going to use a
sword created by Roblox.
09:43 - Now you can find this by
typing sword in the toolbox
09:47 - and finding one but
most of them don't work
09:49 - and some of them are outdated.
09:51 - So what I'll do is I'll put a link
09:53 - to the model for this
sword in the description.
09:55 - You can take it and then go to my models
09:58 - and you'll be able to insert it.
10:00 - So I'm just gonna copy it
in and I'm gonna paste it.
10:04 - Now this is the sword that
we're going to be using.
10:06 - I'm gonna take this sword
10:07 - and I'm gonna drag it into ServerStorage.
10:09 - Now that we've done that what
we can do is we can begin
10:13 - by creating a leaderboard for our players.
10:15 - So let's go to server script service,
10:18 - click on script and then we're
gonna name the script, stats.
10:22 - So what we want to do here is
we want to create an event.
10:26 - An event will listen out
for something to happen
10:30 - and when that specific thing happens
10:32 - it will fire some code in a function.
10:35 - So what we want to do is we want to wait
10:38 - until someone's joined the game.
10:40 - So game.Players.PlayerAdded:Connect
(function[]
10:50 - and drop a line.
10:52 - Now I just need to say your code
10:54 - needs to look exactly like mine
10:56 - 'cause if it doesn't then
the script isn't gonna work
10:58 - because this is scripting language.
11:01 - Lua is really picky and if
you spell something wrong
11:04 - or forget to have a capital letter
11:06 - then it's gonna throw
an error in the output.
11:08 - So if you see an error
make sure to double-check
11:10 - your script against mine
11:12 - 'cause you've probably made a mistake.
11:14 - So this is gonna run any code inside of it
11:17 - when someone joins the game.
11:18 - Now we want to have a
parameter here of player.
11:22 - This player here, this word player,
11:25 - we're talking about the player
that's gonna enter the game
11:27 - so any player that enters
the game, whatever we do
11:30 - to this player instance
here we're gonna do
11:33 - to the player that joins the game.
11:34 - So if we give player 100
cash, we're gonna give
11:37 - every player that joins
the game a 100 cash.
11:39 - So what we want to do is we
want to create some leaderstats
11:43 - so to create a leaderboard at
the top right of our screen
11:46 - we have to create a folder
11:47 - called leaderstats in the player.
11:49 - So we can say local leaderstats
11:51 - equals instance dot new folder like this.
11:56 - Leaderstats dot name equals leaderstats.
12:00 - Now leaderstats has to be in lowercase
12:02 - or else the leaderboard won't pop up.
12:05 - And we're just gonna parent
this leaderstats folder
12:08 - (typing on keyboard)
12:11 - so that it lives inside
of the players object.
12:14 - So each player will have their own folder
12:16 - called leaderstats.
12:18 - Now inside of that
folder were gonna create
12:20 - a currency called cash,
so we can say local,
12:25 - well you can call it whatever you want,
12:27 - you could call it cash, you
could call it bucks, coins.
12:30 - Actually let's go and call it bucks
12:32 - because that sounds quite cool.
12:33 - So local bucks equals Instance.new
12:36 - and it's gonna be an IntValue
'cause it's an integer
12:39 - so a whole number and
then we're gonna say,
12:42 - bucks.Name equals bucks.
12:46 - And we can set the value
of bucks for now to zero.
12:51 - So any player that joins the game
12:53 - will start off with zero bucks.
12:55 - Now in the future I'm
gonna do a video on how
12:57 - to save your currency and
we're gonna be giving them
12:59 - a default value when they join
13:01 - so maybe 50 cash when they join.
13:04 - But if they've already got saved
data we will load that data
13:07 - so make sure that you are subscribed
13:09 - and you've liked the video so
that you're ready for that.
13:11 - So what we need to do now
13:14 - is parent the bucks to the leaderstats.
13:16 - So any currency value
inside of leaderstats
13:20 - is gonna show up on the leaderboard.
13:23 - So let's go ahead and play our game again
13:27 - and see if we have some leaderstats.
13:29 - So there you go, you
can see in the top right
13:31 - we've got our leaderboard
13:33 - and it's counting the currency bucks.
13:36 - And you can see in our player
13:37 - we've got a folder called leaderstats
13:39 - and inside of that folder we've got bucks.
13:42 - Now if we change the name
of our bucks to points
13:45 - you can see nothing updates.
13:47 - Now that's because we set in the script
13:50 - for it to be called bucks and
you won't see that change.
13:53 - But if we change the
value of bucks to say 500
13:56 - you can see that we now have 500 bucks.
14:00 - So we can change the value
of bucks and that will update
14:02 - but if we change the name
of the actual IntValue
14:07 - it's not gonna update on the leaderboard.
14:09 - So we've got our bucks
working perfectly fine
14:12 - and what we can do now is begin scripting
14:15 - our sword fight game.
14:17 - So what we're gonna do,
we're gonna click on the plus
14:19 - in server script service again
14:21 - and we're gonna insert a script
14:23 - and we're gonna call
this script main script.
14:28 - So this is where we're gonna
do all the game coding,
14:31 - all of the logic to see if someone's won,
14:35 - or someone's killed someone,
14:37 - that's all gonna happen here.
14:38 - So the first thing we need to do
14:40 - is we need to create some variables.
14:42 - So we're gonna start off
by creating a variable
14:45 - in fact let's do little comment.
14:47 - So a comment basically lets you know,
14:49 - you can write what's happening
14:51 - and the script will ignore it
14:52 - so just a comment for yourself.
14:54 - So define variables, so a
variable just holds data.
14:58 - In this case we're gonna
hold the path to a service
15:02 - so we don't have to keep saying
the name to get to that path
15:05 - so local ReplicatedStorage to begin with
15:10 - equals game:GetService ReplicatedStorage.
15:15 - Now what's ReplicatedStorage
and what's it used for?
15:18 - So ReplicatedStorage,
anything inside of it
15:21 - gets replicated to the player
15:24 - so that it can be seen by
all the players in the game
15:27 - and it can be seen by the server
15:29 - which is where the scripts run.
15:31 - So inside of there we're gonna
gave things like the status,
15:35 - status value which we'll use
to update the GUI at the top
15:39 - which usually says intermission
or something like that.
15:41 - And so that's where that's gonna go.
15:43 - We're also gonna need the ServerStorage
15:45 - and as you've seen already,
15:47 - ServerStorage is where the sword goes
15:50 - and also where the maps are.
15:52 - And that's only visible to the server
15:54 - so any players won't be able to see that
15:56 - so that they can't exploit the game.
15:59 - So game GetService
ServerStorage like that.
16:03 - We're also just gonna create
a variable for our MapsFolder.
16:06 - So we can say local MapsFolder
equals ServerStorage
16:12 - and then we need to
wait in case that folder
16:15 - hasn't been loaded into the game yet
16:17 - so in case the script is running
16:18 - before the folder has been added.
16:21 - So we can say colon
WaitForChild and that will wait
16:25 - until that folder's into the game.
16:27 - So we can just say maps
because that's the name
16:29 - of the folder over here.
16:32 - We're then gonna wanna create a variable
16:34 - which is for our status value.
16:36 - Now we haven't added that yet
16:38 - so let's go ahead and do that now.
16:40 - So we're gonna go into ReplicatedStorage
16:43 - and insert a string value
16:45 - and this string value is
gonna be called status.
16:48 - Now you might have seen in some games
16:51 - that you have a nice, little banner
16:54 - at the top of your game and it gives you
16:57 - information about the
game usually it will say
17:00 - intermission when a new
game is about to load,
17:02 - it might show you how long's left.
17:05 - So our main script,
there's gonna be a value
17:08 - in ReplicatedStorage
which all players can see
17:12 - and this value we're gonna
update it in the main script
17:16 - and all players in the
game are gonna have a GUI
17:19 - on their screen which will listen out
17:22 - to see if that value's been
updated with new information.
17:25 - And if it has it will
relay that information
17:28 - to all the players.
17:29 - You'll see how this works
later on but for now
17:31 - we're just gonna insert this value
17:33 - and we're gonna update
it in the main script
17:36 - and then later on we're
gonna design our GUI
17:38 - and make it so that it picks up
17:40 - the information from this value.
17:42 - So go back into the main script here
17:44 - and what we're gonna do
is we're gonna create
17:46 - our status value now that
we've added the value in.
17:49 - So local Status equals ReplicatedStorage
17:52 - and once again it might
not be in the game yet
17:55 - so we have to say colon
WaitForChild status.
17:59 - Now because these
scripts run straight away
18:02 - when the game server is created
18:04 - so there might be a bit
of lag or something.
18:06 - And so we need to make sure
all the objects in our game
18:09 - are loaded in before we
start running the game.
18:12 - Last variable for now, we're
just gonna call it GameLength.
18:15 - So this is in seconds,
18:17 - how long you want each game to last for.
18:19 - I'm gonna set mine to 50 seconds.
18:22 - So this is just the
amount of time in a game
18:25 - until all players are wiped
out in case there's no winner
18:28 - 'cause this is gonna be a last
man standing sort of game,
18:31 - kinda like a battle royale.
18:33 - So last person standing wins
18:35 - but if there's more than one person left
18:38 - and 50 seconds have passed,
we're just gonna end the game.
18:41 - So what we're gonna do now is
we're gonna do the game loop.
18:44 - So this is just a repetitive loop
18:47 - that will run for ever and ever and ever
18:49 - until the game shuts
down loading up new games
18:52 - when another one's finished.
18:53 - So we can do a while loop here.
18:55 - So we can say while true
do and drop a few lines
18:59 - and you can see we've got this end here.
19:01 - So a while true do loop will
run any code inside of it
19:05 - forever until it either breaks
19:08 - because we've told it to break
19:10 - or if the condition at the top
19:13 - which is currently set to true is false.
19:15 - So let's say it was two
plus two equals four.
19:19 - That would run forever because
two plus two is equal to four
19:22 - but if it was equal to
five this would never run
19:25 - because two plus two is
never gonna be equal to five.
19:28 - So instead of just
setting it to a condition
19:30 - if we want it to run no matter what
19:32 - we can just set it to true.
19:34 - So what we want to do is we want to check
19:36 - to see if there were
enough players in the game.
19:38 - So we can say when it begins we can say
19:41 - waiting for enough players.
19:44 - Now this is what the status is gonna show
19:46 - if not enough players are in the game
19:48 - because we need two or more
players for this game to work
19:52 - else if there's only
one player in the game
19:54 - they're always gonna win
19:56 - so we have to wait for enough players.
19:58 - So we're gonna set the status to this
20:01 - and we're just gonna repeat this.
20:03 - We're just gonna repeat this line of code
20:06 - we're gonna repeat it until
we give it a wait as well.
20:10 - Repeat wait until game.Players.NumPlayers
20:15 - is greater than or equal to two.
20:18 - Now game.Players.NumPlayers so number
20:21 - automatically updates with
number of players in the game
20:23 - and if it's less than or equal to two
20:27 - then it's just gonna keep
showing this status value.
20:31 - But if it isn't, until
it becomes greater than
20:33 - or equal to two we can
do any code after it.
20:37 - In fact let's just add a wait one in here
20:39 - 'cause it's not very good
to just have a small wait
20:42 - 'cause a wait is 0.3 seconds.
20:45 - So if we're running this all the time
20:46 - it's gonna make the script less efficient.
20:49 - So what we can do now
is set the status value
20:53 - to Intermission because now
that there's enough players
20:55 - in the game we can have a little delay
20:59 - until the next game begins.
21:00 - And we can do this for about
five seconds, maybe 10 seconds.
21:05 - So now that all players are in the game
21:08 - and we're ready to go, we
can begin by creating a table
21:12 - and putting all players in
the game at that time into it.
21:15 - So we're gonna call
this table local players
21:19 - equals and then we can in
fact let's call it plrs,
21:23 - just a shortened version of players.
21:25 - I'll pronounce it as
players, this is a table,
21:28 - we're gonna put all the
players in the game in it
21:30 - because if someone joins
midway through the game,
21:33 - we don't know if they
were part of the game
21:35 - when it started or they've just joined.
21:37 - So that's why we do this.
21:39 - So we want to loop through
every single player in the game.
21:42 - So to do that we can use a for loop.
21:44 - So for i, player in pairs
(game.Player:GetPlayers
21:50 - with a pair of brackets after that, do.
21:54 - So for each player in the game,
21:56 - if the player's there
then we want to add them
22:00 - to that table by saying table.insert
22:03 - then give them the name of the
table which can be players.
22:06 - And we want to insert
that player into the table
22:09 - and player is the current player
that we're looping through
22:12 - so we're just gonna add
that player into the table.
22:14 - So we're just going to add
each player into players table
22:20 - and then outside of
here we're just gonna do
22:22 - a wait two seconds so that the player
22:25 - can see what's going on
22:27 - and so that everything
doesn't happen straight away.
22:31 - Now the next thing that
we're gonna need to do
22:33 - is select a map from the map folder,
22:38 - randomly select one and
then load it into the game.
22:41 - And we'll do part two
so make sure you click
22:43 - the thumbnail on your screen
now so that you can go
22:46 - and watch the next part in this series.
22:49 - And don't forget to click
on the Alvin Blox logo
22:51 - to your left on screen
now or below the video
22:54 - so that you subscribe to my channel.
22:56 - And turn on the notification bell
22:58 - so you never miss out on when I upload
23:00 - a new Roblox scripting tutorial.

Cleaned transcript:

[AlvinBlox] In this video I'll be showing you how to create your own sword fight game on Roblox. So you can fight other players, be the last one standing, earn rewards and much more that will help you learn how to script. Now make sure you watch all this video, you don't wanna miss any of it 'cause I'm gonna be teaching you how you can make your first game on Roblox with scripting and you'll be able to publish it and even potentially earn Robux so you don't wanna miss out on that. If you're new to my channel make sure to subscribe and click on the notification bell (bell ringing) so you never miss out when I upload a brand new video. To start off with what we're gonna do is we're gonna go and click on "Baseplate". And this is gonna create a blank space where we can start making our sword fight game. So wait for it to load and then what we're gonna do is just click this tutorials away. And we also don't need this game window. The two windows that we are gonna need though actually the three windows that we're gonna need is the explorer which is over here, we're gonna need the properties tab and we're also gonna need the output. And we don't need the toolbox yet but we might be using it later on. So let's just go ahead and make this full screen. And we can begin by firstly creating a lobby for the players to stand in when the game isn't running or if they get kicked out. So I'm just gonna scale down the baseplate. And I'm gonna do this quite quickly 'cause it's quite simple making the baseplate. And it doesn't have to be too good so we're just gonna go into the baseplate and we're gonna change the top surface to smooth. And we can change the material as well. I'm just gonna change mine to pebble and we'll make it green. Okay so there's my lobby I'm just gonna rename the baseplate to lobbybase and what I'm gonna do is I'm gonna insert a spawn location on to this base. And what we're gonna do is doubleclick the spawn to get rid of this decal. And then we're gonna make the spawn location transparent and we're gonna set anchored to true and make sure CanCollide is false. So that the players can walk through it it doesn't look like a brick which they will stand on. So what we're gonna do is we're gonna find the spawn location and we're just gonna duplicate it a couple of times and place them around the lobby so there are lots of different places to spawn. And once we've done that you can just group everything together in the explorer tab by clicking on the first one, holding down shift and clicking on the last item. Then you're gonna press control and G or command G if you're on a Mac. And we're gonna call this lobby. So if we go and spawn into the game we should land on our green lobby. Let's wait for it and there we go, we spawned on one of our spawns and there we go that's the lobby complete. Next thing that we're gonna need to do is we're gonna need to make a map for the players to fight on. So because this is a sword fight game we will do two maps and then we'll be able to script so that the game will randomly choose one map out of the two each round. So let's get started by making a desert map. So we're inserting a part I'm just gonna make it quite long and quite wide as well so that there's enough space to walk around in. We change the color first to a light, pale yellow. And then we're gonna change the material to let's have a look, we'll do sand. And let's go and add some walls so the player can't fall off the map. We're just gonna make them quite simple, drag them along. (computer mouse clicking) Woops. We'll drag that again. (computer mouse clicking) (bell ringing) Just over here. And then we're gonna just scale the wall up so that they can't jump over it. And then we're gonna duplicate it with control D or command D. I'm gonna drag it over to the other side. Like this. Here we go. And then we're just gonna take both of these walls, select them, duplicate them again. Let's just turn off collisions so that they don't spawn on top. So we've made a duplicate and now I'm pressing control R to rotate them. So now we have our border walls surrounding the map. What we want to do is we want to change the name to border wall, in fact let's just select all of the walls apart from the base and call them border wall. We're gonna set transparency to one, make sure they're anchored and we're also gonna set CanCollide to true so that the players they can't basically walk through them. Okay, let's just move this wall back because it's not at the edge of the base. Like that and let's just check the other wall. Make sure that that is at the edge of the base. There we go. Let's do this a little bit more, there we go, oops. (computer mouse clicking) Okay so we've got the walls all in place. So we can suck them again and make sure transparency is set to one. Woops we don't wanna do that to the base, we wanna keep the base transparency zero. But now if we go and click play here and we spawn in our map we shouldn't be able to fall off the edge. Okay, we didn't spawn on the map, let's try that again. Clicking play here and I know the base is not anchored so we need to anchor the base and so it doesn't fall of the map and we can stand on it. So anchored just means that it's locked and it won't fall down. So here we go, we're in our map and let's just go and walk to the edge of the map and try and jump off. And you can see we can't walk off, we're restricted by the walls that we just made. Okay, so that is the map, let's just go into the toolbox and add some cacti from free models, you can build them yourself if you want. You can make your map look much better than mine, I'm just gonna insert some cacti. (squeaking) And we can also get rid of this little plant. So we just want this cactus let's just make sure there's nothing bad in side of these parts. Nope they all look good. So I'm gonna take the cactus and we're just gonna duplicate and move them around the map. Okay there we go. So what I'm gonna do is I'm just gonna select the floor and change the name to floor so we know what it is. Then I'm gonna select everything on our map and I'm gonna go press control G or command G on a Mac to group all together. And we're gonna call this desert map. Now we just need to add some spawns into this map. So it's not gonna be a spawn location because a spawn location puts you back on that spawn when you reset. But we want to put our players on a spawn in the map when the game's starting. So we're gonna insert some basic parts and later on we'll use these to teleport the player onto the map. So we're gonna just create our part, we're just gonna part name to spawn part or let's call it SpawnPoint. We're gonna make sure it's anchored, we're gonna set CanCollide to false so that they can walk through it. And we're gonna set transparency to one. Now what we can do is do the same as we did earlier and duplicate the spawns, and move them around the map. You wanna make sure you have enough spawns for all players in your game to be teleported to a different one. 'cause you done want people to be teleported to the same spawn 'cause then there would be spawn kill. And you also want it to be random so you don't know where you're gonna spawn next. So I've added a few SpawnPoints into my game. I've got let's see, two, four, six, eight, 11, we've got 11. So I'm gonna just select all of my SpawnPoints. Press control G and I'm gonna call this model SpawnPoints. (typing on keyboard) Remember I'm calling it SpawnPoints with a capital S and P so make sure that yours is exactly the same as mine. And then what we're gonna do is we're gonna take these SpawnPoints model and we're just gonna drag it inside our desert map. So each map needs to have a model called SpawnPoints and inside that model there's going to be lots of SpawnPoint parts where the player could be teleported to. If you don't have SpawnPoints in your map it's not going to work. So now that we've got our first map what we're gonna do is drag it into ServerStorage and we're gonna create a folder in ServerStorage called maps. So just click on the plus, type in folder, press enter and name this maps. Then we're gonna drag our desert map into that folder and I know we said we'll be doing two maps but we'll just do one for now, and if it works we might add a second one later on. So now that we've got our maps in there we just need to do one last thing and insert a sword. Now to keep this series short I'm going to use a sword created by Roblox. Now you can find this by typing sword in the toolbox and finding one but most of them don't work and some of them are outdated. So what I'll do is I'll put a link to the model for this sword in the description. You can take it and then go to my models and you'll be able to insert it. So I'm just gonna copy it in and I'm gonna paste it. Now this is the sword that we're going to be using. I'm gonna take this sword and I'm gonna drag it into ServerStorage. Now that we've done that what we can do is we can begin by creating a leaderboard for our players. So let's go to server script service, click on script and then we're gonna name the script, stats. So what we want to do here is we want to create an event. An event will listen out for something to happen and when that specific thing happens it will fire some code in a function. So what we want to do is we want to wait until someone's joined the game. So game.Players.PlayerAddedConnect (function[] and drop a line. Now I just need to say your code needs to look exactly like mine 'cause if it doesn't then the script isn't gonna work because this is scripting language. Lua is really picky and if you spell something wrong or forget to have a capital letter then it's gonna throw an error in the output. So if you see an error make sure to doublecheck your script against mine 'cause you've probably made a mistake. So this is gonna run any code inside of it when someone joins the game. Now we want to have a parameter here of player. This player here, this word player, we're talking about the player that's gonna enter the game so any player that enters the game, whatever we do to this player instance here we're gonna do to the player that joins the game. So if we give player 100 cash, we're gonna give every player that joins the game a 100 cash. So what we want to do is we want to create some leaderstats so to create a leaderboard at the top right of our screen we have to create a folder called leaderstats in the player. So we can say local leaderstats equals instance dot new folder like this. Leaderstats dot name equals leaderstats. Now leaderstats has to be in lowercase or else the leaderboard won't pop up. And we're just gonna parent this leaderstats folder (typing on keyboard) so that it lives inside of the players object. So each player will have their own folder called leaderstats. Now inside of that folder were gonna create a currency called cash, so we can say local, well you can call it whatever you want, you could call it cash, you could call it bucks, coins. Actually let's go and call it bucks because that sounds quite cool. So local bucks equals Instance.new and it's gonna be an IntValue 'cause it's an integer so a whole number and then we're gonna say, bucks.Name equals bucks. And we can set the value of bucks for now to zero. So any player that joins the game will start off with zero bucks. Now in the future I'm gonna do a video on how to save your currency and we're gonna be giving them a default value when they join so maybe 50 cash when they join. But if they've already got saved data we will load that data so make sure that you are subscribed and you've liked the video so that you're ready for that. So what we need to do now is parent the bucks to the leaderstats. So any currency value inside of leaderstats is gonna show up on the leaderboard. So let's go ahead and play our game again and see if we have some leaderstats. So there you go, you can see in the top right we've got our leaderboard and it's counting the currency bucks. And you can see in our player we've got a folder called leaderstats and inside of that folder we've got bucks. Now if we change the name of our bucks to points you can see nothing updates. Now that's because we set in the script for it to be called bucks and you won't see that change. But if we change the value of bucks to say 500 you can see that we now have 500 bucks. So we can change the value of bucks and that will update but if we change the name of the actual IntValue it's not gonna update on the leaderboard. So we've got our bucks working perfectly fine and what we can do now is begin scripting our sword fight game. So what we're gonna do, we're gonna click on the plus in server script service again and we're gonna insert a script and we're gonna call this script main script. So this is where we're gonna do all the game coding, all of the logic to see if someone's won, or someone's killed someone, that's all gonna happen here. So the first thing we need to do is we need to create some variables. So we're gonna start off by creating a variable in fact let's do little comment. So a comment basically lets you know, you can write what's happening and the script will ignore it so just a comment for yourself. So define variables, so a variable just holds data. In this case we're gonna hold the path to a service so we don't have to keep saying the name to get to that path so local ReplicatedStorage to begin with equals gameGetService ReplicatedStorage. Now what's ReplicatedStorage and what's it used for? So ReplicatedStorage, anything inside of it gets replicated to the player so that it can be seen by all the players in the game and it can be seen by the server which is where the scripts run. So inside of there we're gonna gave things like the status, status value which we'll use to update the GUI at the top which usually says intermission or something like that. And so that's where that's gonna go. We're also gonna need the ServerStorage and as you've seen already, ServerStorage is where the sword goes and also where the maps are. And that's only visible to the server so any players won't be able to see that so that they can't exploit the game. So game GetService ServerStorage like that. We're also just gonna create a variable for our MapsFolder. So we can say local MapsFolder equals ServerStorage and then we need to wait in case that folder hasn't been loaded into the game yet so in case the script is running before the folder has been added. So we can say colon WaitForChild and that will wait until that folder's into the game. So we can just say maps because that's the name of the folder over here. We're then gonna wanna create a variable which is for our status value. Now we haven't added that yet so let's go ahead and do that now. So we're gonna go into ReplicatedStorage and insert a string value and this string value is gonna be called status. Now you might have seen in some games that you have a nice, little banner at the top of your game and it gives you information about the game usually it will say intermission when a new game is about to load, it might show you how long's left. So our main script, there's gonna be a value in ReplicatedStorage which all players can see and this value we're gonna update it in the main script and all players in the game are gonna have a GUI on their screen which will listen out to see if that value's been updated with new information. And if it has it will relay that information to all the players. You'll see how this works later on but for now we're just gonna insert this value and we're gonna update it in the main script and then later on we're gonna design our GUI and make it so that it picks up the information from this value. So go back into the main script here and what we're gonna do is we're gonna create our status value now that we've added the value in. So local Status equals ReplicatedStorage and once again it might not be in the game yet so we have to say colon WaitForChild status. Now because these scripts run straight away when the game server is created so there might be a bit of lag or something. And so we need to make sure all the objects in our game are loaded in before we start running the game. Last variable for now, we're just gonna call it GameLength. So this is in seconds, how long you want each game to last for. I'm gonna set mine to 50 seconds. So this is just the amount of time in a game until all players are wiped out in case there's no winner 'cause this is gonna be a last man standing sort of game, kinda like a battle royale. So last person standing wins but if there's more than one person left and 50 seconds have passed, we're just gonna end the game. So what we're gonna do now is we're gonna do the game loop. So this is just a repetitive loop that will run for ever and ever and ever until the game shuts down loading up new games when another one's finished. So we can do a while loop here. So we can say while true do and drop a few lines and you can see we've got this end here. So a while true do loop will run any code inside of it forever until it either breaks because we've told it to break or if the condition at the top which is currently set to true is false. So let's say it was two plus two equals four. That would run forever because two plus two is equal to four but if it was equal to five this would never run because two plus two is never gonna be equal to five. So instead of just setting it to a condition if we want it to run no matter what we can just set it to true. So what we want to do is we want to check to see if there were enough players in the game. So we can say when it begins we can say waiting for enough players. Now this is what the status is gonna show if not enough players are in the game because we need two or more players for this game to work else if there's only one player in the game they're always gonna win so we have to wait for enough players. So we're gonna set the status to this and we're just gonna repeat this. We're just gonna repeat this line of code we're gonna repeat it until we give it a wait as well. Repeat wait until game.Players.NumPlayers is greater than or equal to two. Now game.Players.NumPlayers so number automatically updates with number of players in the game and if it's less than or equal to two then it's just gonna keep showing this status value. But if it isn't, until it becomes greater than or equal to two we can do any code after it. In fact let's just add a wait one in here 'cause it's not very good to just have a small wait 'cause a wait is 0.3 seconds. So if we're running this all the time it's gonna make the script less efficient. So what we can do now is set the status value to Intermission because now that there's enough players in the game we can have a little delay until the next game begins. And we can do this for about five seconds, maybe 10 seconds. So now that all players are in the game and we're ready to go, we can begin by creating a table and putting all players in the game at that time into it. So we're gonna call this table local players equals and then we can in fact let's call it plrs, just a shortened version of players. I'll pronounce it as players, this is a table, we're gonna put all the players in the game in it because if someone joins midway through the game, we don't know if they were part of the game when it started or they've just joined. So that's why we do this. So we want to loop through every single player in the game. So to do that we can use a for loop. So for i, player in pairs (game.PlayerGetPlayers with a pair of brackets after that, do. So for each player in the game, if the player's there then we want to add them to that table by saying table.insert then give them the name of the table which can be players. And we want to insert that player into the table and player is the current player that we're looping through so we're just gonna add that player into the table. So we're just going to add each player into players table and then outside of here we're just gonna do a wait two seconds so that the player can see what's going on and so that everything doesn't happen straight away. Now the next thing that we're gonna need to do is select a map from the map folder, randomly select one and then load it into the game. And we'll do part two so make sure you click the thumbnail on your screen now so that you can go and watch the next part in this series. And don't forget to click on the Alvin Blox logo to your left on screen now or below the video so that you subscribe to my channel. And turn on the notification bell so you never miss out on when I upload a new Roblox scripting tutorial.
