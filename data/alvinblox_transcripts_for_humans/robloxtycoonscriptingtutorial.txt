With timestamps:

00:01 - in this miniseries I'm going to show you
00:03 - how to create a Tycoon on Roblox in 2024
00:07 - so first thing you want to do is click
00:09 - on the base plate over here uh we're
00:11 - just going to load up the simplest
00:12 - template that you can get for a Roblox
00:14 - game which is this Bas
00:17 - plate so I'm just going to close down
00:19 - these panels the only panels that you
00:21 - want to have open are the Explorer and
00:23 - the properties window which you can find
00:26 - up here in the top left corner so just
00:29 - make sure that Explorer and properties
00:30 - are selected and you'll be good to go so
00:33 - the very first thing that we want to do
00:35 - is we want to be able to assign a plot
00:38 - to a player um so I'm going to insert a
00:42 - part by clicking on this part button in
00:44 - the Home tab and then I'm just going to
00:47 - scale it so that it is the size of a
00:49 - plot which is typically around 100 studs
00:53 - so in the properties panel I'm going to
00:55 - set this to 100 by 1 by 100 Okay so here
01:00 - is our plot and I'm just going to drag
01:02 - it away from one of the spawn points uh
01:05 - I'm going to go back to the properties
01:06 - panel and I'm just going to name this
01:09 - plot and I'm going to make sure that the
01:12 - anchored box is checked so that it
01:14 - doesn't move around and uh can Collide
01:17 - we'll make sure that is also checked so
01:19 - that the player can collide with it okay
01:22 - so we've created a plot uh now let's
01:24 - just create a few more um because we
01:27 - obviously want multiple players in the
01:28 - game so so I'm just going to press
01:31 - contrl and D to duplicate them anytime I
01:35 - say uh control uh just use command if
01:38 - you're on a Mac okay so I've just
01:41 - duplicated these and we now have eight
01:44 - plots so you can now go to the Explorer
01:47 - panel and just select all of your plots
01:49 - here right click and choose group as a
01:52 - folder and then we're going to name this
01:55 - folder uh I'm just going to call it
01:57 - plots Okay so we've got all of our plots
02:00 - organized in here now what we're going
02:02 - to do is we're going to write some code
02:04 - um which will when when a player joins
02:07 - the game it will choose one of these
02:09 - plots that's available and it will mark
02:11 - it as being occupied okay so to do this
02:15 - let's go into the server script service
02:17 - and let's select script and then I'm
02:20 - just going to call this script plot
02:23 - Handler okay just so we know what it
02:25 - does and then in our script we are going
02:28 - to just create create a variable which
02:31 - will reference this plots um folder so
02:36 - we can say local plots equals game.
02:39 - workspace do plots okay because the
02:42 - plots folder is in the workspace it's
02:44 - good to just have a reference to this
02:46 - because we're going to be using it quite
02:47 - quite a lot um so we've just got it so
02:49 - we can easily say plots instead of gamew
02:52 - workpace dotplots all of the
02:54 - time uh now we need some code for when a
02:57 - player joins the game okay so this is
02:59 - just their comments I'm just going to
03:01 - leave a couple of these in the script so
03:02 - you know uh what each part of the code
03:05 - does it's like a note to self but we're
03:08 - going to say game do players do player
03:09 - added Cod on connect
03:12 - function and then we have a pair of
03:15 - brackets or parenthesis we've got our
03:17 - closing end tag here and we are going to
03:20 - have an argument which is going to be
03:22 - the player who joins so anything we do
03:24 - to this player argument here will be
03:27 - done to a new player who joins so what
03:29 - we want to do is we want to get a plot
03:31 - for
03:32 - them and there's going to be a plot
03:34 - available in our folder so we want to
03:38 - find the first plot that isn't
03:40 - taken and so what we're going to do is
03:42 - when we give a player a plot we're going
03:45 - to set an attribute of the specific plot
03:48 - so say we chose this plot for our player
03:50 - okay we need to mark it as being taken
03:53 - so that the next player can't take it
03:55 - and to do this we will set an attribute
03:57 - okay so what we're going to do is we're
03:59 - going going to set an attribute in this
04:01 - code which is going to be called taken
04:04 - so what we can do is we can just go back
04:08 - to our code here and we can say for uh
04:12 - underscore comma plot in plots colon get
04:16 - children do and this is going to Loop
04:19 - through every single plot in that folder
04:21 - and we want to firstly make sure it's
04:23 - not taken so we can say if uh if um plot
04:29 - colon get attribute
04:32 - taken
04:35 - okay then continue end and that is just
04:38 - going to skip over this specific plot
04:40 - it's just going to go straight to the
04:41 - next one because we've said this one
04:44 - don't even bother because it's taken
04:46 - okay and so if any code here is running
04:50 - then it means the plot is not taken so
04:52 - we want to we want to take it
04:55 - ourselves and so what we're going to do
04:57 - is we're going to say plot colon set
04:58 - attribute taken we're going to set it to
05:01 - true so we're now marking this plot as
05:04 - being taken so up here we're checking to
05:06 - see if it's already taken if it is we're
05:08 - just going to continue it's going to
05:09 - move on to the next one if it isn't
05:11 - taken not taken then it's just going to
05:14 - set it as being taken and we found our
05:16 - plot so uh what I'm also going to do is
05:20 - I'm going to set another attribute of
05:22 - this plot and I want to call it the
05:24 - owner right because we want to store the
05:27 - player who now owns this plot so we're
05:29 - going to say player. user ID we're just
05:32 - setting a value inside this plot inside
05:34 - its attribute uh attributes uh table
05:38 - just so we now know that yes this plot
05:39 - is taken and yes we know who owns this
05:42 - plot so the next thing is when a player
05:46 - leaves the game right we need to mark
05:48 - their plot as available again so we're
05:51 - just going to say game do
05:54 - players uh do player removing this
05:58 - time colon connect function player so we
06:03 - know which player left and same thing
06:06 - really we're going to Loop through that
06:08 - plots
06:09 - folder just like this and we want to
06:13 - check to see if the plot That We're
06:16 - looping through is owned by this
06:18 - specific player and if so we can say if
06:21 - plot get attribute
06:24 - owner um in fact we'll say yes so if
06:30 - plot get attribute owner if not get
06:33 - sorry so if not plot get attribute owner
06:36 - then continue end that means if it
06:39 - doesn't exist because the plot might not
06:42 - have an owner so if the code down here
06:46 - is running if it gets to this stage then
06:48 - the plot is owned by a player now we
06:51 - have to check that it's the specific
06:54 - player that's leaving the game to find
06:56 - their plot so if uh plot get attribute
07:02 - owner is not equal to the player. user
07:06 - ID then again we want to continue
07:09 - because it's not the specific player we
07:10 - want but if the code so I'm just going
07:12 - to scroll down for you as well cuz I
07:14 - know it's just coming off the screen and
07:16 - so if it gets to this point we know that
07:20 - we have found the correct plot so we're
07:23 - going to say plot set attributes
07:28 - taken and we're going to set that
07:31 - to um false you could set it to false or
07:35 - you could set it to nil it doesn't
07:36 - really
07:37 - matter
07:39 - um and we're going to say plot set
07:43 - attribute attribute owner uh let's just
07:47 - set them both to nil yeah because I
07:49 - think if we set it to nil it will remove
07:50 - the attribute so we have now written the
07:54 - code that is going to I'm just going to
07:56 - zoom out for you as well so we've now
07:58 - written the code which is going to um
08:01 - handle the giving and removing of plot
08:05 - when when player joins the game and we
08:07 - can just test this by saying print uh
08:10 - plot has been given to dot do player.
08:14 - name dott dot exclanation Mark if you
08:16 - wanted to and we can do the same down
08:19 - here plot has been
08:21 - removed uh from players. name and I
08:25 - think that should be good to go um we
08:27 - can give it a test
08:30 - so we just go to the um testing window
08:34 - up here in the top left corner click on
08:36 - test click on play and then we'll see
08:39 - what
08:42 - happens and we go to the output okay so
08:45 - it says uh plot has been given to Alvin
08:49 - unor blocks however it has printed that
08:51 - out eight times so what's happened here
08:54 - is it's looped through every single plot
08:56 - in the folder and it's given every
08:58 - single word to me uh we only wanted it
09:01 - to give one and that is because we
09:04 - didn't kill the loop so we have a let me
09:08 - just zoom out so we have two Loops here
09:11 - right and it's looping through every
09:12 - single plot so all of this code inside
09:14 - the loop will be done to every plot
09:17 - unless it is taken um but once we found
09:20 - our plot and we've given it to our
09:23 - specific player that joined we're just
09:24 - going to say break okay and that will
09:26 - that will kill the loop it will say
09:28 - right we've done everything we need you
09:29 - can just stop this now you can stop
09:31 - looping through any other the plots and
09:33 - we'll do the same thing down here so
09:34 - we'll just put a break we'll click on
09:36 - play again and this time you should only
09:40 - see that it has printed out once yeah
09:42 - it's only printed out once this time uh
09:45 - and if we go to our Explorer we have a
09:47 - look in the plots I'm just going to move
09:49 - the properties window alongside here um
09:52 - but as we just look at the attributes we
09:54 - can see the first plot has been given to
09:56 - us so the owner uh has my user ID which
09:59 - is 1494
10:01 - 3069 and the taken uh value is true and
10:05 - if we look at the other plots they don't
10:07 - have those attributes I just
10:09 - accidentally dragged one out there but
10:11 - yeah they don't have those attributes
10:12 - only one of them does so we have now
10:14 - been given a specific plot which is
10:17 - awesome um and the next uh thing that
10:20 - we're going to need to do is we are
10:22 - going to need to start working on things
10:24 - like setting up buttons and having
10:25 - things to buy so you can watch that
10:29 - by clicking on the thumbnail on the
10:31 - screen now and I'll see you there thanks
10:32 - for
10:34 - watching

Cleaned transcript:

in this miniseries I'm going to show you how to create a Tycoon on Roblox in 2024 so first thing you want to do is click on the base plate over here uh we're just going to load up the simplest template that you can get for a Roblox game which is this Bas plate so I'm just going to close down these panels the only panels that you want to have open are the Explorer and the properties window which you can find up here in the top left corner so just make sure that Explorer and properties are selected and you'll be good to go so the very first thing that we want to do is we want to be able to assign a plot to a player um so I'm going to insert a part by clicking on this part button in the Home tab and then I'm just going to scale it so that it is the size of a plot which is typically around 100 studs so in the properties panel I'm going to set this to 100 by 1 by 100 Okay so here is our plot and I'm just going to drag it away from one of the spawn points uh I'm going to go back to the properties panel and I'm just going to name this plot and I'm going to make sure that the anchored box is checked so that it doesn't move around and uh can Collide we'll make sure that is also checked so that the player can collide with it okay so we've created a plot uh now let's just create a few more um because we obviously want multiple players in the game so so I'm just going to press contrl and D to duplicate them anytime I say uh control uh just use command if you're on a Mac okay so I've just duplicated these and we now have eight plots so you can now go to the Explorer panel and just select all of your plots here right click and choose group as a folder and then we're going to name this folder uh I'm just going to call it plots Okay so we've got all of our plots organized in here now what we're going to do is we're going to write some code um which will when when a player joins the game it will choose one of these plots that's available and it will mark it as being occupied okay so to do this let's go into the server script service and let's select script and then I'm just going to call this script plot Handler okay just so we know what it does and then in our script we are going to just create create a variable which will reference this plots um folder so we can say local plots equals game. workspace do plots okay because the plots folder is in the workspace it's good to just have a reference to this because we're going to be using it quite quite a lot um so we've just got it so we can easily say plots instead of gamew workpace dotplots all of the time uh now we need some code for when a player joins the game okay so this is just their comments I'm just going to leave a couple of these in the script so you know uh what each part of the code does it's like a note to self but we're going to say game do players do player added Cod on connect function and then we have a pair of brackets or parenthesis we've got our closing end tag here and we are going to have an argument which is going to be the player who joins so anything we do to this player argument here will be done to a new player who joins so what we want to do is we want to get a plot for them and there's going to be a plot available in our folder so we want to find the first plot that isn't taken and so what we're going to do is when we give a player a plot we're going to set an attribute of the specific plot so say we chose this plot for our player okay we need to mark it as being taken so that the next player can't take it and to do this we will set an attribute okay so what we're going to do is we're going going to set an attribute in this code which is going to be called taken so what we can do is we can just go back to our code here and we can say for uh underscore comma plot in plots colon get children do and this is going to Loop through every single plot in that folder and we want to firstly make sure it's not taken so we can say if uh if um plot colon get attribute taken okay then continue end and that is just going to skip over this specific plot it's just going to go straight to the next one because we've said this one don't even bother because it's taken okay and so if any code here is running then it means the plot is not taken so we want to we want to take it ourselves and so what we're going to do is we're going to say plot colon set attribute taken we're going to set it to true so we're now marking this plot as being taken so up here we're checking to see if it's already taken if it is we're just going to continue it's going to move on to the next one if it isn't taken not taken then it's just going to set it as being taken and we found our plot so uh what I'm also going to do is I'm going to set another attribute of this plot and I want to call it the owner right because we want to store the player who now owns this plot so we're going to say player. user ID we're just setting a value inside this plot inside its attribute uh attributes uh table just so we now know that yes this plot is taken and yes we know who owns this plot so the next thing is when a player leaves the game right we need to mark their plot as available again so we're just going to say game do players uh do player removing this time colon connect function player so we know which player left and same thing really we're going to Loop through that plots folder just like this and we want to check to see if the plot That We're looping through is owned by this specific player and if so we can say if plot get attribute owner um in fact we'll say yes so if plot get attribute owner if not get sorry so if not plot get attribute owner then continue end that means if it doesn't exist because the plot might not have an owner so if the code down here is running if it gets to this stage then the plot is owned by a player now we have to check that it's the specific player that's leaving the game to find their plot so if uh plot get attribute owner is not equal to the player. user ID then again we want to continue because it's not the specific player we want but if the code so I'm just going to scroll down for you as well cuz I know it's just coming off the screen and so if it gets to this point we know that we have found the correct plot so we're going to say plot set attributes taken and we're going to set that to um false you could set it to false or you could set it to nil it doesn't really matter um and we're going to say plot set attribute attribute owner uh let's just set them both to nil yeah because I think if we set it to nil it will remove the attribute so we have now written the code that is going to I'm just going to zoom out for you as well so we've now written the code which is going to um handle the giving and removing of plot when when player joins the game and we can just test this by saying print uh plot has been given to dot do player. name dott dot exclanation Mark if you wanted to and we can do the same down here plot has been removed uh from players. name and I think that should be good to go um we can give it a test so we just go to the um testing window up here in the top left corner click on test click on play and then we'll see what happens and we go to the output okay so it says uh plot has been given to Alvin unor blocks however it has printed that out eight times so what's happened here is it's looped through every single plot in the folder and it's given every single word to me uh we only wanted it to give one and that is because we didn't kill the loop so we have a let me just zoom out so we have two Loops here right and it's looping through every single plot so all of this code inside the loop will be done to every plot unless it is taken um but once we found our plot and we've given it to our specific player that joined we're just going to say break okay and that will that will kill the loop it will say right we've done everything we need you can just stop this now you can stop looping through any other the plots and we'll do the same thing down here so we'll just put a break we'll click on play again and this time you should only see that it has printed out once yeah it's only printed out once this time uh and if we go to our Explorer we have a look in the plots I'm just going to move the properties window alongside here um but as we just look at the attributes we can see the first plot has been given to us so the owner uh has my user ID which is 1494 3069 and the taken uh value is true and if we look at the other plots they don't have those attributes I just accidentally dragged one out there but yeah they don't have those attributes only one of them does so we have now been given a specific plot which is awesome um and the next uh thing that we're going to need to do is we are going to need to start working on things like setting up buttons and having things to buy so you can watch that by clicking on the thumbnail on the screen now and I'll see you there thanks for watching
