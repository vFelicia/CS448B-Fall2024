welcome to coding with kids my name is Kalia my name is Andrew today I'm in edible so edibit is a coding platform where you can do all kinds of coding problems using different coding languages So today we're going to do three different easy coding challenges in edited so our first problem is called reverse psychology for this challenge you will not be given a string oh your task isn't to add the do not before the given stream if there is no given string you will not return do not do anything do not check the examples to know how to do this challenge there's a lot are available so this it says reverse psychology so this is also a really fun challenge because what it says you shouldn't do you you should do so for example here it says notes are available there are actually no notes so actually you will be given a string and your task is to add do not okay and if there is no given string you will return do not do anything so first when you have a function called reverse psychology with a variable called s so first we're going to do s equals do not do anything as a string because this will fix um if it gives you an empty string this that that will fix the problem so then if s is not do not do anything we're gonna return do not the string with a space plus s which is the string they gave us whatever task that is like then read yeah or like wash dishes dishes then we're going to add a period so we did s equals do not do anything because if you if they give you an empty string it will not change S equals do not do anything so here if it did change the S it will return do not whatever task then a period if it didn't change we're just going to return do not do anything because that is what we're supposed to return if there is if they don't give us a strict so for now we're going to check and see it test cases there's wash your dishes eat the lunch everybody should eat their lunch okay so we have a bug so we forgot to call and said we're just gonna add it and check it and see more test cases there's go to school do not go to school do not go to school okay if you want to be smart do not eat your lunch and then there is buy PC parts do not buy PC ports the computer is doing bad things yeah do not drink water we need water to live do your homework do not do your homework yes bad student so now we pass all the tests on to our next challenge so our next challenge is called say hello say bye write a function that takes a string name and a number num is which is which will be either zero or one and return hello plus the name if the number is one otherwise if the number is zero we're going to return buy plus the date so here will give us a name and then it'll also give us a number which is either one or zero and if it's a one we're gonna say we're gonna add hello if it's a zero we're gonna add a box so it's basically telling you hello or buy yeah so then notes the name you return must be capitalized where you see for you for example here it says Alon so here in the return string the a is capitalized so then we also have to capitalize it so it has right grammar so now we have a function called say Hello by we have two variables which is name and num so first we're going to do if number equals equals one so we need two equal signs because we're not assigning uh uh something to a variable so when you do two equal sides if number equals equals one which is hello we're going to do a variable called title equals name dot title to make to capitalize the first letter of the name so that's what the title function does then after we title the name just in case greeting equals hello so the string Hollow plus an empty space between the hollow and the name and then the name then uh else if the number is zero we're going to do titles equals new title so again we're going to title the name and then we're gonna do greeting equals by so we change it from Hello to buy and the space and then the name and then finally we're going to return the greetings so now we're in check it and see the test cases so here there's here's some uh names there's John John is out of H that's weird John bye John okay this is another by John oh that's the same except one of them the J is NOT capitalized yeah so you have to capitalize there's also Barry Jose and Matt okay so in now we passed all the tests onto our final coding challenge taxi Journey taxi Journey so this is actually a little hard for me so it says a taxi Journey costs three dollars for the cop for the first kilometer traveled however all kilometers traveled after that will cost two dollars each create a function which Returns the distance then the taxi must have traveled given the cost as a parameter so here you have to read the instructions really carefully return so our function needs to return the distance the taxi not the price so for example here it'll give us three which is three uh dollars that's only one mile uh one kilometer because the first kilometer is three dollars okay then here give us nine which is nine dollars which is four kilometers because the first one is three dollars then you have six dollars left and that's plus three then three plus one is four okay um okay code so we have a function called Journey distance with a variable called n which is the the price okay so first we do if n equals equals zero we're just going to return zero because in test cases the first one is zero so if they didn't if the um person didn't uh pay any money well not even a dollar then they didn't travel a kilometer okay yeah that means they might not have got the taxi or something yeah okay then uh if n has a number that is not zero then we're gonna do it we're gonna create a variable called some money equals n minus three so this is the price minus three because the first kilometer is three dollars okay then we're gonna do km which it stands for kilometer equals some money um divided by two so we're gonna add parentheses because we want to run this first okay so money some money that that's the money left divided by two and plus one so this some money divided by two will give us the amount of kilometers after the first kilometer then we're gonna do plus one because here in summary equals n minus three that's for the first kilometer because it's three dollars then finally we're going to return the number of kilometers the taxi must have traveled depending on the price now we're gonna go to tests so there is there is um 11 037 why would anybody pay that for a taxi Journey maybe because it must have been very long yes it's 5518 kilometers 99 which is 49 kilometers okay so now we've tested passed all the tests well that was fun and that's it for today thank you for watching Remember to smash the like button and subscribe bye bye