00:00 - welcome back to game development with
00:02 - pame this is part two of our platformer
00:05 - we're going to discuss player
00:08 - movement in the previous video we set up
00:10 - the template for our platform game uh
00:13 - with our game class set up with all of
00:16 - its pieces um sort of separated out so
00:19 - we can fill them in with the code we
00:20 - need uh as we build the different pieces
00:22 - of the
00:23 - game and so the first thing I'm going to
00:25 - do is I'm going to go over here to
00:27 - settings and I'm going to customize this
00:29 - a little bit to set up for what we need
00:31 - so I'm just going to name my game jumpy
00:34 - because I'm going to have a little jumpy
00:35 - character running around and I'm going
00:37 - to change the window size a little bit
00:39 - because it's kind of on the small side
00:41 - um and I'm just going to make it
00:44 - um I'm going to do 480 by 600 oops 600
00:49 - um and I'm going to set the fps to 60 so
00:52 - we have really smooth um movement all
00:56 - right so that's going to look like this
00:57 - this is called portrait mode
01:00 - um or portrait aspect ratio which means
01:03 - the the height is bigger than the width
01:05 - if we made the width bigger then it
01:07 - would be landscape mode um and that
01:09 - would be good for another type of game
01:12 - but I'm going to do it this way because
01:14 - we're going to you're going to see why
01:15 - as we get further along okay so now
01:18 - we're ready uh and the first thing we
01:19 - want to do is we want to get a player
01:20 - Sprite onto the
01:23 - screen now I could go in and start
01:26 - adding my um my Sprite class for the
01:30 - player right here but remember keeping
01:33 - with our theme of of keeping things
01:35 - organized um we're going to actually
01:37 - make a new file okay and we're going to
01:39 - make a new file called
01:42 - Sprites py okay and this is going to be
01:47 - Sprite classes
01:51 - for the platform game so in here is
01:54 - where we're going to put our Sprite
01:55 - classes and we're going to import that
01:57 - as well so over in our main we're just
02:00 - going to say from Sprites import
02:04 - Star now in the
02:07 - Sprite
02:08 - definitions we may want to use some of
02:12 - the constants that we have in our
02:13 - settings right we might add some
02:15 - settings here and in fact we will add
02:17 - some settings here so we're also in our
02:19 - Sprite classes going to import the
02:24 - settings so that we will have access to
02:26 - those variables so let's start with our
02:28 - class player
02:31 - and I'm going to do this uh oops and we
02:34 - better import py game or else we won't
02:37 - have uh we won't have the py game
02:41 - commands import py game as PG right and
02:47 - so now there's a few different ways we
02:50 - could
02:51 - do the Sprite and especially what I want
02:53 - to talk about in this video is how we're
02:56 - going to do the
02:58 - movement okay um
03:05 - um so there are a lot of different ways
03:08 - you can do
03:09 - movement and the options are pretty wide
03:14 - um some of them are going to feel better
03:15 - than others and depend on how you want
03:17 - your game to work so I'm going to start
03:18 - with really simple movement so we're
03:20 - going to make a we're going to make a
03:21 - really simple
03:25 - Sprite let's
03:27 - say uh 30 by4 40 and I'm going to say
03:32 - self. image. fill um I'm going to make
03:35 - him yellow did I put yellow in my
03:38 - colors I did
03:46 - not all right
03:49 - so so I've got some a yellow Sprite uh
03:53 - we need the the
03:58 - rectangle
04:00 - okay now one way we could do the
04:02 - movement is just like we did it in in
04:05 - the back in the schupp game where we had
04:08 - um velocity and the velocity is zero
04:11 - unless you push the key down and then
04:13 - the velocity is set to something so
04:15 - let's let's just start with that okay um
04:18 - so we have a VX and a VY right for the
04:22 - two directions and our update is just
04:25 - going to say VX equals z I'm going to
04:30 - just stick with X for now and not worry
04:31 - about the up and down movement and then
04:33 - we're just going to get check the key
04:35 - the key state to see which keys are
04:40 - down and then uh and then we can just
04:46 - see uh which one it is right so
04:50 - left would say VX equals
04:55 - minus5
04:57 - and pg. K right uh would say self. VX
05:03 - equals
05:04 - 5 moving our
05:08 - Sprite X Plus = VX
05:12 - and y
05:16 - +al v okay you can already see how this
05:19 - is kind of nice having the player in its
05:20 - own little file um keeps you from
05:23 - cluttering up this and having a lot of
05:25 - stuff to scroll through right so all we
05:27 - need to do to spawn our Sprite now is in
05:29 - our
05:32 - new section we're going to spawn a
05:38 - player and we're going to add
05:42 - it to the all Sprites
05:51 - group oops and of course I have gone
05:55 - ahead and written uh pame somewhere
05:58 - because we abbreviated it abbreviated
06:01 - that to PG so we wouldn't have to do
06:06 - that okay uh and I'm making lots of
06:10 - typos today self.
06:13 - player it's always
06:15 - easier to type things when you're not
06:18 - talking at the same time so let's go fix
06:22 - that
06:25 - uh oops and then we want to run it okay
06:28 - so now we can run
06:30 - and we have our Sprite okay and it can
06:32 - move side to
06:33 - side um it's up there in the corner
06:36 - because we didn't give it a place to
06:37 - start but you see what I mean by the by
06:39 - the the moving right it moves to the
06:41 - right and the instant I let go of the
06:43 - key it instantly
06:44 - stops and that's okay but it doesn't
06:48 - feel very
06:49 - natural right because when you move uh
06:52 - when you something in the real world
06:54 - moves it can't instantly stop there has
06:56 - to be some deceleration right there's
06:58 - some slowing down until it gets to a
07:00 - stop it can it can deal really quickly
07:02 - or it can take a long time but it still
07:04 - has to do some uh change so what we
07:07 - really want to do um is add some better
07:11 - movement okay so first let me go ahead
07:14 - and put the
07:17 - um uh let me put the player at the
07:19 - center of the screen so that we can
07:21 - we'll be able to see this better once we
07:22 - start doing it okay um and we're going
07:24 - to put this at width over two height
07:27 - over two okay
07:32 - to do the next step and make our
07:35 - movement a little more realistic we need
07:36 - to talk
07:38 - about acceleration and acceleration is a
07:42 - measurement of how much your velocity is
07:45 - changing over time if my velocity is
07:49 - increasing then I'm accelerating so I'm
07:51 - getting faster and faster and the
07:53 - velocity is really just a measure of how
07:56 - fast your position is changing right we
07:58 - already have that our VX is telling it
08:00 - how many pixels to
08:02 - move to the right or left each frame of
08:06 - the
08:07 - animation so what we want to do now is
08:09 - add into that an acceleration that's
08:12 - going to tell tell our Sprite how fast
08:15 - its velocity is
08:17 - changing now to illustrate that maybe
08:20 - make it a little easier to uh
08:24 - visualize I have made this little demo
08:26 - okay so here's our here's our Sprite you
08:29 - can see its position is at the center of
08:31 - my
08:33 - screen right and its velocity is zero
08:36 - it's not moving its acceleration is
08:38 - zero right because it's not accelerating
08:41 - now if I press the right arrow key
08:43 - you're going to see the
08:44 - acceleration change and then you're
08:46 - going to see an Arrow showing its
08:48 - velocity so see I'm pressing down and
08:51 - now I'm moving to the right I press down
08:53 - I move to the left now you notice when I
08:54 - let go of the acceleration I keep
08:58 - moving right my velocity stays at in
09:01 - this case 5.6 and I keep moving that way
09:05 - and if I push it further I can increase
09:08 - my velocity in that direction now if I
09:10 - want to stop or if I want to reverse
09:12 - Direction I'm not going to do that
09:13 - instantaneously when I push it down you
09:16 - can see my
09:18 - velocity gets
09:20 - slowly back to zero and then switches to
09:23 - the other
09:25 - direction so I
09:27 - can accelerate and accelerate or I can
09:30 - change direction but I can't change
09:31 - direction instantaneously and the faster
09:33 - I'm going the longer it takes
09:36 - me to slow down and change direction
09:40 - right so there's a little bit of
09:43 - floatiness and we can control lots of
09:46 - things about
09:47 - how how quickly and how slowly you can
09:50 - accelerate um and things like that which
09:52 - will we be able to adjust but I just
09:55 - wanted you to see through this little
09:56 - demo maybe you can understand what we're
09:58 - going to be doing we're going to have a
09:59 - velocity that's that green
10:01 - arrow but we don't control the velocity
10:04 - directly the arrow keys control the
10:06 - acceleration and as you can see the
10:08 - acceleration on this little demo I set
10:10 - to
10:11 - 0.2 very small number but you don't need
10:14 - a big number right you just need to hold
10:16 - it down longer if you want to go fast
10:18 - and again we'll we can adjust that
10:21 - too hopefully that makes a little more
10:23 - sense um and then you'll see how it
10:25 - works when we start uh adding it into
10:28 - our code
10:33 - okay so how do we go about adding this
10:35 - into our code well this actually won't
10:37 - be too difficult um we're now going to
10:42 - have not just a position right which our
10:46 - location not just a velocity but also an
10:48 - acceleration now each one of those is
10:50 - going to have has an X and A Y component
10:54 - right and it's going to get really
10:56 - tedious to have all of these different
10:59 - um
10:59 - have all these different variables VX
11:01 - and v y we'd have to have an ax and an
11:02 - ay and it's a lot of variables one one
11:05 - thing we can do to keep uh keep things a
11:07 - little simpler is to use something
11:10 - called a vector now um vectors
11:13 - are kind of an advanced Topic in math
11:17 - that you might not have run into yet but
11:18 - for our purposes here I'm not going to
11:20 - go into the whole explanation of vectors
11:22 - I'm just going to tell you that a vector
11:25 - for our purposes is just a pair of
11:27 - numbers that have an X and A Y component
11:30 - so instead of our velocity being a VX
11:33 - variable and a VY variable it'll just be
11:35 - one variable that has an X and A Y
11:37 - component okay and the way we do vectors
11:40 - in pi game is there's something called
11:43 - uh pg. math. Vector 2 right two for two
11:47 - dimensional right X and
11:49 - Y but I don't want to type this whole
11:52 - long uh name out every time I need to
11:54 - use one so I'm going to basically assign
11:59 - the the vector
12:01 - 2 uh command from pame to the name VC so
12:05 - we can just use VEC for
12:07 - Vector okay um so what we would do then
12:12 - is in our player we're going to change
12:15 - to having a position Vector okay that's
12:17 - going to be a VC of width over two
12:21 - height over two and you'll see why I did
12:22 - this I'm doing this in a second we're
12:24 - going to have a velocity Vector that's
12:26 - just a VC of Z 0
12:29 - and a acceleration vector that's also 0
12:35 - 0 okay so this is the first one is the X
12:38 - the second one is the Y so to start with
12:42 - our player is at this position has this
12:45 - velocity and has this
12:47 - acceleration okay now down here in our
12:50 - update remember the key press is not
12:52 - going to control the velocity the key
12:54 - press is going to control the
12:56 - acceleration okay and our acceleration
13:00 - should be zero
13:03 - unless we're pressing the
13:06 - key okay and if we're pressing the key
13:09 - then
13:11 - our acceleration dox is going to change
13:16 - now remember in my uh in My Demo I used
13:22 - 0.2 um I'm going to put 0.5 here for now
13:26 - okay so when we press the left Arrow key
13:29 - key we accelerate in the negative
13:31 - Direction which is to the left and we
13:33 - press the right arrow key we accelerate
13:35 - to the
13:37 - right but now we need to apply that
13:39 - acceleration to say how much does that
13:41 - change the velocity right and then how
13:45 - much does that velocity change the
13:48 - position okay so what I'm going to do is
13:51 - I'm going to replace this code here and
13:54 - I'm going to say the new so our velocity
13:56 - is equal to we just add
13:59 - the acceleration so our velocity gets
14:03 - the acceler the acceleration adds to the
14:05 - velocity and then our
14:08 - position we add the velocity
14:12 - plus half of the acceleration now this
14:16 - comes
14:17 - from you might recognize this if you've
14:20 - taken any physics these are essentially
14:22 - the equations of motion which you learn
14:25 - about in physics you can use to
14:27 - calculate any kind of uh object moving
14:30 - around um in the
14:33 - world um acceleration might be gravity
14:36 - that's how you would tell when
14:37 - something's falling um for our purposes
14:40 - again we're just going to use these to
14:43 - um to move our character I'm not going
14:46 - to go into the details of where these
14:48 - equations come from you're welcome to go
14:51 - look them up on Wikipedia or any other
14:54 - uh physics website KH Academy has a
14:56 - really good set of videos on this um if
14:59 - if you want to see how where these
15:01 - equations come
15:02 - from uh but you really just need to know
15:05 - the
15:06 - acceleration adds to our velocity the
15:09 - velocity and acceleration together add
15:11 - to our position and that tells us where
15:13 - our new position will be so our new
15:15 - position is now just going to be
15:20 - our I'm just going to put Center so we
15:23 - just put the center of our Sprite at
15:27 - whatever our position is calculated to
15:28 - be
15:30 - okay and that should do
15:34 - this we just go over here and we run our
15:38 - program okay now I'm accelerating kind
15:40 - of fast so I'm really zipping off the
15:42 - screen right but that's okay we're going
15:45 - to fix that uh in a second because I
15:48 - just want to make sure it works and you
15:49 - can see we're really
15:50 - floaty we can't sit still right um this
15:55 - would be fine if we were an outer space
15:57 - game because in base there's nothing to
15:59 - slow you down uh but this is going to be
16:02 - a platformer we're a person running on
16:03 - the ground so we need to have something
16:06 - that slows us down right we don't just
16:09 - keep moving forever and that thing that
16:10 - slows you down is called
16:12 - friction that's what we need to
16:17 - control both our the slowing down so
16:19 - that if you're not pushing a button you
16:21 - will Coast to a stop but also it will
16:24 - help us set our maximum speed so that we
16:26 - can't just keep accelerating and go
16:29 - ridiculously
16:32 - fast we're almost there I know the video
16:34 - is starting to get long but I want to at
16:36 - least add that friction in so we don't
16:38 - have that
16:40 - um super high acceleration and the and
16:42 - we don't uh and we can start coasting to
16:44 - a stop so here's what I'm going to do
16:46 - I'm going to make our lives a little
16:48 - easier here and in our settings I'm
16:50 - going to add a
16:52 - player properties section okay and so
16:55 - we're going to have in here the player
16:57 - acceleration right which we're using 0.5
17:01 - right now we're also going to add in the
17:03 - player friction okay and the friction is
17:06 - going to actually be a very small number
17:09 - okay you'll see this little work just
17:12 - fine and and once we have this working
17:14 - you can go in and change that and adjust
17:16 - it to work the way you want it to work
17:19 - um I'm using numbers that uh I've tested
17:22 - before and had them you know work when I
17:24 - tried them out so um go back over here
17:27 - to to player so now our acceleration is
17:30 - just going to
17:32 - be player dot acceleration okay so what
17:38 - we called the player acceleration is
17:40 - oops I put a dot I meant an
17:43 - underscore right player acceleration is
17:47 - what we accelerate at and now before we
17:51 - figure out our new um velocity and
17:54 - position we need to adjust that
17:57 - acceleration by by the friction okay so
18:01 - our acceleration is actually going to
18:06 - be is going to change by our velocity
18:09 - basically the way friction works is the
18:11 - faster you're going the more friction
18:13 - slows you down so you
18:16 - multiply by the um uh by the by the
18:22 - friction player friction okay and
18:26 - actually the player friction uh
18:29 - should be a negative number right it
18:31 - slows us
18:32 - down forgot that there so if we
18:36 - multiply player friction times the
18:38 - velocity that'll give us our new
18:40 - acceleration okay and what that will
18:43 - look like
18:44 - now is see when I let go of the key see
18:48 - how I
18:50 - stopped so now I I can run to the side
18:53 - and then I stop I can run to the side
18:55 - and then I stop if I hold it down I will
18:57 - keep running but I also have a Max
18:58 - maimum speed now see how I'm not getting
19:00 - above a certain speed and I can switch
19:02 - directions pretty fast because I'm not
19:04 - going super fast but it's still not
19:06 - instant there is a a slight pause there
19:09 - but when I let go I I run to a stop now
19:11 - this works pretty well as a guy who is
19:14 - running on the ground right you can stop
19:17 - pretty quickly and we want that if later
19:20 - on you were to add you know an ice level
19:23 - or ice platforms then you would want the
19:26 - friction to be a smaller number right
19:28 - because then you would Coast longer and
19:30 - wouldn't come to a stop um so the last
19:33 - thing I will do now that we have that
19:35 - working is I'm just going to make sure
19:37 - that the player doesn't uh go off the
19:40 - screen I'm actually just going to have
19:41 - him wrap around okay so I'm going stick
19:46 - a couple comments
19:48 - here that applies the friction um these
19:52 - are the equations of motion right and
19:57 - then the last thing I'm going to do is
19:58 - after we figure out our new position I'm
20:00 - going to uh wrap around the sides of the
20:06 - screen and we do that by just checking
20:09 - to see if our um if our
20:13 - position is greater than the
20:16 - width then we set our position to zero
20:21 - and if
20:23 - our position oops position is less than
20:27 - zero we set it equal to the width okay
20:32 - and that should do it for this video we
20:35 - should now have a guy who can run we can
20:38 - control has some somewhat realistic mo
20:41 - mo uh motion and he wraps around the
20:44 - screen so we don't get lost in the
20:51 - nothingness okay
20:53 - so I'll see you in the next video in the
20:56 - meantime feel free to go over here and
20:58 - play around with some of these settings
21:00 - um you can see what the friction will
21:03 - change is both the speed at which you
21:07 - stop so how how quickly you you come to
21:09 - a stop but it also will affect your
21:12 - maximum speed so if you make this number
21:15 - smaller uh you can go faster but you
21:17 - also take longer to stop uh and then you
21:20 - can also change this to control how
21:21 - quickly you accelerate and that's going
21:23 - to adjust things too so have fun and
21:26 - I'll see you next time when we start
21:28 - talking about our vertical motion
21:30 - gravity jumping all that fun
21:44 - stuff