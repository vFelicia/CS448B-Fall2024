00:00 - welcome back to game development with
00:02 - pygame in this episode we're going to
00:05 - continue to work on our smurf game and
00:07 - we're going to add shields to our player
00:10 - spaceship and also a display so we can
00:13 - see how much shield we have so let's
00:18 - look at where we are right now we have a
00:21 - pretty nice-looking game so far we've
00:23 - got a score we can shoot our meteors
00:25 - we've got some nice sound
00:27 - however we die instantly when we get hit
00:30 - by a meteor that's not very satisfying
00:32 - so let's add some shields to our
00:36 - spaceships so that we have some
00:39 - resistance to some damage and maybe we
00:41 - have to get hit a couple of times before
00:43 - the game actually ends so what we need
00:48 - to do is on our player we're gonna add a
00:52 - value here called shield that's just
00:55 - going to be a measure of how much shield
00:59 - we have we're just gonna we're just
01:00 - gonna have that be from 0 to 100 right
01:03 - now so 100 means you have maximum
01:05 - shields and then every time you get hit
01:08 - by a meteor you're gonna lose some
01:13 - amount of shield and we could make that
01:16 - relative to the size of the meteor right
01:20 - because on every mob we have a radius
01:23 - set so we can just use that radius to
01:26 - calculate the amount of damage that mobs
01:29 - should do as well so if we go down to
01:33 - where we have the mobs hitting the
01:36 - player and this is where we want to make
01:39 - the changes so the first thing we want
01:41 - to change is I want to change this false
01:43 - to a true in the sprite collide command
01:46 - because I want those mobs to disappear
01:50 - now I don't want them to continue in
01:53 - existence because then they would they
01:56 - would hit us we would lose some shield
01:58 - they still exist so they're gonna move a
02:00 - little bit farther the next frame of the
02:02 - animation so they'll still exist so the
02:04 - count is hitting us again
02:05 - so they'll pretty much instantly remove
02:08 - our entire shield so we're going to have
02:11 - the
02:12 - the meteors will disappear when they hit
02:14 - us and then remember we might possibly
02:17 - get hit by more than one so this might
02:19 - be this will be a list of all the
02:22 - sprites that hit us so we're gonna
02:25 - actually loop through them and say for
02:27 - hit in hits so we're gonna go through
02:29 - each one of the ones that hit us and for
02:31 - each one that hit us we can take away
02:32 - some shield so player dot shield we're
02:36 - gonna subtract whatever the radius of
02:39 - the hit was times two so so essentially
02:44 - the damage will be the diameter of the
02:46 - circle for each thing so the tiny
02:48 - meteors will do a tiny amount of damage
02:50 - and the really big meteors will do a lot
02:53 - of damage and then we don't want to
02:56 - instantly quit so we're going to say if
02:59 - the player shield
03:01 - if the player shield is less than or
03:03 - equal to zero that's when you're going
03:06 - to end the game okay so now if we run it
03:11 - we should see see that one hit me that
03:17 - one hit me so it took two of them to
03:19 - knock me out that big one did a lot of
03:21 - damage we can try it one more time and
03:23 - see if I only let a couple of the
03:27 - smaller ones hit me yeah I probably am
03:31 - getting low now you can see it's kind of
03:33 - frustrating when you can't see what your
03:34 - shield is yeah so now of course it's
03:39 - very frustrating to not be able to see
03:40 - what your shield is so we could go the
03:43 - simple route and just print the number
03:46 - up at the top like we're doing with the
03:47 - score and say your shield is 100 and
03:49 - then show whatever it's going down to
03:51 - but instead I think what we'll do is we
03:55 - will put a a bar so we'll have a little
03:58 - bar that's full and gets lower and lower
04:01 - and lower until it's empty showing how
04:03 - much shield you'd have oh and one other
04:07 - thing you might have noticed you might
04:09 - not have noticed is that since we're
04:11 - deleting the mob here when it hits us
04:15 - then eventually we're going to have
04:18 - fewer mobs right just like happened when
04:21 - we just like what happened when we shoot
04:23 - them if we keep letting them disappear
04:26 - then eventually there won't be any more
04:28 - in that mobs group because we spawned
04:32 - eight at the beginning right and so
04:34 - whenever we shoot one we spawned a new
04:35 - one we also want to spawn a new one
04:38 - whenever we have one disappear from
04:41 - hitting us now that means that we kind
04:44 - of want to do the same thing multiple
04:47 - times right we want to be able to just
04:48 - spawn a new mob
04:51 - so spawning a new mob is these three
04:57 - steps right make a mob add it to the
04:58 - groups and if you notice down here make
05:02 - a mob add it to the new groups that's
05:04 - what we would also have to do down here
05:05 - so that's a lot of repeating ourselves
05:07 - and there's a very common rule of thumb
05:12 - or guideline in programming that says
05:15 - good program and a good programmer
05:17 - doesn't repeat themselves it's called
05:20 - the the d ry principle don't repeat
05:23 - yourself so whenever you find yourself
05:26 - repeating a chunk of code like this it
05:30 - usually means there's probably a better
05:31 - way to do it and that better way to do
05:33 - it would be let's just make a command
05:36 - right and that command is just gonna be
05:40 - spawn a new mob we'll just call it a new
05:43 - mob so every time we hit something we're
05:46 - gonna spawn a new mob every time we
05:49 - shoot one we're gonna spawn a new mob
05:51 - and in this loop here every time we
05:56 - count when we count to eight we're gonna
05:57 - make a new mob okay see how that's a lot
06:00 - simpler now we can just define new mob
06:03 - to be those three steps so we're
06:08 - grouping all of our various function
06:13 - definitions up here so we'll do this up
06:15 - at the top as well new mob is just going
06:20 - to be those three steps spawn a mob add
06:25 - it to the all sprites
06:26 - and add it to the Imams group okay
06:33 - and then we have everything we need so
06:37 - let's just check it real quick make sure
06:38 - we don't have any error messages shoot a
06:42 - bunch of them we're not running out of
06:44 - them we still have them spawning okay
06:47 - and that looks good okay now we can talk
06:53 - about showing our shield so we have the
06:56 - value for shield so what we want to do
07:00 - is draw a rectangle and fill some part
07:02 - of it whatever percentage of it since it
07:05 - goes from zero to a hundred we fill
07:08 - whatever part of it our shield variable
07:11 - is equal to so to do that we are gonna
07:14 - need to add something to our draw
07:16 - section here so just like we did we drew
07:21 - the text we're also gonna draw the
07:22 - shield bar so we're gonna make a
07:24 - function called draw draw shield bar
07:29 - oops
07:30 - and that is going to we're gonna want to
07:35 - tell it where we want it drawn and so
07:37 - let's put it in the upper left hand
07:39 - corner and what value do we want to use
07:42 - to fill the bar we're gonna use player -
07:45 - shield okay and so now we can define
07:48 - that function draw shield bar which says
07:51 - it takes an X a Y and a number value of
07:56 - how much of what percentage of the bar
08:01 - to fill so we'll go back up here to the
08:03 - top again and we're gonna define draw
08:08 - shield bar X Y and the percentage okay
08:16 - now it's possible in a certain frame of
08:21 - animation shouldn't happen but just in
08:23 - case we want to be careful if the the
08:26 - shield went less than zero right now
08:29 - we're telling it to end the loop when
08:31 - the shield gets less than zero but if we
08:33 - change things around or something else
08:36 - takes away shield we just want to be a
08:38 - little safe here and say that if the
08:42 - percentage is less than zero then we're
08:44 - gonna set the percentage equal to zero
08:46 - so that we don't
08:47 - have anything weird happen with our
08:48 - drawing I don't want to our drawing to
08:51 - look kind of odd and have the filled
08:53 - part be outside of the empty part and
08:55 - it's gonna look odd okay and then I'm
08:59 - gonna set a couple of constants here for
09:00 - the length
09:02 - oops the length say a hundred pixels and
09:06 - the height just so we know what size
09:10 - this bar is and if we want to adjust it
09:13 - we can just adjust these two settings to
09:14 - have our bar be whatever size we want it
09:16 - to be okay and the filled percentage is
09:20 - going to be it's going to be whatever
09:23 - percentage we have right so percentage
09:28 - divided by a hundred times the bar
09:31 - length that way if you decide so right
09:34 - now if our shield is it 57 then our bar
09:37 - length will be 57 but if we decide to
09:41 - change the bar line to 200 it'll still
09:42 - be 57 percent of that bar length so now
09:47 - we need two rectangles we need the
09:48 - outline you know the whole bar and then
09:51 - we need the rectangle portion that needs
09:54 - to be filled to show how much we have so
09:57 - the outline rectangle is just going to
10:00 - be the the overall size of the bar so
10:03 - that's going to be a rect and it's going
10:04 - to be at X Y and it's width is going to
10:07 - be bar length and its height is going to
10:11 - be bar high and the other rectangle we
10:16 - need is the portion that's going to be
10:17 - filled and the filled rectangle is going
10:19 - to be a PI game rect it's also going to
10:23 - be at X Y but its width is going to be
10:26 - the fill amount that we just calculated
10:29 - and its height is still going to be bar
10:32 - bar height just sorting to be the same
10:35 - height it's just going to be shorter and
10:37 - now we can just draw those two
10:39 - rectangles so pygame dot draw rect by
10:45 - the way I forgot one thing that we need
10:47 - to include on our function just like
10:50 - when we did draw text we needed to say
10:52 - what surface we need to be on we also
10:54 - need to say what surface we're drawing
10:56 - this bar on so go back up here we
11:01 - also need the surface okay so we're
11:05 - gonna draw the rectangle on the surface
11:09 - we're gonna draw it in green and the
11:14 - fill rect is gonna be the size and then
11:19 - we're also going to draw a rectangle on
11:22 - the surface that's white that's going to
11:27 - be the outline rectangle and I'm gonna
11:31 - put a two here which when you draw a
11:33 - rectangle this last number is the number
11:36 - of pixels for how wide you want that the
11:38 - the outline of the rectangle to be so
11:40 - when you're drawing a rectangle
11:43 - ordinarily it's a one pixel thick line
11:45 - I'm gonna make it two because it looks a
11:47 - little better so let's see what that
11:51 - looks like now okay so now I have that
11:54 - nice bar up there on the top and you see
11:56 - how when I got hit it got a little lower
11:58 - but I accidentally let myself get hit by
11:59 - a big one so there we go it's going down
12:03 - whenever I'm getting hit getting lower
12:07 - hope I'm almost dead so now I can see
12:10 - very well that I have a very low shield
12:12 - and when I get hit they're perfect and
12:17 - so that's a simple way to do a progress
12:21 - bar and show it on the screen you
12:24 - basically just want to draw the
12:25 - rectangle outline and fill it with
12:28 - another rectangle of whatever size you
12:32 - want it to be that'll do it for this
12:37 - episode next time we'll start talking
12:39 - about adding explosions
12:49 - you