00:01 - welcome back in this recipe we're going
00:03 - to look at how to make
00:04 - an arcade style car that's really fun to
00:07 - drive
00:07 - in a very simple way using a rigid body
00:11 - sphere this recipe is inspired by a
00:14 - tweet from
00:15 - kenny a little while back where he
00:16 - showed how to do this
00:18 - and several people have asked me if this
00:20 - is possible in
00:21 - godot and that's what we're going to
00:23 - find out
00:24 - today we start with a rigid body this is
00:27 - just a
00:28 - plain rigid body sphere that i'm
00:31 - controlling that's
00:32 - going around the track and to that we
00:34 - add our car mesh and we're just going to
00:36 - put our car mesh
00:37 - at the location of the rolling
00:41 - sphere and then we make the sphere
00:44 - invisible
00:45 - and it looks like the car is
00:48 - all that we're controlling going around
00:50 - the track and this is a great
00:53 - setup because it's relatively easy to
00:56 - make there's only a few nodes you need
00:58 - to configure
00:59 - it doesn't take a lot of code and most
01:02 - importantly
01:03 - it's fun and feels great to drive around
01:08 - before we start making the car here's a
01:10 - quick look at the
01:12 - input actions that we're adding in the
01:14 - project settings
01:15 - i have accelerate break steer left and
01:18 - steer right
01:19 - and i've set those up to work with
01:21 - keyboard keys
01:22 - wasd and arrows but i've also set them
01:25 - up to work with
01:26 - the analog stick on my game controller
01:29 - and i highly recommend if you've got a
01:32 - game controller use the analog stick
01:34 - it's a lot nicer to drive around with
01:36 - that than it is with
01:37 - keyboard keys
01:42 - all right let's start setting up the car
01:43 - so i have a spatial node here
01:46 - that's going to be the route and under
01:48 - that we're going to have two independent
01:51 - nodes the rigidbody which is going to
01:54 - move around based on physics
01:56 - and the car's mesh which we're going to
01:58 - position
02:00 - manually and is going to help us do the
02:03 - the turning as i said before so so i've
02:06 - added the rigid body
02:08 - and i've named it ball and we need a
02:10 - collision shape on here and we're going
02:11 - to use a sphere
02:13 - and i'm going to keep the radius to 1.
02:17 - you can adjust that and it's going to
02:20 - alter how the driving behaves so feel
02:23 - free to experiment around with that too
02:24 - but one works out for a good scale for
02:27 - the size of the mesh we have and
02:29 - everything else
02:30 - and we need to set some properties on
02:34 - the rigid body so we're going to
02:36 - increase the gravity scale
02:38 - you know the godot default physics
02:41 - uh has gravity in it and it feels a
02:43 - little floaty to me
02:45 - and so i want that to kick that number
02:48 - up a little bit
02:49 - if you if your track has
02:52 - jumps and things like that you can play
02:54 - around with how
02:56 - much you scale that to to make it feel
02:58 - good for your
03:00 - game okay we're also going to go down to
03:02 - the angular damp
03:03 - and we're going to bump that up to 5.
03:05 - angular damp is going to have a lot
03:07 - of impact on the driving feel
03:10 - because this is how quickly that ball is
03:13 - going to stop rolling when there's no
03:14 - forces applied to it
03:17 - right if you stop pressing on the
03:18 - accelerator how quickly does the car
03:21 - come to a stop and so you're going to
03:23 - want to
03:25 - experiment with that value 2 as you're
03:28 - setting it up depending on what you want
03:30 - your car to do
03:32 - and then i'm also going to add a physics
03:33 - material and give it a little bit of
03:35 - bounce
03:36 - this is kind of a fun one to play around
03:37 - with because it's going to control you
03:40 - know what do you want to happen when you
03:41 - run into a wall do you kind of bounce
03:43 - off of it when you run into other cars
03:45 - you can experiment with that you
03:46 - probably don't want to set it too high
03:48 - or it's going to be
03:49 - really crazy but if that's what you're
03:52 - going for
03:52 - have fun okay so so these are some
03:56 - values you can play around with to start
03:58 - having some impact
04:00 - on what the driving behavior is going to
04:02 - be
04:03 - okay so adjacent to this ball or as a
04:07 - sibling of this ball
04:08 - we're going to add our mesh which i'm
04:10 - using
04:12 - the kinney cars kit
04:15 - and i'm going to use the suv model
04:18 - here and so when you import this model
04:20 - you'll see
04:21 - we have a bunch of individual meshes
04:25 - which is kind of nice because these
04:26 - individual meshes can be moved
04:28 - independently
04:29 - and we'll be able to do things like take
04:31 - the front
04:32 - wheel and you know
04:36 - rotate it when you turn when you're
04:38 - turning so it looks like returning
04:42 - you could if you wanted to and i'm not
04:44 - going to do this but you could if you
04:46 - wanted to simulate
04:47 - suspension by moving the wheels up and
04:49 - down
04:50 - as the car moves
04:54 - and that's really all we have to do with
04:57 - this suv model is just import it
05:00 - but now if we look from the side here
05:02 - and let's switch to a side view
05:04 - you can see here's the here's the
05:06 - collision shape of the ball
05:07 - and that ball is going to be on the
05:08 - ground right so we're definitely going
05:11 - to want to position
05:12 - [Music]
05:13 - the mesh so that it is
05:17 - right down here so it looks like the
05:19 - wheels are also
05:20 - on the ground and if you notice what
05:23 - that transfer comes
05:24 - out to be it's exactly the radius of the
05:27 - sphere
05:28 - so keep that in mind if you're using a
05:30 - different
05:31 - sized or shaped mesh you might want to
05:35 - adjust you know how you how you align it
05:39 - relative to the sphere and finally
05:42 - as a child of this car mesh we're going
05:45 - to add a raycast
05:47 - and this raycast is going to help us for
05:49 - with ground detection
05:50 - because we want things like when you are
05:52 - up in the air
05:53 - maybe you went off a ramp turning the
05:56 - wheel shouldn't
05:57 - turn the car right because you're in the
05:59 - air you shouldn't be able to accelerate
06:00 - and decelerate while you're in the air
06:02 - so we can use that ground detection to
06:04 - detect that so we're just going to
06:05 - enable
06:08 - enable it and we're going to set the
06:09 - cast 2 to negative one
06:11 - that's good it's going to point
06:12 - downwards right you can
06:14 - kind of barely see it the raycast lines
06:16 - are a little hard to see but it's
06:17 - just pointing downward from the car and
06:19 - so we'll just be able to use that to
06:21 - tell whether we're in the air or not
06:24 - all right let's start looking at the
06:26 - script so i've added a script to the
06:28 - cart root node and
06:32 - started by adding some variables so
06:34 - we've got our references
06:35 - to some of the different child nodes
06:39 - the car mesh the ground ray and the ball
06:42 - and then i have some settings now these
06:45 - ones you might want to
06:46 - export if you want to be able to set
06:48 - them in the inspector but
06:49 - i've already tweaked the numbers around
06:51 - to the way i like them so i'm using
06:53 - those as my
06:54 - defaults here this is that offset
06:57 - that we just saw a minute ago for the
06:59 - mesh
07:00 - to place it at the bottom of the sphere
07:02 - rather than the center of it
07:05 - engine power is going to be you know how
07:07 - strongly you accelerate
07:10 - this is your this is your turn
07:13 - angle so when you turn the wheel all the
07:16 - way to the right how far would the
07:17 - wheels turn that's 21
07:19 - degrees and then turn speed is kind of
07:22 - like your turn rate
07:23 - how quickly the car is going to rotate
07:26 - to match the
07:27 - the steering and you can
07:31 - adjust that as well to give you more or
07:34 - less
07:35 - of a feel when you turn and then
07:38 - below this speed the turn stop limit we
07:40 - don't turn otherwise when the car was
07:41 - sitting still
07:43 - we don't want the turning the wheel to
07:45 - make the car mesh rotate
07:47 - right you have to be moving forward to
07:50 - be able to
07:51 - turn the wheel or you at least have to
07:52 - be moving you could be moving backwards
07:54 - as well
07:55 - and then we've got a couple inputs here
07:57 - to capture our
07:58 - or a couple variables to capture our
08:00 - inputs
08:02 - and then in my ready i just want to make
08:06 - sure that that ground ray that's
08:07 - projected downward doesn't
08:10 - trigger when it hits the ball so we're
08:12 - going to add the ball as an exception
08:14 - to that raycast and then in the physics
08:18 - process we just have two lines here
08:20 - we're going to make sure we place the
08:22 - car
08:24 - place the car at the same location as
08:26 - the ball
08:28 - plus that offset that offset that we
08:30 - said here so that will be aligned
08:32 - properly
08:33 - and then we're going to accelerate we're
08:34 - going to apply a force to the ball
08:37 - that is the direction that the mesh is
08:41 - pointing
08:42 - so the direction the mesh is pointing
08:44 - times whatever our speed input is so if
08:46 - i have the
08:48 - if i have the accelerate pressed then
08:50 - we're going to go forward
08:52 - break is gonna accelerate us backwards
08:54 - and obviously if i'm not pressing
08:56 - anything this will be zero
08:57 - so our central force will be zero
09:01 - okay and we can try this out we haven't
09:03 - even added steering yet but we can try
09:05 - that out if we just do our
09:06 - inputs so in the process i'm going to
09:09 - capture my input state
09:12 - if the ground ray is not colliding we're
09:14 - going to
09:15 - return and not do any of the input but
09:18 - if we are
09:19 - then we can check here and we get the
09:21 - accelerate and break
09:23 - input to figure out what our what our
09:25 - total speed input should be and then we
09:27 - do the same thing using get action
09:29 - strength
09:29 - so that we can use our analog stick and
09:32 - do
09:33 - you know half strength or a quarter
09:35 - strength instead of
09:37 - with the keys these are always going to
09:38 - be values of one so you're either
09:41 - turning fully to the right or not
09:43 - turning at all you can't have anything
09:44 - in between
09:45 - okay and we can try that out if you run
09:48 - it
09:51 - and you've got some world to stick your
09:54 - car in
09:55 - right then pressing accelerate is going
09:57 - to move you forward
10:00 - right pressing the brake should move you
10:02 - backwards
10:04 - and that's all we want to be able to see
10:06 - now
10:09 - now for the turning we're going to add a
10:11 - little bit more code to our process
10:13 - function
10:14 - where if we're moving faster than that
10:17 - stop
10:18 - limit we're going to take the car mesh
10:22 - and calculate a new basis that's it's
10:25 - that's that's itself rotated around its
10:27 - y-axis right so the car is rotating
10:29 - to the left or the right based on which
10:32 - way you turned the wheels
10:34 - and we're going to rotate it by whatever
10:35 - that amount was
10:37 - and then we take the car's actual
10:39 - transform
10:41 - and we interpolate it with that new one
10:43 - using the turn speed that we
10:45 - entered in and that will cause our
10:49 - car to rotate to the left or rotate to
10:52 - the left or so the right
10:53 - and then it's always a good idea when
10:55 - you're rotating
10:57 - uh 3d objects around and transforming
10:59 - the basis
11:00 - that you orthonormalize periodically
11:04 - so easiest way to do that is just do
11:06 - that in
11:08 - the code where you're doing the rotation
11:10 - and then you don't have to ever have to
11:11 - worry about any of those
11:13 - floating point inaccuracies creeping in
11:19 - so if you go ahead and try it out now
11:20 - you should be able to
11:22 - not just move forward and back but you
11:24 - should be able to
11:26 - steer now
11:31 - and you can if you're using your analog
11:33 - stick you can steer
11:35 - gradually or take those really sharp
11:37 - turns to drift around the corners
11:43 - okay so now we have the basic driving
11:45 - working there's a few tweaks we need to
11:47 - add
11:48 - to get things to look a little bit
11:50 - better and one of those
11:51 - i'll show you an example here if we were
11:53 - to try and
11:56 - go up a ramp or a slope if your track
11:58 - has those in them
12:00 - then you'll see that the car doesn't
12:01 - actually tilt on the ramp right it
12:03 - remains horizontal
12:05 - and that doesn't look very good so we're
12:07 - going to fix that
12:09 - after we rotate the car mesh we're going
12:11 - to align
12:13 - with the ground using the the ground ray
12:15 - and
12:16 - if you want more details about this i
12:18 - have a separate tutorial where i talked
12:20 - about aligning
12:21 - 3d objects with ground normals and i'll
12:24 - link to that
12:24 - in the comments below but we're
12:27 - basically taking that ground ray and
12:29 - getting the normal of the ground
12:31 - and aligning the car's y axis with that
12:34 - normal so that it remains
12:37 - looking like the wheels are on the
12:38 - ground and when we do that
12:41 - it will look like this so we'll come up
12:44 - to the ramp
12:46 - i'll slow down a little bit so you can
12:48 - see that looks a lot better
12:52 - this next one is purely for visual
12:54 - effect
12:55 - we're going to take the right wheel and
12:57 - left wheel and i've made some references
12:59 - here to their
13:00 - meshes right the wheel front
13:04 - right and left which are the two meshes
13:06 - and we want to rotate them
13:09 - visually you can see here in the editor
13:11 - what i want them to do is rotate like
13:12 - this when we
13:14 - have turn input and so we'll do that in
13:18 - the script
13:20 - right down here after we get the input
13:22 - we're just going to rotate
13:24 - those wheels based on that same input
13:29 - and that's going to
13:33 - look a lot nicer when we're turning
13:34 - because the wheels will turn
13:36 - as i'm as i'm applying input
13:41 - all right this next one really adds a
13:43 - lot of visual appeal
13:45 - so i've added another reference here to
13:48 - the body mesh this time
13:50 - and what we're going to do is when the
13:53 - car is going around turns we're going to
13:55 - tilt the body a little bit
13:57 - to show some kind of physical effect on
14:00 - taking those sharp turns right and it's
14:02 - going to tilt more or less
14:03 - depending on how much you're you're
14:05 - turning
14:06 - okay so in our code we're going to add a
14:10 - a variable here for the amount that we
14:12 - want that body tilt
14:14 - to be and you can adjust that to make it
14:17 - stronger
14:18 - or more subtle and then down here when
14:22 - we rotate the car mesh
14:24 - now we're going to tilt the body and
14:26 - we're just going to do that by taking
14:28 - our rotate input
14:31 - and multiplying it by the
14:34 - our velocity length so the far faster
14:36 - we're going the more
14:38 - effect this is going to have and we're
14:40 - going to rotate our
14:42 - body by that much and lerping it to make
14:45 - it nice and smooth
14:47 - okay and that's really going to
14:50 - give you a lot of visual appeal when you
14:53 - go around those corners
14:55 - so you see as we get up to this turn
14:58 - i took that term sharply and the the
15:01 - body really
15:02 - tilts a lot to show that way it gives
15:04 - you a sense of weight
15:06 - that the car has some momentum that's
15:09 - making it
15:10 - that's what's making it slide around
15:11 - these turns
15:14 - you can find a link to the written
15:15 - version of this demo on my godot recipes
15:18 - website which is linked below
15:20 - and i've also linked you to a demo
15:23 - project
15:24 - with the source code so you can try it
15:26 - out for yourself thanks for watching