00:00 - welcome back to good 101 this is part
00:03 - five of the series and in this video
00:06 - we'll be talking about how to make a
00:08 - Sprite that is controlled by the
00:10 - player as always if you haven't watched
00:13 - the previous videos please do go back
00:15 - and watch them because there will be a
00:17 - lot of things that I'll will assume you
00:19 - already know because we've covered them
00:21 - in previous
00:23 - videos all right let's get
00:25 - started okay so we're going to start
00:28 - with a main scene which I've made just
00:31 - have a node in it nothing but a plain
00:33 - old
00:34 - node that's where we're going to put all
00:36 - of our main code but before we do that
00:38 - we're going to make the player and I've
00:41 - included some art here which you can
00:43 - download at the link below just unzip it
00:45 - in your project
00:47 - folder okay we've got some objects here
00:51 - that we'll be able to use and then I
00:53 - have this F player folder that has a
00:56 - little animated alien guy that we can
00:59 - have walking around that's going to be
01:01 - our player so we're going to start by
01:04 - making a new
01:05 - [Music]
01:06 - scene and then we need to talk about how
01:09 - we're going to handle our players
01:11 - movement and collisions and all that
01:14 - kind of stuff so if we look at the node
01:18 - list I'm just going to search for
01:20 - collision and you can see under node T
01:23 - 2D there's an object called a collision
01:26 - object
01:27 - 2D and it has it children
01:31 - area 2D and three different physics body
01:36 - 2DS and these are for doing different
01:39 - kinds of collisions and physics
01:42 - simulations and
01:44 - there's pros and cons for each one or I
01:46 - should say there's there's reasons to
01:48 - use each of these for different kinds of
01:52 - games that you might be making okay an
01:54 - area
01:55 - 2D basically can just tell you when it
01:58 - overlaps something when something
02:01 - uh bumps into it or or overlaps its
02:04 - area the three physics body 2DS help you
02:07 - do you know physics simulations the
02:11 - kinematic body 2D is for moving
02:14 - Sprites uh you see the icon is the
02:16 - little space invader guy because this is
02:18 - the kind of physics that is sometimes
02:20 - called arcade
02:22 - physics it's not intended to be
02:24 - realistic but it does let you make walls
02:28 - that characters can't go through things
02:31 - like
02:32 - that uh the rigid body 2D is for
02:36 - realistic physics something like Angry
02:39 - Birds where you want to hit a stack of
02:43 - blocks with something and have the
02:44 - blocks All Fall Down uh all that kind of
02:47 - thing uh with realistic gravity and
02:49 - things like that that's what a rigid
02:50 - body 2D is for and then a static body 2D
02:54 - is an object that doesn't move and this
02:57 - is more efficient for things like walls
03:00 - and the ground and things that you don't
03:02 - need to animate so that so the engine
03:05 - doesn't need to do the calculations for
03:08 - that body moving around it's just going
03:10 - to sit there that's why it's called
03:13 - Static and we'll get into later in the
03:15 - series how you use each of these but for
03:18 - this first example we're going to use an
03:20 - area
03:21 - 2D because we're going to make our our
03:24 - character walk around and we want to
03:25 - know if it
03:28 - ever uh if it ever collides with an item
03:31 - so we can pick it up so that's going to
03:33 - be our player so we're going to choose
03:34 - the area 2D and we're going to call it
03:38 - player all right we're just going to
03:40 - save
03:41 - this we call it player that's
03:45 - fine and bring my note out here so
03:48 - there's my area 2D now this by itself
03:52 - isn't going to do very
03:54 - much right it doesn't look like anything
03:56 - so we're going to need to add a Sprite
03:57 - to it so we'll go back to our Sprite
04:01 - here and then I'm going to go in the
04:04 - player one and I'm just going to pick
04:06 - the standing one alien green front I'm
04:10 - drop that in there is our little alien
04:14 - now something you might notice if you
04:16 - zoom in really far you're going to
04:18 - notice that it gets really blurry right
04:21 - the pixels are all smoothed and smeared
04:25 - out and in a lot of 2D art that's not
04:29 - what you want so if we go over here on
04:31 - the texture and we click this little
04:33 - right arrow here we can see on the
04:36 - flags that filter is turned on if I turn
04:39 - off that filter now we see the pixels as
04:44 - they were drawn by the artist right and
04:47 - not as apparent with a Sprite like this
04:49 - one but there's some that it's uh makes
04:52 - it really look ugly and you can set that
04:55 - as a default if you go into your project
04:58 - settings and go to the image loader
05:02 - there's an option here to have filter
05:05 - off by default and that way every time
05:08 - you drag a new image in you won't have
05:11 - to go and check that box to turn that
05:13 - off so there's our player he's a little
05:17 - big if we run the scene he takes up a
05:20 - lot of the
05:21 - screen so I'm going to shrink him a
05:23 - little bit right we're going to go on
05:25 - the scale here and let's put him to
05:29 - point 6 okay so there he
05:34 - is but by itself this character
05:37 - won't collide with anything the area
05:41 - 2D the area 2D node doesn't include
05:45 - collisions it can but you have to Define
05:48 - what the shape of the Collision you want
05:49 - to use is so I'm going
05:53 - to rename this to Sprite with a
05:56 - lowercase so I can keep all my names
05:58 - lowercased and I'm going to lock
06:01 - the player so it can't so we can't
06:04 - accidentally drag this Sprite off of it
06:06 - so now we're going to go and we're going
06:07 - to add a collision shape to d as a child
06:12 - of the area and the first thing you'll
06:15 - notice is that we get a little warning
06:17 - symbol here and what that warning symbol
06:18 - tells us is you have to choose a shape
06:21 - you can't use this Collision shape
06:23 - without a shape being defined and that's
06:26 - the very first thing right here on the
06:29 - Vector so if we click down arrow here we
06:31 - have a few options there are all sorts
06:34 - of different shapes you can
06:35 - use capsule shapes Circle shapes
06:38 - rectangle shapes are the most common you
06:40 - can make any sort of shape you might
06:43 - that might fit your object okay so we're
06:45 - just going to pick a rectangle shape
06:46 - we're going to keep things really simple
06:47 - to start with okay so now we get this
06:50 - blue area if we zoom in on our player
06:52 - here you can see this is so this is
06:54 - going to be the Collision area and
06:56 - obviously we want to resize this now if
06:59 - we drag
07:01 - these corners of the square and stretch
07:04 - it do not ever do this okay never do
07:09 - that Collision areas the physics doesn't
07:12 - work right
07:13 - with the shapes being rescaled you can't
07:16 - do that but inside there are some
07:19 - handles that let you grab you can grab
07:21 - these low corners and you can drag them
07:24 - like this okay and now you might notice
07:28 - we're not centered so so we're going to
07:29 - be off a little bit and that's because
07:32 - our Sprite
07:34 - is 128 by 256 he's got this empty area
07:38 - above
07:39 - him uh we need to offset that so we want
07:42 - to click on the position here and just
07:44 - shift it down
07:46 - by 32 so that it's centered and then we
07:50 - can just grab these little handles and
07:52 - stretch them around until they
07:56 - are however we want them right if you
07:58 - want the the player only the center of
08:00 - the body to be a collision you want it
08:03 - to be you know wider you can set it
08:06 - however you want right so I'm just going
08:09 - to leave it like this for now you don't
08:11 - need to do anything fancy I'm going to
08:12 - put it like that so there's our
08:13 - Collision shape and you can see it
08:15 - outlined with blue
08:18 - area okay let's make a script we're
08:21 - going to add script here area 2D player.
08:27 - GD all right
08:31 - now to move our player around we're
08:33 - going to want to use we're going to use
08:34 - the arrow
08:36 - keys and that means we need to set up
08:38 - our inputs so if we look at the project
08:40 - settings
08:42 - under uh input map here there's a bunch
08:45 - of these already in here this is the
08:48 - default input map that good uh loads and
08:51 - so the arrow keys right now left right
08:54 - up and down are set to UI up UI right UI
08:57 - left and they also have Gamepad buttons
09:02 - on there if you happen to have one of
09:04 - those uh and you can go in here and you
09:06 - can add other ones if you wanted you can
09:08 - add other you can add other keys to
09:11 - these actions these are these are called
09:13 - actions and you can create your own
09:16 - actions
09:17 - too like you could name name one shoot
09:20 - and whatever buttons make shoot happen
09:22 - that would be the action you look for in
09:23 - your code so we're just going to stick
09:26 - with the default ones right now UI
09:27 - uncore left right up and down
09:31 - and we're just going to have that move
09:33 - our
09:34 - player so in our ready we're going to
09:38 - set fixed process to true so that we can
09:43 - run something every frame that's going
09:45 - to be our animation and our checking for
09:47 - the
09:49 - keys so that is going to have some code
09:51 - in it so first I'm going to set a a
09:54 - variable um let me click on player here
09:57 - in the inspector so that you can see
09:59 - this is our player node and if I go back
10:02 - to the script I'm going to add a
10:04 - variable for the speed of the player
10:07 - we're going to put export VAR speed
10:09 - equals
10:10 - 400 now when I hit save on this
10:14 - script look at there so now the speed
10:17 - variable has appeared in our inspector
10:19 - and we can we can actually change it
10:21 - right here in the inspector without
10:22 - going and changing it in the code that's
10:24 - what export does so any variable you
10:27 - want exposed into the editor and and
10:29 - viewable in the inspector you can just
10:31 - put export in front of very handy okay
10:34 - we're also going to have a velocity
10:36 - that's a vector
10:38 - 2 and this movement is going to work
10:40 - very similar to how we did the animated
10:43 - Sprite where we're going to set the
10:46 - position of the Sprite
10:49 - to whatever position it's
10:52 - at plus velocity time Delta we just need
10:56 - to check to see if the player is
10:58 - pressing the keys and you do that with
11:01 - input is action pressed and then the
11:04 - name of the action and you can see the
11:06 - suggestions have popped up here so let's
11:08 - start with say UI right right UI right
11:11 - was the right arrow
11:12 - key so if they have pressed that then
11:14 - this will return true otherwise it will
11:18 - return false so this is going to be true
11:20 - or false whether the button is pushed
11:23 - okay and the same for all the other
11:27 - ones and determining which ones are are
11:31 - pressed is what direction we're going to
11:32 - go in right if right and up are both
11:34 - pressed we're going to go up and to the
11:36 - right so we're going to need to figure
11:38 - out what our input Vector is what
11:43 - direction is the player having us move
11:46 - right and this can be this is going to
11:48 - be a combination of the two of the keys
11:51 - so it could be one zero it could be one
11:53 - negative one right depending on what
11:56 - they have pushed it's going to be
11:58 - something like that
12:00 - and so what we can do is we can set the
12:05 - input the
12:07 - x of the input Vector equal to this
12:11 - which could be one or
12:12 - zero right this is the right arrow key
12:16 - and I'm going to say
12:18 - minus the left Arrow key that way if
12:20 - left is true it'll be negative 1 if both
12:24 - left and right are pressed together then
12:27 - X will be zero so we won't move
12:30 - right and so we will just duplicate that
12:33 - line and we're going to have
12:36 - down and
12:39 - up sorry for the long line I have my
12:42 - font kind of big so that you can read it
12:44 - so it does make the lines long but we're
12:47 - just taking the X component of the
12:50 - vector is going to be right minus
12:54 - left and the Y component of the vector
12:56 - is going to be down minus up
12:59 - okay so now we know what our input
13:02 - is and our velocity is going to be need
13:05 - to be set to that
13:08 - direction but we want to take the
13:11 - input that input vector and normalize it
13:14 - because we don't want it to be longer in
13:17 - the diagonal directions right we don't
13:19 - want if it's
13:21 - this to be multiplying by a bigger
13:24 - number than if it was that okay so so we
13:28 - have normalized and then we just
13:30 - multiply by the speed to get it to the
13:32 - right length so now our velocity Vector
13:34 - will point in the direction we want and
13:37 - we can run
13:43 - it there we go I can now run around the
13:46 - screen very simply right we have to deal
13:50 - with the
13:51 - edges but I have basic eight-way
13:54 - movement okay now we're going to wrap up
13:56 - by stopping at the screen edges now I've
13:58 - gone ahead I copied and pasted from our
14:02 - previous example of the bouncing Sprites
14:05 - these two variables screen size which is
14:07 - the size of the viewport that we're
14:09 - looking at and extents which was the
14:11 - size of the Sprite so I'm doing get
14:13 - texture I'm doing it on the Sprite node
14:17 - so we get the size of the texture and
14:19 - then I'm setting the position to the
14:21 - center now to to do this what we're
14:24 - going to
14:25 - do is we're going to take and we're
14:29 - going to get a we're going to set the
14:32 - variable position equal to
14:35 - this equal to this stuff okay and we're
14:40 - going to do that so that we can adjust
14:41 - it and we just want to take position X
14:45 - and we want to make sure it can't go
14:47 - lower than the leftand side of the
14:49 - screen or greater than the right hand
14:51 - side of the screen and another word for
14:54 - that is we want to clamp it clamp is a
14:56 - function that will take some variable or
14:58 - some some value I should say and make
15:01 - sure it doesn't go below or above this
15:04 - minimum or maximum so we want to take
15:07 - position X and the minimum that we want
15:10 - it to be is well we'll put zero and the
15:15 - maximum will be screen
15:18 - size.
15:20 - width and pause y we're going to clamp
15:24 - to
15:27 - zero screen
15:29 - size.
15:34 - height okay and then we set position to
15:37 - that position okay and then this is what
15:39 - that will do is it's going to let us go
15:42 - to
15:44 - there and there and and there oh I see
15:48 - what
15:49 - happened okay so I just realized when we
15:51 - set up our
15:52 - player and we adjusted this Collision
15:55 - remember how we shifted this I shifted
15:57 - the wrong one but we want to shift is
15:59 - because this is this is our root node
16:02 - this is where the position we're
16:03 - tracking and see how the players offset
16:06 - so we need to take the player Sprite and
16:08 - we need to move it up we need Move It Up
16:10 - by
16:13 - 64 okay and that will make it now see
16:16 - then now it's centered on the area
16:18 - here's the area 2D it's centered on
16:21 - there and then we need to not shift
16:24 - our we're going to set that back to zero
16:27 - okay sorry about that I was just doing
16:31 - it backwards okay so now when we run
16:34 - this our player will
16:37 - stop our player Center is going to stop
16:39 - at the edges right just like we did
16:42 - before we're just going to have to
16:43 - adjust that by the
16:45 - extents and we'll do that by saying
16:48 - it's
16:53 - extents do
16:55 - width or screen size. width
17:00 - minus extense do width and then this
17:03 - will be the same thing except for height
17:09 - okay okay now we have our character
17:12 - staying on the screen not going off and
17:16 - we are ready for the next video where we
17:19 - will start making this little guy be
17:22 - animated I'll see you in the next video
17:24 - thanks for
17:27 - watching for