00:00 - welcome to the third and final part of
00:03 - the procedural dungeon generation
00:06 - tutorial for Godot 3 and this one we're
00:11 - going to wrap up and actually make our
00:13 - explorable dungeon that we can wander
00:16 - around in and has rooms and corridors
00:19 - all connected together so we have our
00:22 - dungeon rooms and pathway of getting
00:25 - generated this is going to be the last
00:28 - step we need to turn this into a tile
00:30 - map that we can walk around on so we're
00:32 - going to use a tile map node we're going
00:34 - to add that to the main and what we need
00:37 - to do the time up is we need to set the
00:39 - cell size to 32 by 32 because that's the
00:43 - size of the tiles we're using and in the
00:48 - downloads you can go and grab the tiles
00:54 - resource and drop that into tile set
00:57 - it's a really simple tile set that just
01:00 - has two tiles in it a grass tile and a
01:05 - stone tile the stone is going to be the
01:06 - walls and the grass is walkable if you
01:10 - want to use your own tiles that's fine
01:12 - you really just need to make the first
01:14 - tile tile number zero the walkable tile
01:18 - and town number one the tile with the
01:22 - collision shape on it so let's erase
01:25 - that and we're ready to go now since we
01:29 - have the visualization running of the
01:31 - room spreading out in the path being
01:33 - drawn and I want to keep that we're
01:36 - going to manually trigger making the map
01:39 - so here on our input we're going to add
01:41 - a new event and we're going to say press
01:47 - the tab key and pressing the tab key is
01:50 - let's see Sui focus next is the tab key
01:55 - we're going to call make map with that
01:59 - and that's going to generate our tile
02:01 - map so let's put that we can actually
02:05 - collapse find MST we'll probably need
02:09 - some do some drawing later but I'm going
02:11 - to collapse that for now make rooms
02:13 - is good okay so let's define make map so
02:24 - this is the this is the function that's
02:25 - going to create a tile map from the
02:30 - generated rooms and paths so we'll start
02:35 - with map dot clear and what that does
02:38 - that's a tile map node oh also I'm going
02:42 - to go up here to the top and I'm going
02:44 - to add a reference to the map just so
02:48 - that I don't have to type dollar sign
02:50 - tile map and have it do look up every
02:51 - time I want to access them Tom appt node
02:54 - and so calling clear is going to erase
02:58 - any tiles that exist so that if we're
03:00 - regenerating this we clear it out first
03:02 - and what we're going to do is we're
03:09 - going to take this area that it
03:11 - generated we're going to make this fill
03:14 - this whole area in with solid tiles
03:17 - we're all going to set them all to tile
03:19 - number one and then carve out the rooms
03:23 - and path with the walkable tiles tile
03:27 - number zero so first we need to figure
03:31 - out how big is the rectangle that
03:33 - encloses all of the rooms we make and
03:35 - then fill time map with walls then carve
03:43 - empty rows so we're going to make a
03:50 - variable called full rect that's going
03:54 - to be the full rectangle that encloses
03:56 - our entire map so these are easiest way
04:00 - to do that it's going to be to use one
04:02 - of the rectangle two functions called
04:04 - merge so we're going to loop through all
04:07 - the rooms and for each one we're going
04:13 - to get its rectangle and its rectangle
04:18 - is going to be its position
04:22 - - room size is the that's the top left
04:27 - and then the size is going to be room
04:32 - dot let's actually do this on the next
04:34 - slides it's kind of long and we're going
04:38 - to get the collision shape to denote the
04:43 - collision rectangle and we're going to
04:45 - get its shape extents and they remember
04:50 - the extents are the half width so we
04:53 - multiplied by two to get the full width
04:54 - and that is our rectangle shape that
05:03 - describes the room and then we just take
05:06 - our full rect and we call merge on it
05:15 - and that creates a rectangle that
05:17 - encloses both of them then we look
05:18 - through the do the next one and the next
05:20 - one and so on
05:21 - for this full rect the top left of the
05:24 - map is going to be world - map
05:31 - full erect dot position so that gives us
05:36 - the top left position of our map in our
05:39 - time out and the bottom right is the
05:43 - same for the lower end so now we have
05:52 - the two corners and we can now loop
05:54 - through all of those and change every
05:57 - tile to tile number one so we're going
06:03 - to want to go from top left X to bottom
06:07 - right dot y I'm sorry bottom right dot X
06:09 - and then in Y from top left to the
06:15 - bottom right dot Y and set that cell X Y
06:23 - 1 now we'll have a solid map and we can
06:29 - even test that out if we
06:33 - let it do it and then press tab and now
06:37 - we've made a full rectangle and now we
06:42 - weren't able to see our drawings anymore
06:44 - because the tile map is a child of main
06:46 - and maintenance where the drawing is
06:48 - happening so if you take the tile map
06:50 - node and cut under visibility and click
06:53 - show behind a parent then we'll be able
06:56 - to still see our drawings behind the
07:00 - generated Tama now I will point out here
07:03 - if your map is really really big this
07:06 - might take a little bit of time for it
07:09 - to generate and that might be something
07:13 - you have to deal with if you're doing a
07:15 - large map you could also pre set your
07:18 - map to be solid and then you wouldn't
07:21 - have to calculate any of this you would
07:23 - just carve out the bits you wanted it's
07:25 - probably the more efficient way to do it
07:27 - but for the purposes of our demo we
07:30 - refine the way we're doing it right now
07:34 - okay the next step is to carve the rooms
07:37 - and the corridors
07:38 - so first we'll loop through the rooms
07:40 - and convert their coordinates into map
07:43 - space and then carve out each rectangle
07:49 - into the grass tiles let's go over to
07:53 - our script here and that's going to go
07:56 - here right after we've filled it all
07:59 - we're going to carve the rooms and so
08:07 - what we're going to do is loop through
08:10 - the rows and for each room we need the
08:22 - to get the kind of size of the room and
08:27 - what we're going to do is take the room
08:29 - the room size divided by the tile size
08:33 - and we're going to take the floor of
08:37 - that so that we get a whole number you
08:41 - can only do tiles in whole numbers the
08:44 - position of the room
08:45 - is world to map room dot position and
08:51 - then the upper left of them of the
08:55 - particularly on is room dot position /
09:02 - tile size dot floor - s so remember the
09:14 - room dot position is actually the center
09:16 - of the room so this is the center of the
09:19 - room in tile space and then we back to
09:23 - the left and up by the size so now we
09:28 - can loop through these four X and range
09:32 - to sx x - -1 + y and range the same for
09:43 - the y and so why am i doing that why am
09:47 - i not starting at zero because i want to
09:50 - leave a little bit of room between the
09:51 - rooms where the collision shapes
09:54 - separate them until so that the rooms
09:56 - are all touching so when i carve them
09:59 - out i want to carve out the inside a
10:01 - little bit so that two adjacent rooms
10:03 - will still have a wall between them and
10:05 - it wouldn't be carved into one big empty
10:06 - space so now we can set cell UL dot x +
10:15 - x uo dot y + y - 0 and now when we run
10:25 - this we should see it carving out our
10:28 - rooms so we press tab and now we have
10:32 - rooms carved out everywhere we collected
10:36 - a room so now we need to do the same
10:40 - thing using the path a star node that we
10:46 - have that connects the rooms so
10:47 - everywhere there's a connection say
10:49 - between this room in this room we need
10:51 - to carve a path between these two points
10:56 - so since we're already looping through
10:57 - the rooms and going room by room we can
10:59 - do that in the same room loop so what
11:03 - we're gonna do is before we start I'm
11:06 - going to make a variable so I want to
11:09 - keep track of which corridors I've
11:11 - already done because I don't want to
11:13 - have to carve the same corridor twice so
11:16 - I only want to carve here I'll run this
11:19 - again so that we have a picture to look
11:22 - at so I'm looping through the rooms when
11:26 - I carve out this room I want to carve
11:28 - this corridor when I carve out this room
11:30 - I don't want to have to carve this
11:32 - corridor again so because if I did then
11:36 - not only am i doing everything twice but
11:39 - I might wind up with car being you know
11:42 - you'll as you'll see later say
11:43 - connecting these two rooms
11:44 - I could go this way and then up or I
11:47 - could go this way and then down and if I
11:51 - carved twice I might carve both of those
11:53 - and then I've got double the connections
11:56 - so this will be one corridor per
12:03 - connection so after we've carved the
12:08 - room
12:09 - we will carve the connection and we're
12:18 - going to do that by getting by using our
12:21 - path and getting the closest point to
12:26 - the position that we that the room is at
12:29 - so remember the path uses vector threes
12:32 - so we have to do room dot position X
12:41 - room dot position y zero
12:47 - and then for and then for each
12:51 - connection I'm going to abbreviate to
12:53 - connection to con path get point
12:58 - connection P connections P alright
13:05 - because each room might have more than
13:06 - one room it it connects to so we need to
13:10 - connect carve each of those connections
13:11 - so if not con and corridor is as long as
13:15 - we haven't already done it then we'll do
13:19 - it and then we need to figure out the
13:20 - start point and the end point so the
13:27 - start point is got a convert to map
13:33 - space vector to get point position P dot
13:44 - X just notice that yes and again this is
13:52 - because of the fact that it's got that
13:55 - get point position is going to return a
13:57 - vector three so paths that get point
14:03 - position dot y and then end is going to
14:11 - be the same thing except with the
14:13 - connection so we can copy this line and
14:16 - duplicate it and the endpoint of our
14:20 - corridor is the same thing except with
14:24 - whichever that connecting point is and
14:29 - once I have the start and the end I can
14:34 - carve a path from start to end and now
14:42 - that I've done it that I've done that
14:46 - connection I can say clora doors dot
14:50 - append
14:51 - that point so now that point won't ever
14:55 - get card from again because I've done
14:57 - all the connections so now we need to
15:00 - just define this carved path function
15:03 - carve path this carves any path from
15:09 - position 1 to position 2 in the map get
15:13 - some blank space here so first so this
15:17 - function does is carve a path between
15:20 - two points and this is pretty
15:26 - straightforward we just need to figure
15:27 - out whether we're going in the X what
15:30 - are we going to the right or the left
15:31 - and in the why are we going up or down
15:34 - so the X difference is the sign of
15:38 - position 2 X - position 1 dot X right is
15:44 - that sign will return positive or
15:47 - negative and same thing with the Y so
15:49 - now this way we know what direction we
15:51 - need to carve in and then the only issue
15:55 - we're going to have here because we're
15:56 - gonna use this to do a loop right and
15:58 - either count from X going upwards or
16:02 - account from X going downwards but we do
16:06 - need to deal with the fact that if pause
16:09 - x + 2 - plus 1 is 0 because they're on
16:13 - the same you know they're vertically
16:15 - aligned or they're horizontal
16:16 - horizontally aligned we can say if X if
16:21 - equals 0 then let's just pick a random
16:25 - one and to pick a random number to pick
16:32 - either random negative 1 or positive 1
16:35 - we take 0 negative 1 and we round it to
16:39 - a random integer from 0 to 1 X negative
16:46 - 1 to the 0 power is 1 and negative 1 to
16:49 - the 1 power is negative 1 just do that
16:52 - with both x and y and this is also going
16:56 - to help us with something that we're
16:57 - gonna do in a minute as well
16:59 - so you'll see why we did that if it
17:02 - doesn't seem necessary yet
17:05 - so now our choice is we need to decide
17:10 - whether we go so now we need to decide
17:16 - whether we go for example let's say
17:18 - we're looking at these two rooms on the
17:20 - right we could carve in the X this way
17:26 - and then the Y upwards or we could carve
17:30 - in the Y upwards and then the X this way
17:34 - alright so whichever one we decide
17:38 - should the you know should the
17:40 - horizontal portion be at the lower y
17:44 - coordinate or the upper one and vice
17:46 - versa so we can choose that randomly so
17:50 - that sometimes it'll choose to go this
17:52 - way and sometimes it will choose to go
17:53 - that way so we'll do that here by saying
18:01 - so this is choose we'll choose to either
18:10 - do X and then Y or Y and then X so X Y
18:19 - and then Y at Google pause - so this is
18:26 - going to be the one option and then if
18:30 - grand I percent 2 is greater than zero
18:36 - right then we have two 50-50 chance of
18:38 - doing the opposite so now we know so now
18:48 - we've chosen to either do the X first or
18:51 - the Y first and then we can do the loops
18:54 - so first we'll do the horizontal one so
18:57 - we're going to go from position 1 X to
19:01 - position 2 X by the X difference and
19:05 - when we set cell X and then X Y dot Y
19:15 - comma 0
19:17 - and then we do 4y and range pause one
19:21 - dot y + 2 dot y by the wide if map dots
19:27 - it so Y X X comma y 0 now we're almost
19:37 - there but let's take a look at what this
19:40 - does when we hit it you see we've got
19:44 - some quarters now but the one thing I
19:47 - don't like about these quarters is they
19:48 - are there are only one tile wide which
19:53 - means that they're gonna be really
19:54 - narrow and I'd prefer if they were if we
19:58 - also went one to the right or the left
20:01 - or the top of the bottom to make them
20:03 - two tiles wide and that's why we used
20:07 - this because we can just add this value
20:11 - to increase or decrease the X&Y and make
20:15 - them carve the second tile or the second
20:19 - adjacent tile so we'll also set cell x
20:24 - and X Y dot y plus y difference this is
20:31 - to widen the corridor and we got to do
20:38 - that in both okay and then now we will
20:56 - have wider corridors there we go so see
21:02 - this one these are two tiles wide and
21:06 - also you'll notice if I press tab and
21:08 - have it recarved right it's choosing
21:12 - randomly sometimes to go one way and
21:17 - sometimes go the other but we always get
21:20 - every room connected and then we get
21:25 - some interesting intersections too when
21:27 - they overlap like this one so
21:30 - get a little t-junction there okay so
21:32 - it's about time to wrap this up so I
21:34 - included in the starter project a
21:38 - character scene that's a top-down
21:43 - character that you can control with the
21:45 - arrow keys that use kinematic body that
21:47 - uses moving slides so that it will
21:49 - collide with the walls and then I've
21:53 - also added a start room and an end room
21:57 - variable so we know where the player
21:58 - should start and where the player's goal
22:00 - should be we're going to keep track of
22:02 - whether we're in play mode with meaning
22:04 - where are we walking around on the map
22:05 - or not or are we looking at it generate
22:07 - and then the player itself will be
22:10 - instance when we transition into play
22:13 - mode so couple things here in draw I
22:18 - loaded a font here and I'm just going to
22:23 - label the star trim in the end room if
22:26 - they exist and if it's play mode I'm
22:29 - going to drop out of draw and not draw
22:31 - the rooms in the path anymore
22:33 - so we don't need those when we're in
22:34 - play mode and then in the input what
22:37 - I've done is when you press the spacebar
22:40 - because you want to restart and generate
22:43 - a new map we're going to delete the
22:45 - player and drop out of play mode and
22:47 - we're going to clear out the star room
22:50 - and end room as well and how do you go
22:53 - into play mode well we're gonna press
22:55 - escape and that's going to instance the
22:57 - player and put it in the start room and
23:00 - that means that now when we run it we're
23:03 - going to generate our path we're going
23:06 - to press tab and generate the tile map
23:11 - which we can see and I'm going to press
23:14 - escape and we have our player here and
23:17 - the player also has a camera that zooms
23:20 - in and out if you want to see more of
23:21 - the map but now I can walk around the
23:23 - map and find my way to the end room
23:28 - wherever it was which is probably going
23:30 - to be far away from me on this one I
23:32 - believe it was way over here to the
23:35 - right because the start and end
23:37 - functions are just finding the leftmost
23:39 - room to be the start room and the
23:41 - rightmost room to be end
23:43 - room however that winds up working all
23:50 - right and so that is our randomly
23:52 - generated dungeon now obviously the
23:55 - dungeon itself is pretty boring it's
23:58 - kind of plain decorating the dungeon and
24:01 - populating it with treasure monsters and
24:04 - things like that is beyond the scope of
24:08 - this demo but it would probably make for
24:10 - a really good future one so if you have
24:13 - thoughts and suggestions on that please
24:15 - leave them in the comments below
24:17 - hopefully this these algorithms and this
24:20 - procedure is useful to you in generating
24:22 - your own dungeons or at least giving you
24:24 - a starting point to think about how you
24:25 - want to do it for your particular
24:27 - project either way I look forward to
24:28 - hearing about your questions and
24:29 - comments below and I will see you in the
24:32 - next lesson
24:40 - you