00:00 - this is a quick video on a very common
00:02 - question I see in the forums or on
00:06 - discord and that is how do you detect
00:08 - which tile you hit when you collide with
00:10 - otama alright so I've got a pretty
00:12 - common setup here where we have a tile
00:13 - map and a kinematic character that can
00:16 - move and jump and we wanted to detect
00:19 - what tile were colliding with when we
00:22 - jump around or run into walls and so we
00:26 - can see here that the player is in tile
00:29 - number 9 comma 4 that's this tile right
00:33 - here but I want to detect what how it
00:35 - collided with which is going to be this
00:36 - one 9 5 when I jump and in when I run
00:42 - into a wall and I'm in position 3 5 I
00:45 - wanted to detect that I ran into 2 5 now
00:49 - where people run into trouble is when
00:51 - you are using a tile map and you get a
00:53 - collision it's just going to say you
00:54 - collided with the tile map and so you're
00:57 - going to have to use your character's
00:58 - position and the normal of the tile map
01:04 - where you collided with it to figure out
01:05 - what tile you've corrupt collided with
01:07 - so for this setup in my character script
01:10 - I'm going to have the player emit when
01:14 - it has a collision the collision object
01:18 - and this is a kinematic collision 2d and
01:22 - the kinematic collision 2d contains
01:25 - information about what the object you
01:27 - collided with was and the normal where
01:31 - you collided with it and so that's going
01:35 - to be the information we need so we
01:37 - admit that kinematic collision so that
01:39 - nothing in my player really ties in or
01:42 - even knows that there's a table up I'm
01:44 - just going to omit the collision and let
01:45 - the tile map script deal with what
01:48 - happens so let's go over to the tile map
01:51 - script and so I connect that signal and
01:54 - now I'm going to receive that collision
01:57 - and if the thing I collided with it was
02:00 - a tile map then I can figure out where I
02:03 - am
02:03 - and the character's position we can find
02:07 - using world to map so this tells us what
02:10 - tile the player is standing in
02:13 - to find out which time I collided with I
02:16 - want to subtract the normal why am i
02:19 - subtracting the normal that's because
02:21 - when I collide with this tile that
02:22 - normal is pointing up well it's 0 comma
02:27 - negative 1 right it's a vector pointing
02:29 - up so I subtract from this tile subtract
02:32 - that from this tile then I'll be going
02:33 - down and I'll be finding this tile and
02:37 - so we get the tile at that position and
02:43 - if it's greater than zero we're just
02:45 - gonna move down by one tile and that's
02:48 - because my time app just adds a whole
02:50 - bunch of numbered tiles so we have the
02:53 - 15 we're gonna subtract 1 we'll be
02:55 - changing it to number 14 let's see that
02:58 - in action so there we are every time I
03:01 - jump I'm subtracting one from the tile
03:05 - now because we're subtracting the normal
03:07 - that means when I hit a wall the normal
03:09 - will be pointing this way so we will
03:11 - subtract one tile over and you'll see as
03:14 - I run a long as I'm sliding along the
03:17 - ground I'm generating a bunch of
03:19 - collisions and when I hit the wall I do
03:22 - over there as well
03:24 - so this is a really useful trick to
03:27 - detect for example when you jump up and
03:29 - hit a block above you or when you want
03:33 - to have any kind of tiles that react to
03:36 - the player hitting it so that's a
03:41 - kinematic body what if we have a rigid
03:43 - body instead so I've made this ball
03:45 - rigid body object and I've set its
03:47 - collision context reported to one so
03:51 - that will report contacts you have to do
03:54 - that on rigid body and then in its
03:56 - script in the integrate forces callback
03:59 - is where you're going to get a variable
04:01 - containing the current physics state for
04:04 - the current frame and that state is
04:06 - going to tell you how many contacts you
04:09 - have so we're going to loop through
04:11 - those and we're gonna get the object we
04:14 - collided with we're going to get the
04:16 - position where we collided and we're
04:18 - going to get the normal where we
04:20 - collided and we're going to omit that in
04:22 - a signal just like we did with the
04:24 - kinematic collision
04:27 - so let's go over to our main scene and
04:30 - we're going to instance a ball in there
04:33 - and we're going to connect that collided
04:38 - signal and here's what we're going to do
04:41 - with it so we're going to take that
04:42 - position - the normal convert that to
04:46 - world 2 map and then do the exact same
04:48 - thing with the tiles that we did when we
04:52 - had a collision with the kinematic
04:53 - character so let's go over here to our
04:56 - 2d mode and let's put the ball somewhere
04:58 - where it'll bounce and now you can see
05:02 - we're reducing the number whenever we
05:04 - collide with one of these tiles so
05:18 - that's it for this quick one-off demo
05:20 - hopefully this helps you in working with
05:22 - tile collisions in your project please
05:26 - leave your questions comments below
05:28 - suggestions for other quickie videos
05:30 - like this I'd like to do some more of
05:31 - these for some of the common questions
05:33 - that we see in the forums and on the
05:36 - discord thanks for watching
05:44 - you