00:00 - welcome to Gouda 101 a tutorial series
00:03 - where you learn how to use the Godot
00:04 - game engine in this set of tutorials
00:06 - we're gonna dive into the 3d side of
00:09 - things we'll look at how to navigate in
00:11 - a 3d editor how to create and manipulate
00:12 - 3d objects and how to work with some of
00:15 - godot's essential 3d nodes such as
00:17 - meshes and cameras ready let's get
00:20 - started
00:21 - when you first open a new project in
00:23 - Godot you'll see the 3d view and in the
00:27 - 3d viewport the first thing you'll
00:29 - notice is these three colored lines the
00:32 - red is the x-axis the blue is the z-axis
00:35 - and the Green is the y-axis so in Godot
00:39 - we're using in 3d the y-axis up some
00:44 - other 3d programs might use different
00:47 - orientations some use Z up but in Godot
00:50 - the X and z are the plane and the Y is
00:54 - the up and down axis and positive Y is
00:57 - up and this color scheme is going to
01:00 - continue throughout the interface the
01:02 - green for the Y the red for the X and
01:05 - the blue for the Z and you'll see that
01:07 - in the inspector later now navigating
01:10 - around in 3d is performed using the
01:13 - mouse and the keyboard together so here
01:15 - are the main controls the mouse wheel is
01:18 - going to zoom you in and out the middle
01:22 - button if you click the middle button
01:23 - and drag you will orbit the camera
01:27 - around whatever object you're looking at
01:29 - holding down shift while you drag with
01:32 - the middle button will pan the camera so
01:35 - we're moving the camera horizontally and
01:38 - vertically but not changing which way
01:39 - it's pointing
01:41 - and then right clicking and dragging
01:42 - will actually rotate the camera so the
01:45 - camera is not moving but it's rotating
01:49 - another navigation method you can use is
01:53 - if you press shift F you'll be taken
01:56 - into free-look mode which means now just
01:58 - moving all I'm doing is moving the mouse
01:59 - and then by using WASD you can fly
02:03 - around this is similar to the UI that's
02:07 - used in a lot or the control scheme
02:09 - that's used in a lot of 3d games and you
02:11 - press shift F again it'll toggle back
02:13 - out of that mode now you can also
02:16 - control the camera using the perspective
02:18 - button up in the top left this lets you
02:21 - snap the camera to a certain of view top
02:24 - down from the front from the left etc
02:28 - and so depending on where your objects
02:30 - are and how they're arranged that can
02:32 - let you snap to a particular position
02:36 - and view it from the angle that you want
02:38 - to view it from so let's add our first
02:43 - 3d node so if you go over here to create
02:47 - root node when you click on 3d scene
02:48 - it's going to add a spatial node and the
02:52 - spatial node in 3d is the equivalent of
02:55 - the node 2d when you're in 2d space all
02:58 - of the 3d nodes inherit from it and it
03:01 - has a set of properties that all 3d
03:04 - objects are going to need now first
03:07 - thing you'll notice once you add it is
03:08 - this
03:09 - well object appeared in the center these
03:11 - arrows and circles this is not the node
03:15 - this is called a gizmo gizmos are used
03:19 - to move and orient your 3d objects on
03:22 - the screen notice that they're
03:25 - color-coded along with the axes and so
03:29 - to use the gizmo you can grab the arrows
03:32 - so grab the green arrow I'm moving it up
03:34 - and down along the y-axis if I grab the
03:37 - blue arrow I'm moving it along the Z and
03:39 - so on and the Rings are used to rotate
03:43 - the object so if I grab the red ring I'm
03:45 - going to rotate it around the x-axis and
03:49 - so by using the gizmo you can arrange
03:53 - and orient your objects where they need
03:55 - to be gizmos can operate in two
03:57 - different modes by default they're in
04:00 - global mode which means they're aligned
04:02 - with the
04:03 - global x y and z-axes so even if I move
04:07 - along Z over here and I move along X and
04:11 - let's say I rotate it the body rotates
04:14 - but the axes are still pointing parallel
04:17 - to the global axis if I pull up it's
04:21 - going to move up along the y axis move
04:24 - it back here and the other mode is
04:27 - called local mode and if you go over
04:29 - here you see the button here toggles
04:32 - between global and local space mode and
04:34 - you can press the letter the T key on
04:36 - your keyboard to toggle at when we're in
04:39 - local space mode now if I rotate around
04:43 - the x-axis
04:44 - so do the arrows so now these errors are
04:48 - representing the body's local x y&z so
04:52 - if I move it along the Z it's going to
04:54 - go off in this diagonal direction and
04:56 - now I'm up above the plane so depending
05:01 - on how you're moving your object
05:04 - toggling between local and global space
05:07 - will help you get it to where you want
05:09 - it to be now let's look at the inspector
05:12 - for the spatial node over here under
05:15 - transform you'll see you have three
05:17 - properties translation rotation and
05:20 - scale
05:20 - so unlike the 2d nodes which have
05:23 - position translation is the equivalent
05:26 - so you see if we start moving it along
05:28 - the Z the Z changes removable on Y the Y
05:33 - changes and so on and a quick note about
05:37 - units in 3d one unit is typically
05:43 - considered to be one meter you can
05:46 - really have it represent whatever you
05:48 - want if you're making a game where
05:51 - everything's microscopic and you're
05:52 - running around in a microscopic world
05:54 - each unit might be you know one
05:56 - millimeter but in general each unit that
06:01 - you move is one meter and so an object
06:04 - that's one meter cube would be the size
06:08 - of this grid that you see right now and
06:10 - now if I rotate you'll see the rotation
06:13 - numbers change and
06:15 - so on and so you can use those in the
06:18 - same way that you would use the
06:20 - properties in 2d and just like a node 2d
06:23 - a spatial has no size or appearance of
06:26 - its own in 2d you'd use a sprite to add
06:29 - a texture to your node so it would be
06:32 - visible in 3d you need to add a mesh a
06:35 - mesh is a mathematical description of a
06:39 - shape it consists of a collection of
06:41 - points called vertices and these
06:44 - vertices are connected by lines which
06:45 - are called edges and multiple edges
06:48 - together make a face so for example
06:51 - here's a picture of a cube and so the
06:54 - corners are the vertices and there are
06:58 - eight of those the edges are the
07:00 - connections between the vertices there's
07:02 - 12 of those and the faces are the square
07:06 - surfaces that are formed by the edges
07:09 - which are six in a cube
07:12 - so typically meshes are created using 3d
07:14 - modeling software such as blender you
07:16 - can also find collections of them online
07:18 - to download however sometimes you just
07:21 - need a basic shape such as a cube or a
07:23 - sphere in this case Godot provides a way
07:26 - to create simple mesh is called
07:27 - primitives so let's add a mesh instance
07:31 - to our spatial the mesh instance
07:37 - represents a mesh and over here you can
07:40 - see in the inspector it's mesh property
07:42 - is empty so if we click the down arrow
07:44 - you can see you could load a mesh that
07:46 - you have or you can create one of these
07:49 - primitives let's select the cube
07:54 - now let's save our seam and run it and
07:57 - see what our cube looks like in-game
08:02 - well it looks like nothing and that's
08:05 - because in 3d you won't see anything in
08:09 - the game window unless you have a camera
08:11 - to tell Godot what you want rendered in
08:15 - the game viewport so we need to add a
08:18 - camera to our scene so I've added the
08:26 - camera here's its gizmo let's move it
08:28 - out of the box so that we can see it so
08:31 - that is our camera
08:33 - this pink pinkish purple pyramid here is
08:37 - the cameras represent the camera's view
08:39 - so it's facing this way and the little
08:42 - triangle up here on top shows you the
08:44 - top of the camera you can always check
08:47 - what the camera sees by clicking the
08:49 - preview button here that's what the
08:51 - camera sees so if we wanted to we can
08:54 - move the camera up a bit rotate it to
08:57 - point down a bit and then it's gonna be
08:59 - looking at the cube like that now if we
09:04 - play the scene we will see what that
09:09 - camera sees now you might notice that
09:12 - this cube appears kind of a light bluish
09:15 - color and in reality this this mesh is
09:19 - white the blue color is coming from the
09:22 - ambient lighting so in the next part
09:24 - we're going to talk about how to light
09:26 - your scene and also how to change the
09:29 - appearance of your mesh using a material
09:32 - thanks for watching and I'll see you in
09:34 - the next video
09:42 - you