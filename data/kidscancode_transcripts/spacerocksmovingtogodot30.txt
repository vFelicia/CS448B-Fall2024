00:00 - welcome back this is a new video in the
00:03 - space rocks judo game engine development
00:07 - series and this time around we're going
00:10 - to be talking about moving this project
00:11 - over to the new version of Godot 3.0 now
00:16 - 3.0 is currently in alpha which means it
00:19 - is not stable not considered ready for
00:23 - primetime yet but I've been using it a
00:26 - lot lately and it's looking really good
00:28 - so I'm gonna make this project my
00:32 - experiment for using some of the new
00:35 - features in it and showing how some of
00:38 - the things that are changing from 2
00:39 - point 1 to 3 how they're going to work
00:42 - so a couple of quick notes first this is
00:45 - running in the latest build as of the
00:50 - day I'm recording this of the 3.0 alpha
00:53 - it will not work with alpha 1 the one
00:58 - that you can download so you will have
00:59 - to build your own version if you want to
01:02 - run this code if you haven't built the
01:07 - Godot engine before it is really easy
01:10 - it's probably one of the easiest
01:12 - open-source projects to build that I've
01:15 - ever come across the directions are here
01:17 - on the website go ahead and take a look
01:20 - clone the repository and give it a shot
01:22 - if you're not up for that
01:24 - another possibility is you can get daily
01:27 - builds at this website and over here you
01:31 - can see a bill just about every day so
01:35 - that you can make sure you've got the
01:36 - latest version of the code of course be
01:39 - aware that sometimes that means things
01:41 - will break but I'll put the links to
01:43 - these below so you can get them and
01:45 - either build or a demo to build yourself
01:48 - so what's changed well if you haven't
01:51 - looked at 3.0 before you'll see that
01:53 - there's a lot of minor UI changes things
01:56 - have been moved around a little bit the
01:58 - color schemes a little different but
02:00 - overall the engine is still the gudo
02:04 - engine you're familiar with specifically
02:07 - moving the game over there were some
02:10 - things that needed to change and some
02:12 - things I changed along the way
02:13 - since as I was doing it it was
02:15 - convenient now it is possible in Godot
02:19 - 2.1 to use the export tool and this will
02:24 - do some conversion of your scenes and
02:27 - things like that
02:30 - however it's not exactly perfect when I
02:33 - tried it with this project the result
02:36 - was a bunch of errors mainly from things
02:42 - like the texture is not being converted
02:44 - the same we used the spritesheet atlas
02:49 - importer tool to grab all of the
02:51 - kennyart from the from the art pack and
02:54 - that doesn't work in the new in 3.0 the
02:58 - texture format is changed the import
03:00 - process has changed for assets in 3.0 so
03:03 - you still have to do a lot of manual
03:05 - changes alright so what's changed well
03:10 - probably the biggest changes happen with
03:11 - the asteroids so I decided this time
03:14 - around as I was converting things to
03:16 - make the asteroids rigid bodies instead
03:19 - of kinematic bodies and the reason I did
03:21 - that is one it makes the code a little
03:24 - simpler we just give them a linear
03:28 - velocity when we spawn them and send
03:30 - them on their way we still use the same
03:33 - process of choosing the texture
03:36 - depending on what size we want and
03:38 - making a collision shape to match but
03:41 - now we're just gonna set a linear
03:43 - velocity when the asteroid is created
03:46 - and let it go and that also lets us do a
03:51 - mass so I can assign and in the global I
03:54 - assigned a value here for the asteroid
03:58 - mass so the big rocks have a much bigger
04:01 - mass than the tiny ones and that means
04:03 - when they bounce off of each other the
04:05 - big ones you know if the little one
04:06 - bounces off a big one the little one
04:08 - will bounce more the big one will barely
04:10 - be affected and that looks a little
04:12 - better it looks looks nicer you'll see
04:14 - when we run it we also we still have the
04:19 - little puffs of smoke coming off when
04:22 - they hit same as we did before but also
04:26 - what I
04:27 - did was in the main instead of having
04:30 - the asteroids wrap around I just created
04:33 - some invisible walls here out of static
04:36 - bodies so these are the edges here
04:38 - they're just for static bodies so the
04:42 - rocks are gonna go off the screen a
04:43 - little bit and bounce back on and I made
04:45 - these bouncy so they'll make sure you
04:48 - know to send it back onto the screen and
04:50 - that looks a little nicer too and then
04:53 - the last thing I changed about the rocks
04:55 - was the spawning instead of putting a
04:57 - bunch of position 2ds like we did before
05:00 - so I just drew a path 2d around the edge
05:03 - and to spawn the asteroid when we when
05:08 - we have a new one for example we will
05:11 - just pick a random spot so when we do a
05:14 - spawn asteroid I'm sorry here when we do
05:18 - in the new level right because we want
05:20 - to spawn new ones we just pick a random
05:22 - offset on that path follow and put the
05:26 - asteroid at its location and that just
05:29 - means they can spawn it that way they
05:30 - can spawn anywhere along the edge and
05:31 - it's a little better that'll be a little
05:34 - better when we have a lot more of them
05:35 - spawning to something big you'll notice
05:39 - in the code is that it looks a lot more
05:43 - it looks a lot cleaner and a lot more
05:46 - losing this in a little bit a lot
05:49 - shorter basically and that's because
05:52 - we're taking advantage of a couple of
05:54 - new GD script features one of which is
05:57 - this dollar sign shorthand so this
06:01 - dollar sign music music is the music
06:06 - note over here
06:06 - is equivalent to saying get node music
06:12 - dot play write that is something we had
06:17 - to write all the time in 2.1 and it also
06:22 - means that if you're going to be
06:24 - referencing this note a lot we don't
06:26 - have to do that on ready var music
06:32 - equals get node music that we had a
06:38 - whole ton of
06:40 - the top of our scripts and so it got rid
06:43 - of a lot of code and in fact I just did
06:45 - a quick count and while this project
06:48 - does the same thing as the 2.1 version
06:51 - it has a little bit less than half the
06:54 - number of lines of code so we've really
06:57 - trimmed it down and made it more concise
06:59 - less code is always better because the
07:02 - more code you have the more places you
07:04 - can have bugs so this is so this is good
07:07 - and let's see so that's mainly the
07:12 - changes to the rocks to the player and
07:15 - the enemy we also made a little change
07:17 - on the bullets so previously we were
07:21 - making the bullets that be that these
07:23 - entities shot children of that entity
07:26 - but what that meant was that if the
07:28 - enemy shoots at me if the enemy gets
07:32 - blown up those bullets that it shot will
07:34 - just instantly disappear and we don't
07:37 - want that we want the bullets to be in
07:39 - the main scene so we've created a shoot
07:43 - signal and that shoot signal is both the
07:46 - enemy and the player have that signal
07:48 - they both have a bullet configured which
07:50 - is just a scene that they load and when
07:53 - they shoot they emit that signal and
07:58 - that signal passes along with it
08:00 - what bullet object is being shot what
08:05 - position the bullet should appear at and
08:08 - what rotation or direction that bullet
08:11 - should go in and then in the main we
08:13 - have an add bullet function here which
08:16 - will which that signal is connected to
08:18 - which is just gonna spawn that bullet in
08:21 - a bullet container here and that will
08:25 - also allow us in the future you know if
08:27 - we decide we want the player to have
08:29 - these laser bullets but also maybe a
08:32 - heat-seeking missile or something they
08:35 - can load a different kind of weapon and
08:37 - you know and then when we do the shoot
08:39 - we can emit the signal and say spawn one
08:42 - of those type of weapons instead of the
08:45 - bullet and that'll be a lot more
08:47 - flexible as well if we play the game
08:50 - you'll see it pretty much looks exactly
08:52 - the same as it did before
08:54 - we can fly around we can shoot the
08:57 - asteroids we can shoot the bad guy who
09:02 - shoots back at us and that's all working
09:05 - as before now I had been posting all of
09:09 - the code for this project and the other
09:12 - tutorials here on this github repository
09:15 - but for space rocks now that it's
09:18 - starting to get kind of big I'm gonna
09:20 - I'm gonna move this over to a new
09:22 - repository all of its own and I'll link
09:26 - to that below as well I recommend you
09:28 - clone that and take a look at it when
09:31 - you've downloaded once you've downloaded
09:32 - or built your own version of 3.0 so that
09:36 - you can play around with it and see how
09:38 - those changes worked out alright so as
09:41 - we move forward I've been working a lot
09:43 - on the updates to the official Godot 3.0
09:48 - Docs and as I do that and I work on some
09:52 - of the different nodes some of the
09:54 - different functionality those will be
09:57 - the perfect time to incorporate that
09:58 - into this project some of the next steps
10:02 - are going to be to add a UI for upgrades
10:05 - so that we can upgrade our ships any
10:08 - other various performances so we start
10:10 - out with our ship being slow and weak
10:12 - and gradually be able to upgrade it to
10:17 - increase those abilities after that
10:21 - we're gonna be working on the title
10:23 - screen and things like that we're going
10:25 - to start talking about how to export
10:28 - your projects so you can run this on
10:31 - desktop platforms and distribute it
10:34 - online and whatever else we think of
10:37 - feel free to post some suggestions in
10:39 - the comments below if you have some
10:41 - additions you'd like to see and I will
10:43 - see you next time
10:52 - you