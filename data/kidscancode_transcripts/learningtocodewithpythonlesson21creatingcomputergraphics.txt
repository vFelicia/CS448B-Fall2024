00:00 - welcome back to learning to code with
00:01 - Python this time we start on chapter 2
00:06 - talking about computer graphics and
00:09 - animation so far the programs we've
00:13 - written have just used simple print
00:15 - statements to output words to the screen
00:16 - but what if we want to create something
00:18 - that has graphics remember the
00:21 - computer's display is made up of tiny
00:23 - little dots called pixels lots and lots
00:26 - of them for example the computer I'm
00:28 - using to make these videos has 1920
00:33 - pixels across and 1050 pixels from top
00:40 - to bottom if we multiply these two
00:43 - numbers together that's over 2 million
00:47 - pixels imagine if we had to write our
00:51 - program and keep track of every single
00:54 - little pixel on the screen which ones
00:56 - are on which ones are off what color
00:58 - each one is and every time we wanted
01:00 - something on the screen to change we had
01:02 - to know exactly which pixels to change
01:05 - programming would be very very difficult
01:10 - fortunately we don't have to do that
01:12 - thanks to some other programmers that
01:14 - have created things called graphics
01:16 - libraries to help us out there are many
01:19 - different graphics libraries out there
01:20 - that you can use the one that we're
01:22 - going to use is built into Python you
01:24 - don't need to download anything extra
01:26 - it's called the TK interface so let's
01:30 - switch over to our idle window and start
01:31 - coding the first thing we're going to
01:34 - need if we want to draw on the screen is
01:36 - we need to make a window to draw in
01:39 - so first let's import TK TK enter stands
01:44 - for TK interface this import statement
01:49 - might look a little different from the
01:50 - ones we've used before that's because
01:53 - the TK interface library has many
01:56 - different commands and tools in it you
02:00 - can import the ones that you're going to
02:01 - use and leave out the ones that you're
02:03 - not going to use but for this example
02:05 - we're going to use this asterisk
02:07 - asterisk here which tells the computer
02:09 - to import everything from the TK
02:14 - alright now to create our window we're
02:16 - going to need four lines of code we need
02:21 - to start a TK object this actually
02:26 - initializes the TK system starts it up
02:28 - so that we can start using it and then
02:32 - we're going to make a canvas which is
02:35 - going to be the thing that we're going
02:36 - to draw on and the canvas is going to
02:39 - have a width of 500 pixels and a height
02:42 - of 400 pixels and then let's go ahead
02:47 - and set the title of the window we're
02:52 - going to say drawing this will be the
02:55 - title that goes up here at the top of
02:56 - the window and then we say canvas dot
02:59 - pack to actually tell it we're done with
03:02 - the settings actually create that window
03:04 - and show it up on the screen if we ran
03:07 - this program now we would see the window
03:09 - appear and then right away it would
03:11 - disappear again because we got to here
03:13 - and that's the end of the program we'd
03:15 - like to have the window stay up so for
03:17 - right now while we're not doing anything
03:19 - else we're going to put canvas main loop
03:22 - which gels tells the computer to just
03:25 - wait and show the screen and don't do
03:28 - anything else and don't end okay so
03:30 - let's try running it so I'm going to
03:32 - save this as TK example and then we can
03:39 - run it and what you should see is a
03:42 - window that looks something like that
03:44 - there's our canvas that's 500 pixels
03:47 - wide and 400 pixels tall and it has the
03:50 - title drawing well now we have the
03:56 - canvas window it may not seem very
03:58 - exciting yet but now we have a place
03:59 - where we can draw what can we draw well
04:02 - to start with there are some handy
04:03 - commands for drawing basic shapes before
04:06 - we do that though let's talk about
04:07 - coordinates the TK coordinate system is
04:10 - a little bit different from the one we
04:11 - used with turtles earlier in the series
04:13 - TK follows the same setup that just
04:15 - about all graphics libraries and
04:17 - programming use so if this is our canvas
04:21 - window then
04:26 - you'd expect this is the x-axis and this
04:28 - is the y-axis now in your math class you
04:31 - may be used to drawing your axes like
04:33 - this and this is the x-axis and it gets
04:35 - bigger as it goes this way and this is
04:38 - the y-axis and it gets bigger as you go
04:40 - up well in computer graphics we start
04:47 - things a little differently this is the
04:48 - this would be the origin right here so
04:51 - this is 0 comma 0 and X gets bigger as
04:54 - you go to the right but Y gets bigger as
04:57 - you go down from the top so this over
05:02 - here in our example window would be 500
05:05 - X and 400 Y so its flipped from the way
05:15 - you're used to drawing it in math class
05:16 - but the nice part about this is that
05:18 - there's no negative numbers Y just goes
05:20 - from 0 to however tall our window is and
05:24 - X just goes from 0 to have our wide our
05:26 - window is so using those coordinates we
05:30 - can tell the computer where we want
05:32 - things to be in our canvas window so if
05:34 - we draw it want to draw a line we just
05:36 - have to tell it this point and this
05:40 - point and it will figure out all the
05:42 - pixels that need to be changed to
05:44 - connect those two points so let's try
05:47 - that out
05:50 - so let's try drawing a line so we'll put
05:53 - this before the main loop so the command
05:56 - is canvas create line and in order to
06:00 - create a line we need to tell it those
06:02 - two points that connect the line
06:04 - so first we'll tell it where to start so
06:07 - how about we say zero zero and where we
06:10 - want it to end so we'll put 500 400 all
06:13 - right so that should create a line all
06:15 - the way from this top left corner to the
06:19 - bottom right corner and if we run it
06:24 - that's what we should see like that a
06:33 - couple other commands to create simple
06:36 - shapes are we can say canvas create
06:39 - rectangle well this one works just like
06:43 - a line if we give it two points it'll
06:45 - just draw the rectangle that those two
06:47 - points make the diagonal of so for
06:51 - example if I said to draw from 100 comma
06:55 - 100 to 200 comma 250 then it should draw
07:04 - a rectangle between those two points
07:08 - like that we can also do something like
07:14 - this where we can say fill equals and
07:16 - give it a color and it will fill in that
07:20 - shape with whatever color we say like
07:23 - that so there's no command for create
07:29 - square if you want to create a square
07:31 - you just need to make sure you make a
07:32 - rectangle that's the same width and
07:35 - height so if I make the width from 100
07:39 - to 250 and the height from 100 to 250
07:42 - that would be a square
07:52 - the next command is create oval now
07:57 - create oval works a lot like create
08:00 - rectangle if you give the computer two
08:04 - points like this then if you imagine the
08:09 - rectangle that would connect those two
08:11 - points then the computer is going to
08:14 - draw the oval that fits inside that
08:17 - rectangle okay
08:19 - and again if you wanted it to be a
08:24 - circle you would just need to make sure
08:26 - that the width and height were the same
08:28 - so let's just draw one up in the corner
08:31 - so we'll start it up in the corner and
08:33 - we'll make it go to say 300 pixels wide
08:39 - but we'll only make it 50 pixels tall
08:42 - and we'll fill it with green so I'll
08:47 - give us a really wide oval like that but
08:55 - if we want to do to be more circular we
08:59 - would just change so the dimensions are
09:04 - the same like that and we can even
09:10 - more complicated shapes using the create
09:14 - polygon command and with that one we can
09:18 - give any number of points so any number
09:21 - of points on the screen and the computer
09:25 - will try and connect them up to make a
09:26 - polygon so for example if we wanted to
09:29 - draw a triangle we need three points so
09:32 - do one up towards the top we do one
09:35 - towards the bottom and another one to
09:38 - the right of that towards the bottom and
09:40 - let's say we fill it with purple then
09:45 - the computer will connect those three
09:47 - dots and make a triangle so it's not
09:55 - easy but if you wanted to draw a really
09:57 - complicated mini sided shape you could
09:58 - figure out which points you wanted to
10:01 - use we will do one more example before
10:05 - we wrap up this video and let's say we
10:08 - wanted to do a bunch of random
10:10 - rectangles all over the screen well we
10:13 - can import random so that we can use the
10:18 - random commands and then we can say for
10:20 - I in range 100 all right we need four
10:27 - random numbers right for the two
10:29 - opposite corners so we could say X 1
10:32 - equals random R and range 500 because
10:38 - that's the width of our screen and we'll
10:41 - do y1 400 and then we can say X 2 and Y
10:58 - 2
11:02 - and then we just want to create that
11:08 - rectangle x1y1 x2y2
11:15 - and you'll see this will take no time at
11:19 - all as soon as you run the program it's
11:22 - going to draw all those random
11:23 - rectangles all over okay so that's where
11:27 - we'll stop for today go ahead and play
11:30 - around with this make it so that you
11:32 - could make it so that the rectangles are
11:33 - all filled with different colors go back
11:36 - and look at the turtle how we did random
11:38 - colors when we did those programs make
11:41 - them different sizes make them random
11:42 - circles if you want get used to how the
11:46 - coordinates work and how you locate
11:49 - things on the screen and in the next
11:51 - episode we will look at how we do
11:53 - animation thanks for watching and we'll
11:57 - see you next time
12:05 - you