00:00 - welcome back to part 7 of circle jump
00:02 - we're still working out in our Godot
00:04 - Engine mobile game and this time we're
00:07 - gonna make the circles move which is
00:09 - going to add some difficulty to the
00:11 - progression of the game alright let's
00:14 - get started okay the first thing we need
00:16 - to do is we need to fix a bug and when
00:18 - we run the game and we're at the title
00:21 - screen if we spam this button you see it
00:25 - triggers more than once and we wind up
00:27 - crashing we're sending out the signal
00:30 - the press's signal on the button
00:32 - multiple times but our code isn't
00:34 - accounting for that and so there's a
00:36 - couple things we can do about that but I
00:38 - think the easiest is going to be we go
00:40 - to our base screen script here and after
00:46 - we have clicked the button and we call
00:48 - the disappear method we're gonna disable
00:51 - all the buttons because we don't want to
00:53 - capture any more button presses and
00:55 - since we have them all in a group that
00:57 - should be pretty easy we can just say
00:59 - call group to call the same function on
01:03 - every group and the function we're going
01:05 - to call on the buttons group is set
01:10 - disabled and we're going to set it to
01:13 - true and then we want them to come back
01:18 - and be enabled again when they appear so
01:22 - we'll set this to false on up here and
01:26 - that should prevent us from being able
01:30 - to yeah see I'm clicking a bunch of
01:32 - times
01:33 - I can't multiply I can't multiple click
01:38 - on these buttons yeah that fixes the
01:41 - problem ok on to new features so over
01:44 - here in the main we are getting points
01:47 - whenever we get captured but we are
01:52 - gonna use that score to handle the
01:54 - progression the difficulty progression
01:56 - and we want to spawn different types of
01:57 - circles and that kind of thing but we
02:00 - might have other things that give us
02:02 - points besides just being captured and
02:05 - we're gonna want to check that score and
02:07 - when we cross certain thresholds change
02:11 - the
02:12 - the spawn rate of circles and things
02:13 - like that so to make this easier I'm
02:16 - going to take score here and I'm going
02:17 - to make it as set get so we have a
02:21 - function that we can call when we change
02:25 - the score and that means here we can do
02:32 - set score zero now you can do it this
02:40 - way you can say set score zero or if you
02:43 - want to call the set get locally you can
02:45 - say self dot score equals zero now the
02:49 - drawback of that is there is a small
02:52 - performance hit and calling self because
02:54 - you're generating a reference to the to
02:59 - this node in the case of this game
03:02 - performance is far from an issue and I
03:06 - like the clarity of the code looking
03:08 - like this so in this case I'm not going
03:10 - to call the set get directly and then
03:13 - here we'll say self dot square plus
03:16 - equals one and then what we want to do
03:18 - in the set score function is update the
03:24 - score so func set score we pass it's
03:28 - gonna be passed a value we're going to
03:30 - set the score we're going to set the
03:33 - score equal to that value and we're
03:37 - gonna update the HUD so that should be
03:40 - fine that shouldn't change anything at
03:42 - all
03:48 - let's see the score is just going up the
03:50 - same as before but what we also want to
03:52 - do is keep track of what level we're on
03:58 - and that's going to go up every certain
04:02 - number of rings which we put here on
04:04 - setting circles per level five so every
04:07 - five circles that we hit or every five
04:09 - points we get currently that's going to
04:12 - move us up a level we'll check that and
04:16 - they set score as well so if we our
04:25 - score is greater than zero and score
04:28 - we'll divide by circles per level and if
04:34 - the remainder is zero we're at a
04:35 - multiple of five so we will increase the
04:39 - level by one and we should show a
04:44 - message to that effect we moved up to
04:50 - level whatever okay we make sure to
04:57 - initialize level when we're starting a
05:00 - new game and that should do it let's
05:05 - give it a shot here
05:14 - yeah went to level two okay over to the
05:18 - circle where we want to add movement I
05:20 - want the circles to move back and forth
05:22 - so that as the game gets harder we have
05:25 - moving targets that we have to jump to
05:27 - so we're going to do that by using a
05:30 - between and I'm going to call this move
05:35 - between and then in the script we're
05:39 - going to get a reference to it and then
05:48 - moving is going to be separate from the
05:51 - modes right we might have a static
05:53 - circle that's moving we might have a
05:54 - limited circle that's moving or other
05:56 - modes that we add so what we are gonna
05:59 - do is have a move range this is how many
06:03 - how much the distance of the move is how
06:06 - far back and forth if we set this to
06:08 - zero we'll have a non moving circle and
06:10 - then we're also going to have the move
06:12 - speed which is gonna be how fast it
06:15 - moves back and forth and then so now we
06:19 - need to set up that movement and we're
06:22 - gonna do that with a function down here
06:26 - at the bottom I'm going to call this the
06:29 - set between and we're going to call this
06:34 - to start the movement but when the tween
06:37 - completes we want it to repeat again so
06:39 - we're going to call this again every
06:41 - time the tween finishes its cycle and
06:45 - that means that when we call it with the
06:47 - tweens completed signal it's gonna pass
06:49 - in two values which we don't actually
06:52 - need but we have to account for them and
06:58 - if move range is zero we're gonna return
07:06 - we're not going to move so the first
07:08 - time we call this we won't start the
07:10 - tween and now move range we're going to
07:14 - want to reverse every time we call this
07:17 - so that moves back and forth and then
07:22 - the move tween we're going to set up its
07:26 - movement we're gonna interpolate the
07:29 - property on cell of position X : X when
07:34 - you write it in this reference and then
07:40 - we're gonna go from whatever our current
07:43 - position dot X is to position dot X plus
07:48 - move range the duration is move speed
07:53 - and we're going to use between trans
07:58 - quad and tween and out for the easing
08:07 - and then we're just going to say move
08:10 - between dots start now we want to
08:15 - connect the tweens between completed
08:20 - signal and we want to connect it to that
08:25 - same function so that every time it
08:29 - finishes it's going to come back and
08:30 - call this again and then in our in it we
08:36 - can set that for the first time let's
08:45 - give that a shot and see what happens
08:47 - there we go the circles are moving back
08:53 - and forth
08:54 - I only see them that's exactly what we
08:57 - want right that'll do it for this time I
09:01 - hope you enjoyed it and I'll see you in
09:03 - the next video
09:11 - you