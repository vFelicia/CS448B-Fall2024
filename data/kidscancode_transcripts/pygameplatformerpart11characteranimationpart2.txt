00:00 - welcome back this is part 11 of our
00:03 - platformer game we're going to continue
00:07 - to work on character animation this time
00:09 - around we're going to work on the
00:10 - walking animation in the last video we
00:15 - set up the idle animation for our
00:18 - characters so that when we're standing
00:20 - still we look like we are moving in
00:25 - place gives it a little bit more
00:26 - character and this time around we want
00:28 - to talk about the moving animation the
00:31 - walking animation when we go side to
00:32 - side so we're going to go back over to
00:36 - our player sprite into the animate
00:40 - method alright and we set our idle
00:43 - animation to run if we're not jumping
00:46 - and we're not walking so now we want to
00:50 - set up what animation should play if we
00:53 - are walking if self dot walking is true
00:56 - okay and so how do we know to set self
00:59 - dot walking to true well one thing we
01:02 - can do is we can just say if our X
01:07 - velocity is not equal to zero then we
01:12 - must be moving we haven't stopped moving
01:15 - so walking should equal true otherwise
01:19 - we can set it equal to false not walk
01:24 - frames walking equals false okay and
01:32 - then we can write the code to show the
01:34 - walk animation all right
01:39 - is going to be pretty similar to how we
01:41 - did the idle animation so if we're
01:45 - walking then we need to see if it's time
01:51 - to change frames yet right if it's been
01:54 - long enough since the last update to
01:58 - change frames now this is going to
02:00 - depend on how fast our character is
02:03 - moving what our move speed is and how
02:05 - many frames of animation we have and all
02:07 - those kind of things we're going to put
02:09 - 200 here and see how that looks and we
02:11 - can adjust it if we don't like how it
02:15 - looks and so we are updating so we'll
02:18 - set the last update time to now and
02:21 - we'll pick what our current frame should
02:25 - be and that's actually going to be the
02:27 - same process we did here except we're
02:30 - going to use the length of the walk
02:34 - frames and we're going to do the same
02:39 - thing we did to set the bottom of the
02:45 - sprite to the right location so that we
02:48 - can keep track of where the the bottom
02:50 - of the frame is because it might change
02:52 - size a little bit as we switch from
02:55 - frame to frame and now before we set the
02:58 - image to the next frame we need to pick
03:01 - whether we should go left the left frame
03:05 - or the right frame the right walking or
03:07 - the left direction walking so we want to
03:10 - see which direction we're going so if
03:13 - our velocity is greater than zero our X
03:15 - velocity is greater than zero then we're
03:16 - going to the right so we can set the
03:19 - image to self dot walk frames our
03:25 - current frame otherwise we'll use the
03:31 - left frame okay
03:38 - so that way we've chosen the right
03:40 - direction and then we can set our get
03:45 - our new rect image get rekt and bottom
03:53 - equals butt okay now let's see how that
03:57 - looks so go over to our main and we'll
04:01 - run our program alright we riding like
04:05 - we're supposed to now if I walk to the
04:07 - right there we go we have a nice little
04:09 - walking animation I go to the left okay
04:17 - now you guys see what's happening right
04:20 - here I've stopped pressing the left
04:22 - arrow key my velocity should be zero but
04:26 - I'm still walking does do you know why
04:29 - same thing happens if I go this way
04:34 - so this is something that we didn't deal
04:36 - with before when we were doing the
04:37 - movement but we have to deal with now
04:40 - and what's happening is if we go back
04:43 - over to our sprite when we move right
04:46 - friction is slowing us down rank is
04:51 - friction is a negative direction so our
04:52 - acceleration is getting smaller and
04:55 - smaller and our velocity is getting
04:56 - smaller and smaller but our velocity
04:59 - might not ever reach zero what if it's
05:01 - point zero zero one right if it's very
05:05 - small then our position isn't going to
05:08 - change because we're gonna round you
05:11 - know we're rounding by the pixel when we
05:13 - move our position so so our position
05:16 - isn't changing but it's not zero and so
05:20 - to get our to get our sprite to actually
05:27 - stop moving and zero out we need to set
05:30 - a threshold if the velocity gets below a
05:32 - certain point before below a certain
05:35 - value then it should just get set to
05:38 - zero and we can easily do that by just
05:42 - putting here if if our X velocity sorry
05:47 - if our the absolute value of our X
05:49 - philosophy cuz it could be negative or
05:51 - positive
05:52 - a very small number so if our the
05:55 - absolute value of our X velocity is less
05:57 - than let's just put point one right
05:59 - we're not going to move point one of the
06:00 - pixel then then the X velocity should
06:06 - just get set to zero so we'll force it
06:10 - to drop to zero if it gets too small and
06:13 - what that will do is take care of that
06:17 - coasting problem so if I run when I stop
06:20 - running I will stop as the friction
06:24 - makes me coast to a stop yes I know our
06:35 - character has a lot more personality now
06:37 - I can see him looks like he's moving
06:44 - and if you've adjusted the walking speed
06:49 - or the friction you might want to adjust
06:51 - the animation speed of that walking
06:54 - animation as well if you go over to this
06:57 - value right here this is how many
07:00 - milliseconds we're pausing in between
07:03 - each walk frame so if you made that
07:06 - bigger right then it's gonna look a
07:10 - little more like this maybe that looks a
07:15 - little bit too much like he's coasting
07:18 - right and if you set it to small let's
07:23 - say we only had it at 100 then it's
07:26 - going to animate really fast which might
07:29 - be fine if you had more frames of
07:32 - animation than - it would - that looks a
07:34 - little too fast so I kind of like the
07:37 - 200 we had in there before but you can
07:40 - adjust that get it to a value you like
07:43 - you know maybe not quite as slow as we
07:48 - had it maybe a little bit faster all
07:50 - right until you find a value you like
07:56 - okay one other thing that I wanted to
07:58 - look at before we wrap up this video is
08:01 - what happens when we are wrapping around
08:04 - the screen here
08:05 - when we go off one side and come on to
08:07 - the other if we slow down and do it
08:09 - slowly you can see that what happens is
08:14 - as soon as the rabbit gets halfway off
08:18 - the screen at teleports over to the
08:20 - other side and that's a little bit not
08:25 - quite perfect it's okay when he's
08:26 - running but no kind of slow there is a
08:29 - little bit of a jump there and I like it
08:31 - to look more like he actually walks off
08:33 - one side and walks back on the other now
08:36 - due to the way that tie game draws
08:39 - sprites we can't draw half the sprite on
08:42 - one side and half the sprite on the
08:44 - other it's not very easily but what we
08:47 - can do is let him walk off and walk back
08:52 - on a little more cleanly okay so what we
08:55 - want to do is go back over to our
08:59 - sprites update all right right here
09:05 - we're detecting when the x position is
09:08 - greater than the width that means we've
09:10 - gone off the right-hand side but
09:13 - remember the x position that we're using
09:15 - is where we're mapping that to the
09:18 - center of the sprite the middle bottom
09:20 - so that that's why the center of the
09:23 - sprite is what causes the teleporting to
09:24 - happen but I'd really like to be able to
09:26 - walk a bit further and what I'd like to
09:29 - do is actually walk half way half the
09:36 - size of the sprite so self dot rec dot
09:38 - width over two and if I go that far off
09:42 - the screen then I'm going to teleport
09:44 - back over to the other side - width over
09:50 - two and then we're going to do the same
09:53 - thing on the other side in Reverse if we
09:55 - walk off the left hand side - width / -
10:02 - then we're gonna add + width over to
10:05 - there okay and you see the pattern so if
10:09 - we go back over here to our main we can
10:14 - see
10:15 - what that looks like alright so when I
10:19 - go fast it's okay now if I slow down a
10:22 - little bit you can see I get all the way
10:24 - off and then I start coming on there so
10:28 - it's a much smoother transition there's
10:30 - there's no detectable teleport and it
10:33 - looks more like he's walking off one
10:36 - side and coming back on the other that's
10:40 - going to be a little bit more clean now
10:45 - the one trade-off here is that it is
10:48 - possible to stop yourself so that where
10:52 - you're standing and there's only a
10:54 - sliver of your character showing on the
10:57 - screen right you can barely see them and
11:00 - so that's kind of a personal preference
11:01 - that's up to you whether you like that
11:05 - effect or dislike that effect is it
11:07 - gonna is gonna allow the player to cheat
11:11 - and get away with something or is it
11:12 - going to make the player get stuck and
11:14 - lost and not able to keep track of where
11:17 - they are that's kind of optional it kind
11:21 - of depends on what direction our
11:23 - gameplay goes I think for right now I'm
11:27 - happy with it that way and and we can
11:32 - call that our video we've made our
11:36 - walking animation and we're ready to
11:40 - move on to the next video I'll see you
11:43 - then
11:51 - you