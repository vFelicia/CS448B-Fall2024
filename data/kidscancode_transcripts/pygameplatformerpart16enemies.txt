00:00 - welcome back to game development with
00:02 - pygame this is part 16 of the platformer
00:05 - game and in this video we will be adding
00:08 - enemies so we're gonna make the game a
00:12 - little more challenging now by adding a
00:14 - mob sprite that we'll have to avoid so
00:18 - I'm gonna copy some of this stuff from
00:20 - the powerup sprite to save a little time
00:24 - we're gonna make a class mob and this is
00:28 - going to go into the alt sprites and the
00:32 - mobs group we've got our game reference
00:39 - and then we are going to start setting
00:43 - up how we want the mob to behave now
00:46 - first of all what we want the sprite or
00:50 - the mob to look like there's a bunch of
00:52 - different or a few different mob types
00:54 - in the sprite sheet if we go over and
00:59 - look at it you know there's a the little
01:01 - red guy with the spike on his head
01:03 - there's a little springy guy there's a
01:07 - flying guy and there's the little
01:09 - propeller guy and so I thought I would
01:12 - take the propeller guy and we're gonna
01:16 - use him and what we're gonna want to do
01:20 - is I want him to win he flies across the
01:24 - screen did not just go in a boring
01:26 - straight line but kind of look like he's
01:28 - bouncing a little bit so he's kind of
01:30 - hovering you know hovering effect so
01:33 - we're gonna switch between these two
01:34 - different sprites where his feet are
01:36 - going in the opposite direction so this
01:38 - is when he's flying upwards and this is
01:39 - when he's dropping downwards okay and
01:43 - then so we'll just alternate between
01:45 - those as he bounces across the screen
01:49 - and if you look at your XML file you can
01:55 - find him here it's the fly man and we're
01:58 - gonna want the fly and the jump frames
02:04 - so what we're going to do is we're going
02:07 - to call that we're going to load those
02:10 - two different images and actually I
02:12 - already copied and
02:13 - all those numbers to save a little time
02:17 - there we go we're gonna use the image up
02:19 - and the image down so the image for
02:23 - winning is moving up and the image for
02:24 - Lang is moving down and we'll set our
02:26 - image to start with just to image up
02:30 - doesn't really matter we'll get our rect
02:35 - and then we need to figure out where to
02:40 - spawn him now I want the mobs to
02:42 - sometimes spawn on the left and come
02:45 - across this way and sometimes fall on
02:46 - the right and come across this way so so
02:48 - they should start off the screen on one
02:52 - of the sides so we're just going to pick
02:56 - a random location between minus 100
03:02 - which would be off the screen to the
03:04 - left and with oops width plus 100 which
03:09 - would be off the screen to the right
03:12 - then we're going to pick a random speed
03:15 - so that sometimes they'll be moving fast
03:18 - and sometimes slow and that's just going
03:21 - to be between 1 and 4 now that's a
03:24 - positive number so that means it'll move
03:26 - to the right and that's fine if we
03:27 - started out off to the left but if our
03:33 - if our sprite spawned off the screen to
03:38 - the right then I just want those to be
03:41 - negative so that the velocity will move
03:44 - it to the right then we can pick where
03:48 - we want it to spawn in the y-direction
03:51 - and that's just going to be I want it to
03:54 - be somewhere in the top half of the
03:56 - screen so top half not down in the
03:59 - bottom half okay and then our self dot V
04:04 - Y is going to be zero and what we want
04:07 - to do is we want our V Y so the the VX
04:10 - will be constant so it'll move across
04:11 - the screen at a constant speed but the V
04:13 - Y is going to alternate between moving
04:15 - upwards and moving downwards and then
04:18 - moving upwards and then moving downwards
04:19 - but I don't want it to be very jerky I
04:21 - want it to be smooth so what we want to
04:22 - use is some acceleration where we speed
04:26 - up to the top and
04:27 - slow down and then speed down towards
04:29 - the bottom and slow down so we make a
04:31 - nice curve so I'm gonna make a set a
04:35 - variable called dy for that and that's
04:39 - going to be one half okay so our update
04:46 - well our x speed is constant so we can
04:50 - just move in the x-direction but now we
04:55 - need to do the y-direction
04:56 - so we're going to take our V Y and we're
05:00 - gonna add the dy to it alright so in the
05:04 - first frame our V Y is zero so we
05:06 - wouldn't move at all if we were if it
05:08 - was just ero but we're gonna add point
05:10 - five to its then we'll move it point
05:11 - five next frame we'll be moving our V Y
05:13 - we'll get another point five added to it
05:15 - will be one then it'll be one point five
05:17 - etc so we're gonna keep making our V Y
05:20 - bigger which would accelerate us upward
05:23 - but at a certain point we want that to
05:25 - stop and turn around so so what we're
05:28 - gonna do is say if the V Y gets to be
05:32 - greater than three or less than -3 then
05:36 - I want my dy just to reverse so x equals
05:42 - negative one okay so that way we'll have
05:51 - that nice smooth curve now so now we
05:54 - figured out how to move now we need to
05:56 - figure out which image to use do we do
05:57 - we use the up one or the down one well
06:01 - first first we're gonna track where our
06:05 - center is because these two sprites if
06:07 - you notice are slightly different sizes
06:08 - just a few pixels but enough that it
06:11 - would be could introduce a little bit of
06:13 - jerkiness so we're going to track where
06:17 - the center of our sprite is and if our D
06:21 - Y is less than zero then we're moving
06:24 - upwards so we're gonna use the or use
06:30 - the up image otherwise we'll use the
06:36 - down image
06:39 - we get our new rect from that based on
06:47 - that image we set our Center equal to
06:52 - the old center or the same center so it
06:56 - stays the same and then we can finally
07:00 - move our Y by whatever IV Y is and now
07:08 - we'll have our nice smooth movement and
07:10 - then the last thing we need to do is if
07:13 - it's moved all the way off the screen
07:15 - come all the way across we need to kill
07:17 - it so if the left is greater than width
07:21 - plus 100 or the right is less than
07:27 - negative 100 so if it's moved all the
07:29 - way off the screen
07:31 - then we'll delete okay so that'll be our
07:36 - class mob now we just need to make it
07:42 - start spawning so we'll go over to our
07:47 - main and we need to do a couple of
07:51 - things we need to we need to make a mobs
07:56 - group and then we need to decide how
08:03 - often are we gonna spawn mobs so what
08:08 - I'm gonna do is I'm gonna add a setting
08:10 - in here for mob frequency and I'm gonna
08:16 - put 5,000 that's milliseconds so five
08:20 - seconds as kind of the baseline that's
08:23 - gonna be the average time between each
08:26 - mob spawning and we'll use some
08:27 - randomness to vary it but that will be
08:30 - how frequently they spawn so now in our
08:33 - game loop in our updates section we can
08:37 - decide whether we want to spawn them up
08:42 - or not
08:42 - so spawn a mob question mark
08:47 - so we need to figure out what time it is
08:49 - now oh right and then I also forgot
08:56 - we're gonna need our mob timer and
08:59 - that's just gonna be keeping track of
09:04 - when the last time we spawned one so we
09:06 - know whether it's time to spawn one
09:08 - again all right so we get what time it
09:12 - is now get ticks and if now - mob timer
09:21 - is greater than 5,000 now if I just did
09:24 - that it would they would spawn every
09:27 - 5,000 milliseconds exactly every 5
09:30 - seconds exactly
09:31 - but we're gonna vary that a little bit
09:34 - now I could do something like this right
09:38 - if I let's say I wanted to be between 4
09:41 - and 6 seconds I could do that right pick
09:44 - a random number between here and then
09:46 - sometimes it would be as low as 4,000
09:48 - sometimes it would be as high as 6,000
09:51 - but the problem is there's there's way
09:53 - too many increments in here this is
09:55 - 2,000 integers all the way across this
09:59 - range sometimes it'll be 837 sometimes
10:02 - it'll be 834 and what difference does it
10:05 - make if it's 2 milliseconds different
10:07 - instead what we can do is just do some
10:13 - discrete values just to vary it some and
10:19 - I'm gonna put minus 1000 minus 500 0 500
10:26 - and a thousand so that way we have
10:30 - either either four seconds four and a
10:32 - half seconds five seconds five and a
10:35 - half seconds or six seconds and if that
10:39 - happens then we will spawn a mob so
10:42 - we'll set the mob timer to now and we
10:45 - will spawn a mob oops and the mob it
10:49 - wants a plat that's not right I think I
10:52 - left something when I copied and pasted
10:54 - I did don't want that in there
11:01 - okay so let's see how this looks so far
11:09 - there's a mob okay he's going across oh
11:13 - there's another one so we should see
11:18 - they're all going to the right at the
11:19 - moment we should see one going in the
11:21 - other direction sooner or later there's
11:25 - one yeah so you can see we've got the
11:27 - animation is working it looks like it's
11:29 - bouncing up and down we've got different
11:34 - speeds and now this might seem a little
11:39 - too frequent to you like there's a lot
11:42 - of mobs to navigate between but remember
11:44 - once we start moving they're gonna be
11:46 - dropping off the bottom of the screen as
11:47 - we go past them which reminds me of
11:50 - something we do have to take into
11:51 - account you guys see that he's not it
11:55 - looks like he's chasing us because we
11:58 - are not when we scroll the screen we are
12:01 - not scrolling the screen - or we're not
12:04 - moving the mobs along with the camera so
12:07 - they are not moving the way the rest of
12:11 - things on the screen are so here on the
12:14 - when we reach the top quarter of the
12:16 - screen I'm just going to do the same
12:18 - thing I'm doing with the platforms with
12:22 - the mops so I'm gonna say for Bob in
12:29 - Bob's mom's we just want to move them
12:35 - downwards that should let us zoom right
12:40 - past them there we go today we can sort
12:44 - of leave him behind
12:45 - as we get past him
12:49 - there's no collisions happening yet so
12:51 - that doesn't really matter but I think
12:56 - that's a pretty good start for how we
12:57 - want our mob to behave and we can do the
13:04 - collisions although there is one other
13:06 - thing there we go see how the mob goes
13:08 - behind the sprite sometimes and
13:10 - sometimes in front of it well that has
13:13 - to do with that draw order problem again
13:15 - you remember we went down to our in
13:21 - order to fix that with our player
13:23 - we went down here to our draw section
13:25 - and we are bleeding the player after
13:30 - drawing all the sprites so that we make
13:32 - sure it's always on top and that's fine
13:34 - if you just have one one thing you want
13:37 - to draw but now we've got the mobs - it
13:40 - could start to get messy we're going to
13:42 - blit all our different sprites
13:43 - separately so pygame has a good solution
13:47 - for that and the solution is if we go
13:51 - over here when we make our sprite our
13:52 - all sprites group we're gonna use a
13:55 - different type of group called layered
13:59 - updates and this sprite group type
14:04 - allows you to specify what order you
14:09 - want things drawn in by giving each
14:11 - sprite a layer value a number for what
14:15 - layer it is the lower layers will get
14:18 - drawn first so we just need to assign a
14:21 - layer to each of the sprites and they
14:23 - will all get drawn in the right order so
14:26 - we'll go over here and we'll do that
14:28 - here - okay so we're gonna set the
14:31 - player layer and I'm gonna make that -
14:38 - I'm gonna set the platform layer to one
14:43 - we can set the pal layer and that can be
14:48 - one as well they're right on top of the
14:49 - platforms and the mob layer and we'll
14:54 - put the mobs on the same layer as the
14:55 - player since they're gonna run into each
14:57 - other we're not gonna see them overlap
14:58 - anyway okay so now we have these layers
15:01 - designed
15:02 - then in our sprites we can tell our
15:04 - sprites what layer we want them to be on
15:06 - and there's two different ways you can
15:10 - do that you can do that when you when
15:12 - you add them to the group which remember
15:15 - we're not doing that anymore we got rid
15:16 - of the all sprites dot add you can put
15:19 - the parameter in there and say layer
15:21 - equals two or whatever but since we're
15:23 - spawning the play the sprites with all
15:26 - their properties in the sprite
15:28 - definition it makes sense to put that in
15:30 - here so we just need to say we need to
15:32 - give it a another property call and we
15:34 - need to do it again we need to do it
15:36 - before the sprite in it and it needs to
15:41 - be called underscore layer okay and so
15:46 - this is going to be the player layer on
15:50 - the player and on the platform we're
15:53 - gonna set the underscore layer to
15:57 - platform platform list platform layer
16:03 - and we're gonna set the cows to tell
16:12 - where and we're gonna set the mobs to a
16:20 - mob layer okay so let's take a look and
16:25 - then oh and then down here in our draw
16:29 - we don't need this line anymore we don't
16:32 - need to blitt this i duplicated it
16:35 - instead of deleting it okay so we're
16:40 - just gonna draw all sprites and the all
16:42 - sprites group will now take care of all
16:45 - the layers so let's take a look at how
16:47 - that looks okay so see the you can see
16:55 - the mob in front of the platforms the
16:57 - player is still the player is still
17:00 - always in front of the platforms
17:10 - and the player and the and the mobs
17:13 - could be either cuz they're on the same
17:15 - layer but that's okay because we're
17:16 - gonna do collisions in a second but you
17:21 - can see when you've got a lot of
17:22 - different Speights sprites on the screen
17:24 - they layered the layered drawing is a
17:28 - lot easier to do with that layered
17:29 - updates sprite group alright and already
17:35 - we're getting kind of long so we're
17:36 - gonna do a quick collision here we're
17:41 - just going to say we're just going to
17:44 - use our usual PI game sprite
17:50 - that's right collide function between
17:56 - the player and the mobs and it doesn't
18:00 - really matter whether we put true or
18:01 - false because if we hit the mob playing
18:09 - equals false game over all right so
18:12 - let's just make sure we see how that
18:14 - works and then we can in this video okay
18:21 - there we go
18:21 - now there is gonna be one thing you'll
18:25 - notice a nice a string of boosts there
18:30 - okay so
18:32 - let's see if this little not quite I'm
18:37 - trying to get a collision to happen
18:44 - close by just so you guys can see there
18:49 - we go you see that collision so because
18:54 - we're using the rectangles you might
18:57 - remember from our shmoop game that it
19:01 - can really be bad if the player thinks
19:03 - that they dodged something but they died
19:06 - anyway just because the rectangles
19:08 - overlap so that doesn't look good at all
19:11 - and so in the next video we'll improve
19:14 - the collisions by using something called
19:16 - pixel perfect collision but as always
19:21 - please like and subscribe if you enjoy
19:23 - these videos and help other people find
19:25 - them and if you have any questions or
19:27 - comments please post them in the
19:29 - discussion area below and I will see you
19:31 - all in the next video
19:42 - you