00:00 - all right i've got a quick one for you
00:01 - this time that many people have asked
00:03 - about
00:04 - in this video we're going to look at how
00:05 - to make a 2d character
00:07 - with eight directional movement that
00:09 - includes
00:10 - animation like you see here for this
00:13 - example we're going to use this
00:14 - isometric mini crusader art pack
00:17 - that you can find on itch.io i've got
00:20 - the link in the description below
00:22 - it has eight directional animations for
00:24 - idle
00:25 - running attacks all that kind of stuff
00:28 - so it's a great one to use for this
00:29 - example
00:30 - now when you download this you're going
00:32 - to get a bunch of individual folders for
00:34 - each animation
00:35 - and in each folder are all the
00:37 - individual
00:38 - frames so and they're numbered
00:42 - 0 is this first animation all the frames
00:46 - are running in that direction
00:47 - then we have the ones in this direction
00:49 - and so on
00:51 - every time it starts over from one to
00:53 - two to three and so on you have a
00:55 - different
00:56 - animations we're going to drag all those
00:58 - into our
00:59 - individual animations in an animated
01:01 - sprite so here's our animated sprite and
01:03 - i've created
01:05 - the eight animations for idle and the
01:07 - eight animations for run
01:08 - dragging each set of images
01:11 - into the appropriate one and you can see
01:15 - up here that it's running if i change to
01:18 - idle three it's facing in that direction
01:20 - and each of the names of these
01:22 - animations are
01:23 - set up to have a number at the end
01:25 - corresponding to the direction
01:27 - with idle 0 and run
01:30 - 0 being the ones pointing to the right
01:34 - and that corresponds to this layout so
01:37 - 0 is facing is the animation facing to
01:40 - the right
01:41 - and then we go clockwise from there
01:43 - around the circle
01:45 - so in order to control our character
01:47 - we're just going to
01:49 - detect the mouse position depending on
01:51 - which one of these
01:53 - sections the mouse is in that's the
01:55 - direction we're going to move and
01:57 - the animation we're going to choose so
02:00 - when we get the mouse angle
02:02 - we're going to get a value and i'm
02:04 - showing it in degrees here
02:05 - although it'll be in radians in our
02:07 - script and we don't really care what the
02:09 - exact value is we want to know which of
02:11 - these sections
02:12 - this is in so in order to get that we're
02:15 - just going to
02:15 - stepify which will let us snap
02:19 - these angles to the closest 45 degrees
02:22 - right so anywhere in between here would
02:23 - be 45
02:24 - 90 and so on and that looks like this so
02:27 - when i'm in this section
02:28 - i have 0 and here is 45 90
02:32 - 135 and so on if i need this to be 0
02:35 - that's fine i need this to be 1
02:37 - and this to be 2 i can divide by 45.
02:41 - and now i have each of these divided by
02:43 - 45 i get the number
02:45 - right but something strange is going to
02:48 - happen over here
02:49 - that's because when kudos measuring the
02:50 - angle it's just measuring the shortest
02:52 - angle so this direction
02:54 - is going to be minus 45 degrees minus 90
02:57 - degrees and so on so over here by 180
03:00 - we've got the transition between
03:01 - positive and negative so we need to take
03:03 - these numbers
03:04 - which go from negative four around to
03:07 - four
03:07 - and we need that to map to the range
03:10 - that we want which is zero
03:12 - all the way around to eight and we can
03:14 - do that
03:15 - by using wrap and then we wind up with
03:18 - what we need
03:19 - we've got zero in this section one two
03:21 - three four
03:22 - five six seven so now we have all our
03:25 - eight directions
03:27 - that are gonna match our desired
03:30 - animation numbers so here's our script
03:33 - on our
03:33 - kinematic body we're going to keep track
03:36 - of our current animation
03:39 - it could be idle or it could be run
03:41 - those are the only two that i added to
03:43 - the animated sprite
03:44 - of course if you add all the other
03:46 - attack and and so forth you can add
03:48 - those as well
03:49 - um speed is our movement speed and a is
03:52 - just the angle that we're going to
03:53 - calculate to the mouse
03:54 - which i made a variable so that i could
03:56 - do that that troubleshooting
03:58 - drawing all right and then in the
04:00 - process we're going to assume we're on
04:01 - idle
04:03 - unless we have some mouse input and then
04:05 - here's where we do that calculation
04:08 - i just demonstrated we get the mouse
04:11 - position relative to the player we
04:14 - stepify
04:14 - it by 45 degrees and divide by 45
04:18 - degrees
04:19 - that gets us our minus four to four and
04:21 - then we use
04:22 - wrap i here to wrap it around from zero
04:25 - to eight
04:26 - okay make that a little bigger now and
04:28 - then if we are pressing the mouse button
04:30 - and our mouse isn't too close to the
04:32 - player we're going to move towards the
04:34 - mouse
04:34 - so we're going to change current
04:36 - animation to run instead of idle
04:38 - and we're going to use move and slide to
04:40 - move in that direction
04:41 - and then we're also going to set the
04:43 - animation on our animated sprite
04:44 - to that current animation run or idle
04:48 - plus the number that we got for the
04:50 - mouse direction
04:51 - so idle zero run five and so on
04:55 - and now when we run this with a nice
04:57 - background we have
04:59 - the perfect effect of
05:02 - the animation matching which way we're
05:05 - going in our 8 directional movement
05:08 - now you can do this with the keyboard as
05:10 - well
05:11 - if you're using keyboard controls
05:12 - instead of the mouse you're going to do
05:14 - the exact same thing
05:15 - your direction of movement is going to
05:17 - come from whichever keys you have
05:19 - holding
05:20 - you have held down right if you're
05:21 - pressing right and down you're going to
05:22 - be going diagonally in this direction
05:24 - so you'd pick animation number one right
05:27 - if you're going this way you'd pick
05:28 - animation number zero
05:30 - so use the same technique to pick the
05:31 - angle based on the direction
05:34 - of the input vector all right that's it
05:37 - thanks for watching and i'll see you in
05:38 - the next video
05:42 - you can find this recipe and lots more
05:44 - on the goodo recipes
05:45 - website at goodourrecipes.com
05:48 - here you can find a wide variety of
05:51 - recipes
05:52 - for creating the game system you need
05:54 - some help on how to get started with
05:56 - godot
05:56 - in the basics section and lots more i
05:59 - recommend you go over there and explore
06:01 - and let me know if there's something
06:03 - you're looking for
06:04 - that you'd like me to add as i'm always
06:06 - adding more recipes
06:07 - over time thanks for watching and i'll
06:10 - see you in a future video