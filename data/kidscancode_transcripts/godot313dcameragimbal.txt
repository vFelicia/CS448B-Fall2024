00:00 - welcome to another Godot recipe there
00:02 - are many ways to handle cameras in 3d
00:04 - first person third person fixed
00:07 - perspective it all depends on what kind
00:09 - of game you're making in this recipe
00:11 - we'll look at how to make a camera that
00:12 - can orbit a target while remaining
00:14 - parallel to the ground let's get started
00:16 - so here we have a camera setup and then
00:20 - I have this window down here set to show
00:21 - us a preview of what the camera sees now
00:24 - let's say I wanted to tilt the camera up
00:25 - a bit to look at something and then I
00:28 - want to rotate to this side but when I
00:30 - tilt it back down I'm now gonna be
00:34 - misaligned and that's usually something
00:38 - you don't want you want the camera to
00:40 - stay level always parallel with the
00:43 - ground regardless of how you rotate or
00:46 - look up and down you don't want that
00:48 - tilt to happen and so the solution to
00:51 - this is something called a gimbal a
00:52 - gimbal is a device that's designed to
00:55 - keep an object always level like that
00:59 - you would use them on ships back in the
01:01 - old days to keep thee to keep a flat
01:04 - surface level even as the ship is
01:06 - rocking in the waves and so we're gonna
01:09 - make a scene here and we're gonna start
01:11 - with two spatial nodes so spatial and
01:14 - then another spatial as a child and then
01:17 - I'm going to add the camera as a child
01:19 - of that so the spatial the outer one is
01:24 - going to be our camera gimbal and then
01:28 - the second one is going to be the inner
01:32 - gimbal so we have the camera is a child
01:36 - of the inner gimbal the inner gimbal is
01:38 - a child of the camera gimbal and here's
01:42 - how that's going to work let's go back
01:43 - to preview so we can see what the camera
01:45 - sees I'm gonna take the camera and I'm
01:48 - going to just set its transform the Z to
01:52 - about 4 so it's offset a little bit from
01:55 - from where the center is so we're
01:58 - looking towards the origin so the way
02:01 - that the camera gimbal works is each of
02:03 - these nodes is responsible for one axis
02:06 - of rotation and it's going to be its
02:09 - local mode so I'm going to turn this to
02:11 - local mode here
02:13 - so when we rotate we're only rotating
02:15 - the nodes local axes not the global ones
02:19 - so the outer node the camera gimbal node
02:22 - only rotates in Y it is for us to rotate
02:27 - horizontally and look at the center now
02:34 - we're never gonna move this one on any
02:37 - other axis okay
02:38 - the inner gimbal is going to rotate on
02:42 - its X and only on X so it tilts up and
02:46 - down and so you see how it's X's are
02:48 - changing so now say I'm angling down a
02:50 - little bit if I switch back to the outer
02:53 - one the outer one see how the X's are
02:56 - still level for this one the outer one
02:59 - only rotates in Y so now we're orbiting
03:02 - around whatever object we're looking at
03:04 - as long as we stick to that then there's
03:08 - never gonna be a problem with our camera
03:10 - not being level anymore you can see how
03:15 - it's always staying pointing at the same
03:17 - point and it's always parallel with the
03:23 - ground to control the gimbal we're going
03:25 - to use the W a s and D keys so I've
03:28 - added input actions for those in the
03:30 - input map and I've labeled them cam
03:34 - underscore so we know these are the
03:35 - input actions for controlling the camera
03:37 - and then I've also added zoom in and out
03:40 - for the up and down mouse wheel so now
03:43 - let's add a script to this we're gonna
03:45 - give it a variable here called rotation
03:47 - speed
03:48 - it's gonna control how fast the camera
03:52 - rotates while we're holding the keys
03:54 - down and we'll start with PI over 2
03:57 - which is 90 degrees so that's 90 degrees
04:00 - per segment is what that will be and
04:02 - then we're going to in our process
04:06 - function we're going to check the
04:08 - keyboard input and I'm going to do it
04:10 - this way we're gonna pass Delta and
04:13 - along with it I'm gonna do it this way
04:15 - because we're gonna also want to enable
04:17 - mouse control after we do this so I'm
04:20 - just going to start with keyboard so the
04:22 - function to get to check keyboard input
04:27 - needs to rotate those two spatial
04:31 - depending on which Keys we pressed so
04:33 - starting with we're gonna rotate the
04:35 - outer gimbal that's the node that this
04:38 - script is attached to around the y-axis
04:42 - and so we're going to have a variable
04:46 - here called Y rotation and then that's
04:50 - going to get set by which key we press
04:59 - so now we can rotate object local and we
05:04 - want to rotate around the y axis and we
05:08 - want to rotate by that Y rotation x
05:14 - rotation speed times Delta and then for
05:21 - the inner gimbal we want to rotate inner
05:24 - gimbal around its local x axis so we're
05:29 - gonna do the same thing here I'm gonna
05:31 - copy and paste because I've copied and
05:34 - pasted the input code just changed it to
05:37 - the other input keys and we're rotating
05:38 - around X this time and once we have that
05:41 - result we're gonna have the inner gimbal
05:44 - and we're gonna rotate object local but
05:47 - this time around the x axis and then by
05:52 - the same amount X rotation and that
06:00 - should do it let's give it a try so
06:02 - here's a test scene I've made with I
06:04 - made a ground plane and I imported a
06:07 - model so we have something to look at
06:08 - and then I've instanced the camera
06:11 - gimbal into this scene so when we play
06:14 - it we can see that if I press the a and
06:18 - D Keys I will rotate around and if I
06:21 - press W and s my camera will pan up and
06:26 - down left and right
06:27 - so that's exactly what we want we're
06:30 - staying centered on the center of the
06:33 - ship but what you'll notice is that
06:35 - since we haven't put any limits on it
06:38 - you can rotate too far and go completely
06:41 - upside down which is probably not
06:45 - something that we want we want to
06:46 - probably stop it around there and maybe
06:49 - stop it at the ground so that you can't
06:52 - rotate too far up and down we'll fix
06:56 - that in our script will we're going to
06:59 - say inner gimbal the rotation dot X we
07:02 - want to clamp that and we want to clamp
07:05 - it between not quite 90 degrees we don't
07:09 - want to go fully up to 90 degrees so I'm
07:11 - going to say
07:12 - let's say around 1.4 and then zero and
07:16 - what that's going to do is it's going to
07:19 - make it so that when I pan up that's as
07:21 - far up as I can go and when I go down I
07:25 - go straight down to the ground now
07:28 - because that plane is there at the exact
07:33 - zero degrees here we can't see the plane
07:36 - so you might want to limit it to maybe a
07:38 - very very small number something like
07:42 - that so that you can't go below the
07:45 - surface of the water or the ground or
07:48 - whatever you have that's totally up to
07:50 - you
07:50 - now we have our rotation good now we
07:54 - need to work on the zoom so for zooming
07:57 - I'm going to have a maximum and a
07:59 - minimum zoom so we can't zoom in too far
08:01 - or too far away and we're gonna have a
08:04 - zoom speed how quickly the camera will
08:07 - zoom in and out as we scroll the wheel
08:08 - and then this variable zoom is going to
08:11 - keep track of our current zoom levels so
08:13 - we know what to change so we're going to
08:15 - capture the zoom with unhandled input
08:21 - and this is so that we will capture any
08:25 - gooey stuff before this so you have if
08:27 - you have a gooey overlay when you're
08:29 - scrolling in a scroll box or something
08:31 - like that you're not also zooming the
08:33 - camera and so we have two events here we
08:39 - have the cam zoom in and the camera zoom
08:41 - out and zoom in is going to take our
08:44 - zoom amount and we're gonna subtract
08:46 - zoom speed and then zooming out is the
08:51 - opposite we just add the Zoom speed and
08:53 - then we set and then we're gonna clamp
08:56 - it between the minimum and the maximum
09:03 - so it doesn't ever go outside those
09:05 - limits so how are we going to zoom it
09:07 - we're gonna do it by changing the scale
09:08 - of the gimbal system so scale equals
09:11 - vector three one times zoom so we just
09:15 - zoom equally in all directions now what
09:18 - that's gonna look like is this let's go
09:22 - up a little bit now as I click the mouse
09:24 - you can see the increment right
09:26 - a little bit by each click of the mouse
09:31 - wheel but it's a little bit that makes
09:34 - for a little bit of a jerky a factor
09:36 - especially when you're close by so we
09:38 - can make that better by using lerp to
09:43 - interpolate our zoom as it goes we're
09:46 - going to do that in the process will say
09:48 - scale equals and we'll alert the scale
09:52 - up to what we wanted it to lerp to which
09:57 - was that by our zoom speed amount and
10:04 - that's gonna make for a much smoother
10:07 - zoom effect you can even see that at the
10:10 - beginning when it zooms to the initial
10:12 - amount and now we have a nice smooth
10:14 - zoom that we can use while we're
10:17 - rotating the camera around so that's it
10:20 - and we could stop there and say we're
10:23 - happy with the gimbal camera that we
10:26 - have but some of you may want to also be
10:30 - able to control the camera with the
10:32 - mouse instead of the keys so I'm going
10:35 - to show you how to do that as well
10:36 - another variable here called mouse
10:40 - control that we can set to true or false
10:42 - whether we want to be using the mouse or
10:45 - the keyboard and then mouse sensitivity
10:48 - is going to be some amount that we can
10:55 - adjust to make the mounts more or less
10:57 - sensitive and so now in our process here
11:02 - where we're getting the keyboard input
11:03 - if Mouse control is true we want to not
11:07 - capture those keyboard events and then
11:11 - we're gonna go here into our unhandled
11:12 - input and we're going to check for some
11:15 - Mouse events so if Mouse control is true
11:19 - and we get an input event mouse motion
11:25 - then we know the mouse moved so we need
11:28 - to capture the two axes of the mouse
11:31 - movement at the x axis of the mouse is
11:34 - the left and right that's going to be
11:35 - our Y rotation of the gimbal and the y
11:39 - axis
11:40 - the mouse is going to be up and down so
11:42 - that's going to be our X rotation of our
11:44 - inner gimbal so if event dot relative
11:50 - dot X is not zero then we must have
11:54 - moved the mouse side-to-side so we're
11:57 - going to do rotate l'objet object local
12:00 - around the up and when we rotate by
12:07 - event relative X how much we move to the
12:13 - mouse x the mouse sensitivity and then
12:19 - the alternative is that we move the
12:22 - mouse up and down so if we also check
12:25 - that the y axis of the mouse then we're
12:29 - gonna rotate the inner gimbal I'm just
12:33 - gonna go down here and grab that command
12:38 - note that that by event dot relative
12:43 - about Y times mouse sensitivity and now
12:47 - if we try this out you'll see that we
12:50 - can move the mouse up and down left and
12:53 - right and control the camera now
12:56 - something else you'll notice is that if
12:57 - you move the mouse really quickly you're
12:59 - going to have a problem with our clamp
13:01 - that's stopping the movement so if I
13:03 - move up you can see I'm stopping at the
13:05 - limits but I move quickly I can snap
13:08 - through there and once I've done that
13:10 - now I'm stuck there unless I move
13:13 - quickly again and that's because our
13:15 - movement with the mouse can potentially
13:18 - be very very high this event dot
13:21 - relative dot Y could be a large number
13:22 - so we're rotating by a large angle which
13:26 - since and goers are circular it's going
13:29 - to clamp us to the wrong side of the 90
13:31 - degrees then we wanted and so we can fix
13:35 - that by capping our amount of movement
13:39 - so I'm going to make a variable here
13:41 - right Y rotation and there's going to
13:43 - clamp the event relative x dot y between
13:52 - - values about there again that's
13:56 - another one you can play with depending
13:58 - on your size of your screen and and the
14:01 - sensitivity of your mouse but this is
14:05 - good enough for a an example and then
14:08 - we're gonna say Y rotation times mouse
14:11 - sensitivity and now that'll stop that
14:15 - from moving too quickly when we move the
14:18 - mouse really quickly so one other thing
14:21 - I've added here before we wrap up is two
14:24 - flags here to invert the X and y axis if
14:27 - you want the mouse movement to be the
14:30 - opposite of the direction it is now
14:33 - which people often want for different
14:34 - projects so here what we're doing is
14:38 - we're just going to make a direction
14:40 - variable we'll make it equal to one if
14:42 - in vertex is true otherwise we'll make
14:45 - it negative one and then that way we can
14:48 - multiply by direction in the rotation
14:52 - and it will rotate in the opposite
14:54 - direction that it was doing before
14:56 - that'll do it for this camera gimbal
14:58 - tutorial as I said at the beginning this
15:00 - is only one of many possible camera
15:03 - control schemes so keep an eye out on
15:05 - this channel for more tutorials on other
15:08 - methods of camera control if you want a
15:12 - little bit more detail I've linked in
15:13 - the description below to the text
15:16 - version of this tutorial on my go-to
15:19 - recipes website where you can see a full
15:21 - version of the script where I've added
15:23 - in export properties for all of the
15:27 - different values so that you can have a
15:29 - nice interface over here in the
15:31 - inspector to turn on and off and set
15:34 - different properties thanks for watching
15:36 - and I'll see you in the next video this
15:39 - tutorial is part of my new Godot recipes
15:41 - website the goal is to collect all the
15:43 - best tips and lessons to help make you a
15:45 - better go to a developer if you like
15:47 - this video I hope you'll go and check
15:48 - out the site and make sure to hit
15:49 - subscribe so you'll be notified whenever
15:51 - I release new videos thanks for watching