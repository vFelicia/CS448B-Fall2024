00:00 - welcome back to good old recipes this
00:02 - time we're gonna be addressing a very
00:04 - common question which is how to attach
00:08 - 2d textures and objects like health bars
00:12 - and things to 3d objects in a 3d space
00:17 - alright let's get started to start with
00:20 - I have a regular old 2d health bar here
00:22 - made with a progress texture that's just
00:25 - configured to change color as it gets
00:29 - smaller as some value decreases and I've
00:34 - demonstrated making 2d health bars
00:35 - before you can check the links in the
00:38 - description below so I'm not going to
00:40 - spend any more time on that but what we
00:42 - want to do for this tutorial is see how
00:44 - we can add this kind of health bar above
00:48 - a unit in 3d so to demonstrate this I've
00:52 - mocked up a 3d mob that spawns and walks
00:56 - in a random direction and when you click
00:58 - on it ten times it will disappear so
01:01 - that health that value is what we want
01:04 - to display in a little bar above the mob
01:07 - to begin our 3d health bar we're going
01:09 - to start with a sprite 3d now sprite 3d
01:12 - displays a texture just like a 2d one
01:14 - does I'll call this health bar 3d and we
01:18 - will drag our texture into its texture
01:21 - property and just like any 3d node as
01:26 - you pan the camera around you're gonna
01:28 - see it from different angles and we
01:31 - don't want that we don't want to see our
01:32 - texture on edge like this we want it to
01:34 - always be facing us no matter how we
01:38 - rotate the camera and you can do that
01:41 - you could do that with some ray casting
01:43 - and rotating the node but there's a an
01:45 - easier way to do that called billboard
01:47 - mode we can enable billboard mode by
01:51 - adding a material and so go over to
01:54 - geometry instance under geometry under
01:58 - material override expand this a little
02:01 - bit material override we're gonna add a
02:03 - new spatial material and in that spatial
02:08 - material under flags we're going to set
02:11 - transparent to on
02:13 - that way our the transparency that's
02:17 - part of our texture will apply we're
02:21 - gonna set it to unshaded we don't want
02:24 - shadows and things like that to apply to
02:27 - this and then we're going to go down to
02:30 - parameters and set billboard mode
02:34 - enabled now when we move the camera you
02:39 - see how our texture is always facing the
02:42 - camera so that part is now working the
02:47 - way we want it to so now on our mob we
02:49 - can go over here and we can attach the
02:51 - health bar 3d to our mob move it up so
02:56 - it's above the mob and an appropriate
02:59 - place you want it and now we have a
03:01 - health bar that displays when we play
03:04 - the game will see our mobs have health
03:10 - bars above them and you can see as we
03:13 - rotate the camera around that billboard
03:14 - mode is now making sure that those
03:18 - health bars are always facing us now we
03:21 - don't actually want our health bar to
03:22 - display the static green bar we want it
03:25 - to display our 2d health bar which can
03:29 - reduce in size and change in color so
03:32 - we're going to render that 2d scene in
03:36 - our health bars texture in order to do
03:40 - that we're going to add a viewport so at
03:44 - a viewport as a child of the health bar
03:46 - 3d and then under it we're going to
03:49 - instance our 2d health bar in our
03:53 - viewport settings we're going to set the
03:55 - size of the viewport to match the size
03:57 - of that texture and so that's 200 by 26
04:03 - and then we're gonna set transparent to
04:06 - on under rendering or it's going to set
04:08 - usage to 2d this is important if you're
04:11 - if you have a view ports only rendering
04:13 - in 2d setting it to 2d can be a big
04:16 - performance benefit letting the renderer
04:20 - know that it doesn't have to do any 3d
04:22 - calculations into that viewport and then
04:24 - also on render target when you said
04:27 - flipped on that is because by default if
04:32 - we didn't hit this all of our textures
04:34 - rendering our viewport would be upside
04:36 - down so it just flips it vertically so
04:38 - now we have our viewport configured and
04:41 - it's going to render whatever is a child
04:44 - of it which is our health bar 2d and we
04:46 - want that viewports texture to be our
04:49 - health bar texture here in our sprite 3d
04:53 - now we could do that manually right here
04:58 - by adding a viewport texture however
05:01 - that will give us an error because
05:03 - because the viewport is a child of the
05:06 - sprite it won't be ready yet at runtime
05:09 - to be able to be used for the texture so
05:12 - we're gonna need to set it in code so
05:15 - add a script to your health bar 3d and
05:17 - in ready we're gonna set texture texture
05:21 - property of the sprite 3d equal to the
05:22 - viewports texture and that's all there
05:25 - is to it now it'll do it when the sprite
05:29 - 3d is ready which is going to happen
05:31 - after the viewport is ready so now we
05:34 - need to connect this up so that clicking
05:37 - on the mob updates tells this health bar
05:40 - to update so we're also going to add a
05:42 - little bit of code to pass that update
05:46 - notification down to the 2d health bar
05:49 - and the 2d health bar has an update bar
05:53 - function where you just send it the
05:55 - amount and the max and it will fill in
06:00 - the health bar appropriately and so on
06:03 - our health bar 3d we're gonna do the
06:05 - same thing we're gonna call give it an
06:08 - update call so that our mob can say hey
06:10 - 3d health bar update yourself and it
06:13 - will pass that through to the health bar
06:15 - 2d and it's update method all that
06:21 - remains after that is on the mob to tell
06:24 - it when it takes damage tell that 3d
06:27 - health bar to update and that is all
06:30 - there is to it now if we run we should
06:33 - be able to see this all working the way
06:35 - we want
06:36 - there's our bar when I click on my mob
06:39 - it goes
06:40 - down and everything is working the way
06:45 - we want so you can use this technique
06:48 - with any kind of 2d texture or object
06:52 - that you want to render above or around
06:54 - or in your 3d space alright this could
06:56 - be a label displaying some text like a
06:59 - name tag this could be a radial texture
07:03 - this could be any kind of control node
07:07 - or 2d know that you want to use this
07:10 - tutorial is part of my nugudo recipes
07:12 - website the goal is to collect all the
07:14 - best tips and lessons to help make you a
07:16 - better go to a developer if you like
07:18 - this video I hope you'll go and check
07:20 - out the site and make sure to hit
07:21 - subscribe so you'll be notified whenever
07:23 - I release new videos thanks for watching