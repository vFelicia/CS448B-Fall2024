With timestamps:

00:00 - hey guys welcome back to this series on
00:02 - c programming in the last few videos we
00:04 - have been learning about pointers in c
00:06 - we'll continue that in this video as
00:08 - well today we will learn to use pointers
00:10 - and function together this is going to
00:12 - be an interesting video so let's get
00:14 - started
00:18 - firstly let's revise the working of the
00:21 - function with the help of an example
00:23 - here i have created a function that
00:25 - calculates the square of a number the
00:27 - function takes single parameter and it
00:30 - then computes the square of the number
00:33 - and then returns the square here we are
00:36 - passing a regular variable to the
00:38 - function
00:39 - in c we can also pass a pointer variable
00:41 - as an argument to a function let's see
00:44 - an example in which i'll create a
00:46 - function that accepts a pointer as an
00:48 - argument and change the value pointed by
00:50 - the pointer
00:51 - so i'll create a function void
00:55 - find
00:56 - value here this function takes pointer
01:00 - as an argument
01:03 - and
01:04 - inside the function
01:07 - asterisk num is equals to 39.
01:12 - here the non-parameter is a pointer
01:14 - variable and we have changed the value
01:16 - pointed by this pointer now let's create
01:18 - a number variable inside the main so
01:20 - i'll create here int
01:22 - number
01:23 - and i'll assign value 21 to this
01:26 - and i'll call the function by passing
01:28 - the address of the number so i'll call
01:31 - the function find
01:32 - value
01:34 - bracket
01:36 - ampersand
01:38 - number
01:40 - since our function accepts a pointer
01:42 - variable which stores the memory address
01:44 - we are passing the address of the number
01:46 - variable
01:48 - now let me print the value of the number
01:50 - so i'll use print statement
01:52 - printf
01:54 - inside quotation number
01:58 - percent d
02:00 - comma
02:02 - number
02:05 - let's run this code
02:07 - as you can see the value of the number
02:09 - is changed to 39. this happens because
02:12 - when we pass the address of a number
02:14 - variable
02:15 - the pointer variable inside the function
02:17 - is assigned with the address of the
02:19 - number
02:20 - so when we change the value at the
02:23 - memory address the value of the number
02:25 - is also changed
02:29 - now let's see another example in this
02:32 - example we'll find the square of a
02:34 - number like before but this time we'll
02:36 - use a pointer variable instead of a
02:38 - regular variable here i have the code
02:40 - from our earlier program let's remove
02:42 - this function
02:45 - now i'll create a find square function
02:47 - void
02:48 - find square
02:54 - and this function accepts a pointer
02:55 - variable as its parameter
02:57 - so
02:59 - int
03:01 - asterix
03:02 - number
03:06 - inside the function i'll find the square
03:07 - of the number so int
03:10 - square is equals to
03:13 - asterisk number
03:15 - multiplied with
03:17 - number
03:20 - this syntax might look confusing for you
03:22 - here asterix number is the value pointed
03:25 - by the number pointer and we are
03:27 - multiplying the value with itself
03:30 - now the square variable stores the
03:31 - square of the number now let me assign
03:34 - this to the value pointed by the number
03:36 - pointer so
03:38 - asterix number
03:40 - is equals to
03:42 - square
03:44 - now inside the main function i'll change
03:47 - this find value to find square
03:51 - so find square
03:54 - i'll also modify this print statement
03:56 - i'll write here
03:57 - square
03:58 - is now i'll run this code
04:03 - as you can see we have computed the
04:05 - square of the number
04:08 - by the way do you want to take your
04:09 - programming journey to the next level
04:11 - watching tutorials is fine but it has
04:14 - one limitation it's hard to learn and
04:16 - practice together at the same time lucky
04:18 - for you we recently launched programmies
04:21 - pro that provides tutorials along with
04:23 - quizzes and challenges which will help
04:25 - you practice and test your learning in
04:27 - real time also the course includes
04:29 - projects to give you an experience of
04:31 - how programming works in the real world
04:34 - sign up now visit this link which is
04:36 - also available in the video description
04:38 - below
04:40 - just like regular variable we can also
04:43 - return a pointer variable from a
04:45 - function let me show you an example here
04:48 - we have our code from our earlier
04:50 - program now suppose i want to return
04:52 - pointer from the function not just
04:54 - compute the square so first i'll change
04:57 - the return type of the function from
04:59 - void
05:00 - to
05:01 - integer pointer that is int asterisk
05:06 - now inside the function i'll add a
05:08 - return statement that returns a pointer
05:10 - so return
05:12 - number
05:14 - this statement returns the address
05:16 - pointed by number
05:18 - now to store the return value i'll
05:20 - assign this function call to a variable
05:23 - so int asterisk
05:26 - result
05:27 - is equals to this function call
05:30 - since the return value is an address we
05:33 - have created a pointer to store the
05:35 - result now let's use this result
05:38 - variable to print the square value
05:41 - i'll modify this print statement here
05:43 - i'll remove this square is
05:46 - and i'll write here
05:47 - result is
05:49 - percent d
05:50 - and i'll remove this number and i'll
05:53 - write here
05:54 - asterix
05:55 - result
05:57 - now let's run this program
05:59 - as you can see the return address stores
06:02 - the square of the number
06:04 - okay guys we need your support to keep
06:06 - these types of content free for all
06:08 - users youtube really likes engagement on
06:10 - the video so leave a comment below press
06:12 - that like button and hit subscribe if
06:14 - you haven't already let's keep the
06:16 - engagement score higher so that more
06:18 - people can discover and enjoy these
06:20 - courses
06:22 - let's see one more example to make it
06:24 - more clear for you so i'll create a
06:27 - function that adds to number and returns
06:29 - the sum let me go back to my code editor
06:32 - i'll remove these all code from here
06:36 - and i'll remove these statements from
06:38 - here
06:39 - so first i'll create a function that
06:41 - accepts three pointer so i'll create a
06:44 - function here
06:45 - that is int
06:47 - asterisk add
06:49 - number
06:54 - int
06:55 - asterisk
06:56 - num1
06:57 - comma int
06:59 - asterisk
07:01 - num2 comma int
07:04 - asterix sum
07:06 - inside the function we will compute the
07:09 - sum of the number pointed by num1 and
07:11 - num2 and store the result to the address
07:13 - pointed by the sum
07:15 - so
07:16 - we'll do
07:18 - asterix
07:19 - sum is equals to
07:22 - asterisk num1
07:24 - plus
07:25 - asterisk
07:26 - num tube
07:27 - then i'll return the sum
07:29 - so return
07:31 - sum
07:33 - now inside the main function i'll create
07:35 - two variables int number 1
07:39 - and i'll assign value 32
07:41 - and another variable in number 2
07:45 - and i'll assign value 18 to this and a
07:48 - sum variable to store the sum let me
07:51 - call the function by passing the
07:52 - addresses of three variables
07:54 - so i'll call the function add numbers
08:00 - parenthesis ampersand number 1
08:03 - comma
08:05 - ampersand number 2
08:08 - comma
08:09 - ampersand sum
08:12 - since the function returns the address
08:14 - i'll assign this function call to a
08:15 - pointer so int
08:18 - asterisk result is equals to this
08:22 - function
08:23 - finally i'll print this using printf
08:25 - statement
08:26 - so print f bracket inside quotation
08:30 - sum
08:31 - is percent d
08:34 - comma
08:36 - asterisk result
08:40 - now let me run this program
08:42 - as you can see we have computed the sum
08:45 - of two numbers using the function and
08:48 - pointers
08:51 - now to revise what you have learned in
08:53 - this program here is a programming task
08:55 - for you create a program to find the
08:57 - multiplication of two numbers using a
08:59 - function and a pointer here is how your
09:01 - programs would work create a function
09:03 - that assets three pointers inside the
09:06 - function multiply values represented by
09:08 - two pointers and assign the result to
09:10 - the address of the third pointer inside
09:12 - the main function create three variables
09:15 - two variables with the value 13 and nine
09:17 - and third variable to store their
09:19 - product call the function with addresses
09:21 - of the three variables as argument store
09:24 - the return value inside a pointer and
09:26 - print the value pointed by the returned
09:28 - address you will find the answer to this
09:30 - question in our github repository and
09:32 - also if you want to revise this concept
09:35 - all these programs will be there as well
09:37 - i'll put the link in the video
09:38 - description below now that we have
09:40 - reached the end of this video it's time
09:42 - for programming squeeze what type of
09:44 - value does the following function return
09:47 - comment your answer below see you in the
09:49 - next video happy programming
09:54 - [Music]

Cleaned transcript:

hey guys welcome back to this series on c programming in the last few videos we have been learning about pointers in c we'll continue that in this video as well today we will learn to use pointers and function together this is going to be an interesting video so let's get started firstly let's revise the working of the function with the help of an example here i have created a function that calculates the square of a number the function takes single parameter and it then computes the square of the number and then returns the square here we are passing a regular variable to the function in c we can also pass a pointer variable as an argument to a function let's see an example in which i'll create a function that accepts a pointer as an argument and change the value pointed by the pointer so i'll create a function void find value here this function takes pointer as an argument and inside the function asterisk num is equals to 39. here the nonparameter is a pointer variable and we have changed the value pointed by this pointer now let's create a number variable inside the main so i'll create here int number and i'll assign value 21 to this and i'll call the function by passing the address of the number so i'll call the function find value bracket ampersand number since our function accepts a pointer variable which stores the memory address we are passing the address of the number variable now let me print the value of the number so i'll use print statement printf inside quotation number percent d comma number let's run this code as you can see the value of the number is changed to 39. this happens because when we pass the address of a number variable the pointer variable inside the function is assigned with the address of the number so when we change the value at the memory address the value of the number is also changed now let's see another example in this example we'll find the square of a number like before but this time we'll use a pointer variable instead of a regular variable here i have the code from our earlier program let's remove this function now i'll create a find square function void find square and this function accepts a pointer variable as its parameter so int asterix number inside the function i'll find the square of the number so int square is equals to asterisk number multiplied with number this syntax might look confusing for you here asterix number is the value pointed by the number pointer and we are multiplying the value with itself now the square variable stores the square of the number now let me assign this to the value pointed by the number pointer so asterix number is equals to square now inside the main function i'll change this find value to find square so find square i'll also modify this print statement i'll write here square is now i'll run this code as you can see we have computed the square of the number by the way do you want to take your programming journey to the next level watching tutorials is fine but it has one limitation it's hard to learn and practice together at the same time lucky for you we recently launched programmies pro that provides tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an experience of how programming works in the real world sign up now visit this link which is also available in the video description below just like regular variable we can also return a pointer variable from a function let me show you an example here we have our code from our earlier program now suppose i want to return pointer from the function not just compute the square so first i'll change the return type of the function from void to integer pointer that is int asterisk now inside the function i'll add a return statement that returns a pointer so return number this statement returns the address pointed by number now to store the return value i'll assign this function call to a variable so int asterisk result is equals to this function call since the return value is an address we have created a pointer to store the result now let's use this result variable to print the square value i'll modify this print statement here i'll remove this square is and i'll write here result is percent d and i'll remove this number and i'll write here asterix result now let's run this program as you can see the return address stores the square of the number okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's keep the engagement score higher so that more people can discover and enjoy these courses let's see one more example to make it more clear for you so i'll create a function that adds to number and returns the sum let me go back to my code editor i'll remove these all code from here and i'll remove these statements from here so first i'll create a function that accepts three pointer so i'll create a function here that is int asterisk add number int asterisk num1 comma int asterisk num2 comma int asterix sum inside the function we will compute the sum of the number pointed by num1 and num2 and store the result to the address pointed by the sum so we'll do asterix sum is equals to asterisk num1 plus asterisk num tube then i'll return the sum so return sum now inside the main function i'll create two variables int number 1 and i'll assign value 32 and another variable in number 2 and i'll assign value 18 to this and a sum variable to store the sum let me call the function by passing the addresses of three variables so i'll call the function add numbers parenthesis ampersand number 1 comma ampersand number 2 comma ampersand sum since the function returns the address i'll assign this function call to a pointer so int asterisk result is equals to this function finally i'll print this using printf statement so print f bracket inside quotation sum is percent d comma asterisk result now let me run this program as you can see we have computed the sum of two numbers using the function and pointers now to revise what you have learned in this program here is a programming task for you create a program to find the multiplication of two numbers using a function and a pointer here is how your programs would work create a function that assets three pointers inside the function multiply values represented by two pointers and assign the result to the address of the third pointer inside the main function create three variables two variables with the value 13 and nine and third variable to store their product call the function with addresses of the three variables as argument store the return value inside a pointer and print the value pointed by the returned address you will find the answer to this question in our github repository and also if you want to revise this concept all these programs will be there as well i'll put the link in the video description below now that we have reached the end of this video it's time for programming squeeze what type of value does the following function return comment your answer below see you in the next video happy programming
