With timestamps:

00:00 - what's up guys i'm puneet from
00:01 - programmers and welcome back to the
00:03 - series on python
00:04 - in the last two videos we learned about
00:06 - functions
00:07 - there's an important concept called
00:09 - local variables which we need to
00:11 - understand when we work with functions
00:13 - we will cover exactly that in this video
00:15 - along with global variables in python
00:17 - so let's get started
00:24 - i have this function to add two numbers
00:26 - on my screen
00:28 - this add underscore numbers function
00:30 - takes two parameters
00:32 - finds their sum and prints the result
00:34 - all in the same function
00:36 - now instead of printing result from
00:38 - inside the function
00:39 - let's see what will happen if we print
00:41 - result after the function call
00:43 - so i'll cut this code and paste it after
00:46 - the function call
00:47 - and this time when i run this code then
00:50 - it gives me an
00:51 - error it says result not defined
00:54 - what python is trying to tell us is that
00:57 - the result variable is not defined
00:59 - on line 6. what's going on here
01:03 - this is where the concept of local
01:04 - variables comes in
01:06 - any variable that is created inside a
01:08 - function is local to it
01:10 - meaning the result variable is local to
01:13 - the add numbers
01:14 - function when this function ends this
01:17 - variable gets destroyed
01:19 - if you remember we can fix this by using
01:21 - a return statement
01:23 - so i can say return result and here i
01:26 - can say
01:29 - output equals add numbers and here i can
01:32 - print the output
01:35 - with the return statement we are not
01:37 - using the local variable directly
01:39 - rather we are returning its value to the
01:41 - function call
01:42 - this concept of a local variable is a
01:45 - good thing because anyone using the add
01:47 - numbers function
01:49 - doesn't have to know what's inside it
01:51 - they just need to know what arguments to
01:53 - pass
01:53 - and what value it returns and they can
01:56 - use this function without a problem
01:58 - this makes our code reusable to not only
02:00 - us but also to our fellow programmers
02:05 - before moving to the next section of the
02:07 - video i'd like to mention that the
02:09 - program is team has created an
02:10 - app that allows you to learn python from
02:12 - your phone the app contains bit size
02:14 - lessons that are easy to understand
02:16 - a built-in interpreter so that you can
02:18 - run python on your phone
02:19 - quizzes and many more features the app
02:22 - is available on both ios and android the
02:24 - links are in the video description below
02:28 - any variables that are created outside a
02:30 - function are called global variables
02:32 - and you can use these global variables
02:34 - from both inside
02:36 - and outside of a function let me give
02:38 - you an example
02:39 - so i'll create a global variable called
02:41 - message and i'll say
02:42 - message equals how you doing
02:47 - and now let me create a function def
02:50 - greet that prints this message
02:54 - and i'll call this greet function
03:00 - here message is a global variable as
03:03 - it's defined
03:04 - outside the scope of the function greet
03:07 - and you can use it anywhere after it is
03:09 - defined let me run this code to show you
03:11 - this
03:12 - so when i press run then it says how you
03:14 - doing
03:16 - now let's see what will happen if you
03:17 - define a variable with the same name
03:19 - message
03:20 - inside the function so i'll say message
03:24 - equals how are you
03:27 - and here to know that i'm printing the
03:29 - message from inside the function i'll
03:31 - say inside
03:34 - message inside function
03:38 - and after greet i'll again print message
03:41 - message outside function and i'll print
03:44 - the message variable here
03:46 - here i'm trying to see what the value of
03:48 - message is by printing it from both
03:51 - inside and outside the function when i
03:54 - press
03:54 - run then you can see message inside
03:56 - function is how are you
03:58 - and message outside function is how you
04:01 - doing
04:02 - inside the function when we update the
04:05 - message variable
04:06 - then rather than changing the global
04:08 - variable message a new local variable
04:10 - called message is created
04:12 - that message has a new value called how
04:15 - are you and that is what gets printed
04:17 - here
04:18 - after the great function the since the
04:21 - global variable message is unchanged
04:23 - when we print it from outside then it
04:25 - shows the global value
04:28 - if we need to change the global variable
04:30 - inside the function
04:32 - we can achieve this by using the global
04:34 - keyword so here i'll add a new line
04:37 - that says global message and this time
04:40 - when i press run
04:42 - then you can see that from inside the
04:44 - function
04:45 - the value is how are you but because i
04:47 - had defined it
04:48 - as global the actual global message got
04:52 - changed
04:53 - and when i come out of the function and
04:55 - try to print message again
04:57 - the outside message or the global
04:59 - message variable has been changed
05:01 - to how are you before we end this video
05:04 - here's a tip for you that will serve you
05:06 - well in the long run
05:07 - try to avoid the use of global keyword
05:09 - inside a function whenever possible
05:11 - it makes our code really hard to
05:13 - understand as you must have seen in the
05:15 - last example
05:16 - now let's recap the concept that we
05:18 - learned in this video
05:19 - a variable defined inside a function is
05:22 - local to it
05:23 - when the function ends this variable is
05:26 - destroyed
05:27 - variables defined outside a function are
05:29 - called global variables in python
05:32 - inside functions the global keyword can
05:34 - be used to change the value of a
05:36 - variable to a global scope however it's
05:39 - considered a bad practice and you should
05:41 - try to avoid it
05:42 - that's it for this video i hope you
05:44 - learned something if you're just
05:46 - watching the video without writing any
05:47 - code
05:48 - i highly encourage you to try the
05:50 - programs in this video on your own
05:52 - the only way you can be a good
05:53 - programmer is by trying
05:55 - by the way you can find all the programs
05:57 - from this video on github
05:58 - i provided the link in the description
06:00 - below feel free to copy the program and
06:02 - edit them as you please
06:04 - and if you have any questions and
06:05 - feedback feel free to use the comment
06:08 - section below
06:09 - join me in this video series and let's
06:10 - explore the exciting world of
06:12 - programming together
06:13 - if you like this video hit the like
06:14 - button now and also don't forget to
06:16 - subscribe to our channel and ring that
06:18 - bell icon so that you don't miss the
06:19 - next
06:20 - video in the next video we will start a
06:22 - new section
06:23 - we will learn about the list data type
06:25 - which is one of the frequently used
06:26 - sequences in python
06:28 - thanks for watching and i'll see you in
06:29 - the next one happy programming

Cleaned transcript:

what's up guys i'm puneet from programmers and welcome back to the series on python in the last two videos we learned about functions there's an important concept called local variables which we need to understand when we work with functions we will cover exactly that in this video along with global variables in python so let's get started i have this function to add two numbers on my screen this add underscore numbers function takes two parameters finds their sum and prints the result all in the same function now instead of printing result from inside the function let's see what will happen if we print result after the function call so i'll cut this code and paste it after the function call and this time when i run this code then it gives me an error it says result not defined what python is trying to tell us is that the result variable is not defined on line 6. what's going on here this is where the concept of local variables comes in any variable that is created inside a function is local to it meaning the result variable is local to the add numbers function when this function ends this variable gets destroyed if you remember we can fix this by using a return statement so i can say return result and here i can say output equals add numbers and here i can print the output with the return statement we are not using the local variable directly rather we are returning its value to the function call this concept of a local variable is a good thing because anyone using the add numbers function doesn't have to know what's inside it they just need to know what arguments to pass and what value it returns and they can use this function without a problem this makes our code reusable to not only us but also to our fellow programmers before moving to the next section of the video i'd like to mention that the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easy to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below any variables that are created outside a function are called global variables and you can use these global variables from both inside and outside of a function let me give you an example so i'll create a global variable called message and i'll say message equals how you doing and now let me create a function def greet that prints this message and i'll call this greet function here message is a global variable as it's defined outside the scope of the function greet and you can use it anywhere after it is defined let me run this code to show you this so when i press run then it says how you doing now let's see what will happen if you define a variable with the same name message inside the function so i'll say message equals how are you and here to know that i'm printing the message from inside the function i'll say inside message inside function and after greet i'll again print message message outside function and i'll print the message variable here here i'm trying to see what the value of message is by printing it from both inside and outside the function when i press run then you can see message inside function is how are you and message outside function is how you doing inside the function when we update the message variable then rather than changing the global variable message a new local variable called message is created that message has a new value called how are you and that is what gets printed here after the great function the since the global variable message is unchanged when we print it from outside then it shows the global value if we need to change the global variable inside the function we can achieve this by using the global keyword so here i'll add a new line that says global message and this time when i press run then you can see that from inside the function the value is how are you but because i had defined it as global the actual global message got changed and when i come out of the function and try to print message again the outside message or the global message variable has been changed to how are you before we end this video here's a tip for you that will serve you well in the long run try to avoid the use of global keyword inside a function whenever possible it makes our code really hard to understand as you must have seen in the last example now let's recap the concept that we learned in this video a variable defined inside a function is local to it when the function ends this variable is destroyed variables defined outside a function are called global variables in python inside functions the global keyword can be used to change the value of a variable to a global scope however it's considered a bad practice and you should try to avoid it that's it for this video i hope you learned something if you're just watching the video without writing any code i highly encourage you to try the programs in this video on your own the only way you can be a good programmer is by trying by the way you can find all the programs from this video on github i provided the link in the description below feel free to copy the program and edit them as you please and if you have any questions and feedback feel free to use the comment section below join me in this video series and let's explore the exciting world of programming together if you like this video hit the like button now and also don't forget to subscribe to our channel and ring that bell icon so that you don't miss the next video in the next video we will start a new section we will learn about the list data type which is one of the frequently used sequences in python thanks for watching and i'll see you in the next one happy programming
