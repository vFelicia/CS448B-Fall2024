With timestamps:

00:00 - hey guys welcome back to this series on
00:02 - c programming in this video we'll learn
00:04 - about preprocessors and macros remember
00:07 - this has include stdio.h
00:10 - we have been using it in all our
00:12 - programs today you will know the exact
00:14 - meaning of this line so let's get
00:16 - started
00:21 - so far we have used this line in all of
00:24 - our program
00:25 - in this line has include is preprocessor
00:28 - directive that includes the stdio.h
00:31 - header file in our program basically a
00:33 - preprocessor preprocess our program
00:36 - before it is being compiled for example
00:39 - this line adds the stdio.h file in our
00:42 - program before the execution of the
00:44 - program there are different types of
00:46 - preprocessor and all of them are
00:48 - represented by the hash symbol at the
00:50 - beginning let's start with the most
00:52 - common preprocessor
00:56 - as mentioned earlier the has include
00:58 - preprocessor is used to include external
01:01 - header file in our program for example
01:04 - has include stdio.h this code includes
01:07 - the stdio.h file in our program
01:10 - similarly has include math.h this code
01:14 - includes the math.h file in our program
01:17 - once we add the header file in our
01:18 - program we can use all the function
01:21 - present in the file remember printf and
01:23 - scanf
01:25 - these functions were defined inside the
01:27 - stdio.h file we are able to use this
01:29 - function because we have added the
01:31 - stdio.h file in our program similarly we
01:35 - can use math function like sqrt and cbrt
01:38 - to compute the square root and cube root
01:41 - respectively once we include the math.h
01:43 - hero file in our program let's see an
01:45 - example here is the basic c program
01:48 - since we will always be printing some
01:51 - values i have already added the stdio.h
01:54 - file now let's add the math.h file so
01:58 - here i'll add
02:00 - has
02:00 - include
02:04 - math.h hero file
02:08 - now inside main
02:10 - let's create a variable
02:13 - int number
02:15 - so int number and i'll assign a value 36
02:20 - to this
02:21 - i'll now use sqrt function to compute
02:24 - the square root of this number so i'll
02:26 - use sqrt
02:29 - bracket number
02:31 - this function returns a double value so
02:33 - i'll assign this to a variable
02:36 - so double
02:39 - square
02:41 - root
02:42 - is equals to square t number now let me
02:45 - print the square root variable i'll use
02:48 - printf statement printf
02:52 - bracket inside quotation percent dot 2lf
02:57 - comma
02:59 - square
03:00 - root
03:04 - now i'll run this code
03:07 - as you can see we get square root of 36
03:10 - which is 6.
03:12 - now let's find the cube root using cvrt
03:15 - function i'll change this value of
03:18 - number from 36 to 125
03:22 - and let me change this sqrt to cvrt
03:27 - c cbrt
03:29 - and i'll change this variable name from
03:32 - square root to cube root
03:34 - i'll change the variable name in here as
03:37 - well
03:39 - now let's run this code
03:42 - now this time
03:44 - you can see we get the cube root 5 of
03:47 - this number
03:49 - by the way do you want to take your
03:50 - programming journey to the next level
03:52 - watching tutorials is fine but it has
03:54 - one limitation it's hard to learn and
03:56 - practice together at the same time lucky
03:59 - for you we recently launched programmies
04:01 - pro that provides tutorial along with
04:03 - quizzes and challenges which will help
04:05 - you practice and test your learning in
04:06 - real time also the course includes
04:09 - projects to give you an experience of
04:10 - how programming works in the real world
04:13 - and for our youtube subscriber we are
04:15 - giving 50 off on the yearly plan sign up
04:18 - by scanning this qr code or use the link
04:20 - in the video description to claim your
04:22 - discount
04:26 - in c the hash defined preprocessor is
04:28 - used to define macros for example has
04:31 - defined pi 3.1415
04:34 - here pi is a macro a macro is a piece of
04:37 - code which is given a name in our
04:39 - example we have used pi to indicate the
04:42 - value
04:43 - 3.1415 now whenever we need to add the
04:46 - value in our code we use bi let's see an
04:49 - example
04:50 - now let me define pi macro
04:53 - has
04:54 - defined
04:56 - pi
04:58 - 3.1415
05:00 - now i'll print the value of pi
05:03 - inside the main so i'll use printf
05:08 - statement here
05:10 - print
05:12 - f
05:13 - inside quotation person dot 4
05:16 - lf
05:17 - comma vi
05:19 - sorry p i
05:21 - and i'll run this code
05:23 - as you can see we get the value 3.1415
05:26 - when we print pi
05:28 - let's see one more example suppose i
05:30 - want to compute the area of circle i
05:32 - have already defined pi macro now let me
05:35 - create the radius variable
05:38 - first i'll create radius variable here
05:41 - double radius
05:45 - is equals to 12.4
05:48 - and
05:49 - i'll now compute the area
05:52 - so here double
05:54 - area
05:55 - is equals to p i
05:59 - into
06:00 - radius
06:02 - into
06:03 - radius
06:06 - here i have used pi macro
06:08 - this will be replaced by the value 3.145
06:12 - now let me print the area i'll modify
06:14 - this print statement
06:16 - so i'll modify this print statement and
06:19 - i'll put here
06:21 - area
06:22 - i'll run this code you can see we have
06:25 - successfully computed the area of the
06:27 - triangle
06:28 - okay guys we need your support to keep
06:30 - these types of content free for all
06:32 - users youtube really likes engagement on
06:34 - the videos so leave a comment below
06:36 - press that like button hit subscribe if
06:38 - you haven't already let's get the
06:40 - engagement score high up so that more
06:41 - people can discover and enjoy these
06:43 - courses
06:46 - as mentioned earlier macros are piece of
06:49 - code that is given some name hence we
06:51 - can also define a complete function as a
06:54 - macro let's see an example
06:56 - we have computed the area of circle
06:58 - instead of computing the area like this
07:00 - we can define a function macro that
07:02 - computes the area and use the code in
07:04 - our program let me show you here after
07:07 - the define pi i'll write here has define
07:12 - circle
07:14 - area
07:17 - parentheses are
07:19 - another parenthesis
07:21 - i'll write here p i
07:23 - into
07:24 - r
07:25 - into r
07:28 - this is the macro function it takes the
07:30 - single parameter r that is the radius of
07:33 - the circle and computes the area now
07:35 - let's use this in our code to compute
07:38 - the area
07:39 - so i'll remove this pi into radius into
07:41 - radius from the code and i'll add your
07:44 - circle
07:46 - area
07:47 - and here read yes
07:52 - so let me run this
07:55 - as you can see we get the same output
07:59 - now to revise what you have learned in
08:01 - this program here is a programming task
08:03 - for you create a program to find the
08:05 - square root of a number using the sqrt
08:08 - function and macro together here is how
08:10 - your programs would work include the
08:12 - math.h header file define a macro
08:15 - function square root bracket and this
08:18 - macro function should use the sqrt
08:20 - function to find the square root of the
08:21 - parameter n inside the main function use
08:24 - the square root macro to compute the
08:26 - square root
08:28 - you will find the answer to this
08:29 - question in our github repository and
08:31 - also if you want to revise this concept
08:34 - all these programs will be there as well
08:36 - i'll put the link in the video
08:37 - description below now that we have
08:39 - reached the end of this video it's time
08:41 - for programming squeeze what symbol is
08:43 - used to begin a preprocessor directive
08:46 - comment your answer below see you in the
08:48 - next video happy programming
08:53 - [Music]
08:59 - you

Cleaned transcript:

hey guys welcome back to this series on c programming in this video we'll learn about preprocessors and macros remember this has include stdio.h we have been using it in all our programs today you will know the exact meaning of this line so let's get started so far we have used this line in all of our program in this line has include is preprocessor directive that includes the stdio.h header file in our program basically a preprocessor preprocess our program before it is being compiled for example this line adds the stdio.h file in our program before the execution of the program there are different types of preprocessor and all of them are represented by the hash symbol at the beginning let's start with the most common preprocessor as mentioned earlier the has include preprocessor is used to include external header file in our program for example has include stdio.h this code includes the stdio.h file in our program similarly has include math.h this code includes the math.h file in our program once we add the header file in our program we can use all the function present in the file remember printf and scanf these functions were defined inside the stdio.h file we are able to use this function because we have added the stdio.h file in our program similarly we can use math function like sqrt and cbrt to compute the square root and cube root respectively once we include the math.h hero file in our program let's see an example here is the basic c program since we will always be printing some values i have already added the stdio.h file now let's add the math.h file so here i'll add has include math.h hero file now inside main let's create a variable int number so int number and i'll assign a value 36 to this i'll now use sqrt function to compute the square root of this number so i'll use sqrt bracket number this function returns a double value so i'll assign this to a variable so double square root is equals to square t number now let me print the square root variable i'll use printf statement printf bracket inside quotation percent dot 2lf comma square root now i'll run this code as you can see we get square root of 36 which is 6. now let's find the cube root using cvrt function i'll change this value of number from 36 to 125 and let me change this sqrt to cvrt c cbrt and i'll change this variable name from square root to cube root i'll change the variable name in here as well now let's run this code now this time you can see we get the cube root 5 of this number by the way do you want to take your programming journey to the next level watching tutorials is fine but it has one limitation it's hard to learn and practice together at the same time lucky for you we recently launched programmies pro that provides tutorial along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an experience of how programming works in the real world and for our youtube subscriber we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount in c the hash defined preprocessor is used to define macros for example has defined pi 3.1415 here pi is a macro a macro is a piece of code which is given a name in our example we have used pi to indicate the value 3.1415 now whenever we need to add the value in our code we use bi let's see an example now let me define pi macro has defined pi 3.1415 now i'll print the value of pi inside the main so i'll use printf statement here print f inside quotation person dot 4 lf comma vi sorry p i and i'll run this code as you can see we get the value 3.1415 when we print pi let's see one more example suppose i want to compute the area of circle i have already defined pi macro now let me create the radius variable first i'll create radius variable here double radius is equals to 12.4 and i'll now compute the area so here double area is equals to p i into radius into radius here i have used pi macro this will be replaced by the value 3.145 now let me print the area i'll modify this print statement so i'll modify this print statement and i'll put here area i'll run this code you can see we have successfully computed the area of the triangle okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the videos so leave a comment below press that like button hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses as mentioned earlier macros are piece of code that is given some name hence we can also define a complete function as a macro let's see an example we have computed the area of circle instead of computing the area like this we can define a function macro that computes the area and use the code in our program let me show you here after the define pi i'll write here has define circle area parentheses are another parenthesis i'll write here p i into r into r this is the macro function it takes the single parameter r that is the radius of the circle and computes the area now let's use this in our code to compute the area so i'll remove this pi into radius into radius from the code and i'll add your circle area and here read yes so let me run this as you can see we get the same output now to revise what you have learned in this program here is a programming task for you create a program to find the square root of a number using the sqrt function and macro together here is how your programs would work include the math.h header file define a macro function square root bracket and this macro function should use the sqrt function to find the square root of the parameter n inside the main function use the square root macro to compute the square root you will find the answer to this question in our github repository and also if you want to revise this concept all these programs will be there as well i'll put the link in the video description below now that we have reached the end of this video it's time for programming squeeze what symbol is used to begin a preprocessor directive comment your answer below see you in the next video happy programming you
