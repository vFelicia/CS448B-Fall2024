With timestamps:

00:00 - a folder or directory is a location on a
00:02 - computer to store
00:03 - and organize multiple files and sub
00:05 - directories python has a module named os
00:08 - that makes it really easy to work with
00:09 - directories and file management tasks
00:12 - in this video we will learn to use the
00:14 - os module to perform various directory
00:15 - operations
00:16 - like creating renaming and removing
00:18 - directories with the help of examples
00:20 - so let's get started
00:25 - before we learn to work with directories
00:27 - let's see how we can get the path to the
00:29 - current directory first
00:30 - for that we use the get cwd function of
00:33 - the os module
00:34 - it returns the current working directory
00:36 - as a string i'll go to my text editor
00:38 - first i need to import the os module so
00:41 - i'll say import
00:42 - os then i can say current
00:45 - underscore dir or current directory
00:48 - equals
00:49 - os dot get cwd
00:52 - and now let me print this variable print
00:55 - current underscore dir
00:56 - i'll save this file run the code say
00:59 - python main.pi
01:01 - and when i press enter then you can see
01:03 - that it printed the location
01:05 - of the main.pi file or the current
01:07 - directory
01:10 - in python we can change the current
01:12 - working directory by using the chdir
01:14 - method of the os module
01:16 - as we saw in our previous section the
01:18 - present working directory is the
01:20 - directory containing our python file by
01:22 - default
01:23 - let's change the current working
01:24 - directory i'll start with the old code
01:26 - and i'll say os dot ch
01:29 - dir and inside these quotation marks
01:34 - let me put this location
01:37 - and then instead of os i'll say
01:39 - exceptions
01:40 - which is the location of the file from
01:42 - the previous video
01:44 - so here i'm trying to change the default
01:47 - location
01:48 - and then let me print os dot get
01:51 - cwd again to confirm that the current
01:54 - working directory has been changed
01:56 - so let me run python main dot pi
02:00 - as you can see os dot get cwd
02:03 - first gave me the os folder where main
02:05 - dot pi was located
02:07 - when i change the default directory by
02:09 - using os.csdir
02:11 - then when i call os.getcwd again
02:14 - this time i get the new directory which
02:16 - i had set as the default directory here
02:19 - now if i create a file inside the
02:21 - current directory our file will be
02:23 - created inside
02:25 - this exceptions folder and not this os
02:28 - folder
02:29 - let me show this in action so here i'll
02:31 - write to a new file i'll say with
02:33 - open test dot txt
02:37 - i'll do that in write mode and i'll call
02:40 - the file point
02:41 - f then i'll say f dot write
02:44 - this is a test file
02:49 - now when i press run python main.pi
02:54 - a new file has been created and this
02:57 - file
02:57 - if i check here then you can't see that
03:00 - file in the os directory
03:02 - instead if i go to the exceptions
03:04 - directory you can see that test.txt file
03:06 - has been created
03:07 - and inside it you can see that this is a
03:11 - test file is there
03:12 - that means python is considering the
03:14 - exceptions directory
03:15 - to be the current directory for opening
03:18 - file test.txt in write mode
03:23 - in python all files and subdirectories
03:25 - inside a directory
03:26 - can be retrieved using the list dir
03:28 - function of the os module
03:31 - and i'll say print os dot
03:34 - list dir and let me run this so i say
03:38 - python
03:38 - main dot pi and you can see a list of
03:42 - all the files and folders
03:44 - inside this python videos directory can
03:46 - be seen here
03:48 - i can also pass an optional path
03:50 - argument to hdir
03:51 - to return files and subdirectories from
03:53 - a specific path
03:54 - so here i can say exceptions
03:58 - and if i run this program again then you
04:01 - can see the files that are inside the
04:03 - exceptions directory
04:04 - by the way if you're finding this video
04:06 - useful a sub to the channel would be
04:08 - awesome
04:09 - before moving to the next section of the
04:10 - video the programming team has created
04:12 - an app that allows you to learn python
04:14 - from your phone
04:15 - the app contains bit size lessons that
04:17 - are easier to understand
04:18 - a built-in interpreter so that you can
04:20 - run python on your phone quizzes and
04:22 - many more features
04:23 - the app is available on both ios and
04:25 - android the links are in the video
04:26 - description
04:31 - we can create a new directory using the
04:32 - mkdir function of the os module
04:35 - in my code editor i'll say os dot
04:38 - mkdir test
04:42 - and i can run this code so i'll say
04:44 - python
04:45 - main dot pi and if i go into the folder
04:49 - i can see that there's a new folder
04:51 - called test
04:53 - if i wanted this text directory to be
04:55 - created in a specific path
04:56 - i can use the full path location like
04:58 - this so here
05:00 - i'll say mkdir
05:03 - exceptions slash test and
05:06 - now let me run this so python main dot
05:08 - pi
05:09 - and if i go inside the exceptions folder
05:12 - then you can see that there's a test
05:14 - folder inside the exceptions folder
05:19 - we can rename any directory or file
05:21 - using the rename function of the os
05:23 - module
05:24 - let me show you how os dot
05:27 - rename and inside this let me pick
05:30 - any file so or folder i'll call idler
05:33 - name test
05:34 - so here i'll say test and i can say test
05:38 - new and now if i run this
05:41 - if i run this code so i'll say python
05:43 - mean dot pi
05:44 - then if i go back to my folder structure
05:46 - you can see that test has been renamed
05:48 - to test new
05:50 - as you just saw the rename method takes
05:53 - two arguments
05:54 - the current name of the folder or file
05:56 - and the new name of the folder or file
05:59 - the rename function can also be used to
06:02 - rename a file with the same exact syntax
06:04 - i encourage you to change the name of a
06:06 - file on your own and let me know if it
06:08 - worked in the comments section
06:12 - we can remove a file using the remove
06:14 - function of the os module
06:16 - so i'll go to my folder list and i can
06:18 - see that there's
06:19 - an exceptions4k.mov file here i'll
06:22 - remove it using python
06:24 - so on my code editor i'll say print
06:28 - first let me start by listing all the
06:31 - files
06:31 - and directories in this folder and here
06:34 - i'll say python
06:35 - main dot pi as you can see
06:38 - there is a file called python module
06:41 - let's remove this one
06:42 - so i want to remove python modules.mov
06:45 - next
06:46 - i'll say os dot remove
06:50 - python modules
06:54 - dot mov and then let me again print os
06:58 - dot list dir just to make sure
07:00 - that python modules has indeed been
07:02 - removed so now i'll say python
07:05 - main dot pi and as you can see
07:08 - python modules is not here python
07:11 - modules dot
07:11 - mov is not here anymore
07:16 - to remove a directory we use the rmdir
07:18 - function
07:19 - one thing we need to remember when
07:21 - removing a directory is that the
07:22 - directory must be empty
07:24 - otherwise an exception will be raised
07:26 - now we currently already have an
07:28 - empty directory called test new in our
07:30 - current directory which we have created
07:32 - before
07:32 - to remove this directory i will change
07:34 - my previous code
07:35 - and here i'll say os dot rmdir
07:40 - and here i'll say test new
07:43 - now let me run this first let me clear
07:45 - the screen here i'll say python
07:47 - main dot pi and now you can see that
07:51 - test new
07:52 - is here before but it's not in the new
07:54 - list or i can also verify this visually
07:56 - so you can see that test new folder is
07:59 - no longer there
08:00 - that means it has been removed that's it
08:03 - for this video
08:04 - if you want to revise these concepts you
08:05 - can find all these programs in our
08:07 - github repository
08:08 - i'll also put this link in the video
08:09 - description and if you like this video
08:11 - hit that like button and subscribe to
08:13 - the channel and i'll see you in the next
08:14 - one
08:15 - happy programming

Cleaned transcript:

a folder or directory is a location on a computer to store and organize multiple files and sub directories python has a module named os that makes it really easy to work with directories and file management tasks in this video we will learn to use the os module to perform various directory operations like creating renaming and removing directories with the help of examples so let's get started before we learn to work with directories let's see how we can get the path to the current directory first for that we use the get cwd function of the os module it returns the current working directory as a string i'll go to my text editor first i need to import the os module so i'll say import os then i can say current underscore dir or current directory equals os dot get cwd and now let me print this variable print current underscore dir i'll save this file run the code say python main.pi and when i press enter then you can see that it printed the location of the main.pi file or the current directory in python we can change the current working directory by using the chdir method of the os module as we saw in our previous section the present working directory is the directory containing our python file by default let's change the current working directory i'll start with the old code and i'll say os dot ch dir and inside these quotation marks let me put this location and then instead of os i'll say exceptions which is the location of the file from the previous video so here i'm trying to change the default location and then let me print os dot get cwd again to confirm that the current working directory has been changed so let me run python main dot pi as you can see os dot get cwd first gave me the os folder where main dot pi was located when i change the default directory by using os.csdir then when i call os.getcwd again this time i get the new directory which i had set as the default directory here now if i create a file inside the current directory our file will be created inside this exceptions folder and not this os folder let me show this in action so here i'll write to a new file i'll say with open test dot txt i'll do that in write mode and i'll call the file point f then i'll say f dot write this is a test file now when i press run python main.pi a new file has been created and this file if i check here then you can't see that file in the os directory instead if i go to the exceptions directory you can see that test.txt file has been created and inside it you can see that this is a test file is there that means python is considering the exceptions directory to be the current directory for opening file test.txt in write mode in python all files and subdirectories inside a directory can be retrieved using the list dir function of the os module and i'll say print os dot list dir and let me run this so i say python main dot pi and you can see a list of all the files and folders inside this python videos directory can be seen here i can also pass an optional path argument to hdir to return files and subdirectories from a specific path so here i can say exceptions and if i run this program again then you can see the files that are inside the exceptions directory by the way if you're finding this video useful a sub to the channel would be awesome before moving to the next section of the video the programming team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description we can create a new directory using the mkdir function of the os module in my code editor i'll say os dot mkdir test and i can run this code so i'll say python main dot pi and if i go into the folder i can see that there's a new folder called test if i wanted this text directory to be created in a specific path i can use the full path location like this so here i'll say mkdir exceptions slash test and now let me run this so python main dot pi and if i go inside the exceptions folder then you can see that there's a test folder inside the exceptions folder we can rename any directory or file using the rename function of the os module let me show you how os dot rename and inside this let me pick any file so or folder i'll call idler name test so here i'll say test and i can say test new and now if i run this if i run this code so i'll say python mean dot pi then if i go back to my folder structure you can see that test has been renamed to test new as you just saw the rename method takes two arguments the current name of the folder or file and the new name of the folder or file the rename function can also be used to rename a file with the same exact syntax i encourage you to change the name of a file on your own and let me know if it worked in the comments section we can remove a file using the remove function of the os module so i'll go to my folder list and i can see that there's an exceptions4k.mov file here i'll remove it using python so on my code editor i'll say print first let me start by listing all the files and directories in this folder and here i'll say python main dot pi as you can see there is a file called python module let's remove this one so i want to remove python modules.mov next i'll say os dot remove python modules dot mov and then let me again print os dot list dir just to make sure that python modules has indeed been removed so now i'll say python main dot pi and as you can see python modules is not here python modules dot mov is not here anymore to remove a directory we use the rmdir function one thing we need to remember when removing a directory is that the directory must be empty otherwise an exception will be raised now we currently already have an empty directory called test new in our current directory which we have created before to remove this directory i will change my previous code and here i'll say os dot rmdir and here i'll say test new now let me run this first let me clear the screen here i'll say python main dot pi and now you can see that test new is here before but it's not in the new list or i can also verify this visually so you can see that test new folder is no longer there that means it has been removed that's it for this video if you want to revise these concepts you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button and subscribe to the channel and i'll see you in the next one happy programming
