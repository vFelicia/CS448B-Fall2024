With timestamps:

00:00 - hey guys this is me padma from
00:01 - programmers and welcome back to this
00:03 - series on c programming in this video
00:05 - we'll be learning about the
00:06 - multi-dimensional array and we will also
00:09 - learn to write the matrix multiplication
00:11 - program in c programming so without
00:14 - further delay let's get started
00:20 - in the last video we learned that an
00:22 - array stores multiple elements together
00:24 - similarly a multi-dimensional array also
00:26 - stores multiple elements the only
00:29 - difference is that the each element of
00:31 - multi-dimensional array is also an array
00:34 - this is why a multi-dimensional array is
00:36 - also known as an array of arrays
00:42 - let's start with the syntax of
00:43 - multi-dimensional array here the array
00:46 - is of in type which means it can only
00:49 - store integer data
00:50 - and arr
00:52 - is the name of the array and 2
00:55 - and 3
00:56 - represents the size of the adding here 2
00:59 - means there will be 2 arrows inside this
01:02 - array and 3 means each array will have 3
01:06 - elements
01:07 - now all together our array can store 2
01:10 - into 3 six elements now let's see how we
01:13 - can initialize a two-dimensional array
01:18 - i'll use this same array
01:21 - now i'll first assign values to this
01:24 - array so this array is equals to
01:28 - curly bracket
01:29 - inside this curly bracket another curly
01:31 - bracket with element 1 comma 3 comma
01:36 - 5
01:38 - and enclosing this bracket
01:41 - and another comma here and curly bracket
01:43 - here
01:44 - here is 2 comma 4
01:47 - comma 6.
01:50 - these are the elements of first array
01:53 - and these are the elements of secondary
01:56 - you might think that this assignment
01:58 - looks different than the assigning value
02:00 - to a single dimensional array
02:03 - it's because here we are assigning
02:04 - arrays not individual elements we have
02:08 - assigned two arrays and these two arrays
02:10 - has three elements each
02:13 - here this is the example of two
02:15 - dimensional array
02:17 - and we can think of this as a table with
02:20 - two rows and three columns where rows
02:22 - represents arrays and column represents
02:24 - element inside the array by the way if
02:27 - you are watching this there is a good
02:29 - chance you want to improve your skills
02:31 - in c programming lucky for you we have a
02:33 - mobile app that provides a
02:35 - well-structured c programming course
02:37 - with certification at the end and you
02:39 - can use the app alongside the video to
02:41 - practice on the built-in compiler our
02:43 - course is free so download now by
02:45 - scanning this qr code or click the link
02:47 - in the video description
02:51 - now that you know how to store elements
02:54 - to a multi-dimensional array let's learn
02:56 - to access them remember array indexes
02:59 - well the concept of array indexes is
03:01 - also present in multi-dimensional array
03:03 - however here each element is associated
03:06 - with two indexes let me explain this
03:09 - i'll go back to my code editor here we
03:11 - have our earlier code
03:13 - now to access the first element we use
03:16 - the add a name and indexes 0 and 0. so
03:20 - add a name with indexes 0
03:23 - and 0.
03:25 - here this first 0
03:27 - indicates the first element of add array
03:30 - which is
03:31 - this array and the second zero indicates
03:33 - the first element of the first inner
03:36 - array which is one
03:38 - similarly to access the third element of
03:41 - second array we write
03:43 - a r r with index 1 and another index 2.
03:49 - here this 1 represents the second array
03:52 - and this 2 represents the third element
03:56 - of the second array now let's complete
03:58 - this program so i'll start from the
04:00 - basic structure of c program
04:07 - i will now cut this part
04:10 - and i'll
04:11 - paste it here
04:15 - and i'll print this both arrays so i'll
04:18 - use printf statement
04:24 - comma
04:25 - i'll cut this
04:27 - and
04:28 - i paste it here
04:32 - and i'll do the same for this add as
04:34 - well
04:38 - i will now run this code
04:40 - as you can see we get one using this arr
04:44 - zero zero and we get six using this
04:47 - arr one two
04:50 - to get the idea of indexes in
04:52 - multi-dimensional arrays you can refer
04:54 - to this image
04:59 - we can also change the elements of a
05:01 - multi-dimensional array by using array
05:03 - indexes let's see an example here we
05:06 - have the code from our earlier program
05:08 - i'll remove these two printf statements
05:10 - from here
05:12 - now suppose i want to change this value
05:14 - of 5 to 7 and the value of 4 to 8
05:19 - here the value 5 is a third element of
05:23 - first array so we can use the index
05:26 - 0 and 2 so
05:29 - we'll write
05:30 - a r r with index 0
05:34 - and
05:35 - 2
05:36 - and i'll assign value 7 to this
05:39 - similarly 4 is a second element of
05:41 - second array so we can use index
05:46 - 1
05:47 - and
05:48 - 1
05:49 - and i'll assign value a to this
05:53 - i will now add print statement here and
05:56 - print these both arrays so percent
05:59 - d
06:01 - comma
06:03 - a r r with square bracket
06:07 - 0
06:08 - and
06:10 - 2
06:12 - and print f
06:14 - percent d
06:16 - comma
06:17 - a r r
06:20 - second array and second element
06:25 - i'll run this code
06:26 - as you can see the value at this
06:29 - position is changed from 5 to 7 and the
06:33 - value of this position is changed from
06:36 - four to eight
06:38 - okay guys we need your support to keep
06:40 - these types of content free for all
06:42 - users youtube really likes engagement on
06:44 - the video so leave a comment below press
06:46 - that like button and hit subscribe if
06:48 - you haven't already let's get the
06:50 - engagement score high up so that more
06:52 - people can discover and enjoy these
06:54 - courses
06:57 - similar to an array we can also access
06:59 - each element of a multi-dimensional
07:01 - array using a for loop let me show you
07:04 - here in our earlier example i'll remove
07:06 - these lines of code from here
07:08 - now i'll write 2 for loop
07:11 - for
07:12 - bracket
07:13 - and i is equals to 0
07:17 - and i is less than 2
07:21 - plus
07:23 - plus i this is the increment expression
07:27 - and inside this for loop there is
07:29 - another for loop int
07:31 - j is equals to 0
07:34 - and j is less than 2
07:38 - sorry j is less than 3
07:41 - and we have increment expression
07:45 - here the for loop iterates to time from
07:47 - i is equals to 0 to i is equals to 1 to
07:51 - access
07:52 - the two inner arrays of two-dimensional
07:54 - array
07:55 - and
07:56 - the inner for loop iterates three times
07:59 - from j is equals to 0 to j is equals to
08:02 - 2 to access the three elements of both
08:05 - the inner array now inside the inner for
08:08 - loop i'll now print the element at index
08:11 - inj so printf bracket inside quotation
08:15 - percent d
08:18 - comma a r r inside the square bracket
08:22 - i
08:23 - and
08:24 - j
08:27 - i will now run this code
08:29 - as you can see the elements of
08:31 - multi-dimensional array are printed here
08:33 - the outer for loop runs two times from i
08:36 - is equals to 0 to i is equals to 1 and
08:40 - in each iteration of outer loop the
08:42 - inner loop runs 3 times from j is equals
08:45 - to 0 to j is equals to 2.
08:48 - initially the value of i and j is equals
08:52 - to 0 so arr i j prints the first element
08:56 - that is 1.
08:58 - now in the second iteration of the inner
09:01 - loop the value of j is increased to 1
09:04 - and the array i j becomes
09:06 - 0 01 and it prints the second element 3
09:10 - on the screen
09:12 - in this way the inner loop runs three
09:14 - times to access all three elements of
09:17 - first array after that the condition of
09:20 - inner loop becomes false
09:22 - so the inner loop dominates
09:25 - now the program control moves back to
09:27 - the outer for loop and the value of i
09:30 - becomes 1 and again the inner loop
09:32 - restarts from j is equals to 0 to j is
09:36 - equals to 2. this time ar ij becomes
09:40 - arr100 arr11
09:43 - and arr 1 2 which gives the first
09:47 - second and third element of secondary
09:51 - to help you visualize the output more
09:53 - clearly let me print a new line after
09:55 - the inner loop so
09:57 - print f
09:59 - i'll break the line here
10:03 - i'll run this program
10:05 - and you can see the output is printed in
10:08 - proper format
10:10 - now that we have reached the end of this
10:12 - video it's time for programming squeeze
10:14 - which value will we get when we print
10:17 - arr 1 4 from the following array
10:21 - comment your answer below also if you
10:23 - want to revise this concept you can find
10:26 - all these programs in our github
10:27 - repository and the link is in the video
10:30 - description below so see you in the next
10:32 - video till then happy programming
10:38 - [Music]

Cleaned transcript:

hey guys this is me padma from programmers and welcome back to this series on c programming in this video we'll be learning about the multidimensional array and we will also learn to write the matrix multiplication program in c programming so without further delay let's get started in the last video we learned that an array stores multiple elements together similarly a multidimensional array also stores multiple elements the only difference is that the each element of multidimensional array is also an array this is why a multidimensional array is also known as an array of arrays let's start with the syntax of multidimensional array here the array is of in type which means it can only store integer data and arr is the name of the array and 2 and 3 represents the size of the adding here 2 means there will be 2 arrows inside this array and 3 means each array will have 3 elements now all together our array can store 2 into 3 six elements now let's see how we can initialize a twodimensional array i'll use this same array now i'll first assign values to this array so this array is equals to curly bracket inside this curly bracket another curly bracket with element 1 comma 3 comma 5 and enclosing this bracket and another comma here and curly bracket here here is 2 comma 4 comma 6. these are the elements of first array and these are the elements of secondary you might think that this assignment looks different than the assigning value to a single dimensional array it's because here we are assigning arrays not individual elements we have assigned two arrays and these two arrays has three elements each here this is the example of two dimensional array and we can think of this as a table with two rows and three columns where rows represents arrays and column represents element inside the array by the way if you are watching this there is a good chance you want to improve your skills in c programming lucky for you we have a mobile app that provides a wellstructured c programming course with certification at the end and you can use the app alongside the video to practice on the builtin compiler our course is free so download now by scanning this qr code or click the link in the video description now that you know how to store elements to a multidimensional array let's learn to access them remember array indexes well the concept of array indexes is also present in multidimensional array however here each element is associated with two indexes let me explain this i'll go back to my code editor here we have our earlier code now to access the first element we use the add a name and indexes 0 and 0. so add a name with indexes 0 and 0. here this first 0 indicates the first element of add array which is this array and the second zero indicates the first element of the first inner array which is one similarly to access the third element of second array we write a r r with index 1 and another index 2. here this 1 represents the second array and this 2 represents the third element of the second array now let's complete this program so i'll start from the basic structure of c program i will now cut this part and i'll paste it here and i'll print this both arrays so i'll use printf statement comma i'll cut this and i paste it here and i'll do the same for this add as well i will now run this code as you can see we get one using this arr zero zero and we get six using this arr one two to get the idea of indexes in multidimensional arrays you can refer to this image we can also change the elements of a multidimensional array by using array indexes let's see an example here we have the code from our earlier program i'll remove these two printf statements from here now suppose i want to change this value of 5 to 7 and the value of 4 to 8 here the value 5 is a third element of first array so we can use the index 0 and 2 so we'll write a r r with index 0 and 2 and i'll assign value 7 to this similarly 4 is a second element of second array so we can use index 1 and 1 and i'll assign value a to this i will now add print statement here and print these both arrays so percent d comma a r r with square bracket 0 and 2 and print f percent d comma a r r second array and second element i'll run this code as you can see the value at this position is changed from 5 to 7 and the value of this position is changed from four to eight okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses similar to an array we can also access each element of a multidimensional array using a for loop let me show you here in our earlier example i'll remove these lines of code from here now i'll write 2 for loop for bracket and i is equals to 0 and i is less than 2 plus plus i this is the increment expression and inside this for loop there is another for loop int j is equals to 0 and j is less than 2 sorry j is less than 3 and we have increment expression here the for loop iterates to time from i is equals to 0 to i is equals to 1 to access the two inner arrays of twodimensional array and the inner for loop iterates three times from j is equals to 0 to j is equals to 2 to access the three elements of both the inner array now inside the inner for loop i'll now print the element at index inj so printf bracket inside quotation percent d comma a r r inside the square bracket i and j i will now run this code as you can see the elements of multidimensional array are printed here the outer for loop runs two times from i is equals to 0 to i is equals to 1 and in each iteration of outer loop the inner loop runs 3 times from j is equals to 0 to j is equals to 2. initially the value of i and j is equals to 0 so arr i j prints the first element that is 1. now in the second iteration of the inner loop the value of j is increased to 1 and the array i j becomes 0 01 and it prints the second element 3 on the screen in this way the inner loop runs three times to access all three elements of first array after that the condition of inner loop becomes false so the inner loop dominates now the program control moves back to the outer for loop and the value of i becomes 1 and again the inner loop restarts from j is equals to 0 to j is equals to 2. this time ar ij becomes arr100 arr11 and arr 1 2 which gives the first second and third element of secondary to help you visualize the output more clearly let me print a new line after the inner loop so print f i'll break the line here i'll run this program and you can see the output is printed in proper format now that we have reached the end of this video it's time for programming squeeze which value will we get when we print arr 1 4 from the following array comment your answer below also if you want to revise this concept you can find all these programs in our github repository and the link is in the video description below so see you in the next video till then happy programming
