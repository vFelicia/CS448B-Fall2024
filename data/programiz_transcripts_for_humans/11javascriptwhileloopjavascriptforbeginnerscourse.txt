With timestamps:

00:00 - what's up guys i'm puneet from
00:01 - programmers and welcome back to the
00:02 - series on javascript in this video we
00:05 - will learn about the while loop more
00:07 - specifically we will learn to repeat a
00:09 - block of code multiple times using the
00:11 - while loop we will also learn about the
00:13 - do while loop in javascript so let's get
00:15 - started
00:20 - in programming loops are used to repeat
00:22 - a block of code for a required number of
00:23 - times for instance if you want to show a
00:26 - particular message 100 times we can
00:28 - write the message once and use the loop
00:30 - to show it 100 times before we dive into
00:32 - the code let's first look at the syntax
00:34 - of the while loop the while loop starts
00:36 - with the keyword while followed by the
00:38 - condition inside parentheses
00:40 - here if the condition evaluates to true
00:44 - then the code inside the while loop will
00:46 - be executed
00:48 - then the condition is evaluated again
00:50 - and if it is again true the statements
00:52 - inside the while loop are executed again
00:55 - this process continues and the statement
00:57 - inside the while loop is executed again
00:59 - and again until the condition becomes
01:01 - false
01:02 - when the condition evaluates to false
01:04 - the loop stops let's see one example
01:07 - i'll use the while loop with condition 1
01:10 - less than 5
01:11 - and inside the while loop let me print
01:16 - learning while loop
01:19 - similarly in the next line
01:21 - i'll say
01:23 - javascript
01:26 - is fun which it is as long as the code
01:29 - is working
01:30 - here the condition 1 less than 5 is
01:33 - tested
01:34 - in this case this is true so the
01:36 - statements inside the while loop will be
01:38 - executed
01:40 - the condition 1 less than 5 is tested
01:43 - again and since the condition is true
01:45 - again
01:46 - inside the while loop these two
01:47 - statements are executed
01:49 - this will happen again and again again
01:51 - and again infinitely until the memory
01:53 - runs out this is an example of an
01:56 - infinite while loop let me run this code
02:00 - and you can see that learning while loop
02:02 - and javascript is fun is printed again
02:05 - and again and again
02:07 - to avoid the infinite loop we need to
02:09 - make our condition false at some point
02:11 - so i will create a variable count
02:14 - so i can say let
02:16 - count
02:17 - equals
02:18 - 1
02:20 - now inside the condition i will say
02:22 - count less than five
02:25 - let me put some spaces here instead of
02:27 - one less than five
02:29 - and inside the body of the while loop i
02:31 - will add a statement to increase the
02:33 - value of count by one
02:35 - count equals
02:37 - count plus one
02:40 - here this code increases the value of
02:42 - count by one each time the condition is
02:45 - true
02:45 - so for every iteration the value of
02:48 - count will be increased and ultimately
02:50 - it becomes 5
02:51 - and when it becomes 5 our condition
02:54 - count less than 5 or 5 less than 5 will
02:56 - be false
02:58 - and that is when the loop will be
02:59 - terminated so let me run this code
03:03 - as you can see the messages learning
03:06 - while loop and javascript is fun are
03:08 - printed one two three and four times
03:13 - here initially the value of count is one
03:16 - so count less than 5 is true
03:18 - and that's why these three statements
03:21 - are executed
03:23 - now this final statement has increased
03:25 - the value of count by 1
03:26 - now the value of count is 2
03:28 - 2 less than 5 is still true and that's
03:31 - why this is printed
03:33 - now the value of count is 3 3 less than
03:35 - 5 is true again we get this printed
03:38 - 4 4 less than 5 is true so 2 more
03:41 - statements now when count becomes 5
03:45 - 5 less than 5 is false and we exit the
03:48 - loop since there is nothing after the
03:49 - file loop nothing else is printed to see
03:52 - the value of count increased every time
03:54 - i can print the value of count inside
03:56 - the program or inside the while loop so
03:58 - let me add a console log
04:02 - let me do it before i increase it so
04:04 - i'll say console.log
04:07 - count
04:09 - now when i run the program
04:12 - you can see the value of count was 1 2
04:14 - 3 and 4 and when it became 5
04:18 - the code inside was not executed
04:21 - if you're enjoying this video please
04:23 - also check out programmers pro where we
04:25 - provide tutorials along with quizzes and
04:27 - challenges which will help you practice
04:29 - and test your learning in real time also
04:31 - the course includes projects to give you
04:32 - an awesome experience of how programming
04:34 - works in the real world and for our
04:36 - youtube subscribers we are giving 50 off
04:38 - on the yearly plan sign up by scanning
04:40 - this qr code or use the link in the
04:42 - video description to claim your discount
04:46 - now one interesting example of using the
04:48 - while loop would be to show the
04:49 - multiplication table up to 10 for the
04:51 - number that's passed in by the user
04:54 - let's see how we can do that i'll start
04:56 - by creating a variable
04:58 - called number so i'll say const
05:01 - number equals obviously i want it to be
05:03 - a number so i need to do parse
05:06 - int
05:07 - and prompt to get the input from the
05:09 - user
05:10 - so enter a number
05:14 - then i'll create a count variable to the
05:15 - with the value one
05:17 - so i can select
05:18 - count equals one now by now you must
05:21 - know the difference between const and
05:23 - lead if you don't you can always go to
05:25 - programmings.com and learn more about
05:26 - this since i'm printing the
05:28 - multiplication table up to 10 i'll use
05:30 - the while loop to run for 10 times
05:33 - let me use while
05:35 - count less than 10
05:39 - and i'll put the curly braces
05:42 - inside the while loop i want to multiply
05:44 - the number passed by the user with the
05:46 - count and increase the value of count by
05:48 - one so that the multiplication table has
05:50 - an incremental update every time
05:52 - so i can say const product
05:56 - equals
05:57 - number
05:58 - times
05:59 - count
06:01 - and then i can say console.log product
06:04 - so i want to print the value
06:07 - and at the end because i want to exit
06:09 - the loop after 10 times i need to
06:11 - increase the value by 1.
06:13 - now when i run the program
06:15 - it says enter a number i can press 9
06:18 - and as you can see the multiples of 9
06:21 - were printed
06:23 - i should have done count less than or
06:24 - equal to 10 so that i can get 9 times 10
06:27 - as well
06:28 - i'll press run
06:30 - and i'll press 9
06:32 - and i got the value till 90.
06:34 - we got only the multiples of 9 as the
06:36 - output because here i'm only console
06:38 - logging the product and nothing else now
06:41 - let's look deeper into what happened
06:43 - inside the loop i am multiplying the
06:45 - number that the user entered
06:47 - with the value of the count variable now
06:50 - at the beginning the count variable is 1
06:52 - so the product will be 9 for instance 9
06:56 - times 1 and i print that to the screen
06:59 - now the value of count is increased to 2
07:02 - so this time the product
07:04 - again 2 less than or equal to 10 is
07:06 - still true so product becomes
07:09 - number or 9 times 2
07:12 - this goes on until count is 11
07:15 - and that's when we exit out of the loop
07:18 - now a good thing to do when printing the
07:20 - output is to give some more useful
07:21 - information so let me change the console
07:23 - log by adding a template string and
07:25 - printing the variables like this
07:27 - so i'll replace this and i'll say
07:29 - console.log
07:33 - now for template strings we would we use
07:35 - the tilde
07:38 - and
07:38 - inside i'll say dollar
07:42 - number so that interpolates the variable
07:46 - value inside the string
07:48 - and i can say times
07:51 - dollar
07:52 - count
07:54 - equals
07:56 - dollar
07:57 - product
07:59 - so here i put a string with three
08:01 - interpolated values for number
08:04 - count and product
08:07 - let me put a semicolon here and now when
08:09 - i press run
08:11 - i'll press nine
08:13 - and you can see that i get a nicer
08:14 - output
08:17 - okay guys we need all your support to
08:18 - keep these types of content free for all
08:20 - users youtube really likes engagement on
08:22 - the video so leave a comment below press
08:24 - that like button and hit subscribe if
08:25 - you haven't already let's get the
08:27 - engagements go high up so that more
08:29 - people can discover and enjoy these
08:30 - courses
08:33 - in javascript there's another version of
08:35 - the while loop known as a do while loop
08:37 - the working of a do while loop is
08:39 - similar to that of the while loop with
08:40 - one major difference but before we learn
08:43 - more let's start with the syntax of a do
08:45 - while loop
08:46 - the do-while loop starts with the
08:48 - keyword do
08:49 - followed by the loop statements
08:52 - then a while keyword is used with the
08:54 - condition inside the parentheses
08:57 - at first the statements or the code
08:59 - inside the loop are executed
09:02 - then the condition is evaluated
09:04 - if the condition evaluates to true the
09:06 - body of the loop is executed again
09:09 - after that the condition is checked
09:11 - again so this keeps on repeating until
09:13 - this condition is false let me explain
09:16 - this with an example so let's just write
09:18 - a simple do while loop to print numbers
09:20 - from one to five
09:21 - it's very similar to what we have done
09:23 - with the while loop so i'll just say let
09:25 - count
09:27 - equals one
09:29 - and inside the do i can say
09:32 - console.log count
09:34 - and console.log
09:37 - oh
09:38 - sorry
09:39 - count equals
09:41 - count plus 1
09:43 - and the condition here will be
09:46 - count less than equals 5.
09:49 - here
09:50 - the count variable has value 1.
09:53 - we have used the same condition inside
09:55 - the while loop as before so it says
09:57 - count less than equals 5. the only major
10:00 - thing that's changed is that the
10:01 - statement or the condition is at the end
10:04 - instead of at the beginning
10:06 - now when i run the program
10:09 - i get the desired output of numbers from
10:11 - one to five now you must have noticed
10:13 - that the working of the do while loop
10:15 - looks very similar to that of the while
10:16 - loop however there's one major
10:18 - difference between them to understand
10:20 - the difference let me first modify this
10:22 - code i'll change the value of count to
10:24 - five
10:26 - let me do six
10:29 - now this condition is false right from
10:32 - the beginning
10:33 - now let me see what happens when i press
10:35 - run
10:37 - this is strange because the condition
10:39 - was false right from the beginning but
10:41 - still we got 6 as the output this is
10:43 - because in a 2 while loop the action is
10:46 - performed once before even evaluating
10:48 - the condition
10:50 - so the value of count was six
10:53 - console.log count printed the output as
10:55 - six
10:56 - counts value became seven and even
10:59 - though this condition was false
11:01 - it was just executed once because this
11:04 - is the do-while loop and not the while
11:06 - loop
11:07 - since the working of the do-while loop
11:08 - is so similar to that of the while loop
11:10 - we can also use it to print the
11:11 - multiplication table we did before so go
11:14 - ahead and print the multiplication table
11:15 - using a do-while loop instead of a while
11:17 - loop as practice
11:21 - another little programming task you can
11:22 - do is to use the while loop to print the
11:24 - multiplication table for the given
11:26 - number input by the user but this time
11:28 - you have to print the multiplication
11:30 - table from 10 to 1 or the reverse
11:32 - multiplication table the output would
11:34 - look something like this
11:36 - you'll find the answer to this question
11:37 - on github also if you want to revise
11:39 - these concepts you can find all these
11:41 - programs in our github repository i'll
11:42 - put the link in the video description
11:44 - below
11:45 - now that we've reached the end of this
11:46 - video it's time for the programming
11:48 - squares so the question for today is
11:50 - which of the following causes an
11:51 - infinite loop
11:55 - comment answer below and happy
11:57 - programming
12:01 - [Music]

Cleaned transcript:

what's up guys i'm puneet from programmers and welcome back to the series on javascript in this video we will learn about the while loop more specifically we will learn to repeat a block of code multiple times using the while loop we will also learn about the do while loop in javascript so let's get started in programming loops are used to repeat a block of code for a required number of times for instance if you want to show a particular message 100 times we can write the message once and use the loop to show it 100 times before we dive into the code let's first look at the syntax of the while loop the while loop starts with the keyword while followed by the condition inside parentheses here if the condition evaluates to true then the code inside the while loop will be executed then the condition is evaluated again and if it is again true the statements inside the while loop are executed again this process continues and the statement inside the while loop is executed again and again until the condition becomes false when the condition evaluates to false the loop stops let's see one example i'll use the while loop with condition 1 less than 5 and inside the while loop let me print learning while loop similarly in the next line i'll say javascript is fun which it is as long as the code is working here the condition 1 less than 5 is tested in this case this is true so the statements inside the while loop will be executed the condition 1 less than 5 is tested again and since the condition is true again inside the while loop these two statements are executed this will happen again and again again and again infinitely until the memory runs out this is an example of an infinite while loop let me run this code and you can see that learning while loop and javascript is fun is printed again and again and again to avoid the infinite loop we need to make our condition false at some point so i will create a variable count so i can say let count equals 1 now inside the condition i will say count less than five let me put some spaces here instead of one less than five and inside the body of the while loop i will add a statement to increase the value of count by one count equals count plus one here this code increases the value of count by one each time the condition is true so for every iteration the value of count will be increased and ultimately it becomes 5 and when it becomes 5 our condition count less than 5 or 5 less than 5 will be false and that is when the loop will be terminated so let me run this code as you can see the messages learning while loop and javascript is fun are printed one two three and four times here initially the value of count is one so count less than 5 is true and that's why these three statements are executed now this final statement has increased the value of count by 1 now the value of count is 2 2 less than 5 is still true and that's why this is printed now the value of count is 3 3 less than 5 is true again we get this printed 4 4 less than 5 is true so 2 more statements now when count becomes 5 5 less than 5 is false and we exit the loop since there is nothing after the file loop nothing else is printed to see the value of count increased every time i can print the value of count inside the program or inside the while loop so let me add a console log let me do it before i increase it so i'll say console.log count now when i run the program you can see the value of count was 1 2 3 and 4 and when it became 5 the code inside was not executed if you're enjoying this video please also check out programmers pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount now one interesting example of using the while loop would be to show the multiplication table up to 10 for the number that's passed in by the user let's see how we can do that i'll start by creating a variable called number so i'll say const number equals obviously i want it to be a number so i need to do parse int and prompt to get the input from the user so enter a number then i'll create a count variable to the with the value one so i can select count equals one now by now you must know the difference between const and lead if you don't you can always go to programmings.com and learn more about this since i'm printing the multiplication table up to 10 i'll use the while loop to run for 10 times let me use while count less than 10 and i'll put the curly braces inside the while loop i want to multiply the number passed by the user with the count and increase the value of count by one so that the multiplication table has an incremental update every time so i can say const product equals number times count and then i can say console.log product so i want to print the value and at the end because i want to exit the loop after 10 times i need to increase the value by 1. now when i run the program it says enter a number i can press 9 and as you can see the multiples of 9 were printed i should have done count less than or equal to 10 so that i can get 9 times 10 as well i'll press run and i'll press 9 and i got the value till 90. we got only the multiples of 9 as the output because here i'm only console logging the product and nothing else now let's look deeper into what happened inside the loop i am multiplying the number that the user entered with the value of the count variable now at the beginning the count variable is 1 so the product will be 9 for instance 9 times 1 and i print that to the screen now the value of count is increased to 2 so this time the product again 2 less than or equal to 10 is still true so product becomes number or 9 times 2 this goes on until count is 11 and that's when we exit out of the loop now a good thing to do when printing the output is to give some more useful information so let me change the console log by adding a template string and printing the variables like this so i'll replace this and i'll say console.log now for template strings we would we use the tilde and inside i'll say dollar number so that interpolates the variable value inside the string and i can say times dollar count equals dollar product so here i put a string with three interpolated values for number count and product let me put a semicolon here and now when i press run i'll press nine and you can see that i get a nicer output okay guys we need all your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagements go high up so that more people can discover and enjoy these courses in javascript there's another version of the while loop known as a do while loop the working of a do while loop is similar to that of the while loop with one major difference but before we learn more let's start with the syntax of a do while loop the dowhile loop starts with the keyword do followed by the loop statements then a while keyword is used with the condition inside the parentheses at first the statements or the code inside the loop are executed then the condition is evaluated if the condition evaluates to true the body of the loop is executed again after that the condition is checked again so this keeps on repeating until this condition is false let me explain this with an example so let's just write a simple do while loop to print numbers from one to five it's very similar to what we have done with the while loop so i'll just say let count equals one and inside the do i can say console.log count and console.log oh sorry count equals count plus 1 and the condition here will be count less than equals 5. here the count variable has value 1. we have used the same condition inside the while loop as before so it says count less than equals 5. the only major thing that's changed is that the statement or the condition is at the end instead of at the beginning now when i run the program i get the desired output of numbers from one to five now you must have noticed that the working of the do while loop looks very similar to that of the while loop however there's one major difference between them to understand the difference let me first modify this code i'll change the value of count to five let me do six now this condition is false right from the beginning now let me see what happens when i press run this is strange because the condition was false right from the beginning but still we got 6 as the output this is because in a 2 while loop the action is performed once before even evaluating the condition so the value of count was six console.log count printed the output as six counts value became seven and even though this condition was false it was just executed once because this is the dowhile loop and not the while loop since the working of the dowhile loop is so similar to that of the while loop we can also use it to print the multiplication table we did before so go ahead and print the multiplication table using a dowhile loop instead of a while loop as practice another little programming task you can do is to use the while loop to print the multiplication table for the given number input by the user but this time you have to print the multiplication table from 10 to 1 or the reverse multiplication table the output would look something like this you'll find the answer to this question on github also if you want to revise these concepts you can find all these programs in our github repository i'll put the link in the video description below now that we've reached the end of this video it's time for the programming squares so the question for today is which of the following causes an infinite loop comment answer below and happy programming
