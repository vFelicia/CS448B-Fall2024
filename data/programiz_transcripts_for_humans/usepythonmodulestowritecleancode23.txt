With timestamps:

00:00 - let's talk about python modules a module
00:02 - is a file that contains python code
00:04 - that we can use in our program in this
00:06 - video we will learn why modules are used
00:09 - and how we can use them in our program
00:11 - then we will learn to create custom
00:12 - modules with the help of examples
00:19 - as we know there are several built-in
00:21 - functions like print
00:22 - input and sum that are readily available
00:24 - to us
00:25 - in addition to these functions python
00:27 - also has several functions that are
00:29 - defined
00:30 - inside a module which we can use after
00:32 - we import them
00:33 - let me give you an example to show you
00:35 - what i mean by this
00:36 - so i'll go to my code editor this time i
00:38 - am using the vs code code editor
00:41 - because i need to be working with
00:42 - multiple files and that feature is not
00:45 - in our
00:45 - online compiler yet so here in my code
00:47 - editor
00:48 - i'll create a new file called main dot
00:51 - pi and inside this file
00:55 - i'll say import math
00:58 - this will import the math module that
01:00 - comes when we install python
01:02 - this module contains many mathematical
01:04 - functions and constants
01:06 - let's use the square root function from
01:08 - this module this function
01:09 - is used to calculate the square root of
01:11 - a number so here i'll say number
01:14 - equals 25 result
01:18 - equals math dot sqrt
01:21 - number and then let me print the result
01:26 - now i'll save this file and to run it i
01:28 - have to say
01:30 - python main dot pi when i press
01:33 - enter then you can see that 5.0
01:36 - which is the square root of 25 is
01:38 - printed now let's access the pi
01:40 - constraint defined inside this module in
01:43 - my code editor
01:44 - i'll say print math
01:47 - dot pi now let me save this file
01:50 - and run this code again and you can see
01:53 - that 3.141592
01:56 - the value of pi is printed so once we
01:59 - import a module
02:00 - we can use everything inside it using
02:02 - the dot operator
02:07 - while importing a module we can also
02:09 - rename it to a different name as per our
02:11 - needs
02:12 - let me demonstrate this with an example
02:14 - in my code editor
02:15 - i'll add import math as m
02:20 - now we can access the math module and
02:22 - its definitions
02:23 - using m instead of math so here
02:27 - and here i need to replace math with m
02:33 - and i'll save this file and run this
02:35 - code again and as you can see
02:37 - my code still works because math is now
02:39 - imported as
02:40 - m by the way if you're finding this
02:43 - video useful
02:44 - i'd appreciate if you could sub to our
02:46 - channel
02:47 - when we import a module like in our
02:49 - previous examples everything in the
02:50 - module is available to us
02:52 - however if we only need to import a
02:54 - specific definition
02:56 - like a function or a constant we can use
02:58 - the from import statement
03:00 - let's try it out in my code editor i'll
03:02 - remove this whole code
03:04 - and here i'll say from math
03:07 - import sqrt now
03:10 - num equals sqrt
03:13 - 64 and now let me print the result num
03:17 - and i'll save this file
03:19 - and run this code and as you can see
03:22 - 8.0 which is the square root of 64 is
03:25 - printed
03:26 - here only the sqrt function is imported
03:29 - from the math module
03:30 - when we use this syntax instead of
03:33 - math.sqrt
03:34 - we need to directly use the sqrt
03:36 - function we can also import multiple
03:38 - definitions from the module
03:40 - in a single line using this syntax let
03:42 - me import the constant pi
03:44 - and the functions sqrt and sine from the
03:46 - math module
03:47 - so in my code editor i'll say from math
03:51 - import pi sine and sqrt
03:54 - and let me calculate the value of sine
03:56 - pi by 2
03:57 - so i'll say value equals sine
04:00 - pi by 2 and let me print this value
04:04 - i'll save this file and run my main dot
04:07 - pi file
04:08 - and as you can see 1.0 which is the
04:10 - value of sine pi by 2 is printed
04:13 - we can also use this from import
04:15 - statement to import all definitions from
04:18 - a module
04:18 - like this so here instead of manually
04:21 - importing pi
04:22 - sine and sqrt i can also do from math
04:25 - import asterisk i'll save this file
04:28 - i'll clear the screen and then let me
04:31 - say python
04:32 - main dot pi when i press enter then you
04:35 - can see
04:36 - my code still works and sign sqrt
04:39 - and pi are still imported here
04:42 - astrid means import everything a side
04:46 - tip for you
04:46 - importing every definition name with the
04:48 - asterisk symbol is a bad programming
04:50 - practice and you should try to avoid it
04:52 - in a code
04:55 - the math module comes with many more
04:57 - handy functions and constraints
04:59 - we can list out all the things defined
05:01 - inside a module by using the dir
05:03 - function
05:04 - let's list out all the definitions of
05:06 - the math module so in my code editor
05:08 - i'll remove this old code
05:09 - and here i'll say import math
05:13 - and then i'll say print dir
05:17 - math i'll save this file and again run
05:20 - main dot pi
05:22 - as you can see there are many other
05:23 - mathematical trigonometric
05:25 - and logarithmic functions inside the
05:27 - math module
05:28 - by the way the math module comes when we
05:31 - install python
05:32 - and that's why we can import it directly
05:34 - there are many popular modules that are
05:36 - not natively available for us to use
05:38 - for example numpy is a popular package
05:40 - that is used for
05:41 - scientific computing to use numpy we
05:44 - must first install it
05:45 - similarly you might have heard about
05:47 - django it's a popular framework used for
05:50 - creating web applications it's also
05:52 - available only after we install it
05:54 - to keep this video short and to the
05:56 - point we will not cover about installing
05:58 - such modules here
05:59 - if you're interested you can find plenty
06:01 - of resources about it on the web
06:03 - before moving to the next section of the
06:04 - video the program is team has created an
06:07 - app that allows you to learn python from
06:08 - your phone
06:09 - the app contains bit size lessons that
06:11 - are easier to understand
06:12 - a built-in interpreter so that you can
06:14 - run python on your phone
06:15 - quizzes and many more features the app
06:18 - is available on both ios and android
06:20 - the links are in the video description
06:23 - custom modules
06:24 - now let's learn about creating custom
06:27 - modules in python
06:28 - we can also create our own custom
06:30 - modules as per our needs
06:32 - this helps us to keep our code organized
06:34 - here
06:35 - we'll create a module named calculator
06:37 - that will contain functions to perform
06:39 - arithmetic operations
06:40 - so in my code editor i'll create a new
06:42 - file
06:44 - name calculator dot pi
06:48 - and inside calculator dot pi let me
06:50 - create four arithmetic functions
06:52 - so i'll say diff add a comma b
06:56 - this should return the sum of a and b
06:59 - similarly i'll say diff subtract
07:03 - a comma b this should return the
07:06 - difference of a minus b
07:08 - diff multiply a comma b
07:12 - this should return a multiplied by b and
07:15 - lastly
07:15 - diff divide a comma b and this should
07:20 - return a divided by b
07:24 - this file is in itself a module let's
07:26 - import this file from the main file
07:28 - so i'll go to the main file and here
07:30 - i'll say import
07:32 - calculator and let me use the functions
07:35 - using the dot operator as we previously
07:37 - discussed
07:38 - so here i'll say result 1
07:41 - equals calculator dot add
07:45 - 2 comma 3 now let me print result 1
07:50 - similarly result 2 equals calculator
07:54 - dot subtract
07:57 - 6 comma 3 here i'll say print
08:01 - result 2 similarly result 3
08:05 - equals calculator dot
08:08 - multiply 10 comma 3
08:13 - now let me print result 3
08:17 - and finally result 4 equals
08:21 - calculator dot divide
08:24 - 6 comma three and let me print
08:28 - result four let me save this file
08:31 - and here i'll say python
08:36 - main dot pi now when i press enter then
08:39 - you can see
08:40 - that all these calculations were
08:41 - correctly done
08:43 - in our example we have only used
08:45 - functions and constraints from a module
08:47 - however a module may also contain
08:50 - classes or any other definitions
08:52 - from this very simple example we can
08:54 - already see how useful a module is
08:56 - it helps us in better code management
08:58 - and improves reusability of our code
09:01 - that's it for this video if you want to
09:03 - revise these concepts
09:04 - you can find all these programs in our
09:06 - github repository the link is in the
09:08 - description below
09:09 - and if you like this video hit the like
09:10 - button and subscribe to the channel and
09:12 - i'll see you in the next one
09:14 - happy programming
09:24 - you

Cleaned transcript:

let's talk about python modules a module is a file that contains python code that we can use in our program in this video we will learn why modules are used and how we can use them in our program then we will learn to create custom modules with the help of examples as we know there are several builtin functions like print input and sum that are readily available to us in addition to these functions python also has several functions that are defined inside a module which we can use after we import them let me give you an example to show you what i mean by this so i'll go to my code editor this time i am using the vs code code editor because i need to be working with multiple files and that feature is not in our online compiler yet so here in my code editor i'll create a new file called main dot pi and inside this file i'll say import math this will import the math module that comes when we install python this module contains many mathematical functions and constants let's use the square root function from this module this function is used to calculate the square root of a number so here i'll say number equals 25 result equals math dot sqrt number and then let me print the result now i'll save this file and to run it i have to say python main dot pi when i press enter then you can see that 5.0 which is the square root of 25 is printed now let's access the pi constraint defined inside this module in my code editor i'll say print math dot pi now let me save this file and run this code again and you can see that 3.141592 the value of pi is printed so once we import a module we can use everything inside it using the dot operator while importing a module we can also rename it to a different name as per our needs let me demonstrate this with an example in my code editor i'll add import math as m now we can access the math module and its definitions using m instead of math so here and here i need to replace math with m and i'll save this file and run this code again and as you can see my code still works because math is now imported as m by the way if you're finding this video useful i'd appreciate if you could sub to our channel when we import a module like in our previous examples everything in the module is available to us however if we only need to import a specific definition like a function or a constant we can use the from import statement let's try it out in my code editor i'll remove this whole code and here i'll say from math import sqrt now num equals sqrt 64 and now let me print the result num and i'll save this file and run this code and as you can see 8.0 which is the square root of 64 is printed here only the sqrt function is imported from the math module when we use this syntax instead of math.sqrt we need to directly use the sqrt function we can also import multiple definitions from the module in a single line using this syntax let me import the constant pi and the functions sqrt and sine from the math module so in my code editor i'll say from math import pi sine and sqrt and let me calculate the value of sine pi by 2 so i'll say value equals sine pi by 2 and let me print this value i'll save this file and run my main dot pi file and as you can see 1.0 which is the value of sine pi by 2 is printed we can also use this from import statement to import all definitions from a module like this so here instead of manually importing pi sine and sqrt i can also do from math import asterisk i'll save this file i'll clear the screen and then let me say python main dot pi when i press enter then you can see my code still works and sign sqrt and pi are still imported here astrid means import everything a side tip for you importing every definition name with the asterisk symbol is a bad programming practice and you should try to avoid it in a code the math module comes with many more handy functions and constraints we can list out all the things defined inside a module by using the dir function let's list out all the definitions of the math module so in my code editor i'll remove this old code and here i'll say import math and then i'll say print dir math i'll save this file and again run main dot pi as you can see there are many other mathematical trigonometric and logarithmic functions inside the math module by the way the math module comes when we install python and that's why we can import it directly there are many popular modules that are not natively available for us to use for example numpy is a popular package that is used for scientific computing to use numpy we must first install it similarly you might have heard about django it's a popular framework used for creating web applications it's also available only after we install it to keep this video short and to the point we will not cover about installing such modules here if you're interested you can find plenty of resources about it on the web before moving to the next section of the video the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description custom modules now let's learn about creating custom modules in python we can also create our own custom modules as per our needs this helps us to keep our code organized here we'll create a module named calculator that will contain functions to perform arithmetic operations so in my code editor i'll create a new file name calculator dot pi and inside calculator dot pi let me create four arithmetic functions so i'll say diff add a comma b this should return the sum of a and b similarly i'll say diff subtract a comma b this should return the difference of a minus b diff multiply a comma b this should return a multiplied by b and lastly diff divide a comma b and this should return a divided by b this file is in itself a module let's import this file from the main file so i'll go to the main file and here i'll say import calculator and let me use the functions using the dot operator as we previously discussed so here i'll say result 1 equals calculator dot add 2 comma 3 now let me print result 1 similarly result 2 equals calculator dot subtract 6 comma 3 here i'll say print result 2 similarly result 3 equals calculator dot multiply 10 comma 3 now let me print result 3 and finally result 4 equals calculator dot divide 6 comma three and let me print result four let me save this file and here i'll say python main dot pi now when i press enter then you can see that all these calculations were correctly done in our example we have only used functions and constraints from a module however a module may also contain classes or any other definitions from this very simple example we can already see how useful a module is it helps us in better code management and improves reusability of our code that's it for this video if you want to revise these concepts you can find all these programs in our github repository the link is in the description below and if you like this video hit the like button and subscribe to the channel and i'll see you in the next one happy programming you
