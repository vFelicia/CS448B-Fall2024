With timestamps:

00:00 - we've all learned about for and while
00:02 - loops in python
00:03 - and use them frequently in our programs
00:05 - but did you know they can also have an
00:07 - optional
00:07 - else clause in this video we will learn
00:10 - to use the else clause in for
00:11 - and while loop with the help of examples
00:13 - we will also understand
00:15 - how they can be used to write more
00:16 - pythonic code so let's get started
00:18 - [Music]
00:25 - let's start off with what we know i'll
00:27 - go to my code editor
00:28 - and create a for loop that iterates
00:30 - through a list i'll first create a list
00:32 - so i can say languages equals
00:36 - python javascript
00:41 - c c plus plus
00:45 - and finally java now i'll create a for
00:48 - loop that
00:49 - loops through this list so in the next
00:52 - line
00:52 - i can say for language in
00:56 - languages and now i'll check if the list
00:59 - item is equal to java
01:01 - so here i'll say if language
01:04 - equals equals java
01:09 - then i'll print item
01:12 - found let me run this code
01:16 - you can see that item found has been
01:18 - printed
01:19 - now suppose we want to print item not
01:21 - found if the item was not found in the
01:23 - list
01:24 - one way to do so is to use a flag and
01:27 - check it after the loop ends
01:29 - let me show you what i mean so outside
01:31 - the loop i will define a flag variable
01:33 - with the value false
01:34 - and if the item is encountered i'll
01:36 - change it to true
01:38 - so here i'll say found
01:42 - equals false and now i'll remove this
01:45 - print item found
01:47 - and i'll say found equals
01:50 - true now i can use an if else
01:54 - outside this loop to check if the item
01:56 - was encountered
01:57 - now outside this loop i'll say if
02:01 - found print item
02:04 - found and i can say else
02:07 - print item
02:10 - item not found let me run this code
02:15 - and you can see that i got the same
02:17 - result as before
02:19 - now let me change this java to an item
02:21 - that does not exist in the list
02:23 - for example rust so here i'll remove
02:25 - this java
02:26 - and i'll say rust and now when i run the
02:29 - program
02:31 - you can see that item not found was
02:32 - printed
02:34 - we can implement this exact
02:36 - functionality using for else as well
02:38 - let me show you what i mean i'll first
02:40 - comment out this code
02:42 - so let me remove all of this
02:46 - and now here i'll say the same thing so
02:48 - for
02:49 - language in languages
02:52 - if language equals equals java
02:56 - let me start with the same code as
02:58 - before so i'll say print
03:01 - item found so here i'll say else
03:06 - print item not found
03:11 - it might seem that i made an indentation
03:13 - error but this is how the for else
03:15 - statement looks
03:17 - now let me run this code
03:20 - and you can see that both item found and
03:22 - item not found were printed to the
03:23 - screen
03:24 - let's try to understand what's going on
03:26 - here first
03:28 - we checked if every item was java or not
03:30 - and if any of the items were java
03:32 - then we printed item found since the
03:35 - last item was equals to java
03:37 - this was printed here the else clause of
03:40 - the for loop executes at the end only if
03:42 - the loop completes normally
03:44 - in this case the loop completed normally
03:46 - and item not found
03:47 - was printed on the screen but now we can
03:50 - use the break statement inside the if to
03:52 - end the loop abruptly if the item was
03:54 - found
03:54 - so here below item found i'll say break
03:58 - now since the loop ends after
04:00 - encountering the break statement
04:02 - the code in the else clause does not get
04:04 - executed so let's test it out
04:06 - i'll run this code again
04:09 - and you can see that only item found was
04:12 - printed
04:13 - this code works if the item is not found
04:15 - in the list as well
04:17 - it is because the break statement is not
04:18 - executed in such scenarios
04:20 - and only the else clause gets executed
04:23 - let me modify this java to rust again
04:25 - just like before
04:27 - and now when i press run then you can
04:31 - see
04:31 - that item not found which was from the
04:34 - else clause is printed
04:36 - once you get the hang of it this code is
04:38 - much more elegant than using flags
04:40 - by the way if you're finding video
04:41 - useful a sub to the channel would be
04:43 - much appreciated
04:44 - before moving to the next section of the
04:46 - video the program is team has created an
04:48 - app that allows you to learn python from
04:50 - your phone
04:50 - the app contains bit size lessons that
04:52 - are easier to understand
04:53 - a built-in interpreter so that you can
04:55 - run python on your phone quizzes
04:57 - and many more the app is available on
04:59 - both ios and android the links are in
05:01 - the video description below
05:05 - the working of an else clause of a while
05:07 - loop is very similar to that of a for
05:09 - loop
05:10 - so let's directly start by writing a
05:11 - program in this example
05:13 - we will write a program to check if a
05:15 - number is prime
05:16 - i will first start by taking an input
05:18 - and converting it into an int
05:21 - so let me remove this old code so i'll
05:23 - say num
05:25 - equals int input
05:28 - enter a number then i'll define a
05:32 - counter variable
05:33 - called i as 2 so in the next line i can
05:36 - say i
05:36 - equals 2 then i loop for as long as this
05:40 - value is less than num
05:42 - and in each iteration i will check if
05:44 - num is divisible by
05:45 - i so while i
05:48 - is less than num if
05:52 - num modulus i
05:56 - equals equals 0 or in plain english
05:59 - if num is exactly divisible by i i will
06:02 - print
06:03 - num is not a prime number so i'll say
06:06 - print num
06:10 - is not a prime as it is
06:14 - now let me add some metadata here so
06:16 - i'll say num
06:17 - slash i which means the quotient when
06:20 - num
06:21 - is divided by i and then i'll say
06:24 - times i
06:29 - we can now break out of the loop if the
06:30 - number is not a prime
06:32 - so i'll say break and then outside else
06:36 - while i'll say
06:37 - else i can say print num
06:41 - is a prime number
06:44 - let's not forget to increment the value
06:46 - of i by 1 in every iteration
06:49 - so outside this if statement i need to
06:51 - say i
06:52 - plus equals 1 so let me run this code
06:56 - when i press run then it says enter a
06:58 - number let me
06:59 - enter a non-prime number like 34 so i'll
07:02 - say 34
07:03 - and we get 34 is not a prime as it is 17
07:06 - times 2 now let me try entering a prime
07:09 - number like 29
07:11 - so i'll press run again and this time
07:14 - i'll press 29
07:16 - and we get 29 is a prime number as
07:18 - expected
07:19 - that's it for this video if you want to
07:21 - revise these concepts you can find all
07:23 - these programs in our github repository
07:25 - i'll also put this link in the video
07:26 - description and if you like this video
07:29 - hit that like button now and subscribe
07:30 - to the channel and i'll see you in the
07:32 - next one
07:33 - happy programming

Cleaned transcript:

we've all learned about for and while loops in python and use them frequently in our programs but did you know they can also have an optional else clause in this video we will learn to use the else clause in for and while loop with the help of examples we will also understand how they can be used to write more pythonic code so let's get started let's start off with what we know i'll go to my code editor and create a for loop that iterates through a list i'll first create a list so i can say languages equals python javascript c c plus plus and finally java now i'll create a for loop that loops through this list so in the next line i can say for language in languages and now i'll check if the list item is equal to java so here i'll say if language equals equals java then i'll print item found let me run this code you can see that item found has been printed now suppose we want to print item not found if the item was not found in the list one way to do so is to use a flag and check it after the loop ends let me show you what i mean so outside the loop i will define a flag variable with the value false and if the item is encountered i'll change it to true so here i'll say found equals false and now i'll remove this print item found and i'll say found equals true now i can use an if else outside this loop to check if the item was encountered now outside this loop i'll say if found print item found and i can say else print item item not found let me run this code and you can see that i got the same result as before now let me change this java to an item that does not exist in the list for example rust so here i'll remove this java and i'll say rust and now when i run the program you can see that item not found was printed we can implement this exact functionality using for else as well let me show you what i mean i'll first comment out this code so let me remove all of this and now here i'll say the same thing so for language in languages if language equals equals java let me start with the same code as before so i'll say print item found so here i'll say else print item not found it might seem that i made an indentation error but this is how the for else statement looks now let me run this code and you can see that both item found and item not found were printed to the screen let's try to understand what's going on here first we checked if every item was java or not and if any of the items were java then we printed item found since the last item was equals to java this was printed here the else clause of the for loop executes at the end only if the loop completes normally in this case the loop completed normally and item not found was printed on the screen but now we can use the break statement inside the if to end the loop abruptly if the item was found so here below item found i'll say break now since the loop ends after encountering the break statement the code in the else clause does not get executed so let's test it out i'll run this code again and you can see that only item found was printed this code works if the item is not found in the list as well it is because the break statement is not executed in such scenarios and only the else clause gets executed let me modify this java to rust again just like before and now when i press run then you can see that item not found which was from the else clause is printed once you get the hang of it this code is much more elegant than using flags by the way if you're finding video useful a sub to the channel would be much appreciated before moving to the next section of the video the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more the app is available on both ios and android the links are in the video description below the working of an else clause of a while loop is very similar to that of a for loop so let's directly start by writing a program in this example we will write a program to check if a number is prime i will first start by taking an input and converting it into an int so let me remove this old code so i'll say num equals int input enter a number then i'll define a counter variable called i as 2 so in the next line i can say i equals 2 then i loop for as long as this value is less than num and in each iteration i will check if num is divisible by i so while i is less than num if num modulus i equals equals 0 or in plain english if num is exactly divisible by i i will print num is not a prime number so i'll say print num is not a prime as it is now let me add some metadata here so i'll say num slash i which means the quotient when num is divided by i and then i'll say times i we can now break out of the loop if the number is not a prime so i'll say break and then outside else while i'll say else i can say print num is a prime number let's not forget to increment the value of i by 1 in every iteration so outside this if statement i need to say i plus equals 1 so let me run this code when i press run then it says enter a number let me enter a nonprime number like 34 so i'll say 34 and we get 34 is not a prime as it is 17 times 2 now let me try entering a prime number like 29 so i'll press run again and this time i'll press 29 and we get 29 is a prime number as expected that's it for this video if you want to revise these concepts you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button now and subscribe to the channel and i'll see you in the next one happy programming
