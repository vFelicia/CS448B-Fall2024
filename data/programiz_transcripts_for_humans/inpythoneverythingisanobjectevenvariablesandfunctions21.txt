With timestamps:

00:00 - you probably heard python is an object
00:02 - oriented programming language
00:04 - numerous times at this point this means
00:07 - python supports user defined classes and
00:09 - objects
00:10 - one thing that is particularly
00:12 - interesting about python is that you can
00:14 - not only create custom objects
00:16 - but every pre-existing thing available
00:18 - in python is already an object
00:20 - whether it's strings numbers functions
00:23 - or even classes in this video we will
00:26 - learn to check the type of objects
00:28 - find the attributes and methods and have
00:30 - a solid understanding of python objects
00:33 - which will help you become a better
00:34 - python programmer so let's get started
00:41 - as i mentioned already everything in
00:43 - python is an object and we can check
00:45 - this
00:46 - using the type function let's try it out
00:48 - i'll go to my code editor and i'll say
00:50 - numbers
00:52 - equals 1 comma 4
00:55 - comma 9 comma 16
00:59 - and let me say print type
01:02 - numbers let me run this code
01:07 - in the output we see class list this
01:10 - means
01:11 - the numbers list is an object
01:14 - that is instantiated from the list class
01:17 - let's try a few more examples so let me
01:20 - create a number
01:21 - i'll say n1 equals 5 and let's print the
01:24 - type
01:26 - i'll also try a few other data types so
01:29 - i'll say flag
01:30 - equals true print type
01:33 - flag let me also try a function so i'll
01:36 - say
01:37 - def my underscore function
01:40 - and i'll create an empty function now
01:42 - let me say
01:43 - print type my
01:47 - underscore function now when i press run
01:51 - we can see that all these entities are
01:54 - instantiated from a class
01:56 - which means they are all objects
02:02 - we can list out all the attributes and
02:04 - methods of a given object
02:06 - by using the dir function let's try it
02:08 - out
02:09 - let me remove this code first and i'll
02:12 - say
02:12 - numbers underscore list equals
02:16 - 1 comma 2. in the next line i'll say
02:20 - print
02:21 - dir numbers underscore
02:25 - list now when i press run
02:30 - this means that our list can access all
02:32 - these attributes
02:34 - and methods let's use the underscore
02:37 - underscore add underscore underscore
02:38 - method
02:39 - that's the first element of this list it
02:42 - is used to append all the items of
02:44 - another list
02:45 - to the end of the current list so i can
02:48 - say
02:50 - let me first comment this out
02:55 - then i'll say result equals
02:59 - numbers underscore list
03:02 - dot underscore underscore add underscore
03:04 - underscore
03:05 - and then let me add another list three
03:08 - comma
03:09 - four now let me print the result and see
03:12 - what we get
03:13 - when i press run then i get a list that
03:16 - has
03:16 - one and two and elements of the other
03:19 - list appended at the end
03:21 - by the way we can also accomplish this
03:24 - task by using the plus operator like
03:26 - this
03:26 - i'll first comment out this code
03:30 - and then i'll say result equals
03:34 - numbers underscore list plus
03:37 - three comma four when i press run
03:41 - then i get the same output as before in
03:44 - fact
03:44 - the plus operator internally
03:48 - calls this same underscore underscore
03:50 - add underscore underscore method
03:52 - when working with lists that's why we
03:54 - can use the operator like this
03:56 - as you can see even though we are
03:58 - working with operators
04:00 - we are actually using attributes and
04:02 - methods of the object
04:03 - internally let me uncomment this code
04:07 - and run it again
04:10 - if you look at the attribute of lists we
04:12 - can see append
04:13 - clear copy count and many other methods
04:17 - that we've been using from before
04:19 - so if you're unsure about what
04:21 - attributes and methods an object can use
04:24 - the dir method can be useful and if
04:26 - you're finding this video useful
04:28 - a sub to the channel will be magnificent
04:31 - the id function in python
04:34 - every object has an id for identity the
04:37 - id of an object
04:38 - is always unique and constant for this
04:41 - object during its
04:42 - lifetime you can check the id of an
04:44 - object by using the id function
04:46 - let's try it out so in my code editor
04:48 - i'll remove this old code
04:51 - and i'll say number 1 equals 5
04:55 - print id of number 1
04:59 - and let me create another number so i'll
05:01 - say number 2
05:03 - equals 10 print id
05:07 - of number 2. now when i press run
05:11 - then you can see two numbers nine seven
05:13 - eight four nine nine two
05:15 - and nine seven eight five one five two
05:17 - are printed
05:18 - this is the id of the number one object
05:21 - and this is the id of the number two
05:24 - object
05:26 - let me modify this program and i'll
05:28 - assign number one to number two
05:30 - so here i'll say number two equals
05:33 - number one
05:34 - and when i press run now you can see
05:37 - that both of these
05:38 - ids are the same this is because we are
05:41 - working with the same object
05:43 - python does this for memory optimization
05:47 - before moving to the next section of the
05:49 - video the program is team has created an
05:51 - app that allows you to learn python from
05:53 - your phone
05:54 - the app contains bit size lessons that
05:56 - are easier to understand
05:57 - a built-in interpreter so that you can
05:59 - run python on your phone quizzes
06:01 - and many more the app is available on
06:03 - both ios and android
06:04 - the links are in the video description
06:08 - how variables actually work suppose we
06:11 - have a code like this
06:13 - in our previous videos we have been
06:15 - saying that 5
06:16 - is stored in a but this is technically
06:18 - wrong
06:19 - here a is more like a name tag and it
06:22 - can refer to any value
06:24 - currently it is referring to object 5.
06:27 - now if you create another variable b and
06:30 - assign a to it
06:31 - then both a and b will refer to the same
06:34 - object
06:35 - let me give you another example of this
06:37 - suppose we have a list like this
06:39 - so i'll say a equals 1 comma 2 comma 3
06:43 - let me assign this variable to another
06:45 - variable
06:46 - so here i'll say b equals a
06:50 - now i'll modify a by adding one more
06:52 - element to it
06:53 - so i'll say a dot append and
06:56 - the element 4 next let me print the
06:59 - values of a and b
07:00 - so here i'll say print a equals
07:04 - a and print b
07:07 - equals b i'll run this code
07:12 - and you can see a and b both have the
07:15 - same value even though i have made no
07:16 - changes to b
07:19 - this is because a and b are referring to
07:21 - the same
07:22 - object as you can see i've done
07:25 - b equals a and if we check the id of the
07:29 - variables a and b
07:31 - they will be the same that's why we use
07:33 - the list
07:34 - copy method to copy one list to another
07:37 - if you do not want this kind of behavior
07:39 - so here i'll say a dot copy
07:43 - and now when i press run then you can
07:46 - see
07:46 - a and b don't have the same value
07:48 - because i have only modified a
07:51 - and b which was a copy of a is not
07:54 - modified at all
07:56 - that's it for this video you can find
07:58 - the source code of
07:59 - all these programs in our github
08:01 - repository the link will be in the
08:02 - description below
08:03 - and if you like this video hit that like
08:05 - button and subscribe to our channel
08:07 - and i'll see you in the next one happy
08:10 - programming
08:18 - you

Cleaned transcript:

you probably heard python is an object oriented programming language numerous times at this point this means python supports user defined classes and objects one thing that is particularly interesting about python is that you can not only create custom objects but every preexisting thing available in python is already an object whether it's strings numbers functions or even classes in this video we will learn to check the type of objects find the attributes and methods and have a solid understanding of python objects which will help you become a better python programmer so let's get started as i mentioned already everything in python is an object and we can check this using the type function let's try it out i'll go to my code editor and i'll say numbers equals 1 comma 4 comma 9 comma 16 and let me say print type numbers let me run this code in the output we see class list this means the numbers list is an object that is instantiated from the list class let's try a few more examples so let me create a number i'll say n1 equals 5 and let's print the type i'll also try a few other data types so i'll say flag equals true print type flag let me also try a function so i'll say def my underscore function and i'll create an empty function now let me say print type my underscore function now when i press run we can see that all these entities are instantiated from a class which means they are all objects we can list out all the attributes and methods of a given object by using the dir function let's try it out let me remove this code first and i'll say numbers underscore list equals 1 comma 2. in the next line i'll say print dir numbers underscore list now when i press run this means that our list can access all these attributes and methods let's use the underscore underscore add underscore underscore method that's the first element of this list it is used to append all the items of another list to the end of the current list so i can say let me first comment this out then i'll say result equals numbers underscore list dot underscore underscore add underscore underscore and then let me add another list three comma four now let me print the result and see what we get when i press run then i get a list that has one and two and elements of the other list appended at the end by the way we can also accomplish this task by using the plus operator like this i'll first comment out this code and then i'll say result equals numbers underscore list plus three comma four when i press run then i get the same output as before in fact the plus operator internally calls this same underscore underscore add underscore underscore method when working with lists that's why we can use the operator like this as you can see even though we are working with operators we are actually using attributes and methods of the object internally let me uncomment this code and run it again if you look at the attribute of lists we can see append clear copy count and many other methods that we've been using from before so if you're unsure about what attributes and methods an object can use the dir method can be useful and if you're finding this video useful a sub to the channel will be magnificent the id function in python every object has an id for identity the id of an object is always unique and constant for this object during its lifetime you can check the id of an object by using the id function let's try it out so in my code editor i'll remove this old code and i'll say number 1 equals 5 print id of number 1 and let me create another number so i'll say number 2 equals 10 print id of number 2. now when i press run then you can see two numbers nine seven eight four nine nine two and nine seven eight five one five two are printed this is the id of the number one object and this is the id of the number two object let me modify this program and i'll assign number one to number two so here i'll say number two equals number one and when i press run now you can see that both of these ids are the same this is because we are working with the same object python does this for memory optimization before moving to the next section of the video the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more the app is available on both ios and android the links are in the video description how variables actually work suppose we have a code like this in our previous videos we have been saying that 5 is stored in a but this is technically wrong here a is more like a name tag and it can refer to any value currently it is referring to object 5. now if you create another variable b and assign a to it then both a and b will refer to the same object let me give you another example of this suppose we have a list like this so i'll say a equals 1 comma 2 comma 3 let me assign this variable to another variable so here i'll say b equals a now i'll modify a by adding one more element to it so i'll say a dot append and the element 4 next let me print the values of a and b so here i'll say print a equals a and print b equals b i'll run this code and you can see a and b both have the same value even though i have made no changes to b this is because a and b are referring to the same object as you can see i've done b equals a and if we check the id of the variables a and b they will be the same that's why we use the list copy method to copy one list to another if you do not want this kind of behavior so here i'll say a dot copy and now when i press run then you can see a and b don't have the same value because i have only modified a and b which was a copy of a is not modified at all that's it for this video you can find the source code of all these programs in our github repository the link will be in the description below and if you like this video hit that like button and subscribe to our channel and i'll see you in the next one happy programming you
