With timestamps:

00:00 - what's up guys i'm funny from
00:01 - programmers and welcome back to the
00:02 - series on javascript in the last video
00:05 - we learned about javascript strings in
00:07 - javascript strings are probably the most
00:09 - frequently used data type to make
00:11 - working with strings easier javascript
00:13 - has numerous string methods readily
00:15 - available for us to use in this video we
00:18 - will learn about various string methods
00:19 - that are used to perform different
00:21 - operations on strings so let's get
00:22 - started
00:30 - as the name suggests the two uppercase
00:32 - method converts any string to uppercase
00:35 - suppose i have a string like this so on
00:37 - my code editor i'll say const text
00:40 - equals
00:41 - i
00:42 - like javascript
00:45 - let's say we want to convert all the
00:47 - characters to uppercase
00:49 - now to do this we can use the two
00:51 - uppercase method so i can say const
00:54 - result equals
00:56 - text dot 2
00:58 - upper case and parenthesis
01:01 - remember that u and c are capital
01:04 - letters here
01:05 - now let me see what i get in the result
01:09 - when i press run
01:10 - [Music]
01:11 - you can see that this string that had a
01:14 - combination of lowercase and uppercase
01:16 - letters is now all in uppercase
01:20 - similarly if you want to convert all the
01:22 - characters to lowercase we can use the
01:24 - two lowercase method so i'll start with
01:27 - something like i like
01:29 - javascript
01:31 - and let me change this to two lowercase
01:34 - oops
01:35 - lowercase and when i press run
01:38 - you can see that all the uppercase
01:40 - letters like i j and s
01:43 - were converted to lowercase
01:47 - the concat method joins two or more
01:49 - strings suppose i have these two strings
01:52 - const s text one
01:54 - equals
01:56 - javascript
01:58 - and const text two equals
02:01 - programming
02:03 - now let's use the concat method to join
02:05 - these two strings together i can say
02:08 - const result equals text1.concat
02:13 - text2
02:15 - and let me print the result as always
02:19 - when i press run
02:21 - you must have guessed the output by now
02:23 - i get javascript combined with
02:26 - programming
02:28 - if you're enjoying this video please
02:29 - also check out program is pro where we
02:31 - provide tutorials along with quizzes and
02:34 - challenges which will help you practice
02:35 - and test your learning in real time also
02:37 - the course includes projects to give you
02:39 - an awesome experience of how programming
02:41 - works in the real world and for our
02:43 - youtube subscribers we are giving 50 off
02:45 - on the yearly plan sign up by scanning
02:47 - this qr code or use the link in the
02:48 - video description to claim your discount
02:51 - the replace method is used to replace a
02:53 - string with another string suppose i
02:55 - have a string value that says hello my
02:58 - name is punit so i'll say const text
03:01 - equals
03:02 - hello
03:03 - my name is puneet
03:06 - now if i want to replace the text hello
03:08 - with hi i can simply use the replace
03:10 - method let me show you how so i'll say
03:13 - const result equals
03:15 - text dot replace
03:17 - and for the first argument it will be
03:19 - hello and the second argument will be
03:22 - high
03:23 - here the method replace
03:25 - replaces
03:27 - the first argument or the value in the
03:29 - first argument with the second argument
03:32 - that means
03:33 - text has hello
03:35 - which is here and it will be replaced by
03:37 - hi
03:38 - let me console log the result
03:42 - and press run
03:44 - and you can see that instead of hello my
03:46 - name is punit i now get
03:49 - hi my name is punit
03:54 - the split method is used to split a
03:56 - string into an array of individual
03:58 - elements suppose we have a sentence like
04:01 - this on my screen you can see a variable
04:04 - called text containing a sentence
04:06 - now i want to use the split method to
04:08 - split the string into individual words i
04:11 - can do that by saying const result
04:13 - equals
04:14 - text dot split
04:17 - and a string having just a space
04:20 - this will split the string into
04:22 - individual words or in fact any
04:25 - character i put inside this can be used
04:28 - so
04:29 - console.log
04:30 - result
04:32 - and you must have guessed the output by
04:33 - now i will get an array of strings
04:37 - each string will be a word in the
04:38 - sentence
04:40 - now the split method is interesting
04:41 - because we can also use it to derive the
04:43 - characters from a word so instead of a
04:46 - sentence i can say something like
04:48 - text equals to javascript
04:51 - and now i can say cons result equals
04:54 - text dot split
04:56 - now since i don't want to split it by
04:58 - anything or i want to split it by the
05:00 - empty string i can just put an empty
05:02 - string here
05:04 - and now when i do console.log
05:06 - text or a result
05:10 - and press run
05:12 - you can see that i got an array of each
05:16 - letter in the word javascript
05:21 - the slice method extracts the required
05:23 - string from the given string suppose we
05:25 - have a string like this so again i'll go
05:28 - back to my old code that contains the
05:30 - string javascript now if i want to
05:33 - extract java from the string i can use
05:35 - the slice method as const result
05:39 - equals
05:40 - text dot slice
05:42 - and 0 comma 4
05:45 - the slice method takes two arguments in
05:48 - this case it's 0 and 4 the first
05:51 - argument 0 is the start index of the
05:54 - string that we want to extract
05:56 - in this case it's j which is at the zero
06:00 - index
06:01 - the second argument is the end index in
06:04 - this case
06:05 - it is s and not a so i want to extract
06:08 - java but
06:09 - this the way the slice works is i want
06:13 - to give the end index that is exclusive
06:16 - or that is not included
06:18 - so i want to go one step further than i
06:20 - need to
06:21 - now
06:22 - if i
06:23 - do console.log
06:26 - result
06:28 - and press run
06:30 - you can see that i get java
06:33 - okay guys we need your support to keep
06:35 - these types of content free for all
06:36 - users youtube really likes engagement on
06:38 - the video so leave a comment below press
06:40 - that like button and hit subscribe if
06:42 - you haven't already let's get the
06:43 - engagement score high up so that more
06:45 - people can discover and enjoy these
06:47 - courses
06:50 - the trim method removes the extra white
06:52 - space from the strings suppose we have a
06:54 - string
06:55 - in fact let me not get a
06:57 - new string i'll add spaces before and
07:01 - after this javascript string
07:02 - let me remove this dot
07:05 - and now i want to remove these extra
07:07 - spaces from the beginning and the end
07:10 - all i need to do is
07:12 - const result equals text dot trim
07:16 - and now if i do console.log result
07:19 - i get a beautiful string
07:21 - with no spaces at the front and at the
07:24 - end
07:29 - in javascript we can use the search
07:30 - method to search for a substring in a
07:32 - given string suppose i have a string
07:35 - like this so const text equals
07:39 - javascript
07:41 - is fun
07:42 - now i want to search for the substring
07:44 - fun in this string
07:46 - here i can use the search method like
07:47 - this
07:48 - so i can say const result equals
07:51 - text dot search
07:54 - and
07:55 - fun
07:56 - let me console log the result
07:59 - and press run
08:01 - and you can see that i get a weird
08:02 - number uh 14
08:05 - but when i let's do a small exercise so
08:07 - i'll start from j
08:09 - with zero and we'll go ahead so
08:12 - 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
08:20 - that means 14 is the index of the first
08:24 - appearance
08:25 - of the word fun
08:26 - within the text string
08:29 - in case the method could not find a
08:31 - substring inside the string it returns
08:33 - -1 let me modify this code so here i
08:37 - will say funny
08:39 - and press run
08:40 - and you can see that this time i got -1
08:44 - apart from the string methods i
08:46 - mentioned in this video the javascript
08:47 - string provides many more methods to
08:49 - perform different operations on string
08:51 - if you want to learn about all of them
08:53 - you can visit our website
08:54 - www.programmings.com
08:56 - i will put the link in the video
08:57 - description below
08:59 - now to practice what we've learned
09:00 - here's a programming task for you
09:04 - create a string i love java convert the
09:07 - string to lowercase and check if the
09:09 - string consists of the substring java if
09:12 - yes replace the substring java with
09:14 - javascript you'll find the answer to
09:16 - this question in a github repository
09:18 - also if you want to revise these
09:20 - concepts you can find all these programs
09:21 - in our github repository as well i'll
09:23 - put the link in the video description
09:25 - below
09:26 - now that we have reached the end of this
09:27 - video it's time for the programming quiz
09:30 - what is the output of this program
09:32 - comment answer below and i'll see you in
09:34 - the next video happy programming
09:36 - [Music]

Cleaned transcript:

what's up guys i'm funny from programmers and welcome back to the series on javascript in the last video we learned about javascript strings in javascript strings are probably the most frequently used data type to make working with strings easier javascript has numerous string methods readily available for us to use in this video we will learn about various string methods that are used to perform different operations on strings so let's get started as the name suggests the two uppercase method converts any string to uppercase suppose i have a string like this so on my code editor i'll say const text equals i like javascript let's say we want to convert all the characters to uppercase now to do this we can use the two uppercase method so i can say const result equals text dot 2 upper case and parenthesis remember that u and c are capital letters here now let me see what i get in the result when i press run you can see that this string that had a combination of lowercase and uppercase letters is now all in uppercase similarly if you want to convert all the characters to lowercase we can use the two lowercase method so i'll start with something like i like javascript and let me change this to two lowercase oops lowercase and when i press run you can see that all the uppercase letters like i j and s were converted to lowercase the concat method joins two or more strings suppose i have these two strings const s text one equals javascript and const text two equals programming now let's use the concat method to join these two strings together i can say const result equals text1.concat text2 and let me print the result as always when i press run you must have guessed the output by now i get javascript combined with programming if you're enjoying this video please also check out program is pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount the replace method is used to replace a string with another string suppose i have a string value that says hello my name is punit so i'll say const text equals hello my name is puneet now if i want to replace the text hello with hi i can simply use the replace method let me show you how so i'll say const result equals text dot replace and for the first argument it will be hello and the second argument will be high here the method replace replaces the first argument or the value in the first argument with the second argument that means text has hello which is here and it will be replaced by hi let me console log the result and press run and you can see that instead of hello my name is punit i now get hi my name is punit the split method is used to split a string into an array of individual elements suppose we have a sentence like this on my screen you can see a variable called text containing a sentence now i want to use the split method to split the string into individual words i can do that by saying const result equals text dot split and a string having just a space this will split the string into individual words or in fact any character i put inside this can be used so console.log result and you must have guessed the output by now i will get an array of strings each string will be a word in the sentence now the split method is interesting because we can also use it to derive the characters from a word so instead of a sentence i can say something like text equals to javascript and now i can say cons result equals text dot split now since i don't want to split it by anything or i want to split it by the empty string i can just put an empty string here and now when i do console.log text or a result and press run you can see that i got an array of each letter in the word javascript the slice method extracts the required string from the given string suppose we have a string like this so again i'll go back to my old code that contains the string javascript now if i want to extract java from the string i can use the slice method as const result equals text dot slice and 0 comma 4 the slice method takes two arguments in this case it's 0 and 4 the first argument 0 is the start index of the string that we want to extract in this case it's j which is at the zero index the second argument is the end index in this case it is s and not a so i want to extract java but this the way the slice works is i want to give the end index that is exclusive or that is not included so i want to go one step further than i need to now if i do console.log result and press run you can see that i get java okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses the trim method removes the extra white space from the strings suppose we have a string in fact let me not get a new string i'll add spaces before and after this javascript string let me remove this dot and now i want to remove these extra spaces from the beginning and the end all i need to do is const result equals text dot trim and now if i do console.log result i get a beautiful string with no spaces at the front and at the end in javascript we can use the search method to search for a substring in a given string suppose i have a string like this so const text equals javascript is fun now i want to search for the substring fun in this string here i can use the search method like this so i can say const result equals text dot search and fun let me console log the result and press run and you can see that i get a weird number uh 14 but when i let's do a small exercise so i'll start from j with zero and we'll go ahead so 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 that means 14 is the index of the first appearance of the word fun within the text string in case the method could not find a substring inside the string it returns 1 let me modify this code so here i will say funny and press run and you can see that this time i got 1 apart from the string methods i mentioned in this video the javascript string provides many more methods to perform different operations on string if you want to learn about all of them you can visit our website www.programmings.com i will put the link in the video description below now to practice what we've learned here's a programming task for you create a string i love java convert the string to lowercase and check if the string consists of the substring java if yes replace the substring java with javascript you'll find the answer to this question in a github repository also if you want to revise these concepts you can find all these programs in our github repository as well i'll put the link in the video description below now that we have reached the end of this video it's time for the programming quiz what is the output of this program comment answer below and i'll see you in the next video happy programming
