With timestamps:

00:00 - starting today we are creating a new
00:02 - series of python videos
00:03 - where you will learn about python's best
00:05 - practices and write clean readable
00:07 - pythonic code
00:08 - in this video we will learn about
00:10 - slicing of lists which allows you to
00:12 - build new list from an existing list so
00:14 - let's get started
00:22 - before we learn about slicing of a list
00:24 - let's revise list indexing first
00:26 - as we know a list is a sequence of items
00:28 - in an order
00:29 - so let me create a list first here on my
00:32 - text editor i'll say numbers
00:34 - equals let me create a list 5
00:37 - 10 15 20 and 25
00:41 - to access an individual item from a list
00:44 - we use index
00:45 - and it starts from zero
00:48 - let's access a few items from this list
00:50 - so here i'll say print
00:53 - numbers let me get the first element
00:56 - and let me also get print numbers
01:00 - let me get the fourth element by using
01:02 - the third index
01:05 - let me run this code and we get the
01:08 - expected result
01:10 - python also supports negative indexing
01:12 - for lists using a negative index gives
01:14 - us items from the last
01:16 - so minus 1 gives us the last item minus
01:18 - 2 gives us the second last item
01:20 - and so on so here let me add one more
01:23 - line
01:24 - i'll say print numbers
01:27 - minus 1 let me try one more so i will
01:30 - say print
01:31 - numbers minus 3 and when i press run
01:36 - then 25 and 15 appear because 25
01:40 - is the last element in the list and 15
01:43 - is the third element of the list from
01:45 - the last
01:47 - and by coincidence it is also from the
01:50 - first
01:50 - but in this case we are using from the
01:53 - last
01:56 - slicing allows us to create a new list
01:58 - from an existing list
02:00 - let me give you an example suppose we
02:02 - have a list like this
02:03 - so numbers oops equals
02:07 - 5 10 15 20 and 25
02:11 - let me create a new list containing the
02:13 - first three items of this list
02:14 - to create this list so i can say new
02:18 - underscore numbers to create this list
02:20 - i'll say numbers
02:22 - square bracket now i want to start from
02:24 - the first element so i say 0
02:26 - colon now i want to go up to the third
02:28 - element
02:29 - that means i'll use 3 this is because
02:32 - the number 0 index 0 is inclusive and
02:36 - the index 3 which is the fourth element
02:38 - is exclusive
02:39 - that's why i only get elements of index
02:41 - 0
02:42 - 1 and 2 which are the first three
02:44 - elements of this list
02:45 - so let me print new underscore numbers
02:49 - and i'll press run and you can see that
02:52 - the first three elements of the list
02:54 - were printed now let's create a list
02:56 - with the third and the fourth item
02:58 - so here i'll start with two or index two
03:01 - which is the third element
03:02 - then because i want to go up to the
03:04 - third index which is the fourth element
03:06 - so here i'll do four
03:08 - and when i press run then i get the
03:11 - third element
03:11 - and the fourth element we can also use
03:14 - negative indexes in slicing notation
03:17 - let me give you an example quickly so
03:19 - here i'll say new
03:20 - underscore numbers equals numbers
03:24 - minus 4 colon minus 1
03:28 - this should give us items at index -4
03:31 - which is the fourth element from the
03:32 - last so 1 2
03:34 - 3 4 so including 10 and
03:37 - up to the last element which is 25 but
03:40 - not including it because the end index
03:42 - is exclusive so i should get 10
03:44 - 15 and 20 let's see i'll press run
03:48 - and as expected i get 10 15 and 20.
03:53 - now let me clean up this code and go
03:55 - back to where i was with numbers
03:57 - 0 3 three now
04:00 - let's see what happens if i remove this
04:02 - zero
04:03 - i'll press run and i got the same result
04:08 - as before or
04:09 - as when i put zero and press run
04:12 - similarly
04:13 - if i remove the last index so if i say 0
04:16 - and if i remove this
04:17 - and press run then i get all the
04:19 - elements
04:20 - if i do 1 then i get elements from the
04:23 - first index to the end
04:24 - when writing python code you will find
04:26 - yourself doing this a lot
04:28 - that is skipping either the first index
04:30 - or the last index
04:31 - because usually you'll want to start
04:33 - from the beginning or go till the end
04:36 - by the way if you're finding this video
04:37 - useful a sub to the channel would be
04:39 - much appreciated
04:40 - before moving to the next section of the
04:42 - video the programmers team has created
04:44 - an app that allows you to learn python
04:45 - from your phone
04:46 - the app contains bit size lessons that
04:48 - are easier to understand
04:49 - a built-in interpreter so that you can
04:51 - run python on your phone quizzes and
04:53 - many more features
04:54 - the app is available on both ios and
04:56 - android the links are in the video
04:58 - description
05:01 - up to this point we have only used the
05:03 - start and end index in our slicing
05:05 - the complete slicing notation looks like
05:07 - this it has the start index
05:09 - the end index and step step determines
05:13 - the interval in which we want to get a
05:14 - new list
05:15 - if you skip it we get a list at an
05:17 - interval of 1 like in our previous
05:19 - examples
05:20 - for instance these two codes are
05:22 - equivalent let's try a few more examples
05:25 - of slicing
05:26 - with the step interval so in my code
05:28 - editor let me remove this old code
05:30 - and here i'll say numbers equals
05:34 - 1 comma 2 comma 3 comma 4 comma 5 comma
05:37 - 6 comma 7
05:38 - comma 8. so i have 8 and a list with 8
05:40 - items
05:41 - and here i can say print numbers
05:45 - 1 colon 6 column
05:49 - 2. here this code means create a new
05:52 - list
05:53 - starting from the second item go
05:56 - up to the fifth sixth item or item of
06:00 - index six which is the seventh item but
06:02 - don't include that obviously
06:04 - and with a step size of two let me run
06:07 - this code
06:11 - as expected this code prints a list with
06:14 - second
06:14 - fourth and sixth item let me change the
06:17 - step to three and run this code again
06:19 - so here i'll say 3 and press run
06:23 - now we get a list with the first element
06:25 - 2 and the next element
06:27 - is the third element after 2 so 2
06:30 - and i skip 2 elements and the third
06:32 - element because the step
06:33 - is three after that the slicing stops
06:37 - because the end index is reached
06:42 - there's a cool way to reverse the list
06:43 - using the slicing notation
06:45 - let me show you how let me remove all
06:47 - this old code
06:49 - since we want to reverse a list i will
06:51 - go through the list from start to end by
06:53 - using empty start and end index so i'll
06:56 - say print
06:57 - numbers and bracket and if i leave both
07:00 - the start and end index empty
07:02 - i can run this code and check so i go
07:04 - through the entire list
07:06 - but now i'll add the third parameter so
07:09 - basically start is empty end is empty
07:11 - and the step becomes -1 now when i press
07:15 - run
07:17 - then i get the list in reverse order
07:19 - because the
07:20 - reverse or the step is minus one
07:26 - we can also use the slicing notation to
07:28 - change multiple items of a list at once
07:30 - to demonstrate this i'll go to my code
07:32 - editor i'll remove this whole code
07:34 - and here i'll say numbers
07:37 - so start with 0 which is default so
07:40 - first three elements
07:42 - are minus 1 minus 2
07:45 - and minus 3 and let me print numbers
07:48 - again to see what is the change
07:50 - value of the list when i press run
07:53 - then you can see that the first three
07:55 - elements which i
07:57 - got through slicing have been changed
08:00 - by the way the slicing also works for
08:02 - other compound data types that use
08:04 - indexes
08:04 - such as strings and tuples i highly
08:07 - suggest you to try slicing of strings
08:08 - and tuples on your own
08:10 - and let me know if it worked in the
08:11 - comment section that's it for this video
08:13 - if you want to revise these concepts you
08:15 - can find all these programs in our
08:17 - github repository
08:18 - i'll also put this link in the video
08:19 - description and if you like this video
08:21 - hit that like button and subscribe to
08:23 - the channel and i'll see you in the next
08:25 - one happy programming

Cleaned transcript:

starting today we are creating a new series of python videos where you will learn about python's best practices and write clean readable pythonic code in this video we will learn about slicing of lists which allows you to build new list from an existing list so let's get started before we learn about slicing of a list let's revise list indexing first as we know a list is a sequence of items in an order so let me create a list first here on my text editor i'll say numbers equals let me create a list 5 10 15 20 and 25 to access an individual item from a list we use index and it starts from zero let's access a few items from this list so here i'll say print numbers let me get the first element and let me also get print numbers let me get the fourth element by using the third index let me run this code and we get the expected result python also supports negative indexing for lists using a negative index gives us items from the last so minus 1 gives us the last item minus 2 gives us the second last item and so on so here let me add one more line i'll say print numbers minus 1 let me try one more so i will say print numbers minus 3 and when i press run then 25 and 15 appear because 25 is the last element in the list and 15 is the third element of the list from the last and by coincidence it is also from the first but in this case we are using from the last slicing allows us to create a new list from an existing list let me give you an example suppose we have a list like this so numbers oops equals 5 10 15 20 and 25 let me create a new list containing the first three items of this list to create this list so i can say new underscore numbers to create this list i'll say numbers square bracket now i want to start from the first element so i say 0 colon now i want to go up to the third element that means i'll use 3 this is because the number 0 index 0 is inclusive and the index 3 which is the fourth element is exclusive that's why i only get elements of index 0 1 and 2 which are the first three elements of this list so let me print new underscore numbers and i'll press run and you can see that the first three elements of the list were printed now let's create a list with the third and the fourth item so here i'll start with two or index two which is the third element then because i want to go up to the third index which is the fourth element so here i'll do four and when i press run then i get the third element and the fourth element we can also use negative indexes in slicing notation let me give you an example quickly so here i'll say new underscore numbers equals numbers minus 4 colon minus 1 this should give us items at index 4 which is the fourth element from the last so 1 2 3 4 so including 10 and up to the last element which is 25 but not including it because the end index is exclusive so i should get 10 15 and 20 let's see i'll press run and as expected i get 10 15 and 20. now let me clean up this code and go back to where i was with numbers 0 3 three now let's see what happens if i remove this zero i'll press run and i got the same result as before or as when i put zero and press run similarly if i remove the last index so if i say 0 and if i remove this and press run then i get all the elements if i do 1 then i get elements from the first index to the end when writing python code you will find yourself doing this a lot that is skipping either the first index or the last index because usually you'll want to start from the beginning or go till the end by the way if you're finding this video useful a sub to the channel would be much appreciated before moving to the next section of the video the programmers team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description up to this point we have only used the start and end index in our slicing the complete slicing notation looks like this it has the start index the end index and step step determines the interval in which we want to get a new list if you skip it we get a list at an interval of 1 like in our previous examples for instance these two codes are equivalent let's try a few more examples of slicing with the step interval so in my code editor let me remove this old code and here i'll say numbers equals 1 comma 2 comma 3 comma 4 comma 5 comma 6 comma 7 comma 8. so i have 8 and a list with 8 items and here i can say print numbers 1 colon 6 column 2. here this code means create a new list starting from the second item go up to the fifth sixth item or item of index six which is the seventh item but don't include that obviously and with a step size of two let me run this code as expected this code prints a list with second fourth and sixth item let me change the step to three and run this code again so here i'll say 3 and press run now we get a list with the first element 2 and the next element is the third element after 2 so 2 and i skip 2 elements and the third element because the step is three after that the slicing stops because the end index is reached there's a cool way to reverse the list using the slicing notation let me show you how let me remove all this old code since we want to reverse a list i will go through the list from start to end by using empty start and end index so i'll say print numbers and bracket and if i leave both the start and end index empty i can run this code and check so i go through the entire list but now i'll add the third parameter so basically start is empty end is empty and the step becomes 1 now when i press run then i get the list in reverse order because the reverse or the step is minus one we can also use the slicing notation to change multiple items of a list at once to demonstrate this i'll go to my code editor i'll remove this whole code and here i'll say numbers so start with 0 which is default so first three elements are minus 1 minus 2 and minus 3 and let me print numbers again to see what is the change value of the list when i press run then you can see that the first three elements which i got through slicing have been changed by the way the slicing also works for other compound data types that use indexes such as strings and tuples i highly suggest you to try slicing of strings and tuples on your own and let me know if it worked in the comment section that's it for this video if you want to revise these concepts you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button and subscribe to the channel and i'll see you in the next one happy programming
