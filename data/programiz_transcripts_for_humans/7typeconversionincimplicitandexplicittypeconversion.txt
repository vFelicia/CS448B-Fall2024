With timestamps:

00:00 - hey guys i'm padma from programmies and
00:02 - welcome back to this series on c
00:03 - programming in this video we will learn
00:05 - to convert one data type to another in c
00:08 - we will also learn about different types
00:10 - of type conversion in c programming so
00:13 - let's get started
00:18 - before we talk about type conversion
00:21 - let's quickly see an example
00:23 - here we have two end variable
00:27 - a and b with value 5 and 9 respectively
00:30 - and we have used plus operator to add
00:33 - these two numbers
00:35 - now let's run this code
00:37 - you can see we get 14 as an output which
00:40 - is 5 plus 9. now let me change one of
00:43 - the data to cat type so here i'll change
00:46 - the data type of a to care
00:49 - care a equals to 5 and i'll put here
00:52 - single quotation
00:54 - around 5.
00:55 - now we are performing addition between
00:58 - integer and character variable now let
01:01 - me run this program as you can see that
01:04 - the code runs without any error and we
01:06 - get 62 as an output let's see what's
01:09 - happening here we are adding character
01:12 - value 5
01:13 - and an integer value 9 in this case the
01:16 - compiler automatically converts this
01:19 - character value into ascii value so the
01:22 - character 5 is converted into its ascii
01:24 - value which is 53 so the final output is
01:28 - 53 plus 9 equals to 62.
01:33 - now let's try another example this time
01:36 - i'll change this character data
01:38 - to double
01:42 - and make this 5 into a floating point
01:44 - number
01:45 - and i'll add here
01:47 - 0.67
01:50 - now in this case we are adding
01:52 - double and in type variable now i'll run
01:55 - this code
01:57 - here we get 14 as an output it looks
02:00 - like the double value is converted into
02:03 - in value 5 and then added
02:06 - to 9 which gives us 14
02:10 - but
02:11 - that's not the case here actually the
02:13 - end value 9
02:15 - is converted into double value 9.00 then
02:18 - it is added to the double value 5.67
02:22 - making it
02:23 - 14.67 however the sum is stored in the
02:26 - result variable which is of in type so
02:29 - the double type sum 14.67
02:33 - is now converted to an n-type value 14
02:37 - hence we get the output 14. we can
02:40 - verify this by changing the data type of
02:42 - result variable let me show you i'll
02:44 - change this result variable to double
02:48 - so double result equals to a plus b
02:52 - similarly i'll use percent lf instead of
02:55 - percent d
02:57 - and now i'll run this
02:59 - this time you will see
03:01 - 14.67 with multiple zeros after that you
03:04 - might be wondering why the int value is
03:06 - converted into double why not the double
03:09 - converted to int well the type
03:11 - conversion occur according to the data
03:14 - type hierarchy here the data type that
03:17 - is lower in this hierarchy is always
03:19 - converted to the data type that comes
03:21 - higher for example between care and int
03:24 - cad data type is converted to int and
03:27 - between int and double the in data type
03:29 - is converted to double we can say that
03:31 - the lower data type is promoted to
03:33 - higher data type however if you have
03:35 - noticed we have assigned double value to
03:38 - an end variable the double value is
03:40 - converted to the end value this is
03:43 - because during the assignment the data
03:45 - type on the right of the assignment
03:47 - operator is always converted to the data
03:49 - type on the left in this case sometimes
03:52 - the higher data type can also be demoted
03:55 - to lower data type let's see an example
03:58 - i'll create an end variable and a equals
04:01 - to
04:03 - 5.67 and print this using printf
04:06 - function
04:08 - percent d
04:10 - comma
04:11 - a
04:16 - now when i run this
04:18 - you can see that we gave the integer
04:19 - value 5 as an output
04:22 - during the conversion from the higher
04:24 - data type
04:25 - like double to lower data type like ind
04:29 - there might be loss of some data in our
04:31 - program the data 5.67 is converted to 5
04:36 - there is a loss of data 0.67 during this
04:39 - conversion so we should be careful
04:42 - during this type of conversion here all
04:44 - the type conversion are happening
04:46 - automatically this is called implicit
04:48 - type conversion we can also forcefully
04:51 - convert one data type to another this
04:54 - type of conversion is called explicit
04:56 - type conversion by the way if you're
04:59 - watching this there is a good chance you
05:00 - want to improve your skills in c
05:02 - programming lucky for you we have a
05:04 - mobile app that provides a
05:06 - well-structured c programming course
05:08 - with certification at the end and you
05:10 - can use the app alongside the video to
05:13 - practice on the built-in compiler our
05:15 - course is free so download now by
05:17 - scanning this qr code or click the link
05:19 - in the video description
05:23 - before we learn about explicit type
05:25 - conversion let's get back to our earlier
05:27 - code here we are adding double type
05:29 - variable a
05:31 - with an entire variable b
05:33 - normally we know that the entire
05:35 - variable b will be converted to a double
05:37 - type and then the addition is performed
05:40 - what if we want the double value to be
05:43 - converted to end
05:45 - and then add the end value this is where
05:48 - we use explicit type conversion let me
05:51 - show you
05:52 - i'll add
05:54 - in inside this parenthesis in front of a
05:58 - so here the end inside the bracket
06:01 - before a tells the compiler to convert
06:04 - the variable a to in type now let me run
06:06 - this code
06:08 - as you can see we get
06:10 - 14.00 as an output here
06:13 - this end inside the bracket changes the
06:16 - double value 5.67 to int and then adds
06:20 - this value 9 to it
06:22 - and then the sum is 14
06:25 - which is assigned to result variable
06:27 - since the result is double variable
06:31 - 14 is converted to
06:33 - double and gives us output 14.000
06:38 - and multiple other zeros after that
06:40 - since the result is also in i can now
06:43 - change the data type of result into
06:45 - ind
06:47 - and don't forget to change the format
06:49 - specifier from percent lf to percent
06:52 - d
06:53 - and then i'll run this again
06:55 - this time we'll get 14 as an output
06:58 - okay guys we need your support to keep
07:00 - these types of content free for all
07:02 - users youtube really likes engagement on
07:04 - the video so leave a comment below press
07:06 - that like button and hit subscribe if
07:09 - you haven't already let's get the
07:11 - engagement score high up so that more
07:13 - people can discover and enjoy these
07:15 - courses
07:16 - similarly we can also convert an in data
07:19 - type to double by using double keyword
07:21 - inside the bracket before the variable
07:23 - name let me show you here i'll remove
07:26 - this code
07:28 - now i'll create two end variable int
07:31 - a and assign value 9
07:34 - and create another in variable int
07:37 - b equals to
07:40 - 2
07:42 - now i'll perform the division between a
07:44 - and b and store the result in a double
07:46 - variable so
07:48 - double
07:51 - result
07:52 - equals
07:55 - a divided by b then this print f bracket
08:00 - inside quotation
08:02 - percent lf
08:04 - comma
08:06 - result
08:08 - now let me run this code
08:11 - here we get 4 as an output not 4.5 this
08:14 - is because we perform division between
08:16 - two individual value the result will be
08:19 - quotient so we get 4 as an output which
08:21 - is the quotient value however we want
08:24 - the actual result 4.5 after the division
08:26 - then we can use the explicit type
08:28 - conversion to convert one of the
08:31 - variable to double and perform division
08:33 - so here i'll add double before the
08:36 - variable a
08:37 - now
08:39 - let's run this
08:41 - now we get 4.5 as output
08:45 - here we have only converted the variable
08:47 - a to double type but still we get the
08:49 - output this is because now the variable
08:52 - a is of double type and if we perform
08:55 - operation between double and int the int
08:58 - data type is implicitly converted to the
09:00 - double type hence b here is also
09:03 - converted to double type
09:05 - now the division between 9.0
09:09 - and 2.0 is equals to 4.5
09:13 - now that we are at the end of this video
09:15 - it's time for programming squeeze what
09:17 - is the value of result in the following
09:19 - statement
09:22 - and comment your answer below see you in
09:24 - the next video happy programming
09:30 - [Music]
09:36 - you

Cleaned transcript:

hey guys i'm padma from programmies and welcome back to this series on c programming in this video we will learn to convert one data type to another in c we will also learn about different types of type conversion in c programming so let's get started before we talk about type conversion let's quickly see an example here we have two end variable a and b with value 5 and 9 respectively and we have used plus operator to add these two numbers now let's run this code you can see we get 14 as an output which is 5 plus 9. now let me change one of the data to cat type so here i'll change the data type of a to care care a equals to 5 and i'll put here single quotation around 5. now we are performing addition between integer and character variable now let me run this program as you can see that the code runs without any error and we get 62 as an output let's see what's happening here we are adding character value 5 and an integer value 9 in this case the compiler automatically converts this character value into ascii value so the character 5 is converted into its ascii value which is 53 so the final output is 53 plus 9 equals to 62. now let's try another example this time i'll change this character data to double and make this 5 into a floating point number and i'll add here 0.67 now in this case we are adding double and in type variable now i'll run this code here we get 14 as an output it looks like the double value is converted into in value 5 and then added to 9 which gives us 14 but that's not the case here actually the end value 9 is converted into double value 9.00 then it is added to the double value 5.67 making it 14.67 however the sum is stored in the result variable which is of in type so the double type sum 14.67 is now converted to an ntype value 14 hence we get the output 14. we can verify this by changing the data type of result variable let me show you i'll change this result variable to double so double result equals to a plus b similarly i'll use percent lf instead of percent d and now i'll run this this time you will see 14.67 with multiple zeros after that you might be wondering why the int value is converted into double why not the double converted to int well the type conversion occur according to the data type hierarchy here the data type that is lower in this hierarchy is always converted to the data type that comes higher for example between care and int cad data type is converted to int and between int and double the in data type is converted to double we can say that the lower data type is promoted to higher data type however if you have noticed we have assigned double value to an end variable the double value is converted to the end value this is because during the assignment the data type on the right of the assignment operator is always converted to the data type on the left in this case sometimes the higher data type can also be demoted to lower data type let's see an example i'll create an end variable and a equals to 5.67 and print this using printf function percent d comma a now when i run this you can see that we gave the integer value 5 as an output during the conversion from the higher data type like double to lower data type like ind there might be loss of some data in our program the data 5.67 is converted to 5 there is a loss of data 0.67 during this conversion so we should be careful during this type of conversion here all the type conversion are happening automatically this is called implicit type conversion we can also forcefully convert one data type to another this type of conversion is called explicit type conversion by the way if you're watching this there is a good chance you want to improve your skills in c programming lucky for you we have a mobile app that provides a wellstructured c programming course with certification at the end and you can use the app alongside the video to practice on the builtin compiler our course is free so download now by scanning this qr code or click the link in the video description before we learn about explicit type conversion let's get back to our earlier code here we are adding double type variable a with an entire variable b normally we know that the entire variable b will be converted to a double type and then the addition is performed what if we want the double value to be converted to end and then add the end value this is where we use explicit type conversion let me show you i'll add in inside this parenthesis in front of a so here the end inside the bracket before a tells the compiler to convert the variable a to in type now let me run this code as you can see we get 14.00 as an output here this end inside the bracket changes the double value 5.67 to int and then adds this value 9 to it and then the sum is 14 which is assigned to result variable since the result is double variable 14 is converted to double and gives us output 14.000 and multiple other zeros after that since the result is also in i can now change the data type of result into ind and don't forget to change the format specifier from percent lf to percent d and then i'll run this again this time we'll get 14 as an output okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses similarly we can also convert an in data type to double by using double keyword inside the bracket before the variable name let me show you here i'll remove this code now i'll create two end variable int a and assign value 9 and create another in variable int b equals to 2 now i'll perform the division between a and b and store the result in a double variable so double result equals a divided by b then this print f bracket inside quotation percent lf comma result now let me run this code here we get 4 as an output not 4.5 this is because we perform division between two individual value the result will be quotient so we get 4 as an output which is the quotient value however we want the actual result 4.5 after the division then we can use the explicit type conversion to convert one of the variable to double and perform division so here i'll add double before the variable a now let's run this now we get 4.5 as output here we have only converted the variable a to double type but still we get the output this is because now the variable a is of double type and if we perform operation between double and int the int data type is implicitly converted to the double type hence b here is also converted to double type now the division between 9.0 and 2.0 is equals to 4.5 now that we are at the end of this video it's time for programming squeeze what is the value of result in the following statement and comment your answer below see you in the next video happy programming you
