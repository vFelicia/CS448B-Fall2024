With timestamps:

00:00 - lambda functions are single line
00:01 - functions defined without a name
00:03 - in this video we will learn to create
00:05 - and use lambda functions in python
00:07 - with the help of examples so let's get
00:14 - started
00:16 - before we learn about lambda functions
00:18 - let me create a simple
00:20 - normal function that takes an argument
00:21 - and doubles it so on my code compiler
00:24 - i'll say
00:25 - def double n let me return
00:29 - n times 2 now i'll test drive this i'll
00:32 - say print
00:33 - double 10 and when i press run you must
00:36 - have expected
00:37 - i get 20. this function has only one
00:41 - statement in its body
00:42 - would it be neat if you could write this
00:44 - one line of function in a more condensed
00:46 - way
00:46 - well python lambda functions allow us to
00:48 - do exactly that
00:50 - let me show you what i mean i'll go back
00:52 - to my code compiler
00:53 - and here let me first comment this line
00:57 - now i'll create a variable called double
01:00 - so i'll say double
01:01 - equals and i'll assign a lambda function
01:04 - to this variable
01:05 - so to assign a lambda function i'll say
01:07 - l a m b
01:08 - d a lambda then the function parameter
01:11 - which is
01:12 - n followed by a column and then the
01:14 - return value which is
01:16 - n times 2. let me run this code again so
01:19 - when i press run
01:21 - i get the same value as before here
01:25 - n that is before the column is the
01:27 - parameter that is needed by the function
01:29 - if we need we can pass multiple
01:30 - parameters as well by separating them
01:32 - with commas
01:33 - just like with normal functions and the
01:35 - part after the column
01:37 - is the return value of the function also
01:39 - notice that the lambda function doesn't
01:41 - have any name
01:42 - that's why lambda functions are also
01:44 - called anonymous functions
01:47 - the one thing you need to remember about
01:48 - lambda function is that it can take any
01:50 - number of arguments
01:51 - but can only have one expression now
01:54 - let's try to create a lambda function
01:55 - with multiple arguments
01:57 - i will create a lambda function that
01:58 - returns the larger among two numbers
02:00 - so here i can say larger equals lambda
02:04 - and i'll call the arguments a and b so i
02:07 - can say a
02:08 - and b are the two numbers and i'll
02:10 - return a
02:11 - if a is greater than b otherwise
02:14 - i'll return b now let me call this
02:17 - lambda function
02:18 - so here i'll say print larger of
02:22 - 10 and 47. when i run this code
02:26 - you can see that 47 which is the larger
02:28 - number is returned
02:29 - and printed by the way if you're finding
02:32 - this video useful a sub to the channel
02:34 - would be much appreciated
02:36 - before moving to the next section of the
02:37 - video the program is team has created an
02:39 - app that allows you to learn python from
02:41 - your phone
02:42 - the app contains bit size lessons that
02:43 - are easier to understand a built-in
02:45 - interpreter so that you can run python
02:47 - on your phone
02:47 - quizzes and many more features the app
02:50 - is available on both ios and android
02:52 - the links are in the video description
02:57 - at this point you must be wondering when
02:59 - to use lambda functions
03:01 - let me show you one more example where i
03:03 - will use the lambda function
03:04 - as a key to sort a list in a custom way
03:07 - suppose we have a list like this
03:09 - to sort this list alphabetically we use
03:12 - the list
03:13 - sort method let me demonstrate this so
03:15 - here i'll say names.sort
03:18 - and now if i print the names and press
03:21 - run
03:22 - you can see that the names were sorted
03:24 - in alphabetical order
03:26 - instead of this suppose we want to sort
03:28 - the items of this list
03:30 - based on the length of the name we can
03:32 - do this by passing an optional key
03:33 - argument to the sort method
03:35 - let me show you what i mean so here i'll
03:38 - say
03:38 - names.sort and here i'll say key
03:42 - equals now the key will be a lambda and
03:45 - it will take an argument
03:46 - now i'll return the length of the string
03:50 - now when i press run you can see that
03:54 - the names were sorted
03:56 - in the basis of the length instead of
03:58 - alphabetically
04:01 - this is because the sort method uses the
04:03 - length of each string
04:05 - as the key while sorting as you can see
04:08 - we didn't have to define a separate
04:09 - function for this small task we directly
04:11 - defined the lambda function
04:13 - inside the function call itself which
04:15 - made our code much more concise
04:17 - lambda functions are used more
04:18 - frequently with python built-in
04:20 - functions
04:20 - like map filter and reduce we will cover
04:23 - these topics in the next video so stay
04:25 - tuned
04:26 - that's it for this video if you want to
04:27 - revise these concepts you can find all
04:30 - these programs in our github repository
04:31 - i'll also put this link in the video
04:33 - description below
04:34 - and if you like this video hit that like
04:36 - button and subscribe to the channel and
04:38 - see you in the next one happy
04:40 - programming
04:49 - you

Cleaned transcript:

lambda functions are single line functions defined without a name in this video we will learn to create and use lambda functions in python with the help of examples so let's get started before we learn about lambda functions let me create a simple normal function that takes an argument and doubles it so on my code compiler i'll say def double n let me return n times 2 now i'll test drive this i'll say print double 10 and when i press run you must have expected i get 20. this function has only one statement in its body would it be neat if you could write this one line of function in a more condensed way well python lambda functions allow us to do exactly that let me show you what i mean i'll go back to my code compiler and here let me first comment this line now i'll create a variable called double so i'll say double equals and i'll assign a lambda function to this variable so to assign a lambda function i'll say l a m b d a lambda then the function parameter which is n followed by a column and then the return value which is n times 2. let me run this code again so when i press run i get the same value as before here n that is before the column is the parameter that is needed by the function if we need we can pass multiple parameters as well by separating them with commas just like with normal functions and the part after the column is the return value of the function also notice that the lambda function doesn't have any name that's why lambda functions are also called anonymous functions the one thing you need to remember about lambda function is that it can take any number of arguments but can only have one expression now let's try to create a lambda function with multiple arguments i will create a lambda function that returns the larger among two numbers so here i can say larger equals lambda and i'll call the arguments a and b so i can say a and b are the two numbers and i'll return a if a is greater than b otherwise i'll return b now let me call this lambda function so here i'll say print larger of 10 and 47. when i run this code you can see that 47 which is the larger number is returned and printed by the way if you're finding this video useful a sub to the channel would be much appreciated before moving to the next section of the video the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description at this point you must be wondering when to use lambda functions let me show you one more example where i will use the lambda function as a key to sort a list in a custom way suppose we have a list like this to sort this list alphabetically we use the list sort method let me demonstrate this so here i'll say names.sort and now if i print the names and press run you can see that the names were sorted in alphabetical order instead of this suppose we want to sort the items of this list based on the length of the name we can do this by passing an optional key argument to the sort method let me show you what i mean so here i'll say names.sort and here i'll say key equals now the key will be a lambda and it will take an argument now i'll return the length of the string now when i press run you can see that the names were sorted in the basis of the length instead of alphabetically this is because the sort method uses the length of each string as the key while sorting as you can see we didn't have to define a separate function for this small task we directly defined the lambda function inside the function call itself which made our code much more concise lambda functions are used more frequently with python builtin functions like map filter and reduce we will cover these topics in the next video so stay tuned that's it for this video if you want to revise these concepts you can find all these programs in our github repository i'll also put this link in the video description below and if you like this video hit that like button and subscribe to the channel and see you in the next one happy programming you
