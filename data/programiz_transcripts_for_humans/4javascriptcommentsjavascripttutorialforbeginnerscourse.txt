With timestamps:

00:00 - what's up guys i'm puli from programmers
00:01 - and welcome back to this series on
00:03 - javascript in this video we will learn
00:05 - to write javascript comments and see why
00:07 - they are important
00:12 - comments are hints that we add to our
00:14 - program to make our code easier to
00:15 - understand let's see an example i have
00:18 - this program to print the name of a user
00:20 - so the program looks something like this
00:22 - so i create a variable called
00:24 - name and let me hard code punit into it
00:27 - and then i'll say console.log
00:30 - name
00:31 - i'll use the string concatenation or
00:33 - plus operator
00:35 - and say the name
00:37 - is the variable name or the value of the
00:39 - variable name
00:40 - to make this program a bit more readable
00:42 - i can add a comment like this
00:45 - so on the top
00:46 - i'll say
00:48 - program to
00:50 - print the
00:52 - user's name
00:54 - this line that starts with two forward
00:56 - slashes is a comment
00:58 - we added this line to make our program
01:00 - easier to understand for anyone reading
01:02 - our code let's see what happens when we
01:04 - run this program
01:05 - when i press run
01:07 - it says name punit
01:09 - as you can see the program runs normally
01:11 - without any issues
01:13 - this is because javascript completely
01:15 - ignores the line that starts with two
01:17 - forward slashes we can also place
01:19 - comments after the code statement like
01:21 - this
01:22 - so here after the console log i can say
01:25 - print the name variable
01:28 - now i can run this code
01:30 - and you can see that i get the same
01:32 - output the comments are completely
01:34 - ignored
01:36 - though we can add comments anywhere in
01:38 - our program we should not add
01:39 - unnecessary comments this only makes our
01:42 - code very cluttered and messy since the
01:44 - code in our program is also
01:45 - self-explanatory let me remove these two
01:47 - comments so i'll remove this one
01:50 - and i'll remove this one as well
01:57 - we can also use comments to debug our
02:00 - code suppose we are experimenting with
02:02 - our code and sometimes we might not need
02:04 - some piece of code during the test in
02:06 - such situations it is a good practice to
02:09 - comment out quotes so that it is ignored
02:11 - by the compiler rather than removing the
02:13 - code completely let me give you an
02:15 - example i'll write a program to take a
02:17 - name and age input from the user
02:20 - so let me remove this old code and i'll
02:22 - say let me write the comment first
02:24 - program to take
02:26 - users name and age
02:29 - let me create the name variable so i can
02:31 - say
02:32 - name equals prompt enter name
02:36 - similarly
02:37 - age equals prompt
02:40 - enter age
02:43 - now let me console log the name
02:46 - oops let me make this capital letters
02:50 - and use the string concatenation
02:51 - operator the plus operator
02:53 - similarly i can say
02:56 - age
02:59 - and plus
03:01 - age
03:02 - suppose in this program it was no longer
03:05 - required for us to take the age input
03:06 - from the user so instead of removing
03:08 - these two lines which accept the edge
03:11 - and print it i can just convert this
03:13 - into a comment by adding two slashes in
03:16 - the beginning
03:18 - now there are comments and they're
03:19 - ignored by the javascript compiler
03:22 - let me run this program
03:24 - and it's enter name let me enter punit
03:27 - and it says name punit this line and
03:30 - this line were completely ignored and
03:32 - that's why they were not run
03:35 - now later on if we need to use the h
03:37 - variable again all we need to do is
03:40 - remove these
03:41 - two forward slashes and this code will
03:43 - run it will ask me for the name
03:46 - and age and now my program works as
03:49 - expected
03:50 - this is because these two lines now are
03:53 - statements instead of comments since
03:56 - i've removed the two forward slashes in
03:57 - front of them
03:58 - a little pro tip for you remember the
04:00 - keyboard shortcut to apply comments in
04:02 - most text editors and in our online
04:04 - compiler as well it's
04:07 - command in mac or control in windows
04:09 - plus forward slash
04:11 - so i can do this in one go
04:14 - right from the keyboard
04:16 - this will be very useful in debugging
04:17 - our code
04:18 - if you're enjoying this video please
04:20 - also check out programs pro where we
04:22 - provide tutorials along with quizzes and
04:24 - challenges which will help you practice
04:26 - and test your learning in real time also
04:28 - the course includes projects to give you
04:30 - an awesome experience of how programming
04:31 - works in the real world and for our
04:33 - youtube subscribers we are giving 50 off
04:35 - on the yearly plan sign up by scanning
04:37 - this qr code or use the link in the
04:39 - video description to claim your discount
04:44 - in javascript there's also another type
04:46 - of comment that allows us to comment
04:48 - multiple lines together let me give you
04:50 - an example so i'll remove this old code
04:52 - and let me write a long comment so as
04:55 - this program
04:57 - is used to take the
04:59 - name of the user
05:01 - similarly in the next line as you can
05:03 - get the
05:04 - name
05:05 - from the user
05:08 - and
05:09 - display the result
05:12 - now i'll write the code
05:15 - prompt
05:19 - enter your name
05:22 - similarly i can say console.log
05:26 - name
05:28 - and then the string concatenation num
05:30 - and name
05:31 - now i want these three lines to be
05:33 - comments
05:34 - we can do that by typing the forward
05:36 - slash and asterisk
05:38 - at the beginning
05:40 - similarly
05:41 - at the end i will need to type
05:44 - the asterisk
05:45 - and the forward slash
05:48 - and now
05:49 - these lines are a multi-line comment
05:52 - there's also an alternative way to do
05:54 - this
05:54 - let me remove the
05:56 - multi-line comment operator first
05:59 - and what i can also do is i can select
06:02 - these three lines and i can use the
06:04 - keyboard shortcut that i told you about
06:06 - before so command slash since i am on a
06:08 - mac but for windows it will be control
06:10 - slash or linux as well so i'll press
06:13 - command slash and you can see that this
06:15 - was immediately converted to comments
06:19 - let me run this code
06:21 - and let me put sarah as the name
06:23 - and you can see that my program works as
06:25 - expected
06:27 - multi-line comments are useful if you
06:28 - need to explain the code a bit more or
06:31 - need to add more text to understand the
06:32 - code in this case you must have noticed
06:35 - that when i use the keyboard shortcut it
06:37 - actually made single line comments out
06:39 - of two lines but some editors might do
06:42 - this
06:43 - and make this
06:45 - a multi-line comment as well so this
06:47 - differs from text editor to text editor
06:49 - whatever the case if you use the
06:51 - shortcut it these lines will always
06:53 - become comments
06:55 - okay guys we need your support to keep
06:57 - these types of content free for all
06:58 - users youtube really likes engagement on
07:00 - the video so leave a comment below press
07:02 - that like button and hit subscribe if
07:04 - you haven't already let's get the
07:06 - engagement score high up so that more
07:08 - people can discover and enjoy these
07:10 - courses
07:13 - let's take a moment to discuss why
07:14 - comments are important
07:16 - imagine you're working on a huge web
07:18 - development project for a client since
07:20 - you were on a tight schedule you decided
07:22 - to ignore comments you successfully
07:24 - delivered it to the clients and they're
07:26 - happy about it
07:27 - fast forward a couple of months the
07:29 - client wants to update some features of
07:31 - the project since you were the one who
07:32 - developed the project the client wants
07:34 - you to make that change now without
07:36 - comments you will forget the reasons why
07:38 - you wrote a particular piece of code a
07:40 - certain way and you'll end up spending a
07:42 - lot of time looking at your own code and
07:44 - trying to understand it
07:46 - comments are even more important if
07:47 - you're working in a group it makes it
07:49 - easier for other developers to
07:50 - understand and use your code that being
07:53 - said comments are not and should not be
07:55 - used as a substitute to explain poorly
07:57 - written code you should always try to
07:59 - write clean understandable code and then
08:01 - use comments as an addition
08:04 - now that we have reached the end of the
08:05 - video it's time for the programming
08:07 - squares which of the following operators
08:09 - is used as a comment in javascript
08:14 - comment your answer below and if you
08:15 - want to revise this concept you can find
08:17 - all the programs in our github
08:18 - repository i'll put the link in the
08:20 - video description below happy
08:22 - programming
08:27 - [Music]
08:32 - you

Cleaned transcript:

what's up guys i'm puli from programmers and welcome back to this series on javascript in this video we will learn to write javascript comments and see why they are important comments are hints that we add to our program to make our code easier to understand let's see an example i have this program to print the name of a user so the program looks something like this so i create a variable called name and let me hard code punit into it and then i'll say console.log name i'll use the string concatenation or plus operator and say the name is the variable name or the value of the variable name to make this program a bit more readable i can add a comment like this so on the top i'll say program to print the user's name this line that starts with two forward slashes is a comment we added this line to make our program easier to understand for anyone reading our code let's see what happens when we run this program when i press run it says name punit as you can see the program runs normally without any issues this is because javascript completely ignores the line that starts with two forward slashes we can also place comments after the code statement like this so here after the console log i can say print the name variable now i can run this code and you can see that i get the same output the comments are completely ignored though we can add comments anywhere in our program we should not add unnecessary comments this only makes our code very cluttered and messy since the code in our program is also selfexplanatory let me remove these two comments so i'll remove this one and i'll remove this one as well we can also use comments to debug our code suppose we are experimenting with our code and sometimes we might not need some piece of code during the test in such situations it is a good practice to comment out quotes so that it is ignored by the compiler rather than removing the code completely let me give you an example i'll write a program to take a name and age input from the user so let me remove this old code and i'll say let me write the comment first program to take users name and age let me create the name variable so i can say name equals prompt enter name similarly age equals prompt enter age now let me console log the name oops let me make this capital letters and use the string concatenation operator the plus operator similarly i can say age and plus age suppose in this program it was no longer required for us to take the age input from the user so instead of removing these two lines which accept the edge and print it i can just convert this into a comment by adding two slashes in the beginning now there are comments and they're ignored by the javascript compiler let me run this program and it's enter name let me enter punit and it says name punit this line and this line were completely ignored and that's why they were not run now later on if we need to use the h variable again all we need to do is remove these two forward slashes and this code will run it will ask me for the name and age and now my program works as expected this is because these two lines now are statements instead of comments since i've removed the two forward slashes in front of them a little pro tip for you remember the keyboard shortcut to apply comments in most text editors and in our online compiler as well it's command in mac or control in windows plus forward slash so i can do this in one go right from the keyboard this will be very useful in debugging our code if you're enjoying this video please also check out programs pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount in javascript there's also another type of comment that allows us to comment multiple lines together let me give you an example so i'll remove this old code and let me write a long comment so as this program is used to take the name of the user similarly in the next line as you can get the name from the user and display the result now i'll write the code prompt enter your name similarly i can say console.log name and then the string concatenation num and name now i want these three lines to be comments we can do that by typing the forward slash and asterisk at the beginning similarly at the end i will need to type the asterisk and the forward slash and now these lines are a multiline comment there's also an alternative way to do this let me remove the multiline comment operator first and what i can also do is i can select these three lines and i can use the keyboard shortcut that i told you about before so command slash since i am on a mac but for windows it will be control slash or linux as well so i'll press command slash and you can see that this was immediately converted to comments let me run this code and let me put sarah as the name and you can see that my program works as expected multiline comments are useful if you need to explain the code a bit more or need to add more text to understand the code in this case you must have noticed that when i use the keyboard shortcut it actually made single line comments out of two lines but some editors might do this and make this a multiline comment as well so this differs from text editor to text editor whatever the case if you use the shortcut it these lines will always become comments okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses let's take a moment to discuss why comments are important imagine you're working on a huge web development project for a client since you were on a tight schedule you decided to ignore comments you successfully delivered it to the clients and they're happy about it fast forward a couple of months the client wants to update some features of the project since you were the one who developed the project the client wants you to make that change now without comments you will forget the reasons why you wrote a particular piece of code a certain way and you'll end up spending a lot of time looking at your own code and trying to understand it comments are even more important if you're working in a group it makes it easier for other developers to understand and use your code that being said comments are not and should not be used as a substitute to explain poorly written code you should always try to write clean understandable code and then use comments as an addition now that we have reached the end of the video it's time for the programming squares which of the following operators is used as a comment in javascript comment your answer below and if you want to revise this concept you can find all the programs in our github repository i'll put the link in the video description below happy programming you
