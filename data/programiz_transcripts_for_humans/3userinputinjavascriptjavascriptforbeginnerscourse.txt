With timestamps:

00:00 - what's up guys i'm punit from
00:01 - programmers and welcome back to this
00:02 - series on programming with javascript in
00:05 - this video we will learn to take input
00:07 - from the user and store it in a variable
00:09 - so let's get started
00:14 - before we learn to take user input let
00:16 - me create a simple program that prints
00:18 - the value stored in a variable as a
00:20 - refresher so i'll go to my code editor
00:22 - and let me write the code i can say
00:24 - something like const name
00:27 - equals let me use a string like juliet
00:31 - oops
00:32 - and then in the next line let me just
00:35 - say console.log name
00:38 - when i press run
00:40 - as you must have expected juliet is
00:42 - printed to the screen here we are
00:44 - assigning the string juliet to the name
00:47 - variable and using console.log to print
00:49 - the value of the name variable
00:51 - let me make the output a bit more
00:53 - friendly by adding hello in front of the
00:55 - name
00:56 - i can do that by adding the string hello
01:00 - inside the console log and adding a
01:02 - comma after that
01:04 - console.log can take any number of
01:06 - values and variables to print at the
01:08 - same time by separating them with commas
01:10 - let me run the code
01:12 - and i get a friendlier output hello
01:14 - juliet
01:15 - now rather than explicitly assigning the
01:18 - value to a variable like this we can
01:20 - also ask the user for the input and
01:22 - store it in a variable and the simplest
01:25 - way to do it in javascript is by using
01:27 - the prompt method let's see an example
01:29 - of this and remove this old code and i
01:32 - can say const
01:34 - name
01:35 - equals
01:36 - prompt
01:37 - enter your name and then in the next
01:41 - line just like before i can say
01:43 - console.log
01:44 - hello
01:46 - comma name
01:48 - now let me run this program
01:51 - and you can see that this time
01:52 - javascript is waiting for me to input
01:55 - something so let me type punit
01:59 - this value will be stored in the name
02:01 - variable when i press enter so let me do
02:04 - that i'll press enter and as you can see
02:07 - hello punit has been printed let me make
02:09 - this capital h i'll run it again
02:12 - enter a name punit
02:14 - and again i get the same output hello
02:17 - punit
02:18 - now let's see what happened here when i
02:20 - typed a text and hit enter the string i
02:22 - entered was assigned to the name
02:24 - variable
02:26 - then console.log method printed the
02:28 - variable and the hello string in front
02:30 - of it by the way in real word scenarios
02:32 - we rarely use prompt to take user input
02:35 - in fact prompt function actually isn't
02:38 - supposed to work like this on node.js
02:40 - the platform our online compiler uses to
02:42 - run the javascript code but i just
02:44 - wanted you to focus on the basics so
02:46 - i've hacked in some code in our online
02:47 - compiler to make this work so that you
02:49 - can learn the concepts easily we'll
02:52 - learn how to use a combination of
02:53 - javascript and html to accept input from
02:56 - the user through text input fields in
02:58 - later videos
02:59 - at this point i want to give you an
03:01 - important and useful piece of advice
03:03 - when taking input from the user give
03:06 - descriptive instructions in our code you
03:08 - must have noticed that we have said
03:10 - enter your name
03:12 - instead if you had written only name the
03:14 - user could be confused about what's
03:16 - happening in the program
03:21 - now let's try to take a numeric input
03:23 - from the user this time let me modify
03:26 - this program and instead of enter your
03:28 - name i'll say enter your age
03:30 - and then i can say something like hello
03:32 - your age is
03:35 - and then inside here i can say age
03:38 - now let me press run
03:40 - and this time it says enter your age so
03:43 - let me enter 31
03:45 - and something is wrong here what went
03:47 - wrong is oh the variable is supposed to
03:49 - be age
03:51 - now i'll press run again it says enter
03:53 - age let me enter 31 again
03:55 - and this time my program is correct it
03:57 - says hello your age is 31.
04:01 - as you saw taking a number as input was
04:03 - really easy or is it
04:05 - well the prompt method takes the input
04:07 - in the string format when i enter 31
04:10 - rather than the integer 31 the string 31
04:13 - was stored in the age variable to
04:15 - confirm this we will use the type of
04:17 - operator the type of operator gives the
04:20 - data type of the variable so let's check
04:22 - i'll go to my code editor and i'll say
04:25 - console.log
04:27 - type of
04:28 - age
04:29 - here we have simply passed the age
04:31 - variable into the type of operator so
04:34 - that we can see what type of result i'm
04:36 - getting in the age variable
04:39 - now let me run the code
04:40 - it says enter your age let me press 31
04:43 - again my age is not getting any lesser
04:46 - and you can see that the type of
04:47 - variable age is string
04:50 - let's see what the type of operator
04:51 - returns while using integers and
04:53 - floating point numbers let me remove
04:55 - this whole code and let me create some
04:58 - integers and floating point values so i
05:00 - can say const
05:01 - int value equals 5
05:05 - console log
05:06 - type of
05:08 - int value similarly i can say const
05:12 - float value
05:14 - equals
05:15 - 5.5
05:17 - and then i can say console.log type of
05:21 - float value so we are just doing some
05:23 - experimentation here
05:25 - now when i press run
05:27 - you can see that i get number for both
05:31 - in javascript both integer and floating
05:33 - point numbers are represented as number
05:36 - data type that's why we get number as a
05:38 - data type for both values if you're
05:40 - enjoying this video please also check
05:42 - out programs pro where we provide
05:44 - tutorials along with quizzes and
05:46 - challenges which will help you practice
05:47 - and test your learning in real time also
05:49 - the course includes projects to give you
05:51 - an awesome experience of how programming
05:53 - works in the real world and for our
05:54 - youtube subscribers we are giving 50 off
05:57 - on the yearly plan sign up by scanning
05:58 - this qr code or use the link in the
06:00 - video description to claim your discount
06:02 - now let's get back to our original
06:04 - problem of taking numeric input from the
06:05 - user
06:06 - so i'll quickly remove this old code and
06:08 - i'll go back to my old code so i'll say
06:10 - const age equals prompt
06:13 - enter your age
06:16 - and in the next line i had said console
06:18 - log
06:20 - let me just print age this time
06:23 - as we already saw all inputs from the
06:25 - user are of string type
06:27 - so how can we take the input from the
06:28 - user that is actually a number well in
06:31 - that case we can use the parseint method
06:33 - let's try this now to use the percent
06:36 - method we will wrap our prompt code
06:38 - inside the parseint method
06:40 - so here i can say
06:42 - parse
06:45 - int and parenthesis and i have to wrap
06:47 - the whole code of prompt
06:50 - let me put a semicolon here
06:53 - now let me also print the type of age
06:55 - again console.log
06:58 - type of age
07:00 - now let's run the code
07:03 - it says enter your age i'll press 31
07:06 - and you can see that this time the type
07:08 - of variable age
07:10 - is 31 i mean to say number not 31 so
07:14 - it's a number not a string
07:18 - let's see what happened here first the
07:21 - prompt method got me the age in string
07:23 - format from the user
07:25 - then the parseint took that string and
07:29 - converted it into an integer and that's
07:31 - why the type of variable is was a number
07:38 - now let's take floating point input
07:41 - earlier we use the percent method to
07:42 - convert the input data from string to
07:44 - number the parsing method works fine
07:46 - with integer inputs but if we provide
07:49 - floating point input the parsing method
07:51 - will only take the integer value and
07:53 - omit the values after the decimal let me
07:55 - show that to you with an example i will
07:58 - create a program to take hide from the
07:59 - user and let's see what happens if we
08:01 - pass a decimal number to the power synth
08:04 - function so let me just modify this
08:06 - existing one i'll say enter your height
08:09 - and then this should be height this
08:12 - should also be height and this should
08:14 - also be high
08:15 - now when i press run
08:17 - it says enter your height so i can say
08:19 - something like 5.6 when i press enter
08:23 - then
08:24 - when i log console log back the height i
08:26 - get only 5.6 has disappeared
08:29 - this is because the value after the
08:31 - decimal was omitted by the percent
08:33 - function
08:34 - to solve this issue we can use the parse
08:36 - float method instead of parse int
08:39 - similar to parse int the pass float
08:41 - method also converts a string input into
08:43 - a number but in this case the number
08:46 - will be a floating point type let's see
08:48 - an example i'll modify this program and
08:51 - i'll wrap the prompt method with pass
08:53 - float instead of parse int so let me
08:55 - remove the sparse int and say pass
08:59 - float
09:00 - and then let me run the code to check if
09:02 - this time it works or not so when i
09:04 - press run
09:06 - i it says enter your height i say 5.6
09:09 - and press enter
09:10 - and you can see that i get 5.6 back and
09:13 - the type of height variable is still
09:15 - number as we saw before okay guys we
09:18 - need your support to keep these kinds of
09:20 - content free for all users youtube
09:22 - really likes engagement on the video so
09:23 - leave a comment below press that like
09:25 - button and hit subscribe if you haven't
09:27 - already let's get the engagement score
09:29 - high up so that more people can discover
09:31 - and enjoy these courses
09:36 - when using percent and parse float one
09:38 - thing you should always remember is that
09:40 - input data must be numeric strings
09:42 - that is numbers in string format like 28
09:46 - or 5.65
09:47 - this is because javascript tries to
09:49 - convert the numeric string into its
09:51 - corresponding integers and float values
09:54 - however if the input data are
09:55 - non-numeric strings like programmers and
09:57 - javascript we try to convert them to a
09:59 - number using either power sent or pass
10:01 - float then javascript doesn't know how
10:04 - to convert it because programmers and
10:06 - javascript don't have any numeric
10:07 - equivalents let's see an example i'll
10:10 - create a program to ask the user
10:11 - something and then i'll try to convert
10:14 - the input value to number using parse
10:16 - int
10:16 - and let's see what happens
10:18 - i'll go back to my code editor remove
10:20 - the old code let me say let name equals
10:24 - pass int
10:27 - prompt
10:30 - and i can say something like enter your
10:32 - name where i expect the value to be a
10:34 - string
10:36 - and then i can say
10:37 - console.log name
10:40 - now let me run this code
10:42 - this time it says enter a name so i can
10:44 - say something like punit
10:47 - and i get the output as nan which means
10:51 - not a number
10:53 - not a number represents that the string
10:55 - is not a valid number since i have
10:57 - entered punit which is obviously not a
10:59 - number i get not a number or nan as
11:02 - output now that we have reached the end
11:04 - of this video it's time for the
11:05 - programming quiz
11:07 - what is the type of the number variable
11:09 - in the following code
11:13 - comment your answer below and if you
11:14 - want to revise these concepts you can
11:16 - find all the programs in our github
11:18 - repository i'll put the link in the
11:20 - video description below happy
11:21 - programming
11:25 - [Music]
11:31 - you

Cleaned transcript:

what's up guys i'm punit from programmers and welcome back to this series on programming with javascript in this video we will learn to take input from the user and store it in a variable so let's get started before we learn to take user input let me create a simple program that prints the value stored in a variable as a refresher so i'll go to my code editor and let me write the code i can say something like const name equals let me use a string like juliet oops and then in the next line let me just say console.log name when i press run as you must have expected juliet is printed to the screen here we are assigning the string juliet to the name variable and using console.log to print the value of the name variable let me make the output a bit more friendly by adding hello in front of the name i can do that by adding the string hello inside the console log and adding a comma after that console.log can take any number of values and variables to print at the same time by separating them with commas let me run the code and i get a friendlier output hello juliet now rather than explicitly assigning the value to a variable like this we can also ask the user for the input and store it in a variable and the simplest way to do it in javascript is by using the prompt method let's see an example of this and remove this old code and i can say const name equals prompt enter your name and then in the next line just like before i can say console.log hello comma name now let me run this program and you can see that this time javascript is waiting for me to input something so let me type punit this value will be stored in the name variable when i press enter so let me do that i'll press enter and as you can see hello punit has been printed let me make this capital h i'll run it again enter a name punit and again i get the same output hello punit now let's see what happened here when i typed a text and hit enter the string i entered was assigned to the name variable then console.log method printed the variable and the hello string in front of it by the way in real word scenarios we rarely use prompt to take user input in fact prompt function actually isn't supposed to work like this on node.js the platform our online compiler uses to run the javascript code but i just wanted you to focus on the basics so i've hacked in some code in our online compiler to make this work so that you can learn the concepts easily we'll learn how to use a combination of javascript and html to accept input from the user through text input fields in later videos at this point i want to give you an important and useful piece of advice when taking input from the user give descriptive instructions in our code you must have noticed that we have said enter your name instead if you had written only name the user could be confused about what's happening in the program now let's try to take a numeric input from the user this time let me modify this program and instead of enter your name i'll say enter your age and then i can say something like hello your age is and then inside here i can say age now let me press run and this time it says enter your age so let me enter 31 and something is wrong here what went wrong is oh the variable is supposed to be age now i'll press run again it says enter age let me enter 31 again and this time my program is correct it says hello your age is 31. as you saw taking a number as input was really easy or is it well the prompt method takes the input in the string format when i enter 31 rather than the integer 31 the string 31 was stored in the age variable to confirm this we will use the type of operator the type of operator gives the data type of the variable so let's check i'll go to my code editor and i'll say console.log type of age here we have simply passed the age variable into the type of operator so that we can see what type of result i'm getting in the age variable now let me run the code it says enter your age let me press 31 again my age is not getting any lesser and you can see that the type of variable age is string let's see what the type of operator returns while using integers and floating point numbers let me remove this whole code and let me create some integers and floating point values so i can say const int value equals 5 console log type of int value similarly i can say const float value equals 5.5 and then i can say console.log type of float value so we are just doing some experimentation here now when i press run you can see that i get number for both in javascript both integer and floating point numbers are represented as number data type that's why we get number as a data type for both values if you're enjoying this video please also check out programs pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount now let's get back to our original problem of taking numeric input from the user so i'll quickly remove this old code and i'll go back to my old code so i'll say const age equals prompt enter your age and in the next line i had said console log let me just print age this time as we already saw all inputs from the user are of string type so how can we take the input from the user that is actually a number well in that case we can use the parseint method let's try this now to use the percent method we will wrap our prompt code inside the parseint method so here i can say parse int and parenthesis and i have to wrap the whole code of prompt let me put a semicolon here now let me also print the type of age again console.log type of age now let's run the code it says enter your age i'll press 31 and you can see that this time the type of variable age is 31 i mean to say number not 31 so it's a number not a string let's see what happened here first the prompt method got me the age in string format from the user then the parseint took that string and converted it into an integer and that's why the type of variable is was a number now let's take floating point input earlier we use the percent method to convert the input data from string to number the parsing method works fine with integer inputs but if we provide floating point input the parsing method will only take the integer value and omit the values after the decimal let me show that to you with an example i will create a program to take hide from the user and let's see what happens if we pass a decimal number to the power synth function so let me just modify this existing one i'll say enter your height and then this should be height this should also be height and this should also be high now when i press run it says enter your height so i can say something like 5.6 when i press enter then when i log console log back the height i get only 5.6 has disappeared this is because the value after the decimal was omitted by the percent function to solve this issue we can use the parse float method instead of parse int similar to parse int the pass float method also converts a string input into a number but in this case the number will be a floating point type let's see an example i'll modify this program and i'll wrap the prompt method with pass float instead of parse int so let me remove the sparse int and say pass float and then let me run the code to check if this time it works or not so when i press run i it says enter your height i say 5.6 and press enter and you can see that i get 5.6 back and the type of height variable is still number as we saw before okay guys we need your support to keep these kinds of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses when using percent and parse float one thing you should always remember is that input data must be numeric strings that is numbers in string format like 28 or 5.65 this is because javascript tries to convert the numeric string into its corresponding integers and float values however if the input data are nonnumeric strings like programmers and javascript we try to convert them to a number using either power sent or pass float then javascript doesn't know how to convert it because programmers and javascript don't have any numeric equivalents let's see an example i'll create a program to ask the user something and then i'll try to convert the input value to number using parse int and let's see what happens i'll go back to my code editor remove the old code let me say let name equals pass int prompt and i can say something like enter your name where i expect the value to be a string and then i can say console.log name now let me run this code this time it says enter a name so i can say something like punit and i get the output as nan which means not a number not a number represents that the string is not a valid number since i have entered punit which is obviously not a number i get not a number or nan as output now that we have reached the end of this video it's time for the programming quiz what is the type of the number variable in the following code comment your answer below and if you want to revise these concepts you can find all the programs in our github repository i'll put the link in the video description below happy programming you
