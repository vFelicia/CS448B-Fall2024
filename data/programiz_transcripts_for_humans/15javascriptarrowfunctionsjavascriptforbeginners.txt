With timestamps:

00:00 - what's up guys i'm punishment
00:01 - programmers and welcome back to this
00:02 - series on javascript in this video we
00:04 - will learn about arrow functions and how
00:06 - we can use them in javascript so let's
00:08 - get started
00:13 - in 2015 a new version of javascript
00:15 - called es6 was launched it introduced a
00:17 - new way of creating a function called
00:19 - arrow functions now arrow functions
00:21 - allow us to create functions in a much
00:22 - cleaner way compared to the regular
00:24 - functions we learned in the last video
00:26 - before we learned about arrow function
00:28 - let's write a regular javascript
00:29 - function first so i'll create a function
00:32 - called greet
00:34 - and
00:35 - the greet function will not do much it
00:37 - will just say good morning
00:41 - now let me call the function
00:44 - greet
00:45 - and when i press run
00:47 - as expected it prints out good morning
00:50 - to the console
00:51 - now let's see how we can perform the
00:52 - same task using an arrow function i'll
00:55 - start by commenting out these three
00:56 - lines
01:00 - so i'm getting lazy and not using any
01:02 - shortcuts
01:03 - and now let me write my arrow function
01:05 - so arrow function starts with
01:06 - parentheses followed by an arrow the
01:09 - arrow is equals to followed by greater
01:11 - than sign and i can write the body of
01:13 - the state
01:15 - function so console.log
01:17 - good
01:18 - morning
01:19 - and now
01:20 - this is my arrow function you must have
01:23 - noticed that the function keyword is not
01:26 - used to create an arrow function instead
01:28 - the parenthesis and the arrow together
01:30 - signify that this is an arrow function
01:33 - now we didn't give any name to our arrow
01:35 - function that's why we need to assign it
01:37 - to a variable so i'll create a variable
01:40 - name greet
01:41 - and assign
01:43 - this arrow function
01:45 - to the variable greet
01:47 - now greet is a function so i can call it
01:49 - like a regular function and when i press
01:51 - run
01:53 - you can see that i got the same output
01:55 - as before
01:56 - now let's compare the arrow function
01:57 - with the regular function you can see in
01:59 - the diagram that the arrow function
02:00 - makes our code shorter and cleaner
02:04 - also like a regular function an arrow
02:06 - function might have multiple statements
02:08 - inside it in such cases we can use curly
02:10 - braces let me show you so on the same
02:13 - code i will put curly braces and let me
02:16 - put another line console.log
02:19 - how are you
02:21 - let me also put a full stop here
02:24 - and because we have used multiple lines
02:27 - i have enclosed everything in curly
02:29 - braces
02:30 - now i'll press run
02:33 - and you can see that both of these lines
02:35 - were printed
02:36 - if you're enjoying this video please
02:38 - also check out program is pro where we
02:40 - provide tutorials along with quizzes and
02:42 - challenges which will help you practice
02:44 - and test your learning in real time also
02:46 - the course includes projects to give you
02:48 - an awesome experience of how programming
02:49 - works in the real world and for our
02:51 - youtube subscribers we are giving 50 off
02:53 - on the yearly plan sign up by scanning
02:55 - this qr code or use the link in the
02:57 - video description to claim your discount
03:00 - we can also create an arrow function
03:01 - with parameters let me show you i'll
03:04 - create an arrow function that takes two
03:05 - parameters a and b and adds them
03:08 - so i'll remove this old code and just
03:10 - let me say const
03:12 - add numbers equals
03:15 - inside the parenthesis a comma b
03:18 - and
03:19 - my muscle memory is acting up so it says
03:22 - arrow
03:23 - and
03:24 - ins i don't i just need one line so i'll
03:26 - just say console log i don't need the
03:28 - curly braces
03:29 - so a plus b i'm being really lazy here
03:34 - now we can call this function by passing
03:35 - two argument values so i will pass add
03:39 - numbers
03:40 - and then for a i'll pass five and for b
03:44 - i'll pass something like 9
03:46 - let me press run
03:49 - and you can see that 14 which is the sum
03:51 - of 5 and 9 was printed to the screen
03:55 - now there's a strange thing about arrow
03:56 - functions that if it has only one
03:58 - parameter we can omit the parentheses
04:00 - altogether let me show you so i'll
04:02 - remove this old code and i'll create a
04:04 - function called square that will square
04:06 - any number so const square equals to a
04:11 - and then i can say console.log
04:15 - a raised to the power of 2. if you
04:17 - didn't know double star in javascript
04:20 - means raised to the power of
04:22 - so
04:23 - let me call square on a number called 5
04:27 - my favorite number and when i press it
04:29 - on
04:31 - you can see that my program works it
04:33 - gives me the square of 5 which is 25 and
04:36 - you can see that i have not added any
04:38 - parenthesis here
04:39 - okay guys we need your support to keep
04:41 - these kinds of content free for all
04:42 - users youtube really likes engagement on
04:44 - the video so leave a comment below press
04:46 - that like button and hit subscribe if
04:48 - you haven't already let's get the
04:49 - engagement score high up so that more
04:51 - people can discover and enjoy these
04:53 - wonderful courses
04:56 - in our early example of adding numbers
04:58 - we have used the arrow function to add
04:59 - two numbers and print the result now
05:02 - similar to our normal function we can
05:03 - also return values from an arrow
05:05 - function and use it somewhere else in
05:06 - our program
05:07 - let's see an example i'll use this
05:09 - previous code to add numbers
05:12 - now instead of printing the result i
05:13 - will return the result
05:15 - so let me add let me remove this
05:18 - console.log result and say return
05:20 - result
05:21 - here return result is a return statement
05:23 - that is used to return the value that's
05:25 - stored in the result variable from the
05:27 - function since the function is returning
05:29 - some value this return value needs to be
05:31 - stored somewhere so during the function
05:33 - call i will assign the return value to a
05:35 - variable say output so i can say const
05:39 - output equals add numbers 5 comma 9
05:43 - now let me print the sum so
05:46 - i'll say console.log
05:50 - the sum
05:52 - is
05:54 - and my variable output
05:58 - and now when i press run
06:01 - you can see i get the sum is 14. that
06:04 - means i was able to successfully return
06:06 - a result from the function stored it
06:08 - store it in a variable
06:10 - and
06:11 - print it in a user-friendly way
06:13 - since an error function is just another
06:15 - way to create a function the return
06:17 - statement immediately terminates it as
06:19 - well let's verify this by adding a print
06:21 - statement after the return statement so
06:23 - here
06:24 - i'll say console.log
06:27 - hey
06:29 - i'm here
06:31 - and when i press run
06:34 - you can see that there's no trace of
06:36 - this hey i'm here because as soon as we
06:38 - saw return the function exits
06:41 - immediately
06:44 - now to practice what we've learned
06:45 - here's a programming task for you can
06:47 - you create a program using an arrow
06:49 - function to check if the number entered
06:50 - by the user is a prime number or not
06:52 - this function should compute the result
06:54 - and return it to the function call and
06:56 - the result should be printed from
06:58 - outside the function take the input from
07:00 - the user create a function called is
07:02 - prime that accepts this number as input
07:05 - inside the function create a for loop
07:07 - that goes from 2 to number -1 that means
07:10 - if the user enters 10
07:12 - then the loop should go from 2 to 9. now
07:15 - if the number that the user entered is
07:17 - divisible by any of these numbers from 2
07:19 - to 9
07:20 - then the function should return false
07:22 - otherwise it should return true
07:25 - now display a message that tells the
07:26 - user whether the number they entered is
07:28 - prime or not outside of the function
07:31 - you'll find the answer to this question
07:32 - in our github repository also if you
07:34 - want to revise these concepts you can
07:36 - find all these programs in our github
07:38 - repository as well i'll put the link in
07:40 - the video description below
07:41 - now that we've reached the end of this
07:43 - video it's time for programming squares
07:45 - what's the correct way to call this
07:47 - arrow function that you see on your
07:48 - screen
07:49 - you can also see the options on the
07:51 - screen and i hope you'll be able to
07:53 - answer the question in the comments
07:54 - happy programming
07:59 - [Music]
08:05 - you

Cleaned transcript:

what's up guys i'm punishment programmers and welcome back to this series on javascript in this video we will learn about arrow functions and how we can use them in javascript so let's get started in 2015 a new version of javascript called es6 was launched it introduced a new way of creating a function called arrow functions now arrow functions allow us to create functions in a much cleaner way compared to the regular functions we learned in the last video before we learned about arrow function let's write a regular javascript function first so i'll create a function called greet and the greet function will not do much it will just say good morning now let me call the function greet and when i press run as expected it prints out good morning to the console now let's see how we can perform the same task using an arrow function i'll start by commenting out these three lines so i'm getting lazy and not using any shortcuts and now let me write my arrow function so arrow function starts with parentheses followed by an arrow the arrow is equals to followed by greater than sign and i can write the body of the state function so console.log good morning and now this is my arrow function you must have noticed that the function keyword is not used to create an arrow function instead the parenthesis and the arrow together signify that this is an arrow function now we didn't give any name to our arrow function that's why we need to assign it to a variable so i'll create a variable name greet and assign this arrow function to the variable greet now greet is a function so i can call it like a regular function and when i press run you can see that i got the same output as before now let's compare the arrow function with the regular function you can see in the diagram that the arrow function makes our code shorter and cleaner also like a regular function an arrow function might have multiple statements inside it in such cases we can use curly braces let me show you so on the same code i will put curly braces and let me put another line console.log how are you let me also put a full stop here and because we have used multiple lines i have enclosed everything in curly braces now i'll press run and you can see that both of these lines were printed if you're enjoying this video please also check out program is pro where we provide tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an awesome experience of how programming works in the real world and for our youtube subscribers we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount we can also create an arrow function with parameters let me show you i'll create an arrow function that takes two parameters a and b and adds them so i'll remove this old code and just let me say const add numbers equals inside the parenthesis a comma b and my muscle memory is acting up so it says arrow and ins i don't i just need one line so i'll just say console log i don't need the curly braces so a plus b i'm being really lazy here now we can call this function by passing two argument values so i will pass add numbers and then for a i'll pass five and for b i'll pass something like 9 let me press run and you can see that 14 which is the sum of 5 and 9 was printed to the screen now there's a strange thing about arrow functions that if it has only one parameter we can omit the parentheses altogether let me show you so i'll remove this old code and i'll create a function called square that will square any number so const square equals to a and then i can say console.log a raised to the power of 2. if you didn't know double star in javascript means raised to the power of so let me call square on a number called 5 my favorite number and when i press it on you can see that my program works it gives me the square of 5 which is 25 and you can see that i have not added any parenthesis here okay guys we need your support to keep these kinds of content free for all users youtube really likes engagement on the video so leave a comment below press that like button and hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these wonderful courses in our early example of adding numbers we have used the arrow function to add two numbers and print the result now similar to our normal function we can also return values from an arrow function and use it somewhere else in our program let's see an example i'll use this previous code to add numbers now instead of printing the result i will return the result so let me add let me remove this console.log result and say return result here return result is a return statement that is used to return the value that's stored in the result variable from the function since the function is returning some value this return value needs to be stored somewhere so during the function call i will assign the return value to a variable say output so i can say const output equals add numbers 5 comma 9 now let me print the sum so i'll say console.log the sum is and my variable output and now when i press run you can see i get the sum is 14. that means i was able to successfully return a result from the function stored it store it in a variable and print it in a userfriendly way since an error function is just another way to create a function the return statement immediately terminates it as well let's verify this by adding a print statement after the return statement so here i'll say console.log hey i'm here and when i press run you can see that there's no trace of this hey i'm here because as soon as we saw return the function exits immediately now to practice what we've learned here's a programming task for you can you create a program using an arrow function to check if the number entered by the user is a prime number or not this function should compute the result and return it to the function call and the result should be printed from outside the function take the input from the user create a function called is prime that accepts this number as input inside the function create a for loop that goes from 2 to number 1 that means if the user enters 10 then the loop should go from 2 to 9. now if the number that the user entered is divisible by any of these numbers from 2 to 9 then the function should return false otherwise it should return true now display a message that tells the user whether the number they entered is prime or not outside of the function you'll find the answer to this question in our github repository also if you want to revise these concepts you can find all these programs in our github repository as well i'll put the link in the video description below now that we've reached the end of this video it's time for programming squares what's the correct way to call this arrow function that you see on your screen you can also see the options on the screen and i hope you'll be able to answer the question in the comments happy programming you
