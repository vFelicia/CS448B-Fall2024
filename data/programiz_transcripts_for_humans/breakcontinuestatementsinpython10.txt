With timestamps:

00:00 - what's up guys i'm punit from
00:01 - programmers and welcome back to this
00:03 - series on python
00:05 - in the last two videos we learned how to
00:07 - repeat a block of code using loops
00:09 - the while loop repeats a block of code
00:11 - until the specified test condition is
00:13 - false and the for loop repeats a block
00:16 - of code
00:16 - until the last item in a sequence is
00:18 - reached
00:19 - sometimes we may need to end the loop
00:22 - without checking the test condition
00:24 - or skip execution of code inside the
00:26 - loop in such cases
00:27 - break and continue statements are used
00:31 - [Music]
00:36 - let's start with the break statement
00:38 - first i'll create a loop to print
00:40 - numbers from 1 to 5 to get started
00:42 - so i'll say 4 item in range 1 to 6
00:47 - and i'll print item and as you can see
00:50 - when i press run
00:51 - then 1 to 5 is printed now let me add a
00:54 - break statement here
00:56 - this time when i press run then only one
00:58 - is printed
00:59 - let's try to figure out what's happening
01:00 - here in the first iteration the item
01:04 - value is one one is printed
01:07 - and then the break statement is
01:09 - encountered as soon as we encounter the
01:11 - break statement
01:12 - we exit the loop now let me try
01:15 - something interesting
01:16 - i'll move this break statement before
01:18 - the print statement
01:19 - and this time when i press run
01:21 - absolutely nothing gets printed
01:22 - because the loop never reaches this
01:25 - print item
01:26 - statement the break statements
01:30 - are almost always used inside decision
01:32 - making statements like if and
01:33 - else because most of the time we may
01:36 - want to end the loop
01:37 - only when a certain condition is met let
01:40 - me show you this with a practical
01:41 - example
01:42 - i'll remove this code and i'll say if
01:47 - item equals equals 3
01:50 - then break otherwise print item
01:53 - and i also want to see find out when the
01:56 - loop is execute exited
01:58 - so i'll print outside the loop the end
02:02 - here we have a condition to break this
02:04 - loop when item
02:06 - is equal to 3 now when the item becomes
02:09 - 3
02:10 - the if condition is true and the break
02:12 - statement terminates the loop
02:14 - that's why 3 4 and 5 will not be printed
02:17 - this time
02:18 - let me run this code to show you this so
02:20 - when i run this code then 1 and 2 are
02:23 - printed
02:23 - and the end is printed
02:27 - let's create one more example of the
02:29 - break statement we will use a while loop
02:31 - to take a number
02:32 - input from the user if the user enters a
02:35 - positive number
02:36 - or zero we will print the number and
02:38 - again take another numeric input
02:40 - however if the user enters a negative
02:42 - number we will use the break statement
02:45 - and end the loop
02:46 - to approach this program first we will
02:48 - create a while loop with a test
02:50 - condition that's always true
02:52 - inside the loop we will take input from
02:54 - the user
02:55 - so i'll remove this old code and i'll
02:57 - say while
02:58 - true and i'll say number equals
03:02 - float input enter a number
03:06 - now this is an infinite while loop the
03:08 - only way to end this loop is by using
03:10 - the break statement
03:12 - now let's write our condition to print
03:13 - the number if it is positive and
03:15 - break the loop if it's negative so here
03:18 - i'll say if number
03:22 - less than 0 then break
03:26 - otherwise print u
03:30 - entered and here i'll print the number
03:34 - when i run this program then it says
03:36 - enter a number
03:37 - let me enter a positive number like 4
03:39 - and it says you entered 4.0
03:41 - and let me enter another positive number
03:44 - 67
03:45 - it says you entered 67 now let me try
03:48 - entering a number that's negative
03:50 - so i'll say minus 9 and when i press
03:52 - enter
03:53 - then it exited me from the loop and the
03:55 - program as well
03:58 - before moving to the next section of the
04:00 - video i'd like to mention that the
04:01 - program is team has created an app that
04:04 - allows you to learn python from your
04:05 - phone
04:06 - the app contains bit size lessons that
04:08 - are easy to understand
04:09 - a built-in interpreter so that you can
04:11 - run python on your phone
04:12 - quizzes and many more features the app
04:15 - is available on both ios and android
04:17 - the links are in the video description
04:18 - below
04:20 - let's talk about the continue statement
04:22 - in python now the continue statement in
04:25 - python
04:25 - skips the rest of the code inside the
04:27 - loop for that iteration
04:29 - the loop will not terminate but
04:31 - continues on with the next iteration
04:33 - let me explain this with the help of an
04:35 - example
04:36 - so i'll remove this old code and i'll
04:38 - say 4i in
04:39 - range 5 and then i'll say number
04:43 - equals float input
04:46 - enter a number
04:50 - then i'll print the number this program
04:53 - asked me for five numbers so i'll say 1
04:56 - 2
04:57 - 54 34 minus 76
05:01 - and something like 67 then it exited
05:04 - after five iterations
05:07 - what if you only want to print the
05:08 - positive numbers entered by the user
05:10 - and skip the printing of the negative
05:12 - numbers in such cases
05:14 - we can use the continue statement to
05:16 - skip code inside the loop
05:18 - if the user enters a negative number so
05:21 - here
05:21 - i'll add the continue statement like
05:23 - this i'll add the condition to check if
05:26 - the number is negative
05:27 - and continue the program without
05:29 - printing here so i'll say if
05:32 - number less than 0
05:35 - continue this time when i run the
05:38 - program
05:39 - then it asks me for an input i'll say 34
05:42 - it asks me for another input
05:43 - i'll say 56.5 or 7 and it
05:47 - prints the number and now if i enter a
05:49 - number like negative number like minus
05:51 - 87
05:53 - then it does not print the number it
05:56 - asks me for another number immediately
05:57 - this is because when this condition is
06:00 - true the continue statement takes me to
06:02 - the next iteration of the loop
06:03 - let me continue adding positive numbers
06:05 - so i'll say 23
06:07 - and then i'll add another negative
06:09 - number like minus 54
06:10 - and as you can see this whole loop still
06:13 - executed for five times
06:15 - but depending on whether i input a
06:17 - negative number or the positive number
06:19 - i was able to use the continue statement
06:21 - to either print the number
06:22 - or go directly to the next iteration
06:27 - before we end this video here's a little
06:29 - programming task for you
06:30 - suppose we have a list like this can you
06:33 - create a program
06:34 - so that all items of the languages list
06:37 - are printed
06:38 - except swift and c-plus plus you can
06:41 - find the answer to this question in our
06:42 - github repository
06:44 - also visit our website programmings.com
06:46 - for more tutorials and examples i've
06:48 - posted the link to both the github
06:50 - repository and our website in the
06:51 - description below
06:53 - let's recap the concepts we learnt in
06:55 - this video the break statement
06:57 - terminates the loop immediately when it
06:59 - is encountered
07:00 - the continue statement skips the code
07:02 - after it when it is encountered
07:05 - most of the time we want to change the
07:07 - way loops work
07:08 - only when a certain condition is met
07:10 - that's why we usually use break and
07:12 - continue
07:13 - inside the decision making statements
07:15 - like if and else
07:16 - that's it for this video i hope you
07:18 - learned something if you're just
07:19 - watching the video without writing any
07:21 - code
07:22 - i highly encourage you to try the
07:23 - programs in this video on your own
07:25 - the only way you can be a good
07:26 - programmer is by trying
07:28 - by the way you can find all the programs
07:30 - from this video on github
07:31 - i provided the link in the description
07:33 - below feel free to copy the program and
07:35 - edit them as you please
07:37 - and if you have any questions and
07:38 - feedback use the comment section below
07:41 - in the next video we will learn about
07:43 - the past statement
07:44 - join me in this video series and let's
07:46 - explore the exciting world of
07:47 - programming together
07:48 - if you like this video hit the like
07:50 - button now and also don't forget to
07:52 - subscribe to our channel and ring that
07:53 - bell icon
07:54 - so that you don't miss the next video
07:56 - thanks for watching and i'll see you in
07:57 - the next
07:58 - one thank you for your time

Cleaned transcript:

what's up guys i'm punit from programmers and welcome back to this series on python in the last two videos we learned how to repeat a block of code using loops the while loop repeats a block of code until the specified test condition is false and the for loop repeats a block of code until the last item in a sequence is reached sometimes we may need to end the loop without checking the test condition or skip execution of code inside the loop in such cases break and continue statements are used let's start with the break statement first i'll create a loop to print numbers from 1 to 5 to get started so i'll say 4 item in range 1 to 6 and i'll print item and as you can see when i press run then 1 to 5 is printed now let me add a break statement here this time when i press run then only one is printed let's try to figure out what's happening here in the first iteration the item value is one one is printed and then the break statement is encountered as soon as we encounter the break statement we exit the loop now let me try something interesting i'll move this break statement before the print statement and this time when i press run absolutely nothing gets printed because the loop never reaches this print item statement the break statements are almost always used inside decision making statements like if and else because most of the time we may want to end the loop only when a certain condition is met let me show you this with a practical example i'll remove this code and i'll say if item equals equals 3 then break otherwise print item and i also want to see find out when the loop is execute exited so i'll print outside the loop the end here we have a condition to break this loop when item is equal to 3 now when the item becomes 3 the if condition is true and the break statement terminates the loop that's why 3 4 and 5 will not be printed this time let me run this code to show you this so when i run this code then 1 and 2 are printed and the end is printed let's create one more example of the break statement we will use a while loop to take a number input from the user if the user enters a positive number or zero we will print the number and again take another numeric input however if the user enters a negative number we will use the break statement and end the loop to approach this program first we will create a while loop with a test condition that's always true inside the loop we will take input from the user so i'll remove this old code and i'll say while true and i'll say number equals float input enter a number now this is an infinite while loop the only way to end this loop is by using the break statement now let's write our condition to print the number if it is positive and break the loop if it's negative so here i'll say if number less than 0 then break otherwise print u entered and here i'll print the number when i run this program then it says enter a number let me enter a positive number like 4 and it says you entered 4.0 and let me enter another positive number 67 it says you entered 67 now let me try entering a number that's negative so i'll say minus 9 and when i press enter then it exited me from the loop and the program as well before moving to the next section of the video i'd like to mention that the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easy to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below let's talk about the continue statement in python now the continue statement in python skips the rest of the code inside the loop for that iteration the loop will not terminate but continues on with the next iteration let me explain this with the help of an example so i'll remove this old code and i'll say 4i in range 5 and then i'll say number equals float input enter a number then i'll print the number this program asked me for five numbers so i'll say 1 2 54 34 minus 76 and something like 67 then it exited after five iterations what if you only want to print the positive numbers entered by the user and skip the printing of the negative numbers in such cases we can use the continue statement to skip code inside the loop if the user enters a negative number so here i'll add the continue statement like this i'll add the condition to check if the number is negative and continue the program without printing here so i'll say if number less than 0 continue this time when i run the program then it asks me for an input i'll say 34 it asks me for another input i'll say 56.5 or 7 and it prints the number and now if i enter a number like negative number like minus 87 then it does not print the number it asks me for another number immediately this is because when this condition is true the continue statement takes me to the next iteration of the loop let me continue adding positive numbers so i'll say 23 and then i'll add another negative number like minus 54 and as you can see this whole loop still executed for five times but depending on whether i input a negative number or the positive number i was able to use the continue statement to either print the number or go directly to the next iteration before we end this video here's a little programming task for you suppose we have a list like this can you create a program so that all items of the languages list are printed except swift and cplus plus you can find the answer to this question in our github repository also visit our website programmings.com for more tutorials and examples i've posted the link to both the github repository and our website in the description below let's recap the concepts we learnt in this video the break statement terminates the loop immediately when it is encountered the continue statement skips the code after it when it is encountered most of the time we want to change the way loops work only when a certain condition is met that's why we usually use break and continue inside the decision making statements like if and else that's it for this video i hope you learned something if you're just watching the video without writing any code i highly encourage you to try the programs in this video on your own the only way you can be a good programmer is by trying by the way you can find all the programs from this video on github i provided the link in the description below feel free to copy the program and edit them as you please and if you have any questions and feedback use the comment section below in the next video we will learn about the past statement join me in this video series and let's explore the exciting world of programming together if you like this video hit the like button now and also don't forget to subscribe to our channel and ring that bell icon so that you don't miss the next video thanks for watching and i'll see you in the next one thank you for your time
