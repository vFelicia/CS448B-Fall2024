With timestamps:

00:00 - what's up guys i'm puneet from
00:01 - programmers and welcome back to the
00:03 - series on python
00:05 - so far in this video series we have
00:07 - mostly used simple data types like int
00:09 - float and bool python also offers a
00:12 - range of compound data types that allow
00:14 - us to work with multiple items at once
00:17 - in this video we will learn about two
00:19 - compound data types
00:20 - lists and tuples lists in particular is
00:23 - one of the most commonly used
00:25 - and most versatile data types in python
00:27 - as you will see in this video
00:28 - so let's get started
00:31 - [Music]
00:36 - let's learn how to create a list we'll
00:38 - start with the list data type
00:40 - in python a list is a sequence of items
00:43 - in an order
00:44 - we create lists by placing items inside
00:46 - square brackets
00:48 - separated by commas now it's not
00:50 - necessary for a list to have
00:52 - all of the items of the same type like
00:54 - this we can also create a list having
00:56 - mixed data types and it may
00:58 - also contain duplicate elements let me
01:00 - show you
01:01 - so here i'll say mixed list and then i
01:04 - can say
01:05 - random list equals
01:09 - something like 2.5 let me add in a
01:11 - string called hello
01:13 - and say a negative integer like
01:16 - minus 5 and i can also repeat a number
01:19 - like 2.5
01:22 - this list that i have stored in the
01:23 - random list variable has four items
01:26 - a float a string
01:29 - an integer and again the same float
01:34 - we can also create lists that do not
01:36 - have any items like this
01:38 - so here i can say empty list
01:42 - and i can say list one equals
01:45 - just the square brackets without any
01:47 - items in between and let me print it out
01:49 - to see what i get
01:51 - now when i press run then i can see that
01:53 - numbers list is printed
01:55 - having four elements and the list one is
01:58 - an empty list that's printed here
02:01 - since there are no items inside list one
02:04 - it's an empty list
02:06 - the size of an empty list is zero to
02:08 - check it
02:09 - we can use the built-in lend function
02:11 - let me remove the mixed list first
02:15 - and then i'll wrap the numbers list
02:20 - and the empty list list 1
02:23 - to see what i get now when i press run
02:27 - then i get 4 and 0 which are the lengths
02:30 - of the numbers list and list 1
02:34 - respectively
02:36 - now let's learn how to access list
02:37 - elements a list is a sequence
02:40 - and its items are always in order
02:42 - suppose we have a list of programming
02:44 - languages like this
02:45 - so i'll say languages equals
02:50 - python
02:53 - javascript c
02:56 - plus plus and
03:00 - kotlin now let me print the languages
03:04 - here i'll say print languages
03:08 - and when i press run then you can see
03:10 - that python javascript c plus plus and
03:12 - kotlin are printed
03:16 - so the first item in this languages list
03:18 - is python
03:20 - the second language is javascript the
03:22 - third one is c plus plus
03:23 - and the last one and the fourth one is
03:25 - kotlin
03:27 - we can access individual items of list
03:29 - by using something called
03:31 - index and it starts from 0 so the index
03:34 - of the first item is 0
03:35 - of the second item is 1 of the third
03:38 - item is 2
03:39 - and so on now suppose we want to get
03:43 - this first item
03:44 - python to get this item after the name
03:47 - of the list
03:48 - i will type square brackets and inside
03:51 - those square brackets i'll put
03:53 - 0 because i want to access the first
03:55 - element
03:57 - now when i run it then i get python
04:01 - similarly to get c plus plus we need to
04:04 - use
04:05 - index 2 because it's the third element
04:07 - of the list
04:08 - so i'll replace 0 by 2 because i want
04:11 - the third element
04:12 - and when i press run then this time i
04:14 - get c plus plus
04:16 - this languages list we have been working
04:18 - with has four items
04:20 - can you guess what will happen if we try
04:23 - to access the fifth item using
04:25 - four as an index
04:28 - why don't we try it in our code and see
04:30 - it for ourselves
04:31 - so i'll index i'll change index 2 to 4
04:35 - and now when i press run then python
04:38 - tells me
04:38 - list index out of range this error
04:42 - message means that we are using an
04:44 - index that does not exist because the
04:46 - fifth item doesn't exist
04:51 - now let's talk about negative indexing
04:53 - in python
04:54 - we can also use negative indexing for
04:56 - sequences like lists
04:58 - using a negative index gives us items
05:00 - from the last
05:01 - so minus 1 gives us the last item minus
05:04 - 2 gives us the second last item
05:06 - and so on i have this languages list we
05:08 - have been working with on the screen
05:11 - let me change index to -1 and run it
05:14 - so here i'll say minus 1 and when i
05:17 - press run
05:17 - then i get kotlin which is the last item
05:20 - in the list
05:21 - similarly we can get javascript using -3
05:26 - because it is the third element from the
05:28 - last now when i press run
05:30 - then i get javascript this time
05:34 - as you can see negative indexing is
05:36 - pretty useful when we need to access
05:37 - items from the last
05:39 - because we do not even need to know the
05:41 - size of the list
05:43 - before moving to the next section of the
05:44 - video i'd like to mention that the
05:46 - program is team has created an app that
05:48 - allows you to learn python from your
05:50 - phone
05:50 - the app contains bit size lessons that
05:52 - are easy to understand
05:54 - a built-in interpreter so that you can
05:55 - run python on your phone
05:57 - quizzes and many more features the app
05:59 - is available on both ios and android
06:01 - the links are in the video description
06:03 - below
06:05 - now let's learn about slicing of a list
06:07 - we learned to access an individual
06:10 - item from a list in the last two
06:12 - sections it's also possible to access a
06:14 - whole section of items from the list
06:16 - not just a single item let me give you
06:18 - an example i have the same code that we
06:21 - have been working with
06:22 - on my screen i'll remove the minus three
06:24 - index
06:25 - to access the third last item
06:30 - now let me access the first three items
06:32 - from the list so i'll use
06:34 - zero column three
06:38 - let me run this code this time
06:41 - i get the first three items of the list
06:43 - on the screen
06:45 - if you've been following along that
06:47 - means the items having index 0
06:49 - 1 and 2 were printed the thing you need
06:52 - to remember with slicing
06:53 - is that the first index is inclusive and
06:56 - the last
06:57 - index is exclusive so 0
07:01 - colon 3 that means 0 column 3 will give
07:05 - me
07:05 - 0 1 and 2 index which are the first
07:08 - three elements of the list
07:10 - now let's try to get the second third
07:12 - and fourth items
07:13 - since the starting index is inclusive we
07:16 - need to use index
07:17 - 1 to get the second item and the end
07:20 - index is exclusive
07:22 - so we need to use 4 as the end index
07:26 - using 4 will give us items up to the
07:28 - index 3
07:30 - which is technically the fourth item
07:32 - i'll press run
07:33 - and as expected the second third and
07:35 - fourth elements are printed to the
07:37 - screen
07:38 - let me tell you an interesting fact if
07:40 - we use the empty start index the slicing
07:42 - starts from the beginning of the list
07:44 - so here i'll try something like colon3
07:47 - and when i press run
07:48 - then i get the first three elements this
07:51 - means
07:52 - that just leaving the first element open
07:54 - or empty
07:55 - is equivalent to putting zero in front
07:58 - so when i press run i get the same
08:00 - result as before
08:02 - similarly if we use the empty end index
08:05 - the slicing
08:06 - ends at the last index so here i'll
08:09 - remove this
08:10 - and i'll say i want to start from one
08:12 - and i don't know
08:13 - and and i want to go to the end so when
08:17 - i press run
08:17 - then the slicing starts from the one
08:19 - index and is it goes up to the end of
08:22 - the list
08:22 - that means kotlin should be included in
08:25 - the slice
08:28 - by the way we can also use negative
08:30 - indexes during slicing
08:31 - if you are interested you can check out
08:33 - our website programming.com to find more
08:35 - information about it
08:36 - now let's learn how to change items of a
08:38 - list lists in python are pretty dynamic
08:41 - it's super easy to add modify and delete
08:44 - items of a list
08:46 - the term we use for these kinds of
08:48 - changeable objects
08:49 - is mutable so we can say that lists are
08:52 - mutable objects
08:53 - let's see how we can change items of a
08:55 - list i'll start with the same
08:57 - programming languages list we have been
08:59 - working with
09:00 - now let me change the second element
09:02 - from javascript to ruby
09:04 - it's pretty easy in python to do that we
09:07 - just need to assign ruby to the second
09:09 - element
09:09 - like this so here i'll say languages
09:13 - 1 equals ruby
09:17 - and after this if i print languages
09:21 - and press run then now i can see that
09:24 - the second element
09:25 - which was javascript has now been
09:27 - changed to ruby
09:29 - if you don't know then ruby is a popular
09:32 - programming language
09:34 - we can also change the portion of the
09:35 - list in a single statement
09:37 - i'll modify the code i had written where
09:39 - i changed javascript to ruby
09:41 - but this time i will change the second
09:44 - and third item of the list
09:45 - in one go here i'll say
09:48 - languages 1
09:51 - column 3 equals
09:55 - list of ruby and dart
10:00 - now when i press run here i have access
10:03 - the second
10:04 - and third items which are javascript and
10:06 - c plus plus
10:07 - using the slicing operator column and
10:09 - then modified them
10:11 - by putting the new values ruby and dart
10:13 - in their place
10:14 - that is why the elements that were in
10:16 - present in index 1 and 2
10:18 - are now ruby and dart
10:22 - now let's learn about iterating through
10:23 - a list before we learn to iterate
10:25 - through a list
10:26 - let's learn about the in keyword the in
10:29 - keyword
10:29 - is used to check whether an item is in
10:31 - the list or not
10:33 - i have this languages list from before
10:36 - now let me check if python is in the
10:38 - list or not
10:39 - here i can say print
10:42 - python in languages
10:46 - the python in language statement prints
10:49 - true
10:49 - because python is in the languages list
10:52 - let me run this code
10:54 - now the python in languages statement
10:56 - prints true
10:57 - because python is indeed in the
10:59 - languages list
11:00 - let me change python to rust and run the
11:03 - code
11:04 - so here i'll say rust in languages and
11:06 - when i press run
11:07 - this time i get false because rust is
11:09 - not in the languages list
11:12 - this can be helpful when we want to
11:14 - check whether an item is
11:15 - present in a list or not we can use this
11:18 - as a test condition in an if statement
11:21 - for decision making we can perform one
11:23 - set of tasks
11:24 - if an item is in the list and another
11:26 - set of tasks
11:27 - if the item is not in the list if you
11:29 - want to get individual items of a list
11:31 - one by one
11:32 - the easiest way to get them is by using
11:35 - a for loop
11:36 - we've already discussed them in the
11:37 - previous videos but let me revise it
11:39 - again here
11:40 - i'll remove the print statement and i'll
11:42 - add a loop so i'll say
11:43 - for language in languages
11:47 - and then i'll say print language
11:50 - this for loop iterates through elements
11:52 - of the list one by one
11:54 - until the end of the list is reached
11:56 - i'll press run
11:57 - and as you can see all four programming
11:59 - languages are printed here one by one
12:02 - this language variable is python in the
12:05 - first iteration
12:06 - javascript in the second iteration and
12:08 - so on and that is what we have printed
12:10 - inside the body of the loop
12:13 - if you want to learn more about the for
12:14 - loop in detail check out our python for
12:17 - loop video
12:17 - the link will be in the description
12:19 - below now let's learn about list methods
12:22 - the reason lists are so versatile is
12:24 - because it's so easy to add
12:26 - change and remove elements from it
12:28 - suppose we have the same languages list
12:30 - we have been working on in this video
12:33 - now let's say we want to add an item to
12:35 - the list we can use the append method to
12:37 - do this
12:38 - this method is already available when we
12:40 - work with list
12:41 - let's say we want to add rust to our
12:43 - list we can just say languages
12:46 - dot append rust so remove this old code
12:48 - and i'll say languages
12:51 - dot append rust
12:54 - and now if i print languages and press
12:57 - run then you can see rust is also
13:00 - included in the languages list let's say
13:02 - instead of adding rust in the end
13:05 - we want to insert it in the second
13:06 - position we can use the insert method
13:09 - for that
13:09 - so i'll replace this append and i'll say
13:12 - insert
13:13 - and because i want to insert it in the
13:15 - second position that means the index one
13:18 - and when i press run then now i can see
13:20 - that the rust
13:21 - programming language has been appended
13:23 - in the second position which is the
13:25 - index one
13:26 - now let's learn how to remove items from
13:28 - a list by removing c
13:30 - plus from our list using the remove
13:32 - method
13:34 - so i can just say languages dot remove
13:39 - c plus plus and now when i press run
13:42 - then i can see that
13:43 - c plus plus has been removed from the
13:44 - list
13:47 - sometimes you might have to create a
13:49 - copy of a list
13:50 - to copy a list we can use the list copy
13:53 - method
13:54 - so here i'll remove this old code and
13:56 - i'll say languages
13:58 - 1 equals languages dot copy
14:03 - and instead of languages if i print
14:04 - languages one then i can see that i get
14:07 - the same programming languages list that
14:09 - i had before
14:11 - the languages dot copy returns a new
14:14 - list and it is assigned to the languages
14:16 - one variable
14:18 - there are many more list methods readily
14:20 - available for use
14:21 - that make working with lists very easy
14:23 - you can find all the list methods and
14:25 - how they work with examples in our
14:27 - websiteprogrammings.com
14:28 - i will also include the link to the list
14:30 - methods page of our website
14:32 - in the video description now that we
14:34 - have covered lists
14:35 - let's talk about tuples or tuples as
14:37 - some people like to call them
14:39 - a tuple in python is similar to a list
14:42 - it's also an
14:43 - ordered collection of items the only
14:45 - difference between the two
14:46 - is that lists are mutable that is we can
14:49 - change elements of a list
14:50 - whereas tuples or tuples are immutables
14:53 - we cannot change the tuples elements
14:55 - to create a tuple we need to wrap items
14:58 - inside parentheses
14:59 - and these items should be separated by
15:01 - commas so let me create a new tuple i'll
15:03 - say
15:04 - numbers equals
15:08 - parenthesis 21
15:11 - 5 6
15:14 - and 9 and then i'll print the tuples
15:18 - as print numbers
15:21 - let me quickly run this and you can see
15:23 - that tuple is printed
15:25 - we can access elements from a tuple in a
15:27 - similar way we access elements from a
15:29 - list
15:30 - accessing elements from a tuple is
15:32 - possible as long as we do not try to
15:34 - change the value
15:35 - so here i'll say new numbers 2
15:39 - and when i press run then i get the
15:40 - element in the second index
15:42 - or the third element we can also perform
15:44 - slicing similar to list
15:46 - so here i can say 1
15:50 - colon 4 and when i press run
15:53 - then i get elements from index 1 to
15:56 - index 3
15:57 - which is the fourth element like in a
16:00 - list
16:00 - the first index is inclusive and the
16:02 - last index is exclusive
16:04 - we can also loop through a tuple using a
16:07 - loop so here i'll remove this whole code
16:09 - and i'll say for number in
16:12 - numbers and i can say print number
16:16 - now when i press run then i get all the
16:18 - numbers
16:19 - all the things that we have learnt till
16:20 - now about tuples is similar to that of
16:23 - lists
16:24 - now let's see how tuples are different
16:26 - from list as we have mentioned
16:28 - the difference between tuple and list is
16:30 - that the list can be changed
16:32 - but tuple cannot be changed let's see
16:34 - that in action
16:36 - i have this tuple that contains the same
16:38 - programming languages from before
16:41 - let's try to change its first element
16:43 - from python to java
16:44 - so here i'll say languages
16:49 - 0 equals java
16:53 - let me also print the languages
17:00 - here i'm trying to assign java to the
17:02 - first element
17:03 - let me run this code we get an error
17:05 - type error tuple
17:06 - object does not support item assignment
17:09 - this error message is telling us that we
17:11 - are trying to change an item of a tuple
17:14 - by assigning it a new value but it's not
17:16 - allowed with tuples
17:18 - we also cannot add and remove items from
17:20 - a tuple
17:21 - because unlike lists tuple doesn't have
17:24 - methods like append
17:25 - insert and remove so if we are sure that
17:28 - our sequence won't change till the end
17:30 - of the program
17:30 - it's better to use tuples instead of
17:32 - lists if you are interested
17:34 - you can find more information about
17:36 - tuples and tuple methods on our website
17:38 - programmings.com
17:39 - i'll include links to some relevant
17:42 - articles in the video description
17:44 - before we end this video here's a little
17:46 - task for you can you guess the output of
17:48 - this program that you see on your screen
17:50 - i'll give you a couple of seconds to
17:51 - pause the video
17:54 - as always you'll find the answer to this
17:56 - question in our github repository
17:58 - i'll also include this link in the
17:59 - description below
18:01 - we have covered a lot in this video
18:03 - let's have a quick recap of what we
18:05 - learned
18:05 - a list is a collection of ordered items
18:08 - to access individual items of a list
18:11 - we use indices python indexing starts at
18:13 - zero
18:14 - there is also a concept of negative
18:16 - indexing in python
18:18 - this is used to access elements from the
18:20 - last
18:21 - we can access a portion of a list by
18:23 - using the slicing operator column
18:25 - we can use loops to iterate through
18:27 - items of a list
18:29 - python has several useful methods that
18:31 - make it easier to add
18:33 - change insert and remove list elements
18:36 - finally we learned about tuples a tuple
18:39 - is similar to a list except tuples are
18:41 - immutable
18:42 - we cannot change elements of a tuple
18:45 - that's it for this video
18:46 - i hope you learned something if you're
18:48 - just watching the video without writing
18:49 - any code
18:50 - i highly encourage you to try the
18:51 - programs in this video on your own
18:53 - the only way you can be a good
18:54 - programmer is by trying
18:56 - by the way you can find all the programs
18:58 - from this video on github
18:59 - i have posted the link in the
19:01 - description below feel free to copy the
19:03 - programs and edit them as you please
19:05 - and if you have any questions and
19:06 - feedback use the comment section below
19:08 - in the next video we will learn about
19:10 - another collection data type
19:12 - strings in detail join me in this video
19:14 - series and let's explore the exciting
19:16 - world of programming together
19:17 - if you like this video hit the like
19:19 - button now and also don't forget to
19:21 - subscribe to our channel and ring that
19:22 - bell icon so that you don't miss the
19:24 - next video
19:24 - thanks for watching and i'll see you in
19:26 - the next one happy programming

Cleaned transcript:

what's up guys i'm puneet from programmers and welcome back to the series on python so far in this video series we have mostly used simple data types like int float and bool python also offers a range of compound data types that allow us to work with multiple items at once in this video we will learn about two compound data types lists and tuples lists in particular is one of the most commonly used and most versatile data types in python as you will see in this video so let's get started let's learn how to create a list we'll start with the list data type in python a list is a sequence of items in an order we create lists by placing items inside square brackets separated by commas now it's not necessary for a list to have all of the items of the same type like this we can also create a list having mixed data types and it may also contain duplicate elements let me show you so here i'll say mixed list and then i can say random list equals something like 2.5 let me add in a string called hello and say a negative integer like minus 5 and i can also repeat a number like 2.5 this list that i have stored in the random list variable has four items a float a string an integer and again the same float we can also create lists that do not have any items like this so here i can say empty list and i can say list one equals just the square brackets without any items in between and let me print it out to see what i get now when i press run then i can see that numbers list is printed having four elements and the list one is an empty list that's printed here since there are no items inside list one it's an empty list the size of an empty list is zero to check it we can use the builtin lend function let me remove the mixed list first and then i'll wrap the numbers list and the empty list list 1 to see what i get now when i press run then i get 4 and 0 which are the lengths of the numbers list and list 1 respectively now let's learn how to access list elements a list is a sequence and its items are always in order suppose we have a list of programming languages like this so i'll say languages equals python javascript c plus plus and kotlin now let me print the languages here i'll say print languages and when i press run then you can see that python javascript c plus plus and kotlin are printed so the first item in this languages list is python the second language is javascript the third one is c plus plus and the last one and the fourth one is kotlin we can access individual items of list by using something called index and it starts from 0 so the index of the first item is 0 of the second item is 1 of the third item is 2 and so on now suppose we want to get this first item python to get this item after the name of the list i will type square brackets and inside those square brackets i'll put 0 because i want to access the first element now when i run it then i get python similarly to get c plus plus we need to use index 2 because it's the third element of the list so i'll replace 0 by 2 because i want the third element and when i press run then this time i get c plus plus this languages list we have been working with has four items can you guess what will happen if we try to access the fifth item using four as an index why don't we try it in our code and see it for ourselves so i'll index i'll change index 2 to 4 and now when i press run then python tells me list index out of range this error message means that we are using an index that does not exist because the fifth item doesn't exist now let's talk about negative indexing in python we can also use negative indexing for sequences like lists using a negative index gives us items from the last so minus 1 gives us the last item minus 2 gives us the second last item and so on i have this languages list we have been working with on the screen let me change index to 1 and run it so here i'll say minus 1 and when i press run then i get kotlin which is the last item in the list similarly we can get javascript using 3 because it is the third element from the last now when i press run then i get javascript this time as you can see negative indexing is pretty useful when we need to access items from the last because we do not even need to know the size of the list before moving to the next section of the video i'd like to mention that the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easy to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below now let's learn about slicing of a list we learned to access an individual item from a list in the last two sections it's also possible to access a whole section of items from the list not just a single item let me give you an example i have the same code that we have been working with on my screen i'll remove the minus three index to access the third last item now let me access the first three items from the list so i'll use zero column three let me run this code this time i get the first three items of the list on the screen if you've been following along that means the items having index 0 1 and 2 were printed the thing you need to remember with slicing is that the first index is inclusive and the last index is exclusive so 0 colon 3 that means 0 column 3 will give me 0 1 and 2 index which are the first three elements of the list now let's try to get the second third and fourth items since the starting index is inclusive we need to use index 1 to get the second item and the end index is exclusive so we need to use 4 as the end index using 4 will give us items up to the index 3 which is technically the fourth item i'll press run and as expected the second third and fourth elements are printed to the screen let me tell you an interesting fact if we use the empty start index the slicing starts from the beginning of the list so here i'll try something like colon3 and when i press run then i get the first three elements this means that just leaving the first element open or empty is equivalent to putting zero in front so when i press run i get the same result as before similarly if we use the empty end index the slicing ends at the last index so here i'll remove this and i'll say i want to start from one and i don't know and and i want to go to the end so when i press run then the slicing starts from the one index and is it goes up to the end of the list that means kotlin should be included in the slice by the way we can also use negative indexes during slicing if you are interested you can check out our website programming.com to find more information about it now let's learn how to change items of a list lists in python are pretty dynamic it's super easy to add modify and delete items of a list the term we use for these kinds of changeable objects is mutable so we can say that lists are mutable objects let's see how we can change items of a list i'll start with the same programming languages list we have been working with now let me change the second element from javascript to ruby it's pretty easy in python to do that we just need to assign ruby to the second element like this so here i'll say languages 1 equals ruby and after this if i print languages and press run then now i can see that the second element which was javascript has now been changed to ruby if you don't know then ruby is a popular programming language we can also change the portion of the list in a single statement i'll modify the code i had written where i changed javascript to ruby but this time i will change the second and third item of the list in one go here i'll say languages 1 column 3 equals list of ruby and dart now when i press run here i have access the second and third items which are javascript and c plus plus using the slicing operator column and then modified them by putting the new values ruby and dart in their place that is why the elements that were in present in index 1 and 2 are now ruby and dart now let's learn about iterating through a list before we learn to iterate through a list let's learn about the in keyword the in keyword is used to check whether an item is in the list or not i have this languages list from before now let me check if python is in the list or not here i can say print python in languages the python in language statement prints true because python is in the languages list let me run this code now the python in languages statement prints true because python is indeed in the languages list let me change python to rust and run the code so here i'll say rust in languages and when i press run this time i get false because rust is not in the languages list this can be helpful when we want to check whether an item is present in a list or not we can use this as a test condition in an if statement for decision making we can perform one set of tasks if an item is in the list and another set of tasks if the item is not in the list if you want to get individual items of a list one by one the easiest way to get them is by using a for loop we've already discussed them in the previous videos but let me revise it again here i'll remove the print statement and i'll add a loop so i'll say for language in languages and then i'll say print language this for loop iterates through elements of the list one by one until the end of the list is reached i'll press run and as you can see all four programming languages are printed here one by one this language variable is python in the first iteration javascript in the second iteration and so on and that is what we have printed inside the body of the loop if you want to learn more about the for loop in detail check out our python for loop video the link will be in the description below now let's learn about list methods the reason lists are so versatile is because it's so easy to add change and remove elements from it suppose we have the same languages list we have been working on in this video now let's say we want to add an item to the list we can use the append method to do this this method is already available when we work with list let's say we want to add rust to our list we can just say languages dot append rust so remove this old code and i'll say languages dot append rust and now if i print languages and press run then you can see rust is also included in the languages list let's say instead of adding rust in the end we want to insert it in the second position we can use the insert method for that so i'll replace this append and i'll say insert and because i want to insert it in the second position that means the index one and when i press run then now i can see that the rust programming language has been appended in the second position which is the index one now let's learn how to remove items from a list by removing c plus from our list using the remove method so i can just say languages dot remove c plus plus and now when i press run then i can see that c plus plus has been removed from the list sometimes you might have to create a copy of a list to copy a list we can use the list copy method so here i'll remove this old code and i'll say languages 1 equals languages dot copy and instead of languages if i print languages one then i can see that i get the same programming languages list that i had before the languages dot copy returns a new list and it is assigned to the languages one variable there are many more list methods readily available for use that make working with lists very easy you can find all the list methods and how they work with examples in our websiteprogrammings.com i will also include the link to the list methods page of our website in the video description now that we have covered lists let's talk about tuples or tuples as some people like to call them a tuple in python is similar to a list it's also an ordered collection of items the only difference between the two is that lists are mutable that is we can change elements of a list whereas tuples or tuples are immutables we cannot change the tuples elements to create a tuple we need to wrap items inside parentheses and these items should be separated by commas so let me create a new tuple i'll say numbers equals parenthesis 21 5 6 and 9 and then i'll print the tuples as print numbers let me quickly run this and you can see that tuple is printed we can access elements from a tuple in a similar way we access elements from a list accessing elements from a tuple is possible as long as we do not try to change the value so here i'll say new numbers 2 and when i press run then i get the element in the second index or the third element we can also perform slicing similar to list so here i can say 1 colon 4 and when i press run then i get elements from index 1 to index 3 which is the fourth element like in a list the first index is inclusive and the last index is exclusive we can also loop through a tuple using a loop so here i'll remove this whole code and i'll say for number in numbers and i can say print number now when i press run then i get all the numbers all the things that we have learnt till now about tuples is similar to that of lists now let's see how tuples are different from list as we have mentioned the difference between tuple and list is that the list can be changed but tuple cannot be changed let's see that in action i have this tuple that contains the same programming languages from before let's try to change its first element from python to java so here i'll say languages 0 equals java let me also print the languages here i'm trying to assign java to the first element let me run this code we get an error type error tuple object does not support item assignment this error message is telling us that we are trying to change an item of a tuple by assigning it a new value but it's not allowed with tuples we also cannot add and remove items from a tuple because unlike lists tuple doesn't have methods like append insert and remove so if we are sure that our sequence won't change till the end of the program it's better to use tuples instead of lists if you are interested you can find more information about tuples and tuple methods on our website programmings.com i'll include links to some relevant articles in the video description before we end this video here's a little task for you can you guess the output of this program that you see on your screen i'll give you a couple of seconds to pause the video as always you'll find the answer to this question in our github repository i'll also include this link in the description below we have covered a lot in this video let's have a quick recap of what we learned a list is a collection of ordered items to access individual items of a list we use indices python indexing starts at zero there is also a concept of negative indexing in python this is used to access elements from the last we can access a portion of a list by using the slicing operator column we can use loops to iterate through items of a list python has several useful methods that make it easier to add change insert and remove list elements finally we learned about tuples a tuple is similar to a list except tuples are immutable we cannot change elements of a tuple that's it for this video i hope you learned something if you're just watching the video without writing any code i highly encourage you to try the programs in this video on your own the only way you can be a good programmer is by trying by the way you can find all the programs from this video on github i have posted the link in the description below feel free to copy the programs and edit them as you please and if you have any questions and feedback use the comment section below in the next video we will learn about another collection data type strings in detail join me in this video series and let's explore the exciting world of programming together if you like this video hit the like button now and also don't forget to subscribe to our channel and ring that bell icon so that you don't miss the next video thanks for watching and i'll see you in the next one happy programming
