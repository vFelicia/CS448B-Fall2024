With timestamps:

00:00 - what's up guys i'm punit from
00:01 - programmers and welcome back to this
00:03 - series on python
00:04 - in the previous video we learned about
00:06 - assignment operators to assign value to
00:08 - a variable
00:09 - we also learned arithmetic operators
00:11 - such as addition
00:12 - subtraction multiplication and so on to
00:15 - perform mathematical operations
00:17 - in this video we will cover comparison
00:19 - and logical operators
00:21 - that allow us to compare values and
00:23 - variables
00:29 - before we learn to use comparison
00:31 - operators we need to understand about
00:33 - booleans
00:34 - the boolean is a logical data type that
00:37 - represents
00:38 - one of two values either true or false
00:41 - let me give you an example quickly so on
00:43 - my compiler screen
00:44 - i'll say result 1 equals true
00:47 - and i'll say result 2 equals false
00:51 - then i can print result 1 and result 2
00:57 - now here we have assigned a boolean
00:59 - value true to result 1
01:01 - and a boolean value false to result 2.
01:04 - when we write true and false the first
01:06 - letter is always capitalized
01:09 - also make sure that you don't wrap true
01:10 - and false around with quotes
01:12 - otherwise they would be treated as
01:14 - strings now that we know about booleans
01:17 - let's learn about comparison operators
01:20 - python
01:20 - has a set of comparison operators that
01:22 - allow us to compare two values
01:25 - if the comparison is correct we get true
01:28 - and if the comparison is wrong
01:29 - we get false let me give you an example
01:32 - here
01:33 - the less than symbol is a comparison
01:35 - operator
01:36 - that is comparing the number variable
01:38 - and the integer 10.
01:40 - since the value stored in the number
01:42 - variable is 5 the expression
01:44 - number less than 10 is true and when i
01:47 - press run
01:48 - you can see that it indeed prints true
01:51 - if you change number to 15
01:53 - then the story is different so here i'll
01:55 - say number equals 15
01:56 - and when i press run this time i get
01:59 - false because 15 less than 10
02:01 - is obviously false printing these
02:04 - boolean expressions like this has little
02:06 - to no use
02:07 - in the next video we will learn about
02:09 - the if statement that makes use of these
02:11 - boolean expressions
02:12 - and which allows us to run different
02:14 - codes depending upon
02:15 - whether a boolean expression is true or
02:17 - false however
02:19 - for the sake of this video we will focus
02:21 - on comparison operators
02:23 - before moving to the next section of the
02:24 - video i'd like to mention that the
02:26 - program is team has created an
02:28 - app that allows you to learn python from
02:29 - your phone the app contains bit size
02:32 - lessons that are easy to understand
02:34 - a built-in interpreter so that you can
02:35 - run python on your phone
02:37 - quizzes and many more features the app
02:39 - is available on both ios and android the
02:42 - links are in the video description below
02:44 - back to comparison operators let me copy
02:47 - of list of
02:48 - all comparison operators in our text
02:49 - editor so that it's easier for
02:52 - us to use them so here i'll remove the
02:54 - old code and i'll paste the comparison
02:56 - operators
02:59 - we have already used the less than
03:00 - operator
03:02 - let's try these comparison operators one
03:04 - by one
03:05 - i will start with the greater than
03:07 - operator so here
03:08 - i'll say number equals 15
03:12 - and i'll say print number
03:15 - greater than 10. when i run it
03:18 - this gives true because number which is
03:21 - 15 is obviously greater than 10 here
03:25 - now if i change the number to 10 and run
03:28 - this again
03:29 - then this time i get false because 10
03:32 - greater than 10 is false now let's see
03:36 - equal to and not equal to operators the
03:39 - equal to operator gives true
03:40 - if two values are equal so i can say
03:43 - number
03:44 - equals 10 and i can replace this and say
03:47 - number
03:48 - equals equals 10 so when i press run
03:50 - this time i get true
03:52 - because 10 and 10 are equal
03:56 - comparing a floating point value and an
03:58 - integer value which are equal
04:00 - also gives us true so here i can replace
04:02 - this by 10.0
04:04 - and when i press run i still get true
04:07 - however the comparison of integer 10 and
04:10 - a string 10 gives us false
04:12 - so here let me replace this by the
04:15 - string 10
04:17 - and then this time when i press run i
04:20 - get false
04:22 - the not equal to operator is the
04:24 - opposite of the equal to operator
04:26 - if i change equal to to not equal to
04:28 - here
04:29 - then this time i'll get true because the
04:32 - string 10
04:33 - is not equal to the integer 10.
04:36 - the last two comparison operators are
04:38 - less than or equal to
04:40 - and greater than or equal to let's try
04:42 - them in action
04:43 - so i'll replace this code with 10 and
04:46 - then here i'll say
04:47 - number less than equals to 10. the
04:50 - expression
04:50 - number less than equals to 10 returns
04:52 - true if
04:53 - either number is less than 10 or equal
04:56 - to 10
04:57 - it combines two operators less than and
05:00 - equal to into one
05:02 - now i'll run the code and it returns
05:04 - true because number is equal to 10
05:06 - and that also counts similarly there is
05:09 - also the greater than or equals to
05:11 - operator
05:11 - so here i could have done greater than
05:13 - equal to and when i press
05:14 - run this also works or this also returns
05:17 - true
05:17 - because of this equal to number equals
05:20 - equals 10 is true
05:21 - and that's why this is true now i could
05:23 - have changed this to something like 12
05:25 - and this would still be true because
05:27 - number greater than 10
05:28 - is true in that case
05:33 - python also has three logical operators
05:35 - and or and not
05:37 - for your convenience i have added here
05:39 - the list of all the logical operators
05:41 - and what they do
05:42 - let's start with the and operator i'll
05:44 - create three variables
05:46 - age equals 822
05:49 - gpa equals 3.8 and then i'll say a third
05:53 - variable result
05:54 - equals a is greater than equals 18
05:57 - and gpa greater than 3.6
06:01 - here the and operator is telling me that
06:04 - the boolean expression
06:05 - age greater than equals 18 and gpa
06:07 - greater than 3.6
06:09 - both have to be true for this overall
06:11 - expression to be true
06:13 - now let me print the result here and
06:15 - when i press run
06:17 - i get true this is because both of these
06:19 - expressions are true
06:21 - now let me show you how the and
06:23 - operation works by making the second
06:25 - condition false
06:26 - so here i'll change this to 3.9 and when
06:29 - i press
06:29 - run this time i get false this is
06:32 - because
06:32 - as i explained before both of the
06:34 - expressions have to be true
06:36 - the fact that the first expression is
06:37 - still true doesn't matter because the
06:39 - second expression is false
06:40 - and my result is now false
06:44 - now let's see the or operator i'll
06:46 - replace and with or in this
06:48 - code this code means that if
06:51 - either this expression is true or this
06:53 - expression is true
06:54 - the overall expression should be true
06:57 - now when i press
06:58 - run i get true because although the
07:00 - second part of the expression is false
07:03 - the age greater than equals 18 is true
07:05 - and that is enough for the whole
07:06 - expression to be true
07:08 - of course both of these can be true and
07:10 - the result will always be true
07:11 - so i can say 3.6 greater than 3.6
07:16 - and when i press run the overall
07:18 - expression is true because both of them
07:20 - are true and the final logical operator
07:24 - is
07:24 - not the not operator gives the
07:26 - complement of the result
07:27 - for example i'll replace all this code
07:29 - and i'll say result equals true
07:32 - and print result this time when i press
07:34 - run
07:35 - i get true but i can do not result
07:38 - and this time when i press run then i
07:40 - get false
07:42 - i can also do the reverse i can say
07:44 - result equals false
07:46 - and when i press run i get true because
07:48 - this result was false
07:50 - now result would also have been a
07:52 - boolean expression like age
07:54 - less than equals to 18 and then i
07:57 - obviously i need an age variable 14 now
08:00 - when i press run
08:01 - then i get false because this expression
08:04 - is true
08:04 - and the not operator negates that result
08:08 - we've covered all the basics of
08:09 - comparison and logical operators at this
08:11 - point
08:12 - we'll be using these operators
08:14 - especially comparison operators
08:16 - extensively to create some interesting
08:17 - programs in the next few videos
08:19 - before we end this video here's a task
08:21 - for you can you guess the output of this
08:23 - program
08:24 - i'll give you a couple of seconds to
08:25 - pause the video and reflect on it
08:28 - as always you'll find the answer to the
08:31 - question in our github repository
08:32 - i've also included the link in the
08:34 - description below before we end this
08:36 - video
08:37 - here's a recap of what we learned the
08:39 - boolean is a logical data type
08:41 - that represents one of two values either
08:43 - true or false
08:44 - the comparison operators are used to
08:46 - compare two values
08:48 - if the comparison is right we get true
08:50 - and if the comparison is wrong
08:52 - we get false the logical operators are
08:55 - used on booleans
08:56 - there are three logical operators and or
08:59 - and not
09:00 - that's it for this video i hope you
09:02 - learned something if you're just
09:03 - watching the video without writing any
09:05 - code
09:05 - i highly encourage you to try the
09:07 - programs in this video on your own
09:09 - the only way you can be a good
09:10 - programmer is by trying by the way
09:12 - you can find all the programs from this
09:14 - video on github i posted the link in the
09:16 - description below
09:17 - feel free to copy the programs and edit
09:19 - them on as you please
09:20 - and if you have any questions and
09:22 - feedback use the comment section below
09:24 - join me in this video series and let's
09:26 - explore the exciting world of
09:27 - programming together
09:28 - if you like this video hit the like
09:30 - button now and also don't forget to
09:32 - subscribe to our channel
09:33 - and ring that bell icon so that you
09:35 - don't miss the next video in the next
09:37 - video
09:37 - we will learn about decision making in
09:39 - programming using the if statement
09:41 - that's where things get really
09:43 - interesting in programming
09:44 - thanks for watching and i'll see you in
09:46 - the next one happy programming

Cleaned transcript:

what's up guys i'm punit from programmers and welcome back to this series on python in the previous video we learned about assignment operators to assign value to a variable we also learned arithmetic operators such as addition subtraction multiplication and so on to perform mathematical operations in this video we will cover comparison and logical operators that allow us to compare values and variables before we learn to use comparison operators we need to understand about booleans the boolean is a logical data type that represents one of two values either true or false let me give you an example quickly so on my compiler screen i'll say result 1 equals true and i'll say result 2 equals false then i can print result 1 and result 2 now here we have assigned a boolean value true to result 1 and a boolean value false to result 2. when we write true and false the first letter is always capitalized also make sure that you don't wrap true and false around with quotes otherwise they would be treated as strings now that we know about booleans let's learn about comparison operators python has a set of comparison operators that allow us to compare two values if the comparison is correct we get true and if the comparison is wrong we get false let me give you an example here the less than symbol is a comparison operator that is comparing the number variable and the integer 10. since the value stored in the number variable is 5 the expression number less than 10 is true and when i press run you can see that it indeed prints true if you change number to 15 then the story is different so here i'll say number equals 15 and when i press run this time i get false because 15 less than 10 is obviously false printing these boolean expressions like this has little to no use in the next video we will learn about the if statement that makes use of these boolean expressions and which allows us to run different codes depending upon whether a boolean expression is true or false however for the sake of this video we will focus on comparison operators before moving to the next section of the video i'd like to mention that the program is team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easy to understand a builtin interpreter so that you can run python on your phone quizzes and many more features the app is available on both ios and android the links are in the video description below back to comparison operators let me copy of list of all comparison operators in our text editor so that it's easier for us to use them so here i'll remove the old code and i'll paste the comparison operators we have already used the less than operator let's try these comparison operators one by one i will start with the greater than operator so here i'll say number equals 15 and i'll say print number greater than 10. when i run it this gives true because number which is 15 is obviously greater than 10 here now if i change the number to 10 and run this again then this time i get false because 10 greater than 10 is false now let's see equal to and not equal to operators the equal to operator gives true if two values are equal so i can say number equals 10 and i can replace this and say number equals equals 10 so when i press run this time i get true because 10 and 10 are equal comparing a floating point value and an integer value which are equal also gives us true so here i can replace this by 10.0 and when i press run i still get true however the comparison of integer 10 and a string 10 gives us false so here let me replace this by the string 10 and then this time when i press run i get false the not equal to operator is the opposite of the equal to operator if i change equal to to not equal to here then this time i'll get true because the string 10 is not equal to the integer 10. the last two comparison operators are less than or equal to and greater than or equal to let's try them in action so i'll replace this code with 10 and then here i'll say number less than equals to 10. the expression number less than equals to 10 returns true if either number is less than 10 or equal to 10 it combines two operators less than and equal to into one now i'll run the code and it returns true because number is equal to 10 and that also counts similarly there is also the greater than or equals to operator so here i could have done greater than equal to and when i press run this also works or this also returns true because of this equal to number equals equals 10 is true and that's why this is true now i could have changed this to something like 12 and this would still be true because number greater than 10 is true in that case python also has three logical operators and or and not for your convenience i have added here the list of all the logical operators and what they do let's start with the and operator i'll create three variables age equals 822 gpa equals 3.8 and then i'll say a third variable result equals a is greater than equals 18 and gpa greater than 3.6 here the and operator is telling me that the boolean expression age greater than equals 18 and gpa greater than 3.6 both have to be true for this overall expression to be true now let me print the result here and when i press run i get true this is because both of these expressions are true now let me show you how the and operation works by making the second condition false so here i'll change this to 3.9 and when i press run this time i get false this is because as i explained before both of the expressions have to be true the fact that the first expression is still true doesn't matter because the second expression is false and my result is now false now let's see the or operator i'll replace and with or in this code this code means that if either this expression is true or this expression is true the overall expression should be true now when i press run i get true because although the second part of the expression is false the age greater than equals 18 is true and that is enough for the whole expression to be true of course both of these can be true and the result will always be true so i can say 3.6 greater than 3.6 and when i press run the overall expression is true because both of them are true and the final logical operator is not the not operator gives the complement of the result for example i'll replace all this code and i'll say result equals true and print result this time when i press run i get true but i can do not result and this time when i press run then i get false i can also do the reverse i can say result equals false and when i press run i get true because this result was false now result would also have been a boolean expression like age less than equals to 18 and then i obviously i need an age variable 14 now when i press run then i get false because this expression is true and the not operator negates that result we've covered all the basics of comparison and logical operators at this point we'll be using these operators especially comparison operators extensively to create some interesting programs in the next few videos before we end this video here's a task for you can you guess the output of this program i'll give you a couple of seconds to pause the video and reflect on it as always you'll find the answer to the question in our github repository i've also included the link in the description below before we end this video here's a recap of what we learned the boolean is a logical data type that represents one of two values either true or false the comparison operators are used to compare two values if the comparison is right we get true and if the comparison is wrong we get false the logical operators are used on booleans there are three logical operators and or and not that's it for this video i hope you learned something if you're just watching the video without writing any code i highly encourage you to try the programs in this video on your own the only way you can be a good programmer is by trying by the way you can find all the programs from this video on github i posted the link in the description below feel free to copy the programs and edit them on as you please and if you have any questions and feedback use the comment section below join me in this video series and let's explore the exciting world of programming together if you like this video hit the like button now and also don't forget to subscribe to our channel and ring that bell icon so that you don't miss the next video in the next video we will learn about decision making in programming using the if statement that's where things get really interesting in programming thanks for watching and i'll see you in the next one happy programming
