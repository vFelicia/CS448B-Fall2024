With timestamps:

00:00 - we all know about files they are named
00:02 - locations on our storage device
00:03 - for recording data python provides
00:06 - numerous built-in functions
00:07 - to work with these files in this video
00:10 - we will see how we can perform various
00:11 - file operations
00:12 - such as reading and writing into files
00:15 - with the help of examples
00:16 - so let's get started
00:21 - there are three steps we need to follow
00:22 - to work with files first
00:24 - open a file second perform the
00:27 - operations such as
00:28 - read content from the file or write data
00:30 - to the file third
00:31 - close the file now let's cover each of
00:33 - these topics in detail
00:36 - in python we use the built-in open
00:38 - function to open files
00:40 - here i have a file named message.txt and
00:43 - inside it i have two lines of text i
00:46 - love programming
00:46 - and i love programmers to open this file
00:49 - i will create a new python file in the
00:51 - same directory
00:52 - and call it main dot pi
00:56 - so here i'll type f equals
00:59 - open message.txt
01:04 - here message.txt is the location of the
01:07 - file
01:08 - if this file was in another directory we
01:10 - would also need to specify the path to
01:12 - this file
01:13 - and this open function is opening the
01:15 - file which returns a file object which
01:18 - is stored
01:19 - in the variable f this file object will
01:22 - be used to perform
01:23 - file operations by default the file will
01:26 - be opened in the read mode
01:28 - meaning we can read contents from the
01:30 - file but we can't modify it
01:32 - instead of this we could also have
01:34 - explicitly specified the file to be
01:36 - opened in the read mode
01:37 - by passing a second argument like this
01:40 - so here
01:41 - i'll add a second argument and say r
01:45 - here r means open the file in read mode
01:49 - similarly if you want to write contents
01:51 - to a file we should open the file in
01:53 - write mode
01:54 - by using w like this so i'll remove this
01:56 - r and i'll write w
01:58 - and this means that i'm opening the file
02:00 - in right mode
02:01 - these are called file modes the mode in
02:03 - which the file is opened
02:05 - and there are three commonly used modes
02:07 - in which we can open a file
02:09 - r for reading contents of the file w for
02:12 - writing contents for to the file
02:14 - and a for appending more content to the
02:16 - end of the file
02:17 - now we know how to open a file next we
02:20 - will see how we can read the contents of
02:21 - the file
02:24 - after we open a file like this we can
02:26 - read its contents using the built-in
02:28 - read method so in my code editor
02:30 - i'll say content equals f
02:33 - dot read and then i'll print the content
02:38 - first i have opened the file in read
02:40 - mode this statement returns a file
02:42 - object
02:43 - then using the object we read the entire
02:45 - content of the file
02:46 - and print it before we see the output of
02:49 - this code i will add a line to close the
02:51 - file
02:52 - so here i'll say f dot close
02:55 - we should always close the file after
02:56 - working with them it's a good
02:58 - programming practice
02:59 - now let me run this code so let me hide
03:01 - the explorer
03:02 - open the terminal and here i'll say
03:05 - python
03:07 - main dot pi and you can see
03:10 - that the contents of the file
03:12 - message.txt were printed
03:16 - it's also possible to read only a
03:18 - certain number of characters from a file
03:20 - using the same read method for this we
03:23 - pass an optional
03:24 - size argument let me read only the first
03:26 - characters from the file
03:28 - so here i'll say f dot read 6
03:31 - let me save this file and when i run it
03:33 - you can see
03:34 - that only the first six characters of
03:36 - the file were printed
03:39 - now if you read the same file again it
03:41 - starts reading from the seventh
03:42 - character
03:43 - because we have already read up to the
03:45 - sixth character let me show you how that
03:47 - works
03:48 - let me modify this program to read the
03:50 - next characters
03:51 - so here i'll say more underscore content
03:54 - equals f dot read 12
03:57 - and i'll print more content
04:00 - let me save this and when i run python
04:03 - main dot pi again
04:04 - you can see that programming was also
04:07 - printed
04:09 - so let's try to see what happened here
04:11 - the first read statement or the f dot
04:13 - read
04:14 - six is giving us the first six
04:16 - characters
04:17 - i love and the second read
04:20 - which is more content equals f.12
04:24 - is giving us the next 12 characters and
04:26 - which is programming
04:31 - we might encounter unexpected errors
04:33 - while working with external files
04:35 - so it's a good practice to open the
04:37 - files using try final statement
04:39 - let me show you how so in my code editor
04:41 - i'll make a few changes
04:43 - here i'll put this inside a try block
04:47 - all of this will go inside the try block
04:50 - and i will put the f
04:52 - dot close inside a finally block
04:56 - here we are adding try and finally
04:58 - blocks because now
04:59 - even if our program encounters an error
05:02 - our file will be closed
05:04 - this is because the finally block always
05:06 - gets executed
05:07 - there's even a better way to write this
05:09 - same code in python
05:10 - using the with open syntax let me show
05:13 - you how
05:14 - so here i'll remove the try block and
05:16 - i'll say width
05:18 - open as f i'll remove this finally code
05:24 - now when i run this code i'll say python
05:27 - main.pi
05:29 - which should have been with i'll save
05:32 - this
05:33 - and i'll just run python main.pi this
05:36 - again seems to be an error
05:37 - i forgot the column at the end again let
05:40 - me
05:41 - try this once so python main dot pi and
05:44 - as you can see
05:45 - i got the same output but using the
05:47 - width syntax
05:48 - automatically closes the file without us
05:50 - having to write the finally ourselves
05:54 - by the way if you're finding this video
05:56 - useful a sub to the channel would be
05:58 - tremendous
06:01 - to write content to a file we must first
06:03 - open it in write mode
06:04 - then we can start writing content to it
06:06 - using the right method
06:08 - there are two things you need to
06:09 - remember while writing to a file
06:11 - if you try to open a file that doesn't
06:13 - exist a new file is automatically
06:15 - created
06:16 - if a file already exists its contents
06:18 - are removed and our new content is added
06:20 - to it
06:21 - first let me write to a file that
06:23 - doesn't exist so here
06:24 - in my code editor i'll say with open
06:29 - python dot txt
06:34 - and in write mode
06:37 - as f i'll say f dot
06:40 - write python is
06:43 - awesome and in the next line i'll write
06:46 - f dot write
06:48 - i love python i'll save this
06:52 - and let me run it when i run the code
06:56 - a python.txt file is created with the
06:59 - content python is awesome
07:00 - i love python here both the strings are
07:03 - in the same line
07:05 - we can change that by adding slash n to
07:07 - specify a new line character
07:09 - so here i'll go back to my main dot pi
07:11 - and i'll say python is awesome
07:13 - slash n now let me open up my terminal
07:16 - and run the code again
07:18 - so i'll say python main dot pi
07:21 - and if i go to if i open the
07:26 - now if i open the python.txt file you
07:28 - can see that python is awesome and i
07:30 - love python are on separate lines
07:33 - notice that while running the program
07:34 - for the second time the python.txt file
07:37 - was already there
07:38 - since opening an existing file in write
07:40 - mode will overwrite the file
07:42 - all the previous data was erased and new
07:44 - content was written to it
07:45 - so you have to be very careful while
07:47 - using the right mode because you may
07:49 - accidentally erase the old data without
07:51 - realizing it
07:52 - before moving to the next section of the
07:53 - video the programmers team has created
07:55 - an app
07:56 - that allows you to learn python from
07:57 - your phone the app contains bit size
07:59 - lessons that are easier to understand
08:01 - a built-in interpreter so that you can
08:02 - run python from your phone quizzes and
08:04 - many more
08:05 - the app is available on both ios and
08:07 - android the links are in the video
08:10 - description
08:12 - the final file mode that we will discuss
08:14 - in this video is append
08:16 - as suggested by the name we use this
08:18 - only if you want to add additional data
08:20 - to the end of the file without erasing
08:22 - our previous data
08:23 - at the moment our python.txt file looks
08:26 - like this
08:27 - let me add an additional line to this
08:29 - file and in main dot file
08:31 - i'll open this in append mode and here
08:34 - i'll write f dot write i'll write
08:39 - python is my
08:43 - favorite programming language
08:49 - here i have used a to specify
08:52 - that i want to append to the python.txt
08:55 - file
08:57 - then i have used the same write method
08:59 - to write new lines to the existing file
09:02 - let me run this code so let me hide this
09:04 - here open up my terminal
09:06 - and here i'll say python
09:09 - main.pi and after running it if i open
09:12 - my python.txt then
09:15 - you can see that python is my favorite
09:17 - programming language has been appended
09:19 - to the end of the file
09:23 - the readlines method returns a list
09:25 - containing each line of the file
09:27 - let's open the same python.txt file we
09:29 - have been working with on read mode
09:31 - but this time i will use the redlines
09:33 - method i'll remove this old code first
09:35 - let me change the
09:36 - mode to read and then i'll remove this
09:39 - old code
09:40 - i'll say lines equals
09:43 - f dot read lines and let me print lines
09:46 - to see what i get
09:48 - now i'll save this let me run the code
09:51 - so i'll say python
09:52 - main dot pi and you can see that i get a
09:56 - list of the lines that are inside the
09:58 - python.txt file
10:01 - now if i want i can use a for loop to
10:03 - iterate through the list
10:04 - to get each line one by one similarly
10:08 - there is also a write lines method to
10:10 - write multiple items into a file
10:12 - it writes the items of a list to the
10:13 - file so i'll go to my code editor
10:15 - i'll remove this old code and instead of
10:18 - python.txt
10:19 - i'll say javascript.txt let me open this
10:22 - in
10:22 - write mode so inside this block i'll say
10:25 - lines
10:26 - equals js is
10:29 - also awesome and in the second item i'll
10:33 - say
10:34 - slash n js is my
10:37 - second favorite programming
10:41 - language now i'll say
10:44 - f dot write lines lines
10:48 - i hope you must have guessed the output
10:50 - by now but let me show you anyways so
10:52 - i'll do python
10:54 - main dot pi and when i press enter
10:57 - then if i let me close my terminal i'll
10:59 - go back to my explorer
11:01 - and you can see that a file called
11:03 - javascript.txt
11:04 - with the two lines js is also awesome
11:07 - and js is my
11:08 - second favorite programming language has
11:10 - been created
11:11 - at this point we have covered pretty
11:13 - much everything we need to know about
11:14 - file handling in python
11:16 - by the way there are many other built-in
11:18 - methods and file modes available to file
11:20 - objects
11:20 - if you're interested you can find more
11:22 - information about it on our website
11:24 - programmies.com
11:25 - the link will be in the video
11:26 - description that's it for this video
11:28 - if you want to revise this concept you
11:29 - can find all these programs in our
11:31 - github repository
11:32 - i'll also put this link in the video
11:34 - description and if you like this video
11:36 - hit that like button and subscribe to
11:37 - the channel and i'll see you in the next
11:39 - one
11:39 - happy programming

Cleaned transcript:

we all know about files they are named locations on our storage device for recording data python provides numerous builtin functions to work with these files in this video we will see how we can perform various file operations such as reading and writing into files with the help of examples so let's get started there are three steps we need to follow to work with files first open a file second perform the operations such as read content from the file or write data to the file third close the file now let's cover each of these topics in detail in python we use the builtin open function to open files here i have a file named message.txt and inside it i have two lines of text i love programming and i love programmers to open this file i will create a new python file in the same directory and call it main dot pi so here i'll type f equals open message.txt here message.txt is the location of the file if this file was in another directory we would also need to specify the path to this file and this open function is opening the file which returns a file object which is stored in the variable f this file object will be used to perform file operations by default the file will be opened in the read mode meaning we can read contents from the file but we can't modify it instead of this we could also have explicitly specified the file to be opened in the read mode by passing a second argument like this so here i'll add a second argument and say r here r means open the file in read mode similarly if you want to write contents to a file we should open the file in write mode by using w like this so i'll remove this r and i'll write w and this means that i'm opening the file in right mode these are called file modes the mode in which the file is opened and there are three commonly used modes in which we can open a file r for reading contents of the file w for writing contents for to the file and a for appending more content to the end of the file now we know how to open a file next we will see how we can read the contents of the file after we open a file like this we can read its contents using the builtin read method so in my code editor i'll say content equals f dot read and then i'll print the content first i have opened the file in read mode this statement returns a file object then using the object we read the entire content of the file and print it before we see the output of this code i will add a line to close the file so here i'll say f dot close we should always close the file after working with them it's a good programming practice now let me run this code so let me hide the explorer open the terminal and here i'll say python main dot pi and you can see that the contents of the file message.txt were printed it's also possible to read only a certain number of characters from a file using the same read method for this we pass an optional size argument let me read only the first characters from the file so here i'll say f dot read 6 let me save this file and when i run it you can see that only the first six characters of the file were printed now if you read the same file again it starts reading from the seventh character because we have already read up to the sixth character let me show you how that works let me modify this program to read the next characters so here i'll say more underscore content equals f dot read 12 and i'll print more content let me save this and when i run python main dot pi again you can see that programming was also printed so let's try to see what happened here the first read statement or the f dot read six is giving us the first six characters i love and the second read which is more content equals f.12 is giving us the next 12 characters and which is programming we might encounter unexpected errors while working with external files so it's a good practice to open the files using try final statement let me show you how so in my code editor i'll make a few changes here i'll put this inside a try block all of this will go inside the try block and i will put the f dot close inside a finally block here we are adding try and finally blocks because now even if our program encounters an error our file will be closed this is because the finally block always gets executed there's even a better way to write this same code in python using the with open syntax let me show you how so here i'll remove the try block and i'll say width open as f i'll remove this finally code now when i run this code i'll say python main.pi which should have been with i'll save this and i'll just run python main.pi this again seems to be an error i forgot the column at the end again let me try this once so python main dot pi and as you can see i got the same output but using the width syntax automatically closes the file without us having to write the finally ourselves by the way if you're finding this video useful a sub to the channel would be tremendous to write content to a file we must first open it in write mode then we can start writing content to it using the right method there are two things you need to remember while writing to a file if you try to open a file that doesn't exist a new file is automatically created if a file already exists its contents are removed and our new content is added to it first let me write to a file that doesn't exist so here in my code editor i'll say with open python dot txt and in write mode as f i'll say f dot write python is awesome and in the next line i'll write f dot write i love python i'll save this and let me run it when i run the code a python.txt file is created with the content python is awesome i love python here both the strings are in the same line we can change that by adding slash n to specify a new line character so here i'll go back to my main dot pi and i'll say python is awesome slash n now let me open up my terminal and run the code again so i'll say python main dot pi and if i go to if i open the now if i open the python.txt file you can see that python is awesome and i love python are on separate lines notice that while running the program for the second time the python.txt file was already there since opening an existing file in write mode will overwrite the file all the previous data was erased and new content was written to it so you have to be very careful while using the right mode because you may accidentally erase the old data without realizing it before moving to the next section of the video the programmers team has created an app that allows you to learn python from your phone the app contains bit size lessons that are easier to understand a builtin interpreter so that you can run python from your phone quizzes and many more the app is available on both ios and android the links are in the video description the final file mode that we will discuss in this video is append as suggested by the name we use this only if you want to add additional data to the end of the file without erasing our previous data at the moment our python.txt file looks like this let me add an additional line to this file and in main dot file i'll open this in append mode and here i'll write f dot write i'll write python is my favorite programming language here i have used a to specify that i want to append to the python.txt file then i have used the same write method to write new lines to the existing file let me run this code so let me hide this here open up my terminal and here i'll say python main.pi and after running it if i open my python.txt then you can see that python is my favorite programming language has been appended to the end of the file the readlines method returns a list containing each line of the file let's open the same python.txt file we have been working with on read mode but this time i will use the redlines method i'll remove this old code first let me change the mode to read and then i'll remove this old code i'll say lines equals f dot read lines and let me print lines to see what i get now i'll save this let me run the code so i'll say python main dot pi and you can see that i get a list of the lines that are inside the python.txt file now if i want i can use a for loop to iterate through the list to get each line one by one similarly there is also a write lines method to write multiple items into a file it writes the items of a list to the file so i'll go to my code editor i'll remove this old code and instead of python.txt i'll say javascript.txt let me open this in write mode so inside this block i'll say lines equals js is also awesome and in the second item i'll say slash n js is my second favorite programming language now i'll say f dot write lines lines i hope you must have guessed the output by now but let me show you anyways so i'll do python main dot pi and when i press enter then if i let me close my terminal i'll go back to my explorer and you can see that a file called javascript.txt with the two lines js is also awesome and js is my second favorite programming language has been created at this point we have covered pretty much everything we need to know about file handling in python by the way there are many other builtin methods and file modes available to file objects if you're interested you can find more information about it on our website programmies.com the link will be in the video description that's it for this video if you want to revise this concept you can find all these programs in our github repository i'll also put this link in the video description and if you like this video hit that like button and subscribe to the channel and i'll see you in the next one happy programming
