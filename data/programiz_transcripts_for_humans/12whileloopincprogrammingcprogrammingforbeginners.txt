With timestamps:

00:00 - hey guys this is me padma from
00:01 - programmies and welcome back to this
00:03 - series on c programming in this video
00:05 - we'll learn about while loop to repeat a
00:07 - block of good for multiple times we'll
00:10 - also learn about do while loop in c so
00:12 - let's get started
00:17 - in programming loops are used to repeat
00:19 - a block of code a certain number of
00:21 - times suppose we want to show a
00:23 - particular message hundred times instead
00:25 - of writing the same message hundred
00:27 - times we can write the message once and
00:29 - use the loop to display the message
00:30 - hundred times let's start with the
00:32 - syntax of while loop a while loop starts
00:34 - with the while keyword followed by the
00:36 - condition inside the parenthesis
00:39 - here the condition is a boolean
00:40 - expression that returns either true or
00:43 - false if the condition is true then the
00:45 - statement inside the while loop are
00:47 - executed then the condition is evaluated
00:50 - again and if the condition is true again
00:53 - then the statement inside the while loop
00:55 - is executed
00:56 - this process continues and the while
00:58 - loop is executed on and on until the
01:01 - test condition becomes false
01:03 - if the condition is false then the while
01:05 - loop is terminated and the body of the
01:08 - loop is skipped
01:09 - let's see an example i'll remove this
01:11 - old code and by now you must be familiar
01:14 - with the basic structure of c program so
01:18 - i'll
01:19 - write the basic structure of c program
01:21 - here
01:26 - now you can see the basic structure of c
01:28 - program
01:30 - now i'll create the while loop
01:32 - with the condition
01:34 - 1 is less than 5
01:38 - and inside the while loop i'll print the
01:40 - message
01:43 - while loop
01:46 - in c
01:51 - so
01:52 - here the condition 1 is less than 5 is
01:54 - true so the statement inside the while
01:56 - loop will be executed then the condition
01:59 - 1 is less than 5 is checked again this
02:02 - time as well the condition is true so
02:04 - the statement inside the loop will be
02:06 - executed again here 1 is always less
02:09 - than 5 so the condition is never false
02:11 - hence the while loop will be executed
02:14 - infinitely until the memory runs out
02:16 - this is called an infinite while loop
02:19 - now let's run this code so you can see
02:23 - the statement while loop in c is printed
02:26 - until the memory runs out and to avoid
02:28 - this infinite while loop we need to make
02:30 - sure that our condition becomes false at
02:33 - some point
02:34 - so i'll create a in variable
02:37 - count
02:39 - and assign value 1 to this
02:42 - now in the condition instead of 1 i'll
02:44 - write here count so the condition
02:46 - becomes count is less than 5
02:49 - and inside the while loop i'll increase
02:51 - the value of count by 1 so count equals
02:54 - to count plus
02:56 - 1
02:57 - so this value of count will increase in
03:00 - each iteration now this line of code
03:02 - increases the value of count in each
03:04 - iteration and ultimately the value of
03:06 - count becomes 5 so
03:09 - our condition becomes
03:11 - 5 is less than 5 which is false
03:14 - and it will terminate our loop so let's
03:17 - run this code you can see the message
03:19 - while loop in c is printed four times
03:21 - let's see what's happening here
03:23 - initially the value of count is one so
03:26 - the condition
03:27 - count is less than five is true so the
03:29 - text while loop in c is printed on the
03:32 - screen
03:33 - now the value of count becomes 2 and
03:36 - again the condition is evaluated this
03:39 - time as well the condition is true so
03:41 - again while loop in c is printed on on
03:44 - the screen
03:45 - now the value of count is increased to 3
03:47 - in this way the value of count keeps
03:49 - increasing in each iteration and after
03:52 - the fourth iteration the value of count
03:54 - becomes 5. this time this condition
03:56 - count less than 5 becomes 5 is less than
03:59 - 5 which is false so the loop terminates
04:01 - and hence the text is printed 4 times
04:05 - we can also print the count variable to
04:07 - see the subsequent increment of count
04:09 - variable let me show you here inside the
04:12 - loop i'll add print statement
04:16 - and i'll print the value of count so
04:19 - count
04:21 - equals
04:22 - percent d
04:24 - comma
04:25 - count
04:26 - and we need to add here backs this n so
04:29 - that it will be printed on the different
04:31 - lines so let's run this code
04:33 - as you can see the value of count is
04:36 - increasing in each iteration
04:39 - by the way if you are watching this
04:40 - there is a good chance you want to
04:42 - improve your skills in c programming
04:44 - lucky for you we have a mobile app that
04:46 - provides a well-structured c programming
04:48 - course with certification at the end and
04:50 - you can use the app alongside the video
04:52 - to practice on the built-in compiler our
04:54 - course is free so download now by
04:56 - scanning this qr code or click the link
04:58 - in the video description
05:02 - now we know how the while loop works
05:05 - let's do something interesting i'll
05:06 - create a multiplication table using the
05:09 - while loop so i'll go to my code editor
05:12 - as usual you can see the basic structure
05:14 - of c program
05:15 - now i'll create a variable number
05:19 - now i'll ask the user to provide the
05:21 - input so let's use printf statement
05:24 - and i'll enter the message enter the
05:27 - number
05:28 - for the users
05:31 - so
05:33 - and then i'll store the input in the
05:35 - number variable so i'll use scanf
05:38 - statement
05:43 - just like before i'll create a count
05:46 - variable
05:47 - so count
05:48 - and i will assign value 1 to this i want
05:52 - to create a multiplication table up to
05:54 - 10 so i'll use while loop
05:57 - so while
05:58 - with a condition
06:00 - count
06:01 - is less than or equals to
06:06 - 10 so
06:08 - inside the while loop i'll multiply the
06:10 - number provided by the user so number is
06:13 - multiplied with the count
06:17 - and i'll assign this to a to an in
06:20 - variable
06:21 - let's say product
06:25 - then i'll print this
06:26 - product variable
06:28 - so using printf statement
06:32 - we'll print this
06:38 - and finally i'll increase the value of
06:40 - count by one
06:43 - so count equals to count plus
06:46 - one
06:47 - so before i run this i'll add here
06:50 - backslash n so that the output will be
06:52 - more clearer so let's run this program
06:56 - and i want the multiplication of 8 so
06:58 - i'll enter it and you can see the
07:00 - multiplication of 8 is printed on the
07:02 - screen
07:04 - now let's see what's happening here
07:06 - inside loop i'm multiplying the number
07:08 - provided by the user to the value of
07:11 - count then we are printing the value of
07:13 - product and you can see the output on
07:16 - the screen and then the value of count
07:18 - is increased
07:20 - in each iteration
07:22 - initially the value of count is equals
07:24 - to 1
07:25 - when the number 8 is multiplied with the
07:27 - value of count 1 the output is 8
07:31 - and in the second iteration the value of
07:34 - count is equals to 2 so
07:36 - 8 into 2 is equals to 16.
07:40 - in this way the number is multiplied by
07:42 - the value up to 10 so we get the
07:44 - multiplication up to 10
07:48 - here i am printing only the product
07:50 - and to be honest it does not look like
07:53 - multiplication table so i want to print
07:55 - the exact multiplication table like 8
07:57 - multiplied by 1 is equals to 8 and 8
08:00 - multiplied by 2 is equals to 16 and so
08:03 - on now i'll modify my code
08:06 - so i'll
08:07 - 2 percent d into percent d equals to
08:11 - percent
08:12 - that is
08:14 - number
08:15 - into
08:17 - count
08:20 - is equals to product
08:22 - here you can see
08:24 - i am printing all these three variables
08:27 - with proper formatting
08:29 - now let me run this code
08:32 - and i'll enter it again
08:34 - as you can see
08:35 - the output looks better now now you can
08:39 - create multiplication table of any
08:41 - number
08:42 - okay guys we need your support to keep
08:44 - these types of content free for all
08:46 - users youtube really likes engagement on
08:48 - the video so leave a comment below press
08:50 - that like button hit subscribe if you
08:52 - haven't already let's get the engagement
08:54 - score high up so that more people can
08:56 - discover and enjoy these courses
09:01 - in c programming there is another
09:03 - version of while loop known as do while
09:05 - loop the working of do i look is similar
09:07 - to that of while loop with one major
09:10 - difference before we learn more let's
09:12 - start with the syntax of do while loop
09:16 - the do while loop starts with the do
09:17 - keyword followed by the body of the loop
09:20 - and the while keyword
09:22 - with the condition inside the
09:24 - parenthesis and do not forget to put
09:26 - this semicolon at the end here the body
09:28 - of the loop is executed first and then
09:31 - the condition is evaluated if the
09:34 - condition is evaluated to true the body
09:36 - of the loop is executed again
09:39 - this process continues until the
09:41 - condition becomes false and if the
09:42 - condition is false then the loop
09:45 - terminates
09:46 - let's see an example
09:48 - so i'll remove this old code and i'll
09:50 - start with the basic structure of c
09:52 - program
09:59 - as you can see this is the basic
10:01 - structure of c program now i'll create a
10:03 - count variable
10:05 - so
10:06 - count variable and assign value 1 to
10:08 - this
10:10 - then i'll write a do block
10:14 - and i'll print
10:16 - the value of count here
10:18 - so percent d
10:20 - and
10:21 - backspace n
10:23 - and count here
10:26 - and increase the value of count by one
10:29 - count equals to count plus one
10:32 - now i'll use the while condition
10:35 - and i'll check if
10:37 - count is
10:38 - less than five
10:42 - now let's run this
10:44 - code as you can see the value of count
10:48 - is increased in each iteration
10:50 - when you compare a do while loop with a
10:52 - while loop you can see in the do while
10:54 - loop the code that is to be executed is
10:57 - kept inside the do block and the
10:59 - condition it checked this is why the
11:01 - code in do while loop is executed once
11:04 - even if the condition is false let me
11:06 - show you here i'll change the value of
11:08 - count from 1 to 5.
11:10 - now the condition is 5 less than 5 which
11:13 - is false so let me run this code here
11:16 - you can see we get 5 as output even
11:18 - after the condition is false from the
11:21 - beginning
11:22 - this is because first the do block is
11:24 - executed which will print the value of
11:26 - count so we get 5 as output then the
11:29 - condition is checked which is false so
11:33 - the loop terminates
11:35 - the do while loop is executed once no
11:37 - matter what this is the major difference
11:39 - between the while and do while loop
11:41 - since the working of do while loop is
11:43 - similar to that of while loop we can use
11:45 - it to print a multiplication table go
11:47 - ahead and print the multiplication table
11:50 - like before using a do-while loop
11:54 - now to revise what we have learned here
11:56 - is a programming tags for you can you
11:58 - use the while loop to print the
11:59 - multiplication table for the given
12:01 - number but this time you have to print
12:03 - the number from 10 to 1 so the output
12:06 - would be something like this
12:08 - try the program and comment your code
12:10 - below you will find the answers to this
12:12 - question in our github repository and if
12:14 - you want to revise this concept you can
12:16 - find this all program in there i'll put
12:19 - the link in the video description now
12:21 - that we have reached the end of this
12:23 - video it's time for programming squeeze
12:25 - which of the following causes an
12:27 - infinite loop
12:31 - comment your answer below see you in the
12:32 - next video happy programming
12:35 - [Music]
12:44 - you

Cleaned transcript:

hey guys this is me padma from programmies and welcome back to this series on c programming in this video we'll learn about while loop to repeat a block of good for multiple times we'll also learn about do while loop in c so let's get started in programming loops are used to repeat a block of code a certain number of times suppose we want to show a particular message hundred times instead of writing the same message hundred times we can write the message once and use the loop to display the message hundred times let's start with the syntax of while loop a while loop starts with the while keyword followed by the condition inside the parenthesis here the condition is a boolean expression that returns either true or false if the condition is true then the statement inside the while loop are executed then the condition is evaluated again and if the condition is true again then the statement inside the while loop is executed this process continues and the while loop is executed on and on until the test condition becomes false if the condition is false then the while loop is terminated and the body of the loop is skipped let's see an example i'll remove this old code and by now you must be familiar with the basic structure of c program so i'll write the basic structure of c program here now you can see the basic structure of c program now i'll create the while loop with the condition 1 is less than 5 and inside the while loop i'll print the message while loop in c so here the condition 1 is less than 5 is true so the statement inside the while loop will be executed then the condition 1 is less than 5 is checked again this time as well the condition is true so the statement inside the loop will be executed again here 1 is always less than 5 so the condition is never false hence the while loop will be executed infinitely until the memory runs out this is called an infinite while loop now let's run this code so you can see the statement while loop in c is printed until the memory runs out and to avoid this infinite while loop we need to make sure that our condition becomes false at some point so i'll create a in variable count and assign value 1 to this now in the condition instead of 1 i'll write here count so the condition becomes count is less than 5 and inside the while loop i'll increase the value of count by 1 so count equals to count plus 1 so this value of count will increase in each iteration now this line of code increases the value of count in each iteration and ultimately the value of count becomes 5 so our condition becomes 5 is less than 5 which is false and it will terminate our loop so let's run this code you can see the message while loop in c is printed four times let's see what's happening here initially the value of count is one so the condition count is less than five is true so the text while loop in c is printed on the screen now the value of count becomes 2 and again the condition is evaluated this time as well the condition is true so again while loop in c is printed on on the screen now the value of count is increased to 3 in this way the value of count keeps increasing in each iteration and after the fourth iteration the value of count becomes 5. this time this condition count less than 5 becomes 5 is less than 5 which is false so the loop terminates and hence the text is printed 4 times we can also print the count variable to see the subsequent increment of count variable let me show you here inside the loop i'll add print statement and i'll print the value of count so count equals percent d comma count and we need to add here backs this n so that it will be printed on the different lines so let's run this code as you can see the value of count is increasing in each iteration by the way if you are watching this there is a good chance you want to improve your skills in c programming lucky for you we have a mobile app that provides a wellstructured c programming course with certification at the end and you can use the app alongside the video to practice on the builtin compiler our course is free so download now by scanning this qr code or click the link in the video description now we know how the while loop works let's do something interesting i'll create a multiplication table using the while loop so i'll go to my code editor as usual you can see the basic structure of c program now i'll create a variable number now i'll ask the user to provide the input so let's use printf statement and i'll enter the message enter the number for the users so and then i'll store the input in the number variable so i'll use scanf statement just like before i'll create a count variable so count and i will assign value 1 to this i want to create a multiplication table up to 10 so i'll use while loop so while with a condition count is less than or equals to 10 so inside the while loop i'll multiply the number provided by the user so number is multiplied with the count and i'll assign this to a to an in variable let's say product then i'll print this product variable so using printf statement we'll print this and finally i'll increase the value of count by one so count equals to count plus one so before i run this i'll add here backslash n so that the output will be more clearer so let's run this program and i want the multiplication of 8 so i'll enter it and you can see the multiplication of 8 is printed on the screen now let's see what's happening here inside loop i'm multiplying the number provided by the user to the value of count then we are printing the value of product and you can see the output on the screen and then the value of count is increased in each iteration initially the value of count is equals to 1 when the number 8 is multiplied with the value of count 1 the output is 8 and in the second iteration the value of count is equals to 2 so 8 into 2 is equals to 16. in this way the number is multiplied by the value up to 10 so we get the multiplication up to 10 here i am printing only the product and to be honest it does not look like multiplication table so i want to print the exact multiplication table like 8 multiplied by 1 is equals to 8 and 8 multiplied by 2 is equals to 16 and so on now i'll modify my code so i'll 2 percent d into percent d equals to percent that is number into count is equals to product here you can see i am printing all these three variables with proper formatting now let me run this code and i'll enter it again as you can see the output looks better now now you can create multiplication table of any number okay guys we need your support to keep these types of content free for all users youtube really likes engagement on the video so leave a comment below press that like button hit subscribe if you haven't already let's get the engagement score high up so that more people can discover and enjoy these courses in c programming there is another version of while loop known as do while loop the working of do i look is similar to that of while loop with one major difference before we learn more let's start with the syntax of do while loop the do while loop starts with the do keyword followed by the body of the loop and the while keyword with the condition inside the parenthesis and do not forget to put this semicolon at the end here the body of the loop is executed first and then the condition is evaluated if the condition is evaluated to true the body of the loop is executed again this process continues until the condition becomes false and if the condition is false then the loop terminates let's see an example so i'll remove this old code and i'll start with the basic structure of c program as you can see this is the basic structure of c program now i'll create a count variable so count variable and assign value 1 to this then i'll write a do block and i'll print the value of count here so percent d and backspace n and count here and increase the value of count by one count equals to count plus one now i'll use the while condition and i'll check if count is less than five now let's run this code as you can see the value of count is increased in each iteration when you compare a do while loop with a while loop you can see in the do while loop the code that is to be executed is kept inside the do block and the condition it checked this is why the code in do while loop is executed once even if the condition is false let me show you here i'll change the value of count from 1 to 5. now the condition is 5 less than 5 which is false so let me run this code here you can see we get 5 as output even after the condition is false from the beginning this is because first the do block is executed which will print the value of count so we get 5 as output then the condition is checked which is false so the loop terminates the do while loop is executed once no matter what this is the major difference between the while and do while loop since the working of do while loop is similar to that of while loop we can use it to print a multiplication table go ahead and print the multiplication table like before using a dowhile loop now to revise what we have learned here is a programming tags for you can you use the while loop to print the multiplication table for the given number but this time you have to print the number from 10 to 1 so the output would be something like this try the program and comment your code below you will find the answers to this question in our github repository and if you want to revise this concept you can find this all program in there i'll put the link in the video description now that we have reached the end of this video it's time for programming squeeze which of the following causes an infinite loop comment your answer below see you in the next video happy programming you
