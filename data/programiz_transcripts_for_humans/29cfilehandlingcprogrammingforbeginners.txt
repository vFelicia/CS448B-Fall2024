With timestamps:

00:00 - hey guys welcome back to this series on
00:02 - c programming in this video we will
00:04 - learn to work with files in c
00:06 - programming more specifically we will
00:08 - learn to perform file operations like
00:10 - read content from the file write content
00:12 - to the file this is going to be an
00:14 - interesting video so let's get started
00:20 - in c programming there are usually three
00:22 - steps involved while working with files
00:24 - open a file perform file operation close
00:27 - the file let's first learn to open a
00:29 - file
00:33 - we use the file pointer to work with the
00:35 - file don't worry you don't have to
00:37 - understand all about this pointer just
00:39 - remember this syntax for now now once we
00:43 - create a file pointer we then use the f
00:45 - open function to open the file let me
00:47 - show you an example
00:49 - here i have this
00:51 - test.txt file now let's open this file
00:55 - what i'll do is
00:56 - i'll first create the file pointer
01:00 - file
01:01 - pointer
01:03 - so file astrix fptr
01:07 - now i'll use f open function fptr is
01:10 - equals to f open
01:13 - parenthesis inside quotation
01:16 - test dot txt
01:18 - and another attribute that is
01:22 - r that means read
01:24 - basically opening a file is nothing but
01:26 - connecting our c program to the external
01:29 - file in this case we are connecting our
01:31 - main
01:32 - dot c file to this
01:34 - test.txt file
01:36 - now
01:38 - you can see this r this r here indicates
01:42 - that we are opening the file in read
01:44 - mode so we can only perform the read
01:46 - operation on the file
01:48 - one thing you need to remember is that
01:50 - while opening the file in read mode you
01:52 - need to make sure the file is already
01:54 - present in the specified location
01:57 - otherwise the f open function will
01:59 - return null let me show you
02:01 - now let me first complete this program
02:04 - so i'll add here
02:08 - include
02:10 - stdio.h
02:13 - and
02:14 - int main
02:17 - inside curly braces return
02:20 - zero
02:22 - and
02:24 - i'll cut this
02:26 - two lines of code and i'll paste it
02:29 - there
02:30 - so let's make it more clearer
02:34 - okay
02:35 - so now i'll add an if else statement to
02:38 - check if file open is successful or not
02:41 - so here i'll add
02:42 - if
02:44 - fbti
02:46 - is not equals to null
02:51 - then
02:52 - we'll print
02:56 - file open successful
03:00 - file
03:01 - oh
03:04 - then
03:05 - successful
03:09 - else
03:11 - will print
03:14 - file open unsuccessful
03:18 - and success
03:26 - now let's run this code
03:30 - as you can see file open is successful
03:33 - because
03:34 - test.txt file is present here now let me
03:37 - change the file to something else let's
03:39 - say
03:40 - test2.txt
03:43 - and i'll save this and i'll run this
03:45 - again
03:48 - as you can see this time we get file
03:50 - open unsuccessful because the file does
03:54 - not exist and f open returns null
03:57 - by the way do you want to take your
03:59 - programming journey to the next level
04:01 - watching tutorials is fine but it has
04:03 - one limitation it's hard to learn and
04:05 - practice together at the same time lucky
04:08 - for you we have recently launched
04:09 - programming's pro that provides
04:11 - tutorials along with quizzes and
04:13 - challenges which will help you practice
04:15 - and test your learning in real time also
04:17 - the course includes projects to give you
04:19 - an experience of how programming works
04:21 - in the real world
04:23 - and for our youtube subscriber we are
04:25 - giving 50 off on the yearly plan sign up
04:28 - by scanning this qr code or use the link
04:30 - in the video description to claim your
04:32 - discount
04:35 - now that we know how to open a file in
04:37 - read mode let's read its content in c we
04:40 - use the afkit function to read the
04:42 - content from the file let me show you an
04:43 - example
04:45 - here you can see the code from our
04:47 - earlier program
04:49 - now i'll change this test to to test.txt
04:54 - now i'll remove this file open
04:56 - successful print statement from if
04:58 - condition
04:59 - now let's use afkit's function to read
05:02 - the content of this file so first we
05:05 - need to create an array to store the
05:07 - file content
05:08 - so i'll add here
05:10 - care
05:11 - content
05:13 - square bracket
05:15 - 1000
05:18 - now let's read the content from this
05:20 - file to this
05:22 - array so i'll write here
05:26 - f gets
05:29 - bracket
05:31 - content
05:32 - comma 1000
05:34 - comma fbtr
05:37 - and i'll close this
05:39 - then i'll print it using printf
05:41 - statement
05:43 - so percent
05:45 - f
05:46 - comma content
05:49 - i'll save this
05:51 - here f kids read the content of the file
05:54 - and stores it
05:55 - in the content area and this
05:58 - thousand is the size of the file that is
06:00 - to be read since our array is thousand i
06:03 - have kept a thousand and fbtr is the
06:06 - pointer used to read the file
06:10 - now let's run this code
06:13 - you can see we get the output this is
06:15 - the text file here you can see in this
06:17 - file this is the text file is the first
06:19 - sentence we are only able to get the
06:22 - first sentence from the file because
06:25 - here we have used f kits and f gates can
06:28 - only read the first sentence at a time
06:31 - if we need to read all the lines we can
06:33 - use a loop let me show you so first i'll
06:36 - use this line as the condition of while
06:39 - loop so i'll write here
06:41 - while
06:43 - and put this line inside parenthesis
06:51 - here as get's function reads the content
06:53 - of the file if the file read is
06:55 - successful it returns true otherwise it
06:57 - returns false hence our loop runs until
07:00 - there is some content to be read from
07:01 - the file
07:02 - now inside the loop
07:05 - i'll print the file content so i'll cut
07:07 - this
07:08 - and put it here
07:11 - now
07:13 - i'll save this
07:14 - now let's run this code
07:17 - as you can see we are able to read all
07:19 - the content of the file
07:23 - once a read operation is completed it is
07:25 - a good practice to close the file we use
07:27 - the fclose function to close the file
07:30 - here i'll add fclose function at the end
07:33 - fptr
07:38 - now let's learn to write content to a
07:40 - file but first we need to open our file
07:43 - in write mode this means we need to use
07:45 - w as the second parameter instead of r
07:48 - with the f open function let me show you
07:52 - here this test.txt file already exist
07:55 - but if the file did not exist a new file
07:59 - is created let me show you
08:02 - i'll change this name to new file
08:06 - new file
08:08 - dot txt
08:10 - now this new file will be created i'll
08:13 - save this and i'll run this
08:16 - you can see new file.txt file is now
08:20 - created here
08:22 - now let's add content to this file we
08:25 - use f put function to write content to a
08:27 - file let me show you
08:29 - i'll write here
08:30 - f puts
08:32 - parenthesis inside quotation i'll write
08:36 - i love
08:38 - c programming
08:43 - comma
08:44 - fbtr
08:47 - let me add one more message
08:50 - here i'll add f puts
08:52 - inside parenthesis i'll write
08:55 - c programming
08:58 - series
09:01 - by
09:02 - programmies
09:05 - is
09:06 - the best so here comma fbtr
09:12 - and don't forget to close the file so f
09:15 - close
09:18 - fptr
09:21 - now let's run this code
09:23 - now when you open this file you can see
09:26 - the file now includes the message
09:29 - however the message looks a bit odd so
09:33 - in this file i'll add here
09:38 - backslash n
09:40 - and i'll save this
09:42 - and let's run this again
09:50 - now you can see the file looks clean now
09:53 - here remember that initially the file
09:55 - did not exist when we run the program
09:58 - for the first time a new file is created
10:01 - we then added the content to the file
10:03 - using f puts
10:05 - and when we run the program for the
10:06 - second time adding backslash n the
10:09 - initial content of the file is erased
10:11 - and new content is added
10:14 - so whenever we open a file in write mode
10:16 - if the file already exists
10:18 - all content will be erased let me show
10:21 - you that again now i'll change this
10:23 - message
10:25 - from i love c programming to
10:28 - to new misses
10:33 - new message
10:34 - 1
10:35 - and i'll change this
10:39 - to
10:41 - new
10:42 - message
10:44 - 2 and i'll save this
10:47 - and i'll run this
10:50 - now you can see
10:51 - the old content is now replaced by new
10:54 - content
10:57 - now to revise what you have learned in
10:59 - this program here is a programming task
11:01 - for you create a new file in write mode
11:03 - and add content c is a font programming
11:06 - language and i love using c language
11:09 - close the file again open the file in
11:11 - read mode and read the content of the
11:13 - file you will find the answers to this
11:15 - question in our github repository and
11:17 - also if you want to revise this concept
11:19 - all these programs will be there as well
11:21 - i'll put the link in the video
11:23 - description below now that we have
11:25 - reached the end of this video it's time
11:27 - for programming squeeze
11:31 - comment your answer below see you in the
11:33 - next video happy programming
11:39 - [Music]
11:44 - you

Cleaned transcript:

hey guys welcome back to this series on c programming in this video we will learn to work with files in c programming more specifically we will learn to perform file operations like read content from the file write content to the file this is going to be an interesting video so let's get started in c programming there are usually three steps involved while working with files open a file perform file operation close the file let's first learn to open a file we use the file pointer to work with the file don't worry you don't have to understand all about this pointer just remember this syntax for now now once we create a file pointer we then use the f open function to open the file let me show you an example here i have this test.txt file now let's open this file what i'll do is i'll first create the file pointer file pointer so file astrix fptr now i'll use f open function fptr is equals to f open parenthesis inside quotation test dot txt and another attribute that is r that means read basically opening a file is nothing but connecting our c program to the external file in this case we are connecting our main dot c file to this test.txt file now you can see this r this r here indicates that we are opening the file in read mode so we can only perform the read operation on the file one thing you need to remember is that while opening the file in read mode you need to make sure the file is already present in the specified location otherwise the f open function will return null let me show you now let me first complete this program so i'll add here include stdio.h and int main inside curly braces return zero and i'll cut this two lines of code and i'll paste it there so let's make it more clearer okay so now i'll add an if else statement to check if file open is successful or not so here i'll add if fbti is not equals to null then we'll print file open successful file oh then successful else will print file open unsuccessful and success now let's run this code as you can see file open is successful because test.txt file is present here now let me change the file to something else let's say test2.txt and i'll save this and i'll run this again as you can see this time we get file open unsuccessful because the file does not exist and f open returns null by the way do you want to take your programming journey to the next level watching tutorials is fine but it has one limitation it's hard to learn and practice together at the same time lucky for you we have recently launched programming's pro that provides tutorials along with quizzes and challenges which will help you practice and test your learning in real time also the course includes projects to give you an experience of how programming works in the real world and for our youtube subscriber we are giving 50 off on the yearly plan sign up by scanning this qr code or use the link in the video description to claim your discount now that we know how to open a file in read mode let's read its content in c we use the afkit function to read the content from the file let me show you an example here you can see the code from our earlier program now i'll change this test to to test.txt now i'll remove this file open successful print statement from if condition now let's use afkit's function to read the content of this file so first we need to create an array to store the file content so i'll add here care content square bracket 1000 now let's read the content from this file to this array so i'll write here f gets bracket content comma 1000 comma fbtr and i'll close this then i'll print it using printf statement so percent f comma content i'll save this here f kids read the content of the file and stores it in the content area and this thousand is the size of the file that is to be read since our array is thousand i have kept a thousand and fbtr is the pointer used to read the file now let's run this code you can see we get the output this is the text file here you can see in this file this is the text file is the first sentence we are only able to get the first sentence from the file because here we have used f kits and f gates can only read the first sentence at a time if we need to read all the lines we can use a loop let me show you so first i'll use this line as the condition of while loop so i'll write here while and put this line inside parenthesis here as get's function reads the content of the file if the file read is successful it returns true otherwise it returns false hence our loop runs until there is some content to be read from the file now inside the loop i'll print the file content so i'll cut this and put it here now i'll save this now let's run this code as you can see we are able to read all the content of the file once a read operation is completed it is a good practice to close the file we use the fclose function to close the file here i'll add fclose function at the end fptr now let's learn to write content to a file but first we need to open our file in write mode this means we need to use w as the second parameter instead of r with the f open function let me show you here this test.txt file already exist but if the file did not exist a new file is created let me show you i'll change this name to new file new file dot txt now this new file will be created i'll save this and i'll run this you can see new file.txt file is now created here now let's add content to this file we use f put function to write content to a file let me show you i'll write here f puts parenthesis inside quotation i'll write i love c programming comma fbtr let me add one more message here i'll add f puts inside parenthesis i'll write c programming series by programmies is the best so here comma fbtr and don't forget to close the file so f close fptr now let's run this code now when you open this file you can see the file now includes the message however the message looks a bit odd so in this file i'll add here backslash n and i'll save this and let's run this again now you can see the file looks clean now here remember that initially the file did not exist when we run the program for the first time a new file is created we then added the content to the file using f puts and when we run the program for the second time adding backslash n the initial content of the file is erased and new content is added so whenever we open a file in write mode if the file already exists all content will be erased let me show you that again now i'll change this message from i love c programming to to new misses new message 1 and i'll change this to new message 2 and i'll save this and i'll run this now you can see the old content is now replaced by new content now to revise what you have learned in this program here is a programming task for you create a new file in write mode and add content c is a font programming language and i love using c language close the file again open the file in read mode and read the content of the file you will find the answers to this question in our github repository and also if you want to revise this concept all these programs will be there as well i'll put the link in the video description below now that we have reached the end of this video it's time for programming squeeze comment your answer below see you in the next video happy programming you
