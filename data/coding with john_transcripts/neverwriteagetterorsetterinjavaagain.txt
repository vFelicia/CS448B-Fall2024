00:00 - today i'm going to show you a way you
00:01 - will never have to write another getter
00:02 - or setter in your java programs again my
00:04 - name is john i'm a lead java software
00:06 - engineer and i love sharing what i've
00:07 - learned in a clear and understandable
00:09 - way so if you'd like to see more videos
00:10 - like this be sure to subscribe so you
00:11 - don't miss each new video i also have a
00:13 - full java course available in the link
00:14 - down in the description if you're
00:15 - interested you probably know all about
00:17 - getters and setters in your java classes
00:18 - right the basic idea is you can
00:20 - encapsulate the fields in your class
00:22 - by making them private but then making
00:24 - those fields accessible to outside
00:25 - classes through accessors and mutators
00:28 - getter and setter methods but it takes
00:30 - time to create all these methods
00:31 - especially if your class has a whole
00:32 - bunch of fields you have to create
00:34 - getter and setter methods for each of
00:36 - them what if i told you there was a way
00:37 - you can have the getter and setter
00:38 - methods available to you
00:40 - but not only do you not have to type
00:41 - them but you will never even
00:43 - see them in your classes they won't even
00:45 - clutter up your code at all so for
00:47 - example here in this cat class right now
00:48 - these fields are private so to be able
00:50 - to access them or change them we need to
00:52 - write getter and setter methods
00:53 - for example for this name field if we
00:55 - wanted to write a getter we would just
00:56 - say public string
00:58 - get name and all it does is just return
01:01 - this
01:01 - dot name the name field on this
01:03 - particular cat along the same lines if
01:05 - we wanted to create a setter
01:06 - we just say public void set name we'll
01:09 - have to pass
01:10 - in the string name that we want to set
01:13 - the name value to and we just take this
01:15 - dot name and set it to the name variable
01:17 - being passed in they're easy methods to
01:19 - write but it's just busy work you're
01:20 - just wasting time if you don't want to
01:22 - type these out yourself
01:22 - one way you can have these
01:23 - auto-generated is by using the tools in
01:25 - whatever ide you're using either like
01:27 - eclipse or intellij here i happen to be
01:29 - using intellij and so what i can do is i
01:31 - can right-click
01:32 - on the field i want to write the getters
01:33 - and setters for and then go to refactor
01:35 - and then go to encapsulate fields and
01:38 - then select every field that you want to
01:39 - create your getter and setter for we'll
01:41 - keep both the get and the set checkbox
01:43 - check because we want to create a getter
01:44 - and setter and we can click
01:45 - refactor and that will automatically
01:47 - generate the get weight
01:48 - set weight get age and set age methods
01:50 - so that's pretty cool and ite does make
01:52 - it a little less painful you at least
01:54 - don't have to type it out but look at
01:55 - what this does to your code now instead
01:57 - of just having
01:58 - a few fields in your class name weight
02:00 - and age you now just have a bunch of
02:01 - extra boilerplate clutter code
02:03 - just to get and set each of your fields
02:05 - i'm going to show you a way you can get
02:06 - rid
02:07 - of all of this clutter in your code and
02:09 - still have the getter and setter methods
02:11 - available to you to use
02:12 - we can do that with something called
02:14 - lombok it only takes a couple of minutes
02:16 - to add lombok to your code and never
02:17 - have to see another getter or setter
02:19 - ever again
02:20 - you can download lombok at
02:21 - projectlombok.org
02:23 - download i'll have a link down in the
02:24 - description and just click this giant
02:26 - download button your browser might give
02:28 - you a warning like chrome does here
02:29 - that's because you're actually
02:30 - downloading a
02:30 - jar file a java library but we know what
02:32 - we're doing so we can ignore that and go
02:34 - ahead and click
02:34 - keep and it'll download the file how you
02:36 - need to install it kind of differs
02:37 - depending on which ide you're using
02:39 - whether you're using intellij or eclipse
02:41 - i'm gonna go over intellij first it'll
02:42 - just take a second and then we'll move
02:43 - over to eclipse and show you how to do
02:45 - it there to add the lombok library to
02:46 - your project just go over to your
02:48 - project explorer here under your
02:50 - external libraries here there's this
02:51 - folder that shows all of the current
02:52 - external libraries you're using just
02:54 - right click on that folder
02:55 - and click open library settings from
02:58 - here click on
02:58 - libraries click the plus to add a new
03:00 - library and then select
03:01 - java and then navigate to wherever you
03:03 - have the lineback.jar file downloaded so
03:05 - for me i have it in my downloads folder
03:07 - i just click almbac.jar and click ok and
03:10 - you can click apply here just to be sure
03:12 - and then click
03:13 - ok and once you've done that you should
03:15 - see this
03:16 - lombok library added to your external
03:18 - libraries list and if you're advanced
03:20 - enough to be using something like maven
03:22 - or gradle just do a quick search for
03:23 - what dependency you have to add to your
03:24 - project in order to pull down the latest
03:26 - version of lombok
03:27 - and you'll have it in no time okay so
03:29 - now that we have lombok how do
03:31 - we use it well first things first let's
03:32 - go ahead and get rid of all of this
03:34 - extra boilerplate getter and setter code
03:37 - we will now never have to see them
03:38 - again let's say we want to create a
03:40 - getter for every single field in this
03:42 - class all we have to do is add this at
03:44 - getter annotation here above our class
03:47 - declaration
03:48 - and we'll import that class lombok dot
03:50 - getter
03:51 - guys that's it each of these fields in
03:54 - this class
03:55 - now actually has a getter method so what
03:58 - happens is when this class gets compiled
04:00 - lombok is actually going to
04:01 - automatically generate those getters
04:03 - and put them into the class file that's
04:05 - generated
04:06 - when this program is compiled so the
04:07 - getters are going to be in the byte code
04:09 - but you never have to actually
04:10 - see them in your java file here so they
04:13 - don't clutter up your code
04:14 - at all but they do exist not sure if you
04:16 - believe me let's give it a quick try
04:17 - let's go back to our main
04:19 - class here let's go ahead and create a
04:21 - new cat object so we have cat
04:23 - my cat equals new cats now remember we
04:26 - don't actually have our getter methods
04:27 - written here
04:28 - anywhere however we can still call mycat
04:31 - dot get age get name and get weight
04:34 - intellij knows that lombok is going to
04:36 - automatically create those getter
04:38 - methods
04:38 - at compile time so it knows that they're
04:40 - available for us here to call
04:42 - so we can call my cat.getage
04:45 - mycat.getname
04:46 - and mycat.getwait and the same goes for
04:49 - the setters so right now we can't call
04:51 - any of the setter methods they don't
04:52 - exist but we can create them with lombok
04:54 - without having to write them
04:56 - by just adding another annotation here
04:58 - at
04:59 - setter we'll go ahead and auto import
05:00 - that as well lombok dot setter now if we
05:03 - go back to our main method we can see
05:05 - that we now have set age
05:06 - set name and set weight all available
05:09 - for us to use how awesome is that right
05:10 - i mean look at this class all we have
05:12 - is the three field declarations here
05:14 - name weight and age and we didn't have
05:16 - to clutter the code with any gutters and
05:17 - setters at all all we had to do is add
05:19 - these annotations
05:20 - and we get those getters and setters
05:22 - written for us we never had to type
05:24 - anything and we never even have to
05:25 - see them quickly let's talk about how to
05:27 - use lombok in eclipse and then we're
05:28 - going to come back and show you even
05:30 - more
05:30 - mind-blowing stuff you can do with
05:32 - lombok if you're using eclipse there's
05:34 - just a couple more steps but it's still
05:35 - super easy to do first what you actually
05:37 - want to do is go back to your lombok.jar
05:40 - file that you downloaded
05:41 - and double click on it and what it's
05:42 - going to do is open up this installer
05:45 - and it'll scan your drive
05:46 - for any ide installations that you have
05:48 - and it should find
05:49 - your existing eclipse installation if it
05:52 - doesn't just click the specify location
05:54 - button and go to wherever you have your
05:55 - clips installed then just click this
05:57 - install
05:58 - update button here it'll basically
05:59 - immediately finish install successful if
06:01 - you don't do this for eclipse eclipse
06:03 - doesn't really realize
06:04 - that lombok is going to automatically
06:06 - create these methods for you and so it
06:07 - tells you that they don't exist it
06:08 - doesn't really realize what's going on
06:10 - intellij knows about lombok and has all
06:12 - that functionality built in
06:13 - but eclipse doesn't yet so you just have
06:15 - to go through this one small extra step
06:16 - if you had eclipse open while you did
06:18 - that you're going to need to restart
06:19 - eclipse for your changes to take effect
06:20 - then back here in eclipse right click on
06:22 - the project that you want to use lombok
06:23 - for
06:24 - then go over to build path and configure
06:26 - build path so you should be under java
06:28 - build path here then click on the
06:29 - libraries tab
06:30 - then click on the class path here and
06:31 - then click on add external jars and then
06:34 - navigate to wherever you downloaded the
06:35 - lombok.jar file
06:37 - and double-click it you should see
06:38 - lombok.jar added to your class path
06:40 - and hit apply and close and then the
06:42 - lombok.jar file should show up here
06:44 - under
06:44 - referenced libraries now that you've
06:46 - gone through that lombok installation
06:47 - and
06:48 - added this library to your project go
06:49 - ahead and add these same gutter and
06:50 - setter annotations that we added over in
06:52 - eclipse and you're good to go
06:53 - and i told you i would tell you some
06:54 - other things lombok could do that would
06:56 - just blow your mind
06:57 - automatically adding getters and setters
06:58 - are just a tiny portion of what lombok
07:00 - can do for you
07:01 - let's talk about just a few more so
07:02 - you're probably also aware in your
07:03 - classes that you're also supposed to add
07:05 - a public boolean equals method to each
07:08 - of the classes that you create that just
07:09 - tells you whether this object is equal
07:11 - to some other one that's passed into
07:12 - this method of course that might sound
07:13 - simple but if we go and look over this
07:15 - example
07:16 - of a good equals method look how
07:17 - complicated it is first you have to do
07:19 - the cell check then you have to do a
07:20 - null check and then you have to do a
07:22 - type check and you have to cast it to
07:23 - that type and then you have to compare
07:25 - each and every field on an object to see
07:27 - if they equal each other
07:28 - and then you can return with those two
07:29 - objects are equal now this is crazy
07:31 - on top of that there's a hash code
07:33 - method that you're supposed to implement
07:34 - in all of your java classes well instead
07:36 - of doing all of that yourself
07:37 - you can actually just add another
07:39 - annotation called
07:40 - equals and hashcode this annotation will
07:44 - automatically add a full featured equals
07:46 - method and a hashcode method to your
07:48 - class without you having to lift another
07:50 - finger
07:50 - on top of that the same thing goes for a
07:52 - tostring method so you know this public
07:54 - string to string method that you're
07:56 - supposed to override in
07:58 - all of your java classes you know
07:59 - basically what is supposed to do is
08:00 - create a good string representation of
08:02 - your object well lombok can
08:04 - automatically generate that method for
08:05 - you too
08:06 - and if you want to have it do that just
08:07 - go ahead and add another annotation at
08:09 - tostring that automatically adds a great
08:11 - two-string implementation that prints
08:13 - out all the values
08:14 - of your private fields in your class
08:16 - that's all super awesome right but it
08:17 - gets even
08:18 - better let's say you want all of this
08:20 - you want getters you want setters you
08:21 - want equals and hash code you want a
08:23 - tostring method well you don't even have
08:24 - to add all these different annotations
08:26 - what you can do is just add
08:28 - an annotation called at data and go
08:31 - ahead and import that
08:32 - the data annotation gives you all that
08:33 - stuff that we just listed without having
08:35 - to write anything and without anything
08:37 - cluttering up our code at all
08:38 - with just one tiny annotation one really
08:41 - cool thing that we can do if we're using
08:42 - intellij we can actually see
08:44 - the exact code that lombok is going to
08:46 - generate behind the scenes and all we
08:47 - have to do to do that is right click
08:49 - on the class name and go to refactor and
08:52 - then go down to
08:53 - d lombard and you can kind of take a
08:54 - guess at what that's going to do you can
08:56 - select any annotation that you want to d
08:57 - lombok here we only have at data so
08:59 - we'll just click add data
09:01 - and watch what it does so it has written
09:02 - out everything that lombok gives us that
09:04 - compile time behind the scenes but it
09:05 - just shows it to us here so it gave us a
09:07 - constructor
09:08 - all the getters and setters for all of
09:10 - our fields this giant
09:12 - full featured equals method this giant
09:15 - full-featured hash code method
09:16 - and this great tostring method that
09:19 - prints out
09:20 - the values of all of the private fields
09:22 - in our class so look at this look at the
09:24 - difference here look at this
09:25 - giant class full of clutter and extra
09:28 - code that is prone to bugs
09:29 - versus getting rid of all of that and
09:31 - just having this nice
09:33 - clean class with an at data annotation
09:36 - that takes care of everything for you
09:37 - now i'll say this just scratches the
09:39 - surface of what lombok offers there are
09:41 - ways you can customize each of these
09:42 - annotations if you want to include or
09:44 - not include certain fields in having a
09:46 - getter or setter
09:47 - or you don't want to include them in
09:48 - your equals method or maybe your
09:49 - tostring method and you want to
09:50 - customize it that way
09:51 - lombok allows you to do all of that
09:53 - stuff just within the annotations so let
09:55 - me know if you want to see more videos
09:56 - like that in the future but for now if
09:58 - you want to look into yourself
09:59 - go ahead and check out lombok's website
10:02 - projectlombok.org it has
10:04 - all the information that you need but
10:05 - lombok is really one of those little
10:06 - known things that i use in my job
10:08 - every single day and it makes my job so
10:10 - much easier and i don't have to look
10:12 - at crazy cluttered classes full of
10:14 - getters and setters and equals and hash
10:15 - code methods that are all you know
10:16 - written by junior developers that don't
10:18 - really know what they're doing
10:19 - this takes care of all of that for us
10:21 - and we never have to worry that it's
10:23 - done
10:23 - incorrectly so again let me know if you
10:24 - want to see more videos about lombok in
10:26 - the future
10:27 - and to be sure you see those videos and
10:28 - any of my other java tutorials in the
10:30 - future
10:30 - be sure to hit the subscribe button if
10:31 - you really want to support the channel
10:32 - you can do the youtube trifecta of
10:34 - hitting the like button hit the
10:35 - subscribe button and leaving a comment
10:37 - i really do appreciate it thanks a lot
10:38 - for watching and i'll see you next time