00:00 - the basic hello world program in Java
00:02 - hasn't changed at all since the language
00:04 - debuted almost 30 years ago but some
00:07 - awesome new changes are coming in a new
00:08 - Java version set to release later this
00:10 - year that will change Java's hello world
00:13 - forever in fact it'll change how you
00:15 - code virtually every single small Java
00:18 - program you write for the rest of your
00:19 - life you're going to want to give it a
00:21 - try immediately my name is John and I'm
00:23 - a lead Java software engineer I also
00:25 - have a full Java course available and a
00:27 - link down in the description there
00:28 - you'll find over 8 hours of exclusive
00:31 - Java video lessons covering dozens of
00:33 - topics go check it out if you've been
00:35 - coding in Java for more than about 14
00:37 - seconds you know what a basic hello
00:39 - world program looks like you've probably
00:41 - seen it hundreds of times first you have
00:43 - to declare your class so public class
00:46 - hello world and then within that class
00:49 - you have to declare your main method and
00:51 - that main method has to be public static
00:54 - void Main and it has to take in a
00:57 - parameter of a string array that we call
01:00 - args and then finally after all of that
01:03 - you can add your print statement and of
01:05 - course that's
01:07 - system.out.printline hello world by now
01:10 - you probably know that all by Heart
01:12 - Right But do you remember what all that
01:13 - was like when you were First Learning
01:15 - Java someone's sitting down to learn
01:17 - Java or to learn programming at all who
01:19 - just wants to write some basic code
01:21 - they're going to think what the heck
01:23 - even is all this like why do I have to
01:25 - declare a class and what is this public
01:28 - static void Main and string args is this
01:32 - even English it's a whole lot of
01:34 - different concepts and terminology
01:36 - thrown at you all at once and it can
01:38 - easily overwhelm a beginner and make
01:40 - them want to quit before they even get
01:42 - started luckily someone over at javaland
01:45 - thought the same thing and they're
01:46 - finally going to do something about it
01:48 - Java 21 that will be releasing later
01:50 - this year will introduce some changes
01:52 - that'll get rid of a ton of unnecessary
01:54 - clutter here and make all of this way
01:57 - easier for beginner programmers or even
01:59 - experience programmers like me who don't
02:01 - want to have to bother writing this all
02:03 - out every time we make any small program
02:05 - let's go through exactly what those
02:07 - changes are you probably know that all
02:09 - of your Java code has to be enclosed in
02:12 - classes but when you're first learning
02:13 - to code most of the time all of your
02:15 - code is going to be in one single file
02:18 - anyway and in that case what the class
02:20 - is doesn't really matter at all and the
02:22 - folks putting Java together thought you
02:24 - know what you're right let's get rid of
02:27 - it Java will no longer require a class
02:30 - declaration when it's not needed that
02:32 - does mean that you can't refer to this
02:34 - class from any other classes but for
02:36 - small programs like this you never need
02:38 - to anyway and you can still declare
02:40 - other fields and methods inside of this
02:42 - file like you normally would but the
02:44 - next thing is the big one this whole
02:46 - public static void main string args that
02:49 - everyone loves to hate I'll just cut to
02:51 - the chase on this one it no longer needs
02:53 - to be public so you can get rid of that
02:55 - it also no longer has to be static so
02:59 - you can get rid of that too then maybe
03:00 - the best part you can now completely
03:02 - omit this string array parameter Java
03:06 - won't require it anymore so now your
03:08 - whole main method is just void main open
03:11 - close parentheses pretty awesome with
03:14 - this upcoming version of java what it
03:15 - will do is look for the right main
03:18 - method to start your program it'll start
03:19 - by checking for the whole you know
03:21 - traditional public static void main
03:24 - string array args and if you have that
03:26 - it will use it but if you don't have
03:28 - that it will look for a public static
03:30 - void main without the string args
03:32 - parameter and then so on and so forth
03:34 - all the way down to just void main until
03:37 - it identifies a main method that it can
03:39 - use after this change Java's hello world
03:42 - program or any other small program that
03:44 - you're going to write is much more
03:46 - focused on what the program actually
03:48 - does and removes all these other more
03:51 - complicated Concepts that are just not
03:53 - relevant to the thing that you're trying
03:54 - to code once I saw this myself I
03:57 - immediately wanted to install this new
03:59 - version of java and take it for a spin
04:01 - however Java 21 isn't coming out until
04:04 - September and even then in Java 21 these
04:08 - features are just preview features and
04:10 - that makes it a little bit tougher to
04:12 - try out so we're going to go over how
04:14 - you can do this yourself on your own
04:16 - computer right now now the first thing
04:18 - you're going to have to do is install
04:19 - this new version of java since Java 21
04:22 - hasn't come out yet at the time of this
04:24 - recording you're going to have to
04:25 - download an early access build you can
04:27 - find the link to that down in the
04:29 - description but it's just
04:30 - jdk.java.net 21 and then down here in
04:34 - the builds section download the build
04:36 - that corresponds to your operating
04:38 - system I'm using Windows so I'll
04:39 - download the windows version after that
04:41 - finishes downloading you have to pick
04:43 - somewhere to extract the contents of
04:45 - that file now if you're a programmer I
04:47 - trust that you have the ability to do
04:49 - that on your own so I extracted Java 21
04:51 - into just C program files Java so this
04:55 - is where I extracted that jdk21 now I'm
04:58 - running Windows so in my case after I
05:00 - have this extracted I need to tell
05:03 - windows that when I run Java commands
05:05 - that's where I want it to look so to do
05:08 - that I have to set an environment
05:09 - variable such a search for environment
05:11 - variables edit the system environment
05:13 - variables and then click environment
05:15 - variables here and then down here I want
05:17 - to edit my path variable click edit and
05:20 - what you want to do is add an entry here
05:23 - that goes to that jdk21 that you just
05:26 - extracted and technically it has to go
05:28 - to the bin directory underneath it so in
05:30 - my case it's just C program files Java
05:32 - jdk 21 bin and if you have another jdk
05:37 - in your path somewhere you'll either
05:38 - need to get rid of it or just change it
05:40 - to this one anyway then you just hit OK
05:42 - and OK again now since these new
05:45 - features are only available as a preview
05:47 - in An Early Access build of java The
05:50 - Ides haven't really caught up to this
05:52 - yet which you've probably noticed by all
05:54 - the Angry Red Lines here in IntelliJ
05:56 - even though I've installed Java 21 and
05:58 - I'm telling it to use pre preview
06:00 - features it still thinks there's all
06:02 - kinds of syntax errors here so for our
06:04 - own sanity we're going to do this old
06:07 - school with notepad and the command line
06:09 - so just go to a folder where you want to
06:12 - create your new Java file so here I've
06:14 - created a folder under my C drive just
06:16 - called test Java 21. so in this folder I
06:19 - can just right click and go to new and
06:22 - then text document so here's where
06:24 - you're going to create your Java source
06:26 - file so how about let's call this new
06:28 - hello world and instead of dot text
06:30 - we'll call it dot Java and then we'll go
06:33 - ahead and open this up in notepad and in
06:36 - here we'll write our new way more
06:38 - awesome more concise version of hello
06:40 - world so all we need is void main open
06:43 - close parenthesis open the curly
06:45 - brackets and system dot out dot print
06:48 - line hello world and then close the
06:51 - curly brackets hit Ctrl s to save and
06:54 - that should be it now we have to compile
06:56 - this file and run it to make sure that
06:58 - this actually works so so to do that
07:00 - let's go back to the folder where we
07:02 - created this Java file and we're going
07:04 - to right click and we want to open this
07:06 - folder in the command line so in Windows
07:08 - 11 here I'm going to go to open in
07:09 - terminal but there's probably you know
07:11 - an open and command line or open in
07:13 - Powershell or whatever the equivalent is
07:15 - on your computer so I'll just hit open
07:16 - in terminal now usually to compile Java
07:19 - files in the command line all you need
07:21 - to do is write Java c space and then the
07:25 - name of your Java file so in this case
07:26 - that would be new
07:28 - helloworld.java however in this case
07:30 - because it's an early access version and
07:32 - we want to use the preview features of
07:35 - this version of java there's a little
07:36 - bit more that we have to do in order to
07:38 - get that to work so right after Java C
07:41 - we have to say dash dash release 21 and
07:45 - then another dash dash enable Dash
07:49 - preview to enable the preview features
07:51 - and then go ahead and hit enter to
07:54 - compile and this is good we didn't get
07:55 - any errors or anything we did however
07:57 - get a note that says that new hello
07:59 - world that Java uses preview versions of
08:02 - java se21 once you run that command and
08:05 - you successfully compile the file back
08:07 - over in the directory where you have
08:09 - this file you should now have a new
08:11 - Hello World dot class file that's what
08:13 - it compiles into now the next step is to
08:16 - run that class file again normally to
08:20 - run your code all you have to do is type
08:22 - Java space the name of your class so new
08:26 - hello world but again in this case
08:28 - because we're using preview features
08:30 - there's just a little bit more to it
08:32 - after Java We'll add dash dash enable
08:35 - Dash preview and that should be it so
08:39 - now when we hit enter it should run our
08:41 - new Hello World program and tell us
08:43 - hello world let's give it a try
08:46 - and it does so that's pretty awesome
08:48 - right we now have a brand new version of
08:52 - hello world that gets rid of the class
08:54 - decoration and gets rid of the public
08:57 - static and the string array args
09:00 - parameter and we're left with this nice
09:01 - concise crisp program that doesn't have
09:05 - any extra bloat and is so much easier
09:07 - for a beginner to understand now
09:09 - remember I noted before that IntelliJ
09:12 - still shows all of these errors here
09:14 - right it doesn't think that this is
09:16 - valid syntax but I do have it configured
09:19 - to use Java 21 and to use the preview
09:22 - features of java 21. so oddly enough
09:24 - when I give it the command to actually
09:27 - compile and run this program it does so
09:30 - successfully just fine so because this
09:33 - is a preview feature it's still a little
09:34 - clumsy to use and the IDE is just
09:37 - haven't caught up to it yet but that's
09:38 - fine they will I'm really curious to see
09:41 - what all of you think about this change
09:43 - like for you experience programmers out
09:45 - there do you like like this or do you
09:47 - like having all of these ceremony and
09:50 - extra complexity around that whole
09:52 - structure and especially to you
09:54 - beginners out there I'm curious if
09:56 - seeing this makes you
09:58 - breathe a big sigh of relief that all
10:01 - that extra stuff is gone there's also
10:03 - some other really cool features coming
10:04 - up in Java that I hope to tell you about
10:06 - as well till then be sure to give this
10:08 - video a like if you enjoyed it or if you
10:10 - learned something and be sure to
10:11 - subscribe so you don't miss each new
10:13 - Java video as always thank you so much
10:15 - for being here with me especially to
10:16 - experience this historic Java change see
10:19 - you next time