With timestamps:

00:01 - now let's go back to our php.ini file
00:04 - and have a look we've got error
00:05 - reporting currently set to eat all so we
00:08 - are reporting errors back to ourself um
00:11 - as we're developing now what happens if
00:15 - I want to report errors um strict errors
00:19 - for example well this doesn't include e
00:23 - strict so what I can do is I can specify
00:25 - to say and eore strict now what this is
00:29 - going to is this going to incorporate
00:31 - strict errors so what we're talking
00:33 - about is code that will might run but uh
00:38 - well let's have a look at the definition
00:39 - it might run but it um it's it's uh
00:42 - runtime notices enable PHP suggests
00:45 - changes to your code which will ensure
00:47 - the best um interoperability and forward
00:50 - compatibility of your code so it's
00:53 - basically giving you messages about your
00:56 - code itself rather than errors that you
00:58 - might be coming across
01:01 - so you don't need to include this but
01:02 - maybe it's a good idea if you want that
01:04 - kind of error reporting uh to show
01:07 - however we've used this Amber sand here
01:10 - but what we can do is we can say let's
01:13 - say e all and use this symbol to say
01:19 - um well we can say amber sand as well we
01:22 - can say not including e something else
01:25 - so we could say not including e notice
01:28 - I've just noticed as well this this
01:30 - example is actually written up here um
01:33 - so yeah I wasn't looking at it but
01:34 - coincidence so uh error reporting e or
01:37 - an e notice so what you could do is you
01:40 - could specify it like this which will
01:42 - show all errors except for notices and
01:44 - coding standard warnings um so it's not
01:47 - going to show uh coding it's not going
01:49 - to show notices and the coding standards
01:52 - warning is the estrict part of it so
01:54 - remember eel doesn't show e strict now
01:57 - if you wanted to show um
02:01 - um code standard warning so uh coding
02:04 - standard warning sorry you could just do
02:06 - this so you've got e strict here so it's
02:08 - up to you what level of output you want
02:10 - you can mess around with this and once
02:11 - you've got your application maybe built
02:13 - a bit bigger you can turn this on have a
02:15 - look I mean and keep it on anyway but um
02:18 - it's a good idea to fiddle around and
02:19 - see what you can come out with on this
02:22 - uh especially if you're getting a blank
02:23 - page you can change this to say just e
02:26 - or so when you finish
02:28 - developing um on your web server you
02:31 - should probably always turn this off um
02:35 - why the reason being is that if errors
02:38 - do occur on your page especially estrict
02:40 - notices you don't want your viewers to
02:43 - or your visitors on your website to be
02:45 - seeing estrict notices nor do you want
02:47 - them to see errors if you've maybe um
02:50 - trying to include a file somewhere for
02:52 - example if you're trying to include a
02:54 - file somewhere and it can't be found and
02:56 - you're returning an error what's
02:58 - happening is then there
03:00 - understanding the structure of your
03:01 - website so for security reasons it's
03:04 - probably best to turn error report to
03:06 - zero either on your local or web server
03:08 - when you release this to the public so
03:11 - you if you would say have paid Ser paid
03:14 - hosting um you might not be able to get
03:16 - access to
03:18 - php.ini however you can use a couple of
03:20 - functions to change values and that's
03:22 - what I'm going to go over uh just now
03:26 - so what happens if we want to D
03:29 - dynamically update this value inside PHP
03:34 - now let's close
03:36 - php.ini and we'll have a look um inside
03:38 - here so what we can actually do is
03:42 - um let's get rid of the outside content
03:45 - as well what we can actually do is we
03:47 - can specify error reporting either like
03:51 - this so we can say error reporting zero
03:54 - um I don't think it's working on my
03:57 - installation at the moment yeah uh let's
03:59 - just get rid of that see what
04:01 - happens yeah okay so error reporting
04:04 - zero um you can then change it to say e
04:08 - all um and then refresh the page and you
04:11 - can see oh no we're not getting that
04:13 - back maybe we
04:17 - could no okay so it's not working on my
04:19 - my installation just yet however you can
04:22 - use error reporting um maybe on like a
04:24 - public server you can also use things
04:27 - like um in I set is a great function to
04:31 - up update values in your php. inii so we
04:34 - can say p uh ini set error
04:38 - reporting e all so then I don't think
04:42 - this is going to work either for my
04:43 - installation no but um the idea of this
04:47 - is that you are dynamically setting your
04:50 - inii file or you're just using the error
04:53 - reporting function on its own um to uh
04:56 - change these values I think with the in
04:59 - I set you don't need to include these so
05:01 - it's just like that um regardless of
05:03 - whether it still works on mine no it
05:04 - doesn't so that's a bit about error
05:08 - reporting and how you can um produce
05:11 - either produce errors or hide errors
05:13 - from either yourself or the public and
05:16 - um a bit of information about why you
05:19 - should turn it off um as well as some
05:22 - examples of setting this up um on the
05:25 - Fly

Cleaned transcript:

now let's go back to our php.ini file and have a look we've got error reporting currently set to eat all so we are reporting errors back to ourself um as we're developing now what happens if I want to report errors um strict errors for example well this doesn't include e strict so what I can do is I can specify to say and eore strict now what this is going to is this going to incorporate strict errors so what we're talking about is code that will might run but uh well let's have a look at the definition it might run but it um it's it's uh runtime notices enable PHP suggests changes to your code which will ensure the best um interoperability and forward compatibility of your code so it's basically giving you messages about your code itself rather than errors that you might be coming across so you don't need to include this but maybe it's a good idea if you want that kind of error reporting uh to show however we've used this Amber sand here but what we can do is we can say let's say e all and use this symbol to say um well we can say amber sand as well we can say not including e something else so we could say not including e notice I've just noticed as well this this example is actually written up here um so yeah I wasn't looking at it but coincidence so uh error reporting e or an e notice so what you could do is you could specify it like this which will show all errors except for notices and coding standard warnings um so it's not going to show uh coding it's not going to show notices and the coding standards warning is the estrict part of it so remember eel doesn't show e strict now if you wanted to show um um code standard warning so uh coding standard warning sorry you could just do this so you've got e strict here so it's up to you what level of output you want you can mess around with this and once you've got your application maybe built a bit bigger you can turn this on have a look I mean and keep it on anyway but um it's a good idea to fiddle around and see what you can come out with on this uh especially if you're getting a blank page you can change this to say just e or so when you finish developing um on your web server you should probably always turn this off um why the reason being is that if errors do occur on your page especially estrict notices you don't want your viewers to or your visitors on your website to be seeing estrict notices nor do you want them to see errors if you've maybe um trying to include a file somewhere for example if you're trying to include a file somewhere and it can't be found and you're returning an error what's happening is then there understanding the structure of your website so for security reasons it's probably best to turn error report to zero either on your local or web server when you release this to the public so you if you would say have paid Ser paid hosting um you might not be able to get access to php.ini however you can use a couple of functions to change values and that's what I'm going to go over uh just now so what happens if we want to D dynamically update this value inside PHP now let's close php.ini and we'll have a look um inside here so what we can actually do is um let's get rid of the outside content as well what we can actually do is we can specify error reporting either like this so we can say error reporting zero um I don't think it's working on my installation at the moment yeah uh let's just get rid of that see what happens yeah okay so error reporting zero um you can then change it to say e all um and then refresh the page and you can see oh no we're not getting that back maybe we could no okay so it's not working on my my installation just yet however you can use error reporting um maybe on like a public server you can also use things like um in I set is a great function to up update values in your php. inii so we can say p uh ini set error reporting e all so then I don't think this is going to work either for my installation no but um the idea of this is that you are dynamically setting your inii file or you're just using the error reporting function on its own um to uh change these values I think with the in I set you don't need to include these so it's just like that um regardless of whether it still works on mine no it doesn't so that's a bit about error reporting and how you can um produce either produce errors or hide errors from either yourself or the public and um a bit of information about why you should turn it off um as well as some examples of setting this up um on the Fly
