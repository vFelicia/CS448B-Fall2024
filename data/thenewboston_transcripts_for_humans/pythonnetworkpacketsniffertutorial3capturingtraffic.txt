With timestamps:

00:00 - alright guys so now that we got the
00:01 - basic functions taken care of to handle
00:04 - and unpack just a simple ethernet frame
00:07 - what we can do now is we can start
00:08 - working on our main function so this is
00:11 - essentially our main program and all
00:13 - it's going to do is it's essentially
00:15 - just going to be a big loop and this
00:19 - loop is just going to run forever as
00:20 - long as their programs running and it's
00:22 - just going to sit and listen for packets
00:25 - to come in so it's just going to keep
00:26 - looping looping forever waiting for
00:29 - packets to come in and whenever they do
00:31 - we're pretty much going to extract all
00:33 - the information from it and display it
00:35 - to the user or do whatever we want with
00:37 - it so that is what we're doing
00:41 - essentially and before we can actually
00:44 - start that loop we're just going to make
00:46 - a simple socket so we need a socket of
00:49 - course so we can have connections with
00:50 - other computers so I'm just going to
00:53 - call it connection will sockets dot
00:59 - socket and if you guys don't know about
01:02 - sockets or anything like that then I
01:05 - recommend you check out my Python and
01:07 - reverse shell tutorials or there's
01:10 - another Python series I made recently
01:11 - I'm talking about sockets but there's
01:16 - kind of a lot to cover but I talked
01:17 - about it all in that so all right so the
01:20 - first one is just AF just the packet and
01:24 - suck it where you add just a raw data
01:32 - and suck it dot in T just three art so
01:38 - if you guys know about sockets then and
01:41 - if you watch my other tutorial series
01:42 - you know what those first two arguments
01:45 - are this is the last one I actually
01:46 - didn't talk about this last one make
01:49 - sure that it's compatible with all
01:50 - machines again making sure that
01:53 - big-endian little-endian converting it
01:56 - properly pretty much making sure the
01:58 - byte order is correct so we can read it
02:00 - so after this once we have just a raw
02:04 - socket we can go ahead and start our
02:06 - main loop now remember our main loop and
02:09 - actually
02:10 - go ahead and call Maine now so I don't
02:11 - forget it alright so again what our main
02:18 - loop is going to do is it's just it's
02:20 - just going to keep looping and looping
02:21 - an infinite loop looping forever and
02:24 - just going to listen for any data that
02:27 - comes across now once it comes across
02:29 - we're going to take raw data and make
02:33 - that variable and also the address and
02:36 - we're just going to write receive from
02:39 - and the biggest buffer size that you can
02:41 - have is 65535 so basically that's what
02:45 - we're doing we're taking our socket
02:47 - whenever it gets something whenever it
02:50 - sees information we're just going to go
02:52 - ahead and receive it all and then we're
02:54 - going to store it in the variable data
02:56 - and address and why is this indentation
03:00 - go ahead and format that alright are you
03:04 - freaking happy now art so that's what
03:06 - we're going to do and remember this is
03:08 - just the address of wherever it's
03:11 - sending to or the source and this is the
03:14 - actual data that we're going to be
03:15 - passing into ethernet frame so remember
03:18 - this function right here is going to
03:20 - unpack it all and pretty much give us
03:23 - the cool information of whatever we want
03:25 - so remember the Ethernet frame it
03:29 - returns four different chunks returns
03:33 - the destination the source the Ethernet
03:37 - type or Ethernet protocol and the actual
03:39 - payload or the cool stuff inside so what
03:43 - we can do from here is just write
03:45 - something like that's the MAC and source
03:49 - MAC and then what am I going to call
03:53 - this let's just call this a 'if proto
03:57 - and the actual data so now we can go
04:03 - ahead I'm not that lazy all right so
04:08 - Ethernet frame raw data all right so
04:13 - again what we're doing is taking that
04:15 - data that comes across the network and
04:16 - that's just the pulses of ones and zeros
04:18 - passing it to our function and we're
04:20 - going to extract all of that stuff and
04:23 - store it in nice awesome variables that
04:25 - we can use so now let's go ahead and
04:28 - make sure that this works up to this
04:30 - point by printing something out so let
04:33 - me just print out like a Ethernet frame
04:41 - oops knocked over my mouse I actually
04:44 - have a vertical mouse if you guys look
04:48 - on like Google Images type in vertical
04:50 - mouse it's like this weird tall mouse
04:52 - but I need to use it because I started
04:54 - having like carpal tunnel symptoms so
04:56 - I'm sure no one cares about that so I'm
04:59 - just going to keep going on methods
05:01 - order now all right
05:02 - so for this what we can do is we can
05:05 - just print out the destination the
05:07 - source in the protocol because we're
05:08 - going to be dealing with the data later
05:10 - because there's a bunch of stuff we need
05:11 - to do to it so I'll just write
05:15 - destination and then I write source then
05:26 - I'll write to proto who is sexting me in
05:31 - the middle of my video art so I'm just
05:33 - going to format this in the video for
05:37 - min all right so if you guys never seen
05:45 - these curly braces before basically
05:47 - they're just placeholders and you can
05:49 - format it in kind of weird ways but what
05:52 - I'm doing is I'm just going to have
05:53 - placeholders right here and what's going
05:55 - to go in these placeholders well just
05:58 - whatever you wrote right here remember
06:00 - in this point the MAC addresses are
06:02 - properly formatted already thanks to
06:05 - this function right here so what I'm
06:08 - going to do is I'm going to go ahead and
06:09 - let me go ahead and open a browser and
06:11 - refresh some page and check it out
06:16 - all right so right now what we did is we
06:19 - extracted the destiny
06:21 - the source and the protocol so this
06:26 - protocol right here this 8 that's the
06:30 - one that we're really concerned about
06:31 - because that's just normal um what you
06:34 - would think of is just like normal
06:36 - Internet traffic so that's where we're
06:38 - going to be focus on focusing on but
06:40 - right now it looks like everything is
06:42 - working fine but now that the boring
06:44 - Ethernet data is taken care of what we
06:47 - can do is we can start breaking up the
06:49 - main payload and start trying to figure
06:52 - out what websites they're going to what
06:54 - information they typed in you know whose
06:56 - Facebook profile they were looking at
06:58 - all that fun stuff
06:59 - so that's what we have to look forward
07:01 - to I will see you guys in the next video

Cleaned transcript:

alright guys so now that we got the basic functions taken care of to handle and unpack just a simple ethernet frame what we can do now is we can start working on our main function so this is essentially our main program and all it's going to do is it's essentially just going to be a big loop and this loop is just going to run forever as long as their programs running and it's just going to sit and listen for packets to come in so it's just going to keep looping looping forever waiting for packets to come in and whenever they do we're pretty much going to extract all the information from it and display it to the user or do whatever we want with it so that is what we're doing essentially and before we can actually start that loop we're just going to make a simple socket so we need a socket of course so we can have connections with other computers so I'm just going to call it connection will sockets dot socket and if you guys don't know about sockets or anything like that then I recommend you check out my Python and reverse shell tutorials or there's another Python series I made recently I'm talking about sockets but there's kind of a lot to cover but I talked about it all in that so all right so the first one is just AF just the packet and suck it where you add just a raw data and suck it dot in T just three art so if you guys know about sockets then and if you watch my other tutorial series you know what those first two arguments are this is the last one I actually didn't talk about this last one make sure that it's compatible with all machines again making sure that bigendian littleendian converting it properly pretty much making sure the byte order is correct so we can read it so after this once we have just a raw socket we can go ahead and start our main loop now remember our main loop and actually go ahead and call Maine now so I don't forget it alright so again what our main loop is going to do is it's just it's just going to keep looping and looping an infinite loop looping forever and just going to listen for any data that comes across now once it comes across we're going to take raw data and make that variable and also the address and we're just going to write receive from and the biggest buffer size that you can have is 65535 so basically that's what we're doing we're taking our socket whenever it gets something whenever it sees information we're just going to go ahead and receive it all and then we're going to store it in the variable data and address and why is this indentation go ahead and format that alright are you freaking happy now art so that's what we're going to do and remember this is just the address of wherever it's sending to or the source and this is the actual data that we're going to be passing into ethernet frame so remember this function right here is going to unpack it all and pretty much give us the cool information of whatever we want so remember the Ethernet frame it returns four different chunks returns the destination the source the Ethernet type or Ethernet protocol and the actual payload or the cool stuff inside so what we can do from here is just write something like that's the MAC and source MAC and then what am I going to call this let's just call this a 'if proto and the actual data so now we can go ahead I'm not that lazy all right so Ethernet frame raw data all right so again what we're doing is taking that data that comes across the network and that's just the pulses of ones and zeros passing it to our function and we're going to extract all of that stuff and store it in nice awesome variables that we can use so now let's go ahead and make sure that this works up to this point by printing something out so let me just print out like a Ethernet frame oops knocked over my mouse I actually have a vertical mouse if you guys look on like Google Images type in vertical mouse it's like this weird tall mouse but I need to use it because I started having like carpal tunnel symptoms so I'm sure no one cares about that so I'm just going to keep going on methods order now all right so for this what we can do is we can just print out the destination the source in the protocol because we're going to be dealing with the data later because there's a bunch of stuff we need to do to it so I'll just write destination and then I write source then I'll write to proto who is sexting me in the middle of my video art so I'm just going to format this in the video for min all right so if you guys never seen these curly braces before basically they're just placeholders and you can format it in kind of weird ways but what I'm doing is I'm just going to have placeholders right here and what's going to go in these placeholders well just whatever you wrote right here remember in this point the MAC addresses are properly formatted already thanks to this function right here so what I'm going to do is I'm going to go ahead and let me go ahead and open a browser and refresh some page and check it out all right so right now what we did is we extracted the destiny the source and the protocol so this protocol right here this 8 that's the one that we're really concerned about because that's just normal um what you would think of is just like normal Internet traffic so that's where we're going to be focus on focusing on but right now it looks like everything is working fine but now that the boring Ethernet data is taken care of what we can do is we can start breaking up the main payload and start trying to figure out what websites they're going to what information they typed in you know whose Facebook profile they were looking at all that fun stuff so that's what we have to look forward to I will see you guys in the next video
