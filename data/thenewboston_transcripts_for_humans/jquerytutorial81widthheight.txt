With timestamps:

00:00 - hi this is Alex from PHP academy.org
00:02 - with a video tutorial for the New Boston
00:06 - in this video we're going to be taking a
00:07 - look at the height and width properties
00:09 - in jQuery and how we can retrieve the
00:12 - height and the width of any particular
00:15 - element uh obviously we can also then
00:17 - apply this to the document window or the
00:20 - document itself or the browser window
00:22 - and the document itself so the first
00:25 - thing I'm going to go ahead and do is
00:26 - create a div on the page uh and we'll
00:29 - just put some content in here it doesn't
00:31 - really matter uh what we do um with
00:35 - regards to the ID let's go ahead and
00:36 - give it a name of something just like
00:38 - div something generic uh I'm then going
00:40 - to go ahead and style this uh so we can
00:43 - actually set uh some properties to it
00:46 - ourself so the first thing I'm just
00:48 - going to do is give it a background
00:49 - color uh just so we can see uh the sort
00:52 - of physical height and width of it uh
00:55 - and then I'm going to go ahead and
00:56 - actually set a height and width to it so
00:58 - I'm going to give it 100 pixel
01:00 - and the width I'm going to give it 250
01:03 - pixels so on our page now we can see uh
01:06 - that we've got a div here with some
01:08 - content and it's 250 width and 100
01:12 - height so now what I'm going to do is
01:14 - I'm going to go ahead uh in actual fact
01:17 - probably better to get rid of this
01:18 - content and I'm going to replace the
01:20 - content inside of the div with the
01:22 - height and the width of the div so we uh
01:26 - come over to ext.js which I have
01:28 - included on my page as well as jQuery
01:32 - and we can start to write our code out
01:33 - in here so I'm first of all going to say
01:36 - document. ready just when the Dom's
01:38 - loaded and we are ready to start um you
01:43 - know start outputting we just do this
01:44 - usually in J uh in
01:46 - jQuery uh and I'm going to go ahead and
01:48 - set uh two variables the first is div
01:54 - height and this is going to be equal to
01:57 - and we're going to reference or we're
01:59 - going to select this div and that's just
02:01 - called div so we can go ahead and say
02:03 - hashd and all we need to do is go ahead
02:05 - and apply the height property so
02:10 - uh yeah I knew I'd spell that wrong so
02:13 - yeah okay now we're going to go ahead
02:14 - and get the width so we do exactly the
02:17 - same thing uh but this time obviously uh
02:19 - it's quite easy to guess we would just
02:22 - apply width to the end so now I'm going
02:25 - to go ahead and output this to the div
02:27 - itself so div. text and in here I can go
02:32 - ahead and write something like
02:35 - um
02:41 - width width yeah that's right width x
02:44 - and or width
02:46 - x height X so X I'm just going to go
02:49 - ahead and replace with uh by appending
02:52 - this on uh and I'm going to replace the
02:55 - div width and I'm going to do the same
02:57 - with X so I can just append this on to
02:59 - the the end of this string uh and that
03:01 - is div height so this is obviously in
03:05 - pixels when we refresh you can see that
03:07 - we get a representation of the div width
03:10 - and the div height there are other ways
03:12 - to do this for example we could go ahead
03:14 - and use the CSS property uh so we could
03:17 - go ahead and use CSS here uh and then
03:20 - Supply or ask for the height and we
03:25 - could go ahead and then say
03:27 - CSS and then Supply width in there uh
03:31 - and what this will do is it will return
03:32 - more or less the same thing but you'll
03:34 - see that we'll get the PX on the end of
03:36 - it um and the there's two ways that why
03:39 - this is unreliable and may require more
03:42 - processing power uh the reason being is
03:45 - that for example if we were to uh use
03:48 - this and we wanted to use it as an
03:50 - integer this doesn't return it as an
03:52 - integer it only returns with uh the
03:54 - absolute value in the style. CSS file uh
03:58 - or the the CSS that's applied to it so
04:00 - what we would need to do is go ahead and
04:02 - use pass int now obviously the first uh
04:06 - downfall of this or the uh downside to
04:09 - this is that we're unnecessarily
04:12 - processing uh this uh and passing it as
04:15 - an integer and pass in it's just going
04:17 - to obviously pass the value as an
04:20 - integer and just go ahead and remove PX
04:23 - uh so we can we can do it that way but
04:25 - you know why write all this out when
04:28 - it's completely unnecessary uh and you
04:30 - could go ahead and use the width and
04:32 - height options uh like
04:35 - this and
04:37 - like this so uh the other reason that we
04:41 - would go ahead and do it like this is
04:44 - because we might not have predefined a
04:47 - uh a height and a width to this div for
04:50 - example the content might have filled up
04:52 - the div to the point where uh it's at a
04:55 - size that we haven't defined you know
04:56 - the content might not overlap but push
04:59 - the div and create more width or more
05:01 - height to it so using height and width
05:03 - will always return an integer which is
05:05 - one benefit less processing power uh and
05:08 - not having to use pass in and the other
05:10 - benefit is that it will get the height
05:12 - and the width reliably you know
05:14 - regardless of the content that we add so
05:16 - for example uh at the moment you can see
05:18 - it's width 250 and height 100 if I was
05:21 - to go ahead and inside of the div write
05:24 - um let's just say text and then break
05:28 - and let's just copy and paste this a few
05:31 - times and then in EXT change this to
05:35 - aend because we obviously don't want to
05:37 - rewrite over our content uh you can now
05:40 - see that oh okay yeah so right uh let's
05:45 - just go ahead and get rid of style in
05:47 - here so we have a div now that will just
05:49 - sort of like overflow the content uh you
05:52 - can now see that the you know the
05:54 - properties have changed for this we've
05:55 - got different width I'm not sure what oh
05:58 - that's just because it automatically
06:00 - went to the edge of the document

Cleaned transcript:

hi this is Alex from PHP academy.org with a video tutorial for the New Boston in this video we're going to be taking a look at the height and width properties in jQuery and how we can retrieve the height and the width of any particular element uh obviously we can also then apply this to the document window or the document itself or the browser window and the document itself so the first thing I'm going to go ahead and do is create a div on the page uh and we'll just put some content in here it doesn't really matter uh what we do um with regards to the ID let's go ahead and give it a name of something just like div something generic uh I'm then going to go ahead and style this uh so we can actually set uh some properties to it ourself so the first thing I'm just going to do is give it a background color uh just so we can see uh the sort of physical height and width of it uh and then I'm going to go ahead and actually set a height and width to it so I'm going to give it 100 pixel and the width I'm going to give it 250 pixels so on our page now we can see uh that we've got a div here with some content and it's 250 width and 100 height so now what I'm going to do is I'm going to go ahead uh in actual fact probably better to get rid of this content and I'm going to replace the content inside of the div with the height and the width of the div so we uh come over to ext.js which I have included on my page as well as jQuery and we can start to write our code out in here so I'm first of all going to say document. ready just when the Dom's loaded and we are ready to start um you know start outputting we just do this usually in J uh in jQuery uh and I'm going to go ahead and set uh two variables the first is div height and this is going to be equal to and we're going to reference or we're going to select this div and that's just called div so we can go ahead and say hashd and all we need to do is go ahead and apply the height property so uh yeah I knew I'd spell that wrong so yeah okay now we're going to go ahead and get the width so we do exactly the same thing uh but this time obviously uh it's quite easy to guess we would just apply width to the end so now I'm going to go ahead and output this to the div itself so div. text and in here I can go ahead and write something like um width width yeah that's right width x and or width x height X so X I'm just going to go ahead and replace with uh by appending this on uh and I'm going to replace the div width and I'm going to do the same with X so I can just append this on to the the end of this string uh and that is div height so this is obviously in pixels when we refresh you can see that we get a representation of the div width and the div height there are other ways to do this for example we could go ahead and use the CSS property uh so we could go ahead and use CSS here uh and then Supply or ask for the height and we could go ahead and then say CSS and then Supply width in there uh and what this will do is it will return more or less the same thing but you'll see that we'll get the PX on the end of it um and the there's two ways that why this is unreliable and may require more processing power uh the reason being is that for example if we were to uh use this and we wanted to use it as an integer this doesn't return it as an integer it only returns with uh the absolute value in the style. CSS file uh or the the CSS that's applied to it so what we would need to do is go ahead and use pass int now obviously the first uh downfall of this or the uh downside to this is that we're unnecessarily processing uh this uh and passing it as an integer and pass in it's just going to obviously pass the value as an integer and just go ahead and remove PX uh so we can we can do it that way but you know why write all this out when it's completely unnecessary uh and you could go ahead and use the width and height options uh like this and like this so uh the other reason that we would go ahead and do it like this is because we might not have predefined a uh a height and a width to this div for example the content might have filled up the div to the point where uh it's at a size that we haven't defined you know the content might not overlap but push the div and create more width or more height to it so using height and width will always return an integer which is one benefit less processing power uh and not having to use pass in and the other benefit is that it will get the height and the width reliably you know regardless of the content that we add so for example uh at the moment you can see it's width 250 and height 100 if I was to go ahead and inside of the div write um let's just say text and then break and let's just copy and paste this a few times and then in EXT change this to aend because we obviously don't want to rewrite over our content uh you can now see that oh okay yeah so right uh let's just go ahead and get rid of style in here so we have a div now that will just sort of like overflow the content uh you can now see that the you know the properties have changed for this we've got different width I'm not sure what oh that's just because it automatically went to the edge of the document
