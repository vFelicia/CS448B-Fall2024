With timestamps:

00:00 - alright guys welcome back to your 50th
00:02 - C++ tutorial and I know in the last
00:05 - tutorial I told you guys I was going to
00:06 - be building a program using the this
00:08 - keyword but I was building it and I
00:11 - noticed that there was a lot of concepts
00:13 - I didn't teach you guys so we're going
00:15 - to have to come back that after I taught
00:16 - you guys a couple new concepts so we'll
00:19 - get back to that but for now I want to
00:21 - talk to you guys about something called
00:22 - operator overloading
00:24 - now operator overloading is a weird
00:27 - feature with C++
00:28 - well operator overloading is is it
00:31 - allows you to use C++ operators like you
00:35 - know plus and multiply and it allows you
00:38 - to take these operators and change the
00:41 - way that they're used so for example
00:42 - maybe you have a class and you want to
00:45 - add two objects together well how the
00:48 - heck does C++ know how to add your two
00:50 - custom objects together well that way
00:53 - you can use operator overloading to
00:55 - specify what you want this operator to
00:57 - do so what I did already is I made a new
01:00 - class called Sally and I also include
01:03 - the Sally header in here and I included
01:05 - an IO Sriman namespace in here so now my
01:08 - dot CPP files look the same just to save
01:10 - this tutorial some time so now let's go
01:13 - ahead and get into the coding so let's
01:16 - go ahead in the sadi sally header file
01:19 - and notice that i took out both private
01:21 - and protected because we're just going
01:24 - to make everything in public it's going
01:25 - to make everything a whole lot easier
01:27 - so the Sally class is going to have a
01:30 - couple things in it the first thing it's
01:32 - going to have is a variable called num
01:34 - and this is the only variable it's going
01:36 - to have um it just needs a variable
01:38 - pretend this is like Sally's age or
01:40 - something I just named it num because
01:42 - it's easier to work with now let's go
01:45 - ahead and create two constructors the
01:47 - first constructor is pretty much just
01:49 - going to be empty constructor we're
01:51 - going to be building a sally object and
01:53 - whenever we don't pass any parameters to
01:55 - it it's just going to create a blank
01:57 - sally object and we're also going to be
02:00 - creating another constructor
02:02 - and whenever we create a Sally object
02:05 - and we pass an integer into it what I
02:07 - want to do is well let me go ahead I
02:09 - guess can code this right now whenever
02:12 - we create a Sally object and we pass an
02:15 - integer into it called like integer a or
02:17 - something what this is going to do is I
02:20 - like it right up there what this is
02:23 - going to do is take that number T and
02:25 - set it equal to a so we're going to
02:27 - create Sally objects in two ways a blank
02:30 - Sally object or a Sally object that
02:32 - already has a number simple enough so
02:36 - now let's get to the last thing in the
02:38 - Sally class and that is you know what
02:41 - I've been talking to you guys about this
02:43 - thing called operator overloading now
02:45 - again like I said operator overloading
02:47 - allows you to use C++ operators in a
02:50 - special way inside your classes so in
02:54 - order to use an overloaded operator you
02:57 - need to make a function and you need to
02:59 - give it a special name so whenever you
03:02 - build a function in C++ you need to
03:03 - first give it a return type now this
03:06 - function is actually going to return a
03:08 - sally object so go ahead and type a
03:10 - sally right there and now you have to
03:12 - name your function and you have to name
03:15 - it this whenever you're using an
03:17 - overloaded operator you have to start it
03:20 - with the named operator and then right
03:25 - after it
03:25 - you write what operator do you want to
03:28 - overload and this can be multiplied
03:30 - divided but we're going to be
03:32 - overloading the addition operator and
03:35 - what this is going to do is take two of
03:37 - these number properties and add them
03:39 - together so let's go ahead and write
03:41 - operator plus this is the name of our
03:44 - function now
03:46 - and this is also going to take a
03:48 - parameter what this function is going to
03:50 - do is it's going to take one Sally
03:53 - objects number and add another Sally
03:56 - objects number to it so we're going to
03:58 - need to pass it in another Sally object
04:01 - to add to it so let's go ahead and call
04:03 - it like um Sally well all we have to put
04:07 - is that Sally so now let's go ahead and
04:10 - build the function itself so let's go
04:13 - hop over to Sally dot CPP and let me
04:15 - make sure it I forget any semicolon
04:17 - looks good so now let's go ahead over to
04:19 - Sally about CPP and start building this
04:21 - function again the very first thing you
04:23 - write is their return type this is like
04:25 - void and well we're returning a Sally
04:28 - object so go ahead and write Sally right
04:29 - there and now we have to go ahead and
04:32 - write what class are we working with
04:33 - Sally what's the name of our function
04:36 - and remember that's operator plus since
04:40 - we're overloading the plus sign and what
04:42 - parameter does it takes well it takes a
04:44 - Sally parameter and just name this
04:47 - variable like ASO for another Sally
04:49 - object so now what we want to do is this
04:52 - we're going to be returning a brand-new
04:56 - Sally object so let's go ahead and make
04:58 - a new Sally object right now Sally and
05:01 - name this object brand-new simple enough
05:04 - so now let's go ahead and add the number
05:09 - property to this brand-new object
05:11 - because we created a brand new object
05:13 - but it doesn't have anything for its
05:16 - number property right here so let's go
05:18 - ahead and put brand-new dot num and what
05:23 - do we want to set this equal to well
05:25 - what we want to set equal to is the
05:26 - current objects number value plus
05:31 - another Sally objects number value

Cleaned transcript:

alright guys welcome back to your 50th C++ tutorial and I know in the last tutorial I told you guys I was going to be building a program using the this keyword but I was building it and I noticed that there was a lot of concepts I didn't teach you guys so we're going to have to come back that after I taught you guys a couple new concepts so we'll get back to that but for now I want to talk to you guys about something called operator overloading now operator overloading is a weird feature with C++ well operator overloading is is it allows you to use C++ operators like you know plus and multiply and it allows you to take these operators and change the way that they're used so for example maybe you have a class and you want to add two objects together well how the heck does C++ know how to add your two custom objects together well that way you can use operator overloading to specify what you want this operator to do so what I did already is I made a new class called Sally and I also include the Sally header in here and I included an IO Sriman namespace in here so now my dot CPP files look the same just to save this tutorial some time so now let's go ahead and get into the coding so let's go ahead in the sadi sally header file and notice that i took out both private and protected because we're just going to make everything in public it's going to make everything a whole lot easier so the Sally class is going to have a couple things in it the first thing it's going to have is a variable called num and this is the only variable it's going to have um it just needs a variable pretend this is like Sally's age or something I just named it num because it's easier to work with now let's go ahead and create two constructors the first constructor is pretty much just going to be empty constructor we're going to be building a sally object and whenever we don't pass any parameters to it it's just going to create a blank sally object and we're also going to be creating another constructor and whenever we create a Sally object and we pass an integer into it what I want to do is well let me go ahead I guess can code this right now whenever we create a Sally object and we pass an integer into it called like integer a or something what this is going to do is I like it right up there what this is going to do is take that number T and set it equal to a so we're going to create Sally objects in two ways a blank Sally object or a Sally object that already has a number simple enough so now let's get to the last thing in the Sally class and that is you know what I've been talking to you guys about this thing called operator overloading now again like I said operator overloading allows you to use C++ operators in a special way inside your classes so in order to use an overloaded operator you need to make a function and you need to give it a special name so whenever you build a function in C++ you need to first give it a return type now this function is actually going to return a sally object so go ahead and type a sally right there and now you have to name your function and you have to name it this whenever you're using an overloaded operator you have to start it with the named operator and then right after it you write what operator do you want to overload and this can be multiplied divided but we're going to be overloading the addition operator and what this is going to do is take two of these number properties and add them together so let's go ahead and write operator plus this is the name of our function now and this is also going to take a parameter what this function is going to do is it's going to take one Sally objects number and add another Sally objects number to it so we're going to need to pass it in another Sally object to add to it so let's go ahead and call it like um Sally well all we have to put is that Sally so now let's go ahead and build the function itself so let's go hop over to Sally dot CPP and let me make sure it I forget any semicolon looks good so now let's go ahead over to Sally about CPP and start building this function again the very first thing you write is their return type this is like void and well we're returning a Sally object so go ahead and write Sally right there and now we have to go ahead and write what class are we working with Sally what's the name of our function and remember that's operator plus since we're overloading the plus sign and what parameter does it takes well it takes a Sally parameter and just name this variable like ASO for another Sally object so now what we want to do is this we're going to be returning a brandnew Sally object so let's go ahead and make a new Sally object right now Sally and name this object brandnew simple enough so now let's go ahead and add the number property to this brandnew object because we created a brand new object but it doesn't have anything for its number property right here so let's go ahead and put brandnew dot num and what do we want to set this equal to well what we want to set equal to is the current objects number value plus another Sally objects number value
