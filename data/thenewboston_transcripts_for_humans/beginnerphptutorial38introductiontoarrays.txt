With timestamps:

00:00 - hello this is Alex from PHP academy' dog
00:02 - and this is a video tutorial for the new
00:05 - Boston and today we're going to be
00:07 - talking about arrays inside PHP now an
00:11 - array is a way to store data inside one
00:15 - variable and it's basically a collection
00:17 - of data so for example if I wanted to
00:20 - store a few numbers I'm going to say 1 5
00:26 - 10 20 now if I want to store these
00:30 - inside one place where I can access them
00:34 - that would be you know more useful than
00:37 - having to break them up somehow to use
00:40 - them individually it also works well
00:43 - when you want to loop through and take
00:45 - elements of an array so if you don't
00:47 - quite understand what an array is then
00:48 - follow the examples listen as carefully
00:53 - as you can watch as carefully as you can
00:54 - and you'll you'll start to grasp why
00:56 - they might be useful now in PHP I'm
01:00 - going to create an array by using a
01:03 - variable and I'm going to do this by
01:05 - creating the variable standard and
01:08 - assigning I'm going to assign it an
01:10 - array to it so I've called this variable
01:13 - food now I'm going to use the array
01:15 - keyword I'm going to put two brackets
01:17 - and then obviously I'm going to end my
01:18 - line
01:20 - now the two the two clearly broccoli
01:24 - bracket so rounded brackets are where
01:26 - you're going to put each element of your
01:28 - array in now an element is or a value of
01:33 - an array is automatically assigned a key
01:36 - and the keys start from zero and then
01:40 - they go on and on not so if I was to
01:43 - create first of all food here pasta this
01:48 - is key zero of our array this is the
01:53 - data held at Kesey row and the value of
01:58 - key 0 is pasta and Behrman we can put
02:01 - numbers in these as well but we can't
02:03 - mix them so they have to be all of one
02:05 - data type so food equals array of pasta
02:11 - Pizza salad and I've just separated
02:16 - these with commas and I have put them in
02:19 - single quotation marks so now we have
02:22 - three elements to our array at key 0
02:25 - here
02:25 - key 1 and key too so if I want to access
02:31 - say pizza I'm going to say echo food and
02:37 - this time I'm using square brackets this
02:39 - is accessing the key of the Iranian side
02:42 - here the element of each array and I
02:45 - want to say 1 now 1 you'd think normally
02:49 - would be relative to this one but
02:51 - obviously this is 0 this is 1 this is 2
02:55 - so we're echoing out key 1 of the array
03:00 - food and we know it's an array because
03:02 - we're using square brackets so this will
03:05 - simply echo out pizza so let's refresh
03:08 - and you can see that set out pizza the
03:11 - same as if we change this to 0 that's
03:14 - going to echo out pasta and if we change
03:16 - this to 2 that's going to echo out salad
03:19 - now there's a quick way to see I mean
03:22 - that's basically a raise on the round
03:25 - these are these are just normal arrays
03:27 - that were storing data in now if I
03:29 - wanted to say see all elements of the
03:31 - array I can use the print R here the
03:34 - print R function and all I do is put the
03:39 - name of the array in now this gives us
03:42 - it in a way that we can really
03:44 - understand how this is working so if we
03:47 - refresh you can now see a clear
03:52 - demonstration of how the array works and
03:56 - how they each value is stored so we
03:59 - start off with this array keyword that's
04:01 - just there and if but just out of our
04:06 - demonstration if you were to just echo
04:08 - out the array on its own all your
04:10 - display with is this array keyword
04:12 - you're not given the elements of the
04:14 - array you need to access them
04:15 - individually using the square brackets
04:18 - but for now if we're just using the
04:20 - print our food this is just basically
04:23 - showing us
04:24 - each key of the array so remember it's a
04:27 - key 0 P 1 and Q 2 and the value pasta is
04:31 - assigned to keys ero the value of Pizza
04:34 - is assigned to key 1 and the value of
04:36 - salad is assigned to key 2 so we can see
04:40 - these and access them however long
04:41 - however and many things we add on so for
04:45 - example I could add and on to the end of
04:48 - this and let's just say vegetable and I
04:53 - refresh you can see that that's LM added
04:56 - an a key of 3 with your value of
04:58 - vegetable so this is just basically how
05:01 - arrays work all you really need to know
05:03 - at this point is that you can store many
05:06 - different values inside one data type
05:10 - and then they can be accessed
05:11 - individually but later on we can look at
05:13 - things like associative arrays which
05:15 - give us a bit more flexibility and where
05:19 - we assign not keys but we assign our own
05:23 - our own of keys in in a specific type if
05:29 - you like that allow us to use
05:31 - associative arrays their advantage and
05:36 - also multi-dimensional arrays but this
05:38 - is just basically arrays as a whole
05:41 - now I've just had a thought you can
05:44 - actually assign values to arrays by you
05:48 - by this so if I was to say food now
05:51 - we've got 0 1 2 3 go into the assigned
05:54 - and a key at key 4 I want to assign
05:58 - something else so I could say fruit so
06:02 - I've assigned a key for the value fruit
06:05 - now obviously I could have just done
06:07 - this in here but if you wanted to do
06:09 - this and say a loop or something like
06:10 - that and this is would be the way to do
06:13 - it late obviously later on in PHP you'll
06:16 - understand why this method is a lot more
06:20 - useful than this method here so let's
06:24 - just go ahead and print our and then
06:28 - array of food which is how we've stored
06:30 - it and refresh and you can see that at
06:32 - the end we've got key 4 here and we've
06:34 - assigned the value of fruit and we've
06:36 - done that in a complete
06:37 - different way but individually it is
06:40 - useful in some circumstances so that's a
06:43 - basic arrays in PHP

Cleaned transcript:

hello this is Alex from PHP academy' dog and this is a video tutorial for the new Boston and today we're going to be talking about arrays inside PHP now an array is a way to store data inside one variable and it's basically a collection of data so for example if I wanted to store a few numbers I'm going to say 1 5 10 20 now if I want to store these inside one place where I can access them that would be you know more useful than having to break them up somehow to use them individually it also works well when you want to loop through and take elements of an array so if you don't quite understand what an array is then follow the examples listen as carefully as you can watch as carefully as you can and you'll you'll start to grasp why they might be useful now in PHP I'm going to create an array by using a variable and I'm going to do this by creating the variable standard and assigning I'm going to assign it an array to it so I've called this variable food now I'm going to use the array keyword I'm going to put two brackets and then obviously I'm going to end my line now the two the two clearly broccoli bracket so rounded brackets are where you're going to put each element of your array in now an element is or a value of an array is automatically assigned a key and the keys start from zero and then they go on and on not so if I was to create first of all food here pasta this is key zero of our array this is the data held at Kesey row and the value of key 0 is pasta and Behrman we can put numbers in these as well but we can't mix them so they have to be all of one data type so food equals array of pasta Pizza salad and I've just separated these with commas and I have put them in single quotation marks so now we have three elements to our array at key 0 here key 1 and key too so if I want to access say pizza I'm going to say echo food and this time I'm using square brackets this is accessing the key of the Iranian side here the element of each array and I want to say 1 now 1 you'd think normally would be relative to this one but obviously this is 0 this is 1 this is 2 so we're echoing out key 1 of the array food and we know it's an array because we're using square brackets so this will simply echo out pizza so let's refresh and you can see that set out pizza the same as if we change this to 0 that's going to echo out pasta and if we change this to 2 that's going to echo out salad now there's a quick way to see I mean that's basically a raise on the round these are these are just normal arrays that were storing data in now if I wanted to say see all elements of the array I can use the print R here the print R function and all I do is put the name of the array in now this gives us it in a way that we can really understand how this is working so if we refresh you can now see a clear demonstration of how the array works and how they each value is stored so we start off with this array keyword that's just there and if but just out of our demonstration if you were to just echo out the array on its own all your display with is this array keyword you're not given the elements of the array you need to access them individually using the square brackets but for now if we're just using the print our food this is just basically showing us each key of the array so remember it's a key 0 P 1 and Q 2 and the value pasta is assigned to keys ero the value of Pizza is assigned to key 1 and the value of salad is assigned to key 2 so we can see these and access them however long however and many things we add on so for example I could add and on to the end of this and let's just say vegetable and I refresh you can see that that's LM added an a key of 3 with your value of vegetable so this is just basically how arrays work all you really need to know at this point is that you can store many different values inside one data type and then they can be accessed individually but later on we can look at things like associative arrays which give us a bit more flexibility and where we assign not keys but we assign our own our own of keys in in a specific type if you like that allow us to use associative arrays their advantage and also multidimensional arrays but this is just basically arrays as a whole now I've just had a thought you can actually assign values to arrays by you by this so if I was to say food now we've got 0 1 2 3 go into the assigned and a key at key 4 I want to assign something else so I could say fruit so I've assigned a key for the value fruit now obviously I could have just done this in here but if you wanted to do this and say a loop or something like that and this is would be the way to do it late obviously later on in PHP you'll understand why this method is a lot more useful than this method here so let's just go ahead and print our and then array of food which is how we've stored it and refresh and you can see that at the end we've got key 4 here and we've assigned the value of fruit and we've done that in a complete different way but individually it is useful in some circumstances so that's a basic arrays in PHP
