With timestamps:

00:00 - already all welcome back to another
00:01 - video and now that we have the basic
00:04 - application framework taken care of in
00:07 - other words we have an icon that we can
00:09 - click and it displays the app what I
00:11 - want to do now is start building out the
00:13 - UI now when creating apps I like to
00:16 - build out the UI first before I write
00:18 - any of the like JavaScript react Redux
00:21 - logic and the reason for that is because
00:24 - once I have the UI and then I go in and
00:27 - start you know testing out building out
00:29 - all the logic the UI X is like a really
00:32 - clear visual indicator to verify that
00:34 - these things are working correctly now
00:37 - some people write the code first and
00:39 - then add the UI and after that but for
00:41 - me it's just a lot easier to build this
00:43 - way
00:44 - so with that said like I said I'm going
00:46 - to be working on the UI first
00:48 - and the way that I'm gonna approach this
00:51 - is I am first gonna write some very
00:54 - basic containers just to get the main
00:57 - structure kind of appearing on the
00:59 - screen and then once I have the main
01:01 - structure then I'll go back to each of
01:03 - those components and start styling them
01:05 - with you know the right colors and font
01:07 - sizes this and that but kind of like
01:09 - building a house you build the framework
01:11 - first or the foundation in the frame and
01:14 - then you can go in and you know paint
01:15 - the walls and add the carpeting so and
01:17 - so forth so with that said I'll show you
01:20 - how I am going to lay out this basic
01:22 - structure of course this main container
01:26 - right here I'll keep it a flex and what
01:29 - I'm going to do is just stack everything
01:31 - up into a single column
01:33 - and for those things that I'm going to
01:35 - stack I'm going to break it up like this
01:37 - I'm going to have one container
01:40 - that's gonna contain all these
01:42 - components and I'm going to call this
01:43 - the top and then under that I'm going to
01:46 - have this container which I'll just call
01:48 - probably connection status now under
01:50 - that I'll have this
01:52 - and this is going to be a simple one
01:53 - I'll call it the main button under that
01:55 - I'm going to have this timer and then
01:58 - under that I'll include all of these
02:00 - components into one container called
02:02 - history so one two three four five
02:08 - I would say like main containers that we
02:11 - have to build and then once we have that
02:13 - like I said I'll go back in kind of uh
02:14 - style everything looking nice and pretty
02:17 - but that is what we're gonna do so let
02:19 - me go ahead and get started
02:21 - all right so to do this I'm gonna go in
02:24 - my speed test and go in containers now
02:27 - the first one that I want to build is
02:30 - just called top
02:31 - and that is going to be for this or
02:34 - should I say these items right here
02:37 - and for making uh this container again
02:41 - I'm going to Nest it inside this
02:43 - containers directory and for each of
02:45 - these I'm going to create this component
02:47 - file and we already talked about what
02:49 - all these are the only thing I have to
02:51 - do here is just replace this component
02:54 - name with top
02:55 - and this is just going to be basic text
02:57 - right now
02:58 - and then this is also going to include a
03:00 - Styles file so once I have this very
03:03 - generic container I'm going to go ahead
03:05 - and import it into my top level
03:07 - container right here and in order to do
03:10 - that I'm just going to import top from
03:13 - apps
03:15 - speed test
03:17 - containers top
03:20 - all right so this is
03:23 - pretty much what I'm gonna do for all of
03:26 - these
03:28 - kind of top level items I'm going to
03:30 - make one more real quick just so we can
03:32 - kind of get the hang of it and then I'll
03:35 - probably just fast forward the video so
03:36 - you don't have to see me do the exact
03:38 - same thing again and again and again but
03:40 - you know you can just stick around with
03:42 - me for a little bit so under this top
03:44 - section right here we're just going to
03:46 - have this connection status
03:48 - so I will call this
03:50 - connection status and actually copy this
03:54 - because we're going to need it in just a
03:56 - second
03:57 - so of course same as the top directory
03:59 - it's going to contain two files one is
04:02 - this component file for index
04:07 - and then it's going to contain a Styles
04:09 - file which we're going to be filling out
04:11 - a little bit more later on
04:13 - but that's good for now
04:14 - and I can just copy this as well
04:20 - all right so we're going to import
04:21 - connection status
04:24 - from this location
04:33 - and all right so right now these are
04:35 - appearing side by side and that is
04:39 - because
04:40 - this top level Styles file or let me
04:44 - actually close this up so this is my top
04:47 - um level component and this is the
04:49 - related Styles file and by default
04:52 - whenever we display by Flex they're
04:54 - displayed in a row but we can do Flex
04:56 - Direction
04:58 - Chief Flex Direction column and that's
05:01 - going to make sure that those elements
05:03 - appear stacked on top of each other
05:05 - rather than side by side so now that you
05:08 - kind of get the basics of what I'm going
05:10 - for build out simple containers just for
05:13 - now and just plop them all in this top
05:15 - level one I'll go ahead and fast forward
05:18 - the video so you don't have to you know
05:19 - see me doing the same thing
05:22 - all right so we have the top then
05:24 - connection status then it's going to be
05:26 - the main button under that
05:29 - and then the timer right under the main
05:32 - button
05:34 - and then at the very bottom we're going
05:36 - to have that history table
05:38 - and there we go so now let's just check
05:41 - okay so our top section connection
05:43 - status main button timer history
05:45 - beautiful
05:46 - now I know I said right after this what
05:49 - I was gonna do is go through each of
05:52 - these components one by one and kind of
05:54 - do the Hi-Fi styling of each but before
05:56 - I even do that let me just kind of
05:58 - Shuffle things around a bit and kind of
06:00 - lay these out so you know kind of the
06:03 - spacing between them is a little bit
06:04 - more realistic I also want to bump these
06:07 - up to the very top since you can see by
06:10 - this element I want the very top section
06:13 - to appear at the very top of the app and
06:15 - not just floating in the center so let
06:17 - me go ahead and do that right now so to
06:20 - get all of these items floating to the
06:23 - top of this div what I need to do is
06:28 - go in my Styles and for Justified
06:30 - content Center this is actually going to
06:33 - be Flex start
06:34 - and that should bump it to the top
06:36 - beautiful and I also want to change my
06:40 - background
06:41 - and let me just copy some of these
06:44 - colors from one of my older projects
06:47 - so the background color I'm going to
06:50 - have this blue right here and for the
06:53 - primary color for this fonts I'll change
06:57 - that to this white color
07:00 - again I just have uh one of my older
07:02 - projects on the right side of the screen
07:04 - right here that I'm just stealing some
07:06 - styles from
07:07 - and another thing that I want is for the
07:11 - height to be a little bit taller than
07:13 - the width so for the height again all of
07:15 - these are probably going to be
07:16 - fine-tuned later on but for the height
07:18 - I'll say 80 and for the width I'll say
07:21 - 60 percent
07:23 - and since we are using percentages this
07:26 - is going to be kind of um relatively to
07:28 - the parent or responsive in a way but
07:32 - yeah that looks pretty good so far and I
07:36 - also want to add some padding
07:38 - so padding say 24 pixels and another
07:41 - thing that I want to mention is that
07:43 - even though I'm hard coding in these hex
07:45 - values right now
07:46 - what I'm going to do once all this is
07:49 - done is I'm going to go and convert all
07:52 - of these hard-coded values
07:54 - into like a color theme in that way we
07:57 - for example whenever we change the text
07:59 - color or background color we don't have
08:01 - to go and change it in all of these we
08:03 - just have to change it in that one
08:04 - location now normally I would do this
08:07 - beforehand for example if we had a
08:10 - designer and they had a style guide I
08:12 - would lay everything out beforehand but
08:14 - since I am the lead developer and
08:18 - product manager and designer and
08:19 - everything in this it doesn't really
08:21 - matter that much since I'm the only
08:23 - person working on this code so this
08:25 - works for now but again if you're
08:27 - working with the team you probably want
08:29 - to standardize these things a little bit
08:30 - beforehand
08:32 - so okay you got that padding a nice
08:35 - layout so now what I want to do is go
08:38 - through each of these and just get the
08:40 - basic spacing for it so for the
08:43 - connection status this is going to be a
08:45 - little bit far away from the top but not
08:48 - as much as the padding so maybe 12
08:49 - pixels from this top section
08:52 - so the connection status
08:54 - the styles for it
08:55 - I'll just say margin top
08:58 - 12 pixels
09:01 - all right looking better now for the
09:03 - main button we probably want this quite
09:07 - a bit aways from the connection status
09:08 - since it's like the the center item the
09:11 - main piece
09:13 - so I'll say margin top 48 pixels
09:19 - how's that look
09:20 - all right not bad not bad
09:23 - for the timer we can do 12 pixels on
09:25 - that's
09:32 - and for the history
09:36 - to try 48 and then we'll see how
09:37 - everything looks together margin top
09:40 - 48 pixels and how we looking
09:43 - all right pretty good so yeah just to
09:46 - get like the uh generic spacing again
09:49 - all of these are going to be tweaked but
09:50 - once I start styling everything I want
09:52 - it in roughly the general area that it's
09:55 - going to land up
09:57 - so all right now that we got that taken
09:59 - care of let's go ahead and start with
10:01 - the top and kind of dig deep into the
10:03 - styling of this so let me actually make
10:05 - this a wee bit bigger since we are going
10:09 - to be styling everything and all right
10:11 - so I'll show you how I'm going to
10:14 - structure this top section right now
10:17 - so this top container is going to
10:20 - contain both of these elements right
10:23 - here however the way that I want to
10:26 - structure it is kind of like this so I
10:30 - want to have a card
10:32 - and I'll have the card contain these
10:37 - components so I'll have a card on the
10:39 - left and a card on the right and just to
10:42 - kind of show you this let me
10:45 - send this to back and get some
10:48 - background in here something like this
10:51 - so this will be a card
10:54 - and I'll have
10:56 - two of these don't mind my uh chaotic
10:58 - styling right now but in one of these
11:01 - cards I'm gonna have the network info
11:09 - something like this so in one of the
11:11 - cards I'm gonna have this or excuse me
11:13 - the account info and the other card
11:20 - I'm gonna have the network info
11:24 - and then
11:29 - both of these cards
11:31 - I'll render in that top section right
11:34 - there but this way I can kind of split
11:36 - everything up correctly so I'll make a
11:39 - card component and then I'll also
11:42 - separate this into its own component and
11:45 - the reason that I'm doing that is
11:46 - because we are reusing these kind of
11:50 - cluster of elements right here and we
11:53 - also have it right here and in addition
11:56 - to those two places for the account in
11:58 - the network whenever we click this
12:01 - pencil icon and we need to select
12:04 - from one of our devices or accounts and
12:08 - networks then we're going to be using
12:10 - that same exact styling again there but
12:13 - anyways because we're going to be
12:14 - reusing kind of the same generic layout
12:17 - with the logo on the left and text on
12:19 - the right that's why I'm kind of
12:21 - splitting everything up that way but for
12:23 - right now I just want to make these uh
12:24 - basic cards and then we'll get our top
12:26 - laid out
12:28 - just close everything close all and then
12:31 - in our top
12:33 - so in here we are going to be sticking
12:36 - two cards and we'll style those in just
12:39 - a bit but before we even do that we can
12:41 - actually just
12:43 - style this so I'll say it's going to be
12:45 - displayed as Flex and we don't need to
12:48 - do Flex Direction column because by
12:50 - default it's a row and we want those
12:52 - cards to appear side by side now another
12:54 - cool uh it's not even a trick just a CSS
12:58 - property is a gap and what this allows
13:02 - is well it's actually a pretty good
13:06 - description it's not what I meant to pop
13:08 - open one sec okay so this Gap property
13:11 - in Flex elements is just the Gap that
13:13 - appears between these items right here
13:15 - and I actually didn't know about it till
13:17 - recently before what I used to do is I
13:20 - would say like the left card has a right
13:22 - margin of 12 and the right card has a
13:24 - left margin of 12 and it was just kind
13:26 - of a pain so whoever came up with this
13:28 - property uh thank you for saving me a
13:30 - lot of time and then aside from this I
13:33 - just do want to do Justified content
13:35 - Center
13:37 - and the last thing is just width I need
13:40 - to explicitly say this is going to be
13:42 - 100 and the reason for that is because
13:46 - this top I want this to expand basically
13:50 - the full width of the parent so the
13:52 - cards kind of take up the full space and
13:54 - aren't just floating in the middle I
13:56 - just think it looks a little bit better
13:57 - that way but anyways this is how our
13:59 - cards are going to be laid out and now
14:02 - let's go ahead and create those cards
14:04 - components so the way that I like to
14:08 - structure my applications and I'll show
14:10 - you how I did it in chat is I have the
14:13 - containers directory right here and
14:15 - that's the one that we created in the
14:16 - last video and I also have a components
14:19 - directory and I think a lot of react
14:21 - applications do this but the standard
14:24 - that I'm going for is that containers
14:27 - are typically the higher level
14:28 - components that are typically hooked up
14:31 - to Redux now components are again these
14:36 - are all components but as far as naming
14:38 - convention goes these are going to be
14:41 - um like display only components and when
14:43 - I'm writing components even though I
14:45 - break this rule sometimes I try to pass
14:48 - in only primitive data only so strings
14:50 - number so on and so forth and it just
14:53 - kind of helps separate or organize
14:55 - things where all the Redux is in here
14:57 - and all the display is in a directory
15:00 - called components so I don't know it's
15:03 - been working out so far so let's go
15:04 - ahead and follow that design pattern
15:07 - so I'm gonna make this uh directory
15:09 - called components and in here I'll make
15:12 - our very first component and that is
15:14 - going to be top card
15:17 - so this top card component is just going
15:19 - to be like any of our other ones
15:23 - oops
15:30 - and we'll just make a dummy component
15:33 - right now with some styling that we will
15:36 - fill out a little bit later on but yeah
15:39 - this is good right now I just want to
15:41 - have something that we can import and
15:43 - show on the screen so we'll say import
15:46 - top card from apps
15:50 - speed test
15:51 - components
15:53 - top card
15:56 - now that we have that
15:59 - again we're going to have two of them
16:01 - one for the account one for the network
16:03 - and this is probably going to be a
16:05 - little bit funky until we get some
16:07 - background action going on here but
16:09 - there we have our two top card
16:10 - components and these are both displayed
16:13 - in the top container so now that we got
16:17 - these let's just go ahead and uh make
16:19 - the styling a little bit prettier
16:21 - now before we hop into our
16:24 - style file let's go ahead and think
16:27 - about how we want to structure this so
16:30 - actually
16:32 - in addition to all of these
16:36 - I do want one other thing in here like a
16:41 - heading of sorts so something like this
16:45 - so this is going to say a device or
16:48 - account
16:49 - something like that
16:51 - and then this one right here
16:58 - is going to say Network
17:01 - but I say this because whenever I'm
17:04 - structuring this top card and deciding
17:06 - what props to pass in what we'll do is
17:09 - we'll pass in two props the first one is
17:12 - the text for the heading and the second
17:16 - one is we're going to be passing in
17:18 - whatever react component we want to
17:20 - display Under The Heading and we'll just
17:22 - call this content or something and the
17:24 - reason that I want to pass in a
17:26 - component rather than all these
17:27 - individual pieces is because whenever we
17:31 - let me copy this and show you
17:34 - whenever we first boot up the app for
17:38 - the very first time we're not going to
17:39 - have any network selected so we're gonna
17:42 - have to have some empty state
17:45 - all right come on all right so we're
17:48 - gonna have to have some empty State and
17:49 - I don't know exactly what it's going to
17:51 - be
17:52 - but it's going to say something like uh
17:54 - select
17:56 - Network I don't know maybe it's going to
17:58 - be a link or something
18:01 - like this but either way
18:04 - um by allowing us to pass in a component
18:06 - rather than like a logo and this and
18:08 - that and uh an action icon we can just
18:10 - say give me a header give me some
18:12 - content to display under and then it's
18:14 - going to be flexible enough for both of
18:16 - our needs so
18:19 - because we'll keep this here for
18:20 - reference and okay
18:23 - so pop in back open the top card pretty
18:27 - good huh all right now
18:31 - let me actually go ahead and write these
18:32 - style components first
18:34 - so the first thing that I'm going to
18:36 - want to do is create that heading
18:39 - and I'll say this heading can
18:43 - we can make it a heading but I'll just
18:45 - go ahead and make it a dip for now
18:47 - maybe not the best practice but uh yeah
18:50 - just the way I styled this and now let
18:53 - me go ahead and copy this color
18:56 - from my other project and I'll say the
18:58 - font size can be 13 pixels and the font
19:01 - weight can be 500.
19:04 - all right now to use this
19:10 - for the heading even though we're going
19:12 - to be passing in a custom prop which is
19:14 - going to be a string for this
19:15 - just to get something appearing on the
19:17 - screen I'll say heading right there
19:19 - and let me just make sure this okay good
19:23 - to go
19:24 - and now under this heading is where we
19:27 - will have our content
19:38 - so the contents we don't want to add too
19:41 - much styling here since we really want
19:45 - the uh the component that is passed in
19:48 - to have all the styling but we do want a
19:51 - little bit space between the content
19:54 - whatever our component is that we pass
19:56 - in and the heading so say margin top is
19:58 - 12 pixels
20:00 - and then
20:03 - just do something like this
20:09 - content here and let's see how this
20:11 - looks
20:13 - all right so these are our cards we have
20:15 - our heading on top and again this
20:16 - heading is going to be it's going to be
20:19 - either account or network whatever we
20:21 - decide
20:22 - and our content and all right so before
20:26 - I go any further what I want to do is
20:29 - actually just style this card as in the
20:31 - entire container
20:33 - and let me do that right now so the
20:37 - container or the card itself
20:39 - will say that it has this slight blue
20:42 - background
20:45 - there you go I don't know if you can see
20:47 - it yet but uh this card background has a
20:50 - slightly different shade of blue than
20:52 - our main or primary background
20:54 - and then after this I want to add a
20:57 - border radius as well since uh the
21:00 - square cards weren't looking that great
21:02 - and let's see
21:05 - yeah let me just display as Flex because
21:07 - we have two items in here the heading
21:11 - and the content and they are always
21:14 - going to be displayed in a column so
21:16 - might as well just kind of standardize
21:18 - so display flex and then I can do Flex
21:21 - one to stretch it out the flex direction
21:24 - we want to make sure that's a column
21:25 - because remember by default it's going
21:27 - to be a row since I want those elements
21:30 - to stack on top of each other there you
21:31 - go
21:32 - and for padding so everything isn't just
21:35 - butted up against the edge we'll do 10
21:37 - pixels 14 pixels
21:41 - and we'll see how these cards are
21:42 - looking all right looking good look at
21:45 - that
21:46 - okay so I think this is pretty good
21:49 - right now for these top cards
21:54 - hmm actually what I probably can do is I
21:59 - can create the element
22:02 - for this
22:05 - huh so this is actually pretty
22:09 - interesting so we know that we have this
22:12 - heading in the content section right now
22:14 - and we're flexible to pass anything into
22:16 - the
22:17 - get this on the screen the content but
22:20 - what I want to do is actually take these
22:25 - three UI elements and I want to make a
22:28 - separate component out of this
22:30 - and I do not want to include this action
22:34 - button in this component right here and
22:39 - I don't want to do that because like I
22:40 - said whenever we click this it's going
22:44 - to pop up a modal and that modal is
22:46 - going to have a list of these accounts
22:48 - or networks and whenever we use that UI
22:52 - that is not going to have this action
22:55 - button on the right so I'll create a
22:57 - component for this little layout right
23:00 - here and I'll call it like
23:01 - identification since that's really all
23:03 - these labels are if you see in both the
23:06 - whenever you add an account
23:09 - and or you add a network
23:12 - all of this information including
23:14 - display name the logo and the identifier
23:18 - it's really just like a label for
23:21 - yourself to easily identify this stuff
23:24 - so I call it identification
23:26 - oh can't talk today but
23:29 - yeah with that said let's go ahead and
23:30 - get started so let me go ahead and pop
23:35 - open this again
23:38 - get rid of that for now okay so we're
23:40 - going to be creating two more components
23:42 - one is called
23:45 - identification
23:48 - make sure I spelled that right and the
23:50 - other is well we'll get to that in a
23:53 - second so for the identification
23:58 - just go ahead and create a new component
24:02 - you type that out again so
24:06 - call this identification and this style
24:09 - file
24:11 - and for this identification
24:14 - component it's just going to be this
24:16 - right here
24:17 - so since this is the component I'll have
24:21 - a flex layout and I can just keep the
24:23 - default it's not going to be stacked as
24:25 - a column it'll have this image on the
24:27 - left and then this text on the right and
24:29 - then inside this text I'll break it down
24:31 - into uh top text right here in bottom
24:35 - text right there
24:37 - so in identification the first thing I
24:40 - want to do is for the main container
24:43 - I'll just display it as Flex
24:45 - and then actually might as well create
24:47 - these
24:49 - separate elements right now so for the
24:52 - image again this is not going to be a
24:55 - div it's going to be an image tag so we
24:57 - can just say style.img
24:59 - and I want the image to be circular so
25:03 - I'm going to do border radius 50 percent
25:06 - and then I'll just do uh I'll give it a
25:08 - height of 36 I think that's
25:11 - what the size of those other ones are
25:14 - height width
25:16 - so this is going to make sure that it's
25:18 - always a square circle and then since I
25:21 - want a little bit of space between this
25:23 - image and this text right here I'll add
25:26 - a margin right
25:28 - keep clicking open the wrong thing
25:29 - embarrassing so say margin rights is 10
25:33 - pixels it should be good for now
25:37 - all right so now let's go ahead and
25:39 - stick that in there so s dot image
25:43 - and
25:48 - and since that's an image tag we have
25:51 - source
25:53 - and just to test let me go in my GitHub
25:56 - and
25:57 - actually I can just get it from here
26:04 - I just need like a sample URL eventually
26:07 - this is all going to be coming from
26:09 - Redux of course
26:11 - but for now just get some dummy data in
26:13 - there
26:15 - give some alt text
26:20 - location there we go and then to the
26:23 - right of this is where we're going to
26:25 - have our text
26:27 - so I'll just say that
26:32 - actually maybe I'll do this
26:35 - so I'm gonna have a main div for both of
26:39 - these
26:40 - and then I'll have uh divs inside them
26:43 - for the top and bottom just so we can
26:44 - get our main layout taken care of
26:49 - text and I'm gonna have top text
26:53 - and then Quantum text
26:59 - all right so our main layout is just
27:03 - gonna have two components
27:05 - an image to the left in the text area to
27:08 - the right and inside the text I'm going
27:10 - to have that taut text
27:20 - now even though eventually we're going
27:21 - to be passing this in dynamically as a
27:24 - prop as content for now just to make
27:28 - sure everything is looking right we'll
27:30 - say Imports identification
27:37 - perhaps speed test
27:39 - components identification
27:42 - and for the content
27:48 - that's we're going to have our
27:49 - identification and now we should have
27:51 - something on the screen looking good
27:53 - all right so now let's go ahead and just
27:56 - style this top and bottom text for this
27:58 - identification
28:00 - and check it out
28:03 - so for the top text we can have this a
28:07 - whitish color and
28:09 - let's go with 14 pixels
28:11 - and for the bottom text we can keep the
28:14 - default color for this we'll say the
28:16 - font size a little bit smaller maybe 12
28:19 - pixels and because I want the bottom
28:22 - text a little bit bumped down
28:24 - say margin top
28:27 - and we'll say uh two pixels
28:31 - all right and now let's actually let's
28:34 - add some
28:37 - sample network data in here
28:42 - so we'll say tnb the New Boston Network
28:50 - again all of this is uh can be
28:52 - programmed later but just want some
28:54 - realistic data sometimes you have like
28:56 - lorem ipsum or dummy data and it's just
28:59 - uh it's like not the right content
29:01 - length or I don't know you have to go
29:03 - back in later and tweak things so
29:05 - looking good and now
29:09 - top card change this to network
29:14 - all right so yeah everything is uh hard
29:16 - coded in for the time being but that's
29:18 - the basic structure we're looking for
29:21 - now another thing that I want to do and
29:24 - this may seem like Overkill but I think
29:27 - it's going to work out is that we are
29:31 - not going to be actually passing
29:34 - this identification node in here
29:36 - directly even when we have a network for
29:41 - example we're either going to be passing
29:42 - in this uh like empty State as you can
29:45 - call it or this network component
29:48 - however instead of just passing it in
29:51 - kind of like a raw dog in it I want to
29:54 - pass in something
29:57 - where we can have this layout and this
30:01 - layout right here is just going to have
30:03 - this component on the left and then
30:05 - another component on the right hand side
30:08 - but I want to space them so they take up
30:10 - the full width of the card and again
30:12 - like I said it may seem like Overkill
30:14 - but I'm gonna make another component
30:17 - just for this layout
30:19 - so
30:21 - in this component so I'm going to make
30:23 - one more
30:26 - probably called spaced items
30:28 - and again the only point of this
30:32 - is just so I can have a nice layout to
30:34 - space out two things evenly
30:45 - all right so let me close these for now
30:48 - and what is spaced items going to do
30:51 - well for this main layout what we want
30:54 - to do is we want to display it as Flex
30:56 - uh Flex Direction row since things are
30:59 - going to be appearing left and right and
31:01 - for the items I'm going to want those uh
31:04 - Center aligned and this is the vertical
31:06 - alignment
31:09 - sort those lines
31:13 - so the vertical vertical alignment is
31:15 - going to be centered and for Justified
31:17 - content that's going to be space between
31:19 - and what that's going to do is pretty
31:21 - much just make sure that this section
31:23 - appears to the left most as we can in
31:25 - that this icon appears to the rightmost
31:27 - as we can and just take up the full
31:30 - width of the card basically
31:32 - all right so there we go and now what I
31:36 - can do is probably this
31:43 - so I'm gonna have a left div and a rate
31:47 - div
31:50 - and probably an icon as well but this
31:53 - should be good for now so
31:55 - yeah in here in the space items I'm
31:59 - going to say
32:00 - left
32:07 - and then this is going to be right
32:12 - and in that left section I'm going to
32:15 - move this identification component over
32:17 - again all of this stuff is going to be
32:19 - passed in dynamically but
32:23 - for now just hard code everything in
32:26 - okay
32:28 - and now that we have our UI elements
32:33 - being rendered in the space items
32:35 - component rather than
32:37 - [Music]
32:39 - hard coding into this top card what I'm
32:41 - actually going to do is this
32:48 - all right so I know this looks kind of
32:51 - cluttered but as we kind of build this
32:53 - out I think it'll make sense why okay so
32:56 - check it out so now in this card we're
32:59 - passing in the spaced item component and
33:02 - in the space item component we can have
33:04 - two components one thing on the left
33:07 - which is our identification and one
33:08 - thing on the right which is going to be
33:10 - that pencil icon so let's go ahead and
33:13 - figure out how to do that pencil icon
33:14 - right now
33:15 - so what we can do is we can replace this
33:18 - right text
33:19 - here
33:21 - and
33:22 - okay so again this is going to be being
33:25 - in being passed in as a react node
33:27 - however for the time being I'm just
33:30 - going to hard code this in to show you
33:32 - how to work with icons and then it's
33:33 - going to be a piece of cake to pull out
33:35 - in just a second
33:36 - so
33:38 - in tnb OS I already have material icons
33:41 - installed
33:43 - so from
33:45 - in the packages at ndi Js
33:50 - we want to pull out the icon that we
33:52 - want to use and everything is prefixed
33:53 - with MDI oh look at that pencil right
33:56 - there
33:57 - so in order to use one of these icons
34:02 - actually let's go ahead and make this a
34:04 - styled component in uh save the time so
34:09 - in the styles for here right under
34:11 - styled components what I want to do from
34:14 - actually
34:16 - MDI react I'm going to be importing the
34:20 - icon for it and I'm going to call it you
34:22 - which is kind of a shorthand for
34:25 - unstyled MDI icon and this is just the
34:28 - icon component now the reason that I
34:30 - want to import it right here in style
34:31 - components is because well I'll show you
34:34 - in just a second actually let me let me
34:37 - write this out so it makes sense
34:39 - so
34:41 - I'm gonna create a style component
34:43 - called icon and what this is is it's a
34:47 - styled version of this component right
34:49 - here so whenever you work with styled
34:52 - icons you don't always just have to
34:54 - style HTML elements right here you can
34:57 - actually style other react components
34:59 - and this just like kind of applies
35:02 - additional styles to them on top of any
35:04 - styles that they already have just uh
35:06 - naturally I guess you could say
35:08 - and for this we're going to be adding
35:11 - some CSS in here in just a bit but just
35:15 - to kind of get everything hooked up on
35:17 - the right hand side I can then say
35:19 - display my icon right like that
35:23 - uh it's gonna take a path
35:26 - and that path is going to be
35:29 - pencil and for the size of this which it
35:32 - also takes
35:35 - I will say that this is going to be 28
35:37 - pixels
35:38 - so again this is the exact same thing
35:40 - then if you were to do something like
35:43 - this
35:48 - this is perfectly valid as well however
35:51 - the reason that
35:53 - I structure it this way is because we
35:56 - want to apply our own custom styles to
35:59 - this icon and what are those Styles
36:01 - great question so the first thing I want
36:03 - to do is I want to give it a border
36:04 - radius of 50 make sure that this appears
36:07 - circular
36:08 - and the color of this I'm going to be
36:11 - using this like gray blue color and I
36:14 - also want to give it a padding of four
36:16 - pixels
36:18 - just so the icon isn't butted right up
36:21 - against the edges and because I have
36:24 - this padding of four pixels and the card
36:26 - itself also has padding it's going to
36:29 - look a little bit
36:30 - um it's going to look like it has too
36:32 - much padding on the right hand side so
36:34 - to kind of compensate for this I'm going
36:36 - to do margin right and I'm going to take
36:38 - away those four pixels of padding so
36:40 - okay border radius color margin right
36:43 - padding and
36:44 - another thing that I can do actually let
36:47 - me see if it just displays right here
36:48 - okay so this is the icon right here and
36:53 - what I want to do is whenever we hover
36:55 - over this I want to change the
36:57 - background of it and also the color and
36:59 - I also want to change my cursor right
37:00 - here to a pointer just to give the user
37:03 - some indication that they are indeed uh
37:05 - hovering over it so in order to do that
37:08 - I do amp sand
37:10 - hover State and for the background
37:15 - actually let me get this background in
37:16 - color
37:18 - background in color a nice some shades
37:21 - of blue and for the cursor I'll just do
37:23 - pointer
37:26 - all right so now when I hover over it
37:28 - you see we get this cool little hover
37:30 - State and just to spice things up a
37:33 - little bit I'm going to add a transition
37:37 - so it kind of Fades rather than popping
37:39 - in just makes a little bit look a little
37:40 - bit more professional and they'll say
37:42 - 0.15 seconds
37:48 - now when I hover over it well you
37:51 - probably can't tell but uh I can it's
37:53 - subtle but there's this fade rather than
37:55 - just you know popping to this different
37:57 - state makes me feel a little bit more
37:58 - professional you know
38:00 - so I think that this is probably good
38:03 - for these top cards the only other UI
38:06 - element that we really have to write for
38:08 - these top cards is whatever we decide to
38:11 - do about
38:12 - our empty State element right here but
38:16 - we'll actually save this for later on
38:19 - once we right around the time we
38:21 - actually hook this into Redux and the
38:25 - reason for that is just because the way
38:26 - the uh I am building out the UI right
38:29 - now it'll be kind of a pain to have this
38:32 - identification UI element and then an
38:35 - empty State both
38:36 - so we'll save that for later don't have
38:39 - to build out you know every single UI
38:41 - element just in this step
38:43 - so yeah in the next tutorial we'll go to
38:45 - the connection status styling and then
38:48 - kind of just work our way down from here
38:50 - and once we have everything styled then
38:52 - we'll start hooking everything up so on
38:55 - that note thank you for watching and
38:57 - I'll see you next video

Cleaned transcript:

already all welcome back to another video and now that we have the basic application framework taken care of in other words we have an icon that we can click and it displays the app what I want to do now is start building out the UI now when creating apps I like to build out the UI first before I write any of the like JavaScript react Redux logic and the reason for that is because once I have the UI and then I go in and start you know testing out building out all the logic the UI X is like a really clear visual indicator to verify that these things are working correctly now some people write the code first and then add the UI and after that but for me it's just a lot easier to build this way so with that said like I said I'm going to be working on the UI first and the way that I'm gonna approach this is I am first gonna write some very basic containers just to get the main structure kind of appearing on the screen and then once I have the main structure then I'll go back to each of those components and start styling them with you know the right colors and font sizes this and that but kind of like building a house you build the framework first or the foundation in the frame and then you can go in and you know paint the walls and add the carpeting so and so forth so with that said I'll show you how I am going to lay out this basic structure of course this main container right here I'll keep it a flex and what I'm going to do is just stack everything up into a single column and for those things that I'm going to stack I'm going to break it up like this I'm going to have one container that's gonna contain all these components and I'm going to call this the top and then under that I'm going to have this container which I'll just call probably connection status now under that I'll have this and this is going to be a simple one I'll call it the main button under that I'm going to have this timer and then under that I'll include all of these components into one container called history so one two three four five I would say like main containers that we have to build and then once we have that like I said I'll go back in kind of uh style everything looking nice and pretty but that is what we're gonna do so let me go ahead and get started all right so to do this I'm gonna go in my speed test and go in containers now the first one that I want to build is just called top and that is going to be for this or should I say these items right here and for making uh this container again I'm going to Nest it inside this containers directory and for each of these I'm going to create this component file and we already talked about what all these are the only thing I have to do here is just replace this component name with top and this is just going to be basic text right now and then this is also going to include a Styles file so once I have this very generic container I'm going to go ahead and import it into my top level container right here and in order to do that I'm just going to import top from apps speed test containers top all right so this is pretty much what I'm gonna do for all of these kind of top level items I'm going to make one more real quick just so we can kind of get the hang of it and then I'll probably just fast forward the video so you don't have to see me do the exact same thing again and again and again but you know you can just stick around with me for a little bit so under this top section right here we're just going to have this connection status so I will call this connection status and actually copy this because we're going to need it in just a second so of course same as the top directory it's going to contain two files one is this component file for index and then it's going to contain a Styles file which we're going to be filling out a little bit more later on but that's good for now and I can just copy this as well all right so we're going to import connection status from this location and all right so right now these are appearing side by side and that is because this top level Styles file or let me actually close this up so this is my top um level component and this is the related Styles file and by default whenever we display by Flex they're displayed in a row but we can do Flex Direction Chief Flex Direction column and that's going to make sure that those elements appear stacked on top of each other rather than side by side so now that you kind of get the basics of what I'm going for build out simple containers just for now and just plop them all in this top level one I'll go ahead and fast forward the video so you don't have to you know see me doing the same thing all right so we have the top then connection status then it's going to be the main button under that and then the timer right under the main button and then at the very bottom we're going to have that history table and there we go so now let's just check okay so our top section connection status main button timer history beautiful now I know I said right after this what I was gonna do is go through each of these components one by one and kind of do the HiFi styling of each but before I even do that let me just kind of Shuffle things around a bit and kind of lay these out so you know kind of the spacing between them is a little bit more realistic I also want to bump these up to the very top since you can see by this element I want the very top section to appear at the very top of the app and not just floating in the center so let me go ahead and do that right now so to get all of these items floating to the top of this div what I need to do is go in my Styles and for Justified content Center this is actually going to be Flex start and that should bump it to the top beautiful and I also want to change my background and let me just copy some of these colors from one of my older projects so the background color I'm going to have this blue right here and for the primary color for this fonts I'll change that to this white color again I just have uh one of my older projects on the right side of the screen right here that I'm just stealing some styles from and another thing that I want is for the height to be a little bit taller than the width so for the height again all of these are probably going to be finetuned later on but for the height I'll say 80 and for the width I'll say 60 percent and since we are using percentages this is going to be kind of um relatively to the parent or responsive in a way but yeah that looks pretty good so far and I also want to add some padding so padding say 24 pixels and another thing that I want to mention is that even though I'm hard coding in these hex values right now what I'm going to do once all this is done is I'm going to go and convert all of these hardcoded values into like a color theme in that way we for example whenever we change the text color or background color we don't have to go and change it in all of these we just have to change it in that one location now normally I would do this beforehand for example if we had a designer and they had a style guide I would lay everything out beforehand but since I am the lead developer and product manager and designer and everything in this it doesn't really matter that much since I'm the only person working on this code so this works for now but again if you're working with the team you probably want to standardize these things a little bit beforehand so okay you got that padding a nice layout so now what I want to do is go through each of these and just get the basic spacing for it so for the connection status this is going to be a little bit far away from the top but not as much as the padding so maybe 12 pixels from this top section so the connection status the styles for it I'll just say margin top 12 pixels all right looking better now for the main button we probably want this quite a bit aways from the connection status since it's like the the center item the main piece so I'll say margin top 48 pixels how's that look all right not bad not bad for the timer we can do 12 pixels on that's and for the history to try 48 and then we'll see how everything looks together margin top 48 pixels and how we looking all right pretty good so yeah just to get like the uh generic spacing again all of these are going to be tweaked but once I start styling everything I want it in roughly the general area that it's going to land up so all right now that we got that taken care of let's go ahead and start with the top and kind of dig deep into the styling of this so let me actually make this a wee bit bigger since we are going to be styling everything and all right so I'll show you how I'm going to structure this top section right now so this top container is going to contain both of these elements right here however the way that I want to structure it is kind of like this so I want to have a card and I'll have the card contain these components so I'll have a card on the left and a card on the right and just to kind of show you this let me send this to back and get some background in here something like this so this will be a card and I'll have two of these don't mind my uh chaotic styling right now but in one of these cards I'm gonna have the network info something like this so in one of the cards I'm gonna have this or excuse me the account info and the other card I'm gonna have the network info and then both of these cards I'll render in that top section right there but this way I can kind of split everything up correctly so I'll make a card component and then I'll also separate this into its own component and the reason that I'm doing that is because we are reusing these kind of cluster of elements right here and we also have it right here and in addition to those two places for the account in the network whenever we click this pencil icon and we need to select from one of our devices or accounts and networks then we're going to be using that same exact styling again there but anyways because we're going to be reusing kind of the same generic layout with the logo on the left and text on the right that's why I'm kind of splitting everything up that way but for right now I just want to make these uh basic cards and then we'll get our top laid out just close everything close all and then in our top so in here we are going to be sticking two cards and we'll style those in just a bit but before we even do that we can actually just style this so I'll say it's going to be displayed as Flex and we don't need to do Flex Direction column because by default it's a row and we want those cards to appear side by side now another cool uh it's not even a trick just a CSS property is a gap and what this allows is well it's actually a pretty good description it's not what I meant to pop open one sec okay so this Gap property in Flex elements is just the Gap that appears between these items right here and I actually didn't know about it till recently before what I used to do is I would say like the left card has a right margin of 12 and the right card has a left margin of 12 and it was just kind of a pain so whoever came up with this property uh thank you for saving me a lot of time and then aside from this I just do want to do Justified content Center and the last thing is just width I need to explicitly say this is going to be 100 and the reason for that is because this top I want this to expand basically the full width of the parent so the cards kind of take up the full space and aren't just floating in the middle I just think it looks a little bit better that way but anyways this is how our cards are going to be laid out and now let's go ahead and create those cards components so the way that I like to structure my applications and I'll show you how I did it in chat is I have the containers directory right here and that's the one that we created in the last video and I also have a components directory and I think a lot of react applications do this but the standard that I'm going for is that containers are typically the higher level components that are typically hooked up to Redux now components are again these are all components but as far as naming convention goes these are going to be um like display only components and when I'm writing components even though I break this rule sometimes I try to pass in only primitive data only so strings number so on and so forth and it just kind of helps separate or organize things where all the Redux is in here and all the display is in a directory called components so I don't know it's been working out so far so let's go ahead and follow that design pattern so I'm gonna make this uh directory called components and in here I'll make our very first component and that is going to be top card so this top card component is just going to be like any of our other ones oops and we'll just make a dummy component right now with some styling that we will fill out a little bit later on but yeah this is good right now I just want to have something that we can import and show on the screen so we'll say import top card from apps speed test components top card now that we have that again we're going to have two of them one for the account one for the network and this is probably going to be a little bit funky until we get some background action going on here but there we have our two top card components and these are both displayed in the top container so now that we got these let's just go ahead and uh make the styling a little bit prettier now before we hop into our style file let's go ahead and think about how we want to structure this so actually in addition to all of these I do want one other thing in here like a heading of sorts so something like this so this is going to say a device or account something like that and then this one right here is going to say Network but I say this because whenever I'm structuring this top card and deciding what props to pass in what we'll do is we'll pass in two props the first one is the text for the heading and the second one is we're going to be passing in whatever react component we want to display Under The Heading and we'll just call this content or something and the reason that I want to pass in a component rather than all these individual pieces is because whenever we let me copy this and show you whenever we first boot up the app for the very first time we're not going to have any network selected so we're gonna have to have some empty state all right come on all right so we're gonna have to have some empty State and I don't know exactly what it's going to be but it's going to say something like uh select Network I don't know maybe it's going to be a link or something like this but either way um by allowing us to pass in a component rather than like a logo and this and that and uh an action icon we can just say give me a header give me some content to display under and then it's going to be flexible enough for both of our needs so because we'll keep this here for reference and okay so pop in back open the top card pretty good huh all right now let me actually go ahead and write these style components first so the first thing that I'm going to want to do is create that heading and I'll say this heading can we can make it a heading but I'll just go ahead and make it a dip for now maybe not the best practice but uh yeah just the way I styled this and now let me go ahead and copy this color from my other project and I'll say the font size can be 13 pixels and the font weight can be 500. all right now to use this for the heading even though we're going to be passing in a custom prop which is going to be a string for this just to get something appearing on the screen I'll say heading right there and let me just make sure this okay good to go and now under this heading is where we will have our content so the contents we don't want to add too much styling here since we really want the uh the component that is passed in to have all the styling but we do want a little bit space between the content whatever our component is that we pass in and the heading so say margin top is 12 pixels and then just do something like this content here and let's see how this looks all right so these are our cards we have our heading on top and again this heading is going to be it's going to be either account or network whatever we decide and our content and all right so before I go any further what I want to do is actually just style this card as in the entire container and let me do that right now so the container or the card itself will say that it has this slight blue background there you go I don't know if you can see it yet but uh this card background has a slightly different shade of blue than our main or primary background and then after this I want to add a border radius as well since uh the square cards weren't looking that great and let's see yeah let me just display as Flex because we have two items in here the heading and the content and they are always going to be displayed in a column so might as well just kind of standardize so display flex and then I can do Flex one to stretch it out the flex direction we want to make sure that's a column because remember by default it's going to be a row since I want those elements to stack on top of each other there you go and for padding so everything isn't just butted up against the edge we'll do 10 pixels 14 pixels and we'll see how these cards are looking all right looking good look at that okay so I think this is pretty good right now for these top cards hmm actually what I probably can do is I can create the element for this huh so this is actually pretty interesting so we know that we have this heading in the content section right now and we're flexible to pass anything into the get this on the screen the content but what I want to do is actually take these three UI elements and I want to make a separate component out of this and I do not want to include this action button in this component right here and I don't want to do that because like I said whenever we click this it's going to pop up a modal and that modal is going to have a list of these accounts or networks and whenever we use that UI that is not going to have this action button on the right so I'll create a component for this little layout right here and I'll call it like identification since that's really all these labels are if you see in both the whenever you add an account and or you add a network all of this information including display name the logo and the identifier it's really just like a label for yourself to easily identify this stuff so I call it identification oh can't talk today but yeah with that said let's go ahead and get started so let me go ahead and pop open this again get rid of that for now okay so we're going to be creating two more components one is called identification make sure I spelled that right and the other is well we'll get to that in a second so for the identification just go ahead and create a new component you type that out again so call this identification and this style file and for this identification component it's just going to be this right here so since this is the component I'll have a flex layout and I can just keep the default it's not going to be stacked as a column it'll have this image on the left and then this text on the right and then inside this text I'll break it down into uh top text right here in bottom text right there so in identification the first thing I want to do is for the main container I'll just display it as Flex and then actually might as well create these separate elements right now so for the image again this is not going to be a div it's going to be an image tag so we can just say style.img and I want the image to be circular so I'm going to do border radius 50 percent and then I'll just do uh I'll give it a height of 36 I think that's what the size of those other ones are height width so this is going to make sure that it's always a square circle and then since I want a little bit of space between this image and this text right here I'll add a margin right keep clicking open the wrong thing embarrassing so say margin rights is 10 pixels it should be good for now all right so now let's go ahead and stick that in there so s dot image and and since that's an image tag we have source and just to test let me go in my GitHub and actually I can just get it from here I just need like a sample URL eventually this is all going to be coming from Redux of course but for now just get some dummy data in there give some alt text location there we go and then to the right of this is where we're going to have our text so I'll just say that actually maybe I'll do this so I'm gonna have a main div for both of these and then I'll have uh divs inside them for the top and bottom just so we can get our main layout taken care of text and I'm gonna have top text and then Quantum text all right so our main layout is just gonna have two components an image to the left in the text area to the right and inside the text I'm going to have that taut text now even though eventually we're going to be passing this in dynamically as a prop as content for now just to make sure everything is looking right we'll say Imports identification perhaps speed test components identification and for the content that's we're going to have our identification and now we should have something on the screen looking good all right so now let's go ahead and just style this top and bottom text for this identification and check it out so for the top text we can have this a whitish color and let's go with 14 pixels and for the bottom text we can keep the default color for this we'll say the font size a little bit smaller maybe 12 pixels and because I want the bottom text a little bit bumped down say margin top and we'll say uh two pixels all right and now let's actually let's add some sample network data in here so we'll say tnb the New Boston Network again all of this is uh can be programmed later but just want some realistic data sometimes you have like lorem ipsum or dummy data and it's just uh it's like not the right content length or I don't know you have to go back in later and tweak things so looking good and now top card change this to network all right so yeah everything is uh hard coded in for the time being but that's the basic structure we're looking for now another thing that I want to do and this may seem like Overkill but I think it's going to work out is that we are not going to be actually passing this identification node in here directly even when we have a network for example we're either going to be passing in this uh like empty State as you can call it or this network component however instead of just passing it in kind of like a raw dog in it I want to pass in something where we can have this layout and this layout right here is just going to have this component on the left and then another component on the right hand side but I want to space them so they take up the full width of the card and again like I said it may seem like Overkill but I'm gonna make another component just for this layout so in this component so I'm going to make one more probably called spaced items and again the only point of this is just so I can have a nice layout to space out two things evenly all right so let me close these for now and what is spaced items going to do well for this main layout what we want to do is we want to display it as Flex uh Flex Direction row since things are going to be appearing left and right and for the items I'm going to want those uh Center aligned and this is the vertical alignment sort those lines so the vertical vertical alignment is going to be centered and for Justified content that's going to be space between and what that's going to do is pretty much just make sure that this section appears to the left most as we can in that this icon appears to the rightmost as we can and just take up the full width of the card basically all right so there we go and now what I can do is probably this so I'm gonna have a left div and a rate div and probably an icon as well but this should be good for now so yeah in here in the space items I'm going to say left and then this is going to be right and in that left section I'm going to move this identification component over again all of this stuff is going to be passed in dynamically but for now just hard code everything in okay and now that we have our UI elements being rendered in the space items component rather than hard coding into this top card what I'm actually going to do is this all right so I know this looks kind of cluttered but as we kind of build this out I think it'll make sense why okay so check it out so now in this card we're passing in the spaced item component and in the space item component we can have two components one thing on the left which is our identification and one thing on the right which is going to be that pencil icon so let's go ahead and figure out how to do that pencil icon right now so what we can do is we can replace this right text here and okay so again this is going to be being in being passed in as a react node however for the time being I'm just going to hard code this in to show you how to work with icons and then it's going to be a piece of cake to pull out in just a second so in tnb OS I already have material icons installed so from in the packages at ndi Js we want to pull out the icon that we want to use and everything is prefixed with MDI oh look at that pencil right there so in order to use one of these icons actually let's go ahead and make this a styled component in uh save the time so in the styles for here right under styled components what I want to do from actually MDI react I'm going to be importing the icon for it and I'm going to call it you which is kind of a shorthand for unstyled MDI icon and this is just the icon component now the reason that I want to import it right here in style components is because well I'll show you in just a second actually let me let me write this out so it makes sense so I'm gonna create a style component called icon and what this is is it's a styled version of this component right here so whenever you work with styled icons you don't always just have to style HTML elements right here you can actually style other react components and this just like kind of applies additional styles to them on top of any styles that they already have just uh naturally I guess you could say and for this we're going to be adding some CSS in here in just a bit but just to kind of get everything hooked up on the right hand side I can then say display my icon right like that uh it's gonna take a path and that path is going to be pencil and for the size of this which it also takes I will say that this is going to be 28 pixels so again this is the exact same thing then if you were to do something like this this is perfectly valid as well however the reason that I structure it this way is because we want to apply our own custom styles to this icon and what are those Styles great question so the first thing I want to do is I want to give it a border radius of 50 make sure that this appears circular and the color of this I'm going to be using this like gray blue color and I also want to give it a padding of four pixels just so the icon isn't butted right up against the edges and because I have this padding of four pixels and the card itself also has padding it's going to look a little bit um it's going to look like it has too much padding on the right hand side so to kind of compensate for this I'm going to do margin right and I'm going to take away those four pixels of padding so okay border radius color margin right padding and another thing that I can do actually let me see if it just displays right here okay so this is the icon right here and what I want to do is whenever we hover over this I want to change the background of it and also the color and I also want to change my cursor right here to a pointer just to give the user some indication that they are indeed uh hovering over it so in order to do that I do amp sand hover State and for the background actually let me get this background in color background in color a nice some shades of blue and for the cursor I'll just do pointer all right so now when I hover over it you see we get this cool little hover State and just to spice things up a little bit I'm going to add a transition so it kind of Fades rather than popping in just makes a little bit look a little bit more professional and they'll say 0.15 seconds now when I hover over it well you probably can't tell but uh I can it's subtle but there's this fade rather than just you know popping to this different state makes me feel a little bit more professional you know so I think that this is probably good for these top cards the only other UI element that we really have to write for these top cards is whatever we decide to do about our empty State element right here but we'll actually save this for later on once we right around the time we actually hook this into Redux and the reason for that is just because the way the uh I am building out the UI right now it'll be kind of a pain to have this identification UI element and then an empty State both so we'll save that for later don't have to build out you know every single UI element just in this step so yeah in the next tutorial we'll go to the connection status styling and then kind of just work our way down from here and once we have everything styled then we'll start hooking everything up so on that note thank you for watching and I'll see you next video
