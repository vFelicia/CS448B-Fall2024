With timestamps:

00:00 - hi this is Alex from PHP academy' dog
00:02 - back with another video for the new
00:04 - Boston now we've already looked at file
00:07 - handling and how to you know open a file
00:11 - have a look at the contents however what
00:14 - we need to look at is how we can read a
00:16 - specific directory and list all files so
00:20 - you've probably already already guessed
00:22 - there's going to be a loop somewhere in
00:23 - here to loop through the contents of a
00:26 - directory and display each file and what
00:28 - we're going to be doing is we're going
00:29 - to just be displaying this as a list and
00:31 - then we're going to create a hyperlink
00:33 - for each file so we can click on it now
00:35 - first of all let me explain why this
00:36 - might be useful let's say you were
00:40 - creating some kind of file based photo
00:43 - gallery and you wanted to have several
00:46 - folders for example let me just take
00:48 - this just take a look at the directory
00:50 - structure that I've chosen
00:51 - I've got file dot PHP which I have
00:54 - opened in my text editor and I've got
00:55 - this files directory here now inside
00:58 - here let's just put a star in there
00:59 - we've got first file dot txt second file
01:02 - dot txt and third file dot txt now what
01:05 - we're going to be doing is we're going
01:07 - to be looking inside this files
01:09 - directory and listing all files now what
01:11 - happens if these were images you may
01:13 - have you may want to create a PHP script
01:16 - that searches a particular directory for
01:18 - a list of images and then displays them
01:20 - on a page so you can adapt this example
01:22 - that I'm going to use really really
01:23 - easily into your website and for your
01:26 - own purposes so we're going to be using
01:28 - two different functions we're going to
01:30 - use in the open directory and the read
01:31 - directory now you probably guess the
01:33 - difference between the two the open
01:35 - directory function will actually open
01:37 - the directory and load it into a handle
01:39 - much like we've done previously with
01:40 - loading a file into a into a handle then
01:45 - we can do something with it with the
01:47 - read directory we're going to put this
01:49 - into the loop and create the read
01:51 - directory as another variable so the
01:53 - redirect tree is going to read the
01:54 - handle which is then going to equate to
01:56 - another variable good file so you'll
01:59 - understand probably a bit better when I
02:00 - go into the example and show you so the
02:03 - first thing we need to do is set up a
02:04 - variable called directory and I'm doing
02:07 - this simply so I can reuse this over and
02:09 - over again in my program now remember
02:11 - the directory that we want to open is
02:12 - file so I'm going to just
02:14 - pin files there I'm not going to include
02:16 - any trailing slashes or anything like
02:18 - that I'm going to let my my program
02:21 - handle this later on especially when say
02:25 - you were releasing this too releasing
02:27 - some kind of script that use this to the
02:29 - public you might want to create a
02:30 - variable such as file to read or
02:34 - something now you don't want your user
02:36 - to have to think oh do I need to put a
02:37 - slash there or a forward slash here or
02:40 - whatever so you just want to have this
02:43 - as a single single string with no other
02:46 - symbols in just to make it a lot easier
02:49 - for you and anyone that might be looking
02:50 - at your code so now what we want to do
02:53 - is we want to create a handle for we're
02:55 - using the open dir and open dir function
02:59 - so we say handle equals open dir and
03:02 - obviously we're going to be opening the
03:03 - directory that we've just specified but
03:05 - then what we're going to be doing is
03:06 - appending on a forward slash so in
03:09 - actual fact when you read it in here the
03:11 - directory is going to look like that but
03:13 - we're just leaving this up to this line
03:16 - of code now we need to ensure that this
03:18 - returns a true value so we need to
03:21 - ensure that this actually does open
03:23 - before we continue with the rest of our
03:24 - code otherwise the rest of our code is
03:26 - going to be invalid so what we need to
03:27 - do is put this in an if statement much
03:29 - like we've put in a few other things
03:31 - like connecting to a database for
03:33 - example or or just anything really we
03:37 - want to return true so we can do this we
03:38 - can set a variable at the same time as
03:41 - calling a function so if this is true
03:44 - then we need to go ahead and continue
03:47 - the next step now just for just for
03:49 - purposes of you know aesthetics making
03:51 - it look nice so I'm going to echo out
03:53 - looking inside and then I'm going to put
03:57 - the directory name just here so I'm
03:59 - going to say directory like that so
04:02 - it'll read looking inside files this is
04:04 - another reason I didn't do slashes
04:06 - because it we're just going to specify
04:08 - the directory as plain string you know
04:11 - how we how we want it to look and what
04:14 - we're looking inside and I'm just going
04:15 - to append a break on there I'm also
04:17 - going to enclose this directory text in
04:23 - inside single quotation marks let's have
04:27 - a look at it at the moment okay so this
04:29 - is looking inside file so I want just
04:31 - single quotation marks on the outside of
04:33 - this to ensure that we enclose it so I'm
04:35 - going to put a single quotation mark
04:37 - there and escape that character so it
04:38 - doesn't interfere with the start or end
04:40 - of our string and I'm going to do the
04:42 - same just after that break and then put
04:44 - a escape string there a state character
04:46 - there I'm sorry
04:47 - so now let's refresh and we can see that
04:49 - that's just been enclosed in single
04:52 - quotation marks we can even then just
04:54 - add a colon just to make it look a bit
04:56 - nicer okay so we've established our
04:59 - little welcome or a little message
05:01 - telling everyone what we're doing now
05:03 - what we need to do is we need to
05:05 - actually read the directory so this is
05:09 - slightly different we're going to be
05:10 - using a while loop so let's come down a
05:12 - bit and we'll set up the skeleton for
05:13 - our while loop now inside here what we
05:15 - need to do is we first need to assign
05:17 - the variable file to reading the
05:19 - directory because what's going to happen
05:21 - is file is then going to exist forever
05:23 - every loop it's going to exist for each
05:26 - element or if each file in our directory

Cleaned transcript:

hi this is Alex from PHP academy' dog back with another video for the new Boston now we've already looked at file handling and how to you know open a file have a look at the contents however what we need to look at is how we can read a specific directory and list all files so you've probably already already guessed there's going to be a loop somewhere in here to loop through the contents of a directory and display each file and what we're going to be doing is we're going to just be displaying this as a list and then we're going to create a hyperlink for each file so we can click on it now first of all let me explain why this might be useful let's say you were creating some kind of file based photo gallery and you wanted to have several folders for example let me just take this just take a look at the directory structure that I've chosen I've got file dot PHP which I have opened in my text editor and I've got this files directory here now inside here let's just put a star in there we've got first file dot txt second file dot txt and third file dot txt now what we're going to be doing is we're going to be looking inside this files directory and listing all files now what happens if these were images you may have you may want to create a PHP script that searches a particular directory for a list of images and then displays them on a page so you can adapt this example that I'm going to use really really easily into your website and for your own purposes so we're going to be using two different functions we're going to use in the open directory and the read directory now you probably guess the difference between the two the open directory function will actually open the directory and load it into a handle much like we've done previously with loading a file into a into a handle then we can do something with it with the read directory we're going to put this into the loop and create the read directory as another variable so the redirect tree is going to read the handle which is then going to equate to another variable good file so you'll understand probably a bit better when I go into the example and show you so the first thing we need to do is set up a variable called directory and I'm doing this simply so I can reuse this over and over again in my program now remember the directory that we want to open is file so I'm going to just pin files there I'm not going to include any trailing slashes or anything like that I'm going to let my my program handle this later on especially when say you were releasing this too releasing some kind of script that use this to the public you might want to create a variable such as file to read or something now you don't want your user to have to think oh do I need to put a slash there or a forward slash here or whatever so you just want to have this as a single single string with no other symbols in just to make it a lot easier for you and anyone that might be looking at your code so now what we want to do is we want to create a handle for we're using the open dir and open dir function so we say handle equals open dir and obviously we're going to be opening the directory that we've just specified but then what we're going to be doing is appending on a forward slash so in actual fact when you read it in here the directory is going to look like that but we're just leaving this up to this line of code now we need to ensure that this returns a true value so we need to ensure that this actually does open before we continue with the rest of our code otherwise the rest of our code is going to be invalid so what we need to do is put this in an if statement much like we've put in a few other things like connecting to a database for example or or just anything really we want to return true so we can do this we can set a variable at the same time as calling a function so if this is true then we need to go ahead and continue the next step now just for just for purposes of you know aesthetics making it look nice so I'm going to echo out looking inside and then I'm going to put the directory name just here so I'm going to say directory like that so it'll read looking inside files this is another reason I didn't do slashes because it we're just going to specify the directory as plain string you know how we how we want it to look and what we're looking inside and I'm just going to append a break on there I'm also going to enclose this directory text in inside single quotation marks let's have a look at it at the moment okay so this is looking inside file so I want just single quotation marks on the outside of this to ensure that we enclose it so I'm going to put a single quotation mark there and escape that character so it doesn't interfere with the start or end of our string and I'm going to do the same just after that break and then put a escape string there a state character there I'm sorry so now let's refresh and we can see that that's just been enclosed in single quotation marks we can even then just add a colon just to make it look a bit nicer okay so we've established our little welcome or a little message telling everyone what we're doing now what we need to do is we need to actually read the directory so this is slightly different we're going to be using a while loop so let's come down a bit and we'll set up the skeleton for our while loop now inside here what we need to do is we first need to assign the variable file to reading the directory because what's going to happen is file is then going to exist forever every loop it's going to exist for each element or if each file in our directory
