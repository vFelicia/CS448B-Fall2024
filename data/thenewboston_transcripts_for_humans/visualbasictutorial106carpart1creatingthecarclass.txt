With timestamps:

00:01 - hello YouTube Sam here from youtube.com/
00:04 - onli gamer for the New Boston and in
00:06 - this tutorial we're going to be taking a
00:08 - look at a car application that we're
00:10 - going to be working on uh throughout the
00:12 - next couple tutorials and in it we're
00:14 - going to talk about uh inheritance uh
00:17 - mostly inheritance and some other stuff
00:19 - that I wanted to teach you guys so let's
00:21 - go ahead and create a new project and
00:23 - it's what we'll use to make the
00:25 - application so we will select a Windows
00:28 - forms application
00:30 - and we will just call it Car
00:33 - application and we'll just go ahead and
00:35 - click okay and wait for that to
00:39 - load now let's come over here to our
00:42 - solution
00:48 - Explorer we'll wait for it to finish
00:53 - loading okay so we'll rightclick Car
00:55 - application and we will add a class
01:01 - so we'll shrink this down a bit and we
01:04 - will name our
01:06 - class uh let's just call
01:09 - it all
01:15 - cars okay so let's go ahead and get rid
01:18 - of this right here and now what we need
01:20 - to do is we're going to create a name
01:22 - space that is going to hold all of our
01:24 - car classes so Nam space all cars and
01:29 - then we'll go ahead and end that Nam
01:31 - space now we're going to have a bunch of
01:34 - classes in here that do what's called
01:36 - inherit from each other now basically
01:38 - what this means is that um the stuff you
01:42 - use in one class can be used in a lower
01:45 - class so let's say you have an animal
01:47 - class uh a dog class would inherit
01:50 - certain attributes from the animal class
01:52 - that is true for all animals so let's
01:55 - just create a car class right here so
01:59 - we'll just go ahead
02:00 - and
02:01 - um start out by creating a class so we
02:06 - will
02:08 - type class
02:10 - car okay so now what we're going to do
02:12 - is we are going to add a um a variable
02:16 - in there that will get the color of the
02:19 - car so we'll type
02:22 - public um color as
02:27 - string now here let's zoom in here a bit
02:29 - so you got can see it a little bit
02:30 - better okay so now that we have the
02:33 - color in there let's go ahead and add
02:36 - some other stuff that all cars will have
02:39 - so cars will have a speed so we'll make
02:43 - private in speed as integer so this is
02:47 - the speed of our car and we're making it
02:49 - private so that anybody outside this
02:51 - class can't directly access in speed and
02:54 - change it without using the um
02:56 - accelerate uh function that we're going
02:58 - to be creating so now let's make a
03:01 - property that will let the um let any
03:04 - other class get the speed of the car so
03:07 - we'll
03:08 - type
03:10 - public readon
03:14 - property and we're just going to go
03:16 - ahead and name this one
03:18 - speed so
03:20 - speed as integer we'll go ahead and
03:23 - press enter and you can see that gives
03:25 - us a get and an in get and what we want
03:28 - to do is we just want to return the
03:29 - speed so we will type return int speed
03:33 - so now anybody outside this class can
03:35 - call speed and it will send them back
03:38 - there the speed of the
03:40 - car now let's create a um a function
03:45 - that will let them let somebody
03:47 - accelerate the car or we'll make it a
03:49 - method so Public Sub and Subs are also
03:52 - referred to as methods because they
03:54 - don't return a value so we'll just call
03:56 - it accelerate
04:02 - and for the arguments we're going to
04:03 - have them send uh an integer so by
04:08 - Val accelerate by as
04:13 - integer okay so whenever they accelerate
04:16 - we're just going to add that to in speed
04:19 - so in speed plus
04:22 - equals accelerate
04:27 - by okay so now now that we've created
04:30 - some stuff that we can use uh inside of
04:34 - our uh car class let's go ahead and make
04:37 - an object of this car class over here so
04:40 - we'll double click on form
04:41 - one and we will zoom in okay so let's
04:46 - just make a default car because we're
04:48 - going to be add some function
04:50 - functionality that will let you create
04:52 - multiple cars so
04:55 - private
04:56 - default car as new
05:00 - and then we're going to type our Nam
05:01 - space so all cars as new all
05:06 - cars do car so now that we created an
05:10 - object of cars let's go ahead and set
05:13 - the color so default
05:21 - car do color equals let's just
05:28 - do red
05:32 - and we'll go ahead and show that in a
05:35 - message box so message box default
05:40 - car
05:44 - docolor okay so let's go ahead and run
05:46 - this and you can see that it shows us
05:48 - red now this is to be
05:51 - expected so go ahead and if you haven't
05:53 - put this code in already I would suggest
05:55 - doing that because we're going to be
05:56 - using this code a lot in the uh upcoming
05:59 - Tut tutorials and it's going to be very
06:00 - useful if you have it there for you to
06:02 - manipulate manipulate yourself so let's
06:05 - just comment this a little bit so this
06:09 - gets the
06:11 - speed
06:13 - um public and private
06:17 - members and
06:21 - then accelerates the
06:25 - car okay so if you don't have that
06:27 - already like I said go ahead and make it
06:29 - and then once you're done with that go
06:30 - ahead and move on to the next tutorial

Cleaned transcript:

hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to be taking a look at a car application that we're going to be working on uh throughout the next couple tutorials and in it we're going to talk about uh inheritance uh mostly inheritance and some other stuff that I wanted to teach you guys so let's go ahead and create a new project and it's what we'll use to make the application so we will select a Windows forms application and we will just call it Car application and we'll just go ahead and click okay and wait for that to load now let's come over here to our solution Explorer we'll wait for it to finish loading okay so we'll rightclick Car application and we will add a class so we'll shrink this down a bit and we will name our class uh let's just call it all cars okay so let's go ahead and get rid of this right here and now what we need to do is we're going to create a name space that is going to hold all of our car classes so Nam space all cars and then we'll go ahead and end that Nam space now we're going to have a bunch of classes in here that do what's called inherit from each other now basically what this means is that um the stuff you use in one class can be used in a lower class so let's say you have an animal class uh a dog class would inherit certain attributes from the animal class that is true for all animals so let's just create a car class right here so we'll just go ahead and um start out by creating a class so we will type class car okay so now what we're going to do is we are going to add a um a variable in there that will get the color of the car so we'll type public um color as string now here let's zoom in here a bit so you got can see it a little bit better okay so now that we have the color in there let's go ahead and add some other stuff that all cars will have so cars will have a speed so we'll make private in speed as integer so this is the speed of our car and we're making it private so that anybody outside this class can't directly access in speed and change it without using the um accelerate uh function that we're going to be creating so now let's make a property that will let the um let any other class get the speed of the car so we'll type public readon property and we're just going to go ahead and name this one speed so speed as integer we'll go ahead and press enter and you can see that gives us a get and an in get and what we want to do is we just want to return the speed so we will type return int speed so now anybody outside this class can call speed and it will send them back there the speed of the car now let's create a um a function that will let them let somebody accelerate the car or we'll make it a method so Public Sub and Subs are also referred to as methods because they don't return a value so we'll just call it accelerate and for the arguments we're going to have them send uh an integer so by Val accelerate by as integer okay so whenever they accelerate we're just going to add that to in speed so in speed plus equals accelerate by okay so now now that we've created some stuff that we can use uh inside of our uh car class let's go ahead and make an object of this car class over here so we'll double click on form one and we will zoom in okay so let's just make a default car because we're going to be add some function functionality that will let you create multiple cars so private default car as new and then we're going to type our Nam space so all cars as new all cars do car so now that we created an object of cars let's go ahead and set the color so default car do color equals let's just do red and we'll go ahead and show that in a message box so message box default car docolor okay so let's go ahead and run this and you can see that it shows us red now this is to be expected so go ahead and if you haven't put this code in already I would suggest doing that because we're going to be using this code a lot in the uh upcoming Tut tutorials and it's going to be very useful if you have it there for you to manipulate manipulate yourself so let's just comment this a little bit so this gets the speed um public and private members and then accelerates the car okay so if you don't have that already like I said go ahead and make it and then once you're done with that go ahead and move on to the next tutorial
