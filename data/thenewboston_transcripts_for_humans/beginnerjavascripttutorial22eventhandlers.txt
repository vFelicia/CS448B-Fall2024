With timestamps:

00:00 - what's going on guys welcome back to
00:02 - your 22nd tutorial and in this tutorial
00:04 - we're going to be beginning to talk
00:06 - about something called event handlers
00:08 - now an event handler is basically our
00:11 - first step towards creating a more
00:13 - interactive and dynamic web page an
00:16 - event handler is basically running a bit
00:19 - of JavaScript code in response to a user
00:22 - action for example whenever they roll
00:24 - over a button or whenever they click a
00:26 - mouse this is when we can set the
00:28 - JavaScript code to run and instead of
00:30 - just running everything right as the web
00:32 - page loan so as you can see instead of
00:35 - just making everything happen when the
00:37 - web page loads we wait for the user's
00:39 - action and it creates the feel of or
00:42 - like an interaction so let's go ahead
00:44 - and enough of me talking it's a lot
00:46 - easier if you just see what's going on
00:47 - so let me go ahead and mention a few
00:49 - things first first of all when you're
00:52 - you're working with event handlers you
00:54 - don't always need to place the
00:56 - JavaScript inside those two special
00:59 - scripting tags event handlers are it's
01:03 - kind of special you can it's possible to
01:06 - make it outside those scripting tags and
01:08 - for the first example that's what I'm
01:10 - going to show you guys how to do so
01:12 - aside from that I better mention this
01:15 - event handlers can be placed in many
01:18 - locations on a web page they kind of
01:20 - look like just basic xhtml attributes
01:23 - but instead of like writing um color
01:27 - equals blue instead of writing a value
01:29 - like like blue this is where you insert
01:32 - the JavaScript so let's go ahead and I
01:34 - guess it would be easiest for me to just
01:37 - make one so one place you can insert
01:40 - event handlers are in form elements
01:44 - specifically um form buttons so let's go
01:47 - ahead and make a form and we'll go ahead
01:49 - and insert some event handlers in here
01:51 - so go ahead and make your basic
01:53 - form and then go ahead and make a one
01:57 - input we only need one input just a b
01:59 - basic button on the screen and in case
02:01 - you forgot from xhtml tutorials how to
02:03 - do this you just go ahead and write
02:05 - input type
02:08 - equals button and for the value the
02:12 - value is basically what is your button
02:14 - going to say and we'll just write touch
02:17 - me so let's go ahead and end this right
02:19 - now and we'll see what we got we got a
02:22 - basic plain old button on the screen
02:24 - doesn't do anything you just click it a
02:26 - bunch of times and nothing happens
02:28 - pretty boring huh so let's go ahead and
02:31 - use event handlers to spice this up a
02:33 - bit now event handlers are pretty much
02:37 - built in keywords that your computer
02:40 - recognizes and knows that it's
02:42 - JavaScript you don't have to tell it in
02:44 - another function that it's JavaScript
02:46 - your browser automatically knows the
02:48 - event handler so whoever created your
02:50 - browser they already typed them in there
02:52 - for you so the only thing you have to
02:54 - remember is these different keywords for
02:56 - event handlers and the most well I don't
02:59 - want to say common L used because I
03:00 - never did a survey on it but one of the
03:02 - most commonly used event handlers is
03:04 - called on click and make sure the C is
03:07 - capitalize and this is a keyword that
03:10 - says whenever the user clicks this
03:13 - element and in this case a button right
03:16 - here then I want to run the bit of
03:18 - JavaScript code in here so anything you
03:22 - type in between these quotation marks it
03:24 - has to be JavaScript code and that's
03:26 - what's going to be ran whenever the user
03:28 - clicks this button so go ahead and I'm
03:30 - just going to make a basic alert box so
03:32 - go ahead and type alert and add your
03:34 - parameters but check this out you know
03:37 - however we make an alert that we usually
03:39 - type some text into it and we put it in
03:41 - double quotation marks like hey now or
03:43 - something like that well since we're
03:45 - working inside xhtml attribute right now
03:48 - and we have all these double quotation
03:50 - marks these quotation marks right here
03:52 - tell JavaScript or excuse me tell your
03:54 - browser that we're working with
03:56 - attributes so we can't use those same
03:59 - quotation marks in here so instead of
04:01 - double quotation marks we need to use
04:03 - single quotation marks so we don't
04:05 - confuse it so it doesn't really have an
04:07 - effect on your program at all it just
04:10 - differentiates between the double ones
04:12 - for your attributes and the single ones
04:14 - for your JavaScript so go ahead put
04:16 - single quotation marks in your parameter
04:18 - and go ahead and write something like ah
04:20 - or write something stupid and now just
04:23 - like in JavaScript with every statement
04:25 - we have to end it with a semicolon this
04:27 - lets our browser know that we're done
04:29 - running this bit of JavaScript code so
04:31 - go ahead and save that refresh it and
04:33 - our web page looks the same right now
04:36 - but in fact it's not the same because
04:37 - whenever we touch this button check it
04:39 - out an alert box pops up that says Ah
04:42 - pretty cool so let's go ahead and press
04:44 - okay and that's the basic of an event
04:46 - handler so as you can see before
04:49 - whenever we were working with JavaScript
04:52 - our web page loaded and all the
04:54 - JavaScript ran and it did whatever it
04:56 - did and that was basically it but now we
04:59 - can wait for the user input and whenever
05:02 - they do something such as click button
05:04 - then the JavaScript code runs and it's
05:07 - just a way to make the web page more
05:08 - interactive and more Dynamic so aside
05:11 - from that I guess I have time to mention
05:13 - one more thing you know how I added one
05:15 - statement in there on the onclick
05:17 - attribute and whenever you touched it a
05:19 - bit of JavaScript code ran well since we
05:21 - added a semicolon we can add more than
05:24 - one statement in here so for example
05:26 - let's go ahead and add one alert box
05:28 - that says Ah and let's go ahead and add
05:30 - another one right after that so
05:33 - alert and of course remember to use your
05:35 - single quotes right in here and just go
05:38 - ahead and write like two times or
05:40 - something different from your first so
05:42 - you can tell that it's different so now
05:44 - we have two different statements
05:46 - whenever we click it using this onclick
05:48 - event handler first it says alert a and
05:52 - then it says alert two times pretty
05:54 - stupid but hey it works so I just
05:57 - clicked the button and it wasn't even in
05:59 - the screen so so check it out touch it
06:01 - ah press okay and then it
06:07 - says oh I didn't refresh it there we go
06:10 - touch it uh and check it out two times
06:13 - and you might have this uh happening if
06:16 - your code isn't running exactly how you
06:18 - want it in some browsers in order to
06:21 - prevent a bunch of ads from popping up
06:24 - or if you have any um like anti anti-ad
06:28 - uh what's it called anti virus or
06:30 - anti-py we built on your computer only
06:32 - one popup will pop up and it's not
06:35 - because your code is wrong it's because
06:36 - your browser has thinks that you're
06:39 - trying to post a whole bunch of ads so
06:41 - it only pop up one at a time so if
06:43 - that's happening then that's your
06:45 - browser not your code but anyways what I
06:47 - want to show you guys here is you're not
06:49 - limited to only one statement you can
06:50 - add more than one statement you can add
06:52 - 500 if you want but you see how I added
06:55 - two statements right in here whenever
06:58 - you have like three or more statements
07:00 - it's probably easier just to add a
07:01 - function and then whenever you make your
07:04 - function uh before you can just add all
07:07 - your statements in there but for now
07:09 - this is just a quick example so there
07:11 - you go so anyways that's the basics of
07:14 - of an event handler I showed you on
07:16 - click in this tutorial but in the next
07:18 - tutorial we're going to be going over
07:19 - different types of event handlers and
07:22 - you'll begin to see why they're useful
07:23 - and what we can do with them so that's
07:25 - what you got to look forward to if you
07:27 - have any questions check out my website
07:28 - or ask me on my form form and I'll be
07:30 - happy to answer it for you so thank you
07:31 - guys for watching don't forget to
07:32 - subscribe and I'll see you next video

Cleaned transcript:

what's going on guys welcome back to your 22nd tutorial and in this tutorial we're going to be beginning to talk about something called event handlers now an event handler is basically our first step towards creating a more interactive and dynamic web page an event handler is basically running a bit of JavaScript code in response to a user action for example whenever they roll over a button or whenever they click a mouse this is when we can set the JavaScript code to run and instead of just running everything right as the web page loan so as you can see instead of just making everything happen when the web page loads we wait for the user's action and it creates the feel of or like an interaction so let's go ahead and enough of me talking it's a lot easier if you just see what's going on so let me go ahead and mention a few things first first of all when you're you're working with event handlers you don't always need to place the JavaScript inside those two special scripting tags event handlers are it's kind of special you can it's possible to make it outside those scripting tags and for the first example that's what I'm going to show you guys how to do so aside from that I better mention this event handlers can be placed in many locations on a web page they kind of look like just basic xhtml attributes but instead of like writing um color equals blue instead of writing a value like like blue this is where you insert the JavaScript so let's go ahead and I guess it would be easiest for me to just make one so one place you can insert event handlers are in form elements specifically um form buttons so let's go ahead and make a form and we'll go ahead and insert some event handlers in here so go ahead and make your basic form and then go ahead and make a one input we only need one input just a b basic button on the screen and in case you forgot from xhtml tutorials how to do this you just go ahead and write input type equals button and for the value the value is basically what is your button going to say and we'll just write touch me so let's go ahead and end this right now and we'll see what we got we got a basic plain old button on the screen doesn't do anything you just click it a bunch of times and nothing happens pretty boring huh so let's go ahead and use event handlers to spice this up a bit now event handlers are pretty much built in keywords that your computer recognizes and knows that it's JavaScript you don't have to tell it in another function that it's JavaScript your browser automatically knows the event handler so whoever created your browser they already typed them in there for you so the only thing you have to remember is these different keywords for event handlers and the most well I don't want to say common L used because I never did a survey on it but one of the most commonly used event handlers is called on click and make sure the C is capitalize and this is a keyword that says whenever the user clicks this element and in this case a button right here then I want to run the bit of JavaScript code in here so anything you type in between these quotation marks it has to be JavaScript code and that's what's going to be ran whenever the user clicks this button so go ahead and I'm just going to make a basic alert box so go ahead and type alert and add your parameters but check this out you know however we make an alert that we usually type some text into it and we put it in double quotation marks like hey now or something like that well since we're working inside xhtml attribute right now and we have all these double quotation marks these quotation marks right here tell JavaScript or excuse me tell your browser that we're working with attributes so we can't use those same quotation marks in here so instead of double quotation marks we need to use single quotation marks so we don't confuse it so it doesn't really have an effect on your program at all it just differentiates between the double ones for your attributes and the single ones for your JavaScript so go ahead put single quotation marks in your parameter and go ahead and write something like ah or write something stupid and now just like in JavaScript with every statement we have to end it with a semicolon this lets our browser know that we're done running this bit of JavaScript code so go ahead and save that refresh it and our web page looks the same right now but in fact it's not the same because whenever we touch this button check it out an alert box pops up that says Ah pretty cool so let's go ahead and press okay and that's the basic of an event handler so as you can see before whenever we were working with JavaScript our web page loaded and all the JavaScript ran and it did whatever it did and that was basically it but now we can wait for the user input and whenever they do something such as click button then the JavaScript code runs and it's just a way to make the web page more interactive and more Dynamic so aside from that I guess I have time to mention one more thing you know how I added one statement in there on the onclick attribute and whenever you touched it a bit of JavaScript code ran well since we added a semicolon we can add more than one statement in here so for example let's go ahead and add one alert box that says Ah and let's go ahead and add another one right after that so alert and of course remember to use your single quotes right in here and just go ahead and write like two times or something different from your first so you can tell that it's different so now we have two different statements whenever we click it using this onclick event handler first it says alert a and then it says alert two times pretty stupid but hey it works so I just clicked the button and it wasn't even in the screen so so check it out touch it ah press okay and then it says oh I didn't refresh it there we go touch it uh and check it out two times and you might have this uh happening if your code isn't running exactly how you want it in some browsers in order to prevent a bunch of ads from popping up or if you have any um like anti antiad uh what's it called anti virus or antipy we built on your computer only one popup will pop up and it's not because your code is wrong it's because your browser has thinks that you're trying to post a whole bunch of ads so it only pop up one at a time so if that's happening then that's your browser not your code but anyways what I want to show you guys here is you're not limited to only one statement you can add more than one statement you can add 500 if you want but you see how I added two statements right in here whenever you have like three or more statements it's probably easier just to add a function and then whenever you make your function uh before you can just add all your statements in there but for now this is just a quick example so there you go so anyways that's the basics of of an event handler I showed you on click in this tutorial but in the next tutorial we're going to be going over different types of event handlers and you'll begin to see why they're useful and what we can do with them so that's what you got to look forward to if you have any questions check out my website or ask me on my form form and I'll be happy to answer it for you so thank you guys for watching don't forget to subscribe and I'll see you next video
