With timestamps:

00:00 - hello YouTube sam here from youtube.com
00:03 - slash on live gamer for the new Boston
00:06 - and in this tutorial we're going to be
00:08 - looking at structures now let's say you
00:11 - have you want to have one value but you
00:16 - want that value to store several
00:18 - different values so let's say you have a
00:21 - customer and you want it to store their
00:24 - name their email and their let's say
00:28 - first name and last name so the whole
00:30 - name first name last name and email well
00:33 - you could make a bunch of a raise or a
00:36 - bunch of single variables but that would
00:41 - be really frustrating and it will take a
00:45 - long time so what you can do instead of
00:47 - that is create what's called a structure
00:49 - now a structure is similar to class and
00:52 - and what I mean by that is that it can
00:55 - have methods constructors nested types
00:57 - and other stuff but one difference is
01:00 - that it it's missing some of the other
01:03 - stuff that classes and it's light it's
01:05 - very lightweight it doesn't take up much
01:07 - resources but so let's go ahead and
01:10 - create an application for this so we'll
01:13 - go to file new project make sure you
01:16 - select windows forms application and we
01:19 - will call this structures ok so now what
01:25 - we're going to do is we're going to go
01:26 - ahead and just build a little interface
01:28 - right here so we'll go ahead and open up
01:30 - the toolbox we will add four text boxes
01:34 - so what's at one copy that two three
01:41 - four okay so let's get these in order
01:45 - here
01:49 - okay so now we'll just select all of
01:52 - these you can do this by using your
01:54 - mouse and dragging over them and we'll
01:56 - stretch them out some to cover most of
01:59 - this and we'll make this a little bit
02:03 - smaller so we can add labels so we'll
02:06 - add four more labels so we'll just copy
02:09 - and paste that so we have label one
02:13 - label two label three and label four
02:18 - okay so now let's just we'll leave the
02:21 - names for the labels the same but we'll
02:23 - just change the text value so we will
02:26 - set this one equal to name we'll set
02:29 - this one equal to first name
02:36 - we will set this one equal to lastname
02:38 - and we'll set the last one equal to
02:42 - email okay so now I'll just add a button
02:49 - and we will set the name of that button
02:54 - to I will set the text to list customer
02:59 - and if you haven't already guessed we're
03:02 - going to be dealing with some fake
03:03 - customers in this program so we'll set
03:07 - this to text name we'll set this one to
03:13 - text first name we'll set this one to
03:17 - text last name and finally the last one
03:22 - to text email okay so now what we're
03:27 - going to do is we're going to ahead and
03:29 - close out of our tool box and we will
03:31 - double click on form one to bring it up
03:32 - to open up the code now we'll go ahead
03:35 - and zoom in here and we're going to go
03:38 - ahead and create a structure so we do
03:41 - this by using if you haven't already
03:43 - guessed the either the private or the
03:45 - public keyword now we want this Junction
03:47 - to only be available to form one the
03:50 - class form one so we'll use the keyword
03:52 - private and then we will type structure
03:55 - to tell the compiler that we want to
03:57 - make a structure and now what we do is
03:59 - we set a name for that
04:01 - so we'll just call it customer and
04:03 - exhuming when we press ENTER we get
04:06 - instructure instructure now if you
04:09 - haven't already noticed that you do not
04:11 - have to define a default datatype for a
04:15 - customer it can be equal it can you can
04:19 - store different data types and you can
04:21 - store strings doubles integers as many
04:23 - as you want so let's go ahead and create
04:26 - some public variables so we'll go ahead
04:31 - and type public first-name as string
04:36 - will create a last name
04:40 - as string and we will create an email as
04:47 - string and now you probably notice that
04:50 - we didn't make a full name variable we
04:54 - don't need to do this we can just take
04:55 - first name and last name and combine
04:57 - them okay so now what we're going to do
05:00 - is we are going to create a structure so
05:06 - let's go ahead and create one of these
05:09 - structures now whenever you create one
05:11 - it exists on its own and it has nothing
05:14 - to do with this right here so you can
05:15 - make as many as you want and it's pretty
05:17 - much your own data type so we will type
05:19 - private because we only want to
05:20 - available to class form one and we'll
05:23 - call it object customer as customer okay
05:32 - so in this tutorial we created the GUI
05:36 - for our little program that will list
05:39 - customers using structures we created a
05:42 - structure and we made an instance of
05:46 - that structure that we can use
05:48 - throughout our whole class now we can
05:50 - make as many of these as we want but we
05:52 - just have to have different names for
05:53 - them so on go ahead and put this code in
05:55 - if you haven't you can play around with
05:57 - what you can do with structures if you
05:59 - want to go ahead and use intellisense to
06:01 - see what you can do and learn on your
06:02 - own
06:03 - and if not go ahead and move on to the
06:05 - next tutorial and do it anyway even if
06:07 - you do mess around to the structures
06:09 - move on to the next tutorial and we will
06:11 - be working more on this program so
06:13 - thanks for watching guys

Cleaned transcript:

hello YouTube sam here from youtube.com slash on live gamer for the new Boston and in this tutorial we're going to be looking at structures now let's say you have you want to have one value but you want that value to store several different values so let's say you have a customer and you want it to store their name their email and their let's say first name and last name so the whole name first name last name and email well you could make a bunch of a raise or a bunch of single variables but that would be really frustrating and it will take a long time so what you can do instead of that is create what's called a structure now a structure is similar to class and and what I mean by that is that it can have methods constructors nested types and other stuff but one difference is that it it's missing some of the other stuff that classes and it's light it's very lightweight it doesn't take up much resources but so let's go ahead and create an application for this so we'll go to file new project make sure you select windows forms application and we will call this structures ok so now what we're going to do is we're going to go ahead and just build a little interface right here so we'll go ahead and open up the toolbox we will add four text boxes so what's at one copy that two three four okay so let's get these in order here okay so now we'll just select all of these you can do this by using your mouse and dragging over them and we'll stretch them out some to cover most of this and we'll make this a little bit smaller so we can add labels so we'll add four more labels so we'll just copy and paste that so we have label one label two label three and label four okay so now let's just we'll leave the names for the labels the same but we'll just change the text value so we will set this one equal to name we'll set this one equal to first name we will set this one equal to lastname and we'll set the last one equal to email okay so now I'll just add a button and we will set the name of that button to I will set the text to list customer and if you haven't already guessed we're going to be dealing with some fake customers in this program so we'll set this to text name we'll set this one to text first name we'll set this one to text last name and finally the last one to text email okay so now what we're going to do is we're going to ahead and close out of our tool box and we will double click on form one to bring it up to open up the code now we'll go ahead and zoom in here and we're going to go ahead and create a structure so we do this by using if you haven't already guessed the either the private or the public keyword now we want this Junction to only be available to form one the class form one so we'll use the keyword private and then we will type structure to tell the compiler that we want to make a structure and now what we do is we set a name for that so we'll just call it customer and exhuming when we press ENTER we get instructure instructure now if you haven't already noticed that you do not have to define a default datatype for a customer it can be equal it can you can store different data types and you can store strings doubles integers as many as you want so let's go ahead and create some public variables so we'll go ahead and type public firstname as string will create a last name as string and we will create an email as string and now you probably notice that we didn't make a full name variable we don't need to do this we can just take first name and last name and combine them okay so now what we're going to do is we are going to create a structure so let's go ahead and create one of these structures now whenever you create one it exists on its own and it has nothing to do with this right here so you can make as many as you want and it's pretty much your own data type so we will type private because we only want to available to class form one and we'll call it object customer as customer okay so in this tutorial we created the GUI for our little program that will list customers using structures we created a structure and we made an instance of that structure that we can use throughout our whole class now we can make as many of these as we want but we just have to have different names for them so on go ahead and put this code in if you haven't you can play around with what you can do with structures if you want to go ahead and use intellisense to see what you can do and learn on your own and if not go ahead and move on to the next tutorial and do it anyway even if you do mess around to the structures move on to the next tutorial and we will be working more on this program so thanks for watching guys
