With timestamps:

00:00 - what is going on guys welcome to your
00:01 - 27th JavaScript tutorial and in this
00:04 - tutorial I'm going to be teaching you
00:06 - guys how to add methods to your objects
00:09 - so let's go ahead and the first thing
00:10 - that we need is a Constructor function
00:12 - so function go ahead and name it just
00:14 - people or something and just like before
00:17 - we'll give it a name and an age so all
00:19 - these people will have two properties a
00:21 - name and an age and we make sure of that
00:23 - by setting the object's name to whatever
00:26 - we pass in for name and the object's age
00:29 - to whatever we pass in for age simple
00:31 - enough so we have a Constructor function
00:34 - now we can begin actually making objects
00:37 - so VAR um let's go ahead and make an
00:41 - object called Natalie and said equal to
00:44 - we don't need that yet a new object from
00:47 - the
00:48 - people blueprint basically and the name
00:53 - it takes two parameters first
00:55 - name Natalie Portman and her age she's
00:59 - probably like
01:00 - like 28 I'm guessing I don't know who
01:04 - knows so anyways we already know that we
01:07 - can access you know Natalie's name
01:10 - Natalie's age we can go ahead and print
01:11 - that out y Yad we learned that before
01:13 - but what we're learning in this tutorial
01:15 - is how to add methods to this object and
01:19 - by the way a method is pretty much just
01:22 - a function that uses some of these
01:24 - properties so you know how a function
01:26 - might calculate the temperature
01:28 - converted to Fahrenheit to Kelvin
01:30 - well methods take properties like this
01:33 - like it would take her age and calculate
01:35 - how many years until retirement or
01:38 - calculate when she's going to die or
01:39 - calculate when she was born or something
01:41 - like that so it takes some of these
01:43 - properties from this object and it makes
01:46 - a calculation with it so let's go ahead
01:48 - and calculate how many years until
01:51 - Natalie Portman can retire she can
01:53 - probably retire right now because she's
01:55 - extremely wealthy but let's go ahead and
01:58 - say that the retirement age is 6 5 so in
02:01 - order to create a method here's what we
02:04 - do just like any other function go ahead
02:06 - and give it a name
02:09 - years left looks good won't take any
02:13 - parameters and the first thing that we
02:15 - KN need to do is calculate or in other
02:18 - words give a variable that we can return
02:20 - so let's go ahead and make a variable
02:22 - named num years and this is going to
02:25 - store the number of years until she
02:28 - turns 65 because it's 65 she can retire
02:32 - so let's go ahead and just write 65
02:35 - minus her age and in order to use this
02:38 - object's age you use this. Ag and
02:42 - whatever object you pass in for there
02:44 - it's going to take their age and it's
02:46 - going to subtract it to 65 from 65
02:49 - excuse me so I'm 24 so if it was the
02:53 - calculate for me it would be 41 if
02:56 - someone was 20 it would be 45 if someone
02:59 - was 65 it would be zero so anyways how
03:02 - many years until you turn 65 that's
03:04 - what's going to be stored right in here
03:07 - and now remember whenever we wanted to
03:10 - make a calculation and give us the
03:11 - answer back we need to return it
03:14 - whenever we return something it takes
03:16 - that calculation and returns it to you
03:18 - so then you can print out the value of
03:20 - it and cool stuff like that so numb ears
03:23 - so what I like to do is just go ahead
03:25 - and highlight that to make sure they're
03:27 - both the same and now that they're both
03:29 - the same we're good to go so this
03:31 - function is basically going to work like
03:33 - this whenever you call this function
03:35 - it's going to say all right what object
03:37 - did you give me I'm going to take their
03:39 - age I'm going to subtract it from 65 and
03:42 - I'm going to give you the answer back
03:44 - simple enough but saying all right here
03:47 - is the blueprint for the object so how
03:50 - does this object know to use that
03:52 - function well it doesn't just yet so
03:55 - that's what we have to do in this next
03:57 - line of code in order to tell this
03:59 - object that basically we want to use
04:03 - this function or in order to tell it
04:05 - that this function is just not a random
04:07 - function we actually want to associate
04:09 - it with this object here's what we need
04:11 - to do just like every other thing every
04:14 - other object property you go ahead and
04:16 - assign this Dot and then you write
04:19 - whatever you want your property to be
04:21 - named and just go ahead and put um
04:26 - years until retire or something like
04:29 - like that I spell everything right
04:32 - everything right looks good enough so
04:34 - then what you do is you have three
04:36 - properties for your object every person
04:38 - in the world has a name has an age and
04:41 - has a certain amount of years until they
04:43 - can retire their name is whatever we
04:46 - give it their AG is whatever we give it
04:48 - and the years until we retire it has to
04:50 - make a
04:51 - calculation what is that calculation
04:54 - going to be based off it's going to be
04:55 - based off this function right here so we
04:57 - don't set it equal to a number like 6 5
04:59 - or anything like that we set it equal to
05:02 - the name of this function so if you go
05:04 - ahead and copy that and paste it and
05:07 - here's the one thing that can confuse
05:09 - you guys you don't add parentheses at
05:12 - the end of this I know it's weird but
05:15 - they made it this way so your object
05:17 - knows that this method is associated
05:20 - with this object so this makes sense we
05:22 - pass it in a name we pass it in h but
05:25 - for this last one we make it just like
05:28 - any other object property just like this
05:31 - one or this one but instead of a value
05:33 - that we pass it in we set it equal to a
05:36 - name of a function without the
05:38 - parameters and the reason we don't add
05:40 - parameters for that is because it's
05:42 - going to take all its parameters already
05:44 - from the object pretty cool huh so now
05:47 - with that being said let's just go ahead
05:48 - and use this so now we can do something
05:51 - like
05:53 - document write again we already have an
05:56 - object Natalie her name's Natalie
05:58 - Portman and her age is 28 so now anytime
06:02 - you want to calculate her years until
06:04 - retired here's what we do just go ahead
06:06 - and write the name of the object Natalie
06:10 - and then just go ahead and write
06:13 - years check it out she has three
06:16 - properties we can either print out her
06:17 - name her age or years years until retire
06:21 - so just go ahead and copy that paste it
06:25 - and here is where you need parameters
06:27 - just like that simple enough so let's go
06:30 - ahead and print it out see how it works
06:33 - 37 years until Natalie Portman can
06:36 - retire so let's go ahead and make
06:38 - another object real quick one for me why
06:41 - not um I'll make an object Bucky um my
06:44 - name is of course Bucky Roberts and my
06:48 - age is 24 so now let's go ahead and put
06:53 - Bucky years until I retire save it and
06:57 - see what I get 41 41 years until I can
07:01 - retire so basically to sum it up one
07:03 - last time this is what you do whenever
07:06 - you want to add methods to your object
07:08 - you already have a Constructor function
07:10 - with properties I have a name I have an
07:13 - age we know all that so whenever you
07:15 - want to assign a function to your object
07:18 - you take the name of the function and
07:19 - you assign it just like you would any
07:21 - other object property simple enough and
07:24 - don't forget whenever you make your
07:26 - function the only thing you have to do
07:28 - to get the extra information is put this
07:30 - object's age if we wanted to print out
07:33 - my name you would write like document WR
07:36 - this name easy enough So then whenever
07:40 - you want to actually use that function
07:42 - or excuse me the method now you just
07:44 - write the name of your object and
07:48 - then right there check it out not the
07:51 - function name but the object property
07:54 - name simple enough so um there are just
07:57 - a couple neat little tricks that you
07:59 - have to watch out for the first one is
08:02 - don't include your parentheses right
08:04 - here that's your way of telling driver
08:06 - script that this method is actually a
08:08 - part of this object because it has no
08:10 - parenthesis and the last thing is
08:12 - whenever you actually use it add your
08:15 - parentheses after this it's a little
08:18 - confusing but trust me if you make like
08:21 - if you do it like three times you'll get
08:23 - the hang of it and it'll be breeze so
08:25 - that is how you add methods to objects
08:28 - so now we basically learn everything
08:30 - about object how to create a Constructor
08:33 - function how to add basic properties and
08:35 - how to add methods so simple enough um
08:38 - thank you guys for watching in the next
08:40 - tutorial probably going to be talking
08:41 - about objects a little more so if you're
08:43 - confused at all just move on next one
08:46 - and oh got some FL in my throat and
08:49 - you'll be fine so again thank you for
08:50 - watching don't forget to subscribe and
08:51 - I'll see you next tutorial

Cleaned transcript:

what is going on guys welcome to your 27th JavaScript tutorial and in this tutorial I'm going to be teaching you guys how to add methods to your objects so let's go ahead and the first thing that we need is a Constructor function so function go ahead and name it just people or something and just like before we'll give it a name and an age so all these people will have two properties a name and an age and we make sure of that by setting the object's name to whatever we pass in for name and the object's age to whatever we pass in for age simple enough so we have a Constructor function now we can begin actually making objects so VAR um let's go ahead and make an object called Natalie and said equal to we don't need that yet a new object from the people blueprint basically and the name it takes two parameters first name Natalie Portman and her age she's probably like like 28 I'm guessing I don't know who knows so anyways we already know that we can access you know Natalie's name Natalie's age we can go ahead and print that out y Yad we learned that before but what we're learning in this tutorial is how to add methods to this object and by the way a method is pretty much just a function that uses some of these properties so you know how a function might calculate the temperature converted to Fahrenheit to Kelvin well methods take properties like this like it would take her age and calculate how many years until retirement or calculate when she's going to die or calculate when she was born or something like that so it takes some of these properties from this object and it makes a calculation with it so let's go ahead and calculate how many years until Natalie Portman can retire she can probably retire right now because she's extremely wealthy but let's go ahead and say that the retirement age is 6 5 so in order to create a method here's what we do just like any other function go ahead and give it a name years left looks good won't take any parameters and the first thing that we KN need to do is calculate or in other words give a variable that we can return so let's go ahead and make a variable named num years and this is going to store the number of years until she turns 65 because it's 65 she can retire so let's go ahead and just write 65 minus her age and in order to use this object's age you use this. Ag and whatever object you pass in for there it's going to take their age and it's going to subtract it to 65 from 65 excuse me so I'm 24 so if it was the calculate for me it would be 41 if someone was 20 it would be 45 if someone was 65 it would be zero so anyways how many years until you turn 65 that's what's going to be stored right in here and now remember whenever we wanted to make a calculation and give us the answer back we need to return it whenever we return something it takes that calculation and returns it to you so then you can print out the value of it and cool stuff like that so numb ears so what I like to do is just go ahead and highlight that to make sure they're both the same and now that they're both the same we're good to go so this function is basically going to work like this whenever you call this function it's going to say all right what object did you give me I'm going to take their age I'm going to subtract it from 65 and I'm going to give you the answer back simple enough but saying all right here is the blueprint for the object so how does this object know to use that function well it doesn't just yet so that's what we have to do in this next line of code in order to tell this object that basically we want to use this function or in order to tell it that this function is just not a random function we actually want to associate it with this object here's what we need to do just like every other thing every other object property you go ahead and assign this Dot and then you write whatever you want your property to be named and just go ahead and put um years until retire or something like like that I spell everything right everything right looks good enough so then what you do is you have three properties for your object every person in the world has a name has an age and has a certain amount of years until they can retire their name is whatever we give it their AG is whatever we give it and the years until we retire it has to make a calculation what is that calculation going to be based off it's going to be based off this function right here so we don't set it equal to a number like 6 5 or anything like that we set it equal to the name of this function so if you go ahead and copy that and paste it and here's the one thing that can confuse you guys you don't add parentheses at the end of this I know it's weird but they made it this way so your object knows that this method is associated with this object so this makes sense we pass it in a name we pass it in h but for this last one we make it just like any other object property just like this one or this one but instead of a value that we pass it in we set it equal to a name of a function without the parameters and the reason we don't add parameters for that is because it's going to take all its parameters already from the object pretty cool huh so now with that being said let's just go ahead and use this so now we can do something like document write again we already have an object Natalie her name's Natalie Portman and her age is 28 so now anytime you want to calculate her years until retired here's what we do just go ahead and write the name of the object Natalie and then just go ahead and write years check it out she has three properties we can either print out her name her age or years years until retire so just go ahead and copy that paste it and here is where you need parameters just like that simple enough so let's go ahead and print it out see how it works 37 years until Natalie Portman can retire so let's go ahead and make another object real quick one for me why not um I'll make an object Bucky um my name is of course Bucky Roberts and my age is 24 so now let's go ahead and put Bucky years until I retire save it and see what I get 41 41 years until I can retire so basically to sum it up one last time this is what you do whenever you want to add methods to your object you already have a Constructor function with properties I have a name I have an age we know all that so whenever you want to assign a function to your object you take the name of the function and you assign it just like you would any other object property simple enough and don't forget whenever you make your function the only thing you have to do to get the extra information is put this object's age if we wanted to print out my name you would write like document WR this name easy enough So then whenever you want to actually use that function or excuse me the method now you just write the name of your object and then right there check it out not the function name but the object property name simple enough so um there are just a couple neat little tricks that you have to watch out for the first one is don't include your parentheses right here that's your way of telling driver script that this method is actually a part of this object because it has no parenthesis and the last thing is whenever you actually use it add your parentheses after this it's a little confusing but trust me if you make like if you do it like three times you'll get the hang of it and it'll be breeze so that is how you add methods to objects so now we basically learn everything about object how to create a Constructor function how to add basic properties and how to add methods so simple enough um thank you guys for watching in the next tutorial probably going to be talking about objects a little more so if you're confused at all just move on next one and oh got some FL in my throat and you'll be fine so again thank you for watching don't forget to subscribe and I'll see you next tutorial
