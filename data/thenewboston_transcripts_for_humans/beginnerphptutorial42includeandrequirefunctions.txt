With timestamps:

00:00 - hi this is Alex from PHP Academy and
00:03 - this is a video for the new Boston now
00:06 - in this short series I'm going to be the
00:08 - short tutorial I'm going to be talking
00:09 - about the include and require um inside
00:13 - PHP now you may visit websites and think
00:17 - you know how do they get the design or
00:19 - the template exactly the same every for
00:22 - every page and the answer is that
00:24 - there's a preset template uh not
00:27 - necessarily including um using include
00:29 - or require um it will be using most
00:32 - likely but it will be using some kind of
00:34 - um way to include this now you'll know
00:37 - that I've got two um files open I've got
00:40 - my
00:40 - index.php and I've got header.
00:43 - in.php um now header. in.php has um a
00:47 - header one um on with my page so if we
00:52 - preview this in
00:55 - our browser it looks like this now what
01:00 - what happens if I want to create
01:01 - multiple pages with the same header in
01:04 - now let's just go and create another
01:08 - file and I'm going to call
01:11 - this um I'm going to save this
01:16 - here in include require and I'm going to
01:19 - call this
01:20 - um let's just say
01:23 - um another page.php
01:26 - okay so I've got all in all uh three
01:30 - three pages I've got index.php another
01:33 - page.php and header.
01:36 - in.php now we're going to later on in
01:38 - the tutorial discuss um using PHP inside
01:42 - this file but for now I'm going to say
01:44 - this is my template now if I want to
01:47 - write let's say
01:50 - Echo um I'm just going to create a
01:53 - variable here called um
01:58 - string and I want to echo my variable
02:01 - okay so on the index page this is
02:04 - basically going to Echo string uh and on
02:07 - here I want to make a VAR and um an echo
02:14 - VAR so on my index page I'm echoing
02:17 - string on my another page I'm echoing 10
02:22 - now what happens if I want to include
02:25 - the same header for both of these files
02:28 - I want to have this my page header on
02:31 - both of these files I can use either the
02:33 - include or the require function now for
02:36 - this purpose I'm going to be using
02:37 - include and I'll tell you why just later
02:40 - so we do include and we we create sort
02:43 - of like two um either semicolons sorry
02:47 - either two
02:49 - um single quotation marks or double
02:52 - quotation marks you can also wrap this
02:55 - um in Brackets but I just tend to prefer
02:57 - to use this uh method and I'm just going
02:59 - to Simply say header.
03:02 - in.php if it was a directory um before
03:05 - I'd do that if it was in another another
03:07 - folder I would do that so um uh wherever
03:11 - your file is in this case it's in the
03:13 - same location as these two pages in the
03:16 - same directory so now what I've done is
03:19 - if I go back to index
03:23 - page I've actually included this file in
03:26 - the top of my um my page just by using
03:30 - this keyword include and includeing the
03:32 - file I can do that in another page as
03:35 - well so include header.
03:39 - in.php and you can start to already see
03:41 - how useful this is because now when I go
03:44 - over to another page.php the header is
03:47 - exactly the same now the reason we do
03:50 - this um in general when we're creating a
03:52 - website let's just say um it's no longer
03:56 - called my page anymore um it's called
04:00 - um Alex's page now beforehand I would
04:04 - have had to go to
04:06 - index.php change the header let's just
04:08 - say the header was up here I would have
04:11 - had to change this then I would have had
04:14 - to go over to another page and change
04:16 - the header there but I've only had to
04:17 - change it once and therefore because
04:20 - we've included it it's updated on
04:23 - index.php and it's also updated on
04:26 - another page.php so we've created what's
04:28 - called a template system where we've
04:30 - included our header we can also include
04:33 - like a footer and then a main body if
04:35 - you wanted or a menu it it's Limitless
04:37 - you can use as many encloses as you want
04:39 - on one page
04:42 - now we may want to create a page where
04:46 - we store variables now let's just get
04:50 - rid of
04:53 - this and let's just get rid of
04:57 - this now I want to Echo out VAR one on
05:02 - this page and VAR two on this page okay
05:06 - I'm not actually going to set VAR one on
05:09 - this page or VAR two on this page I'm
05:12 - actually going to set it inside the
05:14 - header so I open up my PHP tags in here
05:17 - and I
05:18 - type far one
05:21 - equals
05:24 - string and V 2 equals 10 you'll notice
05:27 - how the colors of changing this just
05:29 - just because of the nature of my um text
05:31 - editor but this is valid PHP code so now
05:35 - I've declared these up here uh let's
05:37 - just comment these out for now and you
05:40 - can see what happens when we refresh
05:42 - another page nothing's displayed and
05:45 - when we come back to
05:49 - index.php uh nothing's displayed now
05:52 - let's uncomment
05:54 - these and refresh you can see string on
05:57 - that one and you can see uh on another
06:03 - page we said we have 10 so we're back to
06:05 - original however we've declared these
06:07 - variables we' we've assigned values to
06:09 - these variables in our header page which
06:12 - we've then included now let's say we
06:16 - want to only run this the rest of this
06:20 - page if um this file exists we want to
06:25 - check if this file exists we want to
06:27 - kill the page if we can't find the this
06:29 - header file because if we're echoing out
06:32 - variable one on this page and variable
06:35 - two on this page without this header
06:37 - file it's useless because we haven't
06:40 - declared our variables so for this we
06:43 - simply
06:44 - use require rather than
06:48 - include and you'll not notice any change
06:52 - to it whatsoever let's just refresh does
06:55 - exactly the same thing and if we go back
06:57 - to
06:58 - index.php
07:01 - it does exactly the same thing however
07:04 - let's change this back to
07:08 - include and this change this back to
07:11 - include and let's say we specify a file
07:13 - here that doesn't exist so
07:15 - non
07:17 - or doesn't exist PHP and let's just copy
07:21 - and paste this
07:25 - into here so doesn't exist. PHP doesn't
07:28 - exist okay so if we refresh we get an
07:31 - error okay whereas here we're echoing
07:35 - out um a variable and we can display
07:38 - this by
07:39 - saying bar 2 is something and we here we
07:45 - can say bar one
07:48 - is that so if we
07:51 - refresh we're still echoing out V one is
07:54 - but we're missing the variable because
07:56 - this page doesn't exist however
08:00 - um if we were
08:01 - to um choose
08:05 - require okay and we refresh watch what
08:09 - happens to this it disappears because
08:13 - we've retrieved a fatal error and the
08:15 - fundamental difference between require
08:17 - and include is that require just handles
08:20 - the uh errors differently so if we can't
08:22 - find the file and we've required it it
08:25 - kills the rest of the page we we just
08:27 - kill the page off so nothing else
08:31 - after this line here is executed it it
08:35 - it kills it off therefore well the
08:38 - reason this is important is because if
08:40 - we needed variables and we need this
08:43 - variable in this case to display this
08:45 - whole sentence properly we
08:49 - require header.
08:51 - in.php and on here we
08:54 - require header.
08:57 - in.php now um because we've required
09:04 - it and it does exist everything works
09:07 - out fine so it's just a way with a
09:10 - require to ensure that uh you're you
09:14 - know you might be in including a core
09:15 - file that has a list of variables that
09:17 - you need to use without your program and
09:20 - because requiring includer useful in the
09:22 - fact that you can include a long file
09:24 - with lots of variables that you need to
09:25 - use on maybe lots of different pages
09:28 - require ensures that these variable this
09:30 - file does exist therefore the files are
09:32 - required include is more for design
09:34 - based uh choices so for example you
09:37 - might want to include a menu your
09:39 - website doesn't necessarily have to run
09:41 - without a with a menu um you don't want
09:43 - to kill the rest of the page if you
09:45 - maybe don't have the menu file available
09:48 - so you just need to make a logical
09:50 - Choice whether you use include or
09:51 - require but for now that's both them
09:54 - inside
09:55 - PHP

Cleaned transcript:

hi this is Alex from PHP Academy and this is a video for the new Boston now in this short series I'm going to be the short tutorial I'm going to be talking about the include and require um inside PHP now you may visit websites and think you know how do they get the design or the template exactly the same every for every page and the answer is that there's a preset template uh not necessarily including um using include or require um it will be using most likely but it will be using some kind of um way to include this now you'll know that I've got two um files open I've got my index.php and I've got header. in.php um now header. in.php has um a header one um on with my page so if we preview this in our browser it looks like this now what what happens if I want to create multiple pages with the same header in now let's just go and create another file and I'm going to call this um I'm going to save this here in include require and I'm going to call this um let's just say um another page.php okay so I've got all in all uh three three pages I've got index.php another page.php and header. in.php now we're going to later on in the tutorial discuss um using PHP inside this file but for now I'm going to say this is my template now if I want to write let's say Echo um I'm just going to create a variable here called um string and I want to echo my variable okay so on the index page this is basically going to Echo string uh and on here I want to make a VAR and um an echo VAR so on my index page I'm echoing string on my another page I'm echoing 10 now what happens if I want to include the same header for both of these files I want to have this my page header on both of these files I can use either the include or the require function now for this purpose I'm going to be using include and I'll tell you why just later so we do include and we we create sort of like two um either semicolons sorry either two um single quotation marks or double quotation marks you can also wrap this um in Brackets but I just tend to prefer to use this uh method and I'm just going to Simply say header. in.php if it was a directory um before I'd do that if it was in another another folder I would do that so um uh wherever your file is in this case it's in the same location as these two pages in the same directory so now what I've done is if I go back to index page I've actually included this file in the top of my um my page just by using this keyword include and includeing the file I can do that in another page as well so include header. in.php and you can start to already see how useful this is because now when I go over to another page.php the header is exactly the same now the reason we do this um in general when we're creating a website let's just say um it's no longer called my page anymore um it's called um Alex's page now beforehand I would have had to go to index.php change the header let's just say the header was up here I would have had to change this then I would have had to go over to another page and change the header there but I've only had to change it once and therefore because we've included it it's updated on index.php and it's also updated on another page.php so we've created what's called a template system where we've included our header we can also include like a footer and then a main body if you wanted or a menu it it's Limitless you can use as many encloses as you want on one page now we may want to create a page where we store variables now let's just get rid of this and let's just get rid of this now I want to Echo out VAR one on this page and VAR two on this page okay I'm not actually going to set VAR one on this page or VAR two on this page I'm actually going to set it inside the header so I open up my PHP tags in here and I type far one equals string and V 2 equals 10 you'll notice how the colors of changing this just just because of the nature of my um text editor but this is valid PHP code so now I've declared these up here uh let's just comment these out for now and you can see what happens when we refresh another page nothing's displayed and when we come back to index.php uh nothing's displayed now let's uncomment these and refresh you can see string on that one and you can see uh on another page we said we have 10 so we're back to original however we've declared these variables we' we've assigned values to these variables in our header page which we've then included now let's say we want to only run this the rest of this page if um this file exists we want to check if this file exists we want to kill the page if we can't find the this header file because if we're echoing out variable one on this page and variable two on this page without this header file it's useless because we haven't declared our variables so for this we simply use require rather than include and you'll not notice any change to it whatsoever let's just refresh does exactly the same thing and if we go back to index.php it does exactly the same thing however let's change this back to include and this change this back to include and let's say we specify a file here that doesn't exist so non or doesn't exist PHP and let's just copy and paste this into here so doesn't exist. PHP doesn't exist okay so if we refresh we get an error okay whereas here we're echoing out um a variable and we can display this by saying bar 2 is something and we here we can say bar one is that so if we refresh we're still echoing out V one is but we're missing the variable because this page doesn't exist however um if we were to um choose require okay and we refresh watch what happens to this it disappears because we've retrieved a fatal error and the fundamental difference between require and include is that require just handles the uh errors differently so if we can't find the file and we've required it it kills the rest of the page we we just kill the page off so nothing else after this line here is executed it it it kills it off therefore well the reason this is important is because if we needed variables and we need this variable in this case to display this whole sentence properly we require header. in.php and on here we require header. in.php now um because we've required it and it does exist everything works out fine so it's just a way with a require to ensure that uh you're you know you might be in including a core file that has a list of variables that you need to use without your program and because requiring includer useful in the fact that you can include a long file with lots of variables that you need to use on maybe lots of different pages require ensures that these variable this file does exist therefore the files are required include is more for design based uh choices so for example you might want to include a menu your website doesn't necessarily have to run without a with a menu um you don't want to kill the rest of the page if you maybe don't have the menu file available so you just need to make a logical Choice whether you use include or require but for now that's both them inside PHP
