With timestamps:

00:00 - hello this is Alex from PHP academy' de
00:03 - org and in this video that I've created
00:05 - for the new Boston I'm going to be
00:06 - talking about the PHP switch statement
00:09 - now you might have already looked at if
00:11 - and if-else statements and with
00:14 - incorporating an else if to do multiple
00:17 - checks but what if you've got a lot of
00:19 - numbers or a lot of strings to check or
00:23 - something you need to check in a long
00:25 - list for this we use the switch it's
00:28 - basically a better cleaner and faster
00:31 - way of using an if else if and then else
00:35 - so the syntax for this is switch in here
00:40 - we need simply a variable reference
00:44 - so if up here we were to create number
00:47 - equals let's say 1 we need to switch
00:52 - this number and now we create a block
00:55 - here which is going to have a lot of
00:56 - content inside of it
00:58 - we're basically evaluating this number
01:01 - and we don't evaluate inside here like I
01:04 - couldn't say number equals 1 for example
01:06 - I would evaluate inside here and we do
01:10 - this with the case keyword and we use
01:12 - case and then we say what we want it to
01:15 - equal to so case 1 I want to maybe echo
01:20 - 1 let's just indent this slightly so we
01:25 - can see what we're doing and then we end
01:28 - it with break and we end with a
01:30 - semicolon so this is the basic structure
01:33 - let me just create another one so you
01:34 - can get an idea of what we're doing ok
01:42 - so hopefully by now you've got an idea
01:44 - of the syntax this is basically how it
01:46 - looks and what is this program
01:49 - essentially doing now let me just
01:51 - correct go down and create a case 3 and
01:54 - then we can just demonstrate what this
01:56 - might be useful for so let's tab over so
02:02 - what we have essentially done here is
02:05 - we've created a mini program to convert
02:08 - this number that's entered here into
02:10 - string data so instead of writing if
02:14 - number equals 1 then echo 1 else if
02:18 - number equals 2 echo 2 else if number
02:23 - equals 3 echo 3 end it else and we can
02:28 - blah blah blah and it just gets a lot
02:30 - more confusing this is a really easy way
02:32 - to view yep case 1 we echo 1 case 2 we
02:36 - echo 2 case three we echo 3 and this is
02:39 - basically what our number evaluates to
02:42 - so we could in fact change this to
02:45 - string data this could be text here and
02:49 - exactly the same hit could correspond to
02:51 - a string data here we'll look at an
02:54 - example of that in just a moment
02:56 - but for now my little mini program is
02:58 - going to convert the numbers the
03:00 - integers remember we're not using this a
03:02 - string this is a number in itself we're
03:04 - converting that to the corresponding
03:08 - text so now what we can do is just run
03:12 - the program let's press refresh and you
03:14 - can see that is outputted 1 now if we
03:16 - change this number up here to 2 you can
03:19 - see that we're going to say case yes it
03:20 - does equal to therefore echo 2 so let's
03:23 - refresh that says 2 and the same with
03:27 - number 3 so let's just test that
03:30 - and that says three now what happens if
03:33 - we change this to something like four we
03:35 - don't have a case to handle this being
03:37 - equal to four so what happens you
03:39 - probably guess nothing happens so we
03:43 - need some way of writing here what's
03:45 - going to happen if there's no case to
03:48 - handle the input that we've spent the
03:52 - input that is coming into this switch
03:54 - statement so we use the keyword default
03:57 - and we use a break as well and but in
04:00 - here we can echo out just pull that in a
04:02 - bit echo out let's say number not found
04:08 - okay
04:09 - so by default let's say for example the
04:13 - number is four as we have it at the
04:15 - moment the default the default action
04:18 - would be to echo not not found number
04:20 - not found so if we refresh it says
04:22 - number not found the same of is if as if
04:25 - we were to come up and change this to
04:27 - minus ten for example it's going to do
04:29 - exactly the same thing and we maintain
04:31 - echoing out this number not found thing
04:34 - okay so there's a different way that we
04:37 - can structure this I'm just going to
04:39 - take out the default for now let's just
04:42 - get rid of everything in here as well
04:43 - and we're going to basically start with
04:45 - this completely different concept I'm
04:47 - going to say de equals and at the moment
04:51 - I'm going to set this to same Monday now
04:53 - inside my switch statement remember to
04:56 - change this as well inside my switch
04:58 - statement I basically want a little
05:00 - program that's going to tell me if this
05:02 - day is a weekend or if it's a weekday so
05:06 - or if you know I mean if if it is a
05:09 - weekend
05:10 - we could say day equals Alex and that
05:13 - would not be a weekend because there
05:15 - isn't a weekend day called Alex so to do
05:18 - this I'm basically going to say case and
05:21 - remember I said we can deal with string
05:23 - data as well case Saturday
05:27 - and then underneath in fact that says :
05:30 - not a semicolon underneath I'm going to
05:33 - say case um I'm just I'm I'm not even
05:35 - breaking I'm just saying case case case
05:38 - someday okay
05:41 - then I'm going to break and in here I'm
05:44 - going to write my output so it's a
05:48 - weekend now an interesting point here
05:51 - you can see that this bits turn black
05:52 - that's because I'm using a a single
05:57 - quotation mark within single quotation
05:59 - marks I'm going to use my backslash
06:00 - character to escape that now this the
06:04 - program is basically saying we're
06:06 - setting a date at the moment it's Monday
06:08 - if if this variable here remembers we're
06:12 - switching it in here if this equals if
06:14 - this equals Saturday or equals Sunday
06:17 - echoing it's a weekend otherwise
06:28 - just pull that in a bit more echo not a
06:31 - weekend so let's test this program
06:34 - Monday should produce us with the result
06:37 - not a weekend let's refresh not a
06:40 - weekend now let's change this to
06:43 - Saturday we can refresh and you can see
06:49 - it's a weekend so this is a really
06:51 - really good way to compare multiple
06:52 - things at once and then give an output
06:54 - for that and then you can always use
06:56 - your default if data that's being read
07:00 - into this switch statement can't be
07:02 - recognized as one of the cases so that's
07:05 - basically a switch statements in PHP

Cleaned transcript:

hello this is Alex from PHP academy' de org and in this video that I've created for the new Boston I'm going to be talking about the PHP switch statement now you might have already looked at if and ifelse statements and with incorporating an else if to do multiple checks but what if you've got a lot of numbers or a lot of strings to check or something you need to check in a long list for this we use the switch it's basically a better cleaner and faster way of using an if else if and then else so the syntax for this is switch in here we need simply a variable reference so if up here we were to create number equals let's say 1 we need to switch this number and now we create a block here which is going to have a lot of content inside of it we're basically evaluating this number and we don't evaluate inside here like I couldn't say number equals 1 for example I would evaluate inside here and we do this with the case keyword and we use case and then we say what we want it to equal to so case 1 I want to maybe echo 1 let's just indent this slightly so we can see what we're doing and then we end it with break and we end with a semicolon so this is the basic structure let me just create another one so you can get an idea of what we're doing ok so hopefully by now you've got an idea of the syntax this is basically how it looks and what is this program essentially doing now let me just correct go down and create a case 3 and then we can just demonstrate what this might be useful for so let's tab over so what we have essentially done here is we've created a mini program to convert this number that's entered here into string data so instead of writing if number equals 1 then echo 1 else if number equals 2 echo 2 else if number equals 3 echo 3 end it else and we can blah blah blah and it just gets a lot more confusing this is a really easy way to view yep case 1 we echo 1 case 2 we echo 2 case three we echo 3 and this is basically what our number evaluates to so we could in fact change this to string data this could be text here and exactly the same hit could correspond to a string data here we'll look at an example of that in just a moment but for now my little mini program is going to convert the numbers the integers remember we're not using this a string this is a number in itself we're converting that to the corresponding text so now what we can do is just run the program let's press refresh and you can see that is outputted 1 now if we change this number up here to 2 you can see that we're going to say case yes it does equal to therefore echo 2 so let's refresh that says 2 and the same with number 3 so let's just test that and that says three now what happens if we change this to something like four we don't have a case to handle this being equal to four so what happens you probably guess nothing happens so we need some way of writing here what's going to happen if there's no case to handle the input that we've spent the input that is coming into this switch statement so we use the keyword default and we use a break as well and but in here we can echo out just pull that in a bit echo out let's say number not found okay so by default let's say for example the number is four as we have it at the moment the default the default action would be to echo not not found number not found so if we refresh it says number not found the same of is if as if we were to come up and change this to minus ten for example it's going to do exactly the same thing and we maintain echoing out this number not found thing okay so there's a different way that we can structure this I'm just going to take out the default for now let's just get rid of everything in here as well and we're going to basically start with this completely different concept I'm going to say de equals and at the moment I'm going to set this to same Monday now inside my switch statement remember to change this as well inside my switch statement I basically want a little program that's going to tell me if this day is a weekend or if it's a weekday so or if you know I mean if if it is a weekend we could say day equals Alex and that would not be a weekend because there isn't a weekend day called Alex so to do this I'm basically going to say case and remember I said we can deal with string data as well case Saturday and then underneath in fact that says not a semicolon underneath I'm going to say case um I'm just I'm I'm not even breaking I'm just saying case case case someday okay then I'm going to break and in here I'm going to write my output so it's a weekend now an interesting point here you can see that this bits turn black that's because I'm using a a single quotation mark within single quotation marks I'm going to use my backslash character to escape that now this the program is basically saying we're setting a date at the moment it's Monday if if this variable here remembers we're switching it in here if this equals if this equals Saturday or equals Sunday echoing it's a weekend otherwise just pull that in a bit more echo not a weekend so let's test this program Monday should produce us with the result not a weekend let's refresh not a weekend now let's change this to Saturday we can refresh and you can see it's a weekend so this is a really really good way to compare multiple things at once and then give an output for that and then you can always use your default if data that's being read into this switch statement can't be recognized as one of the cases so that's basically a switch statements in PHP
