With timestamps:

00:00 - okay so what we're gonna need is an if
00:03 - statement or a shorthand if statement
00:05 - for each value and we want to check if
00:08 - the length of it doesn't equal two and
00:10 - if the length doesn't equal two we want
00:12 - to append a number in front for example
00:15 - if we were to say if the length of days
00:18 - doesn't equal two which it doesn't we
00:20 - want to add a zero in front of here so
00:22 - it'll show zero one days it just adds a
00:25 - bit more structure but obviously this at
00:27 - this point it's optional let's go ahead
00:29 - and do this anyway so what I want to do
00:32 - is I want to redefine each variable so
00:34 - I'm gonna say days equals and then
00:36 - here's going to be my condition so I'm
00:39 - gonna say string days we're converting
00:41 - days which remember at the moments an
00:43 - integer to a string and then we're using
00:46 - dot lengths to check the length of it so
00:49 - if this doesn't equal two I want to go
00:51 - ahead with a question marks the first
00:53 - option so if this if this statement
00:56 - evaluates to true I want to go ahead and
00:58 - say days is equal to zero plus days else
01:03 - using a colon I just want days to equal
01:06 - days so we're just reassigning the same
01:08 - value so you might may have seen
01:10 - something like this if you've studied
01:11 - other languages are the programming
01:13 - languages it's just a way to say days if
01:15 - days if the length of this or if this
01:18 - conditions evaluates to true then this
01:21 - value here will be assigned to days
01:23 - otherwise this value here will be
01:25 - assigned to days so we can do this for
01:27 - each one so we've got days hours equals
01:33 - and the same thing string hours dot
01:37 - length doesn't equal two if it doesn't
01:40 - equal two we append a a zero
01:47 - onto the front of ours otherwise ours is
01:51 - just step back to ours
01:52 - and the same with minutes we say mins
01:54 - equals convert temporarily mins to a
02:00 - string check the length doesn't equal
02:02 - two if the length doesn't equal two we
02:05 - have a zero appended on two mins
02:07 - otherwise we had just have mins and the
02:11 - same for seconds we convert seconds to a
02:14 - string we check the length a story check
02:18 - the length against minus 2 and if it is
02:22 - we just go ahead and pop it and see it
02:24 - right in front of seconds otherwise it
02:27 - just stays a seconds so quite
02:29 - straightforward here let's go ahead and
02:32 - just test this when i refresh you can
02:34 - now see that we've got oh ok so let's
02:37 - just take a look at what we've done
02:46 - oh okay sorry the the countdown here as
02:49 - obviously as it reached now hasn't let's
02:52 - just have a look them I'll right okay so
03:00 - I called this minutes and this seconds
03:07 - and let's just realign these up so the
03:12 - wrong variable names obviously there we
03:14 - can just go ahead and correct this
03:15 - so minutes and seconds and the same with
03:19 - this minutes and seconds okay and the
03:28 - last one seconds right okay so we've
03:32 - obviously got days hours minutes and
03:34 - seconds being reassigned depending on
03:35 - their length and we're adding a trailing
03:38 - or a leading zero if not so now you can
03:41 - see that we've got one day which is 0-1
03:44 - now 21 hours which is two characters so
03:47 - we haven't appended on a zero to the
03:50 - front or prepended a zero
03:51 - we've got two minutes which does how
03:53 - many have one character so we've
03:54 - prepended on a zero here and then the
03:57 - seconds work in exactly the same way as
03:59 - when they get down to like for example
04:02 - the number 9l which we'll see in just a
04:05 - moment we then can see that it will add
04:09 - to zero on so that's all that this does
04:12 - obviously it's optional depending on how
04:13 - you want to display it but if you want
04:15 - to sort of keep the same size elements
04:18 - this is really useful because you're
04:20 - keeping the same size depending on how
04:22 - these change if for example 22 seconds
04:25 - comes down to nine seconds in a moment
04:28 - this will shift everything inward if you
04:30 - didn't have the prepended zeros so it
04:33 - just makes it look a lot cleaner as well
04:34 - and it maintains the same thing so you
04:37 - can see there it's just changed and it
04:38 - hasn't shifted everything inwards
04:40 - okay so now what we want to focus on is
04:44 - checking whether this date is a number
04:48 - or not because remember we're converting
04:50 - a string based date here to a timestamp
04:53 - so what we want to do is if if it's not
04:56 - a number we don't want to display
04:58 - anything we want
04:59 - just you know not do anything we're not
05:01 - gonna give an error I mean we could give
05:04 - an error but we're just gonna want to
05:05 - not do anything so for example at the
05:07 - moment if I go to ext Deus and just
05:10 - change this - I'll just type Alex and
05:13 - capitals in the middle of this when i
05:15 - refresh you can see that we've got n a n
05:17 - n a n n a n and n am for not a number
05:20 - because this has had a problem
05:21 - converting with Alex into a timestamp so
05:25 - what we want to do is before we display
05:27 - everything here we want to say if not is
05:30 - n a n so if this if something inside of
05:34 - this bracket is not a number which is
05:36 - event date then we want to display this
05:42 - so if it's not not a number which means
05:45 - if it is a number we could even go as
05:50 - far as pulling this up to up to here I
05:54 - guess yeah I suppose we could actually
05:57 - that would probably be the correct way
05:59 - to do this and let's just go ahead and
06:02 - undo all of that so I'm gonna say a just
06:06 - up here I'm gonna say if not is not a
06:12 - number event or settings event
06:17 - Oh an actual fact now we need to convert
06:18 - the value beforehand to check whether as
06:21 - a number so what would is we'll just
06:23 - keep it down here we use slightly more
06:25 - processing power before we actually work
06:27 - out if it's not a number

Cleaned transcript:

okay so what we're gonna need is an if statement or a shorthand if statement for each value and we want to check if the length of it doesn't equal two and if the length doesn't equal two we want to append a number in front for example if we were to say if the length of days doesn't equal two which it doesn't we want to add a zero in front of here so it'll show zero one days it just adds a bit more structure but obviously this at this point it's optional let's go ahead and do this anyway so what I want to do is I want to redefine each variable so I'm gonna say days equals and then here's going to be my condition so I'm gonna say string days we're converting days which remember at the moments an integer to a string and then we're using dot lengths to check the length of it so if this doesn't equal two I want to go ahead with a question marks the first option so if this if this statement evaluates to true I want to go ahead and say days is equal to zero plus days else using a colon I just want days to equal days so we're just reassigning the same value so you might may have seen something like this if you've studied other languages are the programming languages it's just a way to say days if days if the length of this or if this conditions evaluates to true then this value here will be assigned to days otherwise this value here will be assigned to days so we can do this for each one so we've got days hours equals and the same thing string hours dot length doesn't equal two if it doesn't equal two we append a a zero onto the front of ours otherwise ours is just step back to ours and the same with minutes we say mins equals convert temporarily mins to a string check the length doesn't equal two if the length doesn't equal two we have a zero appended on two mins otherwise we had just have mins and the same for seconds we convert seconds to a string we check the length a story check the length against minus 2 and if it is we just go ahead and pop it and see it right in front of seconds otherwise it just stays a seconds so quite straightforward here let's go ahead and just test this when i refresh you can now see that we've got oh ok so let's just take a look at what we've done oh okay sorry the the countdown here as obviously as it reached now hasn't let's just have a look them I'll right okay so I called this minutes and this seconds and let's just realign these up so the wrong variable names obviously there we can just go ahead and correct this so minutes and seconds and the same with this minutes and seconds okay and the last one seconds right okay so we've obviously got days hours minutes and seconds being reassigned depending on their length and we're adding a trailing or a leading zero if not so now you can see that we've got one day which is 01 now 21 hours which is two characters so we haven't appended on a zero to the front or prepended a zero we've got two minutes which does how many have one character so we've prepended on a zero here and then the seconds work in exactly the same way as when they get down to like for example the number 9l which we'll see in just a moment we then can see that it will add to zero on so that's all that this does obviously it's optional depending on how you want to display it but if you want to sort of keep the same size elements this is really useful because you're keeping the same size depending on how these change if for example 22 seconds comes down to nine seconds in a moment this will shift everything inward if you didn't have the prepended zeros so it just makes it look a lot cleaner as well and it maintains the same thing so you can see there it's just changed and it hasn't shifted everything inwards okay so now what we want to focus on is checking whether this date is a number or not because remember we're converting a string based date here to a timestamp so what we want to do is if if it's not a number we don't want to display anything we want just you know not do anything we're not gonna give an error I mean we could give an error but we're just gonna want to not do anything so for example at the moment if I go to ext Deus and just change this I'll just type Alex and capitals in the middle of this when i refresh you can see that we've got n a n n a n n a n and n am for not a number because this has had a problem converting with Alex into a timestamp so what we want to do is before we display everything here we want to say if not is n a n so if this if something inside of this bracket is not a number which is event date then we want to display this so if it's not not a number which means if it is a number we could even go as far as pulling this up to up to here I guess yeah I suppose we could actually that would probably be the correct way to do this and let's just go ahead and undo all of that so I'm gonna say a just up here I'm gonna say if not is not a number event or settings event Oh an actual fact now we need to convert the value beforehand to check whether as a number so what would is we'll just keep it down here we use slightly more processing power before we actually work out if it's not a number
