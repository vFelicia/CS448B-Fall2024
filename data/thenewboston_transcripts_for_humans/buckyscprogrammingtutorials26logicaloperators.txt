With timestamps:

00:00 - what's going on guys is Bucky and
00:01 - welcome to your twenty six tutorial in
00:03 - C++ in this tutorial I'm gonna be
00:05 - talking to you guys about something
00:06 - called logical operators now let me go
00:09 - ahead and build a simple program right
00:11 - now say we were the owner of a nightclub
00:13 - and we wanted to calculate whether a
00:15 - person was allowed in or whether they
00:17 - weren't so first we looked at their age
00:19 - and we're gonna make sure it's you know
00:22 - over 21 because we don't want to get
00:24 - sued and the next thing we're gonna be
00:26 - looking at is how much money they have
00:27 - because we don't want to allow poor
00:29 - people into our you know 5-star
00:32 - nightclub so let's say they need more
00:34 - than five hundred dollars so let's go
00:36 - ahead and make this like person has six
00:38 - hundred and fifty dollars so we can test
00:40 - this like this if H is greater than
00:44 - twenty one and if money is greater than
00:50 - what I say five hundred um where would I
00:54 - just hit insert where the hex might
00:56 - insert key on this keyboard this
00:58 - keyboard is really my stuff now that
01:00 - look about it so it took me like five
01:03 - minutes to find the insert it was
01:04 - actually by my up-and-down arrows that's
01:07 - weird so anyways mmm now that we had our
01:11 - nice little break we can go ahead and
01:13 - just write something like C out um you
01:15 - are allowed in and make sure you sell it
01:19 - with a nine and you and make sure you
01:22 - spell in ion or else this program just
01:24 - won't work so let's go ahead and run
01:26 - this and see what we get we are allowed
01:29 - in because we indeed are greater than 21
01:32 - and we have more than 500 dollars so
01:35 - resent alright pretty cool program maybe
01:38 - I'll open up a nightclub now but check
01:40 - this out
01:41 - this can get kind of confusing after a
01:43 - while because this brace goes to this
01:45 - and this goes to this we're pretty
01:48 - easily distinguishable but what if we
01:50 - had five different tests that we need to
01:52 - check what if we had 20 different tests
01:54 - well one little mistake say we had this
01:57 - over here or program I'm still going to
01:59 - run fine but it looks like this goes to
02:01 - this and this goes the main or something
02:03 - who knows where this one goes
02:05 - I mean putting a bunch of if statements
02:07 - inside other if statements is not always
02:09 - the best idea so we have a better way to
02:12 - test two or more things and that's
02:14 - through the use of something called
02:15 - logical operators and this allows you to
02:18 - make all your tests on a single line so
02:21 - here's what we can do in this case go
02:23 - ahead and make your if statement and
02:24 - then might as well make our C out right
02:27 - now like you are allowed in explanation
02:31 - point with endline and in our if
02:34 - statement go ahead and write your two
02:36 - tests like what do you put age is
02:38 - greater than 21 and whenever you join
02:41 - them you use this logical operator and
02:44 - and and now go ahead and write money is
02:48 - greater than 500 now let's go ahead and
02:51 - run this and check it out
02:52 - same results a whole lot less
02:54 - programming so what and and means do
02:58 - this test and do this test if they're
03:02 - both true then run this bit of code and
03:05 - since they both were true it ran this
03:07 - bit of code if one of them was false say
03:09 - we only had you know four dollars like
03:13 - that well yeah this test is gonna be
03:15 - true because we're greater than ten to
03:16 - one but this is gonna be false because
03:18 - four dollars is not greater than 500 and
03:21 - whenever you run it we are not allowed
03:24 - and check it out and also if both the
03:27 - tests are false like we're only two and
03:30 - oops
03:31 - right or wrong space for that say we're
03:33 - only two years old and we only have four
03:35 - dollars probably from the Tooth Fairy of
03:37 - course we are not gonna be allowed in
03:40 - the club not cool but you know we're two
03:42 - year-old who needs to go clubbing one
03:44 - there too anyways so basically a double
03:46 - + sign means this test all these tests
03:49 - and if they're both true then you can
03:52 - run this bit of code but if one of them
03:54 - is false or both of them is false then
03:56 - we don't run it simple enough huh and I
03:59 - say and with this test in this test but
04:02 - you can also have an
04:04 - and in another test and even in an in
04:07 - another test and it's just gonna run all
04:09 - of your tests and make sure that they're
04:11 - all true so the only way this bit of
04:13 - code is going to run is if all your
04:15 - tests and this is true so if we're
04:19 - saying all right I understand that
04:20 - logical operator all the tests need to
04:22 - be true in order to run but what if you
04:25 - say this all right
04:26 - I'm you know not the most professional
04:29 - nightclub owner so I'm gonna allow them
04:31 - in if only one of these tests is true if
04:34 - they're over 21 then they're allowed and
04:37 - of course or if they have over 500
04:40 - dollars I'm gonna lie to allow him in
04:42 - because you know if 20 year-old walks in
04:44 - with like 8 grand I know he's not 21 but
04:48 - I think we should let him in anyways so
04:50 - say we wanted to do that make sure only
04:52 - one of the tests is true what we do is
04:55 - use a logical operator called the or
04:57 - logical cooperator and that's if you see
05:00 - above the enter key on your keyboard
05:02 - and hold shift you get these two little
05:04 - things I call them pipes but I think
05:06 - some people call them pipe lines tell
05:08 - you truth I don't know what they're
05:09 - called it's like a straight line up and
05:12 - down as you can see but that's what
05:14 - little that's what it is
05:16 - and two of them in a row is the or
05:18 - logical operator and what the or logical
05:22 - operator says is this
05:23 - unlike the end where this one and this
05:26 - one had to be true only one of them has
05:29 - to be true and the other one can be
05:30 - false and it still runs the bit of code
05:32 - so check this out
05:33 - we pass this test is true 26 is greater
05:36 - than 21 but we don't have more than $500
05:40 - so this is gonna be false so true and
05:42 - false so we run it and it allows us in
05:46 - even though one of these was false but
05:49 - if both of these were false say we're
05:51 - only 6 years old
05:54 - it wouldn't allow sin so anyways what
05:57 - you have to remember is this that and at
06:00 - logical operator both the tests have to
06:02 - be true with the or logical operator one
06:06 - of the tests have to be true and another
06:09 - thing if both of the tests are true and
06:10 - or it's gonna run your bit of code so
06:13 - let's say you were you know 64 and you
06:16 - had you know a crapload of money it
06:18 - would run and even though they're both
06:20 - true it would allow you in any way so
06:22 - with the or this one or this one or both
06:27 - of them have to be true and with an and
06:29 - this one and this one has to be true and
06:32 - of course you can add another or test
06:35 - and another or test and another or test
06:39 - and when you ran program like this it's
06:42 - going to run through all of your tests
06:43 - and as long as one of them is true for
06:46 - example this one could be true and all
06:48 - these other ones could be false and it
06:50 - was still around this bit of code an
06:51 - order basically means look for at least
06:53 - one that's true and if it's true run the
06:56 - bit of code so now that I repeated that
06:58 - about eight hundred times
06:59 - you guys should understand the
07:01 - difference between an and an or logical
07:03 - operator and when you would want to use
07:05 - one versus the other I guess it depends
07:07 - on what kind of nightclub owner you want
07:09 - to be but for now that's all the code on
07:11 - I'm going to do so thank you guys for
07:12 - watching this tutorial don't know what
07:14 - I'm gonna cover in next tutorial but if
07:16 - you click on the next link you can see
07:18 - so thank you guys for watching and I'll
07:19 - see you then

Cleaned transcript:

what's going on guys is Bucky and welcome to your twenty six tutorial in C++ in this tutorial I'm gonna be talking to you guys about something called logical operators now let me go ahead and build a simple program right now say we were the owner of a nightclub and we wanted to calculate whether a person was allowed in or whether they weren't so first we looked at their age and we're gonna make sure it's you know over 21 because we don't want to get sued and the next thing we're gonna be looking at is how much money they have because we don't want to allow poor people into our you know 5star nightclub so let's say they need more than five hundred dollars so let's go ahead and make this like person has six hundred and fifty dollars so we can test this like this if H is greater than twenty one and if money is greater than what I say five hundred um where would I just hit insert where the hex might insert key on this keyboard this keyboard is really my stuff now that look about it so it took me like five minutes to find the insert it was actually by my upanddown arrows that's weird so anyways mmm now that we had our nice little break we can go ahead and just write something like C out um you are allowed in and make sure you sell it with a nine and you and make sure you spell in ion or else this program just won't work so let's go ahead and run this and see what we get we are allowed in because we indeed are greater than 21 and we have more than 500 dollars so resent alright pretty cool program maybe I'll open up a nightclub now but check this out this can get kind of confusing after a while because this brace goes to this and this goes to this we're pretty easily distinguishable but what if we had five different tests that we need to check what if we had 20 different tests well one little mistake say we had this over here or program I'm still going to run fine but it looks like this goes to this and this goes the main or something who knows where this one goes I mean putting a bunch of if statements inside other if statements is not always the best idea so we have a better way to test two or more things and that's through the use of something called logical operators and this allows you to make all your tests on a single line so here's what we can do in this case go ahead and make your if statement and then might as well make our C out right now like you are allowed in explanation point with endline and in our if statement go ahead and write your two tests like what do you put age is greater than 21 and whenever you join them you use this logical operator and and and now go ahead and write money is greater than 500 now let's go ahead and run this and check it out same results a whole lot less programming so what and and means do this test and do this test if they're both true then run this bit of code and since they both were true it ran this bit of code if one of them was false say we only had you know four dollars like that well yeah this test is gonna be true because we're greater than ten to one but this is gonna be false because four dollars is not greater than 500 and whenever you run it we are not allowed and check it out and also if both the tests are false like we're only two and oops right or wrong space for that say we're only two years old and we only have four dollars probably from the Tooth Fairy of course we are not gonna be allowed in the club not cool but you know we're two yearold who needs to go clubbing one there too anyways so basically a double + sign means this test all these tests and if they're both true then you can run this bit of code but if one of them is false or both of them is false then we don't run it simple enough huh and I say and with this test in this test but you can also have an and in another test and even in an in another test and it's just gonna run all of your tests and make sure that they're all true so the only way this bit of code is going to run is if all your tests and this is true so if we're saying all right I understand that logical operator all the tests need to be true in order to run but what if you say this all right I'm you know not the most professional nightclub owner so I'm gonna allow them in if only one of these tests is true if they're over 21 then they're allowed and of course or if they have over 500 dollars I'm gonna lie to allow him in because you know if 20 yearold walks in with like 8 grand I know he's not 21 but I think we should let him in anyways so say we wanted to do that make sure only one of the tests is true what we do is use a logical operator called the or logical cooperator and that's if you see above the enter key on your keyboard and hold shift you get these two little things I call them pipes but I think some people call them pipe lines tell you truth I don't know what they're called it's like a straight line up and down as you can see but that's what little that's what it is and two of them in a row is the or logical operator and what the or logical operator says is this unlike the end where this one and this one had to be true only one of them has to be true and the other one can be false and it still runs the bit of code so check this out we pass this test is true 26 is greater than 21 but we don't have more than $500 so this is gonna be false so true and false so we run it and it allows us in even though one of these was false but if both of these were false say we're only 6 years old it wouldn't allow sin so anyways what you have to remember is this that and at logical operator both the tests have to be true with the or logical operator one of the tests have to be true and another thing if both of the tests are true and or it's gonna run your bit of code so let's say you were you know 64 and you had you know a crapload of money it would run and even though they're both true it would allow you in any way so with the or this one or this one or both of them have to be true and with an and this one and this one has to be true and of course you can add another or test and another or test and another or test and when you ran program like this it's going to run through all of your tests and as long as one of them is true for example this one could be true and all these other ones could be false and it was still around this bit of code an order basically means look for at least one that's true and if it's true run the bit of code so now that I repeated that about eight hundred times you guys should understand the difference between an and an or logical operator and when you would want to use one versus the other I guess it depends on what kind of nightclub owner you want to be but for now that's all the code on I'm going to do so thank you guys for watching this tutorial don't know what I'm gonna cover in next tutorial but if you click on the next link you can see so thank you guys for watching and I'll see you then
