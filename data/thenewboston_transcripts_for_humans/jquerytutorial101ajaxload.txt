With timestamps:

00:00 - hi this is Alex from PHP academy' talked
00:02 - with a video for the new Boston okay so
00:06 - in this tutorial we're going to take a
00:07 - look at Ajax requests in jQuery now
00:10 - we've already looked in previous part at
00:12 - get and post requests however what we're
00:15 - going to be doing now is performing an a
00:17 - synchronous HTTP request which is an
00:20 - ajax request so we're going to go ahead
00:23 - and set up our page to look similar to
00:26 - what we did in the last parts of the
00:28 - tutorial which were the get and the post
00:29 - and we're going to create an input text
00:32 - area or an input field then we're going
00:34 - to create a button which is going to
00:36 - submit some data to a file now the first
00:40 - thing we're going to do is just test
00:42 - Ajax on its own and then in the next
00:44 - part of the tutorial we're going to look
00:46 - at submitting data to the file itself so
00:50 - let's go ahead and create a button so
00:55 - input type R is button and we'll give
00:58 - this a value of load okay so we're going
01:02 - to give this an ID that's just going to
01:05 - be button so we can use an event handler
01:07 - in Ajax jas which we've included on our
01:10 - page to actually load a particular file
01:13 - so we're going to go ahead and create a
01:16 - div inside here and this is going to
01:19 - have the ID of let's say content okay so
01:22 - essentially what we're going to be doing
01:24 - is we're going to be clicking this
01:25 - button and we're going to be loading
01:27 - some data into this content div from a
01:29 - file
01:30 - now we've already looked at using the
01:32 - load function in a previous part of the
01:35 - tutorial set however this is a lot more
01:38 - effective way because we can use things
01:40 - that we can use handlers like success
01:43 - and we can use a callback function on
01:45 - this to see if the data was performed
01:48 - correctly or the load was performed
01:50 - correctly so let's go ahead to Ajax
01:54 - jeaious and start to write out our event
01:57 - handler now we've called our button
01:59 - button so we know that we can reference
02:00 - that in here using a selector so we can
02:03 - say button and we're going to say dot
02:06 - click and then we're going to create a
02:09 - function inside of here with a block as
02:11 - we've done before
02:13 - to bring this down and inside of here
02:15 - we're going to create the Ajax request
02:17 - so its dollar sign dot Ajax and then in
02:21 - brackets we're going to go ahead and
02:23 - send multiple parameters to this so
02:26 - let's go ahead and create some curly
02:30 - brackets inside here and we'll just
02:32 - bring that down so it's easier for us to
02:33 - manage now the first parameter we give
02:36 - is URL and this is obviously the page
02:40 - that we want to load so let's go ahead
02:42 - and load a page that first of all
02:44 - doesn't exist so we can test out the
02:46 - next parameter which is success so the
02:50 - page that we want to load is page HTML
02:53 - now we're going to comma separate these
02:56 - values so I'm going to put a comma on
02:57 - the end of this line and come down I'm
03:00 - now going to create a parameter called
03:01 - success and we're going to create this
03:05 - equal to a function and again we're
03:08 - holding the data that's returned from
03:10 - this page to HTML so now we have the
03:14 - well we're going to come down again with
03:16 - these brackets here and we now have this
03:19 - data variable here which contains the
03:22 - values inside of this page to HTML or
03:25 - the contents of this page to HTML so
03:28 - what we can do now is we can go ahead
03:29 - and apply this to content so let's go
03:33 - ahead and reference content with the
03:36 - selector content and then I'm going to
03:39 - say dot HTML data so let's just run over
03:44 - what we've done before we go ahead and
03:46 - look at this in our browser on the click
03:49 - of a button we're calling an eight an
03:51 - ajax request to this URL here page two
03:55 - HTML which doesn't currently exist in
03:57 - our root directory so just take a look
03:59 - okay and what we're then doing is upon
04:04 - success we are creating a function with
04:07 - data and then this data is then going
04:10 - inside of our content area which is our
04:12 - div let's go ahead and refresh the page
04:14 - when I click load you'll see nothing
04:16 - happens this is because the request was
04:19 - not successful and therefore we didn't
04:21 - load any data so let's now go ahead and
04:25 - create this page
04:26 - I HTML file let's save that inside our
04:31 - root directory as page HTML and we'll go
04:35 - ahead and put some strong tags in and
04:39 - loaded okay okay back to our browser
04:44 - let's refresh the page
04:46 - let's click load and you'll see that
04:48 - we've successfully loaded in the
04:49 - contents of this HTML file so obviously
04:53 - this is extremely basic and we're not
04:55 - passing any variables just yet we're
04:57 - going to look at that in the next part
04:59 - of the tutorial we're also going to look
05:01 - at testing whether we have an error and
05:05 - then we're also going to be looking at
05:08 - what we do if there is an error and how
05:10 - we can display this to the user so
05:11 - similar to post but this Ajax HTTP
05:15 - request
05:16 - it's a synchronous HTTP request is
05:19 - probably a lot better to use you have a
05:22 - vast majority of parameters that you can
05:25 - use with regards to this functionality
05:28 - as opposed to the get and post HTTP
05:32 - requests so this is a lot better way to
05:35 - do it if you go over to the jQuery
05:37 - documentation you can read up about this
05:39 - this functionality and performing this
05:42 - request and how many parameters you can
05:44 - actually supply to it and how many
05:47 - different things you can do with it so
05:49 - in the next part of the tutorial we're
05:50 - going to look at sending some data to a
05:52 - PHP file and then returning the result

Cleaned transcript:

hi this is Alex from PHP academy' talked with a video for the new Boston okay so in this tutorial we're going to take a look at Ajax requests in jQuery now we've already looked in previous part at get and post requests however what we're going to be doing now is performing an a synchronous HTTP request which is an ajax request so we're going to go ahead and set up our page to look similar to what we did in the last parts of the tutorial which were the get and the post and we're going to create an input text area or an input field then we're going to create a button which is going to submit some data to a file now the first thing we're going to do is just test Ajax on its own and then in the next part of the tutorial we're going to look at submitting data to the file itself so let's go ahead and create a button so input type R is button and we'll give this a value of load okay so we're going to give this an ID that's just going to be button so we can use an event handler in Ajax jas which we've included on our page to actually load a particular file so we're going to go ahead and create a div inside here and this is going to have the ID of let's say content okay so essentially what we're going to be doing is we're going to be clicking this button and we're going to be loading some data into this content div from a file now we've already looked at using the load function in a previous part of the tutorial set however this is a lot more effective way because we can use things that we can use handlers like success and we can use a callback function on this to see if the data was performed correctly or the load was performed correctly so let's go ahead to Ajax jeaious and start to write out our event handler now we've called our button button so we know that we can reference that in here using a selector so we can say button and we're going to say dot click and then we're going to create a function inside of here with a block as we've done before to bring this down and inside of here we're going to create the Ajax request so its dollar sign dot Ajax and then in brackets we're going to go ahead and send multiple parameters to this so let's go ahead and create some curly brackets inside here and we'll just bring that down so it's easier for us to manage now the first parameter we give is URL and this is obviously the page that we want to load so let's go ahead and load a page that first of all doesn't exist so we can test out the next parameter which is success so the page that we want to load is page HTML now we're going to comma separate these values so I'm going to put a comma on the end of this line and come down I'm now going to create a parameter called success and we're going to create this equal to a function and again we're holding the data that's returned from this page to HTML so now we have the well we're going to come down again with these brackets here and we now have this data variable here which contains the values inside of this page to HTML or the contents of this page to HTML so what we can do now is we can go ahead and apply this to content so let's go ahead and reference content with the selector content and then I'm going to say dot HTML data so let's just run over what we've done before we go ahead and look at this in our browser on the click of a button we're calling an eight an ajax request to this URL here page two HTML which doesn't currently exist in our root directory so just take a look okay and what we're then doing is upon success we are creating a function with data and then this data is then going inside of our content area which is our div let's go ahead and refresh the page when I click load you'll see nothing happens this is because the request was not successful and therefore we didn't load any data so let's now go ahead and create this page I HTML file let's save that inside our root directory as page HTML and we'll go ahead and put some strong tags in and loaded okay okay back to our browser let's refresh the page let's click load and you'll see that we've successfully loaded in the contents of this HTML file so obviously this is extremely basic and we're not passing any variables just yet we're going to look at that in the next part of the tutorial we're also going to look at testing whether we have an error and then we're also going to be looking at what we do if there is an error and how we can display this to the user so similar to post but this Ajax HTTP request it's a synchronous HTTP request is probably a lot better to use you have a vast majority of parameters that you can use with regards to this functionality as opposed to the get and post HTTP requests so this is a lot better way to do it if you go over to the jQuery documentation you can read up about this this functionality and performing this request and how many parameters you can actually supply to it and how many different things you can do with it so in the next part of the tutorial we're going to look at sending some data to a PHP file and then returning the result
