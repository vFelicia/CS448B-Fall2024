With timestamps:

00:00 - hello this is Alex from PHP academy'
00:02 - dorg and this is another video tutorial
00:04 - for the new Boston now in this tutorial
00:07 - I'm going to be talking about
00:08 - object-oriented programming in PHP and
00:12 - specifically constructors now we've
00:14 - already looked at we've already looked
00:17 - at the basics of classes method
00:19 - properties extending extending classes
00:23 - and also using constants so these
00:27 - constructors that I talked about now are
00:30 - is basically a method inside of your
00:35 - class that will automatically run when
00:38 - you initiate a new instance of your
00:42 - class so let's go ahead and create an
00:44 - example so I'm going to create a class
00:47 - called example and inside here I'm not
00:51 - going to have any properties I'm just
00:53 - going to have a method and this method
00:55 - is going to be sorry public function say
01:01 - something ok and inside of here we're
01:04 - going to echo something so you already
01:07 - know that if we were to come down here
01:10 - and create a new instance of our class
01:12 - by using new example like that about the
01:15 - ethicist so we've created our class
01:17 - example we've created a method called
01:19 - say something which says something
01:21 - literally we've created a new instance
01:24 - of our of our class and we refresh
01:27 - nothing's actually going to happen
01:29 - because what we haven't done is we
01:31 - haven't said example say something like
01:35 - that so let's refresh and see and it
01:38 - says oh no ok say something ok yes sorry
01:43 - I haven't included the greater than sign
01:46 - there let's refresh and it says
01:48 - something now what happens for one or
01:51 - more reason if you want this method or
01:54 - some predefined you know a predefined
01:59 - block of code to run as soon as you
02:02 - initiate or create a new instance of
02:05 - your class so at the moment when we just
02:08 - create a new instance of the class
02:09 - nothing happens now we use something
02:11 - called the
02:12 - strucked now construct works the same
02:16 - way as if you were declaring a method
02:17 - although you write it like this so we've
02:20 - got public function then we have two
02:22 - underscores so you've got two
02:24 - underscores there and then just
02:25 - construct see that's turned blue my text
02:28 - editor has turned that blue and then we
02:30 - just put two parentheses on and we put a
02:34 - block in there as well
02:35 - now the construct can take arguments so
02:37 - you can take arguments through your
02:41 - example like this so I'll demonstrate
02:43 - that in just a moment so let's go now
02:46 - and we want to say this say something so
02:53 - what's going to happen now is as soon as
02:55 - our our class's initiated or or create a
02:59 - new instance of it here we're going to
03:01 - run whatever is inside this construct so
03:04 - what we're going to do is we're going to
03:05 - be calling the method say something so
03:08 - now that we've just created a new
03:10 - instance of this let's go and refresh
03:12 - the page and you can see that we get
03:14 - something so just by adding this
03:16 - constructor in here which is called a
03:19 - constructor we are you know so we are
03:25 - running or calling this method if you
03:27 - like so what happens if we want to take
03:30 - in parameters when we create a new class
03:34 - for whatever reason we can specify them
03:36 - here so I'm going to write text or in
03:38 - fact I'm going to call it something so
03:41 - in here this say something I'm now going
03:43 - to say say something and I'm going to
03:46 - say something and then here I'm going to
03:50 - take a value something and I'm going to
03:53 - echo out something so now you can see
03:58 - when we refresh we've got a a missing
04:02 - argument error because we haven't
04:04 - defined anything in here if I was
04:06 - defined say some text here and I refresh
04:12 - you can see how we've passed by creating
04:16 - our new and new instance of our object
04:19 - or our class we've passed in this
04:21 - variable here in our constructor because
04:24 - remember
04:25 - is run as soon as our program or our
04:28 - class is initiated we've passed that to
04:31 - our method say something now we've
04:34 - picked this at what's been passed up
04:37 - twice now back into say something and
04:39 - we've echoed out so this is a slightly
04:43 - delving into why it may be useful when
04:45 - you initiate a new a new part of your or
04:50 - a new instance of your class you can use
04:52 - this constructor method to perform a
04:54 - block of code that you want it to and
04:57 - remember you can take in arguments as
04:59 - well

Cleaned transcript:

hello this is Alex from PHP academy' dorg and this is another video tutorial for the new Boston now in this tutorial I'm going to be talking about objectoriented programming in PHP and specifically constructors now we've already looked at we've already looked at the basics of classes method properties extending extending classes and also using constants so these constructors that I talked about now are is basically a method inside of your class that will automatically run when you initiate a new instance of your class so let's go ahead and create an example so I'm going to create a class called example and inside here I'm not going to have any properties I'm just going to have a method and this method is going to be sorry public function say something ok and inside of here we're going to echo something so you already know that if we were to come down here and create a new instance of our class by using new example like that about the ethicist so we've created our class example we've created a method called say something which says something literally we've created a new instance of our of our class and we refresh nothing's actually going to happen because what we haven't done is we haven't said example say something like that so let's refresh and see and it says oh no ok say something ok yes sorry I haven't included the greater than sign there let's refresh and it says something now what happens for one or more reason if you want this method or some predefined you know a predefined block of code to run as soon as you initiate or create a new instance of your class so at the moment when we just create a new instance of the class nothing happens now we use something called the strucked now construct works the same way as if you were declaring a method although you write it like this so we've got public function then we have two underscores so you've got two underscores there and then just construct see that's turned blue my text editor has turned that blue and then we just put two parentheses on and we put a block in there as well now the construct can take arguments so you can take arguments through your example like this so I'll demonstrate that in just a moment so let's go now and we want to say this say something so what's going to happen now is as soon as our our class's initiated or or create a new instance of it here we're going to run whatever is inside this construct so what we're going to do is we're going to be calling the method say something so now that we've just created a new instance of this let's go and refresh the page and you can see that we get something so just by adding this constructor in here which is called a constructor we are you know so we are running or calling this method if you like so what happens if we want to take in parameters when we create a new class for whatever reason we can specify them here so I'm going to write text or in fact I'm going to call it something so in here this say something I'm now going to say say something and I'm going to say something and then here I'm going to take a value something and I'm going to echo out something so now you can see when we refresh we've got a a missing argument error because we haven't defined anything in here if I was defined say some text here and I refresh you can see how we've passed by creating our new and new instance of our object or our class we've passed in this variable here in our constructor because remember is run as soon as our program or our class is initiated we've passed that to our method say something now we've picked this at what's been passed up twice now back into say something and we've echoed out so this is a slightly delving into why it may be useful when you initiate a new a new part of your or a new instance of your class you can use this constructor method to perform a block of code that you want it to and remember you can take in arguments as well
