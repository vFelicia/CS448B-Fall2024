With timestamps:

00:00 - hi this is Alex from PHP academy' and in
00:02 - this video for the new Boston we're
00:04 - going to be looking at continued string
00:07 - functions however what we're going to be
00:09 - doing is we're going to be creating a
00:10 - small program that allows you use it
00:12 - input and then we're going to sense out
00:14 - certain words that we don't want to be
00:16 - included so it's quite a fun program to
00:18 - make and you get to specify your own
00:19 - words that you want to be excluded and
00:23 - we obviously are taking user input so
00:25 - it's interactive and it helps you learn
00:28 - to that degree so the first thing I'm
00:30 - going to do is create a form with an
00:32 - action and a method now we've already
00:35 - discussed this I'm going to create the
00:36 - methodist post because we're going to be
00:37 - sending a fairly large text area size
00:41 - worth of data and the action is just
00:43 - going to come straight back to index dot
00:45 - PHP but obviously if you're creating a
00:47 - program that let's say post a comment
00:49 - you're going to want this value to go
00:51 - maybe to another page too to process but
00:54 - entirely up to you where your form is
00:56 - being processed so now what we need to
01:00 - do is we need to type or create a text
01:03 - area so we're going to start and in the
01:07 - text area and we're going to give this a
01:09 - name of user underscore input and I'm
01:14 - going to give it a rose and the Cowles
01:16 - value and this is rows and columns so
01:18 - rows about seven and we'll say columns
01:21 - about 30 let's make this a six actually
01:25 - so let's preview what we've got so far
01:27 - in our browser let's just go to there
01:31 - okay so we've got a small text area
01:33 - we're going to also create a submit
01:35 - button so let's break down a couple of
01:37 - times and then we an input type of
01:40 - submit and then we can give it a value
01:42 - of submit to ensure this value is
01:45 - displayed on the button so let's refresh
01:48 - and see what we've got there
01:50 - okay so we've got our submit button
01:52 - we've got our we've got our text area so
01:55 - what I want to do is I'm going to create
01:56 - a horizontal line just up here and
02:00 - that's just going to separate the
02:01 - content that we display back to the user
02:03 - and this form so now what I'm going to
02:06 - do is inside PHP we need to do first of
02:08 - all a few checks to ensure that this
02:10 - user input value has been submitted and
02:12 - that
02:13 - contain some text so we're going to
02:15 - create an if statement and then the
02:16 - block here is what we're going to run if
02:20 - inside here this block is what we're
02:22 - going to run if this is successful so
02:24 - we're going to say if is set and then
02:27 - inside this function we're going to say
02:28 - post user input and we're also going to
02:34 - check using a logical operator and we're
02:36 - also going to check if it's not empty
02:38 - so I'm using an exclamation marks
02:41 - another logical operator to say it is
02:43 - not empty and this is obviously a
02:45 - function if not empty dollar underscore
02:49 - post user input so we've already
02:54 - addressed this in other tutorials but
02:55 - basically what we're looking for is the
02:59 - user input to be there and to have some
03:02 - content inside of it
03:03 - so let's just echo this to test if it
03:05 - works so let's get back on here so if we
03:11 - click it without entering anything
03:12 - nothing happens if we type some text
03:15 - inside of it and click Submit it works
03:17 - so now we are all set to process this
03:20 - data that has been typed in this text
03:23 - area okay so actually what I'm going to
03:26 - do beforehand is just embed in here some
03:30 - data and that's already been submitted
03:32 - so the user can look at what they've
03:34 - written look at what they've submitted
03:36 - this is just purely for learning
03:38 - purposes so you can get an idea of this
03:40 - so let's first of all create a variable
03:43 - up here called user input that's going
03:48 - to be equal to dollar underscore post
03:50 - user underscore input so we're just
03:53 - taking the variables from our form of
03:56 - the data from our form so we can echo
03:58 - user input and now what's going to
04:01 - happen is when we do submit data in here
04:05 - when we submit it it's going to work out
04:08 - what's happened there so look
04:16 - try and submit that no
04:22 - okay so obviously we're echoing out this
04:25 - inside but we're not echoing out here
04:27 - that's why it's not being displayed so
04:29 - as it stands at the moment as we let's
04:32 - come back and refresh this as we type
04:36 - text into here we submit it's displayed
04:39 - here and kept in here that's just a
04:41 - little tweak to ensure that we keep
04:43 - everything consistent so now what we
04:46 - need to do we'll get rid of this is we
04:50 - need to create two arrays which I'm
04:52 - going to create up here and the first
04:54 - one is going to be called find and next
04:59 - one's going to be cool to replace so the
05:03 - find array is going to be words that we
05:05 - want to find and I'm just going to keep
05:06 - these as names for now so I'm going to
05:08 - have three names and that's going to be
05:10 - Alex Billy down ok so the array to
05:16 - replace is the values we want to replace
05:18 - so we have the same corresponding values
05:20 - so Alex will correspond to this one here
05:22 - and I'm just going to keep that as Alex
05:24 - with the two stars in the middle Billy
05:26 - with the 3 stars just in the middle
05:28 - there asterixis if you like and Dale
05:30 - with exactly the same thing

Cleaned transcript:

hi this is Alex from PHP academy' and in this video for the new Boston we're going to be looking at continued string functions however what we're going to be doing is we're going to be creating a small program that allows you use it input and then we're going to sense out certain words that we don't want to be included so it's quite a fun program to make and you get to specify your own words that you want to be excluded and we obviously are taking user input so it's interactive and it helps you learn to that degree so the first thing I'm going to do is create a form with an action and a method now we've already discussed this I'm going to create the methodist post because we're going to be sending a fairly large text area size worth of data and the action is just going to come straight back to index dot PHP but obviously if you're creating a program that let's say post a comment you're going to want this value to go maybe to another page too to process but entirely up to you where your form is being processed so now what we need to do is we need to type or create a text area so we're going to start and in the text area and we're going to give this a name of user underscore input and I'm going to give it a rose and the Cowles value and this is rows and columns so rows about seven and we'll say columns about 30 let's make this a six actually so let's preview what we've got so far in our browser let's just go to there okay so we've got a small text area we're going to also create a submit button so let's break down a couple of times and then we an input type of submit and then we can give it a value of submit to ensure this value is displayed on the button so let's refresh and see what we've got there okay so we've got our submit button we've got our we've got our text area so what I want to do is I'm going to create a horizontal line just up here and that's just going to separate the content that we display back to the user and this form so now what I'm going to do is inside PHP we need to do first of all a few checks to ensure that this user input value has been submitted and that contain some text so we're going to create an if statement and then the block here is what we're going to run if inside here this block is what we're going to run if this is successful so we're going to say if is set and then inside this function we're going to say post user input and we're also going to check using a logical operator and we're also going to check if it's not empty so I'm using an exclamation marks another logical operator to say it is not empty and this is obviously a function if not empty dollar underscore post user input so we've already addressed this in other tutorials but basically what we're looking for is the user input to be there and to have some content inside of it so let's just echo this to test if it works so let's get back on here so if we click it without entering anything nothing happens if we type some text inside of it and click Submit it works so now we are all set to process this data that has been typed in this text area okay so actually what I'm going to do beforehand is just embed in here some data and that's already been submitted so the user can look at what they've written look at what they've submitted this is just purely for learning purposes so you can get an idea of this so let's first of all create a variable up here called user input that's going to be equal to dollar underscore post user underscore input so we're just taking the variables from our form of the data from our form so we can echo user input and now what's going to happen is when we do submit data in here when we submit it it's going to work out what's happened there so look try and submit that no okay so obviously we're echoing out this inside but we're not echoing out here that's why it's not being displayed so as it stands at the moment as we let's come back and refresh this as we type text into here we submit it's displayed here and kept in here that's just a little tweak to ensure that we keep everything consistent so now what we need to do we'll get rid of this is we need to create two arrays which I'm going to create up here and the first one is going to be called find and next one's going to be cool to replace so the find array is going to be words that we want to find and I'm just going to keep these as names for now so I'm going to have three names and that's going to be Alex Billy down ok so the array to replace is the values we want to replace so we have the same corresponding values so Alex will correspond to this one here and I'm just going to keep that as Alex with the two stars in the middle Billy with the 3 stars just in the middle there asterixis if you like and Dale with exactly the same thing
