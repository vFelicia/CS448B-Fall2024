With timestamps:

00:00 - alrighty everyone welcome back to the
00:02 - last tutorial that I'm going to be
00:04 - making for this beautiful application
00:06 - and in this one we're going to be adding
00:08 - a custom font however before you started
00:11 - just want to mention one tiny update
00:13 - that I made from the last tutorial and
00:15 - that was adding this button right here
00:17 - so I realized we didn't have a way to
00:19 - clear this history so all this button
00:22 - does whenever you click it it just
00:24 - resets everything easy peasy and again I
00:27 - didn't want to record it because yeah
00:30 - not really learning any new Concepts the
00:32 - only thing it does is just reset your
00:34 - runs to the initial state which is just
00:35 - an empty dict
00:37 - so on that note let me go ahead and
00:39 - close this and now let's go ahead and
00:41 - figure out how to add a custom font
00:44 - so in order to add a custom font the
00:46 - first thing that we need is a font so
00:48 - I'm going to go to fonts.google.com and
00:51 - I already know the font that I want it's
00:53 - the Ubuntu font right here so I'm going
00:56 - to go ahead and click in this and then
00:59 - what I'll do is down here I'm just going
01:02 - to select all of the font files that I
01:05 - want so I'm going to be using this light
01:07 - one basically all of these aside from
01:09 - the italics because we don't use italics
01:11 - anywhere in the app
01:13 - so I'll select this regular to
01:15 - and let's see
01:18 - medium and bold
01:20 - all right so now if I can view what I
01:23 - selected light regular medium and bold
01:25 - I'm just going to go ahead and click
01:27 - download all
01:30 - and that is going to give me this ZIP
01:31 - file which I can just extract right here
01:34 - because as you can see this directory
01:38 - with everything in here actually I think
01:40 - I clicked uh the wrong button there but
01:43 - either way I can just delete the italics
01:45 - right here because we don't need them
01:48 - all right so now what I'm going to do is
01:51 - just take this entire file and I'll show
01:54 - you where I'm going to stick it
01:57 - so in speed test Styles I'm going to
02:00 - create a new directory called fonts
02:03 - and then I'm just going to take this and
02:05 - drag it right here
02:08 - all right so now you see in Styles fonts
02:10 - let me go ahead and right click that
02:13 - you just add to get
02:16 - all right
02:17 - so now Styles fonts Ubuntu we have all
02:21 - our fonts as well as the license right
02:22 - here and as the next steps what I'm
02:25 - going to do is make another file right
02:27 - under Styles and this is just gonna be
02:30 - fonts.css so this is where we're going
02:33 - to be starting to Define our custom font
02:35 - and to do that we can use the font face
02:38 - rule in CSS
02:40 - and the first thing that you write is
02:43 - the font family
02:44 - so the name of this is of course Ubuntu
02:48 - and now remember let me pop back open
02:51 - that browser so each of these fonts I
02:54 - have four files
02:56 - this light or excuse me bold light
02:58 - medium and irregular and each of those
03:01 - files
03:03 - correspond to a certain font weight so
03:06 - light is 300 regular is 400 so on and so
03:09 - forth so what I'm going to do is
03:10 - basically have four of these font face
03:13 - rules and I just need to make that
03:15 - explicit correlation so font weight of
03:19 - 300 what file does this relate to and to
03:22 - Define that you write source and for
03:24 - this URL
03:27 - you pretty much just write the path to
03:29 - what was 300 this light one right here
03:32 - so from that it's fonts
03:36 - and that is in Ubuntu and let me just
03:38 - make sure I get this file type so
03:43 - and that is related to the Ubuntu Lite
03:46 - font file right here
03:48 - so now I can probably just copy this
03:51 - a couple times
03:54 - and we had uh it was 400 let me just
03:58 - make sure I got these ready so 400 500
04:01 - and 700 regular medium and bold
04:04 - so 400
04:07 - 500 and 700
04:12 - regular
04:16 - medium and bold
04:20 - all right so again this file is just
04:22 - defining custom font for us and to
04:24 - ensure that our app is able to use these
04:27 - what we can do is in containers and in
04:29 - this top level container
04:31 - speed test one where our app window is
04:33 - right under the Styles I'm just going to
04:35 - paste this import right here which is
04:38 - just importing this file so again this
04:40 - doesn't actually apply the Styles
04:42 - themselves to the app but then what we
04:45 - can do is we can have these fonts
04:47 - basically able to be applied in any of
04:49 - the components that we want so that
04:51 - being said what we could do right here
04:53 - is we could go into the Styles file and
04:56 - start writing the let me see if I have
04:59 - well basically something like this font
05:01 - family and then we could write Ubuntu
05:03 - just like that however the reason that I
05:06 - don't want to do this is because I'm
05:09 - going to go ahead and create a font
05:11 - pretty much the equivalent of like a
05:13 - font style guide and that's going to
05:15 - make sure that all of our fonts are
05:16 - standardized by using object that only
05:18 - contains the properties that are allowed
05:20 - and I know that's kind of confusing but
05:22 - I'll show you what I'm talking about
05:23 - right now so in this stylus fonts I'm
05:27 - going to go ahead and just create a new
05:28 - typescript file and I'm going to say
05:30 - index.ts now in here I want to disable
05:34 - one of the eslint rules that we have for
05:37 - sorting keys and you'll see why in just
05:39 - a second so this const is going to be
05:42 - named fonts and this is going to be
05:45 - equal to an object with all the valid
05:48 - font properties that we allow including
05:49 - the font family and font weight so
05:52 - before I do anything else let me just go
05:54 - ahead and make that my default export
05:56 - and check it out
05:57 - so for this speed test apps font family
06:03 - what I'm going to do is I'm going to say
06:05 - that there's one font family that we're
06:07 - going to be using and we'll just name it
06:09 - default and this is equal to Ubuntu
06:13 - a u b u n t u and just for a fallback
06:17 - I'll just say songs
06:19 - serif
06:21 - alright so now in our component Styles
06:24 - file instead of typing this out
06:26 - explicitly every time what we'll do is
06:28 - we'll say
06:30 - fonts.family.default and it'll give it
06:32 - the same behavior but this way whenever
06:35 - we do this if we ever go and update this
06:37 - default font family for this app we
06:39 - don't have to like update it in in a
06:41 - million files we just have to update it
06:43 - in this one location and it's
06:45 - automatically going to be applied
06:47 - so aside from the font family I also
06:49 - want to standardize my weights
06:51 - and this is just to ensure that we're
06:53 - only using those proper weights because
06:56 - we only have the weights available of
06:58 - 300 400 500 and 700
07:01 - so for this let me see what those names
07:03 - were I like to start with the most bold
07:06 - and kind of work my way down so bold
07:08 - medium regular light
07:10 - so bold and this is equal
07:13 - wow got a million people texting let me
07:16 - shut this off
07:19 - so bold
07:21 - medium regular light
07:24 - the regular one is 500
07:28 - the medium this one was 400
07:33 - and then the light one
07:35 - this one was 300.
07:38 - and again this is why I chose to disable
07:41 - the sort keys right here because I like
07:44 - to have these sorted not alphabetically
07:46 - which this would enforce but instead
07:49 - just by the weight value so again
07:51 - everywhere in our App instead of typing
07:53 - these values explicitly we're going to
07:55 - be using one of these it's just going to
07:56 - keep everything a little bit more clean
07:58 - however before that what I want to do is
08:00 - hop into this Styles index
08:03 - and I just wanna
08:05 - kind of like our standard process
08:08 - I'll just say fonts
08:12 - and I believe it was a default
08:17 - so now we can just import these from
08:19 - this Styles file and just makes this
08:21 - import a little bit cleaner so now with
08:23 - all this what we can do is probably
08:26 - don't need this anymore all right so
08:28 - speed test containers let's first go
08:30 - ahead and install our top level
08:31 - container so in addition to the scroll
08:34 - Style
08:35 - also want to be importing those fonts
08:38 - and this is font
08:41 - family and this is going to be equal to
08:43 - fonts
08:45 - Dot family dot default
08:50 - all right now since this font family is
08:54 - being applied to this top level
08:55 - container basically the wrapper for
08:58 - everything else then what should happen
09:01 - and let me go ahead and probably have to
09:02 - restart my app oh don't even have to
09:04 - restart it that's pretty cool so as you
09:07 - can see this font did indeed change I
09:09 - don't know if you can tell but this is
09:10 - now Ubuntu font actually let me go ahead
09:12 - and show you
09:14 - that's where he at
09:17 - yep right here we are now getting the
09:19 - Ubuntu fought family so it is being
09:22 - applied to most all of these components
09:24 - but I want to show you a couple unique
09:26 - things so first of all whenever we have
09:28 - a button even though this button is
09:31 - indeed inside the container of course
09:33 - then we don't have that styling and
09:37 - that's a unique thing and that's because
09:39 - this user agent style sheet which is
09:41 - just like the default electron styling
09:43 - for some reason on buttons it resets it
09:46 - and then another thing that I want to
09:48 - point out is that whenever we have a
09:50 - modal then we don't have the styling
09:53 - applied to these modals either now the
09:56 - reason that it doesn't get applied to
09:57 - modals is because remember back in the
10:01 - modal tutorial whenever we created that
10:03 - modal and I'll show you right now
10:04 - actually
10:06 - so in this components modal
10:09 - what we were doing is we were actually
10:11 - rendering it outside that entire Dom
10:13 - hierarchy and we are rendering it in
10:16 - modal root so even though we wrote the
10:18 - component and it kind of looks like in
10:20 - our source code it appears inside this
10:23 - structure right here it's actually kind
10:26 - of rendering like outside here in a way
10:28 - so that said we also need
10:32 - clean these up to explicitly apply these
10:35 - font styles to those locations as well
10:38 - so first of all for those buttons
10:40 - those were in containers top
10:44 - Styles it is this button right here
10:49 - and copy my import apps
10:53 - we don't need the scroll style what we
10:55 - are looking for is just this font family
10:57 - applied to that button
11:01 - right here
11:04 - right here is where I want it
11:05 - and then of course in our modal
11:10 - same exact thing
11:14 - so let me go ahead and copy this F speed
11:16 - test styles
11:19 - did I even make this let's pick this
11:21 - okay and then copy this fan font family
11:25 - for the modal
11:29 - modal
11:30 - s on family right here and now we may
11:34 - have to restart the app oh I guess not
11:36 - so now we can see that our modal is now
11:38 - styled it as well as our button looking
11:41 - good so now that we have the font family
11:43 - applied the only other thing that we
11:45 - need to do now is we actually close all
11:49 - these
11:50 - so in our speed test what we're going to
11:52 - do is we're just going to search for
11:54 - font weight
11:55 - and then we're going to replace these
11:58 - with our standardized font weight and
12:00 - I'll do one and then I'll pause the
12:01 - video and do the rest of them
12:03 - so all right make sure we got that
12:04 - imported
12:06 - and I'll just make sure we got the right
12:08 - one
12:09 - all right so instead of explicitly
12:12 - saying for example right here 500 we are
12:16 - going to do fonts dot weights dot
12:19 - regular
12:23 - so font style weight start regular and
12:27 - basically we can search for this just
12:29 - fontway and replace each of these so
12:32 - pause the video real quick and uh do it
12:34 - since
12:35 - probably be pretty boring to watch me do
12:37 - this
12:38 - and now you can see that each of those
12:41 - explicit fonts weights were replaced by
12:44 - one of these valid properties either
12:46 - bold light regular or medium so I'm now
12:49 - like and go ahead and close that and
12:52 - check it out
12:54 - all right looking good now let me just
12:57 - make sure I didn't break anything and
12:59 - all right pretty sweet and this exact
13:02 - pattern is well not the exact same thing
13:05 - but uh that same kind of styling system
13:08 - is how I like to style this color
13:11 - theming as well so instead of typing out
13:15 - all those colors
13:17 - see if we have it anywhere like uh right
13:19 - here what I like to do is kind of Follow
13:21 - That same pattern and this is what I did
13:23 - for the chat application you see we have
13:26 - a palette some custom background colors
13:28 - but really uh instead of like explicitly
13:31 - typing these we do palette dot blue I
13:34 - don't know why I said we it was uh I
13:36 - think I was the only one making this app
13:38 - so far but uh either way uh you can kind
13:41 - of see what we're doing from the color
13:42 - theme
13:43 - again I'll probably do this on my own I
13:45 - want to swap out all these colors in the
13:47 - speed test app with a more standardized
13:50 - color theme but I don't want to waste
13:53 - all your time if I'm not teaching
13:54 - anything new kind of feel bad when I do
13:56 - that but on that note yeah we now have
14:00 - two completed successful apps well some
14:03 - issues right here with the chat app with
14:05 - a scroll but I mean tnbos is looking I
14:10 - gotta be honest it it's going a lot
14:11 - better than I expected even though you
14:13 - know I might be the only one to ever use
14:16 - these apps I'm still having fun building
14:18 - that I think this is a cool little
14:19 - architecture so again like I said a
14:21 - couple cleanup items still for the speed
14:23 - test app but I'll probably end the
14:25 - tutorial series here if anyone else has
14:28 - any ideas for an application I could
14:30 - build let me know I'll have to build it
14:32 - looking for new ideas but otherwise
14:34 - thank you all for watching and I'll see
14:37 - you next time

Cleaned transcript:

alrighty everyone welcome back to the last tutorial that I'm going to be making for this beautiful application and in this one we're going to be adding a custom font however before you started just want to mention one tiny update that I made from the last tutorial and that was adding this button right here so I realized we didn't have a way to clear this history so all this button does whenever you click it it just resets everything easy peasy and again I didn't want to record it because yeah not really learning any new Concepts the only thing it does is just reset your runs to the initial state which is just an empty dict so on that note let me go ahead and close this and now let's go ahead and figure out how to add a custom font so in order to add a custom font the first thing that we need is a font so I'm going to go to fonts.google.com and I already know the font that I want it's the Ubuntu font right here so I'm going to go ahead and click in this and then what I'll do is down here I'm just going to select all of the font files that I want so I'm going to be using this light one basically all of these aside from the italics because we don't use italics anywhere in the app so I'll select this regular to and let's see medium and bold all right so now if I can view what I selected light regular medium and bold I'm just going to go ahead and click download all and that is going to give me this ZIP file which I can just extract right here because as you can see this directory with everything in here actually I think I clicked uh the wrong button there but either way I can just delete the italics right here because we don't need them all right so now what I'm going to do is just take this entire file and I'll show you where I'm going to stick it so in speed test Styles I'm going to create a new directory called fonts and then I'm just going to take this and drag it right here all right so now you see in Styles fonts let me go ahead and right click that you just add to get all right so now Styles fonts Ubuntu we have all our fonts as well as the license right here and as the next steps what I'm going to do is make another file right under Styles and this is just gonna be fonts.css so this is where we're going to be starting to Define our custom font and to do that we can use the font face rule in CSS and the first thing that you write is the font family so the name of this is of course Ubuntu and now remember let me pop back open that browser so each of these fonts I have four files this light or excuse me bold light medium and irregular and each of those files correspond to a certain font weight so light is 300 regular is 400 so on and so forth so what I'm going to do is basically have four of these font face rules and I just need to make that explicit correlation so font weight of 300 what file does this relate to and to Define that you write source and for this URL you pretty much just write the path to what was 300 this light one right here so from that it's fonts and that is in Ubuntu and let me just make sure I get this file type so and that is related to the Ubuntu Lite font file right here so now I can probably just copy this a couple times and we had uh it was 400 let me just make sure I got these ready so 400 500 and 700 regular medium and bold so 400 500 and 700 regular medium and bold all right so again this file is just defining custom font for us and to ensure that our app is able to use these what we can do is in containers and in this top level container speed test one where our app window is right under the Styles I'm just going to paste this import right here which is just importing this file so again this doesn't actually apply the Styles themselves to the app but then what we can do is we can have these fonts basically able to be applied in any of the components that we want so that being said what we could do right here is we could go into the Styles file and start writing the let me see if I have well basically something like this font family and then we could write Ubuntu just like that however the reason that I don't want to do this is because I'm going to go ahead and create a font pretty much the equivalent of like a font style guide and that's going to make sure that all of our fonts are standardized by using object that only contains the properties that are allowed and I know that's kind of confusing but I'll show you what I'm talking about right now so in this stylus fonts I'm going to go ahead and just create a new typescript file and I'm going to say index.ts now in here I want to disable one of the eslint rules that we have for sorting keys and you'll see why in just a second so this const is going to be named fonts and this is going to be equal to an object with all the valid font properties that we allow including the font family and font weight so before I do anything else let me just go ahead and make that my default export and check it out so for this speed test apps font family what I'm going to do is I'm going to say that there's one font family that we're going to be using and we'll just name it default and this is equal to Ubuntu a u b u n t u and just for a fallback I'll just say songs serif alright so now in our component Styles file instead of typing this out explicitly every time what we'll do is we'll say fonts.family.default and it'll give it the same behavior but this way whenever we do this if we ever go and update this default font family for this app we don't have to like update it in in a million files we just have to update it in this one location and it's automatically going to be applied so aside from the font family I also want to standardize my weights and this is just to ensure that we're only using those proper weights because we only have the weights available of 300 400 500 and 700 so for this let me see what those names were I like to start with the most bold and kind of work my way down so bold medium regular light so bold and this is equal wow got a million people texting let me shut this off so bold medium regular light the regular one is 500 the medium this one was 400 and then the light one this one was 300. and again this is why I chose to disable the sort keys right here because I like to have these sorted not alphabetically which this would enforce but instead just by the weight value so again everywhere in our App instead of typing these values explicitly we're going to be using one of these it's just going to keep everything a little bit more clean however before that what I want to do is hop into this Styles index and I just wanna kind of like our standard process I'll just say fonts and I believe it was a default so now we can just import these from this Styles file and just makes this import a little bit cleaner so now with all this what we can do is probably don't need this anymore all right so speed test containers let's first go ahead and install our top level container so in addition to the scroll Style also want to be importing those fonts and this is font family and this is going to be equal to fonts Dot family dot default all right now since this font family is being applied to this top level container basically the wrapper for everything else then what should happen and let me go ahead and probably have to restart my app oh don't even have to restart it that's pretty cool so as you can see this font did indeed change I don't know if you can tell but this is now Ubuntu font actually let me go ahead and show you that's where he at yep right here we are now getting the Ubuntu fought family so it is being applied to most all of these components but I want to show you a couple unique things so first of all whenever we have a button even though this button is indeed inside the container of course then we don't have that styling and that's a unique thing and that's because this user agent style sheet which is just like the default electron styling for some reason on buttons it resets it and then another thing that I want to point out is that whenever we have a modal then we don't have the styling applied to these modals either now the reason that it doesn't get applied to modals is because remember back in the modal tutorial whenever we created that modal and I'll show you right now actually so in this components modal what we were doing is we were actually rendering it outside that entire Dom hierarchy and we are rendering it in modal root so even though we wrote the component and it kind of looks like in our source code it appears inside this structure right here it's actually kind of rendering like outside here in a way so that said we also need clean these up to explicitly apply these font styles to those locations as well so first of all for those buttons those were in containers top Styles it is this button right here and copy my import apps we don't need the scroll style what we are looking for is just this font family applied to that button right here right here is where I want it and then of course in our modal same exact thing so let me go ahead and copy this F speed test styles did I even make this let's pick this okay and then copy this fan font family for the modal modal s on family right here and now we may have to restart the app oh I guess not so now we can see that our modal is now styled it as well as our button looking good so now that we have the font family applied the only other thing that we need to do now is we actually close all these so in our speed test what we're going to do is we're just going to search for font weight and then we're going to replace these with our standardized font weight and I'll do one and then I'll pause the video and do the rest of them so all right make sure we got that imported and I'll just make sure we got the right one all right so instead of explicitly saying for example right here 500 we are going to do fonts dot weights dot regular so font style weight start regular and basically we can search for this just fontway and replace each of these so pause the video real quick and uh do it since probably be pretty boring to watch me do this and now you can see that each of those explicit fonts weights were replaced by one of these valid properties either bold light regular or medium so I'm now like and go ahead and close that and check it out all right looking good now let me just make sure I didn't break anything and all right pretty sweet and this exact pattern is well not the exact same thing but uh that same kind of styling system is how I like to style this color theming as well so instead of typing out all those colors see if we have it anywhere like uh right here what I like to do is kind of Follow That same pattern and this is what I did for the chat application you see we have a palette some custom background colors but really uh instead of like explicitly typing these we do palette dot blue I don't know why I said we it was uh I think I was the only one making this app so far but uh either way uh you can kind of see what we're doing from the color theme again I'll probably do this on my own I want to swap out all these colors in the speed test app with a more standardized color theme but I don't want to waste all your time if I'm not teaching anything new kind of feel bad when I do that but on that note yeah we now have two completed successful apps well some issues right here with the chat app with a scroll but I mean tnbos is looking I gotta be honest it it's going a lot better than I expected even though you know I might be the only one to ever use these apps I'm still having fun building that I think this is a cool little architecture so again like I said a couple cleanup items still for the speed test app but I'll probably end the tutorial series here if anyone else has any ideas for an application I could build let me know I'll have to build it looking for new ideas but otherwise thank you all for watching and I'll see you next time
