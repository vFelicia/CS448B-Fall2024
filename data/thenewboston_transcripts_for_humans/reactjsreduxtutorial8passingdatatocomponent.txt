With timestamps:

00:00 - alright guys so before I actually
00:02 - display my list of users right here what
00:04 - I wanted to do is reiterate exactly how
00:07 - we got here
00:08 - and how we are taking this list and
00:11 - using it in our component because this
00:14 - is actually the hardest part of redux so
00:17 - if you guys understand this then you
00:20 - essentially figured out Redux so it
00:24 - really isn't that hard so what we did is
00:26 - we made a reducer and a reducer is just
00:29 - a little piece of data that we want to
00:32 - save in our application now every
00:34 - reducer that we create every little
00:36 - piece of data we need to combine it into
00:39 - one big object and we just name that
00:43 - object all reducers so then we take all
00:46 - of those different pieces and we make a
00:48 - big master object called our store so
00:52 - again all the store is is a bunch of
00:55 - data any data that you want to store in
00:58 - your application we're just going to
01:00 - save it an object called store that's it
01:03 - and right here what this provider did is
01:06 - it took all of that data and since we
01:10 - wrapped up with it right here pretty
01:13 - much every single component has access
01:15 - to this data right now so that's it now
01:19 - you may be asking are right so why don't
01:22 - you just pass it all in why do you need
01:24 - this right here well the reason we have
01:26 - to map state the props is because we
01:28 - usually don't want to pass in every
01:30 - single bit of data I mean right now we
01:32 - only have this list of users but later
01:35 - on we're going to have movies music
01:37 - forum posts blogs you know a whole bunch
01:40 - of stuff
01:41 - so instead of just taking all your data
01:43 - and passing it into every component what
01:45 - we're going to say is actually just take
01:47 - the users and pass into the users list
01:50 - that's really all what cares about it
01:52 - doesn't care about your movies at all so
01:54 - that's all does connect your main state
01:58 - or part of your store and pass in to a
02:02 - component as its properties easy-peasy
02:07 - so now what we can do is instead of
02:09 - these list items we can actually display
02:12 - these
02:13 - users and let me get rid of this clean
02:15 - it up a little bit so what I'm going to
02:17 - do is I'll say um
02:19 - this creates list items looking good so
02:28 - again all this function is going to do
02:29 - is instead of trying to write all our
02:32 - functionality right here it's just going
02:35 - to go through get each item in the list
02:38 - which is a user and turn it into a list
02:41 - item and I'm not going to print out
02:42 - everything I'll just print out like
02:44 - their first name and last name something
02:46 - that the user can click on so you need
02:49 - to return some HTML so anytime we want
02:52 - to loop through part of our state again
02:55 - remember we can access this as a
02:58 - property called users so this dot props
03:03 - dot users is equal to this list right
03:09 - here so again since we want to loop
03:12 - through it we just have to call a
03:14 - function called map so map is going to
03:17 - loop the Revue array and for each object
03:20 - in there or each user or just say
03:23 - actually let me go ahead and do this
03:25 - actually I'll use a shorthand version so
03:29 - for each object treat them as user and
03:32 - for each user what do I want to do well
03:37 - I just want to go ahead and return I'll
03:41 - list item
03:41 - so list item and I'll say user dot first
03:49 - I didn't name it first not first name
03:52 - right yep user that first user dot last
04:00 - so it's going to make a list item with
04:02 - their first name and last name now I
04:05 - don't know if you guys remember this
04:07 - from the last tutorial or the last video
04:09 - series but anytime you make a list of
04:12 - items each of these have to have a
04:15 - unique key so for the key what I also
04:20 - did is I included a user ID for each one
04:22 - now since all of these first names are
04:25 - different you can even use first names
04:27 - just anything that's different but
04:29 - basically this key in this case is equal
04:32 - to user dot ID boom roasted so now if
04:37 - this rear Enders check it out how
04:41 - beautiful is that so again what we can
04:45 - do is we can take in any piece of data
04:47 - from the entire application and we can
04:51 - pass it in to user list or any component
04:53 - that we want as a property and then with
04:56 - those properties we can pretty much do
04:59 - whatever we want with them we can
05:01 - display different bits of data we can
05:03 - add event handlers which we're going to
05:05 - be doing soon and man that is one
05:08 - beautiful piece of software right there
05:11 - mm-hmm
05:12 - now another thing I want to point out is
05:14 - remember any time we make changes to the
05:19 - store say we add a new user
05:22 - this component automatically gets
05:26 - updated we don't have to call a special
05:28 - update now function we don't have to do
05:30 - anything weird that's the awesome thing
05:32 - about reacting Redux all we have to do
05:35 - is omit in action and whenever it
05:38 - changes the store whether it's a button
05:40 - a slider it doesn't matter it
05:42 - automatically changes the view to
05:45 - reflect your data properly it is
05:47 - incredibly beautiful so yeah thank you
05:50 - guys for watching and also I don't know
05:52 - if I mention this if you guys want to
05:54 - donate to my patreon account I'm
05:55 - actually saving up for a grouchy
05:57 - sandwich so yeah thank you guys I will
05:59 - see you guys later

Cleaned transcript:

alright guys so before I actually display my list of users right here what I wanted to do is reiterate exactly how we got here and how we are taking this list and using it in our component because this is actually the hardest part of redux so if you guys understand this then you essentially figured out Redux so it really isn't that hard so what we did is we made a reducer and a reducer is just a little piece of data that we want to save in our application now every reducer that we create every little piece of data we need to combine it into one big object and we just name that object all reducers so then we take all of those different pieces and we make a big master object called our store so again all the store is is a bunch of data any data that you want to store in your application we're just going to save it an object called store that's it and right here what this provider did is it took all of that data and since we wrapped up with it right here pretty much every single component has access to this data right now so that's it now you may be asking are right so why don't you just pass it all in why do you need this right here well the reason we have to map state the props is because we usually don't want to pass in every single bit of data I mean right now we only have this list of users but later on we're going to have movies music forum posts blogs you know a whole bunch of stuff so instead of just taking all your data and passing it into every component what we're going to say is actually just take the users and pass into the users list that's really all what cares about it doesn't care about your movies at all so that's all does connect your main state or part of your store and pass in to a component as its properties easypeasy so now what we can do is instead of these list items we can actually display these users and let me get rid of this clean it up a little bit so what I'm going to do is I'll say um this creates list items looking good so again all this function is going to do is instead of trying to write all our functionality right here it's just going to go through get each item in the list which is a user and turn it into a list item and I'm not going to print out everything I'll just print out like their first name and last name something that the user can click on so you need to return some HTML so anytime we want to loop through part of our state again remember we can access this as a property called users so this dot props dot users is equal to this list right here so again since we want to loop through it we just have to call a function called map so map is going to loop the Revue array and for each object in there or each user or just say actually let me go ahead and do this actually I'll use a shorthand version so for each object treat them as user and for each user what do I want to do well I just want to go ahead and return I'll list item so list item and I'll say user dot first I didn't name it first not first name right yep user that first user dot last so it's going to make a list item with their first name and last name now I don't know if you guys remember this from the last tutorial or the last video series but anytime you make a list of items each of these have to have a unique key so for the key what I also did is I included a user ID for each one now since all of these first names are different you can even use first names just anything that's different but basically this key in this case is equal to user dot ID boom roasted so now if this rear Enders check it out how beautiful is that so again what we can do is we can take in any piece of data from the entire application and we can pass it in to user list or any component that we want as a property and then with those properties we can pretty much do whatever we want with them we can display different bits of data we can add event handlers which we're going to be doing soon and man that is one beautiful piece of software right there mmhmm now another thing I want to point out is remember any time we make changes to the store say we add a new user this component automatically gets updated we don't have to call a special update now function we don't have to do anything weird that's the awesome thing about reacting Redux all we have to do is omit in action and whenever it changes the store whether it's a button a slider it doesn't matter it automatically changes the view to reflect your data properly it is incredibly beautiful so yeah thank you guys for watching and also I don't know if I mention this if you guys want to donate to my patreon account I'm actually saving up for a grouchy sandwich so yeah thank you guys I will see you guys later
