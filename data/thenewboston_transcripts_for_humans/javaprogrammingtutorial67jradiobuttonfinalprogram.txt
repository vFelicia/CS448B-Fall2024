With timestamps:

00:00 - what's going on everyone welcome to your
00:02 - 67th jav tutorial and in this tutorial
00:05 - we're going to be finishing this program
00:07 - demonstrating j radio buttons so where
00:10 - we left off on the last tutorial we
00:12 - pretty much made four different kinds of
00:14 - fonts and now what we need to do is
00:16 - pretty much take that text field and we
00:19 - need to set it equal to a font by
00:22 - default and we just need to set it equal
00:23 - to a font by default so when the program
00:26 - runs for the first time it knows what
00:27 - font to use so I'm going to set equal to
00:29 - plane font because I'm just a plain old
00:31 - guy um you can set it equal to different
00:33 - font if you want but I ain't going to so
00:36 - now what we need to do is pretty much
00:39 - create an add item listener for each
00:41 - button so I'm going to take that plain
00:43 - button first and add
00:47 - item listener just like that FL FL FL
00:52 - there we go I got clear on my throat and
00:54 - the parameter this ad item listener
00:56 - takes is going to be this get out of my
00:59 - way
01:01 - new Handler class and for the
01:04 - Constructor we're going to pass in the
01:06 - plain font now what happens is this an
01:10 - ad item listener pretty much chills
01:12 - there and waits for something to happen
01:15 - to that item which is in this case the
01:17 - plane button now whenever it does happen
01:21 - what do we want the object because this
01:24 - is a object in here and what do we want
01:27 - it to do well for the hand ER class is
01:30 - going to be handling it or it's pretty
01:32 - much the code that's going to happen if
01:34 - this button is clicked we need to pass
01:36 - in plain font to the Constructor and let
01:40 - me go ahead and add a comment so this
01:43 - wait for event to happen and this is
01:47 - what this does and pass in font object
01:52 - to Constructor and we didn't even create
01:55 - a class or Constructor yet so this might
01:56 - be confusing but I spelled Constructor
01:59 - wrong see this this uh thing if I click
02:03 - it it's not only um a platform but it
02:07 - also is a spell checker so since I
02:09 - spelled Constructor wrong it corrected
02:11 - it for me how cool is that compiler and
02:14 - a spell checker double Banger so now
02:17 - let's go ahead and add this for um well
02:20 - the rest of them copy this and put
02:23 - that's for a bold button italic button
02:25 - and bold an italic button so bold button
02:29 - uh let's see italic button is IB and
02:32 - bold and italic button of course we need
02:34 - to change these to bold font and italic
02:38 - font was ITF and the balen italic font
02:41 - was that so now we pretty much got our
02:45 - Constructor of our main class built now
02:47 - we can go ahead and we're getting this
02:48 - error message because Handler class is
02:51 - not a class yet so let's change that
02:53 - right now let's go ahead and make a hand
02:55 - class and we're going to put this inside
02:57 - the other class so let's go ahead and
02:58 - make private class
03:02 - handle class right there no my sound
03:05 - didn't mess up I actually just said that
03:09 - implements
03:10 - item listener and you guys know what
03:13 - implements means from the last tutorials
03:15 - so inside my Handler class the first
03:17 - thing I'm going to want to do is create
03:19 - a variable since uh you know we're just
03:21 - going to need one it's going to be a
03:23 - font variable and set it equal to the
03:25 - name of font because I mean makes sense
03:28 - right the next thing I'm going to want
03:30 - to do is create that Constructor that we
03:32 - used up here now as you can see that
03:35 - Constructor takes a font object as its
03:38 - argument so we got to make sure we have
03:40 - a font object as an argument when we
03:42 - create it so let's go ahead and name
03:44 - public Handler class and let's go ahead
03:48 - and put
03:50 - like font and just name it f or
03:52 - something so now plus sign WTF so now in
03:57 - our Constructor for this and let me make
04:01 - sure yep looks right to me let's go
04:03 - ahead and just add font and set it equal
04:05 - to
04:07 - F and now let's see what error I'm
04:11 - getting oh I must inherit the abstract
04:15 - method item listener item State changed
04:18 - so since we use item listener it has a
04:20 - method in it called item State changed
04:23 - that we need to use so let me add a
04:25 - comment to here and what this does is
04:27 - the font object get
04:30 - variable font this is pretty much just
04:32 - changing the object we pass in to the
04:34 - variable font so now that we implemented
04:38 - from item listener we need to use that
04:40 - method called item State change so let's
04:42 - go ahead and make a new method called
04:43 - public void doesn't return anything item
04:47 - State changed and if I spelled that
04:49 - right we should be good so now this
04:51 - argument takes a
04:53 - item event and we just name it event and
04:57 - for this in the body let's just go ahead
05:00 - and have something like text font and
05:02 - we'll set it equal to set font for that
05:08 - font so now if I do this my errors
05:13 - should go away but they're not so I'm
05:15 - going to pause it and figure out what's
05:17 - wrong okay guys I found my error and it
05:20 - was really embarrassing actually for the
05:23 - Constructor of Handler class I put
05:24 - hander class and I spelled it wrong so
05:27 - you definitely need to put Handler class
05:29 - and spell your Constructors right pretty
05:32 - embarrassing if you ask me so you know
05:34 - I'm not going to let it happen again I
05:36 - promise so now that we got all that
05:38 - changed let's go ahead and well pretty
05:42 - much I'll add a comment for this for
05:43 - ease of reading um we'll put sets the
05:46 - [Applause]
05:47 - font to the
05:50 - font object that was passed in looks
05:55 - good so well let me go ahead and run
05:57 - this then I'll talk you guys through so
05:59 - I'm just going to use my sane object
06:01 - from last tutorial if you didn't watch
06:03 - my last tutorial then pause the video
06:04 - right now and copy that and I'm just
06:06 - going to go ahead and run this and
06:07 - hopefully it works so now we got Bucky
06:10 - is awesome as hot uhhuh thank you and
06:13 - it's plain by default like we said
06:15 - before and now you can see these radio
06:17 - buttons since they're part of a
06:20 - group then whenever we click one then
06:24 - the rest uncheck and that is because
06:26 - they are part of a group and they're
06:27 - able to see each other or know what each
06:30 - other is doing and that's some built-in
06:32 - um methods that allow you to do that so
06:35 - that's pretty cool right there so let me
06:37 - talk you guys one last time through how
06:39 - we did
06:41 - this well let's see let's just get to
06:43 - the hard stuff we made variables we
06:45 - added uh we added all the stuff to the
06:48 - screen right here bam here's confusing
06:51 - stuff aside from adding all the stuff to
06:53 - the screen here's what we did we pretty
06:56 - much need to add add item listener to
06:59 - each button so that something can sit on
07:02 - those buttons and wait for it to be
07:04 - clicked or unlicked now add item
07:06 - listener this built-in method it takes
07:10 - this Handler class object as a parameter
07:15 - so what this is is pretty much saying
07:17 - all right we're going to be waiting for
07:19 - something to happen and as soon as it
07:21 - clicks then I'm going to call this class
07:24 - right here and that's the code that's
07:25 - going to happen when this event happens
07:29 - so now that we told it all right we want
07:32 - you to wait for something to happen and
07:34 - when it happens do this we said all
07:37 - right what do we want to do well we
07:39 - created a new Handler class and the
07:41 - Constructor for that class is called
07:44 - Handler class of course and it takes a
07:46 - font object so let's go ahead and look
07:49 - at that Constructor right now the
07:51 - Constructor all it does is it gets that
07:54 - font which was plain font and sets it
07:55 - equal to the name font or the variable
07:58 - font and why do we need to set it equal
08:00 - to this variable so we can use it later
08:03 - on to set the font so pretty much we
08:06 - took that font set it equal to the word
08:08 - font and then in the item State change
08:11 - which pretty much is the event that
08:13 - happens when it's clicked it takes that
08:15 - font and sets it equal to plane font
08:17 - bold font italic font or plain and bold
08:19 - font or excuse me bold and italic
08:21 - font so now that we have Constructor and
08:25 - our item State changed we're good to go
08:27 - and we were able to run the program so
08:30 - that's your real quick tutorial of radio
08:33 - buttons and the last thing that you guys
08:35 - don't want to forget don't forget to
08:36 - group your buttons right here set equal
08:39 - to new button group objects in this
08:41 - group allows your buttons to be one big
08:44 - family and allows them to see what each
08:46 - other is doing and this lets them know
08:48 - when each other is selected or
08:51 - deselected so that's that for this
08:53 - tutorial hope you guys learned a little
08:55 - something not too much of course so
08:58 - thank you guys for watching don't forget
08:59 - to subscribe don't forget to check out
09:01 - on my contest and I will see you next
09:03 - time

Cleaned transcript:

what's going on everyone welcome to your 67th jav tutorial and in this tutorial we're going to be finishing this program demonstrating j radio buttons so where we left off on the last tutorial we pretty much made four different kinds of fonts and now what we need to do is pretty much take that text field and we need to set it equal to a font by default and we just need to set it equal to a font by default so when the program runs for the first time it knows what font to use so I'm going to set equal to plane font because I'm just a plain old guy um you can set it equal to different font if you want but I ain't going to so now what we need to do is pretty much create an add item listener for each button so I'm going to take that plain button first and add item listener just like that FL FL FL there we go I got clear on my throat and the parameter this ad item listener takes is going to be this get out of my way new Handler class and for the Constructor we're going to pass in the plain font now what happens is this an ad item listener pretty much chills there and waits for something to happen to that item which is in this case the plane button now whenever it does happen what do we want the object because this is a object in here and what do we want it to do well for the hand ER class is going to be handling it or it's pretty much the code that's going to happen if this button is clicked we need to pass in plain font to the Constructor and let me go ahead and add a comment so this wait for event to happen and this is what this does and pass in font object to Constructor and we didn't even create a class or Constructor yet so this might be confusing but I spelled Constructor wrong see this this uh thing if I click it it's not only um a platform but it also is a spell checker so since I spelled Constructor wrong it corrected it for me how cool is that compiler and a spell checker double Banger so now let's go ahead and add this for um well the rest of them copy this and put that's for a bold button italic button and bold an italic button so bold button uh let's see italic button is IB and bold and italic button of course we need to change these to bold font and italic font was ITF and the balen italic font was that so now we pretty much got our Constructor of our main class built now we can go ahead and we're getting this error message because Handler class is not a class yet so let's change that right now let's go ahead and make a hand class and we're going to put this inside the other class so let's go ahead and make private class handle class right there no my sound didn't mess up I actually just said that implements item listener and you guys know what implements means from the last tutorials so inside my Handler class the first thing I'm going to want to do is create a variable since uh you know we're just going to need one it's going to be a font variable and set it equal to the name of font because I mean makes sense right the next thing I'm going to want to do is create that Constructor that we used up here now as you can see that Constructor takes a font object as its argument so we got to make sure we have a font object as an argument when we create it so let's go ahead and name public Handler class and let's go ahead and put like font and just name it f or something so now plus sign WTF so now in our Constructor for this and let me make sure yep looks right to me let's go ahead and just add font and set it equal to F and now let's see what error I'm getting oh I must inherit the abstract method item listener item State changed so since we use item listener it has a method in it called item State changed that we need to use so let me add a comment to here and what this does is the font object get variable font this is pretty much just changing the object we pass in to the variable font so now that we implemented from item listener we need to use that method called item State change so let's go ahead and make a new method called public void doesn't return anything item State changed and if I spelled that right we should be good so now this argument takes a item event and we just name it event and for this in the body let's just go ahead and have something like text font and we'll set it equal to set font for that font so now if I do this my errors should go away but they're not so I'm going to pause it and figure out what's wrong okay guys I found my error and it was really embarrassing actually for the Constructor of Handler class I put hander class and I spelled it wrong so you definitely need to put Handler class and spell your Constructors right pretty embarrassing if you ask me so you know I'm not going to let it happen again I promise so now that we got all that changed let's go ahead and well pretty much I'll add a comment for this for ease of reading um we'll put sets the font to the font object that was passed in looks good so well let me go ahead and run this then I'll talk you guys through so I'm just going to use my sane object from last tutorial if you didn't watch my last tutorial then pause the video right now and copy that and I'm just going to go ahead and run this and hopefully it works so now we got Bucky is awesome as hot uhhuh thank you and it's plain by default like we said before and now you can see these radio buttons since they're part of a group then whenever we click one then the rest uncheck and that is because they are part of a group and they're able to see each other or know what each other is doing and that's some builtin um methods that allow you to do that so that's pretty cool right there so let me talk you guys one last time through how we did this well let's see let's just get to the hard stuff we made variables we added uh we added all the stuff to the screen right here bam here's confusing stuff aside from adding all the stuff to the screen here's what we did we pretty much need to add add item listener to each button so that something can sit on those buttons and wait for it to be clicked or unlicked now add item listener this builtin method it takes this Handler class object as a parameter so what this is is pretty much saying all right we're going to be waiting for something to happen and as soon as it clicks then I'm going to call this class right here and that's the code that's going to happen when this event happens so now that we told it all right we want you to wait for something to happen and when it happens do this we said all right what do we want to do well we created a new Handler class and the Constructor for that class is called Handler class of course and it takes a font object so let's go ahead and look at that Constructor right now the Constructor all it does is it gets that font which was plain font and sets it equal to the name font or the variable font and why do we need to set it equal to this variable so we can use it later on to set the font so pretty much we took that font set it equal to the word font and then in the item State change which pretty much is the event that happens when it's clicked it takes that font and sets it equal to plane font bold font italic font or plain and bold font or excuse me bold and italic font so now that we have Constructor and our item State changed we're good to go and we were able to run the program so that's your real quick tutorial of radio buttons and the last thing that you guys don't want to forget don't forget to group your buttons right here set equal to new button group objects in this group allows your buttons to be one big family and allows them to see what each other is doing and this lets them know when each other is selected or deselected so that's that for this tutorial hope you guys learned a little something not too much of course so thank you guys for watching don't forget to subscribe don't forget to check out on my contest and I will see you next time
