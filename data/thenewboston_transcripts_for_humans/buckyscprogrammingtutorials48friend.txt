With timestamps:

00:00 - welcome back I steer 48th C++ tutorial
00:03 - and in this tutorial I'm going to be
00:04 - going over the keyword friend so
00:07 - basically every class can have friends
00:10 - and a friend of the class is something
00:12 - that's totally separate from the class
00:14 - but it still has access to the stuff
00:17 - inside your class like your variables
00:18 - and your functions so in other words if
00:21 - a class wanted to have a function it can
00:25 - make that function its friend and now
00:27 - that function had access to the
00:29 - variables and the functions inside the
00:31 - class
00:32 - pretty cool huh so let's go ahead and
00:33 - take a look at it so the first thing we
00:35 - need is a class and I'm going to name
00:37 - this class stank fist so let's go ahead
00:41 - and make our class right now the first
00:43 - thing I like to do is get everything set
00:45 - up so public and private so this class
00:49 - is going to have one private variable
00:52 - and int stinkie variable so now the only
00:57 - thing that has access to this thinkI
01:00 - variable is whatever is already inside
01:02 - this class so first of all let's go
01:04 - ahead and build a constructor for this
01:06 - stank fist and all this constructor is
01:09 - going to do is take that stinky variable
01:12 - and set it equal to zero so now as soon
01:15 - as you create a stink fist object and
01:17 - make sure I capitalized that consistency
01:20 - on my fist it's going to take this
01:22 - stinky variable and set it equal to zero
01:25 - simple enough so now what we need to do
01:28 - is we need to build a function so let's
01:31 - go ahead and build a function outside
01:33 - actually let's go ahead and make it
01:34 - right here so in order to make a
01:37 - function your friend the very first
01:39 - thing you need to do is prototype it
01:41 - inside your class so go ahead and put
01:43 - void one name this function stinkies
01:46 - friend and we'll go ahead and as a
01:49 - parameter it's going to take a stink
01:51 - fist object so stank fist and we'll just
01:54 - name this object s fo4 stink fist object
01:57 - so as a parameter it's going to take an
02:00 - object of this class so we're saying all
02:02 - right
02:03 - so that's all you do in order to make it
02:04 - your friend prototype inside your class
02:06 - one know
02:08 - in order to make this function a friend
02:10 - of this class before the prototype you
02:13 - need to type the keyword friend now this
02:17 - function has access to everything inside
02:20 - this class because it's its friend so
02:22 - now when we go ahead and copy this and
02:25 - paste it and create it we can use the
02:29 - stinkface object to access all the stuff
02:31 - inside the stink fist class pretty cool
02:33 - so first of all let's go ahead and
02:35 - change this stinky variable equal to
02:37 - something so using our stink fist object
02:40 - let's go ahead and access the stinky
02:43 - variable and set equal to 99 or
02:45 - something different than zero and now
02:47 - let's go ahead and just print it out on
02:49 - the screen see out SFO stinky variable
02:53 - and lime so basically what this does is
02:58 - even though there is a function right
03:01 - here you can see that it's totally
03:03 - different totally outside this class but
03:07 - since this class said you know what I
03:09 - trust this function it's my friend now
03:12 - this function has access to the stuff
03:14 - inside the class such as stinky variable
03:16 - and another thing I want to point out
03:18 - before I go on a class has to give away
03:22 - its friendship for example this function
03:25 - and this function can't demand to be
03:27 - friends with this class that's why you
03:29 - don't have the friend keyword right
03:31 - before it this class needs to give away
03:34 - its friendship other places just can't
03:37 - take it it's kind of like real life you
03:39 - can't make someone be your friend they
03:40 - have to accept you into being your
03:42 - friend make sense trust me I tried it
03:44 - didn't work out so well so let's go
03:46 - ahead and now that we got everything set
03:48 - up we can begin using this in main so
03:50 - our main what we need to do first is
03:52 - create a stink fist object so stink fist
03:56 - and I'm just going to name my object Bob
03:57 - and now we can use that Stinky's friend
04:00 - function right here and of course this
04:04 - function takes a stink fist object as
04:06 - its parameter so let's go ahead and as
04:08 - this parameter type in
04:10 - Bob and now we'll go ahead and run it
04:13 - and check it out as long as I didn't
04:15 - forget anything it should print out 99
04:17 - pretty cool home so even though we were
04:20 - using this function and this function
04:22 - was outside this class it was able to
04:25 - access the stinky variable and print it
04:27 - out on the screen pretty cool huh
04:29 - so basically to recap one last time we
04:34 - wanted to build a function that can
04:36 - access this class but we didn't want to
04:38 - put it inside the class itself so
04:41 - instead what we decided to do was make
04:43 - this function a friend of the class now
04:46 - whenever this function tried to use the
04:48 - variables and functions inside of this
04:49 - class it was able to because this class
04:51 - said you know what you're pretty cool
04:53 - you can be my friend so then we made a
04:56 - function that took a stank
04:57 - fist parameter as its object so the
05:00 - first thing we need to do is create a
05:02 - stink fist object and we pass it in as
05:05 - its parameter and then ahead access the
05:08 - distinct fist class so that is basically
05:11 - the UM I don't know the lesson behind
05:14 - this tutorial whenever a class wants
05:17 - something to be its friend it can access
05:20 - the members of that class and aside from
05:22 - that a class has to give away its
05:25 - friendship other functions can't just
05:27 - demand to be friends with it it has to
05:29 - give it to them so there you go that's
05:31 - what friend means and that's why it's
05:33 - useful again this is a real simple
05:35 - example but later on I'll show you guys
05:37 - how it's really useful so just stick
05:40 - around and you'll see so thank you guys
05:42 - for watching don't forget subscribe and
05:43 - I'll see you guys in the next tutorial

Cleaned transcript:

welcome back I steer 48th C++ tutorial and in this tutorial I'm going to be going over the keyword friend so basically every class can have friends and a friend of the class is something that's totally separate from the class but it still has access to the stuff inside your class like your variables and your functions so in other words if a class wanted to have a function it can make that function its friend and now that function had access to the variables and the functions inside the class pretty cool huh so let's go ahead and take a look at it so the first thing we need is a class and I'm going to name this class stank fist so let's go ahead and make our class right now the first thing I like to do is get everything set up so public and private so this class is going to have one private variable and int stinkie variable so now the only thing that has access to this thinkI variable is whatever is already inside this class so first of all let's go ahead and build a constructor for this stank fist and all this constructor is going to do is take that stinky variable and set it equal to zero so now as soon as you create a stink fist object and make sure I capitalized that consistency on my fist it's going to take this stinky variable and set it equal to zero simple enough so now what we need to do is we need to build a function so let's go ahead and build a function outside actually let's go ahead and make it right here so in order to make a function your friend the very first thing you need to do is prototype it inside your class so go ahead and put void one name this function stinkies friend and we'll go ahead and as a parameter it's going to take a stink fist object so stank fist and we'll just name this object s fo4 stink fist object so as a parameter it's going to take an object of this class so we're saying all right so that's all you do in order to make it your friend prototype inside your class one know in order to make this function a friend of this class before the prototype you need to type the keyword friend now this function has access to everything inside this class because it's its friend so now when we go ahead and copy this and paste it and create it we can use the stinkface object to access all the stuff inside the stink fist class pretty cool so first of all let's go ahead and change this stinky variable equal to something so using our stink fist object let's go ahead and access the stinky variable and set equal to 99 or something different than zero and now let's go ahead and just print it out on the screen see out SFO stinky variable and lime so basically what this does is even though there is a function right here you can see that it's totally different totally outside this class but since this class said you know what I trust this function it's my friend now this function has access to the stuff inside the class such as stinky variable and another thing I want to point out before I go on a class has to give away its friendship for example this function and this function can't demand to be friends with this class that's why you don't have the friend keyword right before it this class needs to give away its friendship other places just can't take it it's kind of like real life you can't make someone be your friend they have to accept you into being your friend make sense trust me I tried it didn't work out so well so let's go ahead and now that we got everything set up we can begin using this in main so our main what we need to do first is create a stink fist object so stink fist and I'm just going to name my object Bob and now we can use that Stinky's friend function right here and of course this function takes a stink fist object as its parameter so let's go ahead and as this parameter type in Bob and now we'll go ahead and run it and check it out as long as I didn't forget anything it should print out 99 pretty cool home so even though we were using this function and this function was outside this class it was able to access the stinky variable and print it out on the screen pretty cool huh so basically to recap one last time we wanted to build a function that can access this class but we didn't want to put it inside the class itself so instead what we decided to do was make this function a friend of the class now whenever this function tried to use the variables and functions inside of this class it was able to because this class said you know what you're pretty cool you can be my friend so then we made a function that took a stank fist parameter as its object so the first thing we need to do is create a stink fist object and we pass it in as its parameter and then ahead access the distinct fist class so that is basically the UM I don't know the lesson behind this tutorial whenever a class wants something to be its friend it can access the members of that class and aside from that a class has to give away its friendship other functions can't just demand to be friends with it it has to give it to them so there you go that's what friend means and that's why it's useful again this is a real simple example but later on I'll show you guys how it's really useful so just stick around and you'll see so thank you guys for watching don't forget subscribe and I'll see you guys in the next tutorial
