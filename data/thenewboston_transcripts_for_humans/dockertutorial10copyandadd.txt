With timestamps:

00:00 - all righty guys welcome back to another
00:02 - video and in this tutorial
00:03 - i am gonna be teaching you guys how to
00:05 - use the copy and add keywords
00:07 - to move files from your local operating
00:10 - system your
00:11 - normal working environment into your
00:13 - image
00:14 - in that way the purpose of this and it's
00:16 - typically by the way source code that
00:18 - you're moving over
00:20 - but anyways the point of this is that
00:22 - whenever anyone else builds your
00:23 - container
00:24 - not only do they have all those services
00:26 - like postgres and redis
00:28 - but they have the actual source code as
00:30 - well like your html files your images
00:32 - so on and so forth the total package
00:36 - so just is a quick uh little
00:39 - prerequisite
00:40 - i created this temp2 directory and
00:42 - that's where i'm at right now
00:44 - in my command line and we have a couple
00:46 - assets in here we have this directory
00:48 - called corn
00:50 - which i already packed up into this tar
00:52 - file
00:53 - and then we have a directory called html
00:55 - files which has
00:56 - one apples.html file in it and then a
00:59 - sample text file
01:01 - nothing about these are like special i
01:04 - just wanted to have three different
01:05 - types of assets because
01:07 - the way that we move them over it's it's
01:09 - a little bit different so
01:11 - again it doesn't matter what they're
01:12 - named or you know what's actually in
01:14 - these text files
01:16 - just want to have these different ones
01:17 - to kind of demonstrate some different
01:18 - concepts
01:20 - all right so let's go ahead and get
01:22 - started of course
01:23 - since you know what we're trying to do
01:25 - is create an image from a docker file
01:27 - first thing we need is an actual docker
01:29 - file so i'm gonna go
01:31 - nano and create a docker file now the
01:34 - very first
01:35 - thing that we're gonna need is a base
01:36 - image and we'll just go with alpine
01:39 - since it's the most
01:40 - lightweight really doesn't matter for
01:41 - this tutorial but we'll stick with
01:42 - alpine
01:44 - now the keyword that we're going to be
01:46 - discussing first
01:47 - is the copy keyword now what the copy
01:49 - keyword
01:50 - is going to do is it's going to instruct
01:52 - docker to copy files or directories
01:55 - from the source i'll just uh
01:58 - make a little template there from the
02:01 - source location
02:02 - and this is the location on your local
02:05 - operating system your actual computer
02:07 - and it's going to be copying them over
02:09 - to the destination
02:10 - now the destination is the file system
02:13 - of the container
02:14 - or in other words the image that's going
02:16 - to become a container that we're going
02:17 - to be creating
02:18 - now the very first command i'm going to
02:19 - be showing you guys is actually not
02:21 - going to be part of our
02:22 - final product because it's going to kind
02:26 - of ruin the rest of my tutorial
02:27 - if i include this but i want to show it
02:29 - to you guys anyways because you're going
02:32 - to see this a lot
02:33 - and that is people typically or i don't
02:36 - want to say typically
02:37 - a common thing is to copy all of the
02:40 - content
02:41 - from the current directory over to a
02:43 - target folder
02:44 - so you might see something like this and
02:46 - what this means is
02:48 - take everything inside temp2 where we're
02:50 - at right now
02:52 - and copy over into an app directory in
02:55 - the image
02:56 - now again i don't want to do that
02:57 - because i want to show you some tricky
02:59 - things of copying
03:01 - files one by one so the first thing we
03:03 - actually
03:04 - are going to be doing is taking this
03:06 - html files directory
03:08 - and moving this into a app slash html
03:12 - so you guys can probably guess how you
03:13 - would do this copy
03:15 - again current directory forward slash
03:18 - html
03:19 - files and then i'm going to be copying
03:22 - over to app
03:23 - slash html so again it's going to take
03:27 - all the content from here and copy over
03:30 - to
03:31 - a new folder app slash html
03:34 - and that's where it's going to land up
03:35 - in our final image
03:37 - now if you ever want to copy over a
03:39 - single file then what you can do
03:41 - is well i'll show you guys it's pretty
03:44 - self-explanatory but walk you through
03:46 - it anyways so copy sample.txt
03:49 - over to app slash sample.txt
03:53 - so again what it's going to do is take
03:55 - this file and just move it to
03:57 - a new folder in our images file system
04:00 - and that location is app sample.txt
04:03 - plain and simple
04:04 - so copy copy take files from here move
04:07 - them over there
04:07 - okay i got it so what's the point of
04:09 - this ad keyword we were talking about
04:12 - so add is actually very similar to copy
04:15 - but it allows us to unpack tar files
04:18 - as well as use a url is the source
04:22 - so it's kind of like copy for um
04:25 - in special cases you can think of it
04:27 - like that a special use case of copy if
04:29 - you will
04:30 - so that is why in case you guys were
04:32 - wondering why i have this tar
04:34 - file because we need to add keyword for
04:36 - that so
04:38 - what i'm going to do is include add corn
04:41 - dot tar and we can just move that into
04:44 - our app directory as our target
04:48 - and last but not least and actually have
04:50 - this copied
04:51 - actually let me pull it up on a browser
04:53 - show you guys what's going on
04:56 - all right so i'm just gonna move this
04:57 - svg and this is just the logo of
04:59 - the new boss then bump it up so you guys
05:01 - can see
05:02 - and i just wanna what is this get out of
05:05 - here thing
05:06 - i just wanna show you guys this because
05:09 - i want to demonstrate the idea of
05:11 - taking a file from a url and including
05:14 - it in your image
05:15 - as well so what we're going to do in
05:18 - that case
05:18 - is just add and then all right so you
05:22 - guys can't see it but
05:23 - all of the uh the entire url is there my
05:26 - screen is just a little bit
05:27 - squished together so i can show it on my
05:29 - tutorial but we're going to take that
05:31 - url
05:32 - that svg file and copy it over to app
05:35 - images and i actually want to rename
05:37 - this one since i don't like that big
05:39 - long name
05:40 - of logo.svg alright
05:43 - so it looks like we have everything
05:45 - ported over and
05:47 - looks good to go so i'm just going to
05:49 - save that and just to show you guys the
05:51 - final product
05:52 - of all right so we have from alpine
05:56 - we're gonna copy over html files this
05:59 - one file
06:00 - and then again what this is gonna do
06:02 - right here is not only just copy this
06:04 - file directly
06:05 - but since we have the add keyword it's
06:07 - going to unpack that
06:09 - and then of course this is just showing
06:11 - that we can grab files from the internet
06:13 - as well
06:14 - so let's clear out in docker build
06:17 - period so docker build period and all
06:21 - right looking good
06:23 - now i'm just gonna get that id for
06:26 - docker image ls and it should be this
06:29 - top one
06:30 - and all right so let's run this
06:32 - container and
06:33 - see if it worked so docker run and we
06:36 - actually want to shell in so we can you
06:37 - know poke around
06:38 - navigate around and make sure that
06:40 - everything worked correctly and that was
06:42 - the
06:42 - id of the image and then i'm just gonna
06:46 - run shell is my default command and
06:49 - let's run
06:49 - ls la and see what we got
06:52 - all right so looks like we got that app
06:55 - folder which is good so let's navigate
06:57 - into that
06:58 - and if we run lsla here all right
07:02 - so first thing it looks like we did
07:04 - indeed copy over that
07:06 - sample.txt file correctly and now what i
07:09 - want to do is just navigate into corn
07:12 - and all right looks like we got corn one
07:15 - in corn two
07:16 - and if you see this this tar file was
07:19 - just
07:20 - this uh directory packed into a tar file
07:23 - and
07:23 - indeed it did have corn one and corn two
07:25 - in it
07:26 - and what else do we got over here so let
07:28 - me navigate
07:29 - out here all right we have
07:33 - html and let's navigate there
07:38 - all right so in html we do have
07:40 - apples.html indeed
07:43 - last but not least let's
07:46 - look in images so cd images
07:51 - and yes we have that logo svg
07:54 - so all right that and i'll pull this up
07:57 - so you guys have something to look at
07:59 - while i'm doing my little
08:00 - outro here but that is the difference
08:03 - between
08:03 - copy and add again both keywords that
08:06 - allow you to take
08:07 - files and folders from your local
08:09 - operating system
08:10 - and copy those over into your image that
08:13 - you can deploy whenever people run the
08:15 - container they can see all those
08:17 - very useful but yeah um
08:20 - nothing else to say really so uh thank
08:23 - you guys for watching don't forget to
08:24 - subscribe and i'll see you in the next
08:25 - video

Cleaned transcript:

all righty guys welcome back to another video and in this tutorial i am gonna be teaching you guys how to use the copy and add keywords to move files from your local operating system your normal working environment into your image in that way the purpose of this and it's typically by the way source code that you're moving over but anyways the point of this is that whenever anyone else builds your container not only do they have all those services like postgres and redis but they have the actual source code as well like your html files your images so on and so forth the total package so just is a quick uh little prerequisite i created this temp2 directory and that's where i'm at right now in my command line and we have a couple assets in here we have this directory called corn which i already packed up into this tar file and then we have a directory called html files which has one apples.html file in it and then a sample text file nothing about these are like special i just wanted to have three different types of assets because the way that we move them over it's it's a little bit different so again it doesn't matter what they're named or you know what's actually in these text files just want to have these different ones to kind of demonstrate some different concepts all right so let's go ahead and get started of course since you know what we're trying to do is create an image from a docker file first thing we need is an actual docker file so i'm gonna go nano and create a docker file now the very first thing that we're gonna need is a base image and we'll just go with alpine since it's the most lightweight really doesn't matter for this tutorial but we'll stick with alpine now the keyword that we're going to be discussing first is the copy keyword now what the copy keyword is going to do is it's going to instruct docker to copy files or directories from the source i'll just uh make a little template there from the source location and this is the location on your local operating system your actual computer and it's going to be copying them over to the destination now the destination is the file system of the container or in other words the image that's going to become a container that we're going to be creating now the very first command i'm going to be showing you guys is actually not going to be part of our final product because it's going to kind of ruin the rest of my tutorial if i include this but i want to show it to you guys anyways because you're going to see this a lot and that is people typically or i don't want to say typically a common thing is to copy all of the content from the current directory over to a target folder so you might see something like this and what this means is take everything inside temp2 where we're at right now and copy over into an app directory in the image now again i don't want to do that because i want to show you some tricky things of copying files one by one so the first thing we actually are going to be doing is taking this html files directory and moving this into a app slash html so you guys can probably guess how you would do this copy again current directory forward slash html files and then i'm going to be copying over to app slash html so again it's going to take all the content from here and copy over to a new folder app slash html and that's where it's going to land up in our final image now if you ever want to copy over a single file then what you can do is well i'll show you guys it's pretty selfexplanatory but walk you through it anyways so copy sample.txt over to app slash sample.txt so again what it's going to do is take this file and just move it to a new folder in our images file system and that location is app sample.txt plain and simple so copy copy take files from here move them over there okay i got it so what's the point of this ad keyword we were talking about so add is actually very similar to copy but it allows us to unpack tar files as well as use a url is the source so it's kind of like copy for um in special cases you can think of it like that a special use case of copy if you will so that is why in case you guys were wondering why i have this tar file because we need to add keyword for that so what i'm going to do is include add corn dot tar and we can just move that into our app directory as our target and last but not least and actually have this copied actually let me pull it up on a browser show you guys what's going on all right so i'm just gonna move this svg and this is just the logo of the new boss then bump it up so you guys can see and i just wanna what is this get out of here thing i just wanna show you guys this because i want to demonstrate the idea of taking a file from a url and including it in your image as well so what we're going to do in that case is just add and then all right so you guys can't see it but all of the uh the entire url is there my screen is just a little bit squished together so i can show it on my tutorial but we're going to take that url that svg file and copy it over to app images and i actually want to rename this one since i don't like that big long name of logo.svg alright so it looks like we have everything ported over and looks good to go so i'm just going to save that and just to show you guys the final product of all right so we have from alpine we're gonna copy over html files this one file and then again what this is gonna do right here is not only just copy this file directly but since we have the add keyword it's going to unpack that and then of course this is just showing that we can grab files from the internet as well so let's clear out in docker build period so docker build period and all right looking good now i'm just gonna get that id for docker image ls and it should be this top one and all right so let's run this container and see if it worked so docker run and we actually want to shell in so we can you know poke around navigate around and make sure that everything worked correctly and that was the id of the image and then i'm just gonna run shell is my default command and let's run ls la and see what we got all right so looks like we got that app folder which is good so let's navigate into that and if we run lsla here all right so first thing it looks like we did indeed copy over that sample.txt file correctly and now what i want to do is just navigate into corn and all right looks like we got corn one in corn two and if you see this this tar file was just this uh directory packed into a tar file and indeed it did have corn one and corn two in it and what else do we got over here so let me navigate out here all right we have html and let's navigate there all right so in html we do have apples.html indeed last but not least let's look in images so cd images and yes we have that logo svg so all right that and i'll pull this up so you guys have something to look at while i'm doing my little outro here but that is the difference between copy and add again both keywords that allow you to take files and folders from your local operating system and copy those over into your image that you can deploy whenever people run the container they can see all those very useful but yeah um nothing else to say really so uh thank you guys for watching don't forget to subscribe and i'll see you in the next video
