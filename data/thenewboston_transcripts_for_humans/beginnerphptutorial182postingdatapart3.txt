With timestamps:

00:00 - so now we need to check for a state
00:02 - change or a ready state change from from
00:05 - our XML HTTP object so we say XML HTTP
00:09 - dot on ready state to change and then we
00:14 - equal this to a function so it so
00:19 - basically based on this event we create
00:21 - a new function and then inside here we
00:24 - can start checking our ready State and
00:26 - our status of our of our request so we
00:30 - say if and we say XML HTTP dot ready
00:35 - state remember our capital S here so
00:37 - case sensitive is equal to 4 and our XML
00:42 - HTTP status is also a status is equal to
00:48 - 200 this just means if the page is not
00:50 - blank or the request isn't blank coming
00:54 - then we complete the rest this block so
00:57 - if this is but if these are both true
00:59 - then we create what's in here so now
01:03 - under our insert field if you like here
01:07 - where we're typing our the value that we
01:09 - want to insert into our database
01:11 - we're going to create a div and what
01:13 - this div is going to do is it's going to
01:14 - feed back in information from our
01:16 - updating PHP file when we create it and
01:20 - the reason for this is when we've
01:22 - inserted the data we're going to tell
01:23 - the user that the data is being inserted
01:25 - but because we're doing this without
01:27 - refreshing the page we want to give a
01:29 - confirmation message inside a div so I'm
01:33 - going to call this div I've created a
01:34 - structure of the div here we don't need
01:35 - to put anything in here at the moment
01:37 - well at all I'm going to call the div
01:39 - message so this is just going to feed
01:41 - back information from our from our
01:46 - request our Ajax request and the the
01:49 - output in updating PHP is going to be
01:52 - put into this div so hopefully that
01:55 - makes sense otherwise continue to follow
01:57 - along and see what you think so we've
02:00 - got document dot get
02:03 - element by ID what I struggled with
02:07 - earlier and then we specify the name of
02:09 - the dip so in this case it's message and
02:11 - then what we do is we say inner dot
02:14 - sorry dot inner HTML and what this is
02:19 - going to do is it's going to set the
02:21 - HTML within out this specific div that
02:24 - we've specified so what we're going to
02:26 - do is I'm going to equal this to XML
02:28 - HTTP response text and all this
02:36 - basically is is it's the the output sent
02:39 - back from update Inc PHP because we're
02:42 - going to be opening this file later and
02:44 - sending post data to where I'm going to
02:47 - be taking back the response text from
02:49 - this file so that's important that we
02:51 - put that into message in order to let's
02:54 - say if we would say echo failed at any
02:58 - point in our program the in anytime in
03:01 - our script the message div would be
03:03 - updated so now that we've done that we
03:06 - can come down here and we can start to
03:08 - send our post data now if you watch the
03:12 - other tutorials you'll see that we used
03:14 - XML HTTP open and then we've supplied
03:17 - three parameters don't forget the
03:21 - semicolon at the end and we've supplied
03:24 - the first primary parameter was get the
03:26 - next was the file so this was update in
03:29 - PHP and then it was true because we're
03:32 - sending the data synchronously so we
03:33 - need to set this to true it's actually
03:35 - true by default but I tend to put it in
03:37 - anyway just to ensure that it's there
03:40 - etc etc etc just for my own peace of
03:43 - mind
03:43 - so now we set XML HTTP send now there's
03:48 - a few changes that we need to make when
03:50 - we're using post data you'll see that in
03:53 - some of the other tutorials I've put a
03:57 - question mark here to specify that we're
04:00 - going to be sending get data and I've
04:03 - sent some specific data so I've said for
04:05 - example
04:07 - text equals hello okay so what I've done
04:12 - there is
04:12 - I've sent get data because it's as part
04:15 - of the URL so let's go ahead and test
04:18 - this so we we can see that everything's
04:21 - working with regards to the the Ajax so
04:26 - at the moment what what this what this
04:28 - set Ajax will do is it will open this
04:30 - update dot PHP file or will it and it
04:33 - will pass through a variable called text
04:36 - which is a get variable with the value
04:38 - hello so what we can do inside here is
04:40 - just echo out dollar underscore get text
04:44 - and what that should do is it should
04:45 - react oh what we've entered into the
04:47 - text box because remember what we enter
04:50 - into the text box is being picked up
04:52 - sorry let's go back here
04:54 - what we enter into the text box will be
04:56 - picked up eventually by this so this
04:58 - will equal hello just for now and it
05:00 - will put that into our message div down
05:03 - here as I explained earlier so let's go
05:05 - ahead and check that this works let's
05:08 - click Submit and you can see that the
05:09 - value hello has been returned
05:12 - now obviously the problem with this at
05:14 - the moment is we've completely avoided
05:15 - the point of the tutorial we need to
05:18 - post data using post so the first thing
05:22 - we'll do is change this to post and I'm
05:24 - going to get rid of these variables and
05:27 - the end hits we don't post data through
05:29 - the URL

Cleaned transcript:

so now we need to check for a state change or a ready state change from from our XML HTTP object so we say XML HTTP dot on ready state to change and then we equal this to a function so it so basically based on this event we create a new function and then inside here we can start checking our ready State and our status of our of our request so we say if and we say XML HTTP dot ready state remember our capital S here so case sensitive is equal to 4 and our XML HTTP status is also a status is equal to 200 this just means if the page is not blank or the request isn't blank coming then we complete the rest this block so if this is but if these are both true then we create what's in here so now under our insert field if you like here where we're typing our the value that we want to insert into our database we're going to create a div and what this div is going to do is it's going to feed back in information from our updating PHP file when we create it and the reason for this is when we've inserted the data we're going to tell the user that the data is being inserted but because we're doing this without refreshing the page we want to give a confirmation message inside a div so I'm going to call this div I've created a structure of the div here we don't need to put anything in here at the moment well at all I'm going to call the div message so this is just going to feed back information from our from our request our Ajax request and the the output in updating PHP is going to be put into this div so hopefully that makes sense otherwise continue to follow along and see what you think so we've got document dot get element by ID what I struggled with earlier and then we specify the name of the dip so in this case it's message and then what we do is we say inner dot sorry dot inner HTML and what this is going to do is it's going to set the HTML within out this specific div that we've specified so what we're going to do is I'm going to equal this to XML HTTP response text and all this basically is is it's the the output sent back from update Inc PHP because we're going to be opening this file later and sending post data to where I'm going to be taking back the response text from this file so that's important that we put that into message in order to let's say if we would say echo failed at any point in our program the in anytime in our script the message div would be updated so now that we've done that we can come down here and we can start to send our post data now if you watch the other tutorials you'll see that we used XML HTTP open and then we've supplied three parameters don't forget the semicolon at the end and we've supplied the first primary parameter was get the next was the file so this was update in PHP and then it was true because we're sending the data synchronously so we need to set this to true it's actually true by default but I tend to put it in anyway just to ensure that it's there etc etc etc just for my own peace of mind so now we set XML HTTP send now there's a few changes that we need to make when we're using post data you'll see that in some of the other tutorials I've put a question mark here to specify that we're going to be sending get data and I've sent some specific data so I've said for example text equals hello okay so what I've done there is I've sent get data because it's as part of the URL so let's go ahead and test this so we we can see that everything's working with regards to the the Ajax so at the moment what what this what this set Ajax will do is it will open this update dot PHP file or will it and it will pass through a variable called text which is a get variable with the value hello so what we can do inside here is just echo out dollar underscore get text and what that should do is it should react oh what we've entered into the text box because remember what we enter into the text box is being picked up sorry let's go back here what we enter into the text box will be picked up eventually by this so this will equal hello just for now and it will put that into our message div down here as I explained earlier so let's go ahead and check that this works let's click Submit and you can see that the value hello has been returned now obviously the problem with this at the moment is we've completely avoided the point of the tutorial we need to post data using post so the first thing we'll do is change this to post and I'm going to get rid of these variables and the end hits we don't post data through the URL
