With timestamps:

00:00 - what is going on guys it's Bucky and
00:02 - welcome to your 24th tutorial in C++ and
00:05 - in this story we're going to be covering
00:07 - the do-while loop but you guys probably
00:09 - already knew that because I got a
00:11 - feeling that the title is right above
00:13 - this video and you know what else I do a
00:16 - lot I tell you guys this is probably
00:18 - going to be a short video and I just
00:20 - realized that the time is right under
00:22 - the video so I don't know why I say
00:24 - those things but it's habit I'm going to
00:26 - continue to say those things so get over
00:28 - it so anyways we're going to be covering
00:32 - the do-while loop in this tutorial and
00:34 - if you remember from I don't know
00:36 - however many tutorials those go I talked
00:39 - to you guys about the while loop and the
00:41 - while loop was basically a loop that you
00:43 - had a test and if that test was true
00:46 - then you ran a bit of code inside while
00:49 - the do-while loop is basically the while
00:51 - loop flipped upside down what the do
00:54 - while loop does is it runs the bit of
00:56 - code first and then it runs the test so
00:59 - let's go ahead and let me show it to you
01:00 - guys and you guys will understand better
01:02 - one means let's go ahead and get a
01:04 - counting variable called X and set it
01:06 - equal to one this is our starting point
01:08 - now the syntax for do-while loop is do
01:11 - and then you go ahead and add some code
01:14 - in the body so let's just go ahead and
01:15 - print out X
01:19 - and then after this we need to increment
01:22 - X or else the loop is going to run
01:23 - forever so X plus plus and now after the
01:27 - body immediately after it you write
01:30 - while and then after this you have your
01:32 - test ended with a semicolon
01:34 - a lot of people forget that semicolon
01:36 - because then basic while loop
01:37 - there is no semicolon if it's not in the
01:40 - body so don't forget to put this in my
01:42 - Coleman right here so let's give a
01:43 - simple test like X is less than 10 now
01:46 - go ahead and run this and check it out
01:48 - just like the wild loop it ran the same
01:51 - bit of code print it out X on the screen
01:53 - from 1 all the way to 9 pretty cool huh
01:56 - so we're saying all right a couple of
01:58 - things are kind of weird here first of
02:01 - all why is this loop even useful because
02:04 - it seems like a bad while loop because
02:06 - isn't the point of a loop to run the
02:09 - test first and if the test is true then
02:12 - run a bit of code but if it's false then
02:14 - don't run the bit of code well people
02:17 - use do loop mainly for this reason
02:19 - whenever you have code in here and you
02:22 - need it to run at least one time it's
02:25 - guaranteed to run at least at one time
02:27 - and the reason is this say you have a
02:30 - test that is false like 99 well this
02:32 - test is going to come false as soon as
02:34 - it hits it 99 is not less than 10 99 is
02:37 - a whole lot bigger than 10 so whenever
02:40 - you run this is just going to print out
02:42 - 99 so as you can see it ensures that you
02:46 - run your code at least one time before
02:49 - testing it at all so no matter what this
02:51 - value is it's going to do it one time
02:54 - and then test it so whenever you want to
02:57 - run your code guarantee that it runs at
02:59 - least one time this is what you do so
03:01 - that's the main reason that people use a
03:04 - do-while loop to ensure their code runs
03:06 - at least one time again if you have a
03:08 - basic program and you just want to loop
03:10 - it normally your best bet is to run the
03:12 - while loop or the for loop because those
03:15 - are your basic loops where you test it
03:16 - and then depending on the test you run
03:20 - your program so again this is basically
03:22 - a weird a kind of loop this is probably
03:25 - the most uncock
03:27 - Loup but whenever you come across it I
03:29 - wanted you guys to pick up on it
03:31 - understand what it's doing and why some
03:33 - people prefer it over the wall loop so
03:36 - now that you have knowledge of the
03:37 - do-while loop and you guys know that
03:39 - it's really not that common in
03:42 - programming so you don't want to use it
03:43 - that often you at least know what it
03:47 - does and how I was going to say how it
03:50 - worked well yeah that makes sense and
03:52 - how it works so anyways that's all I
03:54 - have to cover for the do-while loop
03:56 - pretty simple basically a while loop
03:58 - flipped upside down so thank you guys
03:59 - for watching don't forget to subscribe
04:01 - and yep I'll see you in the next video

Cleaned transcript:

what is going on guys it's Bucky and welcome to your 24th tutorial in C++ and in this story we're going to be covering the dowhile loop but you guys probably already knew that because I got a feeling that the title is right above this video and you know what else I do a lot I tell you guys this is probably going to be a short video and I just realized that the time is right under the video so I don't know why I say those things but it's habit I'm going to continue to say those things so get over it so anyways we're going to be covering the dowhile loop in this tutorial and if you remember from I don't know however many tutorials those go I talked to you guys about the while loop and the while loop was basically a loop that you had a test and if that test was true then you ran a bit of code inside while the dowhile loop is basically the while loop flipped upside down what the do while loop does is it runs the bit of code first and then it runs the test so let's go ahead and let me show it to you guys and you guys will understand better one means let's go ahead and get a counting variable called X and set it equal to one this is our starting point now the syntax for dowhile loop is do and then you go ahead and add some code in the body so let's just go ahead and print out X and then after this we need to increment X or else the loop is going to run forever so X plus plus and now after the body immediately after it you write while and then after this you have your test ended with a semicolon a lot of people forget that semicolon because then basic while loop there is no semicolon if it's not in the body so don't forget to put this in my Coleman right here so let's give a simple test like X is less than 10 now go ahead and run this and check it out just like the wild loop it ran the same bit of code print it out X on the screen from 1 all the way to 9 pretty cool huh so we're saying all right a couple of things are kind of weird here first of all why is this loop even useful because it seems like a bad while loop because isn't the point of a loop to run the test first and if the test is true then run a bit of code but if it's false then don't run the bit of code well people use do loop mainly for this reason whenever you have code in here and you need it to run at least one time it's guaranteed to run at least at one time and the reason is this say you have a test that is false like 99 well this test is going to come false as soon as it hits it 99 is not less than 10 99 is a whole lot bigger than 10 so whenever you run this is just going to print out 99 so as you can see it ensures that you run your code at least one time before testing it at all so no matter what this value is it's going to do it one time and then test it so whenever you want to run your code guarantee that it runs at least one time this is what you do so that's the main reason that people use a dowhile loop to ensure their code runs at least one time again if you have a basic program and you just want to loop it normally your best bet is to run the while loop or the for loop because those are your basic loops where you test it and then depending on the test you run your program so again this is basically a weird a kind of loop this is probably the most uncock Loup but whenever you come across it I wanted you guys to pick up on it understand what it's doing and why some people prefer it over the wall loop so now that you have knowledge of the dowhile loop and you guys know that it's really not that common in programming so you don't want to use it that often you at least know what it does and how I was going to say how it worked well yeah that makes sense and how it works so anyways that's all I have to cover for the dowhile loop pretty simple basically a while loop flipped upside down so thank you guys for watching don't forget to subscribe and yep I'll see you in the next video
