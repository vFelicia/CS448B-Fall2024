With timestamps:

00:01 - all righty hostes welcome back and in
00:03 - this video I want to talk to you about
00:05 - processes in Linux so first of all WTF
00:09 - is a process a process is essentially
00:12 - just any program that's running on your
00:14 - computer now the easiest way to just
00:17 - view these is if you type PS this is
00:20 - going to give you a list of processes so
00:23 - these are the ones that are associated
00:25 - with your terminal session so bash of
00:28 - course we know what that is and PS This
00:31 - is the this is actually the process that
00:33 - we just typed in the process to list
00:36 - processes kind of like process setion
00:39 - ooh too spooky for me all right now of
00:41 - course there are a bunch of other
00:43 - processes that are running in the
00:44 - background system processes if you
00:47 - really want to see them then if you type
00:49 - PS
00:50 - ax then this is going to give you a huge
00:53 - list of processes not only the ones that
00:55 - you own but all the stuff that's going
00:58 - on in the background again 99% of these
01:01 - we really don't care about the system
01:03 - processes are just to make sure that
01:05 - Linux is running smoothly and you know
01:07 - all the crap that goes on in the
01:09 - background of your computer what we
01:11 - really care about are the processes that
01:13 - we own pretty much the programs that we
01:16 - started in control manually so before we
01:20 - go any further let's just go ahead and
01:22 - figure out what the heck all this stuff
01:24 - is so each process as you can figure out
01:28 - is just listed on a new line
01:30 - now the First Column right here this P
01:32 - ID this is just the process ID so
01:35 - anytime you start a new process it
01:38 - essentially just assigns it a unique ID
01:41 - number and this is just so you can
01:42 - reference the process it's just easier
01:44 - than you know referring to it by name or
01:46 - any other you know method this
01:49 - TTY this is the terminal where the
01:52 - process is running from so most
01:55 - processes that you start they're
01:57 - associated with the terminal the system
01:59 - processes run in the background they
02:01 - aren't but just remember we're going to
02:03 - see more about this later on but this is
02:05 - the terminal that it's associated with
02:07 - this time right here this isn't like
02:09 - regular you know like what time did it
02:11 - start like 9:30 no this is the Mount of
02:15 - CPU time that this process took up so if
02:20 - you have a really you know uh timec
02:23 - consuming process or heavy process that
02:25 - you know takes a lot of resources this
02:27 - is going to be higher the reason that
02:29 - these are zero is because little
02:32 - programs like this like just printing
02:34 - text out on the screen they pretty much
02:37 - are really easy for your computer to do
02:39 - so those are just zero and that means
02:42 - that oh this was really easy to run and
02:45 - CMD this is just the command in other
02:47 - words the basic name of the program so
02:50 - PS bash whatever human readable
02:53 - name so there you go that's your real
02:55 - quick overview of processes so why do we
02:59 - care about about this I mean okay
03:01 - processes are programs that run on your
03:03 - computer they have an ID number wow so
03:06 - fascinating who really cares waste of a
03:08 - tutorial well not quite the reason that
03:11 - I'm teaching this is because not every
03:14 - program on your computer runs the same
03:17 - way sometimes you want to have processes
03:20 - that run in the background sometimes you
03:21 - want to have processes that you control
03:24 - manually from the terminal so on and so
03:27 - forth so you know how I say you know
03:31 - command like PS and LS and all these
03:34 - little tools I've been teaching you
03:36 - these are actually programs so even
03:39 - though you know we have a real simple
03:41 - command like LS this is actually a
03:43 - program or a process so even though all
03:46 - it does is list the contents of a
03:48 - directory remember this is just like a
03:51 - mini program just like anything else so
03:53 - just remember that so most of the time
03:56 - whenever you run these little commands
03:58 - you do not not get shell back or you do
04:01 - not have control of your terminal until
04:03 - that program is done running now a lot
04:06 - of these simple commands they run in
04:08 - like half a second or like a millisecond
04:10 - so we really can't tell it looks instant
04:13 - but let's say that we were running a
04:15 - program like this x logo now this
04:18 - program all it
04:20 - does let me see if I can move this it
04:22 - just pops up a little image on the
04:25 - screen but take a note of this so if we
04:29 - look back in our terminal we actually
04:31 - can't type any new
04:33 - commands see we usually have this thing
04:35 - and we can type stuff right after it but
04:38 - since this x logo is still
04:41 - running we don't have control of our
04:44 - terminal yet so watch what happens
04:46 - whenever I close this whenever I close
04:48 - this this x logo program is going to end
04:51 - and then we get control of our terminal
04:54 - back so just remember whenever you run a
04:58 - process from your command line you don't
05:00 - get control of the terminal or you can't
05:02 - run any other ones until that program
05:06 - closes now what you usually want to do
05:09 - whenever you have a process that's going
05:11 - to take a real long time you just don't
05:13 - want to run it have it like you know go
05:15 - through some datab base and just be
05:16 - sitting there the whole time you got
05:17 - other stuff to do you want to work on
05:19 - your computer you pretty much want
05:21 - access to the terminal while that
05:24 - process is running in the background so
05:27 - I'll show you guys this real quick
05:30 - so let's pop up X logo again and my
05:33 - mouse tipped over embarrassing now here
05:36 - I'll move this so you guys can see so
05:40 - anytime you want to end this you can
05:41 - either just close it this way or from
05:43 - the command line what you can do is you
05:45 - can hold down control and hit C on your
05:48 - keyboard now what this is going to do is
05:51 - it's going to send it something called
05:52 - an interrupt signal it's pretty much a
05:55 - nice way of saying hey program can you
05:57 - stop running so again that's control and
06:01 - c and that is going to go ahead and
06:03 - interrupt or stop your program from the
06:06 - command line so let's say that we wanted
06:09 - to do something like this we actually
06:11 - wanted to run this program and we wanted
06:13 - to keep it running but we also wanted to
06:17 - have control of this terminal because
06:19 - you know maybe we were working on
06:20 - something else so anytime you want to
06:23 - have a program run in the background and
06:26 - get control back just type the name of
06:28 - the program and after
06:30 - WR Amper sand so this means hey run this
06:33 - process but run it in the background so
06:36 - go ahead and hit
06:37 - enter and check this out this program's
06:40 - still running but
06:44 - now we can do whatever we want in the
06:46 - terminal we pretty much have full
06:47 - control still now take note of this
06:51 - whenever we ran it in the background
06:54 - instead of just you know popping us to
06:56 - you know terminal control it gave us
06:58 - some information
07:00 - now this
07:01 - information this part right here is the
07:03 - process ID so we can actually see that
07:06 - right here x logo the process ID is
07:10 - 2710
07:12 - 2710 now it also gave us this number
07:15 - right here WTF is this number this is
07:18 - actually called the job number now a job
07:21 - is essentially just a special type of
07:24 - program that we can actually do some
07:27 - kind of cool things with it and I'll
07:28 - show you guys right now

Cleaned transcript:

all righty hostes welcome back and in this video I want to talk to you about processes in Linux so first of all WTF is a process a process is essentially just any program that's running on your computer now the easiest way to just view these is if you type PS this is going to give you a list of processes so these are the ones that are associated with your terminal session so bash of course we know what that is and PS This is the this is actually the process that we just typed in the process to list processes kind of like process setion ooh too spooky for me all right now of course there are a bunch of other processes that are running in the background system processes if you really want to see them then if you type PS ax then this is going to give you a huge list of processes not only the ones that you own but all the stuff that's going on in the background again 99% of these we really don't care about the system processes are just to make sure that Linux is running smoothly and you know all the crap that goes on in the background of your computer what we really care about are the processes that we own pretty much the programs that we started in control manually so before we go any further let's just go ahead and figure out what the heck all this stuff is so each process as you can figure out is just listed on a new line now the First Column right here this P ID this is just the process ID so anytime you start a new process it essentially just assigns it a unique ID number and this is just so you can reference the process it's just easier than you know referring to it by name or any other you know method this TTY this is the terminal where the process is running from so most processes that you start they're associated with the terminal the system processes run in the background they aren't but just remember we're going to see more about this later on but this is the terminal that it's associated with this time right here this isn't like regular you know like what time did it start like 930 no this is the Mount of CPU time that this process took up so if you have a really you know uh timec consuming process or heavy process that you know takes a lot of resources this is going to be higher the reason that these are zero is because little programs like this like just printing text out on the screen they pretty much are really easy for your computer to do so those are just zero and that means that oh this was really easy to run and CMD this is just the command in other words the basic name of the program so PS bash whatever human readable name so there you go that's your real quick overview of processes so why do we care about about this I mean okay processes are programs that run on your computer they have an ID number wow so fascinating who really cares waste of a tutorial well not quite the reason that I'm teaching this is because not every program on your computer runs the same way sometimes you want to have processes that run in the background sometimes you want to have processes that you control manually from the terminal so on and so forth so you know how I say you know command like PS and LS and all these little tools I've been teaching you these are actually programs so even though you know we have a real simple command like LS this is actually a program or a process so even though all it does is list the contents of a directory remember this is just like a mini program just like anything else so just remember that so most of the time whenever you run these little commands you do not not get shell back or you do not have control of your terminal until that program is done running now a lot of these simple commands they run in like half a second or like a millisecond so we really can't tell it looks instant but let's say that we were running a program like this x logo now this program all it does let me see if I can move this it just pops up a little image on the screen but take a note of this so if we look back in our terminal we actually can't type any new commands see we usually have this thing and we can type stuff right after it but since this x logo is still running we don't have control of our terminal yet so watch what happens whenever I close this whenever I close this this x logo program is going to end and then we get control of our terminal back so just remember whenever you run a process from your command line you don't get control of the terminal or you can't run any other ones until that program closes now what you usually want to do whenever you have a process that's going to take a real long time you just don't want to run it have it like you know go through some datab base and just be sitting there the whole time you got other stuff to do you want to work on your computer you pretty much want access to the terminal while that process is running in the background so I'll show you guys this real quick so let's pop up X logo again and my mouse tipped over embarrassing now here I'll move this so you guys can see so anytime you want to end this you can either just close it this way or from the command line what you can do is you can hold down control and hit C on your keyboard now what this is going to do is it's going to send it something called an interrupt signal it's pretty much a nice way of saying hey program can you stop running so again that's control and c and that is going to go ahead and interrupt or stop your program from the command line so let's say that we wanted to do something like this we actually wanted to run this program and we wanted to keep it running but we also wanted to have control of this terminal because you know maybe we were working on something else so anytime you want to have a program run in the background and get control back just type the name of the program and after WR Amper sand so this means hey run this process but run it in the background so go ahead and hit enter and check this out this program's still running but now we can do whatever we want in the terminal we pretty much have full control still now take note of this whenever we ran it in the background instead of just you know popping us to you know terminal control it gave us some information now this information this part right here is the process ID so we can actually see that right here x logo the process ID is 2710 2710 now it also gave us this number right here WTF is this number this is actually called the job number now a job is essentially just a special type of program that we can actually do some kind of cool things with it and I'll show you guys right now
