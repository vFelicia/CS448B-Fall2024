With timestamps:

00:00 - hello youtube sam here from youtube.com
00:03 - slash on live gamer for the new boston
00:05 - and in this tutorial we're going to
00:07 - continue working on our game now if you
00:10 - remember from the previous tutorial we
00:12 - added the health monitor at the bottom
00:14 - so that the user can see the current
00:18 - health of their enemy and popeye so that
00:23 - they don't just have to rely on the
00:24 - progress bar they can see a little bit
00:26 - more precise amount but if you remember
00:30 - if the health gets down to zero which
00:35 - would technically mean that Popeye is
00:37 - dead it will not say that he's dead
00:40 - because Popeye I mean the value of a
00:44 - progress bar can be set to zero without
00:46 - an error occurring so what we can do is
00:53 - whenever the enemy attacks it's going to
00:57 - try to update the Popeye health so we'll
01:01 - come down here to update Popeye health
01:03 - and it's going to set the value to the
01:07 - hero health and so what we're going to
01:09 - do is we will type if he wrote health
01:18 - equals zero then what we want to do we
01:22 - want to throw a new exception so if it's
01:27 - equal to zero we're just going to throw
01:29 - our own exception because this will not
01:31 - actually I'm create an exception itself
01:33 - so we're going to throw our own and this
01:35 - try statement is going to catch that
01:36 - exception and it's going to set the
01:39 - value to zero and say the popeyes lost
01:41 - so the pop I cannot still be alive with
01:43 - zero hell now you can see here that
01:45 - whenever we set the hero health to 100
01:49 - if we're actually using a number here so
01:51 - if we ever wanted to go through and
01:52 - change the starting health of the hero
01:55 - we'd have to go and find every single
01:57 - instance of 100 and change it manually
02:01 - so what we can do is go into Popeye and
02:06 - now these things that I'm showing you
02:11 - guys they may seem like I'm
02:13 - in the program but what you got to learn
02:15 - is that you got to think through things
02:16 - that you can make your code better or
02:19 - make it easier for the user to use your
02:21 - program you just got to think about
02:22 - those things that be able to find them
02:24 - and hopefully you guys are learning how
02:25 - to do this as we go through these
02:27 - tutorials so we'll come over here and
02:30 - when we will create a variable so we'll
02:34 - make it public and shared because it's
02:36 - going to be the same for all popeyes and
02:39 - we don't want to waste memory by
02:41 - creating multiple instances of it and
02:43 - we'll just call it start health as
02:46 - integer and we'll set it equal to let's
02:53 - just keep pop by 250 health because
02:55 - heroes always have more health than
02:57 - their enemies and then the int health
03:00 - when the object when pop is created will
03:04 - set into health equal to start health
03:10 - okay so now we have our start health
03:13 - that we created so come back into form
03:15 - or not vb and we want to set here about
03:20 - health to hero dot start health so it's
03:24 - going to set it back to the default
03:26 - starting health let's see here oh yes
03:33 - and because we're using a shared
03:35 - variable what we're going to need to do
03:38 - is type popeye not start health because
03:41 - it's shed and it's the same through all
03:43 - popeye objects we're just going to use
03:45 - popeye here instead of our single object
03:47 - so come down here to update popeye
03:50 - health let's just make sure everything's
03:53 - okay so now we can do is we can do that
03:57 - for the enemy now because all of these
03:59 - other classes inherit from enemy we only
04:01 - need to make it once so we'll come down
04:05 - here and we'll say
04:12 - public and I got to zoom in some so
04:17 - public shared and we will do start
04:22 - health as integer and we'll give our
04:26 - enemies 100 health and then whenever the
04:32 - constructor is created for our enemy we
04:34 - can just set the int health equal to
04:36 - start health so this uses in direction
04:40 - so that we cannot will need to change
04:41 - one value to change a whole bunch of
04:46 - values in our program so let me just fix
04:49 - this here it's not what I wanted we'll
04:54 - put it up here in the top okay so we'll
04:56 - come back to form one BB and whenever we
04:59 - update the enemy health let's just make
05:01 - sure everything's okay okay so under
05:03 - button attack what we want to do is
05:08 - we've got our spinach so progress bar
05:16 - intermediate values going to be equal to
05:17 - zero okay so we need to go to generate
05:20 - enemy so whenever we generate the enemy
05:26 - what we want to do is set the progress
05:31 - bar so we've got progress of our enemy
05:35 - dot value equals current animal health
05:37 - so we can just set that to default
05:40 - health or start health
05:48 - and because we are using a shared
05:50 - variable we need to make this enemy dot
05:58 - start health let's see here aha we need
06:06 - to import the enemy's library so that we
06:08 - can use that so now that we've imported
06:14 - the enemy's library we do not need this
06:18 - right here so we can just go ahead and
06:20 - remove that so we've got enemy dot star
06:25 - health and we'll do that for each one of
06:26 - these so we'll just type enemy dot start
06:37 - health and then enemy dot start health
06:46 - okay so see here everything seems to be
06:52 - working fine so let's go ahead and run
06:57 - this
07:01 - and we can attack
07:08 - okay sorry about right sorry about that
07:10 - right there actually had an error which
07:13 - was a simple fix you just need to come
07:15 - over here to your form one select the
07:18 - progress bar under popeye and you need
07:22 - to set the maximum to 250 which is the
07:25 - maximum health that pop i can have so
07:29 - we'll go ahead and run this we're going
07:31 - to attack you can see pop I guess attack
07:34 - back we can use spinach and everything
07:37 - works the way you would think and if
07:40 - Popeye self gets to zero then it will
07:42 - say that he's dead because it throws a
07:44 - new exception go ahead put this code in
07:47 - if you already haven't you can change
07:49 - stuff around if you want make it look a
07:51 - little better at stuff and then once
07:53 - you've done that go ahead and move on to
07:55 - the next tutorial

Cleaned transcript:

hello youtube sam here from youtube.com slash on live gamer for the new boston and in this tutorial we're going to continue working on our game now if you remember from the previous tutorial we added the health monitor at the bottom so that the user can see the current health of their enemy and popeye so that they don't just have to rely on the progress bar they can see a little bit more precise amount but if you remember if the health gets down to zero which would technically mean that Popeye is dead it will not say that he's dead because Popeye I mean the value of a progress bar can be set to zero without an error occurring so what we can do is whenever the enemy attacks it's going to try to update the Popeye health so we'll come down here to update Popeye health and it's going to set the value to the hero health and so what we're going to do is we will type if he wrote health equals zero then what we want to do we want to throw a new exception so if it's equal to zero we're just going to throw our own exception because this will not actually I'm create an exception itself so we're going to throw our own and this try statement is going to catch that exception and it's going to set the value to zero and say the popeyes lost so the pop I cannot still be alive with zero hell now you can see here that whenever we set the hero health to 100 if we're actually using a number here so if we ever wanted to go through and change the starting health of the hero we'd have to go and find every single instance of 100 and change it manually so what we can do is go into Popeye and now these things that I'm showing you guys they may seem like I'm in the program but what you got to learn is that you got to think through things that you can make your code better or make it easier for the user to use your program you just got to think about those things that be able to find them and hopefully you guys are learning how to do this as we go through these tutorials so we'll come over here and when we will create a variable so we'll make it public and shared because it's going to be the same for all popeyes and we don't want to waste memory by creating multiple instances of it and we'll just call it start health as integer and we'll set it equal to let's just keep pop by 250 health because heroes always have more health than their enemies and then the int health when the object when pop is created will set into health equal to start health okay so now we have our start health that we created so come back into form or not vb and we want to set here about health to hero dot start health so it's going to set it back to the default starting health let's see here oh yes and because we're using a shared variable what we're going to need to do is type popeye not start health because it's shed and it's the same through all popeye objects we're just going to use popeye here instead of our single object so come down here to update popeye health let's just make sure everything's okay so now we can do is we can do that for the enemy now because all of these other classes inherit from enemy we only need to make it once so we'll come down here and we'll say public and I got to zoom in some so public shared and we will do start health as integer and we'll give our enemies 100 health and then whenever the constructor is created for our enemy we can just set the int health equal to start health so this uses in direction so that we cannot will need to change one value to change a whole bunch of values in our program so let me just fix this here it's not what I wanted we'll put it up here in the top okay so we'll come back to form one BB and whenever we update the enemy health let's just make sure everything's okay okay so under button attack what we want to do is we've got our spinach so progress bar intermediate values going to be equal to zero okay so we need to go to generate enemy so whenever we generate the enemy what we want to do is set the progress bar so we've got progress of our enemy dot value equals current animal health so we can just set that to default health or start health and because we are using a shared variable we need to make this enemy dot start health let's see here aha we need to import the enemy's library so that we can use that so now that we've imported the enemy's library we do not need this right here so we can just go ahead and remove that so we've got enemy dot star health and we'll do that for each one of these so we'll just type enemy dot start health and then enemy dot start health okay so see here everything seems to be working fine so let's go ahead and run this and we can attack okay sorry about right sorry about that right there actually had an error which was a simple fix you just need to come over here to your form one select the progress bar under popeye and you need to set the maximum to 250 which is the maximum health that pop i can have so we'll go ahead and run this we're going to attack you can see pop I guess attack back we can use spinach and everything works the way you would think and if Popeye self gets to zero then it will say that he's dead because it throws a new exception go ahead put this code in if you already haven't you can change stuff around if you want make it look a little better at stuff and then once you've done that go ahead and move on to the next tutorial
