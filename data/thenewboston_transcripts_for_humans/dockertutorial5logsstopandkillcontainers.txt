With timestamps:

00:00 - alrighty guys welcome back to another
00:02 - video and in this one we're going to be
00:04 - covering how to view logs
00:06 - how to stop and how to kill containers
00:09 - not as violent as it sounds
00:11 - but that's what we have to look forward
00:12 - to but for now let's just go ahead and
00:15 - jump into how to view
00:16 - logs so typically these are going to be
00:19 - like server logs
00:20 - errors you're going to be looking at but
00:22 - we don't have any of those fancy
00:24 - server schmervers set up right now so
00:27 - we'll just make some fake logs real
00:29 - quick and we will do that using
00:31 - docker container and we're going to
00:33 - create a very simple
00:35 - busy box container and we'll just run ls
00:38 - is the default command so we're going to
00:40 - be listing out
00:42 - the contents of a directory again these
00:45 - will just simulate
00:46 - fake logs for right now just so we have
00:47 - something in the view on the screen
00:49 - so what we want to do is copy this
00:51 - container id and then we can run docker
00:53 - container start and ra now before i hit
00:57 - enter
00:58 - and it actually starts this container i
01:01 - wanna point out one thing
01:02 - in the last video what i did is whenever
01:05 - i wanted to start it
01:06 - i included that little dash a flag
01:09 - right in between these little keywords
01:12 - right here the start and the id
01:14 - now i did that because i said that dash
01:16 - a flag attaches the output of this
01:18 - container
01:20 - which is going to be the contents
01:21 - displayed from this ls command
01:23 - right in the terminal but now when i
01:26 - exclude that dash a
01:27 - and i run this command anyways we just
01:29 - get back the id
01:30 - in okay even though ls was the default
01:34 - command
01:35 - we didn't see that output again like i
01:37 - said because i excluded that dash a
01:40 - so this is going to simulate the logs
01:42 - now what if we actually want to go back
01:43 - and view
01:44 - the output well the first thing you need
01:47 - is
01:48 - the id of your container which you're
01:49 - trying to view the logs for
01:51 - and very simple docker container
01:55 - i want to view the logs for this
01:58 - container id
01:59 - very simple command hit enter and there
02:01 - you go
02:02 - so again like i said these logs are
02:04 - typically going to be error files
02:06 - warnings something more informational
02:09 - but for now
02:10 - to learn the logs command it's a fine
02:12 - example now the next concept i want to
02:14 - go over is how to stop
02:16 - and how to kill a container and the
02:18 - slight difference between either one
02:21 - now in order to understand this concept
02:23 - we actually need a container
02:25 - that runs a little bit longer than we
02:27 - have seen our previous containers run
02:29 - and that is because of this we know
02:32 - whenever we create
02:33 - container that just does something
02:34 - simple like list out the contents of a
02:36 - directory
02:37 - it basically starts right up it prints
02:40 - something on the screen and then it just
02:41 - exits right away
02:43 - well that's uh cool for those examples
02:46 - but
02:46 - whenever i'm teaching you guys how to
02:47 - stop and kill a container we need
02:50 - something longer to run in the
02:51 - background so it kind of emulates an
02:53 - actual server
02:54 - so instead of just listing stuff out on
02:56 - the screen since that's just gonna
02:58 - exit right away we'll do something
03:00 - longer and actually let me
03:02 - show you guys what's going on we're
03:04 - gonna stick a process called ping in
03:05 - there
03:06 - and we can put ping google.com and what
03:10 - happens here
03:10 - is it just starts um going to google.com
03:13 - server and saying are you online
03:15 - are you online are you online and it's
03:18 - just a process that's a little bit
03:19 - longer running
03:20 - so we can keep our container living for
03:22 - a longer amount of time so i can
03:24 - demonstrate these examples
03:26 - so in order to do that i'm just going to
03:27 - create a container
03:29 - we can use busybox as our image
03:33 - and for the default command instead of
03:34 - ls since that's just going to terminate
03:36 - right away
03:37 - we can throw something called ping
03:40 - google in there and then whenever we
03:42 - start it that container is going to be
03:43 - running
03:44 - until we learn how to stop or kill it
03:46 - which is the entire point
03:48 - of this little section right here so i'm
03:50 - going to create it
03:51 - and remember it's not actually hitting
03:54 - google server
03:55 - right now not until we start it so let's
03:58 - go ahead and start it right now by
03:59 - copying
04:00 - the id and do docker container
04:03 - start and okay so right now
04:07 - it's started and in the background it's
04:09 - hitting google just like we saw
04:10 - are you online are you online are you
04:12 - online and we can actually verify that
04:15 - by running
04:16 - docker container lsa and seeing okay
04:19 - yes indeed the status
04:23 - was created 50 seconds ago and it is up
04:25 - which means it's currently running
04:27 - right now okay so what i want to do is i
04:31 - want to stop
04:32 - this process like okay we uh hit google
04:35 - enough let's just go ahead and stop it
04:37 - by running docker
04:38 - container stop and put the id in
04:42 - now what i want you to do is listen to
04:44 - my keyboard whenever i hit
04:46 - the enter or return button so check it
04:48 - out
04:50 - all right i just hit it and
04:54 - seems to be taken a little bit longer
04:56 - than anticipated
04:58 - all right that's interesting it seemed
05:01 - it
05:02 - took around 10 seconds now in fact that
05:05 - command took
05:06 - exactly 10 seconds now why is that
05:09 - well the ping command and this is a fun
05:12 - fact is that
05:13 - it's one of the programs that actually
05:15 - ignores
05:17 - these stop commands now typically what
05:19 - happens
05:20 - is that whenever docker issues a stop
05:22 - command to this container
05:24 - that container does some cleanup now
05:27 - if you wrote any applications and you
05:30 - did any cleanup functionality
05:31 - it just gives a chance for the
05:33 - application to run any
05:35 - processes that are necessary before it
05:37 - just shuts down immediately since that
05:39 - may
05:39 - mess up a few things now i say this
05:41 - because since
05:43 - this pink man just ignores these stop
05:45 - commands by docker
05:46 - what docker does is whenever
05:49 - a process is ignoring these commands
05:51 - whenever you're trying to stop
05:53 - the container is it gives it 10 seconds
05:55 - to clean up max
05:56 - and if it's still not stopped after that
05:59 - 10 seconds
06:00 - docker is just gonna kill it immediately
06:02 - so you can think of it like
06:04 - stop is a command that docker issues to
06:07 - say
06:07 - please can you stop i'm asking you
06:10 - nicely and i'm going to give you 10
06:11 - seconds
06:13 - all right so why do i say that well if
06:15 - we
06:16 - go ahead and do docker container start
06:20 - and start that same container and we can
06:23 - see docker container
06:27 - all right so now that same ping one is
06:29 - running status up
06:31 - there you go now instead of just stop
06:34 - what i'm gonna do this time
06:36 - is kill it with docker now
06:39 - killing a container docker
06:42 - docker isn't gonna be so polite in this
06:44 - case instead of
06:45 - saying will you please shut down i'm
06:48 - going to give you 10 seconds
06:49 - to kind of prepare do all that nice
06:51 - stuff
06:52 - docker kill is a little bit more cut
06:54 - throughout where whenever i run this
06:56 - it's just going to kill it right away it
06:58 - doesn't really care about ping shutdown
07:00 - process whatever it's like yo you need
07:02 - to go
07:02 - boom bullet in the head if containers
07:05 - had heads that is of course
07:07 - but anyways that's the difference
07:09 - between stop and kill
07:10 - and also why whenever you run the stop
07:13 - command
07:13 - you may see some containers hang for up
07:16 - to 10 seconds
07:18 - so again a lot of information but that's
07:20 - the basics of how to view logs
07:22 - the difference between stopping and
07:23 - killing a container whenever you want to
07:25 - bring it down
07:26 - so thank you guys for watching don't
07:28 - forget to subscribe and i'll see you
07:29 - guys in the next video

Cleaned transcript:

alrighty guys welcome back to another video and in this one we're going to be covering how to view logs how to stop and how to kill containers not as violent as it sounds but that's what we have to look forward to but for now let's just go ahead and jump into how to view logs so typically these are going to be like server logs errors you're going to be looking at but we don't have any of those fancy server schmervers set up right now so we'll just make some fake logs real quick and we will do that using docker container and we're going to create a very simple busy box container and we'll just run ls is the default command so we're going to be listing out the contents of a directory again these will just simulate fake logs for right now just so we have something in the view on the screen so what we want to do is copy this container id and then we can run docker container start and ra now before i hit enter and it actually starts this container i wanna point out one thing in the last video what i did is whenever i wanted to start it i included that little dash a flag right in between these little keywords right here the start and the id now i did that because i said that dash a flag attaches the output of this container which is going to be the contents displayed from this ls command right in the terminal but now when i exclude that dash a and i run this command anyways we just get back the id in okay even though ls was the default command we didn't see that output again like i said because i excluded that dash a so this is going to simulate the logs now what if we actually want to go back and view the output well the first thing you need is the id of your container which you're trying to view the logs for and very simple docker container i want to view the logs for this container id very simple command hit enter and there you go so again like i said these logs are typically going to be error files warnings something more informational but for now to learn the logs command it's a fine example now the next concept i want to go over is how to stop and how to kill a container and the slight difference between either one now in order to understand this concept we actually need a container that runs a little bit longer than we have seen our previous containers run and that is because of this we know whenever we create container that just does something simple like list out the contents of a directory it basically starts right up it prints something on the screen and then it just exits right away well that's uh cool for those examples but whenever i'm teaching you guys how to stop and kill a container we need something longer to run in the background so it kind of emulates an actual server so instead of just listing stuff out on the screen since that's just gonna exit right away we'll do something longer and actually let me show you guys what's going on we're gonna stick a process called ping in there and we can put ping google.com and what happens here is it just starts um going to google.com server and saying are you online are you online are you online and it's just a process that's a little bit longer running so we can keep our container living for a longer amount of time so i can demonstrate these examples so in order to do that i'm just going to create a container we can use busybox as our image and for the default command instead of ls since that's just going to terminate right away we can throw something called ping google in there and then whenever we start it that container is going to be running until we learn how to stop or kill it which is the entire point of this little section right here so i'm going to create it and remember it's not actually hitting google server right now not until we start it so let's go ahead and start it right now by copying the id and do docker container start and okay so right now it's started and in the background it's hitting google just like we saw are you online are you online are you online and we can actually verify that by running docker container lsa and seeing okay yes indeed the status was created 50 seconds ago and it is up which means it's currently running right now okay so what i want to do is i want to stop this process like okay we uh hit google enough let's just go ahead and stop it by running docker container stop and put the id in now what i want you to do is listen to my keyboard whenever i hit the enter or return button so check it out all right i just hit it and seems to be taken a little bit longer than anticipated all right that's interesting it seemed it took around 10 seconds now in fact that command took exactly 10 seconds now why is that well the ping command and this is a fun fact is that it's one of the programs that actually ignores these stop commands now typically what happens is that whenever docker issues a stop command to this container that container does some cleanup now if you wrote any applications and you did any cleanup functionality it just gives a chance for the application to run any processes that are necessary before it just shuts down immediately since that may mess up a few things now i say this because since this pink man just ignores these stop commands by docker what docker does is whenever a process is ignoring these commands whenever you're trying to stop the container is it gives it 10 seconds to clean up max and if it's still not stopped after that 10 seconds docker is just gonna kill it immediately so you can think of it like stop is a command that docker issues to say please can you stop i'm asking you nicely and i'm going to give you 10 seconds all right so why do i say that well if we go ahead and do docker container start and start that same container and we can see docker container all right so now that same ping one is running status up there you go now instead of just stop what i'm gonna do this time is kill it with docker now killing a container docker docker isn't gonna be so polite in this case instead of saying will you please shut down i'm going to give you 10 seconds to kind of prepare do all that nice stuff docker kill is a little bit more cut throughout where whenever i run this it's just going to kill it right away it doesn't really care about ping shutdown process whatever it's like yo you need to go boom bullet in the head if containers had heads that is of course but anyways that's the difference between stop and kill and also why whenever you run the stop command you may see some containers hang for up to 10 seconds so again a lot of information but that's the basics of how to view logs the difference between stopping and killing a container whenever you want to bring it down so thank you guys for watching don't forget to subscribe and i'll see you guys in the next video
