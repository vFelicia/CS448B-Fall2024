With timestamps:

00:00 - hi this is Alex from PHP academy' and
00:02 - this is another video tutorial for the
00:04 - new Boston now we're going to be looking
00:07 - at PHP cookies now you've probably heard
00:09 - of cookies before maybe if you if you've
00:13 - looked at your browser settings I mean
00:15 - I'm sure everyone knows what cookies are
00:17 - but how do we actually use them and how
00:21 - useful are they in everyday programming
00:23 - sort of on websites now let me just
00:26 - explain quickly what our cookie is a
00:28 - cookie is a piece of data or if you like
00:31 - or a file that's stored with specific
00:34 - information and it's unique to you and
00:37 - the website that you are viewing so if
00:40 - you view on your browser a website that
00:44 - set a specific cookie when you access
00:47 - that website depending on the expiration
00:50 - time of the cookie that piece of data
00:53 - will be relayed so it will be relayed
00:55 - from your computer to the website so
00:59 - this way websites can store data about
01:03 - users or about your specific preferences
01:08 - on that website and it can be stored on
01:11 - your computer for later access so how do
01:15 - we go about setting a cookie and why are
01:17 - they useful now some of the reasons that
01:19 - they can be useful for is just literally
01:24 - storing data that needs to be used at a
01:27 - later date but for a long expiration
01:30 - time you might have already looked to
01:31 - PHP sessions but cookies are going to
01:34 - allow you to set a much longer
01:36 - expiration date so sessions are closed
01:38 - as soon as your browser is closed and
01:40 - the connection is shut with the server
01:42 - however with cookies we can store as a
01:45 - cookie for years perhaps so to set a
01:49 - cookie we use the setcookie function and
01:52 - this takes a few arguments I'm not going
01:54 - to go through every argument but I'm
01:55 - going to go through three three main
01:57 - arguments and the three main arguments
02:01 - we're going to look at are first of all
02:03 - the name of the cookie that you're
02:04 - setting then the value and then the
02:07 - expiration date so the time in which the
02:10 - cookie is going to
02:11 - be valid for now remember when we looked
02:13 - at sessions if you have looked at
02:15 - sessions you did something similar to
02:19 - this we we had the name of the session
02:20 - here and then the value here or rather
02:24 - this is going to be called the key the
02:25 - key and the value now it with set
02:28 - cookies we just use this one function to
02:30 - set the cookie the name of its here so I
02:33 - could say username here is going to be
02:36 - the value so I'm going to say Alex now
02:38 - the expiration time is a bit different
02:40 - you need to think about this logically
02:41 - and it's by default in seconds so if for
02:44 - example I was to set a session cookie
02:47 - with the value of 60 here as an argument
02:49 - that's going to make this cookie last
02:51 - for 60 seconds and after that is no
02:54 - longer going to be valid so we can test
02:57 - this I'm going to create a session
02:59 - cookie with the value of 5 now what
03:03 - happens when I want to we've set this in
03:06 - this page so if we come and refresh that
03:09 - should be okay ok so we've set the
03:11 - cookie in this page now what happens
03:13 - when we want to retrieve this value in
03:15 - view now within 5 seconds this will
03:17 - already expired so we're going to have
03:19 - to reset it in a minute all we do is we
03:22 - say echo and then what we do is we use
03:27 - dollar underscore cookie so much like
03:29 - session and then the the name of the
03:31 - cookie so this is user name in this case
03:33 - so user name and that's basically it we
03:36 - haven't had to declare anything anywhere
03:37 - else set what we have but we haven't had
03:39 - to set anything anywhere and the same
03:41 - that we did with sessions with session
03:43 - by the write with session start so
03:47 - there's a lot more freely used on your
03:49 - page we also don't need to kill ok well
03:52 - we do need to kill a cookie at some
03:53 - point but this is done in a slightly
03:55 - different way two sessions so we're
03:58 - echoing cookie username now at the
04:00 - moment we shouldn't receive a value
04:02 - because the cookie does not exist
04:04 - because it the expiration times five
04:06 - seconds so if I go back to set again
04:09 - here so in this page we can reset or
04:15 - refresh rather and then what we can do
04:17 - is before the five seconds are over we
04:19 - can quickly come back to view all note
04:22 - may
04:22 - we just change that to ten set PHP so
04:28 - that's hopefully set the cookie and now
04:30 - interview dot PHP okay and it's not
04:32 - working
04:33 - so let's why that could be right okay so
04:40 - yeah okay so I've forgotten sort of a
04:42 - vital part of this and the point is that
04:45 - what we do is we in fact set a time
04:47 - stamp here and time stamps in PHP are
04:52 - basically and they're an amount of
04:55 - seconds from a specific date a comment
04:57 - what the date is it's it's somewhere in
04:59 - 1990 but there is another video on that
05:02 - so you can go and reference to that if
05:03 - you want so what we would do is to eat
05:06 - to access a time stamp originally we
05:08 - would use time equals timestamp
05:12 - whereas time now is just a variable that
05:15 - I've set I know sorry we would do time
05:18 - so we use the time function to grab a
05:20 - timestamp let's just have a look at that
05:23 - so so you can see see what we're looking
05:27 - at that's inset
05:33 - Echo's out out okay so we have our
05:37 - timestamp here which is a long long
05:39 - number now what we do is when we set a
05:42 - cookie we set it from the current time
05:46 - so we can use this function within this
05:49 - function here but then we add on the
05:51 - amount of seconds we want for it to
05:54 - expire so then what can happen is we can
05:56 - do a check it will automatically do it
05:58 - for us but it will check against the
06:00 - timestamp plus 10 so we'll check 10 min
06:03 - 10 seconds from now so apologies for
06:07 - getting that wrong before but it's just
06:09 - one minor thing I forgot so let's test
06:12 - this out again so so we've got setup PHP
06:17 - let's refresh now the cookie has been
06:20 - set we come into view dot PHP and you
06:22 - can see that it's been set now as I'm
06:25 - talking to you the eventually the cookie
06:29 - is going to expire because the timestamp
06:31 - is going to be less than the current day
06:33 - and so if i refresh again I think that
06:35 - should go yeah so now our cookie has
06:38 - expired
06:38 - so you can understand now the use of
06:41 - this for login systems where you say you
06:43 - know you might log your user in default
06:45 - by an hour but you might have a checkbox
06:48 - to say keep me logged in for you know
06:51 - keep me logged in or something and then
06:53 - that would keep the user logged in for
06:54 - maybe a month two months you could set
06:56 - it up to sort of a period of a year if
06:59 - you wanted to say constantly keep them
07:01 - logged in so that's basically how
07:04 - cookies are useful but remember the
07:06 - cookies are stored on the user's
07:08 - computer so they're dangerous to use for
07:11 - things like sensitive data that you
07:14 - don't want the user to be able to change
07:16 - for example if you would have a shopping
07:18 - cart and you have the total set in a
07:20 - cookie you don't necessarily want this
07:23 - unless you're using some form of
07:25 - encryption or some other way to or some
07:29 - database usage to store this where the
07:31 - user can't make the change so this is
07:33 - how we do it and that's basically a
07:37 - sessions and/or cookies in PHP

Cleaned transcript:

hi this is Alex from PHP academy' and this is another video tutorial for the new Boston now we're going to be looking at PHP cookies now you've probably heard of cookies before maybe if you if you've looked at your browser settings I mean I'm sure everyone knows what cookies are but how do we actually use them and how useful are they in everyday programming sort of on websites now let me just explain quickly what our cookie is a cookie is a piece of data or if you like or a file that's stored with specific information and it's unique to you and the website that you are viewing so if you view on your browser a website that set a specific cookie when you access that website depending on the expiration time of the cookie that piece of data will be relayed so it will be relayed from your computer to the website so this way websites can store data about users or about your specific preferences on that website and it can be stored on your computer for later access so how do we go about setting a cookie and why are they useful now some of the reasons that they can be useful for is just literally storing data that needs to be used at a later date but for a long expiration time you might have already looked to PHP sessions but cookies are going to allow you to set a much longer expiration date so sessions are closed as soon as your browser is closed and the connection is shut with the server however with cookies we can store as a cookie for years perhaps so to set a cookie we use the setcookie function and this takes a few arguments I'm not going to go through every argument but I'm going to go through three three main arguments and the three main arguments we're going to look at are first of all the name of the cookie that you're setting then the value and then the expiration date so the time in which the cookie is going to be valid for now remember when we looked at sessions if you have looked at sessions you did something similar to this we we had the name of the session here and then the value here or rather this is going to be called the key the key and the value now it with set cookies we just use this one function to set the cookie the name of its here so I could say username here is going to be the value so I'm going to say Alex now the expiration time is a bit different you need to think about this logically and it's by default in seconds so if for example I was to set a session cookie with the value of 60 here as an argument that's going to make this cookie last for 60 seconds and after that is no longer going to be valid so we can test this I'm going to create a session cookie with the value of 5 now what happens when I want to we've set this in this page so if we come and refresh that should be okay ok so we've set the cookie in this page now what happens when we want to retrieve this value in view now within 5 seconds this will already expired so we're going to have to reset it in a minute all we do is we say echo and then what we do is we use dollar underscore cookie so much like session and then the the name of the cookie so this is user name in this case so user name and that's basically it we haven't had to declare anything anywhere else set what we have but we haven't had to set anything anywhere and the same that we did with sessions with session by the write with session start so there's a lot more freely used on your page we also don't need to kill ok well we do need to kill a cookie at some point but this is done in a slightly different way two sessions so we're echoing cookie username now at the moment we shouldn't receive a value because the cookie does not exist because it the expiration times five seconds so if I go back to set again here so in this page we can reset or refresh rather and then what we can do is before the five seconds are over we can quickly come back to view all note may we just change that to ten set PHP so that's hopefully set the cookie and now interview dot PHP okay and it's not working so let's why that could be right okay so yeah okay so I've forgotten sort of a vital part of this and the point is that what we do is we in fact set a time stamp here and time stamps in PHP are basically and they're an amount of seconds from a specific date a comment what the date is it's it's somewhere in 1990 but there is another video on that so you can go and reference to that if you want so what we would do is to eat to access a time stamp originally we would use time equals timestamp whereas time now is just a variable that I've set I know sorry we would do time so we use the time function to grab a timestamp let's just have a look at that so so you can see see what we're looking at that's inset Echo's out out okay so we have our timestamp here which is a long long number now what we do is when we set a cookie we set it from the current time so we can use this function within this function here but then we add on the amount of seconds we want for it to expire so then what can happen is we can do a check it will automatically do it for us but it will check against the timestamp plus 10 so we'll check 10 min 10 seconds from now so apologies for getting that wrong before but it's just one minor thing I forgot so let's test this out again so so we've got setup PHP let's refresh now the cookie has been set we come into view dot PHP and you can see that it's been set now as I'm talking to you the eventually the cookie is going to expire because the timestamp is going to be less than the current day and so if i refresh again I think that should go yeah so now our cookie has expired so you can understand now the use of this for login systems where you say you know you might log your user in default by an hour but you might have a checkbox to say keep me logged in for you know keep me logged in or something and then that would keep the user logged in for maybe a month two months you could set it up to sort of a period of a year if you wanted to say constantly keep them logged in so that's basically how cookies are useful but remember the cookies are stored on the user's computer so they're dangerous to use for things like sensitive data that you don't want the user to be able to change for example if you would have a shopping cart and you have the total set in a cookie you don't necessarily want this unless you're using some form of encryption or some other way to or some database usage to store this where the user can't make the change so this is how we do it and that's basically a sessions and/or cookies in PHP
