With timestamps:

00:00 - so if the query is a load of rubbish and
00:02 - doesn't make sense even if it does
00:05 - return it wouldn't return because it
00:06 - would fail but query success doesn't
00:09 - necessarily mean it's returned any rows
00:11 - it just means that it's structured
00:14 - properly and its end is run correctly so
00:16 - let's just test this first of all you'll
00:19 - see that we've got all query failed okay
00:21 - so let's see what could be wrong
00:28 - okay I've included this extra comma here
00:31 - which I didn't mean to
00:33 - so now let's refresh query success but
00:38 - now you can obviously see if we do
00:39 - something like an extra comma or say we
00:43 - don't include an extra apostrophe on
00:47 - there we'll return a query failed so
00:50 - you'll know now if your query has worked
00:52 - or not
00:53 - what you can also do is if the query has
00:56 - failed you can return the specific error
00:59 - so what we can do is echo MySQL and
01:05 - error and that is of query run so what
01:16 - we can do is we can refresh and this is
01:19 - a success however if we do something
01:21 - like add an extra comma in and we
01:24 - refresh we get this my sq oh no not
01:27 - valid okay yeah sorry umm
01:39 - there we go so you don't need to supply
01:42 - an argument in here it's just my skew
01:44 - our error and what this will do is this
01:46 - will pick up the error from the last
01:48 - query run so else echo MySQL error now
01:53 - let's read this you have an error in
01:55 - your SQL syntax check the manual that
01:57 - corresponds near corresponds to your
02:01 - MySQL server version for the right
02:02 - syntax to use near from food order by ID
02:06 - so that's the rest of it so what we can
02:09 - determine is just before from food we've
02:12 - got this comma so we can delete that we
02:15 - can refresh and our queries worked so
02:18 - now that our queries worked we need to
02:20 - grab the data of our query and display
02:24 - it so the best way to do this would be
02:26 - to use a loop because we have multiple
02:30 - rows to return if you look we've got
02:32 - pizza and salad query is just going to
02:35 - return if you would just echo out the
02:37 - values it's just going to return one of
02:39 - the rows but what we want to do is we
02:41 - want to return all of the rows so we do
02:44 - this using a while loop and inside our
02:49 - condition for the while loop we need to
02:50 - reassign avere or we need to assign a
02:53 - variable and we need to create an
02:56 - associative array from our results now
02:59 - remember an associative array and
03:01 - contains a key which is in a textual
03:04 - form and a value in this case a little
03:09 - and an associative array return from
03:12 - this the keys will be ID food calories
03:16 - and healthy and unhealthy or in the case
03:19 - of our query we're just selecting food
03:21 - and calories so our associative array
03:23 - will contain the key food and calories
03:27 - and the value will be each one of these
03:29 - so what will be this one first then this
03:32 - one so we can then return them in a loop
03:35 - so what I want to do is I want to say
03:37 - while row equals mysql fetch
03:44 - it's said a sock I guess but we're
03:48 - actually this is actually short for
03:49 - associative so my SQL fetch associative
03:52 - and we reference the query that's been
03:55 - run so we've executed our query here
03:59 - here what we're doing is grabbing an
04:01 - associative array of our data and
04:03 - assigning it to the array and it's named
04:07 - row okay well you can call this query
04:10 - row so query row is now an array because
04:16 - we've grabbed our data from our query as
04:19 - an associative array and put it into
04:21 - this variable okay so now let's see what
04:24 - happens when we run the code and it will
04:26 - be nothing so nothing's happened so we
04:29 - haven't failed but we've created this
04:31 - while loop in which we can echo out the
04:33 - data from each row now how do we do this
04:36 - usually for best practice I reassign the
04:40 - variables so what I do is I say food
04:42 - equals and I own we need to now take an
04:47 - element of the array so we need to say
04:49 - query row food and I'll do calories and
04:56 - then I'll explain this okay so we've got
05:04 - a variable now called food and we've got
05:07 - a variable called calories and they're
05:10 - both equal to the reference of this
05:13 - array remember using square brackets and
05:15 - because it's an associative array array
05:18 - we're taking the value from the field
05:20 - name food and the field name calories so
05:23 - this food here and this calories here
05:25 - correspond to this and that the first
05:29 - time around this loop food is going to
05:32 - equal pizza and calories is going to
05:36 - equal 1,000 the second time around this
05:40 - loop remember cuz we're using a while
05:42 - loop food is going to be equal to salad
05:46 - and then calories is going to be equal
05:49 - to 200 so all we do now
05:53 - let's run it first to make sure we don't
05:55 - have any errors
05:57 - always good to check as we go along note
05:59 - no errors returned so let's say echo
06:03 - food a break in fact no we can say food
06:10 - has
06:15 - calories so we're just basically
06:18 - concatenated on text between our
06:20 - variables so and then we can break down
06:25 - so the first time around the loop we're
06:28 - going to say food has calories calories
06:31 - so this will be pizza has 1000 calories
06:34 - the second time around the loop we say
06:37 - salad has 200 calories so let's just
06:40 - test it out and see if everything's
06:41 - working okay so now for the first time
06:46 - that you can you can see that the query
06:47 - has returned the data we're looping
06:50 - through each of the rows that have been
06:52 - returned by our query and we're echoing
06:55 - out the results so now essentially what
06:58 - we've done is taken data from our
07:00 - database via PHP now what we can do is
07:05 - change our query round slightly so we
07:08 - can retrieve different information so
07:12 - for example at the moment this is pizza
07:14 - first then salad now what happens if I
07:17 - want to order it by ID as we've already
07:20 - seen I want salad to come first then
07:22 - piece I want the last added row to come
07:25 - first so that's simple we just modify
07:27 - our query up here order by ID descending
07:34 - so we're ordering in descending value
07:36 - let's come back to our PHP page and
07:39 - refresh and you can see oh no we've got
07:41 - an error so okay order by oh yes sorry
07:47 - of okay I've duplicated this we've
07:49 - ordered by ID but we want to order now
07:52 - by descending so order by your ID
07:54 - descending let's refresh

Cleaned transcript:

so if the query is a load of rubbish and doesn't make sense even if it does return it wouldn't return because it would fail but query success doesn't necessarily mean it's returned any rows it just means that it's structured properly and its end is run correctly so let's just test this first of all you'll see that we've got all query failed okay so let's see what could be wrong okay I've included this extra comma here which I didn't mean to so now let's refresh query success but now you can obviously see if we do something like an extra comma or say we don't include an extra apostrophe on there we'll return a query failed so you'll know now if your query has worked or not what you can also do is if the query has failed you can return the specific error so what we can do is echo MySQL and error and that is of query run so what we can do is we can refresh and this is a success however if we do something like add an extra comma in and we refresh we get this my sq oh no not valid okay yeah sorry umm there we go so you don't need to supply an argument in here it's just my skew our error and what this will do is this will pick up the error from the last query run so else echo MySQL error now let's read this you have an error in your SQL syntax check the manual that corresponds near corresponds to your MySQL server version for the right syntax to use near from food order by ID so that's the rest of it so what we can determine is just before from food we've got this comma so we can delete that we can refresh and our queries worked so now that our queries worked we need to grab the data of our query and display it so the best way to do this would be to use a loop because we have multiple rows to return if you look we've got pizza and salad query is just going to return if you would just echo out the values it's just going to return one of the rows but what we want to do is we want to return all of the rows so we do this using a while loop and inside our condition for the while loop we need to reassign avere or we need to assign a variable and we need to create an associative array from our results now remember an associative array and contains a key which is in a textual form and a value in this case a little and an associative array return from this the keys will be ID food calories and healthy and unhealthy or in the case of our query we're just selecting food and calories so our associative array will contain the key food and calories and the value will be each one of these so what will be this one first then this one so we can then return them in a loop so what I want to do is I want to say while row equals mysql fetch it's said a sock I guess but we're actually this is actually short for associative so my SQL fetch associative and we reference the query that's been run so we've executed our query here here what we're doing is grabbing an associative array of our data and assigning it to the array and it's named row okay well you can call this query row so query row is now an array because we've grabbed our data from our query as an associative array and put it into this variable okay so now let's see what happens when we run the code and it will be nothing so nothing's happened so we haven't failed but we've created this while loop in which we can echo out the data from each row now how do we do this usually for best practice I reassign the variables so what I do is I say food equals and I own we need to now take an element of the array so we need to say query row food and I'll do calories and then I'll explain this okay so we've got a variable now called food and we've got a variable called calories and they're both equal to the reference of this array remember using square brackets and because it's an associative array array we're taking the value from the field name food and the field name calories so this food here and this calories here correspond to this and that the first time around this loop food is going to equal pizza and calories is going to equal 1,000 the second time around this loop remember cuz we're using a while loop food is going to be equal to salad and then calories is going to be equal to 200 so all we do now let's run it first to make sure we don't have any errors always good to check as we go along note no errors returned so let's say echo food a break in fact no we can say food has calories so we're just basically concatenated on text between our variables so and then we can break down so the first time around the loop we're going to say food has calories calories so this will be pizza has 1000 calories the second time around the loop we say salad has 200 calories so let's just test it out and see if everything's working okay so now for the first time that you can you can see that the query has returned the data we're looping through each of the rows that have been returned by our query and we're echoing out the results so now essentially what we've done is taken data from our database via PHP now what we can do is change our query round slightly so we can retrieve different information so for example at the moment this is pizza first then salad now what happens if I want to order it by ID as we've already seen I want salad to come first then piece I want the last added row to come first so that's simple we just modify our query up here order by ID descending so we're ordering in descending value let's come back to our PHP page and refresh and you can see oh no we've got an error so okay order by oh yes sorry of okay I've duplicated this we've ordered by ID but we want to order now by descending so order by your ID descending let's refresh
