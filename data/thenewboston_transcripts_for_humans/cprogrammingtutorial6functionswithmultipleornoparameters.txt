With timestamps:

00:00 - what is going on everybody welcome back
00:03 - to your sixth C++ tutorial and I know I
00:07 - have been gone for a while but I have
00:08 - been busy I have been on vacation and I
00:11 - have been working on my website which is
00:14 - finally up for all of you guys who have
00:16 - been telling me to make a website get
00:18 - all my videos organized and uh so
00:21 - anyways I've been listening to you guys
00:23 - I did it all of my videos are organized
00:25 - on my website the new boston.com I'll
00:27 - tell you about it later but for now we
00:29 - have to make some C Plus+ tutorials so
00:31 - if you've been watching my last
00:33 - tutorials you notice that a couple
00:35 - things are different first of all we
00:36 - have a new
00:37 - compiler I read the comments in my old
00:40 - videos about me using an old compiler
00:43 - and that it wasn't up to date and that's
00:46 - just because that old compiler is the
00:48 - one I grew up learning so I was familiar
00:51 - with it I love that compiler but since
00:54 - you guys want to up toate compiler I
00:55 - downloaded code blocks so I think that's
00:58 - the name of the compiler I'm using now
00:59 - supposed to supposed to be up toate you
01:01 - know a better C++ compiler another thing
01:04 - is I'm now using cin CN get instead of
01:09 - system pause and this pretty much does
01:11 - the same thing it waits for user input
01:13 - so your program just doesn't run it
01:15 - pauses it and allows you to look at it
01:18 - so the reason I was using system pause
01:20 - is whenever I first started teaching you
01:22 - guys about C++ none of this stuff made
01:26 - sense to you and system pause was the
01:28 - only thing you could look at and
01:29 - understand and it said this paused my
01:31 - system so instead of throwing everything
01:34 - at you at once I wanted to take
01:36 - everything in baby steps and that's why
01:40 - if you guys say all right why are you
01:42 - doing this instead of a better way of
01:44 - doing this it's because I just want to
01:46 - take everything in baby steps one step
01:48 - at a time so anyways that's my excuses
01:50 - for doing that but everything is fixed
01:53 - now so with that being said in the last
01:55 - tutorial we covered the basics of
01:58 - functions and how to use the functions
02:01 - that are built in to C++ already and we
02:04 - pretty much covered one type of function
02:06 - and this was a function that took one
02:08 - parameter or needed one piece of
02:10 - information in order to work but not all
02:14 - functions are like that some functions
02:16 - need more than one piece of information
02:18 - in order to work and some functions need
02:20 - no information at all you're saying all
02:23 - right how the heck does that work I'll
02:24 - show you in a second for example let's
02:26 - go ahead and get a variable name X or
02:30 - one guy left the comment double rainbow
02:34 - huh yeah I stole that joke from someone
02:35 - else on my other videos so I can't take
02:37 - credit for this but anyways we have this
02:40 - variable named Rainbow and we want to
02:42 - use the power of function so let's go
02:46 - ahead and set rainbow equal to p w and
02:50 - set it equal well let me guys let me
02:53 - tell you guys first what the power of
02:54 - function is whenever you do like 5 to
02:58 - the 3 power
03:00 - um I can't it's like five with a little
03:02 - three on the top right this means 5 * 5
03:06 - * 5 5 times itself three times so what
03:10 - is 5 * 5 * 5 well 5 * 5 that's 2 is 25 *
03:16 - the 3 one is 125 so saying all right so
03:20 - in order for us to use this function it
03:23 - obviously needs two numbers AKA two
03:27 - pieces of information the first one is
03:29 - the base and the second one is the
03:31 - exponent so how do we pass in two
03:34 - different numbers using the parameters
03:37 - well the first thing we do is type in
03:39 - any old number and this like we saw in
03:42 - the last tutorial this is how you pass
03:43 - in one piece of information but when you
03:45 - have more than one piece of information
03:47 - you need to pass in a function what you
03:49 - need to do is separate it with a comma
03:52 - and then add another number it doesn't
03:54 - matter if there's a space in there or
03:55 - not so might as well tighten that up so
03:57 - anyways if you have a function that
03:59 - takes two integers in this instance just
04:03 - go ahead and throw in your first one
04:04 - like normal and then add a comma and
04:06 - throw in your second one after that so
04:08 - anyways what I'm trying to say is
04:10 - anytime you need more than one piece of
04:13 - information for your function you need
04:15 - to separate them with commas and just to
04:17 - prove to you guys that this works let's
04:19 - go ahead and see out
04:23 - um
04:25 - rainbow and just go ahead and end that
04:27 - line and Yep looks pretty good so let's
04:30 - go ahead and build and run this and see
04:32 - what we get 125 and that's cuz 5 * 5 * 5
04:37 - is5 so that's how the power function
04:40 - works or you know using exponents so
04:43 - let's go ahead and delete this actually
04:45 - let's just go ahead and delete this and
04:47 - remember at the beginning the tutorial I
04:49 - was telling you guys some functions
04:51 - don't need any information at all and
04:53 - you guys are scratching your head be
04:55 - like what's the use of a function if
04:56 - doesn't need any information well I'll
04:58 - show you guys right here let's go ahead
05:00 - and make another function or another
05:02 - variable right now called Y and set this
05:05 - equal to y equals Rand and just put
05:09 - empty parentheses this function is not
05:12 - going to take any parameters and by the
05:13 - way Rand comes from C standard Library
05:18 - it's a c function so make sure you have
05:20 - this include or else it won't work so
05:22 - we're saying all right what is Rand and
05:25 - why the heck does it not need any
05:28 - parameters at all Rand is the function
05:30 - to generate a random number it's going
05:33 - to generate it in the scope of well we
05:36 - won't cover that now but just listen to
05:39 - this it's going to generate a random
05:42 - number so why would you pass it in a
05:44 - piece of information like five or 81 it
05:47 - doesn't need that information that would
05:48 - just be you generating your own random
05:51 - number that pops into your head we want
05:52 - the computer to generate it for us so
05:55 - therefore we don't give any information
05:57 - at all the computer is going to take
05:59 - care of of everything for us so let's go
06:01 - ahead and uh run this and go ahead leave
06:03 - a comment see what number you think this
06:05 - is go ahead don't cheat don't cheat all
06:09 - right now go ahead and run it and see if
06:10 - you're right 41 so if any of you mofos
06:14 - guess 41 congratulations you are the
06:18 - winner and uh give me a call I think I'm
06:20 - going to have you pick my Power Ball
06:21 - tickets next time so
06:23 - anyways random or excuse me
06:27 - functions sometimes take one person
06:29 - parameter they sometimes take multiple
06:32 - parameters in that case you separate
06:33 - them with commas and sometimes they
06:36 - don't take any parameter at all they
06:38 - just pretty much do something and don't
06:40 - need any information from the user or
06:43 - from the programmer or for anyone they
06:44 - just do it it's done with forget about
06:47 - it so anyways now that we have all of
06:51 - the functions covered and we understand
06:53 - how buil-in functions work in the next
06:55 - tutorial I'm going to be teaching you
06:57 - guys how to build your own custom
07:00 - functions so it's going to be awesome we
07:02 - are done with built-in functions for now
07:06 - um it's definitely a lot cooler and more
07:09 - useful building our own custom functions
07:12 - because then instead of you know using
07:14 - random numbers and Powers we can make
07:15 - these new functions do whatever the heck
07:17 - we want them to so I'm super excited but
07:20 - for now I'm going to go uh check eBay
07:22 - because I'm selling something on there
07:24 - and I want to you know see if I got any
07:27 - questions or anything thing but um
07:29 - all right I lied I'm just going to pound
07:31 - a few beers and then probably make
07:32 - another tutorial but thank you guys for
07:34 - watching don't forget to subscribe and
07:35 - I'll see you guys next time

Cleaned transcript:

what is going on everybody welcome back to your sixth C++ tutorial and I know I have been gone for a while but I have been busy I have been on vacation and I have been working on my website which is finally up for all of you guys who have been telling me to make a website get all my videos organized and uh so anyways I've been listening to you guys I did it all of my videos are organized on my website the new boston.com I'll tell you about it later but for now we have to make some C Plus+ tutorials so if you've been watching my last tutorials you notice that a couple things are different first of all we have a new compiler I read the comments in my old videos about me using an old compiler and that it wasn't up to date and that's just because that old compiler is the one I grew up learning so I was familiar with it I love that compiler but since you guys want to up toate compiler I downloaded code blocks so I think that's the name of the compiler I'm using now supposed to supposed to be up toate you know a better C++ compiler another thing is I'm now using cin CN get instead of system pause and this pretty much does the same thing it waits for user input so your program just doesn't run it pauses it and allows you to look at it so the reason I was using system pause is whenever I first started teaching you guys about C++ none of this stuff made sense to you and system pause was the only thing you could look at and understand and it said this paused my system so instead of throwing everything at you at once I wanted to take everything in baby steps and that's why if you guys say all right why are you doing this instead of a better way of doing this it's because I just want to take everything in baby steps one step at a time so anyways that's my excuses for doing that but everything is fixed now so with that being said in the last tutorial we covered the basics of functions and how to use the functions that are built in to C++ already and we pretty much covered one type of function and this was a function that took one parameter or needed one piece of information in order to work but not all functions are like that some functions need more than one piece of information in order to work and some functions need no information at all you're saying all right how the heck does that work I'll show you in a second for example let's go ahead and get a variable name X or one guy left the comment double rainbow huh yeah I stole that joke from someone else on my other videos so I can't take credit for this but anyways we have this variable named Rainbow and we want to use the power of function so let's go ahead and set rainbow equal to p w and set it equal well let me guys let me tell you guys first what the power of function is whenever you do like 5 to the 3 power um I can't it's like five with a little three on the top right this means 5 * 5 * 5 5 times itself three times so what is 5 * 5 * 5 well 5 * 5 that's 2 is 25 * the 3 one is 125 so saying all right so in order for us to use this function it obviously needs two numbers AKA two pieces of information the first one is the base and the second one is the exponent so how do we pass in two different numbers using the parameters well the first thing we do is type in any old number and this like we saw in the last tutorial this is how you pass in one piece of information but when you have more than one piece of information you need to pass in a function what you need to do is separate it with a comma and then add another number it doesn't matter if there's a space in there or not so might as well tighten that up so anyways if you have a function that takes two integers in this instance just go ahead and throw in your first one like normal and then add a comma and throw in your second one after that so anyways what I'm trying to say is anytime you need more than one piece of information for your function you need to separate them with commas and just to prove to you guys that this works let's go ahead and see out um rainbow and just go ahead and end that line and Yep looks pretty good so let's go ahead and build and run this and see what we get 125 and that's cuz 5 * 5 * 5 is5 so that's how the power function works or you know using exponents so let's go ahead and delete this actually let's just go ahead and delete this and remember at the beginning the tutorial I was telling you guys some functions don't need any information at all and you guys are scratching your head be like what's the use of a function if doesn't need any information well I'll show you guys right here let's go ahead and make another function or another variable right now called Y and set this equal to y equals Rand and just put empty parentheses this function is not going to take any parameters and by the way Rand comes from C standard Library it's a c function so make sure you have this include or else it won't work so we're saying all right what is Rand and why the heck does it not need any parameters at all Rand is the function to generate a random number it's going to generate it in the scope of well we won't cover that now but just listen to this it's going to generate a random number so why would you pass it in a piece of information like five or 81 it doesn't need that information that would just be you generating your own random number that pops into your head we want the computer to generate it for us so therefore we don't give any information at all the computer is going to take care of of everything for us so let's go ahead and uh run this and go ahead leave a comment see what number you think this is go ahead don't cheat don't cheat all right now go ahead and run it and see if you're right 41 so if any of you mofos guess 41 congratulations you are the winner and uh give me a call I think I'm going to have you pick my Power Ball tickets next time so anyways random or excuse me functions sometimes take one person parameter they sometimes take multiple parameters in that case you separate them with commas and sometimes they don't take any parameter at all they just pretty much do something and don't need any information from the user or from the programmer or for anyone they just do it it's done with forget about it so anyways now that we have all of the functions covered and we understand how builin functions work in the next tutorial I'm going to be teaching you guys how to build your own custom functions so it's going to be awesome we are done with builtin functions for now um it's definitely a lot cooler and more useful building our own custom functions because then instead of you know using random numbers and Powers we can make these new functions do whatever the heck we want them to so I'm super excited but for now I'm going to go uh check eBay because I'm selling something on there and I want to you know see if I got any questions or anything thing but um all right I lied I'm just going to pound a few beers and then probably make another tutorial but thank you guys for watching don't forget to subscribe and I'll see you guys next time
