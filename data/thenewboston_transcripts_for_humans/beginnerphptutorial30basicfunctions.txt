With timestamps:

00:00 - hello there this is Alex from PHP
00:02 - academy.org I'm creating this PHP video
00:05 - for the new Boston now in this video I'm
00:08 - going to be talking Loosely about
00:09 - functions uh why they're useful in PHP
00:12 - or in fact any other programming
00:14 - language and also how we can create a
00:17 - function and use a function within our
00:19 - page now first of all what is a function
00:21 - a function is something that allows us
00:23 - to declare um a block of code that we
00:25 - might want to reuse um we can feed in
00:28 - parameters to this um or arguments as
00:30 - they're sometimes referred to or usually
00:32 - referred to um and then we can use this
00:36 - at different parts in our code to save
00:38 - us retyping code out um and as per the
00:42 - name functions they will do something so
00:45 - you know they will do something that
00:46 - will allow you to declare them um and
00:49 - then reuse them over and over so the
00:51 - standard uh Syntax for a function is
00:53 - function we have two brackets and then
00:55 - we have a block here denoted by two
00:58 - curly brackets and opening and a closing
01:01 - now inside here we'll go our arguments
01:03 - in this video I'm not going to be
01:04 - dealing with arguments I'm just going to
01:05 - show you uh how we're using a function
01:08 - and uh how to call it so we already know
01:11 - that a function is used to speed up um
01:15 - basically our writing of our program
01:18 - by keeping some code that's going to let
01:20 - us um or declaring the function and a
01:25 - lot of code now what we haven't done is
01:27 - given this function a name I forgot to
01:28 - mention that um we're going to give this
01:30 - function a name and this is going to be
01:32 - uh called um my name um you can write it
01:36 - any way you want um small uh with camel
01:40 - caps um anything really so we'll use a
01:44 - capital m and a capital N just so we can
01:46 - see so it's really important that you
01:48 - name your functions well uh my name
01:50 - doesn't really tell you what I'm going
01:52 - to do um but you
01:55 - know it it could it could do it it might
01:58 - not it depends on who the if you're
02:00 - writing to an audience say you people
02:03 - are going to see your code as long as
02:04 - you know what it is and if if it's
02:05 - staying personal to you that's
02:06 - absolutely fine so in this I'm just
02:09 - going to Simply Echo out Alex now let's
02:13 - just suppose in my code uh let's just
02:15 - bring this down I want to um I want to
02:19 - Echo out Alex a few times so for example
02:24 - um
02:25 - echo my name
02:28 - is and I want to break down now I'm just
02:31 - going to call my function my name down
02:35 - here now what this is going to do is
02:37 - it's going to Echo out my name is it's
02:39 - going to line break down and then it's
02:42 - going to call this function we call it
02:45 - simply by its name and then just two
02:47 - brackets like that arguments would
02:49 - usually go in here but in this purpose
02:51 - of this short tutorial I'm not talking
02:53 - about arguments and then as always we
02:55 - end with a semicolon so the the result I
02:58 - want from this is
03:00 - to Echo out my name basically after this
03:04 - sentence here so let's test if it works
03:06 - we
03:07 - refresh and you can see it says my name
03:09 - is Alex now obviously we could take away
03:12 - this line break um and just include a
03:15 - space here and you can see that it has
03:17 - exactly the same use um this is
03:19 - obviously a useless um function it would
03:23 - be a lot easier to declare it um or not
03:26 - declare it but type my name over and
03:28 - over again if I need to um but this
03:31 - example just demonstrates how to create
03:34 - a basic function and what it does I mean
03:36 - for example in our function we could
03:39 - want we might want to Echo out a
03:41 - specific variable um that we don't want
03:44 - to keep
03:45 - redeclaring um in our page uh but then
03:49 - again that might be useless as well so I
03:51 - mean functions can be used for different
03:53 - things um obviously depending on your
03:56 - program you just have to think logically
03:57 - about it but for now this is an example
03:59 - example of how you declare a function
04:02 - I've talked about why they're useful um
04:04 - and in the next video we're going to
04:06 - look at passing arguments to functions
04:08 - to create something that's maybe a bit
04:10 - more of use

Cleaned transcript:

hello there this is Alex from PHP academy.org I'm creating this PHP video for the new Boston now in this video I'm going to be talking Loosely about functions uh why they're useful in PHP or in fact any other programming language and also how we can create a function and use a function within our page now first of all what is a function a function is something that allows us to declare um a block of code that we might want to reuse um we can feed in parameters to this um or arguments as they're sometimes referred to or usually referred to um and then we can use this at different parts in our code to save us retyping code out um and as per the name functions they will do something so you know they will do something that will allow you to declare them um and then reuse them over and over so the standard uh Syntax for a function is function we have two brackets and then we have a block here denoted by two curly brackets and opening and a closing now inside here we'll go our arguments in this video I'm not going to be dealing with arguments I'm just going to show you uh how we're using a function and uh how to call it so we already know that a function is used to speed up um basically our writing of our program by keeping some code that's going to let us um or declaring the function and a lot of code now what we haven't done is given this function a name I forgot to mention that um we're going to give this function a name and this is going to be uh called um my name um you can write it any way you want um small uh with camel caps um anything really so we'll use a capital m and a capital N just so we can see so it's really important that you name your functions well uh my name doesn't really tell you what I'm going to do um but you know it it could it could do it it might not it depends on who the if you're writing to an audience say you people are going to see your code as long as you know what it is and if if it's staying personal to you that's absolutely fine so in this I'm just going to Simply Echo out Alex now let's just suppose in my code uh let's just bring this down I want to um I want to Echo out Alex a few times so for example um echo my name is and I want to break down now I'm just going to call my function my name down here now what this is going to do is it's going to Echo out my name is it's going to line break down and then it's going to call this function we call it simply by its name and then just two brackets like that arguments would usually go in here but in this purpose of this short tutorial I'm not talking about arguments and then as always we end with a semicolon so the the result I want from this is to Echo out my name basically after this sentence here so let's test if it works we refresh and you can see it says my name is Alex now obviously we could take away this line break um and just include a space here and you can see that it has exactly the same use um this is obviously a useless um function it would be a lot easier to declare it um or not declare it but type my name over and over again if I need to um but this example just demonstrates how to create a basic function and what it does I mean for example in our function we could want we might want to Echo out a specific variable um that we don't want to keep redeclaring um in our page uh but then again that might be useless as well so I mean functions can be used for different things um obviously depending on your program you just have to think logically about it but for now this is an example example of how you declare a function I've talked about why they're useful um and in the next video we're going to look at passing arguments to functions to create something that's maybe a bit more of use
