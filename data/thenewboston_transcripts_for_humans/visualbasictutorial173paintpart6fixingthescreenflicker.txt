With timestamps:

00:02 - hello YouTube Sam here from youtube.com/
00:04 - onli gamer for the New Boston and in
00:07 - this tutorial we're going to continue
00:09 - working on our paint program now if you
00:13 - remember from the previous tutorial or
00:15 - before that um the paint program that
00:18 - we've been using in the previous
00:20 - tutorials or that we've been learning
00:21 - how to make is almost directly from
00:24 - beginning Microsoft Visual Basic 2008 by
00:26 - theoren Willis and Brian Newsome um I
00:30 - changed maybe a couple little things in
00:31 - there I'm not very noticeable but I just
00:34 - want to give them full credit um I'm
00:36 - just teaching you guys uh the logic
00:38 - behind this and I'm taking you step by
00:41 - step so you can understand it better so
00:44 - now that we got that aside if you
00:45 - remember from the previous tutorial
00:47 - whenever we started painting
00:50 - the the whole screen would flash and it
00:55 - would repaint each time so you can see
00:57 - here that if I start drawing you can see
00:59 - that the whole thing is flashing and it
01:02 - just looks really bad so there's an easy
01:06 - way we can fix this so we need to come
01:08 - over to paint canvas. VB and you can see
01:12 - here we have me.
01:15 - invalidate so what we can do um instead
01:19 - of invalidating the entire control which
01:22 - will flash it each time what we can do
01:25 - is um we can invalidate that one
01:29 - rectangle angle so under me. invalidate
01:32 - we can pass a uh an argument to it so
01:36 - you can see we've got invalidate
01:38 - children as B here um invalidate
01:41 - rectangle is system. drawing. rectangle
01:43 - now that's what we're going to be using
01:45 - so we got RC as a rectangle so we're
01:48 - only going to be invalidating an area
01:50 - the size of a rectangle well how do we
01:52 - know what size of rectangle we want to
01:54 - use well what we can do is we can use
01:57 - object graphics
02:01 - item. rectangle now rectangle is a
02:05 - public variable of type rectangle um
02:08 - that is in object Graphics item so we go
02:11 - to Graphics items. VB we've got our
02:13 - rectangle as our
02:15 - rectangle and um we made a new rectangle
02:19 - and just set some sizes for it
02:22 - um just to initialize the rectangle so
02:25 - we'll come back to pain g. VB so it's
02:27 - going to invalidate an area this size of
02:31 - um this rectangle right here so we'll go
02:34 - ahead and run this you can see here
02:37 - we've got paint. VB go ahead and make
02:40 - this bigger you can see that if I start
02:42 - drawing here maybe you'll be able to see
02:45 - this a little bit but you can see that
02:46 - it's only invalidating the area right
02:49 - where my mouse is you can see it's kind
02:50 - of flashing right there and there's a
02:52 - white um in front of the
02:56 - dots now we can draw and the fashion you
03:00 - move the more spread out the dots are
03:01 - going to
03:03 - be uh but that doesn't really matter you
03:05 - can just draw a little bit slower now
03:08 - let's go ahead and close out of this and
03:10 - we'll just play with some of the options
03:13 - before we move on to the next tutorials
03:16 - so we can change the size so all we have
03:19 - to do is just change one variable in
03:21 - here and we'll change it to large so we
03:25 - got graphic sizes. large and you can see
03:28 - that when we start drawing we draw with
03:30 - large circles and you can see the
03:32 - invalidation right here a lot better
03:34 - it's invalidating an area the size of
03:36 - the rectangle that we
03:38 - have now it doesn't look the best but
03:41 - it's better than the whole screen
03:43 - flashing now we can even come into our
03:45 - graphic sizes and we can set large equal
03:47 - to let's say 50 so this is going to
03:50 - double the size of our brush come into
03:53 - paint. VB and you can see here that
03:55 - we're drawing with these big huge
03:57 - circles and once again the invalidation
04:00 - is even more um visible in
04:03 - this
04:07 - demonstration so go ahead um add the uh
04:13 - invalidating a small area that we used
04:15 - here
04:16 - to
04:18 - just instead of flashing the entire
04:20 - control and repainting it it's just
04:23 - going to invalidate um the area the size
04:25 - of the rectangle that we have in object
04:28 - Graphics item
04:30 - and once you put that code in um even
04:33 - play around with your program sum go
04:35 - ahead and move on to the next tutorial

Cleaned transcript:

hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to continue working on our paint program now if you remember from the previous tutorial or before that um the paint program that we've been using in the previous tutorials or that we've been learning how to make is almost directly from beginning Microsoft Visual Basic 2008 by theoren Willis and Brian Newsome um I changed maybe a couple little things in there I'm not very noticeable but I just want to give them full credit um I'm just teaching you guys uh the logic behind this and I'm taking you step by step so you can understand it better so now that we got that aside if you remember from the previous tutorial whenever we started painting the the whole screen would flash and it would repaint each time so you can see here that if I start drawing you can see that the whole thing is flashing and it just looks really bad so there's an easy way we can fix this so we need to come over to paint canvas. VB and you can see here we have me. invalidate so what we can do um instead of invalidating the entire control which will flash it each time what we can do is um we can invalidate that one rectangle angle so under me. invalidate we can pass a uh an argument to it so you can see we've got invalidate children as B here um invalidate rectangle is system. drawing. rectangle now that's what we're going to be using so we got RC as a rectangle so we're only going to be invalidating an area the size of a rectangle well how do we know what size of rectangle we want to use well what we can do is we can use object graphics item. rectangle now rectangle is a public variable of type rectangle um that is in object Graphics item so we go to Graphics items. VB we've got our rectangle as our rectangle and um we made a new rectangle and just set some sizes for it um just to initialize the rectangle so we'll come back to pain g. VB so it's going to invalidate an area this size of um this rectangle right here so we'll go ahead and run this you can see here we've got paint. VB go ahead and make this bigger you can see that if I start drawing here maybe you'll be able to see this a little bit but you can see that it's only invalidating the area right where my mouse is you can see it's kind of flashing right there and there's a white um in front of the dots now we can draw and the fashion you move the more spread out the dots are going to be uh but that doesn't really matter you can just draw a little bit slower now let's go ahead and close out of this and we'll just play with some of the options before we move on to the next tutorials so we can change the size so all we have to do is just change one variable in here and we'll change it to large so we got graphic sizes. large and you can see that when we start drawing we draw with large circles and you can see the invalidation right here a lot better it's invalidating an area the size of the rectangle that we have now it doesn't look the best but it's better than the whole screen flashing now we can even come into our graphic sizes and we can set large equal to let's say 50 so this is going to double the size of our brush come into paint. VB and you can see here that we're drawing with these big huge circles and once again the invalidation is even more um visible in this demonstration so go ahead um add the uh invalidating a small area that we used here to just instead of flashing the entire control and repainting it it's just going to invalidate um the area the size of the rectangle that we have in object Graphics item and once you put that code in um even play around with your program sum go ahead and move on to the next tutorial
