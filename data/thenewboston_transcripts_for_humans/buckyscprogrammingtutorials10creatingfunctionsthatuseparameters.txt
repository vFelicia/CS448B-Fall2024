With timestamps:

00:00 - what is going on guys is bucky and
00:01 - welcome to your 10th c plus plus
00:03 - tutorial and in this tutorial i'm going
00:05 - to be teaching you guys how to create a
00:07 - function that uses parameters now a
00:09 - parameter is quite simply additional
00:12 - information that that function needs in
00:14 - order to work so let me give you guys a
00:16 - quick example of this say you made a
00:18 - function to calculate the age of someone
00:20 - how old they were well some additional
00:23 - information you would need before you
00:24 - can calculate that is what year were
00:26 - they born and once you have this
00:28 - information you can calculate their age
00:30 - so let's go ahead and now that we
00:32 - understand why a function would need
00:34 - additional information let's go ahead
00:36 - and create a simple and
00:38 - excuse me a simple function to use
00:40 - additional information so let's go ahead
00:43 - and create a function
00:44 - that just prints out bucky's favorite
00:46 - number is blank um we might say bucky's
00:49 - favorite number is 20. bucky's favorite
00:51 - number is 68 bucky's favorite number is
00:53 - 99 well since we don't know what my
00:55 - favorite number is yet we're just going
00:57 - to go ahead and put a variable in place
01:00 - for that number so since this isn't
01:02 - going to be making any calculations
01:04 - really we just go ahead and use void
01:06 - because that means return nothing so
01:09 - name your function anything you want i'm
01:11 - just going to name my print crap since
01:13 - that's all it's going to do print crap
01:14 - out on the screen and before we just
01:16 - added these empty parenthesis when
01:18 - nothing in between them and then we
01:20 - coded the body right here well whenever
01:23 - we use a parameter you actually put that
01:25 - information right in your parentheses
01:28 - and check this out
01:29 - you know how i said we didn't know what
01:31 - that number is yet and that's the
01:33 - additional information that we need well
01:35 - since we don't know what it is yet we
01:38 - just go ahead and we set it equal to a
01:39 - variable and since this is an integer
01:43 - we go ahead and see it equal to the
01:44 - variable into x
01:46 - you can name your variable anything you
01:48 - want but i'm going to name on x because
01:49 - it's really simple easy to work with
01:52 - so now we can go ahead and we can add
01:54 - the body of this function and all we're
01:56 - going to do in this function is print
01:57 - out on the screen
01:59 - bucky's
02:01 - favorite number is did i spell
02:03 - everything wrong yup yup good to go
02:06 - bucky's favorite number is x and then
02:09 - just go ahead and end that line
02:11 - and now when our function runs it's
02:13 - going to run something like this if we
02:15 - say that our favorite number is 20 it's
02:17 - going to say bucky's favorite number is
02:20 - 20. if we say that our favorite number
02:22 - is
02:23 - 10 bucky's favorite number is 10. so we
02:26 - can run this function a bunch of times
02:28 - and give a different piece of
02:29 - information each time and it's gonna
02:31 - work so let's go ahead and remember in
02:35 - order to use a function in your main you
02:38 - just go ahead and you type the function
02:39 - name
02:41 - and then you add your parentheses and
02:43 - your semicolon at the end
02:45 - but whenever your function needs an
02:47 - additional piece of information you need
02:49 - to give it that information inside the
02:51 - parentheses so we know for making our
02:54 - function that it needs one integer in
02:57 - order to work so let's go ahead and in
02:59 - inside these parenthesis give it one
03:01 - integer
03:02 - 20. so now what it's going to do is well
03:05 - let me go ahead and run this and show it
03:07 - to you guys
03:08 - bucky's favorite number is 20 all right
03:12 - so what happened is this we said all
03:15 - right c plus program we want to use this
03:18 - print craft method well it said all
03:20 - right in order to use this method i'm
03:22 - going to need one integer so we gave it
03:25 - the integer 20. so then whenever in this
03:28 - function it came across the variable x
03:30 - it just substituted 20 for that
03:33 - so
03:34 - whenever you're making parameters you
03:36 - first need to list what type of data and
03:38 - also a variable name so then whenever we
03:42 - give it that variable it substitute that
03:44 - variable for x later on in the program
03:48 - so for example let's give it one more
03:50 - example like 854. well now we run it and
03:54 - it says
03:55 - bucky's favorite number is 854
03:58 - and that's the beauty of parameters and
04:01 - functions it doesn't need to be the same
04:03 - every time so that's why you can use
04:05 - variables so again what we did is we
04:08 - created a function
04:09 - and it needed an additional piece of
04:12 - information which was an integer and
04:14 - since it didn't know the value yet it
04:16 - just went ahead and set it equal to a
04:18 - variable then later on in the body
04:21 - whenever it came across that variable it
04:23 - knew whatever value you told it to
04:26 - substitute for x that's what value is
04:28 - substituted for x so we can run this 100
04:31 - times with a hundred different values if
04:33 - we want it's going to substitute it for
04:35 - x each time and use that information to
04:37 - plug it in
04:39 - so that's the basics of how you use
04:41 - functions with parameter again
04:44 - whenever you're creating a parameter use
04:46 - the data type and a variable name and
04:48 - whenever you're using the function don't
04:50 - forget to pass in or give it whatever
04:53 - information it needs so that's pretty
04:55 - cool simple enough we understand that
04:57 - but in the next tutorial what i'm going
04:59 - to be teaching guys is how to use
05:01 - function that use multiple parameters
05:04 - what if a function needs more than one
05:06 - piece of information in order to work
05:08 - well i'm going to show you guys how to
05:10 - do that too and it's a little different
05:12 - than this so you definitely want to
05:13 - watch that so once you understand this
05:15 - and understand the basics behind
05:17 - functions and parameters you're ready to
05:20 - move on to the next tutorial so thank
05:21 - you guys for watching don't forget
05:23 - subscribe and i'll see you guys in the
05:24 - next video

Cleaned transcript:

what is going on guys is bucky and welcome to your 10th c plus plus tutorial and in this tutorial i'm going to be teaching you guys how to create a function that uses parameters now a parameter is quite simply additional information that that function needs in order to work so let me give you guys a quick example of this say you made a function to calculate the age of someone how old they were well some additional information you would need before you can calculate that is what year were they born and once you have this information you can calculate their age so let's go ahead and now that we understand why a function would need additional information let's go ahead and create a simple and excuse me a simple function to use additional information so let's go ahead and create a function that just prints out bucky's favorite number is blank um we might say bucky's favorite number is 20. bucky's favorite number is 68 bucky's favorite number is 99 well since we don't know what my favorite number is yet we're just going to go ahead and put a variable in place for that number so since this isn't going to be making any calculations really we just go ahead and use void because that means return nothing so name your function anything you want i'm just going to name my print crap since that's all it's going to do print crap out on the screen and before we just added these empty parenthesis when nothing in between them and then we coded the body right here well whenever we use a parameter you actually put that information right in your parentheses and check this out you know how i said we didn't know what that number is yet and that's the additional information that we need well since we don't know what it is yet we just go ahead and we set it equal to a variable and since this is an integer we go ahead and see it equal to the variable into x you can name your variable anything you want but i'm going to name on x because it's really simple easy to work with so now we can go ahead and we can add the body of this function and all we're going to do in this function is print out on the screen bucky's favorite number is did i spell everything wrong yup yup good to go bucky's favorite number is x and then just go ahead and end that line and now when our function runs it's going to run something like this if we say that our favorite number is 20 it's going to say bucky's favorite number is 20. if we say that our favorite number is 10 bucky's favorite number is 10. so we can run this function a bunch of times and give a different piece of information each time and it's gonna work so let's go ahead and remember in order to use a function in your main you just go ahead and you type the function name and then you add your parentheses and your semicolon at the end but whenever your function needs an additional piece of information you need to give it that information inside the parentheses so we know for making our function that it needs one integer in order to work so let's go ahead and in inside these parenthesis give it one integer 20. so now what it's going to do is well let me go ahead and run this and show it to you guys bucky's favorite number is 20 all right so what happened is this we said all right c plus program we want to use this print craft method well it said all right in order to use this method i'm going to need one integer so we gave it the integer 20. so then whenever in this function it came across the variable x it just substituted 20 for that so whenever you're making parameters you first need to list what type of data and also a variable name so then whenever we give it that variable it substitute that variable for x later on in the program so for example let's give it one more example like 854. well now we run it and it says bucky's favorite number is 854 and that's the beauty of parameters and functions it doesn't need to be the same every time so that's why you can use variables so again what we did is we created a function and it needed an additional piece of information which was an integer and since it didn't know the value yet it just went ahead and set it equal to a variable then later on in the body whenever it came across that variable it knew whatever value you told it to substitute for x that's what value is substituted for x so we can run this 100 times with a hundred different values if we want it's going to substitute it for x each time and use that information to plug it in so that's the basics of how you use functions with parameter again whenever you're creating a parameter use the data type and a variable name and whenever you're using the function don't forget to pass in or give it whatever information it needs so that's pretty cool simple enough we understand that but in the next tutorial what i'm going to be teaching guys is how to use function that use multiple parameters what if a function needs more than one piece of information in order to work well i'm going to show you guys how to do that too and it's a little different than this so you definitely want to watch that so once you understand this and understand the basics behind functions and parameters you're ready to move on to the next tutorial so thank you guys for watching don't forget subscribe and i'll see you guys in the next video
