With timestamps:

00:00 - are already houses welcome back and in
00:02 - this video series I am going to show you
00:03 - how to make a Python web crawler now I
00:06 - actually made this because a few weeks
00:08 - ago I was trying to make a sitemap for
00:11 - my website and if you guys don't know
00:13 - what a sitemap is it's basically all the
00:15 - links or all the pages on your website
00:17 - so you need to make a program to crawl
00:20 - your entire site and gather up all the
00:22 - links and I'll search your non-line for
00:24 - a free one and there aren't a lot of
00:26 - good free ones they all like are limited
00:29 - to like 50 pages or something and then I
00:31 - was like are I'm just going to buy one
00:33 - and all the ones that you can buy our
00:35 - like a hundred bucks a year and I'm like
00:36 - I'm not going to pay a hundred bucks a
00:38 - year for a little bot that's going to
00:41 - take like ten minutes to run so that was
00:43 - my first motivation but I was lazy and I
00:46 - didn't do it oh my god then I got a like
00:49 - program this crawler and then a few days
00:51 - ago I was looking through my website and
00:53 - I was like you know what what would be
00:55 - really cool is if you could have like
00:58 - open source search engine for your own
01:01 - website and I know that you can go ahead
01:03 - and add like Google custom search
01:05 - whenever you have a site and you want to
01:07 - add some search to it but Google custom
01:10 - search it doesn't really feel
01:11 - comfortable like it's it kind of feels
01:14 - like separate from your entire website
01:15 - so I'm like man that crawler I was going
01:18 - to make a few weeks ago that would been
01:19 - a really nice so again all this program
01:22 - is going to do in this video series is
01:24 - basically going to go through all the
01:26 - pages on your website and gather up all
01:28 - the links so you can either use that for
01:30 - a site map or if you're making like a
01:32 - custom search engine then you can go
01:34 - ahead and run some analytics on each
01:36 - page later on but this is the core of a
01:39 - lot of programs so that is my motivation
01:41 - so let's go ahead and get started and
01:43 - actually before I do that was a lie
01:45 - we're not going to get started yet I
01:47 - know that there are a couple armed
01:50 - modules already in Python this is the
01:53 - first one I looked at but this doesn't
01:55 - even have Python 3 support yet I think
01:57 - it's in beta and also this was a little
01:59 - different from what I was trying to do
02:01 - and I know that beautifulsoup does exist
02:05 - but this is more of a parser so in other
02:07 - words once you have HTML for example it
02:09 - can like rip out the title and tell you
02:11 - what the title of the page is
02:13 - and you know maybe the content and all
02:15 - the paragraphs and whatnot but again we
02:18 - need to start with the basics we just
02:20 - need to go ahead and gather the links
02:22 - for your site before you can start
02:24 - running analytics on all the pages so
02:27 - what I'm going to do is I'm going to set
02:30 - this up like we're going to use this a
02:31 - bunch of times on a bunch of different
02:33 - websites so let's say that I wanted to
02:35 - run this on my website and my friend's
02:37 - website and my uncle's I would need to
02:40 - separate each of those into their own
02:43 - different projects or own own different
02:45 - folders so that's what we're going to do
02:47 - what I'm going to do is I'm going to
02:50 - first add a way where you can type in
02:53 - something like the New Boston how can I
02:57 - not type today alright so this is the
03:00 - name of the project and then we can go
03:02 - ahead and give the home page like this
03:06 - again this isn't Python code I'm just
03:07 - demonstrating how we're going to make it
03:09 - so we'll say alright the project name is
03:11 - the New Boston and this is your home
03:12 - page so then it's going to go ahead and
03:15 - create a folder and store all the links
03:17 - in that folder and then they don't get
03:18 - all jumbled together if you don't
03:20 - understand what I'm talking about we'll
03:21 - check this out so the first thing we're
03:23 - going to do is we're going to import OS
03:25 - and this is just actually want to kind
03:28 - of keep that I kind of like that little
03:30 - thing I don't know why all right so this
03:34 - is just going to allow us to create
03:36 - directories so let me say that on each
03:39 - website you crawl is a separate project
03:46 - and again the project files for this
03:52 - it's not gonna be anything special a new
03:53 - folder equals a new project simple as
03:56 - that so we'll just call this function
03:58 - def great project directory and then
04:04 - we'll name it directory don't use the
04:06 - keyword dir because dir is already a
04:09 - built-in Python keyword so don't undo
04:12 - that actually let me get rid of that
04:13 - after all all right so the cool thing
04:17 - about this program the way I made it is
04:19 - I'm going to say go ahead and start off
04:23 - by whenever we create a project for the
04:26 - first time create that new folder for us
04:28 - and start crawling the website
04:31 - now let's say that your computer shuts
04:33 - down maybe I know your electrical failed
04:35 - or something or you just need to put
04:37 - your computer to sleep or go home from
04:39 - work or something you don't want to go
04:41 - ahead and get rid of all that data let's
04:43 - say it was like 50 percent done crawling
04:46 - that you actually want to save that so
04:47 - what I'm going to do is whenever you run
04:51 - this again if that directory already
04:53 - exists if that project already exists
04:55 - we're not going to go ahead and create
04:57 - it again we're just going to say ok only
04:58 - create this if it doesn't exist
05:00 - so we'll say if not OS dot path exists
05:07 - and we'll see this is the path right
05:10 - here so again the folder name is
05:13 - essentially just the path only then do
05:17 - we want to create a folder so I'm just
05:18 - going to write a little prompt so
05:19 - whenever they run this the user knows
05:21 - what's going on I'll say creating
05:25 - directory and then I'll print out the
05:30 - name so my project name is going to be
05:33 - the new Boston so whenever I run this
05:34 - for the first time it's going to say
05:36 - creating directory actually let me say
05:38 - creating project that'll be a little bit
05:41 - cooler a and then how do we actually
05:43 - make it well it's the easiest thing ever
05:45 - OS make directories and you just pass in
05:51 - the directory name right there so let me
05:55 - go ahead and run this right now show you
05:56 - guys what's going on all right
06:04 - so check this out you see how this load
06:07 - directory doesn't have any folders or
06:09 - anything and it just has main py the
06:11 - file I'm working on right now so
06:13 - whenever I run this bit of code what
06:16 - it's going to do this is going to say
06:18 - okay creating project the new Boston and
06:21 - look at that we now got a folder called
06:24 - the new Boston now let me go ahead and
06:26 - run this again so say that we had some
06:28 - data in here we're going to go ahead and
06:29 - run it again you see how it didn't say
06:31 - creating project in New Boston is
06:34 - because it already created it so that
06:36 - way it doesn't overwrite all of our
06:38 - juicy files and also one thing I'm going
06:40 - to do is I'm just going to change this
06:42 - to general because this general file I'm
06:49 - just going to have a lot of shared
06:50 - functions in here and that main dot py
06:53 - file that's kind of going to be the
06:54 - starting point for our entire program so
06:57 - I don't just don't want to pop these
06:58 - right in there so again that's how our
07:01 - projects gonna be set up that's what
07:03 - we're doing in this video series and
07:05 - yeah that's all I got to say I guess
07:08 - I'll smell you guys later

Cleaned transcript:

are already houses welcome back and in this video series I am going to show you how to make a Python web crawler now I actually made this because a few weeks ago I was trying to make a sitemap for my website and if you guys don't know what a sitemap is it's basically all the links or all the pages on your website so you need to make a program to crawl your entire site and gather up all the links and I'll search your nonline for a free one and there aren't a lot of good free ones they all like are limited to like 50 pages or something and then I was like are I'm just going to buy one and all the ones that you can buy our like a hundred bucks a year and I'm like I'm not going to pay a hundred bucks a year for a little bot that's going to take like ten minutes to run so that was my first motivation but I was lazy and I didn't do it oh my god then I got a like program this crawler and then a few days ago I was looking through my website and I was like you know what what would be really cool is if you could have like open source search engine for your own website and I know that you can go ahead and add like Google custom search whenever you have a site and you want to add some search to it but Google custom search it doesn't really feel comfortable like it's it kind of feels like separate from your entire website so I'm like man that crawler I was going to make a few weeks ago that would been a really nice so again all this program is going to do in this video series is basically going to go through all the pages on your website and gather up all the links so you can either use that for a site map or if you're making like a custom search engine then you can go ahead and run some analytics on each page later on but this is the core of a lot of programs so that is my motivation so let's go ahead and get started and actually before I do that was a lie we're not going to get started yet I know that there are a couple armed modules already in Python this is the first one I looked at but this doesn't even have Python 3 support yet I think it's in beta and also this was a little different from what I was trying to do and I know that beautifulsoup does exist but this is more of a parser so in other words once you have HTML for example it can like rip out the title and tell you what the title of the page is and you know maybe the content and all the paragraphs and whatnot but again we need to start with the basics we just need to go ahead and gather the links for your site before you can start running analytics on all the pages so what I'm going to do is I'm going to set this up like we're going to use this a bunch of times on a bunch of different websites so let's say that I wanted to run this on my website and my friend's website and my uncle's I would need to separate each of those into their own different projects or own own different folders so that's what we're going to do what I'm going to do is I'm going to first add a way where you can type in something like the New Boston how can I not type today alright so this is the name of the project and then we can go ahead and give the home page like this again this isn't Python code I'm just demonstrating how we're going to make it so we'll say alright the project name is the New Boston and this is your home page so then it's going to go ahead and create a folder and store all the links in that folder and then they don't get all jumbled together if you don't understand what I'm talking about we'll check this out so the first thing we're going to do is we're going to import OS and this is just actually want to kind of keep that I kind of like that little thing I don't know why all right so this is just going to allow us to create directories so let me say that on each website you crawl is a separate project and again the project files for this it's not gonna be anything special a new folder equals a new project simple as that so we'll just call this function def great project directory and then we'll name it directory don't use the keyword dir because dir is already a builtin Python keyword so don't undo that actually let me get rid of that after all all right so the cool thing about this program the way I made it is I'm going to say go ahead and start off by whenever we create a project for the first time create that new folder for us and start crawling the website now let's say that your computer shuts down maybe I know your electrical failed or something or you just need to put your computer to sleep or go home from work or something you don't want to go ahead and get rid of all that data let's say it was like 50 percent done crawling that you actually want to save that so what I'm going to do is whenever you run this again if that directory already exists if that project already exists we're not going to go ahead and create it again we're just going to say ok only create this if it doesn't exist so we'll say if not OS dot path exists and we'll see this is the path right here so again the folder name is essentially just the path only then do we want to create a folder so I'm just going to write a little prompt so whenever they run this the user knows what's going on I'll say creating directory and then I'll print out the name so my project name is going to be the new Boston so whenever I run this for the first time it's going to say creating directory actually let me say creating project that'll be a little bit cooler a and then how do we actually make it well it's the easiest thing ever OS make directories and you just pass in the directory name right there so let me go ahead and run this right now show you guys what's going on all right so check this out you see how this load directory doesn't have any folders or anything and it just has main py the file I'm working on right now so whenever I run this bit of code what it's going to do this is going to say okay creating project the new Boston and look at that we now got a folder called the new Boston now let me go ahead and run this again so say that we had some data in here we're going to go ahead and run it again you see how it didn't say creating project in New Boston is because it already created it so that way it doesn't overwrite all of our juicy files and also one thing I'm going to do is I'm just going to change this to general because this general file I'm just going to have a lot of shared functions in here and that main dot py file that's kind of going to be the starting point for our entire program so I don't just don't want to pop these right in there so again that's how our projects gonna be set up that's what we're doing in this video series and yeah that's all I got to say I guess I'll smell you guys later
