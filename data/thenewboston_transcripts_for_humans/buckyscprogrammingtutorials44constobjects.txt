With timestamps:

00:00 - what's going on guys welcome back to
00:01 - your 44 C++ tutorial and in this
00:03 - tutorial I'm going to be teaching you
00:05 - guys about a couple things specifically
00:07 - about the keyword Const which stands for
00:09 - a constant now whenever you use the
00:12 - keyword Const it means that whatever you
00:15 - use it on you typically use on variables
00:17 - and stuff it means that that variable
00:19 - remains constant throughout your program
00:22 - aka it can't be changed or modified in
00:25 - any way so let's go ahead and take a
00:26 - quick look at that say you have an
00:28 - integer variable X and you set equal to
00:31 - 3 whenever you first make it and then
00:33 - later on you want to change it to
00:35 - something like 5 while your program is
00:36 - just going to run fine and whenever you
00:38 - try to print out X or use it in any
00:40 - other way it's going to run perfectly
00:42 - fine as expected so what the constant
00:46 - keyword does in that constant keyword Co
00:48 - n St whenever you're creating something
00:51 - you put the constant keyword in there
00:53 - and it's pretty much telling your
00:54 - compiler all right now whenever I create
00:57 - this variable I'm going to set equal to
00:58 - value and I don't want you to change it
01:01 - for the rest of the program so now
01:03 - whenever you change try to change to
01:04 - something else like 5 in try to run this
01:06 - program is going to get error because
01:08 - it's saying hey Bucky you called this
01:10 - variable constant
01:11 - you promised me we're going to change it
01:12 - and now you lied me right there so
01:14 - that's why I'm giving you an error so
01:16 - that's basically what the constant
01:18 - keyword does and make sure that whatever
01:20 - is constant is unable to be modified so
01:24 - that being said later on in your
01:26 - programming you're going to learn that
01:28 - some objects you create you don't want
01:30 - them to be able to be modified some
01:33 - objects are just regular objects and
01:35 - other objects you want constant you
01:37 - don't want them to be able to change so
01:39 - you use this constant keyword whenever
01:42 - you create an object so therefore you
01:45 - have an object that can't be modified
01:46 - and you might be thinking RA so I can
01:48 - just use it with normal functions and
01:50 - not exactly whenever you have a constant
01:53 - object
01:53 - you can't call regular functions with
01:56 - them you can only call functions that
01:58 - they themselves are constant so constant
02:01 - objects need constant functions and of
02:04 - course whenever you create a constant
02:06 - function you need to make sure it's
02:07 - constant both in the prototype in the
02:09 - header file and in
02:10 - the definition aka the C++ source file
02:13 - so let's go ahead and just create a
02:15 - regular function first and then I'm
02:17 - going to be running it aside a constant
02:20 - object I'm going to be doing a couple
02:21 - things so let's go ahead and make um a
02:24 - sally function and we'll just name it
02:26 - like print shiz and this is just a
02:30 - regular function I'm not doing anything
02:31 - weird yet so see out I'm just like I am
02:35 - a regular function and then end that
02:39 - line and then of course since we created
02:41 - a function we need to prototype it so
02:43 - then it is void I think I named it print
02:47 - shiz just like that so now we can see
02:50 - that we can just go ahead into our main
02:52 - program create a Sally object and then
02:58 - we can use that cell object to call our
03:01 - regular functions such as print shows
03:03 - just like that and whenever we run it
03:05 - everything is going to go smoothly it's
03:07 - going to print out I'm a regular
03:08 - function so I did that and we already
03:10 - know that so let's go ahead and jump
03:12 - into constant objects now whenever you
03:15 - create a constant object you do so doing
03:18 - this throw your keyword Co n st before
03:22 - you create your object and everything
03:23 - else is basically exactly the same you
03:26 - type class you want it to be from and
03:28 - also what your name your object like
03:30 - Const object looks like a pretty good
03:32 - name search and IRA all I need to do is
03:36 - Const
03:38 - object and then I can go ahead and call
03:41 - it my other methods like print shiz well
03:43 - whenever we try and do this we get an
03:45 - error message because it's saying
03:47 - alright you created an object that it
03:49 - was constant and you try to use a
03:51 - function that wasn't constant see this
03:53 - function isn't constant is just a
03:55 - regular function so we need to build
03:57 - special constant functions whenever we
04:00 - create a constant object so you're
04:01 - saying alright let's go ahead and do
04:03 - that then so let's go ahead and create
04:05 - another method on a constant excuse me
04:08 - another function talking in Java another
04:11 - computer program language but let's go
04:12 - ahead and create another special
04:14 - constant function so void Sally let's
04:17 - just name this print shiz - and in order
04:22 - to create a constant function you go
04:24 - ahead and you type the keyword constant
04:26 - right after your function definition so
04:29 - Co n s T so now what happens is right
04:34 - after this
04:34 - we build the body for it so this is just
04:36 - going to see out umm I am the constant
04:40 - function just like that and of course
04:43 - we'll end that line right there and now
04:45 - like I said before we need to prototype
04:48 - it is a constant two so we need to
04:50 - basically tell every single file that
04:52 - we're going to be working with constant
04:54 - objects and in order to prototype it
04:56 - here's what we do
04:57 - go ahead and just like before type avoid
05:02 - print chiz yeah that was called printers
05:05 - - and you just write Const right there
05:08 - and now you're telling your compiler
05:10 - alright this is a constant object
05:13 - prototype so a lot of people might think
05:15 - you do this add the Const before make
05:18 - sure you add it after the parameters and
05:21 - you should be good to go
05:21 - so now whenever we try and run this
05:24 - constant function with the constant
05:26 - object remember this is our constant
05:28 - object and this is our constant function
05:31 - print is - now whenever we try and
05:33 - run it it should be good to go I am a
05:35 - regular function
05:36 - I am the constant function pretty simple
05:39 - so so as you can see whenever we build
05:42 - objects if we build a regular object we
05:45 - can use the regular functions with them
05:48 - whenever we build a constant object
05:50 - we're telling our C++ compiler all right
05:53 - this object we don't want anything to be
05:56 - able to modify it or change it so it
05:58 - told us all right I can do that but you
06:00 - need to build me some constant functions
06:03 - if you do that for me
06:04 - I'll run your program just fine so that
06:06 - was our little deal we had with the
06:07 - compiler and that's why this one ran
06:10 - with the right wave function and this
06:12 - constant object ran with the constant
06:14 - functions so now you should understand
06:17 - how to prototype constant functions how
06:19 - to create them and also why constant
06:21 - objects need constant functions and
06:23 - again later on you're going to be seeing
06:26 - why in like bigger programs um you need
06:29 - to be able to create some objects that
06:31 - you want to be able to make constant and
06:33 - why they were useful for your compiler
06:36 - so for now I just want to teach you guys
06:37 - the very basic so in the next story
06:39 - we're probably going to be covering
06:41 - constants a little bit more because
06:43 - there's actually a lot to go over with
06:44 - constants and classes so for now that's
06:47 - all you get thank you guys for watching
06:48 - don't forget subscribe and I'll see you
06:49 - guys in the next video

Cleaned transcript:

what's going on guys welcome back to your 44 C++ tutorial and in this tutorial I'm going to be teaching you guys about a couple things specifically about the keyword Const which stands for a constant now whenever you use the keyword Const it means that whatever you use it on you typically use on variables and stuff it means that that variable remains constant throughout your program aka it can't be changed or modified in any way so let's go ahead and take a quick look at that say you have an integer variable X and you set equal to 3 whenever you first make it and then later on you want to change it to something like 5 while your program is just going to run fine and whenever you try to print out X or use it in any other way it's going to run perfectly fine as expected so what the constant keyword does in that constant keyword Co n St whenever you're creating something you put the constant keyword in there and it's pretty much telling your compiler all right now whenever I create this variable I'm going to set equal to value and I don't want you to change it for the rest of the program so now whenever you change try to change to something else like 5 in try to run this program is going to get error because it's saying hey Bucky you called this variable constant you promised me we're going to change it and now you lied me right there so that's why I'm giving you an error so that's basically what the constant keyword does and make sure that whatever is constant is unable to be modified so that being said later on in your programming you're going to learn that some objects you create you don't want them to be able to be modified some objects are just regular objects and other objects you want constant you don't want them to be able to change so you use this constant keyword whenever you create an object so therefore you have an object that can't be modified and you might be thinking RA so I can just use it with normal functions and not exactly whenever you have a constant object you can't call regular functions with them you can only call functions that they themselves are constant so constant objects need constant functions and of course whenever you create a constant function you need to make sure it's constant both in the prototype in the header file and in the definition aka the C++ source file so let's go ahead and just create a regular function first and then I'm going to be running it aside a constant object I'm going to be doing a couple things so let's go ahead and make um a sally function and we'll just name it like print shiz and this is just a regular function I'm not doing anything weird yet so see out I'm just like I am a regular function and then end that line and then of course since we created a function we need to prototype it so then it is void I think I named it print shiz just like that so now we can see that we can just go ahead into our main program create a Sally object and then we can use that cell object to call our regular functions such as print shows just like that and whenever we run it everything is going to go smoothly it's going to print out I'm a regular function so I did that and we already know that so let's go ahead and jump into constant objects now whenever you create a constant object you do so doing this throw your keyword Co n st before you create your object and everything else is basically exactly the same you type class you want it to be from and also what your name your object like Const object looks like a pretty good name search and IRA all I need to do is Const object and then I can go ahead and call it my other methods like print shiz well whenever we try and do this we get an error message because it's saying alright you created an object that it was constant and you try to use a function that wasn't constant see this function isn't constant is just a regular function so we need to build special constant functions whenever we create a constant object so you're saying alright let's go ahead and do that then so let's go ahead and create another method on a constant excuse me another function talking in Java another computer program language but let's go ahead and create another special constant function so void Sally let's just name this print shiz and in order to create a constant function you go ahead and you type the keyword constant right after your function definition so Co n s T so now what happens is right after this we build the body for it so this is just going to see out umm I am the constant function just like that and of course we'll end that line right there and now like I said before we need to prototype it is a constant two so we need to basically tell every single file that we're going to be working with constant objects and in order to prototype it here's what we do go ahead and just like before type avoid print chiz yeah that was called printers and you just write Const right there and now you're telling your compiler alright this is a constant object prototype so a lot of people might think you do this add the Const before make sure you add it after the parameters and you should be good to go so now whenever we try and run this constant function with the constant object remember this is our constant object and this is our constant function print is now whenever we try and run it it should be good to go I am a regular function I am the constant function pretty simple so so as you can see whenever we build objects if we build a regular object we can use the regular functions with them whenever we build a constant object we're telling our C++ compiler all right this object we don't want anything to be able to modify it or change it so it told us all right I can do that but you need to build me some constant functions if you do that for me I'll run your program just fine so that was our little deal we had with the compiler and that's why this one ran with the right wave function and this constant object ran with the constant functions so now you should understand how to prototype constant functions how to create them and also why constant objects need constant functions and again later on you're going to be seeing why in like bigger programs um you need to be able to create some objects that you want to be able to make constant and why they were useful for your compiler so for now I just want to teach you guys the very basic so in the next story we're probably going to be covering constants a little bit more because there's actually a lot to go over with constants and classes so for now that's all you get thank you guys for watching don't forget subscribe and I'll see you guys in the next video
