With timestamps:

00:00 - what is up y'all welcome back to another
00:02 - video and in this one i thought i'd
00:04 - share an interesting side project that
00:05 - i've been working on
00:07 - now before we get to any of this i do
00:09 - want to throw out a little disclaimer
00:11 - and that is that this tutorial series
00:14 - it's going to be a little bit more
00:15 - casual a little less structured than my
00:18 - other tutorial series
00:20 - even though my other tutorial series
00:22 - definitely were not the most formal or
00:24 - structured in the first place but i just
00:26 - want to point this out
00:28 - mostly because i i just really been
00:30 - missing getting back to these stories
00:32 - where i don't know everything wasn't so
00:34 - planned out and it was more just having
00:37 - fun hacking something together building
00:39 - something with the community uh sharing
00:41 - stories and yeah i just thought it would
00:43 - be a little bit more enjoyable so kind
00:45 - of want to get back to that
00:48 - now with that being said i'll go ahead
00:51 - and show you exactly what it is that i'm
00:53 - going for here
00:54 - and i'll start with the problem that i
00:56 - was trying to solve so check it out
00:59 - so i like having plants in my apartment
01:02 - i just think it i don't know it's cool
01:05 - watching something grow and overall it
01:07 - just feels like there's more life in my
01:09 - apartment
01:10 - now the issue with that is that i'm too
01:13 - lazy to
01:14 - to walk the three feet over to water
01:16 - them each day
01:17 - and i'm also a little bit worried that
01:19 - whenever i go on vacation that they're
01:21 - all gonna dry out and i'm gonna be
01:23 - worried that they died and yadda yadda
01:26 - it's just too stressful
01:27 - so
01:28 - i was planning some kind of system that
01:32 - would like
01:33 - automate the watering process or allow
01:35 - me to water my plants remotely
01:37 - and when i was planning on the out i
01:39 - realized that if i made this
01:40 - architecture generic enough then i could
01:43 - probably build some other cool stuff too
01:45 - almost you know kind of start turning my
01:47 - home into a smart home uh if you want to
01:50 - call it that
01:51 - that's kind of a stretch given that i
01:52 - didn't even build anything yet but
01:54 - that's kind of the background for all of
01:56 - this
01:57 - so
01:58 - let me go ahead and talk about the
02:00 - architecture that i came up with so
02:02 - check it out
02:04 - so
02:05 - the basic architecture the very first
02:08 - thing we need is just a way that i can
02:10 - have two devices communicate with one
02:12 - another because the idea i had for that
02:15 - plant watering
02:17 - thing was something like this
02:20 - where whether this is a computer
02:22 - or a mobile phone whatever but i wanted
02:25 - to be able to send commands over to some
02:28 - raspberry pi
02:29 - is what i had in mind
02:31 - and then the raspberry pi would be
02:33 - hooked up to some water bottle the water
02:35 - bottle wouldn't look like this it would
02:36 - probably be some kind of system that i
02:39 - could um automate the watering process
02:41 - easier with electronic so it won't have
02:44 - like a squeeze handle most likely but i
02:46 - have to figure something out but either
02:48 - way let's get back to this so the
02:50 - general architecture is i can send this
02:52 - raspberry pi commands from one of my
02:54 - devices and then this raspberry pi could
02:56 - water my plants
02:58 - and i thought it would be cool if you
03:00 - know i could have an app that i could do
03:02 - it from my desktop or maybe a mobile app
03:05 - as well anywhere in the world my plants
03:08 - would be watered problem solved
03:10 - okay so that is pretty cool
03:13 - so
03:14 - before just hopping right in to that
03:18 - though i figure i kind of
03:21 - want to build this up
03:23 - and by build it up i mean uh kind of
03:25 - building it more in bite size manageable
03:27 - pieces
03:28 - so
03:29 - i'll kind of walk you guys through my
03:31 - overall plan and if you have any
03:33 - feedback then i'd love to hear but the
03:35 - very first thing that i'm going to be
03:37 - doing
03:38 - is really just hooking up a very basic
03:40 - system where i can send sample text
03:43 - messages back and forth between my
03:45 - devices
03:47 - and i wouldn't even call this like a
03:48 - chat app
03:50 - more of like a simple
03:51 - ping pong service if you want to say
03:53 - that but either way the very first thing
03:55 - i'm going to be doing is just hooking up
03:57 - my imac and my laptop and just seeing if
04:01 - i can you know send ping and get a pong
04:04 - response back
04:06 - now once i do that
04:08 - then
04:09 - i can go ahead and
04:11 - replace this device delete that
04:15 - with this
04:16 - raspberry pi automated watering system
04:20 - and then
04:22 - move all this around
04:23 - one other app id i had by the way i'm
04:27 - i'm not saying that i'm going to be
04:28 - building all these i just want to
04:30 - give you some examples of the type of
04:32 - architecture that you know kind of show
04:33 - you what's possible
04:35 - um another cool app idea i had
04:37 - is that
04:38 - well i'll explain kind of my thought i
04:40 - had is that whenever i'm like out
04:43 - traveling or going hiking or anything if
04:45 - i could just take a picture with my
04:47 - mobile phone
04:49 - and when i come back
04:51 - to my apartment i could have some like
04:52 - digital picture frame and it would like
04:54 - appear there um i thought that would be
04:56 - pretty cool or maybe if i was browsing
04:59 - online and finding a cool picture then i
05:01 - could just use some app to
05:03 - you know pretty much manage my digital
05:04 - picture frames for my apartment
05:06 - and i'm almost certain something like
05:08 - this must already exist already but you
05:10 - know it's cool if we build it ourselves
05:12 - so
05:12 - those are some app ideas that i had if
05:15 - you have any more i'd love to hear them
05:16 - but uh yeah
05:18 - and now with that being said let's pop
05:21 - this back open
05:23 - and okay
05:24 - so since i'm going to be building
05:26 - multiple apps and not just one what i
05:28 - started doing is building out this
05:30 - platform called tnb os
05:33 - it's of course not an actual operating
05:35 - system it's
05:36 - actually written in electron and react
05:38 - but i thought t and bos sounded cool so
05:41 - sticking with that for now
05:43 - and the purpose of this
05:45 - platform i guess you could say
05:47 - is really to abstract away a lot of the
05:49 - technical stuff and i'm also writing a
05:52 - more standard api that i can use for app
05:54 - development just so i don't have to
05:56 - write the same functions over and over
05:57 - and over again
05:59 - and so far
06:01 - the progress that i made is really as
06:03 - you can see been working on the ui some
06:06 - of the project structure uh hooking up
06:09 - redux writing some standard components
06:12 - and let me show you the ui real quick
06:15 - so the ui what i have built right now
06:17 - are two well they're called apps in the
06:20 - system but the first one is this just
06:22 - the network manager
06:23 - um i didn't want to
06:26 - pop this back open
06:28 - so i didn't just want to make this
06:30 - platform where
06:31 - the
06:32 - server that i had was hard coded in
06:34 - because i figured if anyone else wants
06:36 - to use this i don't know maybe you want
06:38 - to develop your own uh private network
06:40 - applications that uh you know you can
06:43 - add your own
06:44 - so this is what i have kind of a network
06:46 - manager right here and of course you can
06:49 - edit delete it yada yada and then i also
06:52 - have this
06:53 - device manager and by the way these
06:55 - aren't real devices right now like i
06:57 - said none of this is hooked up to the
06:58 - back end as of yet but eventually these
07:01 - are going to be real devices
07:03 - pretty much adam and then
07:05 - eventually later on we're going to be
07:06 - building applications that allows us to
07:08 - communicate with these
07:10 - but really just want to have something
07:12 - simple on the ui right now to verify
07:14 - that everything is working
07:16 - and
07:17 - yeah so still figuring out how to
07:19 - structure everything
07:21 - of course i need quite a bit of
07:24 - ui work um kind of through this ui
07:27 - together is
07:28 - kind of quickly need to polish it up
07:31 - these are like
07:33 - pretty much the first icons that i could
07:35 - find
07:36 - but
07:37 - yeah lots of interesting challenges
07:40 - with using electron in react as an
07:42 - operating system and i say that in air
07:44 - quotes especially whenever
07:46 - we're building these i don't even know
07:48 - what you call them like stateless
07:50 - peer-to-peer remote apps whatever you
07:52 - want to call this overall architecture
07:55 - and
07:56 - it's actually believe it or not been
07:58 - pretty fun to build
08:00 - the back end right now i would say is
08:03 - about 96
08:05 - done it just needs some updates to the
08:07 - websocket authentication so that only
08:09 - the account owner can listen to their
08:11 - traffic thought it would be a little bit
08:12 - more secure that way but once that's
08:15 - ready gonna start hooking everything up
08:17 - to the front end
08:18 - so shortly all of this ui
08:23 - will hopefully be live and working so
08:25 - looking forward to that
08:28 - but yeah that's really all i wanted to
08:29 - cover in this first video
08:31 - if you have any thoughts on the ui let
08:33 - me know what i was thinking
08:36 - is that these system apps right here
08:39 - would probably be on the right and then
08:43 - all of those custom apps that we talked
08:45 - about like for watering the plants
08:46 - chatting uh managing your digital
08:49 - pictures so on and so forth i was
08:50 - thinking that those would be on the left
08:53 - it just felt kind of intuitive that way
08:55 - but uh yeah let me know
08:57 - and also another thing that i want to
08:59 - point out i saw on reddit that someone
09:03 - was making a react project that was kind
09:06 - of similar like a react type os
09:09 - kind of app
09:10 - and they had these windows that were
09:12 - movable and resizable more like an
09:16 - actual operating system right now these
09:18 - windows right here are static you can
09:20 - see you can't drag them or resize them
09:22 - or anything but that's another feature
09:24 - that i want to work on i think it would
09:25 - be i don't know just a little more os
09:27 - like very cool
09:29 - but yeah
09:30 - overall just thought it was a cool
09:32 - little side project wanted to share it
09:34 - in the next video i'm going to be going
09:36 - over the project structure
09:39 - but for now i'm actually pretty hungry
09:42 - so probably going to go pound a few
09:43 - beefaroni's
09:44 - and on that note i will talk to you
09:46 - later see ya

Cleaned transcript:

what is up y'all welcome back to another video and in this one i thought i'd share an interesting side project that i've been working on now before we get to any of this i do want to throw out a little disclaimer and that is that this tutorial series it's going to be a little bit more casual a little less structured than my other tutorial series even though my other tutorial series definitely were not the most formal or structured in the first place but i just want to point this out mostly because i i just really been missing getting back to these stories where i don't know everything wasn't so planned out and it was more just having fun hacking something together building something with the community uh sharing stories and yeah i just thought it would be a little bit more enjoyable so kind of want to get back to that now with that being said i'll go ahead and show you exactly what it is that i'm going for here and i'll start with the problem that i was trying to solve so check it out so i like having plants in my apartment i just think it i don't know it's cool watching something grow and overall it just feels like there's more life in my apartment now the issue with that is that i'm too lazy to to walk the three feet over to water them each day and i'm also a little bit worried that whenever i go on vacation that they're all gonna dry out and i'm gonna be worried that they died and yadda yadda it's just too stressful so i was planning some kind of system that would like automate the watering process or allow me to water my plants remotely and when i was planning on the out i realized that if i made this architecture generic enough then i could probably build some other cool stuff too almost you know kind of start turning my home into a smart home uh if you want to call it that that's kind of a stretch given that i didn't even build anything yet but that's kind of the background for all of this so let me go ahead and talk about the architecture that i came up with so check it out so the basic architecture the very first thing we need is just a way that i can have two devices communicate with one another because the idea i had for that plant watering thing was something like this where whether this is a computer or a mobile phone whatever but i wanted to be able to send commands over to some raspberry pi is what i had in mind and then the raspberry pi would be hooked up to some water bottle the water bottle wouldn't look like this it would probably be some kind of system that i could um automate the watering process easier with electronic so it won't have like a squeeze handle most likely but i have to figure something out but either way let's get back to this so the general architecture is i can send this raspberry pi commands from one of my devices and then this raspberry pi could water my plants and i thought it would be cool if you know i could have an app that i could do it from my desktop or maybe a mobile app as well anywhere in the world my plants would be watered problem solved okay so that is pretty cool so before just hopping right in to that though i figure i kind of want to build this up and by build it up i mean uh kind of building it more in bite size manageable pieces so i'll kind of walk you guys through my overall plan and if you have any feedback then i'd love to hear but the very first thing that i'm going to be doing is really just hooking up a very basic system where i can send sample text messages back and forth between my devices and i wouldn't even call this like a chat app more of like a simple ping pong service if you want to say that but either way the very first thing i'm going to be doing is just hooking up my imac and my laptop and just seeing if i can you know send ping and get a pong response back now once i do that then i can go ahead and replace this device delete that with this raspberry pi automated watering system and then move all this around one other app id i had by the way i'm i'm not saying that i'm going to be building all these i just want to give you some examples of the type of architecture that you know kind of show you what's possible um another cool app idea i had is that well i'll explain kind of my thought i had is that whenever i'm like out traveling or going hiking or anything if i could just take a picture with my mobile phone and when i come back to my apartment i could have some like digital picture frame and it would like appear there um i thought that would be pretty cool or maybe if i was browsing online and finding a cool picture then i could just use some app to you know pretty much manage my digital picture frames for my apartment and i'm almost certain something like this must already exist already but you know it's cool if we build it ourselves so those are some app ideas that i had if you have any more i'd love to hear them but uh yeah and now with that being said let's pop this back open and okay so since i'm going to be building multiple apps and not just one what i started doing is building out this platform called tnb os it's of course not an actual operating system it's actually written in electron and react but i thought t and bos sounded cool so sticking with that for now and the purpose of this platform i guess you could say is really to abstract away a lot of the technical stuff and i'm also writing a more standard api that i can use for app development just so i don't have to write the same functions over and over and over again and so far the progress that i made is really as you can see been working on the ui some of the project structure uh hooking up redux writing some standard components and let me show you the ui real quick so the ui what i have built right now are two well they're called apps in the system but the first one is this just the network manager um i didn't want to pop this back open so i didn't just want to make this platform where the server that i had was hard coded in because i figured if anyone else wants to use this i don't know maybe you want to develop your own uh private network applications that uh you know you can add your own so this is what i have kind of a network manager right here and of course you can edit delete it yada yada and then i also have this device manager and by the way these aren't real devices right now like i said none of this is hooked up to the back end as of yet but eventually these are going to be real devices pretty much adam and then eventually later on we're going to be building applications that allows us to communicate with these but really just want to have something simple on the ui right now to verify that everything is working and yeah so still figuring out how to structure everything of course i need quite a bit of ui work um kind of through this ui together is kind of quickly need to polish it up these are like pretty much the first icons that i could find but yeah lots of interesting challenges with using electron in react as an operating system and i say that in air quotes especially whenever we're building these i don't even know what you call them like stateless peertopeer remote apps whatever you want to call this overall architecture and it's actually believe it or not been pretty fun to build the back end right now i would say is about 96 done it just needs some updates to the websocket authentication so that only the account owner can listen to their traffic thought it would be a little bit more secure that way but once that's ready gonna start hooking everything up to the front end so shortly all of this ui will hopefully be live and working so looking forward to that but yeah that's really all i wanted to cover in this first video if you have any thoughts on the ui let me know what i was thinking is that these system apps right here would probably be on the right and then all of those custom apps that we talked about like for watering the plants chatting uh managing your digital pictures so on and so forth i was thinking that those would be on the left it just felt kind of intuitive that way but uh yeah let me know and also another thing that i want to point out i saw on reddit that someone was making a react project that was kind of similar like a react type os kind of app and they had these windows that were movable and resizable more like an actual operating system right now these windows right here are static you can see you can't drag them or resize them or anything but that's another feature that i want to work on i think it would be i don't know just a little more os like very cool but yeah overall just thought it was a cool little side project wanted to share it in the next video i'm going to be going over the project structure but for now i'm actually pretty hungry so probably going to go pound a few beefaroni's and on that note i will talk to you later see ya
