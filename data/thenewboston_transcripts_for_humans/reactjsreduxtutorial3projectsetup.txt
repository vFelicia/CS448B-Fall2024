With timestamps:

00:00 - alright guys so now that you have a
00:01 - pretty good overview of redux let's go
00:04 - ahead and start writing some code now if
00:07 - you just want to kind of follow along
00:09 - with these tutorials and just watch them
00:11 - before kind of you know writing any code
00:13 - then go ahead and skip to the next video
00:15 - but for those of you who want to follow
00:16 - along then stick with this video and
00:19 - I'll show you how to set up a basic
00:20 - project how to download all the sample
00:22 - code so on and so forth so as always
00:26 - what I did is I already took all the
00:27 - code from these tutorials and I upload
00:29 - them to my github account so if you go
00:32 - to this URL github combo key Roberts
00:34 - react Redux boilerplate and I'll post it
00:38 - in the comment section below
00:39 - and if I forget which I also usually do
00:42 - then someone else just post the link to
00:44 - it but anyways login to your github and
00:47 - just clone it or if you don't have a
00:49 - github account then you can just right
00:50 - click this button and hit download zip
00:52 - and that's going to download all of the
00:54 - project files so not only did I upload
00:57 - the project files to here but I also
00:59 - included a bunch of diagrams of how
01:02 - Redux works with the react a lot of
01:05 - instructions on how to set up the
01:07 - project and I also included a bunch of
01:09 - different read amis and guides and I
01:11 - comment in the code and it makes it
01:12 - really easy to learn and understand the
01:15 - basic redux application but anyways once
01:18 - you have this is downloaded go ahead and
01:20 - extract it because it's a zip file and
01:22 - once you do you're going to have this
01:25 - directory so of course what you need to
01:29 - do from here is just from a command line
01:32 - go ahead and run NPM install and that's
01:35 - going to install all of the dependencies
01:38 - or files that you need in order to kind
01:40 - of start things up now if you go and
01:43 - package Jason this is actually a list of
01:46 - all the dependencies that you need so
01:49 - again this is kind of normal for a react
01:51 - or redux application and if you guys
01:54 - have no idea what I'm talking about or
01:55 - what dependencies are dependencies or
01:57 - just files that your program needs in
01:59 - order to run your program depends on
02:01 - those in order to work so this is
02:04 - actually set up to use webpack and I
02:07 - know I'm kind of going to skip over this
02:09 - but wet pack is kind of like gulp or
02:12 - grunt in that
02:13 - it's a build tool so it really deserves
02:16 - its own separate tutorial series so
02:19 - instead of just trying to cover
02:20 - everything in this series I'm going to
02:22 - make a whole nother tutorial series for
02:23 - it so just a real quick overview what it
02:27 - does is essentially sets up a
02:28 - development server so we can change our
02:31 - code in there refresh is live which is
02:33 - really cool and it converts all of your
02:37 - JSX
02:39 - and react to pure JavaScript so it can
02:41 - run in a browser and I also set it up
02:43 - where you can type a CSS or sass and it
02:46 - converts it to normal CSS so it can of
02:49 - course be displayed in the browser so
02:52 - that's all it does it allows us to write
02:54 - code and display it properly in a
02:57 - browser and it converts all of it for it
02:59 - behind the scenes so before what we did
03:02 - is in our react to toriel's
03:04 - we pretty much had one HTML file and we
03:07 - included everything in that file just as
03:11 - JavaScript includes and then we ran it
03:14 - in a browser and everything was good to
03:16 - go now of course you would never want to
03:18 - do this in actual application because
03:20 - what if you had all of the code for your
03:25 - entire application in a one HTML file
03:28 - that probably isn't the best structure
03:30 - to set things up so what I did in this
03:32 - project is I kind of already gave you
03:35 - guys a starting kit basically what you
03:38 - want to do is you want to break up
03:39 - everything in your development code so
03:42 - this is your development code and you're
03:44 - pretty much only going to be writing
03:45 - code in this file your JavaScript and
03:48 - your s CSS for styling and then after it
03:52 - gets built and again this all happens
03:54 - behind the scenes automatically then it
03:57 - pumps it out to this file right here
03:59 - bundle midnight J s so never touch
04:03 - anything in here this is just your
04:06 - target this root right here is where
04:09 - your app is going to be displayed and
04:12 - this bundle midnight J s is the file
04:15 - that gets automatically generated from
04:17 - your build tool so again all the code
04:20 - that we write is just going to be right
04:21 - in here all right so let's go ahead and
04:23 - set this up and start running it so
04:25 - after you run NP
04:27 - install what you can do first is you can
04:29 - actually just run a wet pack now after
04:32 - you run this what this does it is it
04:35 - pretty much initially builds your
04:36 - project so it takes all of the react
04:40 - code in here and it converts the
04:41 - JavaScript and now your project is built
04:45 - now of course whenever you run a website
04:48 - it needs to run on a server so what you
04:51 - can do is you can buy some server online
04:53 - and kind of use that for a development
04:55 - or what you can do is you can actually
04:57 - just set up a lightweight development
04:59 - server and it's kind of a pain in the
05:01 - butt luckily I already did that for you
05:04 - too so if you hit npm run actually let
05:08 - me clear the screen so it's a little bit
05:09 - easier to see npm run start then what
05:14 - this is going to do is it's going to
05:15 - start your development server so let me
05:17 - go ahead and organize this and show you
05:21 - guys what's going on
05:22 - now the home page for your website is
05:26 - localhost colon 3000 so localhost means
05:31 - it's your own computer instead of like
05:34 - some IP address of a server in texas or
05:36 - whatever and 3000 is just the port and
05:40 - if you guys don't know what that is and
05:43 - check out my networking tutorials
05:44 - basically this is the starter
05:46 - application and this is what we're going
05:48 - to be building pretty awesome a now
05:51 - another thing is whenever we write our
05:54 - code the changes are going to be
05:57 - reflected immediately we don't have to
05:59 - save any files we don't have to refresh
06:02 - our browser we write code and we're
06:04 - going to see the changes live in real
06:06 - time all taken care of for you
06:07 - by me you are welcome alright so you
06:12 - guys are probably noticing that for a
06:13 - starting point we have a whole lot of
06:16 - code so what I would recommend doing is
06:19 - if you just want to poke around for a
06:21 - little bit and see all the different
06:22 - pieces then feel free but since I need
06:25 - to teach you guys react and redux from
06:27 - the ground up then what I'm going to do
06:29 - is this go ahead and in your JavaScript
06:31 - directory dev j/s delete all of these
06:35 - folders right here those are all your
06:39 - react Redux folders but we
06:41 - are going to be learning those from
06:42 - scratch so from here let's just go ahead
06:45 - and delete everything except these top
06:48 - three lines of code we can get rid of
06:50 - this too and actually let's restructure
06:54 - this like this instead of a provider
06:57 - I'll just write h1 all right okay now so
07:02 - check this out art so now we are to a
07:06 - point where you should be familiar with
07:08 - um before what we did is we just had one
07:12 - main file in my old react tutorials and
07:15 - we just imported everything right here
07:17 - and now instead of importing a react and
07:20 - react Dom as JavaScript files explicitly
07:23 - we are just importing them from our node
07:27 - modules and this was just package that
07:29 - we downloaded whenever you're in npm
07:31 - install so that's what we're doing right
07:33 - here and of course you already know what
07:36 - this line of code does it pretty much
07:37 - takes a component and it renders it or
07:41 - displays it in a target and thus target
07:44 - is just this little div right there so
07:49 - there you go awesome starting point now
07:52 - the one other line of code that I
07:53 - probably should mention is this import
07:55 - Babel polyfill arm I don't think we use
07:59 - this in our react to toriel's anytime
08:01 - you see polyfill all this means is take
08:04 - code and make it backwards compatible in
08:07 - other words we're going to be writing
08:08 - new kind of flavors of JavaScript like
08:10 - JSX and es6 and it's not going to be
08:13 - compatible for older browsers so that's
08:16 - what polyfill is it's the special tool
08:18 - that gets ran in the background that
08:20 - makes it compatible with older browsers
08:22 - that's all so now that we got to a nice
08:25 - starting point in our project is setup
08:28 - we are now ready to start writing some
08:30 - react with redux

Cleaned transcript:

alright guys so now that you have a pretty good overview of redux let's go ahead and start writing some code now if you just want to kind of follow along with these tutorials and just watch them before kind of you know writing any code then go ahead and skip to the next video but for those of you who want to follow along then stick with this video and I'll show you how to set up a basic project how to download all the sample code so on and so forth so as always what I did is I already took all the code from these tutorials and I upload them to my github account so if you go to this URL github combo key Roberts react Redux boilerplate and I'll post it in the comment section below and if I forget which I also usually do then someone else just post the link to it but anyways login to your github and just clone it or if you don't have a github account then you can just right click this button and hit download zip and that's going to download all of the project files so not only did I upload the project files to here but I also included a bunch of diagrams of how Redux works with the react a lot of instructions on how to set up the project and I also included a bunch of different read amis and guides and I comment in the code and it makes it really easy to learn and understand the basic redux application but anyways once you have this is downloaded go ahead and extract it because it's a zip file and once you do you're going to have this directory so of course what you need to do from here is just from a command line go ahead and run NPM install and that's going to install all of the dependencies or files that you need in order to kind of start things up now if you go and package Jason this is actually a list of all the dependencies that you need so again this is kind of normal for a react or redux application and if you guys have no idea what I'm talking about or what dependencies are dependencies or just files that your program needs in order to run your program depends on those in order to work so this is actually set up to use webpack and I know I'm kind of going to skip over this but wet pack is kind of like gulp or grunt in that it's a build tool so it really deserves its own separate tutorial series so instead of just trying to cover everything in this series I'm going to make a whole nother tutorial series for it so just a real quick overview what it does is essentially sets up a development server so we can change our code in there refresh is live which is really cool and it converts all of your JSX and react to pure JavaScript so it can run in a browser and I also set it up where you can type a CSS or sass and it converts it to normal CSS so it can of course be displayed in the browser so that's all it does it allows us to write code and display it properly in a browser and it converts all of it for it behind the scenes so before what we did is in our react to toriel's we pretty much had one HTML file and we included everything in that file just as JavaScript includes and then we ran it in a browser and everything was good to go now of course you would never want to do this in actual application because what if you had all of the code for your entire application in a one HTML file that probably isn't the best structure to set things up so what I did in this project is I kind of already gave you guys a starting kit basically what you want to do is you want to break up everything in your development code so this is your development code and you're pretty much only going to be writing code in this file your JavaScript and your s CSS for styling and then after it gets built and again this all happens behind the scenes automatically then it pumps it out to this file right here bundle midnight J s so never touch anything in here this is just your target this root right here is where your app is going to be displayed and this bundle midnight J s is the file that gets automatically generated from your build tool so again all the code that we write is just going to be right in here all right so let's go ahead and set this up and start running it so after you run NP install what you can do first is you can actually just run a wet pack now after you run this what this does it is it pretty much initially builds your project so it takes all of the react code in here and it converts the JavaScript and now your project is built now of course whenever you run a website it needs to run on a server so what you can do is you can buy some server online and kind of use that for a development or what you can do is you can actually just set up a lightweight development server and it's kind of a pain in the butt luckily I already did that for you too so if you hit npm run actually let me clear the screen so it's a little bit easier to see npm run start then what this is going to do is it's going to start your development server so let me go ahead and organize this and show you guys what's going on now the home page for your website is localhost colon 3000 so localhost means it's your own computer instead of like some IP address of a server in texas or whatever and 3000 is just the port and if you guys don't know what that is and check out my networking tutorials basically this is the starter application and this is what we're going to be building pretty awesome a now another thing is whenever we write our code the changes are going to be reflected immediately we don't have to save any files we don't have to refresh our browser we write code and we're going to see the changes live in real time all taken care of for you by me you are welcome alright so you guys are probably noticing that for a starting point we have a whole lot of code so what I would recommend doing is if you just want to poke around for a little bit and see all the different pieces then feel free but since I need to teach you guys react and redux from the ground up then what I'm going to do is this go ahead and in your JavaScript directory dev j/s delete all of these folders right here those are all your react Redux folders but we are going to be learning those from scratch so from here let's just go ahead and delete everything except these top three lines of code we can get rid of this too and actually let's restructure this like this instead of a provider I'll just write h1 all right okay now so check this out art so now we are to a point where you should be familiar with um before what we did is we just had one main file in my old react tutorials and we just imported everything right here and now instead of importing a react and react Dom as JavaScript files explicitly we are just importing them from our node modules and this was just package that we downloaded whenever you're in npm install so that's what we're doing right here and of course you already know what this line of code does it pretty much takes a component and it renders it or displays it in a target and thus target is just this little div right there so there you go awesome starting point now the one other line of code that I probably should mention is this import Babel polyfill arm I don't think we use this in our react to toriel's anytime you see polyfill all this means is take code and make it backwards compatible in other words we're going to be writing new kind of flavors of JavaScript like JSX and es6 and it's not going to be compatible for older browsers so that's what polyfill is it's the special tool that gets ran in the background that makes it compatible with older browsers that's all so now that we got to a nice starting point in our project is setup we are now ready to start writing some react with redux
