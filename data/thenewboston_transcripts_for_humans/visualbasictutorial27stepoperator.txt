With timestamps:

00:01 - hello YouTube sam here from youtube.com
00:04 - slash on live gamer for the new Boston
00:06 - and in this tutorial we're going to be
00:08 - taking a look at step operators now the
00:11 - last tutorial we did a simple for loop
00:13 - and in that for loop it automatically
00:17 - stepped it up by one each time the for
00:19 - loop brand now sometimes you won't want
00:23 - to do that maybe you want to step it by
00:25 - five or step it by even 100 there's an
00:29 - easy way to do this by using what's
00:31 - called the step operator and you can
00:33 - also step negative numbers too so let's
00:35 - go ahead and create a little demo
00:37 - application for this we'll go ahead and
00:40 - go up to new project we go to console
00:43 - application and we will just call it
00:46 - step operator and we'll just go ahead
00:50 - and click okay let's zoom in a bit here
01:02 - okay so let's just add console dot
01:06 - readline so it waits for us to press
01:08 - ENTER or close out of the program for it
01:11 - to close the window before we're done
01:14 - reading so let's go ahead and create a
01:17 - for loop so we're going to do for num1
01:21 - equals 1 to 20 and then we'll just do
01:26 - console dot write line now 1 now when
01:31 - you're making a for loop you don't have
01:33 - to declare the variable num 1 I know I
01:35 - did that in my last tutorial but it
01:37 - isn't necessary you can if you want to
01:41 - okay so now that we've got this for loop
01:43 - done let's just go ahead and do console
01:47 - dot write line up here normal for loop
01:52 - and let's create another for loop so for
02:00 - number 1 equals 1 to 20 and then let's
02:04 - just do console dot write line num1 now
02:11 - these are exactly the same but we can do
02:13 - something very simple to make them
02:14 - completely different so for number 1
02:17 - equals 1 to 20 and we just call the step
02:20 - operator and set specifies how much to
02:22 - increment between each loop iteration so
02:25 - that basically says whenever it gets
02:27 - down to the next your whatever is after
02:29 - step is going to be how much it adds to
02:31 - num one so let's just go ahead and let's
02:35 - step 5 in this for loop so let's just
02:39 - come up here and type console dot write
02:42 - line and then we'll do another one just
02:45 - so it adds a space in between our for
02:47 - loops
02:52 - and we'll just say step by five now
02:57 - let's create one more for loop to
03:00 - console dot write line and we'll do that
03:05 - one more time but in this one we'll say
03:08 - step by negative four so let's create
03:15 - one more for loop so for number one
03:17 - equals twenty to one and we'll just step
03:23 - that by negative four so what this is
03:27 - going to do is it's going to start our
03:28 - for loop at 20 and go down for each time
03:31 - until it gets to one and we'll just do
03:34 - console dot write line num1 so let's go
03:42 - ahead and run our program and see what
03:43 - happens okay so up here we have our
03:48 - normal for loop which starts at 1 and
03:51 - goes all the way to 20 and calcify 1
03:53 - each time and if we scroll down a bit we
03:56 - have our step by 5 starts out at 1 adds
03:59 - 5 to it which gives you 6 then gives you
04:02 - 11 and then it gives you 16 now you can
04:05 - see it didn't print anything else after
04:07 - 16 and the reason it does this is
04:09 - because if you add 5 to 16 it's going to
04:11 - be 21 and that's going to be out of the
04:13 - bounds of the loop that we set and
04:16 - here's our step by negative 4 it starts
04:20 - out of 20 subtracts 4 from it which is
04:22 - which makes 16 then it goes out of 12
04:25 - then 8 then 4 and it doesn't go down to
04:28 - 0 because once again that would be out
04:30 - of the balance that we set for the loop
04:33 - now step is a very simple thing to learn
04:37 - and it's very useful though I find
04:40 - myself using it a lot when I make
04:41 - programs and so go ahead and give it a
04:45 - try make some programs with it and then
04:46 - once you've got that down go ahead and
04:48 - move on to the next tutorial so thanks
04:50 - for watching

Cleaned transcript:

hello YouTube sam here from youtube.com slash on live gamer for the new Boston and in this tutorial we're going to be taking a look at step operators now the last tutorial we did a simple for loop and in that for loop it automatically stepped it up by one each time the for loop brand now sometimes you won't want to do that maybe you want to step it by five or step it by even 100 there's an easy way to do this by using what's called the step operator and you can also step negative numbers too so let's go ahead and create a little demo application for this we'll go ahead and go up to new project we go to console application and we will just call it step operator and we'll just go ahead and click okay let's zoom in a bit here okay so let's just add console dot readline so it waits for us to press ENTER or close out of the program for it to close the window before we're done reading so let's go ahead and create a for loop so we're going to do for num1 equals 1 to 20 and then we'll just do console dot write line now 1 now when you're making a for loop you don't have to declare the variable num 1 I know I did that in my last tutorial but it isn't necessary you can if you want to okay so now that we've got this for loop done let's just go ahead and do console dot write line up here normal for loop and let's create another for loop so for number 1 equals 1 to 20 and then let's just do console dot write line num1 now these are exactly the same but we can do something very simple to make them completely different so for number 1 equals 1 to 20 and we just call the step operator and set specifies how much to increment between each loop iteration so that basically says whenever it gets down to the next your whatever is after step is going to be how much it adds to num one so let's just go ahead and let's step 5 in this for loop so let's just come up here and type console dot write line and then we'll do another one just so it adds a space in between our for loops and we'll just say step by five now let's create one more for loop to console dot write line and we'll do that one more time but in this one we'll say step by negative four so let's create one more for loop so for number one equals twenty to one and we'll just step that by negative four so what this is going to do is it's going to start our for loop at 20 and go down for each time until it gets to one and we'll just do console dot write line num1 so let's go ahead and run our program and see what happens okay so up here we have our normal for loop which starts at 1 and goes all the way to 20 and calcify 1 each time and if we scroll down a bit we have our step by 5 starts out at 1 adds 5 to it which gives you 6 then gives you 11 and then it gives you 16 now you can see it didn't print anything else after 16 and the reason it does this is because if you add 5 to 16 it's going to be 21 and that's going to be out of the bounds of the loop that we set and here's our step by negative 4 it starts out of 20 subtracts 4 from it which is which makes 16 then it goes out of 12 then 8 then 4 and it doesn't go down to 0 because once again that would be out of the balance that we set for the loop now step is a very simple thing to learn and it's very useful though I find myself using it a lot when I make programs and so go ahead and give it a try make some programs with it and then once you've got that down go ahead and move on to the next tutorial so thanks for watching
