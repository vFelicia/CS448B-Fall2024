With timestamps:

00:00 - what's going on guys it's Bucky and
00:02 - welcome back to your 26th JavaScript
00:04 - tutorial now in one of the tutorials
00:07 - before I told you guys that there are a
00:09 - couple different ways to create objects
00:11 - one way is to use something called a
00:13 - Constructor function well in this
00:15 - tutorial I'm going to be talking to you
00:17 - guys about the different type of way or
00:19 - another way to create objects and this
00:21 - is called object
00:23 - initializers an object initializer is a
00:26 - lot faster than a Constructor function
00:30 - because it's only one line of code as
00:32 - opposed to a whole function and then
00:33 - creating the object it pretty much takes
00:35 - everything and squishes it together in
00:37 - one line and why would you use this and
00:40 - when would you use a Constructor
00:42 - function you would use this whenever
00:43 - you're creating basically only one or
00:46 - two objects of the same type for example
00:49 - if you had if you're creating like 500
00:52 - person objects then you probably want to
00:54 - use a Constructor function but if you're
00:56 - just creating one Bucky object or a
00:58 - Bucky and a tailor object object then
01:00 - this is fine so for this example it's
01:02 - probably a little more easier and this
01:05 - is probably what you want to do when
01:06 - you're just starting out making objects
01:08 - so let's go ahead and in our head since
01:10 - we're just going to be creating our
01:11 - objects now not typing anything out
01:13 - let's go ahead and create our objects
01:15 - right now so you don't use the keyword
01:19 - VAR and you don't use the keyword new
01:22 - the only thing you need to do when
01:24 - making object initializers is type the
01:27 - name of whatever you want your object to
01:29 - be named and I want my object to be
01:31 - named Bucky and go ahead and set that
01:34 - equal to all the properties you want to
01:37 - set equal to whatever it is so like
01:39 - before we made a Constructor function
01:42 - that had a name and an age well now
01:45 - let's go ahead and do the same thing so
01:47 - in order to do that go ahead and write
01:49 - the name of the property which is name
01:52 - then add a colon now after this you
01:55 - write the value which you want it to
01:56 - equal so I want the name of Bucky to be
02:00 - Bucky Roberts and now you say all right
02:03 - we want another property now so in order
02:06 - to do that just go ahead and separate it
02:08 - with a comma and then go ahead and type
02:10 - the name of the property which is age
02:12 - and set this equal to whatever value you
02:14 - want to be equal to 24 so as you can see
02:18 - instead of writing each property on a
02:22 - separate line with the Constructor
02:23 - function all you do now is separate your
02:26 - properties with a comma and go ahead and
02:29 - list the property colon value property
02:34 - colon value and I have two properties in
02:37 - here but you can have a thousand if you
02:38 - want the only thing you have to remember
02:40 - is separate them all with a comma pretty
02:43 - cool huh so now let's go ahead and make
02:45 - another object so so so so what the heck
02:48 - one of my Chinese just so we can see
02:53 - more clearly what's going on so I'll go
02:55 - ahead and make that other tailor object
02:57 - just like before and sorry if I offend
02:59 - it and any oriental people there but uh
03:03 - one of the properties is name and I
03:05 - would want this to be equal to Taylor
03:09 - Swift and another property is age so go
03:12 - ahead and add my comma property age and
03:15 - for the value is 20 so now we have two
03:19 - objects Bucky's name is Bucky Roberts
03:22 - Taylor's name is Taylor Swift Bucky's
03:25 - age is 24 Taylor's age is 20 easy enough
03:29 - so now now just like before the body can
03:32 - be the exact same anytime you want to
03:34 - use your object it's no different than
03:36 - before just go ahead and write your
03:37 - object name like Bucky and then go ahead
03:40 - and write whatever property you want to
03:42 - use like age name whatever so let's go
03:45 - ahead and take a look at a quick example
03:49 - document. WR and go ahead and write like
03:53 - Bucky
03:58 - name love
04:01 - loves Taylor
04:06 - name because she
04:11 - is Taylor H now let's see if I mixed
04:15 - anything up or messed it up
04:18 - whatever Bucky
04:20 - Roberts loves Taylor Swift because she
04:23 - is 20 pretty cool so like before we can
04:27 - see that whenever we want to use one of
04:29 - these properties just go ahead and write
04:31 - the object property object property
04:35 - object property simple enough eh so now
04:39 - we see that we have two different ways
04:41 - we can make objects using object
04:43 - initializers which are these or using
04:46 - Constructor functions and like I said if
04:49 - we had more than two people like Bucky
04:51 - Taylor John Steven uh Tony Mikey Maddie
04:55 - we would have to I mean we won't have to
04:59 - but it's better to use a Constructor
05:01 - function but now that we only have one
05:03 - or two objects using um an object
05:07 - initializer is fine so that's when you
05:09 - would use object initializers as opposed
05:11 - to Constructor functions so for now
05:13 - that's all I have for you um in the next
05:15 - tutorial I don't know what I'm going to
05:16 - be talking about but trust me it's going
05:19 - to be awesome so thank you guys for
05:20 - watching don't forget to subscribe don't
05:22 - forget to check out my website yada yada
05:24 - yada and I'll see you later

Cleaned transcript:

what's going on guys it's Bucky and welcome back to your 26th JavaScript tutorial now in one of the tutorials before I told you guys that there are a couple different ways to create objects one way is to use something called a Constructor function well in this tutorial I'm going to be talking to you guys about the different type of way or another way to create objects and this is called object initializers an object initializer is a lot faster than a Constructor function because it's only one line of code as opposed to a whole function and then creating the object it pretty much takes everything and squishes it together in one line and why would you use this and when would you use a Constructor function you would use this whenever you're creating basically only one or two objects of the same type for example if you had if you're creating like 500 person objects then you probably want to use a Constructor function but if you're just creating one Bucky object or a Bucky and a tailor object object then this is fine so for this example it's probably a little more easier and this is probably what you want to do when you're just starting out making objects so let's go ahead and in our head since we're just going to be creating our objects now not typing anything out let's go ahead and create our objects right now so you don't use the keyword VAR and you don't use the keyword new the only thing you need to do when making object initializers is type the name of whatever you want your object to be named and I want my object to be named Bucky and go ahead and set that equal to all the properties you want to set equal to whatever it is so like before we made a Constructor function that had a name and an age well now let's go ahead and do the same thing so in order to do that go ahead and write the name of the property which is name then add a colon now after this you write the value which you want it to equal so I want the name of Bucky to be Bucky Roberts and now you say all right we want another property now so in order to do that just go ahead and separate it with a comma and then go ahead and type the name of the property which is age and set this equal to whatever value you want to be equal to 24 so as you can see instead of writing each property on a separate line with the Constructor function all you do now is separate your properties with a comma and go ahead and list the property colon value property colon value and I have two properties in here but you can have a thousand if you want the only thing you have to remember is separate them all with a comma pretty cool huh so now let's go ahead and make another object so so so so what the heck one of my Chinese just so we can see more clearly what's going on so I'll go ahead and make that other tailor object just like before and sorry if I offend it and any oriental people there but uh one of the properties is name and I would want this to be equal to Taylor Swift and another property is age so go ahead and add my comma property age and for the value is 20 so now we have two objects Bucky's name is Bucky Roberts Taylor's name is Taylor Swift Bucky's age is 24 Taylor's age is 20 easy enough so now now just like before the body can be the exact same anytime you want to use your object it's no different than before just go ahead and write your object name like Bucky and then go ahead and write whatever property you want to use like age name whatever so let's go ahead and take a look at a quick example document. WR and go ahead and write like Bucky name love loves Taylor name because she is Taylor H now let's see if I mixed anything up or messed it up whatever Bucky Roberts loves Taylor Swift because she is 20 pretty cool so like before we can see that whenever we want to use one of these properties just go ahead and write the object property object property object property simple enough eh so now we see that we have two different ways we can make objects using object initializers which are these or using Constructor functions and like I said if we had more than two people like Bucky Taylor John Steven uh Tony Mikey Maddie we would have to I mean we won't have to but it's better to use a Constructor function but now that we only have one or two objects using um an object initializer is fine so that's when you would use object initializers as opposed to Constructor functions so for now that's all I have for you um in the next tutorial I don't know what I'm going to be talking about but trust me it's going to be awesome so thank you guys for watching don't forget to subscribe don't forget to check out my website yada yada yada and I'll see you later
