With timestamps:

00:00 - alrighty y'all welcome back to another
00:02 - tutorial and in this one we are going to
00:04 - be talking about ethereum accounts
00:06 - so question number one what is an
00:09 - ethereum account
00:10 - an ethereum account is an entity with an
00:13 - ether balance as you can see right here
00:15 - in my beautiful diagram
00:17 - and
00:18 - it also can send transactions
00:21 - now on top of that every account in the
00:24 - ethereum network also has an address
00:27 - and this is basically the account
00:29 - identifier so you can kind of think of
00:31 - it similar to an email address where
00:34 - whenever you want to send someone ether
00:36 - you are going to be sending it to their
00:38 - address now on the ethereum network
00:40 - there are actually two different types
00:42 - of accounts and the first one is an
00:45 - externally owned account and you may see
00:48 - this abbreviated as eoa
00:50 - these are accounts that are controlled
00:52 - by individuals through the use of a
00:54 - private key and we'll be getting into
00:56 - the details of private keys and public
00:58 - keys a little bit later on but for right
01:00 - now we just want to focus on the two
01:02 - different types of accounts so again
01:04 - that's externally owned accounts which
01:06 - are controlled by individuals and the
01:08 - other one as we can see over here are
01:10 - contract accounts now these accounts are
01:13 - controlled by smart contracts and they
01:15 - don't require the use of any private key
01:17 - at all and the reason for that is it's
01:20 - because
01:21 - everything about this account is really
01:23 - just controlled by code so no need for a
01:25 - private key or public key or any of that
01:27 - now externally owned accounts in
01:29 - contract accounts actually have a lot in
01:31 - common so let's go ahead and talk about
01:32 - the ways that they're similar and then
01:34 - we'll talk about the ways that they're
01:35 - different
01:36 - so if you can't tell by this beautiful
01:39 - diagram first you can see that they both
01:41 - have an address so every single account
01:44 - on the ethereum network does have an
01:45 - address basically the identifier for
01:48 - that account
01:49 - they also
01:50 - both contain an ether balance and as you
01:54 - see right here in the little asset
01:56 - section
01:57 - both types of accounts can send receive
02:00 - and hold not only digital assets but as
02:04 - we can see from this balance ether as
02:06 - well
02:06 - now some other interesting things about
02:08 - both of these accounts is that both of
02:10 - these can send transactions to the
02:13 - ethereum network
02:14 - and they can both interact with smart
02:17 - contracts
02:18 - pretty interesting so now let's get into
02:20 - the differences
02:22 - so
02:23 - externally owned accounts one thing that
02:25 - makes them different from contract
02:27 - accounts is that eoas or externally
02:29 - owned accounts are free to create anyone
02:32 - can go ahead and create really as many
02:34 - as you want for free at any time
02:36 - and another thing is that they can
02:38 - initiate network transactions
02:42 - all right pretty interesting so what
02:44 - about these contract accounts right here
02:46 - so contract accounts they actually
02:49 - require ether in order to create these
02:52 - so why do these ones require ether and
02:55 - these ones don't well contract accounts
02:58 - require ether to create because upon
03:01 - creation you're actually using network
03:03 - storage now another difference worth
03:05 - mentioning is that contract accounts
03:08 - they can't initiate transactions on
03:10 - their own they first need to be
03:12 - triggered
03:13 - by a user within eoa an externally owned
03:17 - account and then that trigger can
03:20 - essentially cause the contract account
03:22 - to execute many different actions such
03:24 - as transferring tokens or even creating
03:27 - a new contract which is an interesting
03:29 - use case but we'll see why that's useful
03:31 - a little bit later now some other quick
03:33 - points to mention is that transactions
03:36 - between two
03:37 - externally owned accounts they can only
03:40 - ever be for the transfer of ether or
03:43 - tokens in other words those digital
03:44 - assets you can't really do anything else
03:47 - whenever you're sending a transaction
03:49 - between two externally owned accounts
03:52 - now whenever a transaction is sent to a
03:54 - smart contract that's actually going to
03:56 - trigger the smart contract to run
03:59 - so these smart contracts are essentially
04:01 - going to be stored on the network and
04:03 - then whenever a user sends a transaction
04:06 - to that smart contract it's going to
04:07 - kick off execution of whatever program
04:10 - it is all right so now let's go ahead
04:12 - and take a closer look at this private
04:14 - key public key
04:16 - what's all this about
04:17 - so
04:18 - whenever you have an externally owned
04:20 - account
04:21 - that account is controlled by a key pair
04:24 - now a key pair
04:26 - consists of a private key and a public
04:29 - key
04:30 - now whenever you download an ethereum
04:32 - wallet and you create a new account
04:34 - the app in the background is just going
04:36 - to automatically create these key pairs
04:38 - for you
04:39 - and most apps don't even show these to
04:41 - the users because well to be honest
04:43 - there's really never a need for the user
04:45 - to interact with these directly but as
04:48 - developers it is useful for us to know
04:50 - what's going on behind the scenes so
04:51 - that's why we're taking
04:53 - a video and learning a little bit more
04:55 - about them but either way
04:57 - uh getting back to this the private key
05:00 - right here
05:01 - this gives you control over your entire
05:03 - account so rule number one is never
05:07 - share your private key with anyone now
05:10 - without getting too deep into the
05:12 - cryptography behind everything let me
05:14 - just give you a real brief overview of
05:16 - how these transactions and private keys
05:18 - and public keys all work together
05:20 - so whenever you want to send an ether to
05:23 - someone else you're essentially going to
05:25 - create something called a transaction
05:27 - and that transaction is going to say
05:30 - we'll just say in layman's terms hey i
05:32 - want to transfer ether to someone else
05:35 - now whenever you do that your app is
05:38 - going to use your private key
05:40 - and it's going to create something on
05:41 - that transaction called a digital
05:43 - signature
05:44 - now the digital signature is used to
05:47 - prove ownership of your account
05:49 - so again
05:51 - you are going to create a transaction
05:52 - pretty much to instruct the network what
05:54 - you want to do and your app is going to
05:56 - add a digital signature to it which is
05:59 - essentially proving to the network that
06:01 - you do indeed own this account now since
06:04 - other people do not have your private
06:06 - key hopefully unless you know someone
06:09 - stole it
06:10 - since other people don't have it they
06:12 - are not able to create the signatures
06:14 - needed to authorize transactions from
06:16 - your account now that being said if you
06:18 - ever lose your private key there's
06:20 - actually no way to recover your account
06:23 - so unlike you know a centralized account
06:26 - maybe some social media remember on the
06:28 - ethereum network there is no single
06:30 - corporation or government controlling
06:32 - this network so there's not anyone you
06:35 - can phone up and be like hey i lost my
06:37 - account
06:37 - can you
06:39 - email me my private key or anything like
06:41 - that
06:42 - now if anyone out there wants to learn
06:43 - more about digital signatures i did
06:46 - create a tutorial about this so if you
06:48 - just type in the new boston digital
06:49 - signatures i'm sure it's going to pop up
06:52 - but in this video i dive into the
06:54 - technicals and explain how everything
06:55 - works in detail
06:57 - for now i did want to leave that out of
06:59 - this tutorial series since to be honest
07:01 - cryptography isn't that important for
07:04 - ethereum developers
07:06 - and i say that because as developers a
07:08 - lot of the complexity is abstracted away
07:11 - in our development tools and libraries
07:13 - however with all this said it is helpful
07:16 - to have a basic understanding between
07:18 - private keys and public keys and
07:20 - addresses so let's go ahead and tie
07:22 - everything together now that we
07:24 - understand the core components of this
07:26 - entire system
07:27 - so we'll walk through it one step at a
07:29 - time so you went ahead and you thought
07:32 - ethereum was pretty cool maybe you saw a
07:33 - video series and decided to download an
07:36 - ethereum wallet now whenever you did you
07:38 - downloaded it in that wallet application
07:41 - the very first thing it did whenever you
07:43 - wanted to create a brand new account is
07:45 - it generated a private key
07:47 - now behind the scenes a private key is
07:49 - just a really long random number and
07:52 - this is generated sometimes from user
07:54 - input but most of the time your computer
07:56 - just uses whatever random number
07:58 - generator to generate a secret private
08:00 - key now in order to generate the public
08:02 - key
08:03 - what the application is going to do is
08:06 - use something called elliptic curve
08:08 - cryptography and this is explained in my
08:11 - digital signature video but real quick
08:14 - what it's going to do is use something
08:15 - called a one-way
08:16 - function
08:18 - to essentially get a value for the
08:20 - public key and the cool thing about this
08:22 - relationship right here is that if you
08:25 - have a private key using elliptic curve
08:28 - cryptography you can always figure out
08:31 - the public key
08:33 - now this is where things get interesting
08:35 - if you have the public key you cannot
08:38 - figure out the private key so that's why
08:41 - the term one-way function comes in
08:44 - because you can essentially calculate
08:46 - something in one way but not backwards
08:48 - the other way now what is the
08:50 - relationship between this public key and
08:52 - the address so whenever you have a
08:55 - public key
08:56 - you can generate
08:59 - hold on my arrow is a freaking out now
09:01 - there we go so in order to generate the
09:04 - address from a public key
09:07 - what you do is you essentially take the
09:09 - hash of this public key and it's kind of
09:12 - weird but you take the last 20 bytes of
09:15 - that hash and then you add a 0x to the
09:18 - beginning of it and this is going to
09:20 - give you your address so i know that
09:23 - this is uh kind of weird but just to sum
09:25 - it up real quick your computer or your
09:27 - wallet is gonna generate a random
09:29 - private key basically like a random
09:31 - password think of it like that now as
09:33 - long as you have this private key you
09:35 - can always calculate the public key from
09:38 - it
09:38 - and with the public key you can
09:40 - calculate the address
09:42 - so this is pretty much the relationship
09:44 - again this process is done through
09:46 - elliptic curve cryptography and this
09:49 - process is done by taking a hash of a
09:52 - public key and taking the last 20 bytes
09:54 - and then adding 0x to the end again
09:58 - i do want to mention that if all this
10:00 - feels a little bit overwhelming or it
10:01 - doesn't really make sense we really
10:03 - never need to get into the weeds of all
10:05 - this as developers it's just that as
10:08 - developers whenever i mention private
10:10 - key public key or address i don't want
10:12 - to confuse anyone and i do want to point
10:15 - out that there is a difference between
10:16 - each of these three values and that's
10:18 - really all you need to know so on that
10:20 - note we are finally done discussing
10:22 - public keys private keys accounts
10:24 - addresses different types of accounts
10:26 - and in the next video we are going to be
10:28 - getting into transactions which are well
10:31 - a whole lot more interesting so thank
10:33 - you for watching don't forget to
10:34 - subscribe and i will see you later

Cleaned transcript:

alrighty y'all welcome back to another tutorial and in this one we are going to be talking about ethereum accounts so question number one what is an ethereum account an ethereum account is an entity with an ether balance as you can see right here in my beautiful diagram and it also can send transactions now on top of that every account in the ethereum network also has an address and this is basically the account identifier so you can kind of think of it similar to an email address where whenever you want to send someone ether you are going to be sending it to their address now on the ethereum network there are actually two different types of accounts and the first one is an externally owned account and you may see this abbreviated as eoa these are accounts that are controlled by individuals through the use of a private key and we'll be getting into the details of private keys and public keys a little bit later on but for right now we just want to focus on the two different types of accounts so again that's externally owned accounts which are controlled by individuals and the other one as we can see over here are contract accounts now these accounts are controlled by smart contracts and they don't require the use of any private key at all and the reason for that is it's because everything about this account is really just controlled by code so no need for a private key or public key or any of that now externally owned accounts in contract accounts actually have a lot in common so let's go ahead and talk about the ways that they're similar and then we'll talk about the ways that they're different so if you can't tell by this beautiful diagram first you can see that they both have an address so every single account on the ethereum network does have an address basically the identifier for that account they also both contain an ether balance and as you see right here in the little asset section both types of accounts can send receive and hold not only digital assets but as we can see from this balance ether as well now some other interesting things about both of these accounts is that both of these can send transactions to the ethereum network and they can both interact with smart contracts pretty interesting so now let's get into the differences so externally owned accounts one thing that makes them different from contract accounts is that eoas or externally owned accounts are free to create anyone can go ahead and create really as many as you want for free at any time and another thing is that they can initiate network transactions all right pretty interesting so what about these contract accounts right here so contract accounts they actually require ether in order to create these so why do these ones require ether and these ones don't well contract accounts require ether to create because upon creation you're actually using network storage now another difference worth mentioning is that contract accounts they can't initiate transactions on their own they first need to be triggered by a user within eoa an externally owned account and then that trigger can essentially cause the contract account to execute many different actions such as transferring tokens or even creating a new contract which is an interesting use case but we'll see why that's useful a little bit later now some other quick points to mention is that transactions between two externally owned accounts they can only ever be for the transfer of ether or tokens in other words those digital assets you can't really do anything else whenever you're sending a transaction between two externally owned accounts now whenever a transaction is sent to a smart contract that's actually going to trigger the smart contract to run so these smart contracts are essentially going to be stored on the network and then whenever a user sends a transaction to that smart contract it's going to kick off execution of whatever program it is all right so now let's go ahead and take a closer look at this private key public key what's all this about so whenever you have an externally owned account that account is controlled by a key pair now a key pair consists of a private key and a public key now whenever you download an ethereum wallet and you create a new account the app in the background is just going to automatically create these key pairs for you and most apps don't even show these to the users because well to be honest there's really never a need for the user to interact with these directly but as developers it is useful for us to know what's going on behind the scenes so that's why we're taking a video and learning a little bit more about them but either way uh getting back to this the private key right here this gives you control over your entire account so rule number one is never share your private key with anyone now without getting too deep into the cryptography behind everything let me just give you a real brief overview of how these transactions and private keys and public keys all work together so whenever you want to send an ether to someone else you're essentially going to create something called a transaction and that transaction is going to say we'll just say in layman's terms hey i want to transfer ether to someone else now whenever you do that your app is going to use your private key and it's going to create something on that transaction called a digital signature now the digital signature is used to prove ownership of your account so again you are going to create a transaction pretty much to instruct the network what you want to do and your app is going to add a digital signature to it which is essentially proving to the network that you do indeed own this account now since other people do not have your private key hopefully unless you know someone stole it since other people don't have it they are not able to create the signatures needed to authorize transactions from your account now that being said if you ever lose your private key there's actually no way to recover your account so unlike you know a centralized account maybe some social media remember on the ethereum network there is no single corporation or government controlling this network so there's not anyone you can phone up and be like hey i lost my account can you email me my private key or anything like that now if anyone out there wants to learn more about digital signatures i did create a tutorial about this so if you just type in the new boston digital signatures i'm sure it's going to pop up but in this video i dive into the technicals and explain how everything works in detail for now i did want to leave that out of this tutorial series since to be honest cryptography isn't that important for ethereum developers and i say that because as developers a lot of the complexity is abstracted away in our development tools and libraries however with all this said it is helpful to have a basic understanding between private keys and public keys and addresses so let's go ahead and tie everything together now that we understand the core components of this entire system so we'll walk through it one step at a time so you went ahead and you thought ethereum was pretty cool maybe you saw a video series and decided to download an ethereum wallet now whenever you did you downloaded it in that wallet application the very first thing it did whenever you wanted to create a brand new account is it generated a private key now behind the scenes a private key is just a really long random number and this is generated sometimes from user input but most of the time your computer just uses whatever random number generator to generate a secret private key now in order to generate the public key what the application is going to do is use something called elliptic curve cryptography and this is explained in my digital signature video but real quick what it's going to do is use something called a oneway function to essentially get a value for the public key and the cool thing about this relationship right here is that if you have a private key using elliptic curve cryptography you can always figure out the public key now this is where things get interesting if you have the public key you cannot figure out the private key so that's why the term oneway function comes in because you can essentially calculate something in one way but not backwards the other way now what is the relationship between this public key and the address so whenever you have a public key you can generate hold on my arrow is a freaking out now there we go so in order to generate the address from a public key what you do is you essentially take the hash of this public key and it's kind of weird but you take the last 20 bytes of that hash and then you add a 0x to the beginning of it and this is going to give you your address so i know that this is uh kind of weird but just to sum it up real quick your computer or your wallet is gonna generate a random private key basically like a random password think of it like that now as long as you have this private key you can always calculate the public key from it and with the public key you can calculate the address so this is pretty much the relationship again this process is done through elliptic curve cryptography and this process is done by taking a hash of a public key and taking the last 20 bytes and then adding 0x to the end again i do want to mention that if all this feels a little bit overwhelming or it doesn't really make sense we really never need to get into the weeds of all this as developers it's just that as developers whenever i mention private key public key or address i don't want to confuse anyone and i do want to point out that there is a difference between each of these three values and that's really all you need to know so on that note we are finally done discussing public keys private keys accounts addresses different types of accounts and in the next video we are going to be getting into transactions which are well a whole lot more interesting so thank you for watching don't forget to subscribe and i will see you later
