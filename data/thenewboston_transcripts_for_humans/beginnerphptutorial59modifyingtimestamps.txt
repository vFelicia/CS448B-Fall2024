With timestamps:

00:00 - this is Alex from PHP academy' dog and
00:02 - this is a second video for the new
00:04 - Boston on timestamps now when we want to
00:07 - display a date we can display the
00:09 - current date we've already established
00:11 - how to do that now what if I wanted to
00:13 - display a date that was say a couple of
00:15 - days ago or a week ahead or in fact I
00:19 - wanted to read in a particular date and
00:22 - store it as a timestamp now when you're
00:24 - storing data for example dates in
00:27 - databases it's always recommended you
00:29 - store as a timestamp therefore making it
00:34 - available to process that day and in
00:39 - many different ways possible so at the
00:42 - moment you can see we've got the time
00:44 - we've grabbed from a timestamp we've got
00:46 - the actual time which has been formatted
00:48 - however what if I want to just up here
00:52 - let's just remove this as well otherwise
00:55 - it won't make sense
00:55 - what happens if just up here I want to
00:58 - change the date I want to change the
01:00 - date to say a week ago okay so today
01:06 - today is April the 1st and 2011 so what
01:11 - I want to do is I want to change the
01:13 - time and I want to say the time is equal
01:17 - to in fact what we'll do is we won't do
01:23 - that here we'll establish the time stamp
01:26 - here and then here what we'll do is
01:29 - we'll say we can either say plus or
01:33 - minus a certain a certain amount of
01:36 - seconds so what we can do is we can say
01:39 - minus 20 so time minus 20 that's 20
01:45 - seconds before what we're looking at so
01:48 - let's refresh this now at the moment
01:50 - this shows an hour that's probably a bad
01:53 - idea we'll say minus 60 for a minute so
01:58 - let's refresh
01:59 - so this says it reads 824 and 50 seconds
02:04 - now looking at my clock on my computer
02:07 - it's actually 825 so now it's 826 on my
02:12 - computer
02:13 - so we've gone back an hour so now what
02:16 - we could probably do is say time now
02:21 - equals or copy and paste that over to
02:24 - here get rid of that and append a break
02:28 - on to that in fact no we won't wheel
02:34 - time modified so I'm just setting on my
02:39 - variables so they look a bit nicer so
02:41 - now what we can do is echo a sentence
02:42 - here so the time now is time now a break
02:49 - on to there and say the time modified is
02:54 - and space and time modified so let's
03:01 - refresh this page and see what we get so
03:04 - the time now is Friday April 2011 and
03:06 - you can see this 26:55 however this
03:09 - one's 25 55 because remember we - 60
03:13 - seconds however there's a really useful
03:16 - function in PHP and that is called an
03:20 - STR - time and what this allows you to
03:24 - do is take a string data for time so we
03:28 - could say plus one week and that would
03:32 - return a timestamp with a week's worth
03:34 - of seconds added on to it so we can test
03:37 - this in here we could say plus and then
03:39 - we could say STR - time
03:42 - remember this is string data with
03:44 - converting a string to a timestamp we
03:48 - can create say plus one week now if we
03:52 - refresh this the time now will the time
03:56 - now will show a or we're looking at the
03:59 - date in this case Friday and April we've
04:02 - added a week on so we are looking at
04:06 - only Thursday 1916 and plus
04:13 - Oh L don't know one week there we go so
04:19 - refresh right this might just be my okay
04:25 - there class one week and what that
04:27 - should do is know in actual fact looking
04:32 - at this logically okay right right okay
04:37 - so what I've done is I'm returning the
04:39 - timestamp and adding on something we
04:43 - don't need to so if I was to say st at a
04:45 - time this is already including the
04:47 - timestamp and then we're adding a week
04:49 - on so let's just try this again and
04:53 - refresh okay so now you can see that
04:56 - it's gone from Friday to Friday however
04:59 - if we were to say - one week this is
05:03 - probably a better example because now
05:04 - we're going to go back into March we've
05:07 - changed this now to March so let's just
05:10 - put this as D and refresh so first of
05:16 - April and let's put this as a D small
05:19 - small D lowercase D and it's refresh
05:23 - okay perfect so now we've got a textual
05:26 - represent an americorps representation
05:28 - of the day so first of April 2011 we've
05:31 - gone back a week which is the 25th of
05:33 - March so now what what happens if we say
05:36 - +1 year obviously going to take
05:40 - ourselves into 2012
05:42 - so we've got 1st of April 2011 plus and
05:46 - then the modified is 1st of April 2012
05:49 - but what we can also do is we can do
05:52 - things like combinations so what we can
05:56 - do is we can say plus 1 week 2 hours 30
06:04 - seconds okay so what we're now doing is
06:07 - we're adding a week 2 hours and 30
06:10 - seconds so let's just refresh we'll
06:13 - check the first let's first of April and
06:15 - it's 20 31 so we're now ended up with
06:18 - the 8th of April which is a week later
06:20 - with 22 and you can see that we've done
06:22 - 2 hours and the 30 seconds is been added
06:26 - on
06:27 - so we've got 35 here and we've got 5
06:29 - here so we're going into the next minute
06:31 - so this is a really great way to modify
06:34 - your times depending on your needs
06:38 - obviously these functions can be used
06:40 - alone you can use them to feed in a time
06:43 - stamp so we could say time - and we
06:54 - could say 30 seconds so let's refresh
06:59 - we've gone back to this again so I think
07:04 - it appears that we know yeah we're not
07:06 - going to use this because because of the
07:09 - nature of how the function works however
07:11 - we can obviously use this alone we can
07:14 - use the STR time and then say a week
07:16 - however if we wanted to go back let's
07:18 - say let's say for example 30 seconds 30
07:25 - minutes let's just say well we'll
07:31 - enclose this in brackets first and then
07:34 - we can say two hours or a and we'll just
07:37 - say like seven days for example so seven
07:39 - days two hours 30 seconds and 30 minutes
07:43 - so what we're doing is we're multiplying
07:44 - everything together to create the
07:46 - seconds now let's refresh the page and
07:49 - we can see that what we're doing is
07:50 - we're taking this back seven days so
07:53 - we've got first of April mmm let's just
08:00 - try changing this to 24 hours - what
08:02 - result we come up with let's refresh
08:05 - okay so um it's taken us back 24 hours
08:13 - 24 hours let's just double-check that 24
08:16 - hours then another two hours and that's
08:19 - back to the 31st of March so yeah 24
08:23 - hours we've been taken back not sure why
08:27 - this 7 days isn't working
08:29 - but anyway it's just something to
08:30 - research and have a look at it's very
08:31 - hard to explain every single point of
08:34 - timestamps because there's so many
08:36 - functions within PHP that deal with the
08:38 - time so be sure to have a little
08:40 - research
08:40 - around have a look around and the
08:42 - php.net manual is full of information
08:45 - about this and you can view live
08:47 - examples but this is generally how we
08:50 - would use time stamps and how useful
08:52 - they can actually be

Cleaned transcript:

this is Alex from PHP academy' dog and this is a second video for the new Boston on timestamps now when we want to display a date we can display the current date we've already established how to do that now what if I wanted to display a date that was say a couple of days ago or a week ahead or in fact I wanted to read in a particular date and store it as a timestamp now when you're storing data for example dates in databases it's always recommended you store as a timestamp therefore making it available to process that day and in many different ways possible so at the moment you can see we've got the time we've grabbed from a timestamp we've got the actual time which has been formatted however what if I want to just up here let's just remove this as well otherwise it won't make sense what happens if just up here I want to change the date I want to change the date to say a week ago okay so today today is April the 1st and 2011 so what I want to do is I want to change the time and I want to say the time is equal to in fact what we'll do is we won't do that here we'll establish the time stamp here and then here what we'll do is we'll say we can either say plus or minus a certain a certain amount of seconds so what we can do is we can say minus 20 so time minus 20 that's 20 seconds before what we're looking at so let's refresh this now at the moment this shows an hour that's probably a bad idea we'll say minus 60 for a minute so let's refresh so this says it reads 824 and 50 seconds now looking at my clock on my computer it's actually 825 so now it's 826 on my computer so we've gone back an hour so now what we could probably do is say time now equals or copy and paste that over to here get rid of that and append a break on to that in fact no we won't wheel time modified so I'm just setting on my variables so they look a bit nicer so now what we can do is echo a sentence here so the time now is time now a break on to there and say the time modified is and space and time modified so let's refresh this page and see what we get so the time now is Friday April 2011 and you can see this 2655 however this one's 25 55 because remember we 60 seconds however there's a really useful function in PHP and that is called an STR time and what this allows you to do is take a string data for time so we could say plus one week and that would return a timestamp with a week's worth of seconds added on to it so we can test this in here we could say plus and then we could say STR time remember this is string data with converting a string to a timestamp we can create say plus one week now if we refresh this the time now will the time now will show a or we're looking at the date in this case Friday and April we've added a week on so we are looking at only Thursday 1916 and plus Oh L don't know one week there we go so refresh right this might just be my okay there class one week and what that should do is know in actual fact looking at this logically okay right right okay so what I've done is I'm returning the timestamp and adding on something we don't need to so if I was to say st at a time this is already including the timestamp and then we're adding a week on so let's just try this again and refresh okay so now you can see that it's gone from Friday to Friday however if we were to say one week this is probably a better example because now we're going to go back into March we've changed this now to March so let's just put this as D and refresh so first of April and let's put this as a D small small D lowercase D and it's refresh okay perfect so now we've got a textual represent an americorps representation of the day so first of April 2011 we've gone back a week which is the 25th of March so now what what happens if we say +1 year obviously going to take ourselves into 2012 so we've got 1st of April 2011 plus and then the modified is 1st of April 2012 but what we can also do is we can do things like combinations so what we can do is we can say plus 1 week 2 hours 30 seconds okay so what we're now doing is we're adding a week 2 hours and 30 seconds so let's just refresh we'll check the first let's first of April and it's 20 31 so we're now ended up with the 8th of April which is a week later with 22 and you can see that we've done 2 hours and the 30 seconds is been added on so we've got 35 here and we've got 5 here so we're going into the next minute so this is a really great way to modify your times depending on your needs obviously these functions can be used alone you can use them to feed in a time stamp so we could say time and we could say 30 seconds so let's refresh we've gone back to this again so I think it appears that we know yeah we're not going to use this because because of the nature of how the function works however we can obviously use this alone we can use the STR time and then say a week however if we wanted to go back let's say let's say for example 30 seconds 30 minutes let's just say well we'll enclose this in brackets first and then we can say two hours or a and we'll just say like seven days for example so seven days two hours 30 seconds and 30 minutes so what we're doing is we're multiplying everything together to create the seconds now let's refresh the page and we can see that what we're doing is we're taking this back seven days so we've got first of April mmm let's just try changing this to 24 hours what result we come up with let's refresh okay so um it's taken us back 24 hours 24 hours let's just doublecheck that 24 hours then another two hours and that's back to the 31st of March so yeah 24 hours we've been taken back not sure why this 7 days isn't working but anyway it's just something to research and have a look at it's very hard to explain every single point of timestamps because there's so many functions within PHP that deal with the time so be sure to have a little research around have a look around and the php.net manual is full of information about this and you can view live examples but this is generally how we would use time stamps and how useful they can actually be
