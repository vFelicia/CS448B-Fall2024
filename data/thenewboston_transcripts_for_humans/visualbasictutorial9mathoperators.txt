With timestamps:

00:01 - hello YouTube Sam from youtube.com slash
00:05 - on live gamer here for the New Boston in
00:07 - this tutorial we're going to be taking a
00:09 - look at simple math operators so let's
00:12 - go ahead and get started we're going to
00:14 - come up here into our code and we're
00:16 - going to start off by declaring a
00:18 - variable now we're going to want to make
00:19 - an integer so I'll do num1 as integer
00:24 - then we'll go ahead and set that equal
00:26 - to 5
00:27 - or here let's not that set that equal to
00:30 - anything yet so the number 1 equals 5
00:33 - plus 5 so now if we come down here and
00:39 - print out num1 on the console it's going
00:43 - to give us the output of 10 what we can
00:49 - also do is use the parameters of
00:52 - writeline to add numbers to num1 so what
00:56 - I mean by this is let's say we have num1
00:58 - we want to print out num1 plus 5 so when
01:03 - we run this we should get 15 now if we
01:09 - come up here we can also subtract 5 so
01:12 - num 1 equals 5 minus 5 that's going to
01:15 - give us the value of 0 and now if we
01:17 - print that out let's go ahead and take
01:19 - this out if we print that out here we
01:22 - get 0 we can also do division so 2
01:28 - divided in Visual Basic and this is the
01:30 - same throughout mostly all languages
01:32 - you're going to use the forward slash so
01:35 - if we divide 5 by 5 we're going to get
01:37 - the value 1 and to multiply you just use
01:42 - the asterisk so 5 times 5 is equal to 25
01:47 - right there and now we can also do the
01:52 - power so 5 to the power of 2 is going to
01:59 - equal 25 and if we do 5 to the power of
02:03 - 3 we're going to get what is it 125 so
02:08 - here we go 125 right there
02:11 - now what we can also do is what's called
02:14 - modulus now this is a little tricky for
02:17 - some people to understand but I'll try
02:19 - to explain it the best I can
02:20 - what modulus does is it will divide two
02:23 - integers for you and then give you the
02:25 - remainder so if we knew 5 mod 2 so so
02:30 - what happens when you divide 5 by 2
02:31 - you're going to get 2 with a remainder
02:34 - of 1 and since we're using integers we
02:36 - can't get decimals so we're going to get
02:38 - a remainder so now if we run this you
02:41 - can see that it prints out 1 we can also
02:46 - add variables to each other so if we
02:50 - declare num1 as an integer and we set it
02:53 - equal to 4 we can declare a second
02:56 - variable let's call this 1 num2 and
02:58 - we'll create an integer and we'll set it
03:02 - equal to 8 and now if we print out num1
03:08 - plus num2 it's going to give us the
03:12 - value of 12 this also works for all of
03:17 - the other operators that we've seen we
03:20 - can multiply them together which will
03:21 - give us the value of 32 and what we can
03:30 - do is we can create a third variable
03:32 - here let's just do that create a third
03:34 - variable and we'll call it answer and
03:36 - we'll make it an integer and we'll set
03:38 - it equal to or first off we'll set it
03:42 - equal to nothing now basically what
03:45 - nothing is is if you've learned any
03:47 - other languages it's equivalent to no so
03:50 - answer instead of not assigning answer a
03:54 - value we're just going to set it equal
03:55 - to nothing and you can see that it won't
03:58 - give us a warning here so if we take
04:02 - this out we get a warning but since we
04:06 - assign it to nothing which is equivalent
04:08 - to no we don't get a warning here and
04:11 - that will prevent errors from possibly
04:13 - happening in the future
04:15 - so then down here we'll just type answer
04:20 - equals num1 divided by
04:24 - - now in our case in this program we
04:28 - didn't have to set this equal to nothing
04:30 - but I just wanted to throw that in there
04:32 - so you guys would know what it is and be
04:33 - able to use it later on in your programs
04:35 - so answer equals num1 divided by num2 so
04:39 - if we write out answer we are going to
04:44 - get zero so if you do 4 divided by 8 you
04:53 - get a decimal number and since integers
04:56 - can't can't they can't implicitly
05:01 - convert themselves to decimals it's just
05:04 - going to give you zero so let's go ahead
05:06 - and change this to multiply and we're
05:12 - going to get 32 now since before we got
05:16 - zero by dividing them by each other
05:19 - we're going to show you how to fix this
05:21 - what we're going to do is instead of
05:23 - making them integers we're going to make
05:25 - them doubles over here we don't have to
05:29 - make those doubles we can make the
05:31 - answer a double so now since our answer
05:37 - can have decimal numbers if we divide
05:39 - num1 by num2 we will get 0.5 so take a
05:46 - look at some of these math operators
05:48 - play around with them with doubles
05:50 - integers you can use a byte you can use
05:53 - a long you can use anything just play
05:55 - around with these math operators get
05:56 - used to them and then once you've got
05:58 - that down go ahead and move on to the
06:00 - next tutorial and thanks for watching
06:01 - don't forget to comment like and
06:03 - subscribe

Cleaned transcript:

hello YouTube Sam from youtube.com slash on live gamer here for the New Boston in this tutorial we're going to be taking a look at simple math operators so let's go ahead and get started we're going to come up here into our code and we're going to start off by declaring a variable now we're going to want to make an integer so I'll do num1 as integer then we'll go ahead and set that equal to 5 or here let's not that set that equal to anything yet so the number 1 equals 5 plus 5 so now if we come down here and print out num1 on the console it's going to give us the output of 10 what we can also do is use the parameters of writeline to add numbers to num1 so what I mean by this is let's say we have num1 we want to print out num1 plus 5 so when we run this we should get 15 now if we come up here we can also subtract 5 so num 1 equals 5 minus 5 that's going to give us the value of 0 and now if we print that out let's go ahead and take this out if we print that out here we get 0 we can also do division so 2 divided in Visual Basic and this is the same throughout mostly all languages you're going to use the forward slash so if we divide 5 by 5 we're going to get the value 1 and to multiply you just use the asterisk so 5 times 5 is equal to 25 right there and now we can also do the power so 5 to the power of 2 is going to equal 25 and if we do 5 to the power of 3 we're going to get what is it 125 so here we go 125 right there now what we can also do is what's called modulus now this is a little tricky for some people to understand but I'll try to explain it the best I can what modulus does is it will divide two integers for you and then give you the remainder so if we knew 5 mod 2 so so what happens when you divide 5 by 2 you're going to get 2 with a remainder of 1 and since we're using integers we can't get decimals so we're going to get a remainder so now if we run this you can see that it prints out 1 we can also add variables to each other so if we declare num1 as an integer and we set it equal to 4 we can declare a second variable let's call this 1 num2 and we'll create an integer and we'll set it equal to 8 and now if we print out num1 plus num2 it's going to give us the value of 12 this also works for all of the other operators that we've seen we can multiply them together which will give us the value of 32 and what we can do is we can create a third variable here let's just do that create a third variable and we'll call it answer and we'll make it an integer and we'll set it equal to or first off we'll set it equal to nothing now basically what nothing is is if you've learned any other languages it's equivalent to no so answer instead of not assigning answer a value we're just going to set it equal to nothing and you can see that it won't give us a warning here so if we take this out we get a warning but since we assign it to nothing which is equivalent to no we don't get a warning here and that will prevent errors from possibly happening in the future so then down here we'll just type answer equals num1 divided by now in our case in this program we didn't have to set this equal to nothing but I just wanted to throw that in there so you guys would know what it is and be able to use it later on in your programs so answer equals num1 divided by num2 so if we write out answer we are going to get zero so if you do 4 divided by 8 you get a decimal number and since integers can't can't they can't implicitly convert themselves to decimals it's just going to give you zero so let's go ahead and change this to multiply and we're going to get 32 now since before we got zero by dividing them by each other we're going to show you how to fix this what we're going to do is instead of making them integers we're going to make them doubles over here we don't have to make those doubles we can make the answer a double so now since our answer can have decimal numbers if we divide num1 by num2 we will get 0.5 so take a look at some of these math operators play around with them with doubles integers you can use a byte you can use a long you can use anything just play around with these math operators get used to them and then once you've got that down go ahead and move on to the next tutorial and thanks for watching don't forget to comment like and subscribe
