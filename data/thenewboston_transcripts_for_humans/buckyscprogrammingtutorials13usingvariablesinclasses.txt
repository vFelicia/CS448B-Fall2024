With timestamps:

00:00 - what is going on guys it's Bucky and
00:01 - welcome to your 13th C++ tutorial and in
00:04 - this story I'm going to be teaching guys
00:06 - how to use variables in classes but it's
00:09 - a little different than you guys might
00:10 - expect so just stick with me and I'm
00:12 - going to show you guys the wrong way and
00:14 - then we're going to show you guys the
00:15 - proper way to use variables in your
00:17 - classes so before I even get started
00:20 - this tutorial I want to include the
00:22 - string class as one of our files because
00:24 - we're going to be working with strings
00:26 - in this tutorial and if you can't
00:28 - remember a string is just basically
00:30 - another word for text so whenever we
00:32 - were outputting things like hey now
00:35 - brown cow this text is just another word
00:38 - for a string so that's what a string is
00:40 - to give you guys a quick little
00:41 - background on that
00:42 - so go ahead and include the string class
00:45 - right under your iostream right above
00:47 - your namespace and now like I said
00:50 - before I show you guys the proper way to
00:52 - use variables I want to show you guys
00:54 - the wrong way because this is a common
00:56 - mistake that a lot of beginners do so
00:58 - you go ahead and you added your access
01:00 - modifier public and say you wanted to
01:03 - make a name variable low name is of
01:05 - course a string so go ahead and make a
01:08 - variable called name and set equal to
01:09 - the type string this is good to go I
01:12 - mean so now we have a variable in our
01:14 - Bucky class called name so again if you
01:18 - remember from les Sorel in order to use
01:20 - the things in that class you first need
01:22 - to create an object so in order to
01:24 - create an object you type the class name
01:26 - and then the name of your object I'm
01:28 - going to name mine Bo which does not
01:30 - stand for body odor stands for Bucky's
01:32 - object so then we have an object named
01:35 - Bo and with that Bo object we can access
01:38 - variables by using the dot separator and
01:41 - just the name of your variable so then
01:44 - once we have this variable name from the
01:46 - Bucky's class we can go ahead and see it
01:48 - equal to any name we want like Bucky
01:50 - roberts and then this variable right
01:54 - here is equal to Bucky Roberts so then
01:58 - whenever we try to print it out Bo dot
02:01 - name it just goes ahead and it prints
02:04 - out Bucky Roberts on the screen so
02:07 - you're saying all right Bucky that
02:09 - seemed to work pretty darn good to me so
02:11 - why did you say that that was an
02:12 - proper way to do stuff well I don't want
02:15 - to get into too much detail but
02:17 - basically I want to stress this making
02:20 - class variables public is generally not
02:24 - good programming practice I don't want
02:26 - to get into like software engineering
02:28 - but basically whenever you make your
02:31 - variables public
02:32 - it makes your programs really easy to
02:35 - mess up so typically what people like to
02:37 - do is make their variables private and
02:40 - again there are some exceptions but
02:41 - typically you want to make all your
02:43 - variables in your class private so
02:45 - you're saying all right I remember from
02:47 - less storia you told me that whenever I
02:49 - make variables private I can't access in
02:52 - them in main so whenever you try to run
02:54 - this program right here we get an error
02:56 - saying all right this is just going to
02:58 - cause me a bunch of headaches what am I
03:00 - supposed to do
03:00 - well if we remember what I said I said
03:03 - nothing outside your class can access
03:06 - these variables so we need to build a
03:09 - public function inside your class to
03:12 - have access to those variables so that
03:14 - is what we need to do so let's go ahead
03:15 - and delete all this and we already made
03:18 - our variable private so now let's go
03:20 - ahead and make public functions to
03:23 - access them because remember if we make
03:25 - a public function to access that
03:27 - variable we can use those public
03:29 - functions outside our class in our main
03:32 - so in order to do that just go ahead and
03:34 - write public and now everything you type
03:37 - under here is going to be public so we
03:39 - want to add two functions the first one
03:42 - is just going to be first of all we're
03:45 - going to want to do two things to this
03:47 - variable name we want to be able to
03:49 - change it and then that means set it
03:52 - like set equal to Bucky set equal to Tom
03:54 - set equal to Jessica so we want to be
03:57 - able to set the name and our second
03:59 - function is just going to get the name
04:01 - we want to return the value Bucky we
04:03 - want to return the value Tom just go
04:05 - whatever so we have two functions one to
04:07 - set the variable and want to get the
04:09 - variable so in order to set the variable
04:11 - just go ahead and set equal to void
04:13 - because it's not returning anything
04:15 - we're just changing the variable and
04:17 - what people typically do is write set
04:19 - and then your variable name after that
04:22 - and after this we're going to go ahead
04:24 - and use this string and we're going to
04:26 - call X because we're going to be passing
04:28 - in a string such as Bucky Roberts
04:30 - Jessica Thompson Tommy and that variable
04:34 - is going to be equal to the value X so
04:37 - whenever we set a name we want to change
04:40 - it all we need to do is set equal to the
04:42 - variable X and then it sets equal to
04:45 - whatever value we pass in for example if
04:48 - we say set named Bucky it's going to
04:50 - treat Bucky is X and now our named
04:52 - variable is going to be equal Bucky
04:55 - simple enough so that is called our
04:58 - setter method or excuse me setter
05:00 - function a method is actually if I say
05:03 - method and I actually mean to say
05:04 - function just remember that I uh I've
05:07 - been teaching like 80 different computer
05:09 - programming languages and in some
05:11 - languages they call method a function
05:13 - and vice versa so I might get it mixed
05:15 - up but trust me a method and function is
05:16 - just the same thing so anyways with that
05:19 - little background I now want to say this
05:21 - we already built our setter function how
05:23 - to change that name variable well now we
05:26 - want Bo to a function to access it and
05:28 - remember since we want that name in
05:30 - return we go ahead and type string
05:32 - because the name is of course a string a
05:35 - bunch of text so what people typically
05:38 - do here is instead of set they write get
05:41 - because they just want to get the name
05:43 - so go ahead and write get name it's not
05:45 - going to take any parameters and in the
05:48 - body this is probably the easiest thing
05:51 - you're ever going to do all you do is
05:53 - return the variable so check it out we
05:56 - don't have direct access to this
05:58 - variable so we have to go through
06:00 - functions in order to change this
06:02 - variable we go ahead and we use this
06:04 - function in order just to get the value
06:07 - of the variable we go ahead and we use
06:09 - this function so now instead of directly
06:11 - accessing this variable we can do it
06:13 - through public functions so again like I
06:16 - said the only thing that have the only
06:19 - thing that has access to these private
06:21 - variables are other things inside this
06:24 - class so if we make those functions
06:26 - public then we can access that variable
06:28 - kind of like cheating you know so in
06:31 - order to do this again
06:33 - in order to use those functions we again
06:35 - need an object so Bucky's class make
06:39 - another Bo object and now under this if
06:42 - I scroll up we can go ahead and Bo we
06:46 - can use the functions from that class by
06:49 - using the object name and then the dot
06:51 - separator and then we'll just go ahead
06:53 - and the first thing we want to do is set
06:56 - a value to that so go ahead and let me
06:58 - just copy this paste it right here and
07:02 - we'll set the name equal to something
07:04 - stupid like arm sir Bucky Wallis if you
07:10 - guys know where the name Sir William
07:12 - Wallace comes from then leave me a
07:14 - comment below congratulations so now
07:17 - this name variable is equal to the name
07:20 - sir
07:21 - Bucky Wallis so instead of accessing it
07:24 - directly you can see that we went
07:25 - through a function that was public to do
07:27 - so so now what we can do is we can just
07:30 - you know print it out or something
07:31 - stupid so see out and in order to print
07:35 - it out we just can't go ahead and write
07:37 - Bo dot name because we don't have access
07:39 - to that variable what we need to do is
07:42 - we need to go through the function get
07:44 - name just like that and now what this
07:47 - function does is it returns the name
07:50 - it's basically a way to make a private a
07:53 - public simple as that so now when we go
07:56 - ahead and print it out building around
07:58 - this as long as I don't have any errors
07:59 - and I don't check it out sir Bucky
08:02 - Wallis so let me guys let me talk you
08:04 - through this one more time what we did
08:07 - is we wanted to access this private name
08:10 - variable well we couldn't access it
08:12 - directly or else it will give us an
08:13 - error so what we need to do is we needed
08:16 - to build public functions one to change
08:19 - the name and one to get the name so then
08:21 - later on in our program whenever we
08:23 - wanted to use those function we went
08:25 - ahead and we created an object and then
08:28 - remember whenever you want to use
08:29 - anything inside your class right the
08:31 - object dot separator function object
08:35 - separator function and then we ran our
08:38 - program and it worked pretty darn good
08:40 - so that is the bad way to use variables
08:43 - and also the proper way to use variables
08:45 - again
08:46 - you can put these variables is public
08:48 - but it's just bad programming practice
08:50 - and bad software engineering you're
08:52 - never going to get a job as computer
08:54 - engineer if you make your variables
08:56 - public so thank you guys for watching
08:58 - this tutorial if you have any questions
09:00 - check out my website the new bus and
09:01 - comm it's pretty sweet website I
09:03 - definitely want to check it out so I am
09:06 - going to go get a drink because I've
09:08 - cottonmouth now and you guys study this
09:10 - story and I'll see in the next video

Cleaned transcript:

what is going on guys it's Bucky and welcome to your 13th C++ tutorial and in this story I'm going to be teaching guys how to use variables in classes but it's a little different than you guys might expect so just stick with me and I'm going to show you guys the wrong way and then we're going to show you guys the proper way to use variables in your classes so before I even get started this tutorial I want to include the string class as one of our files because we're going to be working with strings in this tutorial and if you can't remember a string is just basically another word for text so whenever we were outputting things like hey now brown cow this text is just another word for a string so that's what a string is to give you guys a quick little background on that so go ahead and include the string class right under your iostream right above your namespace and now like I said before I show you guys the proper way to use variables I want to show you guys the wrong way because this is a common mistake that a lot of beginners do so you go ahead and you added your access modifier public and say you wanted to make a name variable low name is of course a string so go ahead and make a variable called name and set equal to the type string this is good to go I mean so now we have a variable in our Bucky class called name so again if you remember from les Sorel in order to use the things in that class you first need to create an object so in order to create an object you type the class name and then the name of your object I'm going to name mine Bo which does not stand for body odor stands for Bucky's object so then we have an object named Bo and with that Bo object we can access variables by using the dot separator and just the name of your variable so then once we have this variable name from the Bucky's class we can go ahead and see it equal to any name we want like Bucky roberts and then this variable right here is equal to Bucky Roberts so then whenever we try to print it out Bo dot name it just goes ahead and it prints out Bucky Roberts on the screen so you're saying all right Bucky that seemed to work pretty darn good to me so why did you say that that was an proper way to do stuff well I don't want to get into too much detail but basically I want to stress this making class variables public is generally not good programming practice I don't want to get into like software engineering but basically whenever you make your variables public it makes your programs really easy to mess up so typically what people like to do is make their variables private and again there are some exceptions but typically you want to make all your variables in your class private so you're saying all right I remember from less storia you told me that whenever I make variables private I can't access in them in main so whenever you try to run this program right here we get an error saying all right this is just going to cause me a bunch of headaches what am I supposed to do well if we remember what I said I said nothing outside your class can access these variables so we need to build a public function inside your class to have access to those variables so that is what we need to do so let's go ahead and delete all this and we already made our variable private so now let's go ahead and make public functions to access them because remember if we make a public function to access that variable we can use those public functions outside our class in our main so in order to do that just go ahead and write public and now everything you type under here is going to be public so we want to add two functions the first one is just going to be first of all we're going to want to do two things to this variable name we want to be able to change it and then that means set it like set equal to Bucky set equal to Tom set equal to Jessica so we want to be able to set the name and our second function is just going to get the name we want to return the value Bucky we want to return the value Tom just go whatever so we have two functions one to set the variable and want to get the variable so in order to set the variable just go ahead and set equal to void because it's not returning anything we're just changing the variable and what people typically do is write set and then your variable name after that and after this we're going to go ahead and use this string and we're going to call X because we're going to be passing in a string such as Bucky Roberts Jessica Thompson Tommy and that variable is going to be equal to the value X so whenever we set a name we want to change it all we need to do is set equal to the variable X and then it sets equal to whatever value we pass in for example if we say set named Bucky it's going to treat Bucky is X and now our named variable is going to be equal Bucky simple enough so that is called our setter method or excuse me setter function a method is actually if I say method and I actually mean to say function just remember that I uh I've been teaching like 80 different computer programming languages and in some languages they call method a function and vice versa so I might get it mixed up but trust me a method and function is just the same thing so anyways with that little background I now want to say this we already built our setter function how to change that name variable well now we want Bo to a function to access it and remember since we want that name in return we go ahead and type string because the name is of course a string a bunch of text so what people typically do here is instead of set they write get because they just want to get the name so go ahead and write get name it's not going to take any parameters and in the body this is probably the easiest thing you're ever going to do all you do is return the variable so check it out we don't have direct access to this variable so we have to go through functions in order to change this variable we go ahead and we use this function in order just to get the value of the variable we go ahead and we use this function so now instead of directly accessing this variable we can do it through public functions so again like I said the only thing that have the only thing that has access to these private variables are other things inside this class so if we make those functions public then we can access that variable kind of like cheating you know so in order to do this again in order to use those functions we again need an object so Bucky's class make another Bo object and now under this if I scroll up we can go ahead and Bo we can use the functions from that class by using the object name and then the dot separator and then we'll just go ahead and the first thing we want to do is set a value to that so go ahead and let me just copy this paste it right here and we'll set the name equal to something stupid like arm sir Bucky Wallis if you guys know where the name Sir William Wallace comes from then leave me a comment below congratulations so now this name variable is equal to the name sir Bucky Wallis so instead of accessing it directly you can see that we went through a function that was public to do so so now what we can do is we can just you know print it out or something stupid so see out and in order to print it out we just can't go ahead and write Bo dot name because we don't have access to that variable what we need to do is we need to go through the function get name just like that and now what this function does is it returns the name it's basically a way to make a private a public simple as that so now when we go ahead and print it out building around this as long as I don't have any errors and I don't check it out sir Bucky Wallis so let me guys let me talk you through this one more time what we did is we wanted to access this private name variable well we couldn't access it directly or else it will give us an error so what we need to do is we needed to build public functions one to change the name and one to get the name so then later on in our program whenever we wanted to use those function we went ahead and we created an object and then remember whenever you want to use anything inside your class right the object dot separator function object separator function and then we ran our program and it worked pretty darn good so that is the bad way to use variables and also the proper way to use variables again you can put these variables is public but it's just bad programming practice and bad software engineering you're never going to get a job as computer engineer if you make your variables public so thank you guys for watching this tutorial if you have any questions check out my website the new bus and comm it's pretty sweet website I definitely want to check it out so I am going to go get a drink because I've cottonmouth now and you guys study this story and I'll see in the next video
