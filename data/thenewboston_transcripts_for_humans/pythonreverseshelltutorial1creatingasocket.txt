With timestamps:

00:00 - all right hoses welcome back to another
00:02 - awesome video series in this one I'm
00:05 - going to be showing you guys how to
00:06 - create a reverse shell using python so I
00:10 - assume that you guys already know what a
00:11 - reverse shell is if you're watching this
00:13 - video series but for those who are just
00:15 - curious and you know maybe you just want
00:17 - to practice with some python what a
00:20 - reverse shell is is basically a way that
00:22 - you can connect to someone's personal
00:24 - computer from anywhere in the world so
00:28 - let's say that you were in China and
00:29 - your friend in Texas had a problem with
00:31 - his computer and he wanted you to you
00:34 - know connect to it and you know access
00:36 - it and find out what was wrong maybe had
00:38 - some weird files on there well by
00:41 - default computers personal computers
00:44 - that is they're set up in a way that
00:46 - makes it very difficult to connect to it
00:48 - directly so what are some of those
00:50 - problems first of all your personal
00:52 - computer that you're sitting at right
00:54 - now it doesn't have a static IP your IP
00:57 - address is not only not public
01:00 - but it's Dynamic it's always changing so
01:03 - even if you had the IP address you
01:05 - couldn't access it and even if you could
01:08 - it would just be changing all the time
01:09 - so it would cause a bunch of problems
01:12 - now even if you were on the same network
01:15 - then you would still have a lot of these
01:16 - issues because even if you knew the IP
01:20 - address from your local network and you
01:22 - can access that computer you still have
01:24 - a bunch of firewalls to get through from
01:26 - your operating system built-in security
01:29 - um um you know there's also like port
01:31 - forwarding issues tomato tomato potato
01:33 - potato whatever so basically what I'm
01:36 - trying to say is we just can't SSH into
01:39 - someone's home computer like we can a
01:41 - web server so that's where a reverse
01:45 - shell comes in handy so basically we
01:48 - can't access home computers they're just
01:50 - not set up that way but what we can do
01:53 - is set up a server and have the target
01:56 - connect to us pretty cool huh now now
02:00 - since they are the ones who initiated
02:02 - that connection then your operating
02:04 - system says hey what's this connection
02:06 - oh wait a minute you initiated it it
02:08 - must be fine so since you initiated it
02:12 - you have all the permissions and
02:13 - everything is golden now once you're
02:16 - connected to the server and I'm going to
02:18 - be showing you guys how to do all this
02:19 - what we're going to do is we're
02:20 - basically going to give it commands and
02:23 - then your computer or the target is
02:25 - going to look at those commands run
02:27 - whatever we tell it to and send back the
02:29 - result results so it's basically a way
02:32 - that we can get shell with any computer
02:35 - in the world even if it's not a server
02:37 - freaking awesome so if you guys are like
02:39 - when would I ever use this well in that
02:42 - example helping out a friend you would
02:44 - definitely use it and also let's say
02:46 - that you were a system or network
02:47 - administrator and you need to access a
02:49 - bunch of computers remotely you could do
02:52 - that and also one of the more popular
02:54 - ones although not very ethical this is
02:57 - how hackers actually gain full control
03:00 - into your machine so what they do is
03:02 - they create one of these and get you to
03:04 - click on it maybe they like hand out a
03:06 - CD in front of like Walmart or you know
03:09 - just send you a USB drive drop it in
03:11 - front of your um school or work or
03:13 - whatever like oh wonder what's on this
03:16 - plug it in your computer now they got
03:18 - all your crap so hopefully you guys can
03:21 - use this technique to do something
03:23 - ethical and also from a malicious point
03:26 - of view now that you're going to know
03:28 - how they're created you're going to what
03:30 - to look out for and well you'll be
03:32 - better
03:33 - protected so there's my little rant and
03:36 - now what we need to do is we're going to
03:38 - create two files so all this is is two
03:40 - files one for the server and one for the
03:44 - client so new python file and I'll just
03:47 - call this
03:49 - server.py and let me just create them
03:51 - both now so new python
03:56 - file client.py all right so so basically
04:00 - we're going to have two really simple
04:01 - Python scripts this one we're going to
04:04 - have running on our server now this one
04:07 - is the one that hackers would put like
04:08 - on a CD or a thumb drive and this is
04:11 - whenever the user sticks it in their
04:13 - computer and runs it this is the one
04:16 - that connects to the server so basically
04:19 - two ends of you know a conversation now
04:22 - I'm just going to be running these both
04:24 - on my own local computer to test and
04:26 - then at the end of the video I'll put it
04:28 - on the actual server to show you guys
04:30 - that it does indeed work but for right
04:32 - now I'll just run them both for my
04:33 - computer whenever we're developing them
04:35 - so first of all let's develop the one
04:38 - for the server the one that's going to
04:40 - be sitting on a server somewhere so what
04:42 - we're going to do is we're going to
04:44 - first import socket and import
04:47 - CIS now a socket in case you guys don't
04:50 - know is basically a way that you can
04:52 - have two computers connect to each other
04:54 - or have a conversation so that's all it
04:56 - is and sis right here this is basically
05:00 - so you can run system commands AKA
05:02 - anything you would usually type into a
05:03 - command line you can run it from python
05:06 - as well it's pretty neat so the first
05:09 - thing we're going to do is we actually
05:11 - need to create a socket so let me just
05:14 - write uh create
05:18 - socket
05:20 - [Music]
05:22 - allows to
05:24 - connect all right so basically we're
05:27 - going to create a socket on the server
05:28 - and then we're also going to create one
05:29 - on the client and then they're like hey
05:31 - I can talk to each other want to talk to
05:33 - each other well you know they're not
05:35 - going to say that but pretty much that's
05:37 - pretty much what's going on all right so
05:39 - I'm going to name this socket create and
05:41 - this is the very first function that
05:43 - we're going to call so what I'm going to
05:45 - do is actually make a try catch or try
05:48 - accept whatever you want to call it and
05:51 - we'll write Global
05:52 - host Global
05:55 - Port not import you fool and Global s
06:00 - all right so basically we're going to
06:02 - have three Global variables this one is
06:04 - going to be the host in other words it's
06:07 - going to be the IP address of where you
06:08 - want to connect to now remember since
06:11 - this socket is being created on the
06:13 - server it doesn't need to go find some
06:15 - random IP address it's just whatever
06:18 - that own machine's IP address is now for
06:21 - the client you actually need the IP
06:23 - address of the server so for here the
06:26 - host we're just not even going to fill
06:28 - it in cuz it's just going to be itself
06:32 - now again whenever we make the client we
06:34 - actually need the IP address of the
06:36 - server but we'll get to that later now
06:38 - the port I'm just going to wrate
06:41 - 9999 if you guys don't know what a port
06:44 - well I explained this all in my
06:45 - networking tutorial so it's basically a
06:48 - way that your computer can identify what
06:50 - data is coming in so at your computer
06:53 - right now you might have Google Chrome
06:55 - open you might have Skype open you might
06:57 - have you know I don't know some other
06:59 - random Netflix open so whenever all the
07:02 - data is coming in it's like all right is
07:04 - this like Skype data or Chrome data
07:07 - where is it going well the port helps to
07:09 - identify which one is which now 9999
07:13 - isn't a well-known Port so we can just
07:15 - use that for ourselves don't use any
07:17 - common Port like um I don't know don't
07:20 - use like 443 or 80 or 20 or 22 or 21
07:24 - whatever so there you
07:26 - go so you know nothing special it
07:29 - doesn't need to be 999 but I might as
07:31 - well just make it that and now
07:34 - this s right here this is going to be
07:36 - the actual socket or conversation
07:40 - between the computers the server and the
07:43 - target machine so what we're going to do
07:45 - is we're just going to write accept
07:47 - socket air
07:51 - as
07:53 - MSG all right so we're going to try to
07:55 - create this socket right here now if it
07:58 - gives us an error for any reason then
08:00 - I'm just going to say all right take our
08:01 - error and we'll just save it as a
08:03 - variable MSG and we'll just print it out
08:05 - to the
08:06 - user and I'll say uh socket creation
08:12 - [Music]
08:17 - error and we'll just print out that
08:20 - error message right there all right so
08:22 - this is our
08:24 - function that creates the socket right
08:26 - there now after this what we actually
08:28 - need to do is we need to bind the socket
08:30 - to the port so we said okay right here
08:34 - we're going to allow This Server to
08:36 - connect with another computer and now we
08:38 - need to say okay well give me the host
08:40 - and the port and we'll actually save
08:42 - that for a next tutorial this one's
08:43 - getting kind of long so I'll see you
08:45 - guys then

Cleaned transcript:

all right hoses welcome back to another awesome video series in this one I'm going to be showing you guys how to create a reverse shell using python so I assume that you guys already know what a reverse shell is if you're watching this video series but for those who are just curious and you know maybe you just want to practice with some python what a reverse shell is is basically a way that you can connect to someone's personal computer from anywhere in the world so let's say that you were in China and your friend in Texas had a problem with his computer and he wanted you to you know connect to it and you know access it and find out what was wrong maybe had some weird files on there well by default computers personal computers that is they're set up in a way that makes it very difficult to connect to it directly so what are some of those problems first of all your personal computer that you're sitting at right now it doesn't have a static IP your IP address is not only not public but it's Dynamic it's always changing so even if you had the IP address you couldn't access it and even if you could it would just be changing all the time so it would cause a bunch of problems now even if you were on the same network then you would still have a lot of these issues because even if you knew the IP address from your local network and you can access that computer you still have a bunch of firewalls to get through from your operating system builtin security um um you know there's also like port forwarding issues tomato tomato potato potato whatever so basically what I'm trying to say is we just can't SSH into someone's home computer like we can a web server so that's where a reverse shell comes in handy so basically we can't access home computers they're just not set up that way but what we can do is set up a server and have the target connect to us pretty cool huh now now since they are the ones who initiated that connection then your operating system says hey what's this connection oh wait a minute you initiated it it must be fine so since you initiated it you have all the permissions and everything is golden now once you're connected to the server and I'm going to be showing you guys how to do all this what we're going to do is we're basically going to give it commands and then your computer or the target is going to look at those commands run whatever we tell it to and send back the result results so it's basically a way that we can get shell with any computer in the world even if it's not a server freaking awesome so if you guys are like when would I ever use this well in that example helping out a friend you would definitely use it and also let's say that you were a system or network administrator and you need to access a bunch of computers remotely you could do that and also one of the more popular ones although not very ethical this is how hackers actually gain full control into your machine so what they do is they create one of these and get you to click on it maybe they like hand out a CD in front of like Walmart or you know just send you a USB drive drop it in front of your um school or work or whatever like oh wonder what's on this plug it in your computer now they got all your crap so hopefully you guys can use this technique to do something ethical and also from a malicious point of view now that you're going to know how they're created you're going to what to look out for and well you'll be better protected so there's my little rant and now what we need to do is we're going to create two files so all this is is two files one for the server and one for the client so new python file and I'll just call this server.py and let me just create them both now so new python file client.py all right so so basically we're going to have two really simple Python scripts this one we're going to have running on our server now this one is the one that hackers would put like on a CD or a thumb drive and this is whenever the user sticks it in their computer and runs it this is the one that connects to the server so basically two ends of you know a conversation now I'm just going to be running these both on my own local computer to test and then at the end of the video I'll put it on the actual server to show you guys that it does indeed work but for right now I'll just run them both for my computer whenever we're developing them so first of all let's develop the one for the server the one that's going to be sitting on a server somewhere so what we're going to do is we're going to first import socket and import CIS now a socket in case you guys don't know is basically a way that you can have two computers connect to each other or have a conversation so that's all it is and sis right here this is basically so you can run system commands AKA anything you would usually type into a command line you can run it from python as well it's pretty neat so the first thing we're going to do is we actually need to create a socket so let me just write uh create socket allows to connect all right so basically we're going to create a socket on the server and then we're also going to create one on the client and then they're like hey I can talk to each other want to talk to each other well you know they're not going to say that but pretty much that's pretty much what's going on all right so I'm going to name this socket create and this is the very first function that we're going to call so what I'm going to do is actually make a try catch or try accept whatever you want to call it and we'll write Global host Global Port not import you fool and Global s all right so basically we're going to have three Global variables this one is going to be the host in other words it's going to be the IP address of where you want to connect to now remember since this socket is being created on the server it doesn't need to go find some random IP address it's just whatever that own machine's IP address is now for the client you actually need the IP address of the server so for here the host we're just not even going to fill it in cuz it's just going to be itself now again whenever we make the client we actually need the IP address of the server but we'll get to that later now the port I'm just going to wrate 9999 if you guys don't know what a port well I explained this all in my networking tutorial so it's basically a way that your computer can identify what data is coming in so at your computer right now you might have Google Chrome open you might have Skype open you might have you know I don't know some other random Netflix open so whenever all the data is coming in it's like all right is this like Skype data or Chrome data where is it going well the port helps to identify which one is which now 9999 isn't a wellknown Port so we can just use that for ourselves don't use any common Port like um I don't know don't use like 443 or 80 or 20 or 22 or 21 whatever so there you go so you know nothing special it doesn't need to be 999 but I might as well just make it that and now this s right here this is going to be the actual socket or conversation between the computers the server and the target machine so what we're going to do is we're just going to write accept socket air as MSG all right so we're going to try to create this socket right here now if it gives us an error for any reason then I'm just going to say all right take our error and we'll just save it as a variable MSG and we'll just print it out to the user and I'll say uh socket creation error and we'll just print out that error message right there all right so this is our function that creates the socket right there now after this what we actually need to do is we need to bind the socket to the port so we said okay right here we're going to allow This Server to connect with another computer and now we need to say okay well give me the host and the port and we'll actually save that for a next tutorial this one's getting kind of long so I'll see you guys then
