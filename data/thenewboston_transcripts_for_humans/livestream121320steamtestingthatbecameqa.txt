With timestamps:

00:04 - all right
00:05 - and we are back
00:08 - in my comments uh
00:12 - we need meme review
00:16 - i agree
00:20 - [Music]
00:22 - okay let's check it out check it out
00:24 - check it out
00:29 - all right so i don't know if you guys
00:31 - notice but i
00:32 - now have some awesome decorations back
00:34 - there i got an elephant
00:37 - two little plants literally the only
00:39 - decorations in my
00:40 - entire apartment all right and we got a
00:43 - logo
00:44 - no more uh streaming hard duck
00:49 - what is this testing this is just
00:52 - testing the uh stream
00:53 - i just signed up for a stream yard it's
00:56 - called
00:57 - and just streaming on youtube making
01:00 - sure my audio is good
01:01 - video is good and pretty much it
01:07 - yeah i move my jacket so you know you
01:09 - can see my awesome decorations a little
01:11 - bit better
01:12 - it's two decorations i do have a cool
01:15 - steve jobs poster
01:17 - but i don't want to like tape it to my
01:20 - wall
01:20 - i'm too lazy to frame it i don't have
01:23 - any thumbtacks so
01:24 - it's kind of just like a laying on the
01:26 - ground now should probably just tape it
01:28 - up there
01:30 - all right and look at this
01:35 - actually you guys dig in the red the
01:38 - minimal
01:39 - or no display name i kind of like the
01:42 - minimum myself
01:46 - stream yard cost uh i think this was
01:48 - actually let me see
01:51 - i just purchased it like 30 seconds ago
01:54 - [Music]
01:57 - 39 a month
02:01 - yeah this was uh actually they got a
02:04 - 20 a month plan but it had something
02:07 - up it didn't have full hd and i know you
02:10 - guys want to see my beautiful face in
02:12 - full hd of course so
02:14 - i had a splooge on that for you
02:16 - [Music]
02:18 - not using obs um so
02:21 - i used to use obs to stream on twitch
02:23 - but they like fried my mac every time i
02:25 - turn it on it was over in
02:27 - and also another fun fact for you guys
02:30 - is i had to uninstall
02:32 - adobe creative cloud because even though
02:35 - i like the software it was also
02:36 - frying my mac whenever i turn on
02:38 - camtasia to record anything
02:40 - it was just like uh heard my mac
02:42 - spinning fans overheating
02:44 - and i looked at the processes and there
02:46 - were like 500 processes running in the
02:48 - background
02:49 - so i close all my adobe apps and then i
02:51 - close the uh
02:53 - like that little uh tool menu in the top
02:55 - right the creative cloud one
02:57 - and still i looked at my processes and
02:59 - these things weren't shutting down
03:00 - so i'm like whatever just uninstall that
03:05 - okay yo bucky what up not much
03:10 - what's up bucky not much and let's see
03:16 - um these comments are moving a little
03:17 - too fast okay
03:23 - i use please help sir what are the most
03:25 - important subjects for cs student
03:27 - operating systems network c plus plus
03:29 - java other languages
03:30 - their computation architecture please
03:33 - answer
03:34 - so for that i would say
03:38 - there is no um there's no one right
03:41 - answer
03:42 - it really depends on where are you
03:43 - trying to go what do you want to achieve
03:45 - in the future
03:46 - and then once you decide upon that
03:49 - figuring out the best path to get there
03:51 - but for some of those you may need those
03:53 - skills for some of you may never need
03:55 - them so
04:02 - uh why does a variable appear
04:04 - uninitialized in main c
04:05 - plus which was declared and taken as
04:08 - input
04:09 - from class dot cpp i do not
04:13 - remember that tutorial that specifically
04:15 - so i would have to
04:17 - look
04:21 - how to get freelancing projects and make
04:23 - a career
04:24 - in freelancing so i never did
04:27 - freelancing but i know upwork
04:28 - is the site that i use whenever i need
04:31 - freelancers
04:32 - so possibly that route
04:35 - can you make a tutorial about good
04:37 - practice in convention
04:39 - uh programming i
04:42 - like that idea actually i am uh obsessed
04:45 - with clean code
04:47 - to a point where it's not even like
04:50 - clean clothes
04:51 - it's more like ocd really um
04:55 - just making sure like properties are in
04:58 - alphabetical order
04:59 - and uh imports are optimized
05:03 - everything is nice and standard and you
05:05 - know what on the topic of clean code
05:08 - so i actually uh had a debate with a few
05:12 - people about this
05:13 - and whenever you're working on a
05:16 - software project as a team
05:18 - clean code seems like kind of um
05:20 - strictly an ocd thing
05:22 - but the reason that i like it is because
05:25 - whenever you have standards and really
05:27 - clean code you can go to any part of the
05:29 - code base
05:30 - and it you can't tell who it was written
05:33 - by
05:34 - and that's kind of the goal in my mind
05:36 - where everything is standardized
05:37 - consistent
05:39 - so it doesn't look like each part is
05:41 - written by a different team or a
05:42 - different pod however your teams are
05:44 - structured
05:45 - and also these little things of
05:48 - okay where do i look for this property
05:50 - in the list of like
05:51 - 60 properties or was this imported and
05:54 - then you have to find it
05:55 - it's all those little things where you
05:57 - don't think about
05:58 - but these seconds they add up and kind
06:01 - of
06:04 - i always kind of equated it to this
06:06 - where uh
06:08 - it may not be that correct or the best
06:11 - analogy but
06:13 - programming is a lot like just reading
06:15 - any language
06:16 - where you start to read and
06:20 - you're focused on just the letters you
06:22 - learn b and t and
06:24 - bat okay on
06:27 - ba in you are you put so much time and
06:31 - energy onto each
06:33 - character and then later each word that
06:35 - by the time you get to the end of a
06:36 - sentence
06:37 - you don't you pretty much forgot what
06:39 - was at the beginning and your reading
06:41 - comprehension is
06:42 - really um low when you first started out
06:46 - but eventually after you get more
06:48 - familiar with it it's like
06:49 - the dog is on the uh house or whatever
06:52 - it is
06:53 - and then you can begin to understand the
06:56 - words and then the sentences and then
06:57 - things just flow
06:59 - and then after a while you aren't
07:01 - thinking about those specific words
07:03 - you're thinking more about the meaning
07:04 - and paragraph and the story so kind of
07:07 - like coding
07:08 - the more familiar you are with it in the
07:10 - more the easier it is to read
07:12 - uh these different patterns you can
07:14 - focus more on the
07:15 - problem that you're trying to solve
07:17 - rather than the syntax of what does this
07:19 - do
07:19 - or where is this thing all of those
07:22 - little question marks you can get out of
07:23 - the way
07:25 - can allow you to focus on the the
07:27 - problem itself
07:28 - wow that was a long answer i didn't even
07:30 - remember what the original question was
07:31 - but let's
07:32 - scroll back up here flutter you guys
07:34 - really love flutter flutter is coming
07:38 - this is uh kind of my game plan for
07:39 - youtube videos and
07:41 - before i get to that let me um
07:44 - actually how am i going to show you guys
07:47 - this
07:48 - if you go to my twitter uh
07:51 - my name is bucky underscore roberts
07:54 - the second to last post i made actually
07:57 - let me back up a little bit so a couple
08:00 - of days ago i asked what do you want to
08:02 - learn in 2021
08:04 - since well i wanted to know what you
08:06 - guys thought since
08:07 - those were pretty much the tutorials i
08:09 - was planning on making
08:11 - and for those of you who don't feel like
08:13 - going all the way over to twitter
08:15 - python was first surprisingly and i say
08:18 - surprisingly not because the community
08:21 - is uh you know familiar with python
08:24 - but mainly because i taught a lot of
08:26 - python before so i figured you guys
08:28 - would be sick of it
08:29 - but python was first and again this was
08:31 - just the results from the poll
08:33 - they're not anything like uh i'm
08:34 - committed to creating these tutorials or
08:36 - i haven't decided anything yet
08:38 - i just want to you know read you guys
08:41 - the results
08:42 - number two you guys will be happy to see
08:45 - is
08:45 - flutter number three i'm just going to
08:48 - read them out i'm going to say one two
08:50 - three
08:50 - all right python flutter docker
08:53 - django aws kubernetes react native
08:57 - react in ai and after that's blockchain
09:01 - javascript machine learning
09:02 - typescript and yada yada so on and so
09:05 - forth
09:06 - but flutter is definitely on the menu as
09:09 - is docker
09:10 - and aws python and django i did
09:14 - teach that before if there's
09:17 - debating whether i want to teach
09:20 - that again i mean if you guys would like
09:23 - me to teach that
09:24 - then yeah i guess uh rocking with that
09:31 - all right hold on read through comments
09:32 - reading through comments
09:36 - how to concentrate and have patience
09:39 - while learning
09:40 - so this is um
09:44 - okay i need to find a way to like
09:47 - bookmark these comments or something i
09:50 - as i'm answering i see all these other
09:52 - questions go past and in my head i'm
09:54 - like i'm gonna miss that i'm gonna miss
09:56 - that
09:56 - but uh okay one second
10:02 - okay how to concentrate and have
10:04 - patience while
10:05 - learning so i think the
10:09 - reason why a lot of people have trouble
10:10 - concentrating and having patience while
10:12 - learning
10:13 - is because the thing that they're trying
10:15 - to learn doesn't have a lot of meaning
10:18 - to them
10:19 - in other words whenever i was in
10:22 - school high school i had to learn about
10:24 - history and then i had to read books for
10:27 - english class
10:28 - and the fact that i had to do it rather
10:30 - than i wanted to do it
10:31 - it just it was just like okay i just got
10:34 - to do this to complete an assignment
10:36 - or whenever they teach you math in
10:38 - school they're like figure out this
10:39 - equation and then
10:40 - answer on your test or on your homework
10:43 - and in my mind i was like
10:44 - what's the point of this when am i ever
10:46 - going to use this equation
10:48 - uh it just feels like i'm like i'm a
10:50 - function i get some input and i got to
10:52 - do some output or else i get in trouble
10:53 - by my mom or whatever
10:55 - but um the reason i say all this is
10:57 - because
10:58 - with without that reason and say
11:02 - what does this matter what am i doing it
11:03 - for there's no
11:05 - purpose there's no uh nothing to attach
11:07 - it to on your mind because you have
11:08 - nothing to relate it to
11:10 - so whenever i am learning a new language
11:14 - or new technology of course i have the
11:16 - purpose to teach you guys
11:17 - but aside from that it's not
11:21 - i don't really think of things like uh
11:23 - learning in this way or i have to do
11:25 - this
11:25 - to do this what i usually do whenever
11:28 - i'm learning a new technology
11:30 - is something like this i want to build a
11:33 - digital currency
11:34 - because i want to create a better
11:37 - economy and i want to work on this
11:39 - program with everyone for my community
11:41 - now that's what i'm gonna do and that's
11:44 - my focus
11:45 - that's my only focus my dream what i'm
11:47 - passionate about so on and so forth
11:49 - now on that journey of getting to there
11:52 - i know that i'm gonna have to read
11:53 - through documentation i'm gonna have to
11:55 - understand
11:56 - concepts that i didn't learn before but
11:58 - unlike before
11:59 - when i was in high school and having to
12:01 - go through each of these things
12:02 - i'm still doing the exact same thing i
12:04 - have to learn math i have to learn
12:06 - new languages i have to learn this and
12:07 - that but
12:09 - it's not about that learning it's just
12:10 - things that you do naturally
12:13 - on the way to creating this digital
12:15 - currency or this project
12:17 - and a side story on this is that
12:22 - when i first moved down to north
12:24 - carolina and
12:25 - i had a job like um i had to mow
12:29 - like uh police departments and fire
12:31 - stations in like
12:33 - uh like the soccer fields that kids
12:36 - played at
12:37 - so i was just like uh a landscaper
12:39 - basically
12:40 - i worked with uh two people notably i
12:42 - worked with a lot of people but in this
12:44 - story we'll just stick with those two
12:45 - people
12:47 - one guy he hated coming to work every
12:48 - day and he's like ah
12:50 - another day another dollar that's what
12:52 - he always said
12:53 - and another guy kelvin he's like man
12:56 - after this week gonna get that ps3 and
12:59 - so
13:00 - you know got the ps5 now but i actually
13:03 - don't even know if it was the ps3 it was
13:04 - one of those consoles back then
13:06 - but he was always looking ahead to
13:10 - what he could do uh after like what was
13:12 - the purpose of work so on and so forth
13:14 - and i was like huh that's uh pretty
13:17 - interesting
13:18 - it's both of these people including
13:20 - myself
13:21 - we're coming in and going to work every
13:23 - single day we're doing the same exact
13:25 - thing
13:25 - but one guy was upset and depressed the
13:29 - whole time
13:29 - in another one in the exact same
13:31 - situation was just always looking
13:33 - forward to things
13:34 - so i don't know it's just uh
13:38 - the way that i learn it's not that i
13:40 - ever have to go through docs
13:42 - or learn something in a book it's just
13:44 - that these are just things
13:45 - to get me one step closer to what i'm
13:48 - concentrated on
13:49 - it's just um it's not so much learning
13:53 - anymore or having to do anything
13:55 - it's uh just a different mindset i
13:56 - suppose
13:58 - okay miss about 5 000 comments so let me
14:01 - scroll up
14:04 - what are you up to now regarding the
14:07 - channel like blockchain
14:09 - machine learning and web stuff so yes
14:12 - the channel
14:12 - got a lot of stuff planned um i wanna
14:16 - i finally have time okay let me just
14:18 - back up
14:19 - so on november 5th whenever i release
14:22 - the video
14:23 - there were a lot of people um who came
14:26 - into the project right away
14:28 - a lot more than i expected and
14:31 - let me kind of close this as well
14:35 - so a lot of more people came on to the
14:37 - project than
14:38 - i expected and it was just really um
14:41 - overwhelming
14:42 - so in a good way by the way so people
14:45 - would come on and message me and say hey
14:46 - bucky uh i want to join the project
14:49 - this is my background so on and so forth
14:51 - and as i was responding to them
14:53 - i could hear on my little slack bot
14:56 - other people coming in or uh
14:59 - sending me messages i'm like man i am
15:02 - never gonna get through these
15:04 - and then at the end of the night at like
15:06 - 1 30 2 in the morning i finally got
15:07 - through all my messages i'm like
15:09 - okay tomorrow i can go and finally
15:12 - uh start on my twitter messages since
15:14 - this was all on slack
15:16 - and then i would wake up open my slack
15:18 - prepare to go to twitter and there'd be
15:20 - like 150 new messages on slack and i was
15:22 - like
15:23 - oh man never going to get through this
15:25 - but um
15:26 - yeah so the point of the story is
15:29 - essentially
15:30 - i finally have some time now now that
15:33 - that new traffic kind of died down
15:34 - and i want to get through the digital
15:36 - currency videos which i'm
15:38 - hoping to rip out pretty quick and then
15:40 - after that i want to make a series on
15:43 - the account manager
15:44 - the desktop client that you use since a
15:46 - lot of people are having some trouble
15:47 - with that
15:48 - since it is a brand new piece of
15:50 - software of course so
15:52 - i want to teach that and then on the
15:55 - 19th i think i'm flying back to new york
15:58 - to see my family
16:00 - that's the plan for now with this virus
16:02 - thing going around everything's uh
16:04 - changing pretty quickly but
16:06 - i am going to um finish writing my
16:08 - docker tutorials my aws tutorials
16:11 - i'm going to be writing flutter
16:12 - tutorials i'm i'm not going to have my
16:14 - computers around since i'm
16:16 - since uh i film on these big imacs
16:20 - and what is this
16:24 - ah a little debate going on in the chat
16:27 - so i'm not gonna have these but what i'm
16:29 - gonna have am
16:31 - i am gonna have is a lot of time to uh
16:34 - finish writing my tutorials which
16:36 - actually takes the bulk of the time
16:38 - whenever i'm creating videos
16:40 - just because i need to make sure to have
16:41 - a general outline
16:43 - and then i need to make sure on each
16:45 - tutorial i have bullet points of what i
16:47 - want to cover
16:48 - just so i make sure that i don't want to
16:50 - um miss anything or skip over anything
16:53 - so that takes the majority of the time
16:56 - and then when i come back
16:57 - in the beginning of 2021 in january
17:00 - i can pretty much just pump out a bunch
17:02 - of those tutorials so
17:04 - docker aws and flutter coming first and
17:07 - then
17:08 - and then i'm essentially going to wait
17:09 - and see what you guys say mostly
17:11 - listening to the polls uh so on and so
17:13 - forth
17:15 - wow these answers are way too long okay
17:18 - uh
17:18 - scroll down scroll down
17:24 - okay how to increase
17:27 - logical skills for programming this is
17:29 - actually interesting
17:31 - question
17:35 - this is uh something i never thought
17:37 - about
17:41 - i guess that um so so one thing
17:44 - it's kind of the stupid standard answer
17:46 - but just uh
17:47 - practice lots of practice and another
17:51 - thing
17:51 - that i noticed throughout my programming
17:54 - career
17:55 - one thing that separates the really good
17:57 - programmers from the
17:59 - junior programmers that is pretty
18:01 - apparent
18:02 - is whenever they have a new feature to
18:04 - work on or a new little
18:05 - project the more senior developers
18:10 - they take a lot of time to plan
18:14 - they spend a lot of time either on a
18:15 - whiteboard or a notebook and by the time
18:17 - their fingers touch the keyboard
18:19 - they know exactly what they're gonna do
18:21 - uh it's pretty much just
18:24 - writing the solution as fast as you can
18:25 - type of course there may be some
18:27 - issues that they come across but more or
18:29 - less so much goes into planning and
18:32 - understanding exactly what you're
18:33 - building
18:34 - before you start writing the code where
18:36 - with
18:37 - junior developers they get a problem
18:40 - it can be like um an interview challenge
18:43 - or even like a feature later on when
18:45 - they get hired or when they're first
18:47 - starting out
18:48 - and whenever they do they just hop right
18:50 - into the code right into the code
18:51 - and pretty quickly right after that they
18:53 - usually get stuck or say
18:55 - i have to rewrite this rewrite this and
18:58 - i think
18:59 - what's happening in the reason that
19:02 - uh i guess with this digital currency
19:04 - thing i spent months and months and
19:05 - months playing them before my fingers
19:07 - ever touched the keyboard
19:08 - is that whenever you just start coding
19:12 - right away
19:12 - you're kind of looking at things uh one
19:14 - step at a time
19:16 - so if there's ten steps you say i'm
19:17 - gonna do step one and then step two
19:19 - but what it doesn't allow is to see the
19:24 - system as a whole
19:25 - and say okay so this is the individual
19:28 - pieces kind of like that reading
19:29 - comprehension
19:30 - if you guys were here for the earlier
19:32 - part of the stream
19:33 - but not only can you understand the
19:35 - individual pieces but you can understand
19:37 - how everything fits together
19:39 - and then if things don't fit when you're
19:41 - looking at things from a big picture
19:43 - you can go back and kind of tweak things
19:44 - move it around
19:46 - but um i i don't know if that was the
19:50 - answer of the logical skills for
19:52 - programming
19:53 - but by taking the time to plan things
19:56 - out thoroughly
19:57 - uh kind of just with a notebook a
19:59 - notebook and pen or a whiteboard
20:01 - it i feel will improve almost all of
20:04 - your projects
20:06 - all right pretty cool huh i don't know
20:10 - what that was referring to
20:11 - but i'm guessing that it was cool
20:15 - all righty
20:16 - [Music]
20:18 - where can i notify you about a security
20:21 - vulnerability
20:22 - you can uh send me a private message on
20:24 - slack
20:27 - uh hi daddy
20:31 - skip that one all right
20:35 - let's see what else we got
20:39 - can you do bitcoin for complete
20:42 - beginners so caleb is actually making a
20:46 - uh
20:46 - blockchain for beginners tutorial series
20:49 - for the new boston
20:51 - however he is waiting on a payment
20:54 - library
20:54 - that we haven't had time to develop yet
20:57 - so
21:00 - i wanna wait and see for his series to
21:02 - come out and see what he covered
21:04 - and then i'll kind of let the community
21:06 - decide if they want more
21:07 - if they want less if they like that if
21:09 - not so we're rocking with that
21:12 - how long will this stream be i have no
21:14 - idea it's already uh way longer than i
21:16 - expected i really just wanted to do this
21:18 - stream to um
21:20 - test out this uh this new software that
21:23 - i was using in the stream
21:25 - so there really is nothing
21:28 - nothing planned or important for this
21:30 - stream so uh
21:32 - yeah i need to know about the obsession
21:36 - with tuna so another fun fact for you
21:39 - guys
21:40 - is that whenever i started using bacon
21:43 - and tuna in my tutorials and i'm sure if
21:45 - you guys follow me on
21:46 - twitter you already know where this is
21:48 - going but i
21:50 - actually didn't start using
21:53 - the words bacon and tuna in my tutorials
21:55 - to be funny even though you know it is
21:56 - kind of funny i started using it because
21:59 - whenever
22:00 - i was learning programming for the very
22:02 - first time
22:03 - i would go through these books and teach
22:05 - them about
22:10 - so i would go through these books and
22:11 - learning about classes and functions and
22:13 - variables
22:14 - and these variables would be named like
22:16 - var num equals five
22:18 - and i would see these two things like
22:20 - var num i go is one of these like
22:22 - customizable is numb is var
22:26 - like like what's going on and it was
22:28 - hard for me to see
22:29 - like what was a built-in uh keyword and
22:32 - then what was customizable
22:33 - so in my tutorials where i did var bacon
22:37 - equals 18 or something or var tuna
22:39 - equals
22:40 - you know some string i did that because
22:43 - it's very clear to understand what is a
22:45 - built-in reserve keyword and then
22:46 - what is a customizable variable name
22:50 - so that is kind of the reasoning behind
22:52 - that if you guys just thought they're
22:54 - kind of
22:54 - random and i also know that uh
22:58 - a lot of people don't like kind of uh
23:01 - teaching programming that way
23:03 - because in real life you're not supposed
23:06 - to name things bacon
23:08 - however when teaching to someone for the
23:10 - very first time
23:12 - and trying to look at things from their
23:13 - perspective um
23:15 - it is good to use those kind of keywords
23:18 - so even though
23:19 - making actual application i would never
23:20 - suggest using tuna or bacon
23:22 - unless you're making a program about
23:24 - like foods or fish or anything
23:26 - but um yeah there you go
23:32 - oh let's see la la
23:37 - how does one
23:42 - obsession with tuna
23:45 - where have you been still like look like
23:47 - a college kid
23:49 - thank you i feel like i'm about 80 years
23:51 - old stress out from a lot of different
23:53 - projects uh
23:55 - this digital currency one got going on
23:58 - which is a pretty big one but i'm
24:00 - feeling
24:01 - really good about it python is good for
24:04 - people i suggest python i love it seems
24:06 - to be growing strong and also one of the
24:08 - most
24:09 - well liked wait not just the voice
24:12 - i am not a [ __ ] he's my daddy again
24:16 - okay interesting uh oh
24:19 - i should quit college okay got it thanks
24:23 - so this is actually a very interesting
24:26 - question so
24:29 - one i would say that you should probably
24:30 - never take my advice for
24:32 - anything at all so that's my little
24:34 - disclaimer
24:35 - um i i don't recommend
24:39 - quitting college overall it's just a
24:41 - general piece of advice
24:43 - what i would recommend is for anyone
24:47 - in in life really to figure out
24:51 - where you want to be and where you're
24:53 - trying to go and then
24:54 - for yourself independently ask yourself
24:58 - is college the best way to get there
25:01 - and for a lot of professions whether it
25:03 - is um
25:04 - being a doctor or a lawyer uh dropping
25:06 - out of college is not a good idea at all
25:09 - for being a programmer and for wanting
25:11 - to build something unique
25:13 - and for wanting to focus your time and
25:17 - energy on
25:18 - learning about different different
25:19 - software and technology
25:22 - versus going to college and learning
25:24 - about science or gym class
25:26 - then it can be a consideration
25:30 - and another thing is that
25:36 - well i guess i'm always a little weary
25:40 - to give advice like this because
25:43 - i know that what worked out for me may
25:46 - not work out for
25:47 - um other people so i
25:51 - i really am hesitant to uh you know
25:54 - advocate for dropping out of school just
25:56 - because even saying that
25:57 - it seems like a silly thing to suggest
26:01 - but for myself it was even now i feel
26:05 - uh the right choice for me 100 but
26:08 - it's hard to give advice for other
26:09 - people because i don't know your
26:11 - situation
26:15 - all right all right
26:18 - salesforce commerce cloud
26:22 - uh so to anneal bk
26:26 - asking about salesforce commerce cloud
26:28 - actually
26:29 - never uh use that software um
26:34 - familiar with it but i would not be the
26:37 - best person to teach that i'm afraid
26:42 - all right all right wow
26:46 - lots of comments about that
26:49 - okay here we go the new boston how long
26:52 - to learn
26:54 - python so this is uh interesting as well
26:57 - because when there
27:01 - there's never really a time where you
27:03 - can say i learned this language
27:05 - or i didn't learn it yet the moment you
27:08 - pick up a book and understand the first
27:10 - line of a python
27:11 - uh tutorial then you learn python kind
27:14 - of
27:15 - like learning a language okay i took
27:18 - spanish
27:18 - in high school and i know how to say
27:20 - like uh my name
27:22 - and i know how to say like donald
27:24 - biblioteca like where's the library but
27:26 - i don't
27:27 - know spanish or maybe i do now even
27:30 - people who
27:31 - even myself who am a native english
27:34 - speaker
27:35 - there's like 90 language i have no idea
27:37 - what those
27:38 - words are probably so can i say that i
27:40 - know it
27:41 - so it's always this fuzzy thing where
27:44 - uh myself who's been writing python for
27:47 - 10 years
27:48 - more than that i guess um there
27:52 - are there's a vast majority of the
27:53 - language that i i don't know
27:56 - so it's uh how long to learn something
28:01 - it's gradual it happens over time and
28:04 - it never stops you can never stop
28:06 - getting better
28:08 - toothbrush or headphone or what
28:11 - this is a toothbrush actually like the
28:15 - whenever i'm making the tutorial brush
28:17 - the old teeth
28:20 - okay do you feel like the cs field in
28:22 - general is becoming flooded to me
28:24 - in school the cs major is such an
28:26 - impacted
28:27 - major so
28:31 - becoming flooded um i don't
28:36 - it depends on your perspective because
28:38 - is it just like are too many people
28:39 - learning cs uh i wouldn't say that
28:42 - because if lots of people are interested
28:44 - in cs then they should learn it they
28:46 - should go after what they're passionate
28:47 - about
28:49 - as for hiring i think that
28:54 - tech companies specifically they don't
28:57 - care so much
28:58 - about your certifications or your degree
29:00 - versus other areas
29:02 - of um career and industry so on and so
29:05 - forth
29:06 - software companies want the best
29:08 - software developers
29:10 - they want the best software developers
29:12 - in the world because when you release
29:14 - a piece of software there's no
29:15 - certifications or degrees attached to it
29:18 - so people acquire their skills through
29:22 - different means some people go to school
29:24 - and get a master's degree in cs
29:26 - other people go to boot camp and become
29:28 - amazing developers
29:29 - and some people just do independent
29:31 - study and learn on their own
29:33 - and each of these avenues can turn out
29:35 - great for people
29:36 - and each can turn out not so great
29:39 - it really depends on how you learn
29:43 - best as an individual some people need
29:45 - to go to school even for cs because they
29:47 - need that pressure of someone saying
29:49 - okay
29:50 - you need to be uh kind of responsible to
29:52 - complete these assignments
29:54 - and without that pressure they never
29:56 - progress
29:57 - other people it's just um they know
30:00 - exactly what they want to do they know
30:01 - exactly what they
30:02 - want to learn and they don't need help
30:04 - going down that path
30:06 - but whether it's a boot camp whether it
30:09 - is
30:10 - um university whether it is independent
30:12 - learning
30:13 - all of this really depends on what works
30:15 - best for you
30:16 - so i hesitate to give a general answer
30:21 - but hopefully that helped out tooth
30:23 - pressure headphone
30:24 - again huh okay favorite
30:27 - tech stack so i don't know if this has a
30:29 - um
30:32 - uh so the tech stack i like is uh
30:35 - django and then i like django rest
30:37 - framework
30:38 - everything on aws even that that isn't
30:40 - really part of the stack
30:42 - and still a fan of react react in redux
30:46 - been using redux toolkit recently but
30:49 - i mean if you're just gonna like rip out
30:51 - a traditional
30:52 - uh crud application or i mean
30:56 - you really can't go wrong with learning
30:58 - python or django because it's so
31:00 - uh popular nowadays and then on the
31:02 - front end with
31:03 - react javascript i mean that's not dying
31:05 - anytime soon
31:06 - so it's hard to go against that even
31:09 - though i know
31:10 - answering that now everyone is going to
31:13 - you know be debating their own stacks in
31:16 - like what
31:18 - why not angular why not node jango
31:22 - so yeah i uh i blame that person for
31:25 - starting a war
31:26 - in the chat okay and this is jumping
31:30 - around jumping around
31:33 - uh what about big data so i think i
31:36 - might have missed a question here
31:39 - uh something about it or just what about
31:43 - it
31:45 - all right so how is the new boston
31:48 - currency
31:48 - so fast so this is interesting that's
31:50 - what i like talking about
31:55 - all right so there are a couple
31:57 - inefficiencies that i saw
31:59 - actually since this is a stream i guess
32:01 - i uh
32:03 - okay let's just let's just uh answer
32:05 - this question straight up
32:07 - so you know whatever let's just go way
32:11 - back to
32:12 - why i uh created the network and how
32:15 - that came about
32:16 - so whenever i was creating the digital
32:19 - currency i never
32:22 - set out to create a digital currency
32:25 - what i was doing
32:26 - is i was actually um making a simulation
32:29 - about the entire us stock market
32:32 - and what i saw
32:35 - is that there's an opportunity if you
32:37 - could figure out the retailers and their
32:38 - suppliers
32:40 - to through earnings see
32:43 - which companies were going to most
32:45 - likely uh
32:47 - have higher earnings than expected and
32:49 - the reason
32:50 - uh pretty simple is for this if google
32:52 - announced
32:53 - 10 more earnings then that means that
32:56 - more or less their company was growing
32:58 - by
32:58 - 10 so therefore since they needed to
33:02 - you know buy additional uh merchandise
33:05 - buy additional computers hire more
33:06 - employees expand their operations
33:09 - then that means that whoever they
33:11 - purchased their supplies from whether it
33:13 - was intel whether it was from amd
33:15 - so on and so forth that they would most
33:17 - likely have a 10
33:19 - earnings increase as well so
33:22 - since i was finding this correlation
33:24 - what i do is i mapped out a simulation
33:26 - with all these different companies and
33:28 - then i saw
33:29 - i essentially needed to figure out how
33:31 - the money was flowing between these
33:33 - companies to get this correlation
33:35 - so the money is a little bit more
33:38 - complicated
33:40 - than just seeing where it's flowing from
33:42 - company to company because money doesn't
33:44 - flow that way in real life
33:45 - what happens in the v1 of the simulation
33:49 - is i figured that i needed to add
33:51 - employees
33:52 - so when and break this down even uh more
33:56 - simply is that whenever a company
33:58 - pays employees those are people who can
34:01 - go to
34:02 - different parts of the economy and buy
34:03 - something in other companies
34:05 - so it essentially is a company to
34:07 - employees they spend it at another
34:09 - company
34:09 - and then that company can hire more
34:12 - employees or
34:13 - you know pay their employees and the
34:15 - cycle continues
34:16 - now breaking this down into its most
34:19 - simple form
34:20 - i thought in my mind never went to
34:22 - college but things kind of work like
34:24 - this
34:25 - where whenever i have a dollar and i
34:28 - give it to you that is minus one dollar
34:31 - for me
34:32 - and plus one dollar for you so in the
34:35 - end
34:35 - i figured it always equals zero and then
34:38 - when you expand it to companies playing
34:40 - them
34:40 - employees and their employees go and you
34:42 - know they pay taxes and stuff but then
34:44 - they buy other goods
34:46 - in my mind i figured the total economy
34:48 - always equaled zero
34:50 - but then after looking at things i saw
34:54 - okay whenever i plug real numbers into
34:56 - the simulation
34:57 - that it didn't equal zero or not even
35:00 - close
35:01 - and what i didn't account for
35:04 - in the end after you know mapping a lot
35:07 - of things out
35:08 - is how the money got into the economy in
35:10 - the first place
35:11 - that whenever i pay you a dollar that
35:13 - dollar needed to come
35:15 - from somewhere in the in the first place
35:18 - so
35:19 - i had to essentially say okay in this
35:21 - economy where does the money come from
35:23 - oh it's the banks and they
35:24 - loan it out and well how did the banks
35:27 - get the money how does this system work
35:29 - oh central banks do this and oh that's
35:32 - kind of a unique system because
35:35 - huh apparently what's happening is banks
35:38 - are giving out
35:39 - people loans and that's how money gets
35:41 - into the system
35:42 - and then loans are essentially promises
35:45 - to pay back
35:46 - more money than you initially receive
35:48 - however breaking things down
35:50 - let's just say that there are three
35:51 - people in the economy and
35:53 - they each took a loan out for a dollar
35:56 - now
35:56 - if there is 10 interest on that loan at
35:58 - the end of the year
36:00 - they would each have to pay back a
36:01 - dollar 10 cents but after a year
36:05 - what you would essentially have is three
36:07 - people
36:09 - [Music]
36:11 - pen cap dropped
36:15 - no i did not watch that but you would
36:17 - essentially have three people
36:18 - who took out a dollar loan so there are
36:21 - three dollars in the economy
36:22 - however if they're all standing around
36:24 - each other they would say wait a minute
36:27 - so we as a community owe three dollars
36:30 - and thirty cents
36:31 - to these banks but there are only three
36:33 - dollars in the total economy
36:36 - so and this again is a very simplified
36:40 - version the economy is a lot more
36:41 - complex
36:42 - than this but um essentially that's what
36:45 - i was
36:46 - uh trying to figure out and then i saw
36:49 - that
36:50 - an alternative solution was bitcoin and
36:53 - way back when i didn't understand what
36:54 - the hype of all the uh
36:56 - blockchain was about since
36:59 - it seemed like this technology that was
37:01 - just technology for the sake of
37:03 - technology
37:04 - and let me uh get rid of this right here
37:09 - so i kind of saw bitcoin similar it's
37:11 - like 3d tv
37:12 - where okay that's pretty cool but
37:15 - okay like it's cool technology but is it
37:19 - gonna take off
37:20 - do we really need it is it really
37:22 - meaningful in any way
37:23 - uh i couldn't really connect it in my
37:25 - head so
37:26 - after understanding this in the problem
37:28 - with a simulation that i was trying to
37:30 - figure out which ended up
37:32 - being a lot more than a bug fix because
37:34 - i ended up having to figure out
37:37 - how different parts of the economy work
37:38 - so on and so forth
37:40 - i saw that okay so bitcoin is actually a
37:43 - pretty cool solution to this
37:45 - but if that's the case and people have a
37:47 - choice between these two systems
37:50 - why are they choosing this over uh
37:52 - bitcoin or blockchain or anything
37:54 - i don't mean seem like a advocate for
37:57 - bitcoin or whatever since i know a lot
37:58 - of people
37:59 - get pretty annoying on all that but um i
38:02 - was just
38:02 - trying to figure out in my mind it was
38:05 - just a better solution
38:06 - but why if that was the case it wasn't
38:08 - more widespread
38:10 - and one of the big things even though
38:12 - there are lots of things
38:14 - is that the transaction
38:18 - times were a big barrier so i know right
38:20 - now we have the lightning network and
38:21 - there are lots of other improvements
38:24 - but essentially no one
38:28 - i noticed was going to go to uh
38:31 - a deli and buy a cup of coffee or
38:33 - sandwich or whatever
38:34 - and be waiting there for 10 minutes
38:36 - while their transaction
38:38 - was you know pending waiting to get
38:40 - approved so
38:41 - i knew that the first thing was the
38:43 - transaction times that i needed to
38:45 - speed up or at least that was um the
38:48 - barrier that i saw which would
38:49 - eventually
38:50 - lead me to uh start creating this
38:52 - project
38:53 - another thing was the incentive
38:57 - where more or less in this economy
38:59 - people will
39:01 - will do what you pay them to where they
39:04 - build the things
39:05 - uh based on economic incentive they
39:07 - choose jobs based on that
39:09 - so on and so forth now in the bitcoin
39:12 - blockchain that incentive comes from
39:16 - mining blocks it comes from the fact
39:18 - that not only do you validate
39:19 - transactions which is useful
39:21 - uh it's the main goal of the miners but
39:24 - so much of that time and energy
39:26 - is spent solving this puzzle it's spent
39:29 - devoted to something that has absolutely
39:31 - nothing to do
39:32 - with verifying the transactions itself
39:35 - so in the bitcoin blockchain and this
39:38 - all ties back to that original question
39:39 - by the way
39:40 - one sec
39:44 - in the bitcoin blockchain what you
39:45 - essentially have is a network of miners
39:48 - and these miners each get transactions
39:51 - and they bundle them together into a
39:53 - block
39:54 - and then they validate those
39:55 - transactions pretty quickly
39:57 - but then after that what they do is they
40:00 - solve a puzzle
40:01 - a puzzle that takes around 10 minutes on
40:03 - average to solve
40:05 - and the reason that they solve that has
40:07 - nothing to do with validating the
40:09 - transactions
40:10 - has to do with more of a human problem
40:12 - and that is
40:13 - if you picture it like this if there
40:16 - were
40:18 - a lot of students sitting at desks and
40:21 - you were
40:22 - watching like in a football stadium or
40:23 - something then
40:26 - if you just had each of those students
40:28 - with pencil and paper
40:29 - validating a transaction and in a live
40:32 - network
40:32 - they would just stand up and shout every
40:34 - time they validated
40:35 - one then it would just be mayhem there'd
40:38 - just be validated validated validate you
40:40 - couldn't understand who's first you kind
40:41 - of understand
40:42 - if they're valid communication would
40:44 - just be a mess
40:46 - so with that in mind instead of all
40:49 - these
40:50 - uh kids i don't know why they have to be
40:52 - kids just imagining myself
40:53 - in an elementary school but now imagine
40:56 - each of these kids validating a set of
40:58 - transactions or doing a test or
41:00 - something
41:01 - and then after that you give them a big
41:04 - crossword puzzle to fill out or maybe a
41:06 - word search or something maybe a sudoku
41:08 - problem
41:09 - and this is a challenging one that takes
41:12 - on
41:12 - average 10 minutes to solve well now
41:15 - instead of everyone shouting shout and
41:16 - shouting
41:17 - they solve these transactions and then
41:19 - they
41:20 - have to solve this and then the
41:22 - communication becomes more spread out
41:25 - at the end of 9 minutes 10 minutes
41:27 - somewhere around there
41:28 - a kid's going to stand up and said i
41:29 - validated these transactions
41:31 - and i solved the puzzle and instead of
41:33 - everyone shouting at once
41:35 - now those people all those other
41:37 - students are able to determine okay
41:39 - this person was first that communication
41:42 - is pretty clear
41:43 - now we can just validate it pretty
41:44 - quickly and then move on to the next
41:46 - puzzle
41:47 - so that is what i saw
41:50 - but what was interesting in all of this
41:54 - is that aside from that earlier part
41:57 - that i mentioned
41:58 - of everyone solving this puzzle
42:00 - validating transactions so on and so
42:01 - forth
42:02 - i noticed that there was a moment in
42:04 - time
42:05 - where one of these students in my mind
42:08 - stood up and then the entire network
42:11 - agreed that this was a student that we
42:13 - go with this was the one
42:15 - so in that moment an entire network of
42:18 - computers
42:19 - of nodes that were controlled by people
42:21 - who had no idea who each other were
42:23 - they were able to agree on something
42:26 - and the bottleneck and all of that was
42:29 - this puzzle
42:30 - was this puzzle that needed to be done
42:32 - because they needed to figure out
42:34 - uh who was first or who should be able
42:37 - to validate that block
42:39 - now kind of translating that to a couple
42:44 - problems i
42:44 - identified is i saw that the efficiency
42:49 - inefficiency in the network uh came from
42:51 - a couple of things
42:52 - so the technical technological
42:54 - inefficiency
42:56 - was first of all within each individual
42:59 - minor
43:01 - 99 of the time is spent
43:04 - doing something completely unrelated to
43:06 - the transaction validation
43:08 - you got a about less than one percent
43:10 - validating transactions
43:12 - and then 99 percent of time is just
43:13 - spent doing this puzzle
43:15 - so if we could cut out the puzzle that
43:16 - would be great another thing
43:18 - is the network inefficiency where in
43:22 - the bitcoin network you essentially have
43:24 - these miners all around the world trying
43:26 - to mine a block because when you mine it
43:27 - you get that bitcoin reward
43:30 - now whenever one miner solves the puzzle
43:33 - what happens is they say yo these uh
43:36 - transactions are valid
43:37 - in everyone else's work just get tossed
43:40 - out the window
43:41 - so with one minor there's just so much
43:45 - little work that actually mattered
43:46 - and everything else was just wasted more
43:49 - or less
43:50 - now the reason back to this question
43:53 - is why the new boston network is so fast
43:57 - is in the bitcoin blockchain what they
43:59 - do
44:00 - is every single block every single um
44:03 - puzzle that they solve they essentially
44:06 - say
44:07 - look i solved it and then everyone else
44:09 - agrees on that
44:10 - now whenever you solve block after
44:12 - blockout for block you have to agree
44:14 - as a network on black block after block
44:16 - after block
44:17 - and there are transactions happening
44:19 - very quickly and it takes a long time
44:22 - now if instead of having all these
44:25 - miners
44:26 - and they validate these blocks and then
44:28 - you have to decide on each of these
44:31 - is this one legit is this one legit is
44:32 - this the one legit if you take that
44:34 - consensus
44:35 - and move it down a layer where you say
44:38 - we don't have to agree on every single
44:40 - block instead
44:42 - let's just go ahead and agree on the
44:44 - minor
44:45 - that we want to choose that we trust the
44:47 - most to validate these blocks
44:49 - because we're essentially taking all
44:51 - that uh waste that happened before
44:53 - and removing it to the last second where
44:56 - if that network in the bitcoin
44:58 - uh if that decision in the bitcoin
45:01 - network that consensus
45:03 - was reached on the individual block then
45:05 - we know a network of computers can reach
45:07 - a consensus about something
45:08 - now instead of reaching about the
45:10 - individual block why not reach it
45:12 - on the node and then we can say this
45:15 - node is the one
45:16 - that we agree that we reach a consensus
45:18 - on is a node that we trust
45:20 - now we can essentially just send all
45:23 - transactions to them
45:25 - and they can validate it as fast as they
45:28 - can
45:28 - so as soon as they come in there's no
45:30 - need to wait for anything else so on and
45:31 - so
45:32 - forth and for these other
45:35 - miners they essentially turn into uh
45:37 - validators
45:38 - where they aren't just like peaceing out
45:40 - saying you know you don't need me
45:41 - anymore they're doing a couple key
45:43 - things
45:43 - they are backing up the primary
45:46 - validator in case it over goes down
45:48 - and they are also double checking their
45:51 - homework essentially
45:52 - so they just don't blindly accept this
45:54 - they're revalidating each and every
45:56 - single one
45:57 - so by doing that we essentially
46:00 - eliminate
46:01 - the need for a puzzle and we eliminate
46:03 - the network inefficiency as well
46:06 - because well for all of those reasons
46:09 - so that is uh another
46:13 - man got a lot of these comments so that
46:15 - is essentially why we are able to uh
46:17 - speed up
46:18 - the um block times so quick because we
46:22 - don't have to agree on every
46:23 - block time we have to agree on a trusted
46:26 - minor
46:26 - and then they are going to be the ones
46:28 - validating all of these transactions
46:30 - and if they ever try to lie or cheat or
46:32 - steal or anything
46:34 - you have all of these confirmation
46:35 - validators checking them and they are
46:37 - essentially going to broadcast the
46:39 - moment they try to
46:40 - you know tweak anything by one little
46:42 - bite
46:44 - so it just um leads to a
46:47 - a very interesting and efficient
46:49 - architecture
46:51 - okay let's uh that was way too long i
46:54 - got to speed these up
46:57 - uh let's see how to avoid burnout
47:00 - of learning so many things um
47:06 - yeah i think that kind of comes down to
47:10 - you aren't you don't get burnt out by
47:13 - learning things that you enjoy to learn
47:15 - you kind of get burned out by doing
47:16 - things that you have to do
47:18 - so a lot of burnout happens because of
47:22 - the environment rather than
47:24 - individual topic what about
47:27 - database i think i missed the earlier
47:30 - question there
47:35 - views on ethical hacking
47:38 - uh ethical hacking is yeah it's uh
47:42 - like white hat pen testing just a
47:45 - different area of
47:46 - security did you write a
47:49 - 10k reader
47:53 - all right what do you say about aws and
47:56 - cloud computing should i
47:57 - go for network automation i am a network
48:00 - admin uh yeah it seems to be um where
48:04 - the world is shifting aws cloud
48:05 - computing
48:06 - is not going anywhere anytime soon
48:11 - okay let's see let's see let's see
48:18 - man
48:21 - stream is just me trying to read through
48:23 - questions
48:24 - are you a freelancer or what i am not a
48:27 - freelancer
48:29 - super chat question question i saw super
48:32 - chat on youtube but i'm i'm
48:34 - actually not sure what it is
48:37 - okay wow way way late on this
48:41 - um
48:47 - decentralization yes yes
48:52 - never knew how you look like
48:56 - this is it
49:02 - where did you learn these programming
49:03 - languages from
49:05 - you look so pretty cool uh-huh why thank
49:07 - you
49:08 - and um yeah most of them
49:12 - most times when i was learning
49:15 - programming languages
49:16 - so i used to just uh buy the top rated
49:19 - book off
49:20 - amazon and uh sometimes i would just
49:23 - like buy two or three cents like they
49:26 - only show you a little preview
49:27 - and back then uh whenever i was first
49:30 - starting out ebooks or kindles weren't
49:32 - that prevalent
49:33 - so just um yeah just going through books
49:37 - and
49:38 - and studying and now what i like to do
49:40 - is i like to watch uh
49:42 - video courses stephen grider is probably
49:45 - my favorite uh
49:46 - instructor i love the way he teaches
49:49 - and any course that he teaches i would
49:51 - uh highly recommend
49:53 - okay see
49:59 - superchats are where megaballer
50:01 - millionaire youtube's get donations from
50:03 - viewers very cool millionaires
50:07 - this is interesting where mega baller
50:09 - millionaire youtubers get donations from
50:11 - viewers
50:12 - it sounds like those are the last people
50:14 - that would need donations
50:16 - but um yeah sounds interesting
50:24 - nonetheless
50:26 - blockchain what if the trusted minor
50:27 - gets corrupted or it goes rogue
50:30 - what can you do sorry for spamming the
50:32 - question no it's a good one
50:33 - because it definitely uh can happen
50:37 - the primary validator is one that is a
50:39 - single source of truth in validating all
50:41 - transactions in the network
50:42 - for optimization reasons primarily now
50:45 - the moment that they try to
50:47 - cheat and uh the most likely thing they
50:50 - can
50:51 - try to mess with the network a bunch of
50:52 - different ways but the most
50:54 - likely reason that they would cheat
50:56 - their incentive is just
50:57 - adding additional money to their own
50:59 - account so
51:00 - instead of me paying you 50 coins they
51:03 - would either try to pay themselves 50
51:05 - coins
51:06 - so when that happens uh through the use
51:09 - of digital signatures all of the other
51:11 - confirmation validators
51:13 - will notice that it is a invalid
51:15 - transaction
51:17 - and they won't accept that transaction
51:18 - onto their blockchain
51:20 - because all the confirmation validators
51:22 - are continuously trying
51:24 - essentially to um sync to the block
51:27 - or the primary validator of blockchain
51:29 - so essentially when this happens
51:32 - the confirmation validators will reject
51:34 - the primary validator
51:35 - the primary validator will be booted
51:38 - more or less from the network
51:39 - and all these confirmation validators
51:42 - will inform the banks that the primary
51:44 - validator was cheating
51:46 - and through the it's a separate process
51:49 - but essentially
51:50 - the banks move on to the next most
51:52 - trusted confirmation validator
51:55 - now another cool thing is that
51:58 - this process would normally take a long
52:00 - time where
52:01 - uh this primary validators kind of got
52:05 - caught cheating and then every other
52:06 - node in the network had to resync okay
52:08 - what do we do now what do we do now
52:09 - who's the most
52:10 - next trust in but the cool thing about
52:12 - this is that
52:15 - this decision is already in place before
52:18 - that happens
52:19 - so through trust banks are already
52:22 - deciding if the primary validator ever
52:24 - goes offline or is caught cheating so on
52:26 - and so forth
52:27 - they already know what confirmation
52:29 - validator to move to next
52:31 - so that is why even in that process
52:34 - the transition times and the resync of
52:36 - the network happens very quickly
52:39 - okay the even docker bro yes docker
52:42 - tutorials coming
52:45 - right soon let's see
52:50 - this this okay
52:53 - so how can we get coins so coins
52:56 - are earned through contributing to the
52:59 - project
53:00 - so that is where i felt the incentive
53:03 - should be
53:04 - where in different networks where it's
53:06 - mining the incentive comes from
53:09 - building the fastest miner and here
53:12 - the incentive in the value is
53:13 - essentially what you put into it
53:15 - so the entire idea is what you put into
53:18 - it is the value
53:18 - that you should get out and the coins
53:20 - are just a representation of how much
53:22 - you help the network
53:23 - and how much you help the community so
53:25 - you get coins through different things
53:27 - working on projects like if you want to
53:29 - work on a game or
53:30 - analytics tool or anything that
53:32 - integrates with the network
53:34 - you can earn that through project
53:35 - proposals and another thing is you can
53:38 - just work as
53:38 - a weekly contributor and these are
53:41 - things like the front end team the back
53:42 - end team
53:43 - uh seo marketing so on and so forth
53:47 - design
53:48 - uh those types and lastly just
53:51 - completing a one-time task so if you
53:54 - don't want to help out
53:55 - every week and you just want to fix some
53:57 - bugs or make some optimizations
53:59 - then if you go to the website look at
54:00 - the tasks then there are smaller
54:02 - one-time tasks that you can do
54:05 - okay alright
54:11 - client so what clients do you have what
54:13 - operating systems you can run on
54:14 - so our main client is the account
54:16 - manager you can download it from the new
54:18 - boston.com
54:20 - and with that it was built using
54:22 - electron
54:23 - so it works on linux windows and
54:26 - mac os
54:37 - so you can buy up a bunch of coins
54:41 - and control the network so i
54:44 - so this network is not controlled by a
54:47 - proof of stake
54:47 - at all so the amount of money or coins
54:51 - that you have uh doesn't have any
54:54 - influence
55:00 - okay how old am i i think i'm
55:04 - 33 34.
55:09 - this was actually the hardest question
55:13 - oh wow okay this is uh
55:16 - okay bucky meant suffer engineering or
55:19 - cs
55:21 - uh so that's up to you it's uh
55:24 - what you're more interested in gekko
55:27 - question mark
55:31 - yeah coin gecko is cool there might have
55:34 - been a
55:34 - earlier question but okay
55:37 - [Music]
55:39 - okay uh the value basis makes sense what
55:41 - about speculators that just
55:43 - want to buy and sell at higher
55:46 - prices so yes the
55:49 - okay so the value
55:53 - this is another thing where the value of
55:55 - the coin is a
55:56 - difficult concept to explain because
56:00 - a lot of people don't think about uh
56:02 - value of currency in
56:06 - really at all before uh bitcoin they
56:09 - were born into a system where
56:11 - uh currency already existed and with
56:13 - bitcoin what it showed is
56:15 - uh currency doesn't have to be that way
56:17 - the value can come from
56:19 - what you build it into so even with that
56:22 - there are different types of value
56:23 - there are social value their monetary
56:26 - value which i'm sure that you are
56:27 - referring to
56:28 - in the monetary value of this is first
56:31 - going to be determined
56:32 - whenever we start selling goods and
56:34 - services so we're going to start selling
56:37 - uh stickers and t-shirts the new boston
56:40 - on the website in the marketplace
56:41 - whenever that rolls out
56:42 - and then later they're going to go to
56:45 - decentralized exchanges
56:47 - and these decentralized exchanges
56:50 - uh contributors or whoever has coins are
56:53 - going to be able to sell them for
56:55 - other types of currency bitcoin ethereum
56:57 - so on and so forth
56:58 - and the exact value of that we don't
57:00 - know we won't know
57:01 - until the moment where those coins are
57:04 - placed for sale
57:05 - and an agreement is made for one person
57:08 - to exchange their currency
57:09 - for our coins stephen grider where is
57:13 - his courses so he is on
57:14 - udemy i believe uh that's where i get
57:19 - his courses i'm actually i'm actually
57:22 - not sure if he is on
57:23 - youtube or not if so that would be cool
57:25 - but yeah check them out on udemy
57:27 - makes awesome courses and they're uh
57:29 - very in-depth as well
57:30 - [Music]
57:33 - okay what do you think of the future of
57:36 - this crypto
57:37 - i have very uh okay
57:40 - don't uh get everyone's expectations up
57:43 - too high
57:44 - but i am liking
57:47 - what i am seeing a lot we still have um
57:50 - a couple we still have a long way to go
57:53 - but so far
57:54 - things are looking very good and i just
57:56 - see this comment
57:57 - give cat bagel all right
58:00 - [Music]
58:06 - rust as well and
58:09 - okay so i like and rust uh what about
58:13 - sqlite database
58:14 - uh yeah sqlite is pretty cool in memory
58:17 - it's nice to uh just share databases
58:19 - it's really simple for getting started
58:22 - especially locally on like a django
58:24 - project before you port over to
58:27 - postgres or anything like that but uh
58:29 - yeah i'm a fan of it
58:30 - it's probably not a fan in a production
58:32 - setting
58:35 - are you guys using solidity we are not
58:37 - using solidity uh this is
58:39 - not um erc20 compatible this is
58:43 - it's actually a complete rewrite of the
58:47 - blockchain from the ground up however
58:49 - later on whenever we reach out to
58:52 - or get on decentralized exchanges then
58:54 - we will most likely be wrapping it in
58:56 - the erc20 coin
58:58 - and getting on that way
59:03 - what is my rating in chess so i actually
59:05 - used to be
59:06 - really into chess um
59:10 - i can't remember what my rating was i
59:13 - want to say
59:15 - i want to say like uh 1600 1700
59:20 - but uh yeah and then so i was actually
59:24 - climbing climbing and i took chess
59:25 - lessons i love my chess instructor i
59:27 - love chess
59:28 - but after a while i got busy with
59:30 - working some other things and then i
59:32 - want
59:32 - went into a play a little bit later and
59:36 - my rating dipped way down so it's one of
59:37 - those things where if you aren't doing
59:39 - it frequently at least in my experience
59:42 - that uh some of these comments that uh i
59:45 - kind of lost it but
59:46 - i still love chess a lot
59:51 - [Music]
59:54 - all right trying to get an entry-level
59:56 - job programming
59:57 - i learned this and this what other
59:59 - skills and tools
60:01 - must i master i feel stuck so this
60:04 - really depends on
60:06 - what specific language you're trying to
60:08 - get in and
60:10 - i would stick with like um
60:13 - there's no need to learn java and c plus
60:16 - typically you usually stick with uh one
60:19 - or the other kind of like um
60:20 - well i guess it's a little bit different
60:22 - for web development because with
60:24 - the web development you typically need a
60:26 - stack unless they're looking for like
60:28 - strictly back end or front end
60:29 - but it's tough to say because depending
60:33 - on the company that you're trying to
60:34 - apply for
60:35 - in the position um it really depends on
60:39 - what they are looking for but in general
60:42 - i will say that your best bet
60:43 - is to go deep into one language because
60:48 - if you are like an expert in one
60:49 - language you can almost always find a
60:51 - job
60:52 - rather than having a shallow
60:55 - bit of knowledge in a lot of different
60:57 - ones
61:00 - isn't proof of stake arguably better for
61:02 - day-to-day use than
61:04 - proof of work so i would say from
61:07 - day-to-day transactions it definitely
61:08 - makes the network faster
61:11 - uh the concept behind proof of stake
61:13 - where
61:14 - you're essentially rewarding people with
61:16 - more money
61:17 - uh versus proof of work where you're
61:20 - rewarding people for
61:22 - solving puzzles faster not so
61:26 - as far as transaction speed then proof
61:28 - of stake is definitely the way to go
61:36 - this this yeah okay
61:40 - how many youtube channels did i follow
61:44 - uh don't know
61:47 - 100 maybe i followed them uh over time
61:57 - all right so what incentive would
61:59 - someone have
62:00 - in trading their bitcoin for the coins
62:02 - is there an intrinsic value
62:04 - so i guess um the value
62:08 - of each of these it's essentially
62:11 - similar to um
62:12 - bitcoin where the value of that was
62:16 - nothing in the beginning and that's why
62:18 - people pay like millions of bitcoins for
62:19 - pizza or they're just giving them away
62:21 - for free whatever
62:22 - the value of these cryptocurrencies it
62:25 - only comes from the value that you
62:27 - you give it or the value that you build
62:29 - it's the value of the network
62:30 - and the value of currency overall
62:33 - doesn't have any
62:35 - inherent value i mean of course uh gold
62:37 - coins in way back then
62:39 - it's a little bit different but nowadays
62:42 - there's
62:42 - nothing inherently valuable about a
62:45 - dollar bill with
62:47 - a president's head printed on it the
62:49 - only value of currency
62:51 - is for the goods and services that you
62:53 - can exchange for it
62:54 - you can take a dollar bill and you can
62:56 - buy a candy bar or you can hire someone
62:58 - to
62:58 - mow your lawn or something but um the
63:01 - the only real value of currency is what
63:04 - you can exchange it for
63:05 - that has tangible value goods and
63:07 - services
63:10 - uh learn programming say watch my
63:13 - channel
63:15 - react to native
63:20 - all right favorite programming language
63:21 - i would have to go with um
63:26 - i'd have to go with python just because
63:29 - it's well i'm biased
63:31 - it's just my own personal opinion that
63:32 - i'm most familiar with it
63:35 - all right all right all right all right
63:37 - uh let's see
63:40 - what do i think about machine learning
63:43 - um yeah it seems uh useful
63:47 - i always felt like i was unclear on the
63:50 - difference between machine learning and
63:52 - then statistics
63:53 - in like a forward loop essentially even
63:56 - though that's
63:57 - a very over simplification but um
64:01 - yeah lots of math involved in machine
64:03 - learning
64:05 - is my sequel obsolete absolutely not
64:08 - and okay uh kyle had a question up here
64:13 - uh more centralization
64:18 - hmm asciis create more centralization
64:25 - ee that's interesting it's like a
64:28 - decentralized centralization i guess not
64:31 - a typical one
64:32 - but never thought about it like that
64:38 - still better still building racing carts
64:40 - i am not
64:43 - uh let's see
64:48 - okay
64:52 - message retracted that's interesting
64:56 - all right so it looks like i got to the
64:58 - bottom of these
64:59 - all right javascript or python which
65:02 - holds the future
65:04 - uh i think they're gonna be equally
65:07 - valuable
65:08 - i don't see either one of them dying
65:10 - down anywhere in the near future
65:12 - and there's still a lot of development
65:14 - going on with either they're getting
65:16 - better every year
65:17 - faster uh yeah so both of them
65:23 - in our university we're learning c
65:25 - programming language is it good for
65:26 - beginners
65:27 - um so this is interesting because what
65:31 - programming language is good for
65:33 - beginners
65:35 - so i would say that c definitely is not
65:37 - the most
65:38 - easiest one to learn however on the flip
65:41 - side of it
65:42 - you do learn a little bit more lower
65:45 - level
65:45 - in-depth programming concepts so in that
65:49 - way
65:49 - even though there's a bigger barrier to
65:51 - learning it
65:52 - it gives you almost like a more
65:56 - clear picture about programming overall
65:59 - but i guess that's a
66:00 - kind of general in computing where the
66:02 - more low level
66:03 - the more you understand about how like
66:05 - the uh bits move around
66:07 - but of course the closer you are
66:10 - the lower you are then uh not so much
66:13 - uh easy to get started
66:18 - decentralized artificial intelligence
66:21 - hmm
66:21 - now we're getting some good stuff
66:23 - decentralize artificial intelligence
66:25 - decentralize artificial intelligence
66:29 - so i i always thought this where um
66:33 - [Music]
66:34 - and this is an interesting concept as
66:36 - well where whenever you have a cell in
66:38 - your body
66:39 - like your stomach cell or your lung cell
66:41 - or whatever your lung cell
66:43 - has no concept of the lung overall
66:47 - it doesn't know okay i'm doing this i'm
66:49 - doing this so
66:50 - uh there there's this human outside who
66:52 - can like uh breathe or
66:54 - digest food a stomach cell is just like
66:56 - bloop
66:57 - whatever noise they make it's just doing
66:59 - its thing so it doesn't really
67:01 - understand the environment that it's in
67:03 - and even when you put those together
67:05 - your lung overall it doesn't have a
67:07 - brain but still continues to do these
67:09 - things
67:10 - these processes without any over without
67:13 - any understanding
67:14 - of the the body that it's in it's a lung
67:17 - and it just does what a lung does now
67:20 - with that in mind
67:21 - right now we have a lot of different ai
67:24 - and they are specific to certain tests
67:27 - uh
67:27 - image recognition uh making sure that
67:30 - you
67:31 - click uh what was that what was that
67:34 - a movie on netflix called social dilemma
67:38 - pretty much all that stuff with the ai
67:40 - but um
67:44 - whenever this ai starts connecting and
67:47 - starts
67:48 - learning from one another and i think
67:51 - that's going to be
67:53 - pretty interesting and aside from that
67:56 - the reason that i bring up the lung
67:59 - cells so on and so forth is
68:01 - it always felt to me like as human
68:04 - beings there was a drive
68:05 - that we didn't really understand even as
68:07 - kids we want to
68:09 - build things and we want to create
68:11 - things but what's our drive like
68:13 - when i was a kid i used to build these
68:15 - towers out of blocks and
68:16 - i knew in my head that they weren't
68:18 - going to last forever they're just going
68:19 - to be
68:19 - knocked down but still i wanted to build
68:21 - the biggest tower and now i wanted
68:24 - to build the fastest blockchain and do
68:26 - this and that
68:27 - but for all these things i'm doing all
68:30 - these things i'm building putting
68:31 - together figuring it out it's like why
68:34 - what's it
68:34 - what's it matter at the end whether we
68:36 - have a big tower
68:38 - a fast blockchain so on and so forth and
68:41 - it feels like
68:43 - what humans are doing is they're
68:44 - building something that they don't quite
68:46 - comprehend myself included
68:48 - but what i do see is that people are
68:49 - becoming more connected
68:52 - and they're becoming connected faster
68:55 - than ever
68:56 - and even though i
69:00 - i don't know the uh the end of this or
69:02 - the body
69:04 - it's um it's interesting to see
69:07 - how things are tying together with the
69:10 - technology that we're building
69:11 - and these different types of ai and how
69:15 - they do
69:15 - influence us overall now i don't want to
69:18 - get into another social dilemma
69:20 - uh so on and so forth but in terms of
69:23 - artificial consciousness
69:25 - and artificial intelligence
69:26 - decentralization
69:28 - it feels like uh overall we're moving
69:32 - very quickly in a certain direction
69:36 - and it will be very interesting to see
69:38 - what is going to happen in the future
69:41 - [Music]
69:44 - okay uh would you say privacy is
69:47 - important
69:48 - i think this is for me
69:51 - yes uh 1 000
70:00 - okay
70:05 - dynamics 365. actually
70:09 - am not familiar with that
70:15 - pretty interesting customer relationship
70:17 - management okay
70:19 - now i know about it pretty cool funny
70:21 - how ideas spread
70:22 - oh okay i missed a bunch of ones okay
70:28 - privacy
70:32 - uh bug bounty programs yeah i'm a big
70:35 - fan of bug bounty programs
70:42 - uh the pan renter how do you bridge the
70:44 - gap between theory and application i'm
70:46 - stuck
70:47 - knowing how to do things when i actually
70:51 - but not being able to actually do them
70:53 - pan
70:54 - or answer can you um let me see you
70:58 - can you give me a specific example
71:02 - this is an interesting question
71:05 - teach arduino
71:09 - that's interesting as well
71:12 - yes uh who is secret agent paul
71:15 - cool name uh
71:20 - teach arduino so um i'm actually i had a
71:23 - poll on twitter
71:24 - asking people what they want to learn in
71:25 - 2021 i have a couple different topics on
71:28 - the
71:28 - agenda but uh if you want to recommend
71:32 - arduino then yeah that would be
71:35 - definitely
71:36 - a possibility what are your view on
71:39 - blockchain technology i used to not be a
71:41 - fan of blockchain technology at all i
71:43 - didn't see the use in it
71:44 - but now i do see the use in it and i am
71:46 - a huge fan
71:49 - uh any experience in computer vision i
71:52 - do not
71:53 - in how should i answer this
71:57 - so
72:01 - i was never a huge fan of computer
72:03 - vision because in my mind
72:05 - there are some problems that
72:09 - a certain classification problems that
72:12 - computers are
72:13 - better at solving computers are much
72:16 - better at solving problems
72:17 - versus humans when there is one right
72:20 - answer when
72:21 - they need to calculate a spreadsheet for
72:23 - example
72:24 - uh computers are just gonna be way
72:27 - better than humans hands down no matter
72:29 - what
72:30 - however if you ask a baby
72:33 - or not a baby if you ask a toddler to
72:36 - draw a picture of a horse and then
72:37 - ask a programmer to write a program to
72:39 - draw a picture of a horse
72:41 - then it's a little bit different
72:44 - and the reason it's different or
72:47 - difficult for computers is because there
72:49 - is no
72:50 - one right answer of what is a horse
72:54 - someone could draw a pitcher with just a
72:56 - head someone could draw a picture of a
72:57 - horse jumping over someone could draw a
72:58 - black
72:59 - horse a brown horse and when you get
73:01 - into these classification of problems
73:03 - where
73:04 - there is not one right answer it becomes
73:07 - a difficult area for
73:08 - computers so that's why i like computer
73:12 - vision and image recognition
73:15 - i s like i see the benefit of it like
73:17 - you have photos of people and you want
73:19 - to be able to recognize them
73:20 - but that's why i was um not so drawn
73:24 - towards that
73:24 - because i i view technology as a way to
73:27 - extend the capability of humans
73:29 - we can't calculate these spreadsheets or
73:30 - total as fast as
73:32 - a computer can so let's use computing as
73:35 - a tool
73:36 - to allow this to reach that limit
73:38 - however when it comes to understanding
73:41 - more abstract concepts like um
73:44 - identifying is this picture um a good
73:47 - painting of a horse
73:49 - then some decisions i feel
73:53 - are better left in the hands of humans
73:56 - [Music]
73:57 - blockchain series 2021 so caleb curry is
74:00 - actually working on a blockchain
74:02 - tutorial for
74:04 - or a tutorial series for this have you
74:06 - ever heard of fast api
74:08 - uh yes so i am uh definitely taking
74:12 - i i never use it in a production
74:14 - environment but i
74:17 - these other questions all right so i
74:18 - never use fast api in that production
74:20 - environment but i looked into it
74:22 - recently i
74:23 - it looks very cool i want to take a
74:25 - deeper dive
74:27 - and that's something i may also
74:30 - put on the schedule
74:35 - favorite channel thank you very much
74:39 - videos help you a lot thank you very
74:41 - much as well
74:43 - and okay
74:50 - how do you think about using frameworks
74:52 - verse micro
74:54 - services so um
74:59 - we use microservices essentially
75:02 - so we use frameworks whenever we want to
75:04 - build a more complex
75:05 - application just because it gives you a
75:07 - nice pattern to use
75:08 - industry standards and also developers
75:11 - are just familiar with different types
75:13 - of frameworks
75:14 - microservices we typically use for
75:17 - processes that
75:20 - they aren't really uh that time
75:23 - sensitive or they're just longer running
75:25 - processes that kind of can be separated
75:27 - from your main application
75:29 - one example would be like um optimizing
75:32 - images
75:32 - whenever you upload images for a product
75:35 - or for
75:35 - profile so on and so forth you want that
75:38 - large image because you know
75:39 - people ever want to zoom in or whatever
75:42 - but you typically want a smaller
75:43 - thumbnail
75:45 - as well just because whenever you're
75:47 - loading a list of products for example
75:49 - you don't need that huge image just
75:51 - because it takes so much bandwidth
75:53 - so a microprocessor might be good in
75:55 - that
75:56 - where it's not really time sensitive you
75:58 - know maybe it slows it down a bit
76:00 - but um yeah
76:03 - just uh different use cases i suppose
76:06 - [Music]
76:09 - all right python in the future from ryan
76:13 - so this is uh interesting i don't know
76:17 - if you were here earlier on but i asked
76:19 - on the twitter poll
76:20 - what do you want to learn in 2021 and
76:22 - surprisingly people
76:24 - voted python is number one and
76:27 - surprising because
76:29 - i thought that they would be sick of
76:30 - learning python on my channel
76:32 - by now but um yeah apparently not
76:36 - why is c still popular so c is very
76:39 - performant
76:41 - which i assume is the reason it's so
76:43 - popular
76:44 - and also it's in a lot of uh different
76:46 - things today
76:48 - people you see in electronics low-level
76:50 - things
76:51 - but mostly performance reasons
76:55 - c is really the foundation for a lot of
76:57 - different programming languages
77:00 - bucky how to make a web page update by
77:03 - itself whenever there's a change in
77:05 - database so whenever you have a change
77:08 - in your uh data architecture
77:10 - you typically run something well i guess
77:13 - uh what i'm familiar with in my tech
77:15 - stack there's something called a
77:17 - migration where you essentially update
77:20 - your database and then uh after
77:24 - and then in parallel you update your
77:25 - servers and then
77:27 - after you update your front end but it's
77:29 - actually
77:30 - uh it's a well-known
77:34 - um challenge because what you're
77:36 - essentially trying to do whenever you
77:38 - want to update your database
77:39 - architecture
77:40 - is you don't want any downtime at all
77:43 - however in an alternative situation what
77:47 - you can do is you can take a snapshot or
77:48 - clone of your database
77:50 - and then you can change the structure of
77:52 - it and then you can essentially
77:55 - deploy your new network your back end
77:57 - and then your front end
77:59 - on this uh like temporary ghost network
78:01 - and then once
78:02 - your updates are all good to go then you
78:04 - could route your traffic over from your
78:06 - old network to your new network
78:08 - now the main challenge with that is that
78:11 - even though you can essentially take a
78:13 - snapshot of your entire architecture
78:15 - update everything while the users are
78:16 - still using your old one
78:18 - and then get everything ready and then
78:20 - switch
78:21 - the traffic over you still have an issue
78:24 - where at the time
78:25 - you took that snapshot and are rolling
78:28 - everything over
78:29 - then you essentially have people still
78:31 - updating data here
78:32 - you still have people like sending
78:34 - messages or adding products or whatever
78:36 - it is
78:37 - now in that time is uh
78:40 - these two databases can get out of sync
78:42 - so they have something
78:43 - for i always forget the color it's like
78:45 - red green or
78:46 - blue green deployment what's the name of
78:49 - it i feel silly even
78:54 - yeah i think it is blue green yeah blue
78:56 - green deployment
78:57 - where it's just different models of how
79:00 - you
79:01 - essentially solve that exact problem
79:04 - okay wow mr wow these are lots of
79:08 - messages coming on okay
79:11 - let's see put them in the future
79:18 - colin or flutter i am not falling for
79:21 - that trap that is uh
79:22 - gonna start a war in this
79:28 - make python add-on and blender
79:31 - so i probably will not be teaching
79:34 - anymore blender
79:35 - for a while unfortunately where you make
79:38 - other algorithms and data structures
79:40 - tutorials so
79:41 - someone requested this as well and i
79:43 - want to get your guys input
79:45 - so some people say uh they would like me
79:48 - to make algorithm and data structures
79:50 - tutorials
79:51 - other people say that there are already
79:53 - lots of youtube videos and content
79:55 - out there for it so they would prefer me
79:58 - to make something else but yeah uh since
80:02 - i got lots of people here right now what
80:03 - do you guys think
80:06 - any plans to do machine learning courses
80:10 - so nothing on the immediate agenda
80:12 - however 2021
80:14 - uh we're still figuring out exactly what
80:16 - type of content
80:17 - to produce and that appears to be a
80:21 - pretty big one
80:22 - so yeah i can see it slowly moving up
80:25 - on the on the schedule
80:30 - how do you have like what's this number
80:35 - how do you have 1 million 468 437
80:38 - different tutorial playlists
80:40 - did you teach yourself all that stuff uh
80:44 - i don't think i have quite that many but
80:46 - um yes
80:47 - i did teach myself that it's actually
80:50 - pretty enjoyable i like
80:52 - i like learning new things it's not it's
80:54 - not like uh
80:55 - learning something in school where you
80:57 - have to learn it it was uh
80:59 - i don't know it's enjoyable and that's
81:02 - another thing i'm
81:03 - very uh fortunate i can
81:06 - do what i enjoy in life i know not many
81:09 - people
81:10 - have that opportunity or they get stuck
81:12 - into a career or path in life that
81:15 - they're not really interested in or not
81:17 - really passionate about
81:18 - and i'm very fortunate for that
81:20 - opportunity
81:24 - all right mongodb that's another going
81:26 - on
81:27 - man a lot of stuff i want to teach
81:32 - privacy encryption as your proof
81:33 - knowledge tutorials would be
81:35 - cool kyle am i liking these ideas
81:41 - uh how to learn things fast
81:49 - i don't know uh to be honest i don't
81:51 - learn
81:52 - things faster than
81:56 - uh other people uh i i might even learn
81:59 - things slower
82:00 - i am just really obsessed with um
82:04 - learning things pretty uh deep
82:07 - and if there's one part of it i don't
82:09 - understand i'll just go deeper and
82:10 - deeper
82:11 - until i understand it but i would say
82:15 - like um if there were a bunch of people
82:17 - in a room
82:18 - and you gave us something brand new to
82:20 - learn
82:21 - and then you said okay in an hour or
82:24 - however long you think it takes to learn
82:26 - then do this test after
82:28 - i would probably be uh slower than the
82:32 - average person
82:33 - just that in that example um even though
82:35 - i might have been slower i would want to
82:37 - take the
82:38 - the content home with me and then just
82:40 - pour over it
82:41 - even when the test was over just to
82:44 - understand it and maybe that's not a
82:46 - good example because
82:48 - in that case i would just be learning
82:49 - something just for the sake of
82:50 - completing a test
82:52 - but when it comes to computing different
82:54 - technologies
82:56 - and seeing how these different
82:58 - technologies can be used to connect
83:00 - people
83:00 - and build awesome things then it's uh
83:04 - yeah it's not really learning it's just
83:06 - something i'm passionate about
83:08 - i want to figure out how things work all
83:11 - right web assembly
83:12 - okay yes weebas slow learner but the
83:16 - that's uh very short and
83:20 - yeah i feel the same way distributed
83:23 - computing
83:24 - i like that idea as well
83:28 - i actually have a let me see if it's
83:32 - here
83:35 - i'll show you guys a cool book
83:40 - so with distributed computing i would
83:42 - recommend this i actually think i took a
83:45 - it's another thing i posted a video on
83:48 - instagram
83:49 - and or not a video i posted a picture on
83:51 - instagram where i
83:52 - i put a post-it note and then a slice of
83:55 - cheese
83:56 - on this book and i said art and i don't
83:58 - even think people realized that it was
83:59 - cheese
84:00 - i think they just thought it was post-it
84:01 - notes so you know
84:03 - i was a little disappointed about that
84:05 - that no one saw my beautiful artwork
84:07 - but uh yeah point of the story
84:10 - is that this is a very good book for uh
84:13 - distributed systems
84:16 - all right bucky loves bacon definitely
84:18 - agree with that
84:19 - data science related technologies
84:25 - yeah it's a pretty big feel build your
84:29 - own cryptocurrency
84:30 - tutorials cyberpunk well you are in luck
84:33 - because we have a huge open source
84:35 - project gone
84:36 - to build a very innovative
84:39 - cryptocurrency
84:40 - that is going to belong to the new
84:42 - boston
84:43 - so i actually have a series
84:46 - uh digital currency tutorials that we're
84:49 - walking through
84:49 - everything and then also check out the
84:51 - github the new boston developers
84:53 - lots of different repos lots of activity
84:55 - on that as well
84:59 - do you have actual advice to self
85:01 - teaching programmers
85:03 - besides the whole stick with the routine
85:07 - so i would say that for self-teaching
85:11 - programmers that
85:12 - it's not a good idea to say i want to
85:15 - learn programming so i'm going to type
85:16 - in programming on amazon and then i'm
85:18 - just going to start reading through a
85:20 - book
85:20 - because with that there is no direction
85:24 - there is nothing to
85:27 - give what you're doing meaning and
85:31 - when you don't know where you're going
85:33 - you don't know where to go
85:35 - it's uh okay i got through this chapter
85:37 - should i go next chapter should i
85:38 - learn this other book so on and so forth
85:41 - now when it comes to
85:42 - um a more clear vision say i want to be
85:45 - a web developer
85:46 - well then things get a little bit easier
85:48 - then you can say okay
85:49 - this company that i want to look for or
85:51 - work for they use
85:52 - django and they use react so i
85:55 - am going to um learn django not
85:58 - for the sake of learning django and
86:00 - hoping that something good happens but
86:02 - i'm gonna learn it because there's a
86:04 - goal at the end and then i'm gonna learn
86:06 - react
86:06 - for this and learning in that sense
86:10 - it becomes more than just learning for
86:12 - the sake of learning
86:14 - you don't get bogged down by oh i have
86:16 - to read documentation or i have to get
86:17 - through this chapter
86:19 - the site in your vision is always on
86:22 - that final goal
86:23 - that final goal which is a lot more
86:26 - satisfying
86:27 - and it's a lot more clear when people
86:29 - learn that way
86:31 - [Music]
86:32 - okay lots of uh lots of the same
86:35 - comments
86:36 - kind of spamming oh
86:39 - okay let me go back up back up here hi
86:42 - bucky is a degree in cs
86:44 - worth it um
86:54 - is it worth it hmm
86:58 - it's different for everyone uh
87:01 - for myself it wasn't however
87:07 - for you it may be it's uh it depends on
87:12 - so it doesn't hurt i will say that uh
87:15 - it's not gonna hurt your chances
87:16 - applying somewhere if you say i got like
87:19 - a masters in this
87:20 - area of computing versus if you don't
87:23 - now i will say that
87:25 - some people learn better
87:29 - not in university some people need that
87:31 - pressure of your teacher
87:33 - or someone says look you need to
87:34 - complete this assignment uh
87:37 - you need to create this test you need to
87:39 - finish this degree so on and so forth
87:41 - but some people are just better
87:42 - independent learning some people are
87:43 - better reading books
87:45 - some people learn better watching
87:47 - tutorials so
87:48 - it's different for each person and
87:50 - depending on where you want to go
87:52 - in the path that you need to go to get
87:54 - there
87:55 - um i would say it's i know it's not the
87:58 - answer that a lot of people
88:00 - like to hear but without understanding
88:01 - your background your different
88:03 - methods where you learn best it's uh
88:05 - it's difficult to say
88:08 - all right please make tutorials on
88:10 - ethereum and blockchain
88:12 - okay you got it
88:16 - yes two of my uh newly favorite subject
88:20 - your mic looks like a toothbrush
88:24 - okay no uh no response nina i concur
88:28 - uh helping me all these years you are
88:31 - welcome for that
88:32 - could hurt you financial kyle
88:36 - another good point so yes a degree
88:40 - um
88:42 - that is a thing where a degree at least
88:45 - in the united states
88:47 - it costs a lot of money education costs
88:49 - a lot of money
88:51 - and another i hate saying like downsides
88:55 - to this but
88:56 - um when you go to a university and
88:59 - expect to get a degree
89:00 - after four years what that means is that
89:04 - alternatively if you were to go to a
89:06 - boot camp or self-learn
89:08 - in maybe not have as much knowledge but
89:11 - you would
89:11 - begin uh entering the workforce earlier
89:15 - then you would essentially trade those
89:17 - four years for like three years worth of
89:19 - experience
89:20 - so uh and i will say from
89:24 - uh just everyone that we have hired in
89:26 - the past experienced
89:29 - i would almost always take someone with
89:31 - a one-year boot camp and three years of
89:33 - developer experience versus four years
89:36 - of university but i don't know
89:38 - again that depends on the type of
89:40 - company
89:42 - okay wow every time i scroll down i feel
89:44 - like i miss all these
89:46 - uh
89:51 - any plans to collab
89:54 - yeah a couple of different collabs in
89:56 - the works
90:00 - thank you a lot of uh very
90:04 - okay uh lots of um
90:07 - people saying thank you for helping out
90:09 - which i appreciate very much and then
90:12 - another slew of comments about how my
90:15 - microphone looks like a toothbrush
90:16 - which it's interesting uh
90:20 - go to canada not a bad idea i don't know
90:22 - if they would like us americans at this
90:24 - point in time
90:25 - but
90:29 - design patterns and the way you explain
90:30 - it would be awesome yeah
90:33 - i like that as well i also like talking
90:35 - about that stuff um
90:37 - it's a little more interesting than uh
90:40 - teaching programming
90:41 - to show how the different parts of
90:44 - language connect and more of a system
90:45 - level
90:46 - another note i want to show you guys let
90:48 - me see
90:48 - [Music]
90:52 - it wasn't it was actually a book it's
90:54 - called something
90:55 - maybe one of you guys knows it like um
90:57 - thinking in systems
90:58 - or something but it's not strictly a
91:02 - programming uh book but it's more of a
91:05 - book on
91:06 - like uh systems overall of how things
91:09 - connected how information flows from one
91:11 - part to another
91:12 - and it's useful for like uh building any
91:14 - type of system whether you're making a
91:16 - complex
91:17 - application uh an organization and you
91:20 - just have to
91:20 - have a different teams how does
91:22 - information flow between them
91:24 - it's just um i don't know i'm just
91:26 - really interested in
91:28 - system development for whatever reason
91:31 - api tutorials please
91:32 - another very good recommendation
91:38 - and oh
91:41 - need more mods for chat can i have mods
91:43 - in here
91:44 - oh manage moderators very cool
91:50 - okay how does this work and who's going
91:52 - to be a moderator
91:59 - uh let's see competition thinking
92:05 - protocol buffer grpc any plans yes this
92:08 - seems to be an
92:09 - ever growing area and especially with uh
92:12 - cryptocurrency blockchain
92:15 - yeah i do like that idea as well
92:21 - oh react.js
92:26 - slow mode please for chats is that the
92:28 - thing are you just making that up
92:30 - slow mode for chats
92:34 - i honestly don't know if uh that's a
92:37 - thing or not or if you just made it up
92:38 - but uh
92:39 - yes that that would be useful
92:44 - okay what do we got here
92:51 - uh does it annoy you that technology and
92:53 - programming languages
92:54 - change so fast uh no i actually um
92:58 - i love it so even though it does seem
93:01 - like um
93:03 - especially with like javascript front
93:04 - end pro well you know what
93:06 - a lot of different areas now that i
93:08 - think about it like devops
93:10 - front-end development uh mobile
93:12 - development
93:13 - but i do like it because it isn't
93:16 - changing for the sake
93:17 - sake of changing it's changing for
93:20 - the better it's changing because we have
93:22 - better technologies or we can
93:24 - uh create things faster
93:27 - [Music]
93:30 - okay no slow mode
93:34 - hey guys bucky here random guy
93:38 - what a great username uh
93:41 - all right what the heck is going on
93:43 - bucky
93:44 - wait i'm here in no slow mode and then
93:47 - i'm here bucky there is a slow mop
93:49 - it's very confusing how to become a
93:52 - billionaire i would say
93:54 - uh investing in cryptocurrency
94:00 - do you see front end being automated
94:02 - soon uh
94:04 - front you mean front end how do you mean
94:07 - that
94:12 - continue with cli noted uh tutorials on
94:16 - github
94:16 - okay nice shirt bucky yes this is my uh
94:19 - stretched out
94:25 - stretch out what day is it saturday
94:27 - shirt
94:30 - what is the purpose of life i would say
94:33 - that
94:34 - the purpose of life is to collect
94:37 - memories with the people you love
94:39 - because those are the best memories that
94:41 - you can collect
94:48 - bro you're awesome happy to see you
94:50 - happy to see you too
94:53 - uh let's see what is cryptocurrency so
94:56 - cryptocurrency
94:57 - is a currency that exists only in
95:00 - digital form
95:03 - what is my favorite crypto well of
95:05 - course i'm a little biased because we
95:07 - are making our own crypto
95:09 - and of course it has to be the new
95:11 - boston coins uh my second
95:14 - so i wouldn't say i have a a favorite
95:16 - favorite i like um
95:19 - i like bitcoin for what it did for
95:21 - cryptocurrency overall
95:23 - and kind of uh
95:26 - everything that it stands for i like
95:28 - ethereum for its flexibility
95:30 - and how it pushed uh things even further
95:33 - i like monero
95:34 - because of the focus on privacy and
95:38 - yeah a lot of different cryptocurrencies
95:40 - i like and invest in for different
95:42 - reasons
95:45 - buckies uh do i still have that sensory
95:47 - deprivation thing unfortunately
95:49 - not i moved from my house in new york
95:52 - to pasadena california now and
95:56 - i did love that if i ever have a house
95:58 - again i'm definitely getting another one
96:00 - it was a lot of work to maintain i will
96:03 - say
96:04 - a lot more than like a pool or a hot tub
96:06 - and uh
96:07 - the thing i didn't like about it is if
96:10 - you ever want in on vacation or anything
96:12 - because there was so much salt in the
96:13 - water because uh it didn't keep you
96:15 - buoyant
96:16 - that it would like clog up the pipes so
96:18 - you needed to keep it running
96:20 - needed to keep it filtering and you just
96:22 - can't it felt a little bit scary to uh
96:25 - like put on an automated timer or
96:27 - anything because
96:30 - they aren't like the most stable systems
96:32 - and uh
96:33 - it would leak sometimes so you know i
96:35 - was afraid to
96:36 - leave it pumping when i wasn't there
96:38 - because i didn't want everything like
96:40 - blowing up all over all over my living
96:42 - room
96:46 - tron uh not
96:49 - a fan of tron is a cryptocurrency
96:55 - yes spam lots of spam going on
97:04 - all right hold on guys trying to sort
97:06 - through these but i got some spam
97:08 - comment
97:09 - can i buy the new boston somewhere so
97:11 - not right now
97:12 - uh we have plans on the roadmap and
97:15 - maybe i can show you guys this
97:18 - should let me talk to you guys through
97:19 - real quick
97:21 - i know some people are here interested
97:22 - in the uh digital currency that we're
97:24 - making and some people aren't so
97:26 - try to answer it quickly so on our
97:29 - roadmap we're having
97:30 - an authentication system built into the
97:32 - website and then we're gonna have user
97:34 - profiles and more social
97:36 - and then we're gonna have a marketplace
97:38 - where they're gonna be t-shirts
97:40 - and uh stickers and like hats and stuff
97:43 - for sale
97:44 - then after that we're gonna allow other
97:46 - people to add items to the marketplace
97:48 - like uh
97:49 - books maybe this elephant and uh those
97:51 - things behind
97:52 - just like uh books artwork uh bracelets
97:55 - whatever people want to sell kind of
97:57 - like ebay craigslist style
97:59 - and then we're gonna add the actual
98:01 - payment integration system in so you can
98:03 - add an item to your cart scan it with
98:05 - your phone or whatever app
98:07 - and then uh like let's say it's a
98:09 - t-shirt you can type in whatever
98:11 - information have it mailed to you
98:13 - and then after that we're going to be
98:14 - reaching out to other websites
98:16 - uh actually a couple already reached out
98:18 - that are interested in
98:20 - accepting coins and the first websites
98:23 - that we're going to hit
98:24 - is essentially uh ones that sell digital
98:27 - goods or
98:27 - downloadable goods like online courses
98:30 - or if they have graphics music whatever
98:33 - just because it's such a low-cost good
98:35 - to deliver and then they get coins
98:37 - and also in addition for coins they also
98:40 - get a community of developers
98:42 - and free marketing for their site and
98:45 - our community benefits because we now
98:47 - have something else that we can spend
98:49 - our coins with
98:50 - so that's going to happen slowly over
98:52 - time and also
98:54 - once our marketplace on the new
98:55 - boston.com is complete
98:57 - we are going to be uh not only reaching
98:59 - out to other websites but
99:00 - looking to get on an exchange as well so
99:03 - very exciting times ahead
99:07 - all right what is bitcoin bitcoin
99:10 - is the og cryptocurrency actually wasn't
99:13 - the first but it was the first
99:17 - i don't want to say successful since
99:19 - that means the other ones aren't
99:20 - successful but
99:22 - uh yeah one of the main
99:29 - i'm getting contracted here all right
99:33 - uh how can i okay to answer that
99:35 - question bitcoin is a cryptocurrency
99:38 - how can i buy ethereum without coinbase
99:40 - so there
99:41 - are so there used to be these um
99:45 - these sites you went to kind of like uh
99:47 - craigslist but
99:48 - you had to like meet someone a person
99:49 - and pay them cash i don't know if they
99:51 - still have those
99:52 - but um yeah there are lots of different
99:54 - exchanges aside from coinbase
99:57 - where uh you can buy ethereum and other
100:00 - cryptocurrencies for
100:02 - um well i don't want to say us dollar i
100:05 - don't know
100:05 - where you are but uh other currencies as
100:08 - well
100:11 - bitcoin is good but will not move
100:14 - anymore as a store of value
100:18 - because it's too slow
100:21 - yep uh i can so i i do think
100:24 - bitcoin does have lots of room to grow
100:27 - but
100:28 - it will most likely be a longer term
100:30 - store value more like a gold
100:32 - is right now rather than uh kind of like
100:36 - i don't feel it's going to be used in
100:38 - day-to-day transactions
100:47 - all right all right
100:50 - stop spamming guys yes
100:53 - all right
100:57 - uh let's see
101:01 - okay lots of uh a little bit of spam
101:03 - here that's all right
101:05 - okay bucky do you have any plans of
101:07 - starting on index fun
101:09 - or etf i do
101:13 - not unfortunately
101:18 - i'm in the valley near pasadena foo
101:21 - welcome to the h hole of ello
101:24 - oh yeah la's getting pretty rough right
101:26 - now i'm actually off
101:28 - i'm in uh pasadena near la and flying
101:31 - back to see my family in new york
101:33 - and pretty much going from like lax to
101:35 - new york airports and they're like the
101:37 - worst
101:38 - places in the country right now in the
101:39 - world in america
101:41 - which isn't doing too hot either and
101:44 - it's like
101:45 - it in america's spiking like crazier
101:48 - right now
101:48 - it's my great this it's not feeling like
101:51 - the best idea but
101:53 - i haven't seen my family in a very long
101:55 - time
101:59 - oh do you like tie dye
102:04 - i'm indifferent to die die all right
102:09 - uh how can cash be replaced with
102:11 - cryptocurrency
102:13 - uh yeah it's essentially uh
102:17 - when those shops when those stores
102:21 - start deciding to accept cryptocurrency
102:24 - and from technical point of view i don't
102:27 - think it will be anything that foreign
102:28 - to people
102:29 - because they really use cryptocurrency
102:32 - in a way
102:32 - uh even though like cash isn't used
102:36 - for the majority of transactions a lot
102:39 - of it is just
102:39 - digital credit card uh it's just numbers
102:41 - on a computer or
102:43 - on your bank account so really not that
102:46 - far off it's just the underlying method
102:49 - behind it i think will become
102:51 - quite different in a good way all right
102:54 - will the vlogs be back that
102:56 - is hmm that's a good question i was
102:58 - thinking about
102:59 - booting up that channel again but uh to
103:01 - be honest nothing really
103:03 - a vlog worthy to vlog about now uh just
103:06 - because
103:07 - vlogs would pretty much just be me
103:09 - sitting in my apartment
103:11 - and either working on digital currency
103:14 - network or making videos
103:16 - um probably just not the most
103:19 - interesting stuff since
103:20 - i can't really go outside now that we're
103:23 - on lockdown
103:24 - there's a question i just saw that was
103:26 - pretty interesting but i forgot what it
103:27 - was
103:33 - man these comments are coming fast okay
103:36 - okay
103:41 - oh do i believe in aliens okay
103:44 - now we're getting to the important
103:45 - questions do i believe in aliens
103:51 - hmm i'm gonna ask this for a delay since
103:55 - i know that you guys will be interested
103:57 - as well do you believe in aliens
103:59 - but now let's think about this so
104:06 - i i guess the uh the interesting thing
104:09 - about this
104:10 - is we're not exactly sure how life began
104:14 - we have
104:15 - uh different theories of course
104:18 - uh but we have different theories about
104:20 - everything
104:21 - so we do
104:26 - we do know that it's a very unique thing
104:29 - we do know that it's possible
104:32 - also i don't want to get into any uh
104:34 - religious debates
104:36 - either but um
104:45 - i see it it's a very um
104:49 - unique thing in a unique you need a very
104:51 - unique set of circumstances
104:54 - and a lot of it i'm sure happens by
104:57 - chance but
104:58 - i don't see anything scientifically that
105:02 - limits
105:03 - the fact that life can only be created
105:06 - on earth so with that i
105:09 - unfortunately i don't have any
105:12 - experience
105:12 - seeing an alien for myself um
105:16 - no direct evidence of that but i'm
105:18 - open-minded
105:19 - [Music]
105:24 - that was a good question by the way your
105:25 - heart getting into the good stuff now
105:28 - all right bucky on the plane don't use
105:31 - the bathroom
105:34 - okay i won't
105:41 - uh how am i funding this project so
105:44 - yes so there are funds being spent right
105:47 - now
105:48 - a couple contractors helping out with
105:49 - more specialized areas
105:51 - as well as hosting uh for the new boston
105:55 - uh so on and so forth and we need like
105:57 - to purchase
105:58 - um like wordpress themes and wordpress
106:01 - hosting
106:02 - and uh for the blog and just some like
106:05 - miscellaneous stuff right now i'm just
106:07 - funding it out of my
106:08 - uh personal funds
106:15 - flutter series coming in 2021
106:19 - is your mic toothbrush yes
106:23 - when did you start working on
106:24 - cryptocurrency and why
106:27 - started working on it uh
106:30 - at the beginning of this year because um
106:33 - i saw some optimizations for the bitcoin
106:36 - blockchain
106:36 - i saw it as a big barrier to adoption
106:39 - and
106:40 - i i wanted to solve
106:43 - the problems that no one else could
106:48 - and i knew that uh
106:51 - yeah if this thing got off the ground
106:53 - then the network
106:55 - that i had through the new boston and
106:56 - through this community
106:58 - that we would be able to make a very big
107:01 - positive impact on the world if things
107:04 - went well
107:05 - which they seem to be going very good
107:06 - right now
107:09 - all right duh okay
107:13 - i like eagles hearts question if you
107:15 - could fly or become invisible
107:17 - which one would you choose
107:22 - if i could fly i mean these are tough
107:26 - both would be great i mean
107:30 - you just can't pass up going invisible i
107:31 - mean animals fly
107:33 - birds fly planes fly but nothing could
107:35 - be invisible so
107:37 - that would be uh you know how can i pass
107:39 - that up
107:42 - okay let's see which is more button
107:46 - field when comparing cloud computing
107:48 - blockchain and
107:48 - big data whoo that is tough
107:52 - so i would rule out big data just
107:55 - because
107:56 - it was budding a while ago i see uh
108:00 - oh blockchain was budding a while ago
108:03 - too but blockchain
108:04 - has had a it's like a second life all of
108:06 - a sudden
108:08 - almost since the um yeah whenever this
108:11 - uh
108:12 - the virus hit in the lockdown began a
108:14 - lot of these things uh crash
108:16 - like or dipped uh cryptocurrency but
108:19 - then they came back
108:20 - very strong and a second bit of interest
108:23 - cloud computing
108:24 - uh i wouldn't even say that's budding i
108:26 - would say that is already butted
108:28 - and we are already in the bud does that
108:31 - make sense in the bud
108:32 - hey we're wrong with it all right uh
108:35 - story behind the new boston this is a
108:39 - pretty bad story where i just thought it
108:41 - sounded cool
108:42 - i didn't know whenever i created the
108:44 - youtube channel
108:45 - the new boston that it would turn into
108:47 - what it turned into
108:48 - if i didn't know that then i definitely
108:50 - would have pop a lot more thought into
108:52 - it
108:53 - but whenever i was just signed up for
108:55 - youtube i'm like what name sounds cool
108:58 - the new boston that sounds pretty cool
109:00 - so
109:02 - sorry to disappoint you on that
109:06 - build a tutorial on how consciousness
109:08 - works
109:09 - so cyberpunk this is a very
109:13 - this is uh interesting that you brought
109:15 - this up because
109:16 - i thought about this specific question
109:18 - for longer than
109:20 - uh i feel like a lot of other people
109:24 - have because
109:26 - i was wondering first to be able to
109:30 - define consciousness
109:31 - and then to be able to translate it into
109:34 - a computer you you get into a lot of um
109:39 - interesting questions like what is
109:41 - consciousness what is
109:42 - life what does it mean what is thinking
109:46 - um and i always go back to
109:50 - kind of uh babies when they're entering
109:53 - life for the first time
109:54 - oh they come out into a universe
109:59 - and they don't they're not familiar with
110:01 - anything they've never seen slights
110:02 - before
110:04 - never smelled never hurt sound and
110:07 - everything's new and they know how to do
110:09 - certain things
110:10 - uh they don't know how to do certain
110:12 - things and they learn a lot of things
110:14 - as well so part of it is
110:18 - what they are and what they are
110:20 - naturally inclined to do and the other
110:21 - part is their environment
110:23 - it's the universe around them in a way
110:26 - it's like um
110:28 - your combination of everything that's
110:30 - around you everything that you've ever
110:31 - ate everything that influenced you so on
110:33 - and so forth
110:34 - but consciousness is a very interesting
110:38 - subject and as far as computing goes
110:42 - which i'm sure
110:43 - a lot of you would be interested in is
110:47 - is it possible for a computer to have
110:50 - consciousness
110:50 - if not why not what makes humans so
110:54 - special
110:54 - that computers will never be able to do
110:57 - because
110:58 - if human consciousness can be broken
111:00 - down to
111:01 - um our brain which is just broken down
111:03 - to biology which can be broken on
111:06 - to chemistry which can be broken down in
111:08 - physics which can be broken down to math
111:10 - then if everything can be broken down to
111:12 - mathematics even consciousness then
111:14 - there's no reason why a computer can't
111:17 - be consciousness
111:18 - can't be conscious because we can
111:20 - program formulas into it
111:21 - maybe a little bit slower with the
111:23 - limitations of technology
111:25 - but
111:28 - to say that would say that you are uh
111:32 - you need a formula for a consciousness a
111:34 - mathematical formula
111:36 - and whether consciousness can be broken
111:39 - down to a formula
111:40 - is something we have yet to find out
111:45 - how do we become master programmers by
111:46 - what means it is only through tutorials
111:49 - of reading books
111:52 - how do we become that programmer that
111:53 - can program a lot of
111:55 - things probably not the answer you're
111:58 - looking for but um
112:00 - practice i would make little projects
112:03 - in one second getting thirsty
112:10 - how do we become master programmers so
112:12 - even that definition is uh
112:14 - it changes like uh got like a helicopter
112:18 - out
112:18 - outside my window so a master is
112:23 - masters in uh different people's eyes
112:25 - but i'll just say lots of practice
112:27 - uh build projects that you're interested
112:30 - in and you're passionate about
112:32 - and eventually you'll get there
112:35 - i like to know more about cryptocurrency
112:37 - and learn
112:39 - to earn
112:43 - okay lots of cryptocurrency on
112:47 - the channel 2021 and also if you want to
112:50 - learn more about cryptocurrency i highly
112:51 - recommend
112:52 - that you join our github since we are
112:55 - working as a community the new boston on
112:58 - which will be
112:59 - the greatest cryptocurrency of all time
113:02 - in my opinion
113:04 - all right let's see this thing outside
113:06 - can you hear that
113:07 - it's like a helicopter or something
113:09 - really annoying me
113:21 - can you be my spirit guide slash
113:22 - accountant
113:24 - hmm hmm
113:30 - yes
113:34 - holy there's a lot of spam okay uh
113:40 - do you know tequila timmy youtube
113:42 - channel i do not
113:46 - do you need a phd not sure
113:50 - with what
113:53 - when do you think we will reach
113:54 - singularity and what our economy will
113:56 - look like
113:57 - after singularity so this is also an
114:01 - interesting thing
114:01 - man uh eagleheart and cyberpunk are just
114:05 - killing it with the questions
114:09 - so that it depends on how you define
114:11 - singularity but
114:13 - what i do see i kind of mentioned this
114:16 - earlier
114:16 - is that we
114:19 - as human beings are
114:23 - we have a drive to build and innovate
114:25 - and create
114:26 - and it appears that things
114:29 - are that we're building something that
114:32 - we don't understand
114:34 - and we're building something big and
114:36 - what we're building
114:38 - even though we may not be able to
114:40 - explain in words what it is
114:41 - what's happening with technology is it's
114:43 - becoming more connected
114:45 - and it's connecting lots of people
114:48 - around the world and it's happening very
114:49 - quickly
114:50 - and innovation is accelerating what the
114:54 - end of this
114:54 - is all i do not know
114:58 - but it's a very
115:01 - interesting path that we are headed down
115:04 - especially with the uh re-emergence of
115:08 - ai
115:09 - and lots of different trends as well
115:13 - so when do i think we reach singularity
115:16 - i am not sure
115:17 - and what will our economy look like
115:20 - after singularity
115:23 - i'm not sure either but very different
115:25 - than what it looks like now
115:26 - singularity or not oh
115:30 - okay let's go back back okay uh coin
115:33 - am i making a coin or a token on the
115:35 - blockchain we're making a coin
115:37 - and then i'm getting old to ask this but
115:41 - how can i stop
115:42 - playing games and start coding instead
115:46 - so for this
115:49 - i would say that
115:54 - [Music]
115:57 - naturally people would do what they are
115:59 - most passionate about
116:01 - if you enjoy playing games versus uh
116:04 - more than you enjoy building things
116:06 - creating things creating software
116:08 - then it's probably not going to happen
116:10 - uh
116:12 - to start coding instead you need you
116:14 - need a reason or a purpose behind
116:16 - anything you do
116:17 - i like to build things because even when
116:20 - i was first starting out i like the idea
116:22 - that
116:22 - you could sit your computer and you can
116:25 - create something
116:27 - that can potentially connect people all
116:29 - around the world
116:31 - and even now i like it i like um just
116:34 - learning about new technologies
116:36 - new innovations i liked
116:39 - i like what you can do with
116:44 - knowledge and passion and then the
116:47 - community and the software that forms
116:49 - around it
116:50 - just something i'm very passionate about
116:52 - so
116:54 - how can i stop playing games and start
116:56 - coding instead
116:57 - if you're passionate about it then
116:59 - follow your heart
117:01 - favorite teacher or favorite programmer
117:03 - and
117:04 - favorite book so my favorite teacher um
117:07 - so aside from like my favorite teacher
117:09 - in school who was mr pulaski
117:12 - because in fifth grade we used to trade
117:14 - hockey cards
117:15 - and uh i think he also gave me like the
117:18 - good end of the trade he wasn't like
117:20 - ripping kids off so that was just fun
117:22 - but my favorite teacher online right now
117:24 - is uh stephen grider he teaches on udemy
117:27 - and he teaches i just love the way he
117:29 - teaches the way he communicates
117:31 - it's so uh in-depth and yeah
117:34 - so and what was the last one favorite
117:36 - book
117:38 - so my favorite programming book is a
117:40 - python cookbook just because it has lots
117:42 - of
117:43 - little neat tips and you don't have to
117:44 - like read it cover to cover you can kind
117:46 - of
117:46 - pick through it my favorite other book
117:49 - is uh
117:50 - oh the place is yogo by dr seuss
117:54 - um it's a lot of has some very
117:57 - it's like a book for kids but uh
118:01 - i don't know it just always resonated
118:03 - with me
118:05 - favorite teacher so that was the one
118:09 - hopping around okay what are your
118:12 - upcoming courses so
118:14 - i'm gonna finish the digital currency
118:15 - tutorials and then the account manager
118:17 - and then after that the main tutorials
118:20 - that you guys are looking for
118:22 - we are going to be rolling out with
118:23 - docker and aws
118:25 - and flutter and then after that
118:29 - we are essentially just going to go to
118:31 - the community and see what you guys want
118:32 - to see
118:35 - or listen to what you guys want to see
118:39 - what makes you motivated to do great
118:41 - things like the new boston
118:43 - everyday what keeps me motivated is
118:48 - the impact that it can have on the world
118:52 - so nothing i think um
118:55 - i think there's different types of
118:57 - incentive different types of motivation
118:59 - of course the main thing is uh financial
119:01 - motivation where
119:02 - i i have a job because i want income i
119:05 - want to live an apartment and i want to
119:06 - eat food
119:08 - um things i'm really passionate about
119:10 - where let's just pretend that everyone
119:12 - in the world got paid the same
119:13 - amount no matter what i would pretty
119:16 - much just be making uh
119:17 - youtube tutorials in teaching just
119:20 - because
119:20 - i love learning new things i like
119:23 - building things
119:24 - i like creating things that don't exist
119:28 - yet and solving problems that no one
119:30 - else has solved before
119:31 - and to be able to do it with the
119:32 - community that
119:34 - supports it and the bigger it gets the
119:37 - better it gets is just
119:39 - can't really ask for anything else
119:43 - favorite programming language in general
119:45 - i would say
119:46 - python it's hard to go uh go wrong with
119:49 - python
119:52 - and let's see
119:55 - developer dylan okay my cur
119:58 - career bucky thank you developer dylan
120:01 - glad i could help you out
120:09 - quadratic funding so this is another
120:12 - interesting concept so
120:16 - the thing about quadratic funding is
120:19 - that
120:20 - you are essentially attempting to
120:25 - it's a way that you are attempting to
120:27 - program the level of value
120:29 - and fairness into a uh
120:32 - cryptocurrency or digital economy
120:36 - the concept of value and fairness is
120:41 - i don't know if it's something that can
120:43 - be programmed into a formula
120:46 - i think it's uh an abstract concept and
120:48 - i think that
120:49 - the definition changes over time
120:53 - and it's different for each and every
120:54 - person so
120:56 - i think that quadratic funding is uh
120:58 - interesting because it solved a lot of
121:00 - the
121:01 - problems with uh fairness that a lot of
121:03 - people
121:04 - agree is you know unfair but
121:08 - i think that
121:12 - it's difficult to program these concepts
121:16 - of fairness
121:17 - of trust of value because
121:21 - even though we can see that these
121:22 - different algorithms exist
121:25 - uh it's almost hard to explain
121:28 - where and this is something else i'm
121:30 - noticing as well
121:31 - where people in a digital economy
121:35 - they have a lot of ideas of what is
121:37 - unfair
121:38 - or so on and so forth but then to go
121:41 - back and say
121:42 - well what is fair it's hard for them to
121:45 - answer
121:46 - because there is no one definition of
121:48 - what is fair what is trustworthy
121:50 - uh if they say where does the value come
121:53 - from and then to ask them
121:54 - how would you define value it becomes
121:57 - tricky it becomes difficult
121:59 - because there is no one answer so
122:03 - to take some of these ideas and
122:05 - programming into uh
122:06 - these different models or algorithms
122:09 - it's
122:12 - it's a different way of looking at it
122:14 - which is always good however
122:16 - i don't think it's the uh final solution
122:20 - probably shouldn't say that final
122:21 - solution i think that means something
122:22 - else
122:25 - is it possible to be anonymous on the
122:27 - internet it
122:28 - is possible to do a lot of things
122:32 - anonymously
122:34 - complete on anonymity
122:37 - is challenging
122:45 - try this background
122:50 - all right how long does it take to learn
122:53 - cryptocurrency
122:54 - you can learn the basics probably in a
122:56 - youtube video uh
122:57 - i don't know if anyone's ever gonna
123:00 - learn the
123:00 - complete uh everything there is to know
123:04 - about all cryptocurrencies since it's an
123:06 - ever growing field but um
123:10 - yeah basics in youtube video you can be
123:12 - pretty comfortable
123:13 - with it understanding the concepts in
123:15 - less than a week
123:16 - and then to dig down into any specific
123:20 - one
123:20 - you it takes a little bit longer
123:26 - okay let's see uh
123:31 - what is your say on go lane i like
123:33 - online actually
123:34 - um i had to port some of my applications
123:39 - over to going just because it is a lot
123:42 - more performant
123:43 - than python for example i think python
123:46 - is very good for
123:47 - um innovating and creating things
123:51 - quickly and even for a web application
123:52 - where you don't need to do a lot of
123:54 - heavy processing typically but um
123:59 - yeah just being able to
124:02 - buy i always want to make sure i don't
124:04 - miss any of these questions but i do
124:06 - like golang for
124:07 - a lot of different reasons pretty much
124:09 - all the ones that they promote on their
124:10 - website
124:16 - okay all program languages are a mess
124:18 - i'm working on my own
124:19 - i've had enough so much confusion and
124:21 - mess
124:23 - that's cool and a lot of the best
124:25 - program languages came from people who
124:27 - felt that same way
124:28 - where there isn't a good solution so
124:30 - they wanted to build
124:31 - a better one so yeah
124:35 - i'm a big fan of that as well what
124:37 - equipment do you use
124:38 - bucky uh so i use a pretty standard
124:42 - equipment this is a blue
124:44 - yeti mic i got a logic logistic webcam
124:48 - it's pretty simple
124:49 - i had to upgrade for my built-in one and
124:51 - then um
124:53 - yeah did you mean like a youtube
124:55 - appointment for recording
124:59 - cryptocurrencies are too unstable on
125:01 - price to use
125:02 - as a daily currency that is true it's a
125:06 - pretty uh volatile market right now
125:10 - probably not the best uh
125:14 - this early on to be like the global
125:16 - currency or anything
125:18 - but i feel like that'll stabilize over
125:20 - time as we've seen with bitcoin
125:22 - at the very beginning and then
125:25 - now it is more stable even though like
125:28 - uh
125:29 - jumps of 10 percent a day aren't a
125:32 - normal
125:34 - do you use vim i do not i've i've used
125:37 - it before
125:38 - but um then
125:41 - i don't i just like uh jet brains ides
125:45 - uh even though i know they have been
125:47 - plugged in so on and so forth but
125:50 - i don't want to seem like a i always
125:53 - feel this funny thing where um
125:55 - when people ask me about different
125:56 - software uh to give my answer it almost
125:59 - feels like in a way i'm like
126:00 - promoting them or something so
126:03 - jeopardians didn't pay me or anything
126:04 - but
126:05 - i mean i just really love their ides and
126:08 - for as complex as their ids and any are
126:12 - whenever they have a new release it's
126:14 - like majority of the time
126:16 - things just work so i don't know what
126:18 - their development process
126:19 - is but jet brains they got
126:23 - they got their stuff together tuna bacon
126:26 - cheese
126:26 - okay tbc wow the new boston coin tuned
126:30 - bacon cheese
126:31 - whoa all right when is flutter come in
126:34 - 2021
126:35 - what kind of knowledge can we look for
126:38 - about
126:38 - anonymous what resources can you uh
126:41 - advise me
126:43 - i actually left a post i think it was on
126:46 - reddit a while ago
126:48 - about uh the best thing that you can do
126:50 - to be anonymous
126:51 - um let's see let's just see how much i
126:54 - remember
126:55 - the first thing that you can do is well
126:58 - you need a device you need a device to
126:59 - connect with the internet
127:01 - and if you purchase that device using a
127:04 - credit card
127:04 - or using uh any type of means where they
127:08 - can track you
127:09 - even cash where okay there's a receipt
127:12 - for it but now a bunch of cameras
127:14 - pointing towards you
127:15 - then uh essentially then your identity
127:18 - is tied to it in one way or another
127:20 - especially with credit card or if you
127:21 - pay for it online
127:22 - then of course that device is always
127:24 - going to be tied to you so
127:26 - the best thing that you can do in that
127:27 - is probably get it at a flea market or
127:30 - get it from uh means where your identity
127:33 - is not tied to that device
127:35 - another thing is do not use windows for
127:38 - sure uh
127:42 - i don't know i would just stick with
127:44 - linux i'll say that and probably
127:46 - something like tails
127:47 - since it's an entire distribution built
127:50 - around privacy
127:51 - and then for that you essentially just
127:55 - need to go step by step
127:56 - of every bit along the network uh
128:00 - you want nothing tied to you as much as
128:03 - possible maybe use tor maybe use vpn
128:05 - so on and so forth but
128:10 - those are uh different means that you
128:12 - can use
128:18 - what stack would you choose in building
128:19 - your next big project so
128:22 - this would depend on what the project is
128:25 - for
128:26 - a web application i mean i i gotta rock
128:29 - with uh
128:33 - yeah it it also depends on the
128:36 - architecture if you want to distribute
128:38 - data
128:38 - uh micro service architecture uh is it a
128:41 - desktop application
128:43 - does it have heavy processing is it just
128:46 - a web application where you can
128:48 - just use django and scope scale
128:50 - horizontally so on and so forth
128:52 - but it it's um it's not a one
128:56 - programming language or one stack
128:58 - fits all solution it's more of what are
129:01 - you trying to achieve and then choosing
129:02 - the best
129:03 - technology to fit around that
129:07 - uh how do you compare react angular and
129:09 - view so
129:10 - i haven't used angular in a very long
129:12 - time i re
129:14 - view i know is lightweight react is i
129:19 - it's hard to find too many bad things
129:21 - about react especially with the growth
129:22 - the community
129:24 - um the popularity i
129:27 - of course i'm biased but come on how can
129:30 - you hate react
129:32 - okay let's see this
129:34 - [Music]
129:37 - uh what is your take on a lot of newbies
129:38 - learning python is their first language
129:40 - one of my friends
129:41 - learn it but he got stuck on easily
129:44 - because of simplicity yeah this was uh
129:47 - interesting as well because someone
129:48 - asked earlier
129:49 - about c and whether it was a good first
129:52 - language to learn
129:53 - so with python you aren't going to
129:55 - understand the concepts that you do with
129:57 - c
129:57 - with a pointers memory management with
130:00 - the low level things
130:01 - that you would typically learn but what
130:03 - it
130:05 - does provide especially for beginners is
130:07 - an easy entry into programming
130:09 - and they get to be familiar with
130:12 - programming and they don't get
130:13 - frustrated
130:14 - because of some of those more
130:15 - challenging concepts
130:17 - so i i would say it's a trade-off if
130:20 - they know that they want to understand
130:21 - the fundamentals of programming and how
130:24 - languages are built
130:24 - overall um i
130:28 - would recommend c but if they want to
130:33 - learn programming from a different
130:34 - perspective and maybe they don't care so
130:36 - much but they want to build great things
130:38 - and they want to
130:39 - build tools that they can use for their
130:42 - career
130:42 - later on then yeah python is fine
130:47 - [Music]
130:50 - okay let's see uh domains in the field
130:54 - of computer science have good pay and
130:55 - scope
130:56 - in the future so one of the things that
130:59 - has very good pay
131:00 - and i believe it had good pay for a
131:02 - while is um
131:03 - devops with network architecture cloud
131:06 - computing
131:07 - aws um learning about networking and
131:10 - devops
131:11 - is something especially focusing on
131:14 - cloud computing
131:15 - is something that is going to be
131:17 - increasing popularity
131:19 - and we're always going to need it and it
131:22 - is always one of the top paying career
131:25 - fields
131:26 - however what i would also suggest in
131:29 - this
131:30 - decision is you don't want to go
131:33 - into a career field strictly because it
131:36 - has high pay
131:37 - because even though it's gonna be great
131:40 - for a while a year or two
131:42 - you're gonna quickly find that you're in
131:45 - a position
131:46 - where you ended up in a career that you
131:49 - don't really enjoy
131:50 - and you're going to have to work for a
131:52 - very long time as most of us are
131:54 - before we reach retirement and given
131:57 - that such a large part of your life
132:00 - is going to be spent in the workplace
132:02 - you want to make sure that
132:06 - you don't need to like uh have it be
132:08 - your full passion but
132:09 - you need to or you should be
132:13 - in a job that makes you happy
132:15 - [Music]
132:18 - all right uh
132:23 - how do you become so good in so many
132:26 - languages
132:27 - uh i would say for any language it's
132:29 - just lots of
132:31 - studying if you're interested about it
132:33 - it helps a lot
132:34 - and i was genuinely interested about
132:36 - install m
132:38 - lots of different uh programming
132:40 - languages just because of what they can
132:42 - do
132:43 - so um
132:47 - yeah i think i think that's a big thing
132:48 - where if you're interested in something
132:50 - it it's a lot easier to become good at
132:53 - it because
132:55 - the motivation comes from yourself
132:58 - rather than external factors
133:02 - all right let's see machine learning in
133:05 - the future
133:06 - um yes this is a big thing people are
133:10 - requesting i didn't have it planned
133:12 - before this little you know uh
133:15 - live stream whatever you want to call it
133:17 - this turned out to be a very long test
133:19 - by the way
133:20 - but uh i am finding out now that a lot
133:22 - more people are interested in machine
133:24 - learning
133:24 - than i originally thought so that is
133:27 - moving up on the menu
133:30 - let's see spam okay a course on
133:34 - blockchain please
133:35 - come in soon toothbrush side of your
133:37 - headphones
133:39 - all right uh name tech i mentioned this
133:43 - but let me brief
133:44 - touch on it briefly what is the story
133:46 - behind tuna i started
133:48 - using tuna for variables as well as
133:50 - bacon
133:51 - not to be funny but to differ to allow
133:53 - beginner
133:54 - developers to differentiate between
133:56 - built-in keywords
133:58 - and their self-name variables since
134:00 - whenever i was learning programming
134:02 - i saw something like var num equals six
134:05 - and i
134:05 - it was hard for me to tell which was a
134:07 - built-in reserve keyword and then which
134:09 - was a variable name
134:11 - so that's when i started using uh tunein
134:13 - big and also it's kind of funny too so
134:17 - object tuna yeah that's what we're
134:19 - talking about
134:24 - let's see let's see okay these are
134:26 - moving pretty quick
134:27 - ah okay
134:32 - i find myself in a position where i
134:33 - can't do the practice because of the
134:35 - lack of thoughts about applications i
134:37 - can't think
134:38 - anything to practice uh
134:41 - so i believe you mean like um
134:44 - uh after you learn the concepts of a
134:46 - programming language it's hard to know
134:48 - where to go from there because
134:50 - uh it's just hard to come up with um
134:53 - ideas on
134:54 - things to create or maybe the ideas that
134:56 - you come up with are
134:57 - way too big like uh game development and
135:00 - of course
135:01 - if you're just learning the concepts
135:02 - it's hard to
135:04 - do game development
135:07 - so this is an interesting question um
135:12 - it's it's interesting because i kind of
135:14 - do things
135:15 - uh the inverse of that where it isn't so
135:18 - much i learn a certain
135:20 - concept or language and then later on
135:23 - um deciding what to build with it it's
135:26 - more so
135:27 - that i always have a vision
135:30 - or a project in mind and i know that
135:33 - just from just community of programmers
135:36 - that there are certain languages that i
135:38 - should learn to best create this
135:40 - so i would say that maybe that's a
135:42 - better avenue if you start with a
135:44 - project in mind
135:45 - and then learn technology in order to
135:48 - build that project
135:49 - it may give a little bit more clear
135:51 - direction uh motivation as well
135:54 - and just maybe overall so i'll try that
135:58 - holy moly okay webassembly spam coming
136:01 - on hot
136:04 - uh why do you go quiet for some time i
136:07 - would check out my hello world video
136:09 - it explains lots of that and let's see
136:12 - let's see
136:18 - uh did you try to restream for streaming
136:20 - so i was actually comparing a stream
136:22 - yard
136:23 - versus restream and caleb curry
136:26 - recommended streamyard so i just tried
136:28 - it i actually just uh
136:29 - set up my account and like bought the
136:32 - paper
136:32 - today seems to be pretty cool i did
136:35 - watch a review on
136:36 - restream vs stream yard and everything
136:39 - basically just said that it came down to
136:41 - preference and the uis look
136:44 - pretty similar so uh yeah
136:47 - now we're on streaming best mobile app
136:50 - framework
136:52 - [Music]
136:58 - this is a tough one as well i i don't
136:59 - know they're uh
137:01 - it seems to be uh kind of like
137:04 - reacting angular in view a lot of it
137:07 - honestly comes down to personal
137:12 - preference
137:14 - uh would you like elaborate on
137:16 - networking and cloud computing are there
137:18 - any topics you recommend to get started
137:20 - tcp uh writing your own server and php
137:23 - node
137:24 - so not so much writing your own server
137:25 - and php uh
137:27 - or node i would say start with the
137:30 - basics of
137:31 - networking as far as how do i p
137:34 - addresses work um in just the basics of
137:37 - overall network like
137:38 - uh difference between a router and a
137:41 - switch
137:42 - uh kind of more so
137:46 - the core networking fundamentals
137:49 - and then afterwards you can look into
137:51 - things like um
137:52 - aws and that seems to be a big one now
137:55 - and
137:56 - a lot of those have a pretty clear path
137:59 - for
137:59 - getting certified of a kind of a chain
138:02 - of certifications that you can go
138:03 - through
138:04 - and when you are applying for jobs
138:07 - certifications
138:08 - for cloud computing is a big thing so
138:11 - they'll tell you exactly through
138:12 - practice exams and guides
138:15 - what they are looking for and what you
138:16 - need to know to get those certifications
138:18 - but if you are actually looking for a
138:20 - job in cloud computing
138:22 - then i would
138:25 - essentially learn the basics and then go
138:27 - with aws certifications
138:29 - and that will get you to a really solid
138:31 - point
138:35 - uh let's see let's see let's see have
138:37 - you ever experienced burnout
138:39 - too much coding if it's possible to be
138:40 - burnt out
138:42 - of doing things which you like so
138:45 - uh there i did experience burnout before
138:49 - but it wasn't for it was because
138:53 - at work uh we were building software
138:56 - and it was software that i
139:00 - i wanted to create perfectly but
139:06 - it it like wasn't my idea or
139:09 - it was just like uh joining a company
139:10 - and creating software it wasn't
139:12 - something i was super passionate about
139:14 - as far as like uh the personal projects
139:17 - uh i wouldn't say i got burnt out it's
139:18 - just at the end of them
139:20 - like i made this application to predict
139:22 - uh what horses
139:23 - could win in horseradish racing for
139:26 - bedding
139:27 - uh that was pretty cool but i got to the
139:28 - end of it and then i saw that
139:30 - the uh the edge for the horse tracks
139:34 - like the casino basically was just way
139:36 - too high so
139:37 - i'm not burnt out for the projects that
139:41 - we work on is a community like for the
139:43 - open source project
139:45 - it's going to be very difficult to get
139:48 - burnt out
139:48 - just because you're not developing a
139:52 - project for like the sake of learning
139:54 - programming or anything even though a
139:55 - lot of people come and improve their
139:56 - skills on and so forth
139:58 - but it's goal
140:02 - at the end of it is a bigger meaning and
140:06 - that meaning is as long as the site is
140:10 - there it's
140:11 - never going to burn out
140:17 - so uh yeah i guess uh now that you got
140:19 - me thinking about it
140:20 - it's you can
140:23 - burn out in software development if you
140:25 - work on projects that
140:27 - you aren't really passionate about or
140:28 - don't really enjoy but
140:30 - when you have a project that you're
140:31 - really passionate about and something
140:33 - that you do enjoy
140:34 - it's almost like how can you get burned
140:37 - out by
140:38 - doing something you enjoy
140:41 - all right i am back from sleeping are
140:43 - you still streaming still streaming i
140:45 - was on stream for a couple hours that
140:46 - was a quick little nap
140:48 - how to start with self-driving cars from
140:51 - scratch wow
140:52 - okay uh i would start with my how to
140:54 - build a go-kart tutorial
140:57 - and then automate the crap out of it
141:01 - uh why collaboration with caleb and when
141:04 - you get to know him this man is teaching
141:06 - legend
141:07 - uh yeah caleb's awesome i just got to
141:10 - know him
141:10 - recently uh he reached out to me i
141:13 - joined this little
141:14 - discord community for youtubers and he
141:16 - was there and he just got talking
141:18 - and i don't know he is
141:21 - cool dude
141:25 - how do you learn something new
141:28 - uh i learn based on
141:33 - a bigger project that i'm trying to
141:35 - build and usually it's the
141:37 - technology that i know that i have to
141:38 - learn to build that project
141:41 - so uh it's essentially just part of
141:43 - figuring out how to build something
141:49 - all right all right what is your
141:52 - learning process this is a good one too
141:55 - i always i scroll down a little bit and
141:58 - then people leave ton of comment
141:59 - okay where'd you go where did you go
142:02 - where did you go question
142:03 - okay it looks like you're not gonna find
142:04 - that one again oh here we go
142:07 - sophisal drawl what is your learning
142:10 - process so
142:11 - my learning process now and as it was
142:14 - before is whenever i
142:15 - need to learn a new language or a new
142:17 - technology for the very first time
142:19 - first place i go is to amazon and i
142:23 - just look for the top rated books i look
142:25 - to make sure that they're
142:26 - recent if the technology itself is
142:28 - recent
142:30 - and then i get usually two or three of
142:33 - them
142:33 - just since i don't get to see the full
142:35 - preview and i do like
142:36 - ordering physical books still it's just
142:39 - uh a lot easier for
142:40 - me to read uh for some reason and then i
142:44 - just start going through it and i
142:45 - i have this thing actually
142:48 - i'll show you this little book stand
142:52 - that i can put my book in and have it
142:54 - right next to my computer
142:56 - and i just start going through page by
142:57 - page learning everything
143:00 - and if i can't find a really good book
143:04 - then what i like to do is uh go to udemy
143:06 - and see if they have any video courses
143:08 - as well as youtube for video courses or
143:11 - just different places online
143:13 - so through those means uh it's usually
143:18 - it usually gives me a pretty solid
143:19 - understanding and also recently what i
143:21 - like to do
143:22 - is go to udemyfirst and go through video
143:24 - course since it gives me
143:28 - since it gives me kind of a brief
143:30 - overview of the main concepts and then
143:32 - after that
143:32 - i would go to my book and get a little
143:35 - bit deeper dive into
143:36 - some of the concepts
143:39 - all right let's see
143:43 - winning on chad
143:48 - could you recommend any open source
143:50 - projects about beginners
143:52 - so yes uh all right hit the two
143:56 - i hate to keep bringing this up but um
143:58 - on
144:00 - so we have uh open source projects if
144:02 - you go to the new boston.com
144:04 - clam clown what if you go to the new
144:07 - boston.com and click on the little
144:09 - github link then we're building a
144:11 - digital currency
144:12 - and we are also very open to new
144:14 - developers
144:15 - so whatever your experience level
144:17 - whether you're brand new to programming
144:19 - and you just want to
144:20 - learn how to contribute to an open
144:21 - source project or if you
144:23 - are a senior developer engineer designer
144:26 - marketer seo uh we're building something
144:29 - that
144:29 - is in my mind going to be very big so
144:32 - uh yeah come on in we'll love to have
144:34 - you
144:38 - want to say thank you your videos help
144:39 - me out a lot in college well
144:41 - i am glad that they could help you
144:45 - and let's see
144:49 - okay someone submitting issues on the uh
144:52 - open source project
144:54 - right now how many programming languages
144:58 - do
144:58 - you know bucky so this is interesting
145:01 - because knowing a programming language
145:05 - is uh a little bit hard to define
145:08 - since uh there are programming languages
145:11 - that i typed like hello world before i
145:13 - wouldn't say i know those
145:14 - and even now being experienced as a
145:18 - like um developer uh knowing python on
145:21 - the back end
145:23 - it feels like it feels like the more i
145:26 - learn the more that i understand that i
145:28 - don't learn
145:29 - and even the developers of the python
145:31 - core team
145:32 - i would a lot of them feel like they're
145:34 - areas of the project that they don't
145:36 - know just because they
145:37 - only work on a certain subset at a time
145:39 - so
145:40 - it's uh difficult to answer
145:46 - yes thank you no need to spam i will
145:49 - read your questions
145:50 - however this spam is making it difficult
145:52 - to um
145:53 - kind of read all these different
145:57 - questions
146:02 - python web dev is any good yes i would
146:05 - say it is
146:06 - good crow academy i was inspired
146:10 - by your videos a lot years ago well
146:12 - thank you lots of new videos coming soon
146:16 - ai vs this is another one disaster
146:19 - master cool name by the way
146:20 - adverse blockchain what is which will be
146:24 - more in demand
146:28 - oh this is good i don't know what do you
146:31 - guys think
146:33 - both by the way are
146:36 - looking strong for the future
146:44 - yeah this one's thump me i guess uh i
146:47 - would say
146:48 - both
146:52 - i want to choose one but i can't i see
146:55 - both of them with a very bright
146:56 - future eagleheart says blockchain by far
147:00 - so go or rust
147:05 - man this is uh
147:08 - another tough one
147:10 - [Music]
147:13 - both of those are very good too
147:15 - [Music]
147:17 - watch your videos a lot in the past now
147:18 - i make 70k in a year creative dev
147:22 - sounding good uh do you have any
147:25 - tutorials regarding linux os
147:27 - for beginner yes i have uh intro to
147:29 - linux
147:30 - or maybe it's just called linux
147:31 - tutorials but uh if you type in the new
147:33 - boston linux then it'll pop up
147:37 - i like linux by the way
147:42 - ai seemingly has more options than
147:44 - blockchain ai could be integrated into
147:46 - almost
147:47 - anything
147:55 - interesting perspective
147:59 - do you have advice for getting started
148:00 - with the game modding
148:02 - this other question too uh for game
148:05 - modding i actually don't have to
148:06 - much experience with game modding
148:08 - believe it or not i'm not a big
148:09 - gamer myself which sounds weird since uh
148:14 - you know they're very
148:18 - big on programming and whatnot surviving
148:20 - the wilderness 3
148:21 - probably not that was
148:25 - maybe i think two is enough for that
148:31 - is ruby and aspect j dead i hate to say
148:34 - that any
148:36 - what technology would i consider that
148:38 - it's not that it's not to pick a
148:40 - technology
148:41 - that to say is dead um i don't know too
148:44 - much about aspect
148:46 - j uh ruby definitely not
148:53 - any video coming from machine learning
148:55 - complete project
148:57 - so machine learning is something that is
149:00 - okay it's definitely on the menu for
149:02 - 2021
149:04 - that's actually going to be a pretty fun
149:05 - series to make
149:09 - played played php is dead though
149:15 - [Music]
149:18 - don't hear too much buzz about php
149:21 - that's for sure
149:22 - nowadays dead is tricky to classify
149:25 - anything is that but
149:27 - yeah i probably wouldn't recommend going
149:28 - down php avenue
149:33 - python django i actually do have a
149:34 - python django series
149:39 - i actually uh now that you guys are
149:41 - talking about php what is the
149:43 - trend of php like you know they have
149:46 - those stack overflow uh you can pretty
149:47 - much see the trend of
149:49 - different technologies
149:55 - will you film tutorials about metasploit
149:58 - i think
149:58 - that i did actually
150:02 - yeah i think i have a series about
150:03 - metasploit
150:07 - every two interview for uh
150:10 - oh this is a good question ever took
150:13 - interview for a young dev what do you
150:14 - seek in a new dev
150:16 - so at uh my job i'm the director of
150:20 - engineering and have to hire a lot of
150:22 - people
150:23 - and there are times where
150:26 - people would come in and there would be
150:28 - experience developers
150:29 - and i'm working on a web application
150:32 - so there are experienced developers that
150:36 - are just familiar with different
150:38 - technologies or their attitude wasn't
150:40 - quite
150:41 - a right fit for the team and then there
150:43 - were younger developers that just got
150:45 - out of a boot camp
150:46 - or some that even learned on their own
150:49 - and they were really passionate about
150:51 - programming and they told me about all
150:53 - these side projects that they had
150:54 - going on on their own time and
150:58 - their attitude and the way that they
151:00 - approach
151:01 - learning and solving problems and the
151:04 - passion that they had
151:05 - is just uh it's a hands-down better fit
151:09 - than someone who's experienced and feels
151:11 - like not the best fit for the team
151:14 - so i would say for
151:17 - a young developer um
151:20 - if you're passionate about programming
151:23 - then
151:24 - apply for a job so this is another thing
151:27 - with developers
151:29 - with every developer out there you
151:30 - should be applying
151:32 - for jobs that are
151:35 - higher skill level than you think that
151:37 - you can get you should always be aiming
151:39 - higher than where you think
151:41 - because it's almost like
151:45 - the value of yourself as a software
151:48 - developer
151:48 - is what you teach the world that your
151:50 - value is
151:52 - so always aim higher apply for jobs
151:55 - higher than the position that you think
151:56 - you
151:57 - deserve and that would be
152:00 - my advice and even as a young developer
152:03 - um looking at your very first
152:07 - application it doesn't hurt to apply at
152:10 - places where you think you might be
152:11 - rejected
152:13 - the worst case scenario is that they can
152:16 - say
152:16 - no thanks and they say it politely and
152:18 - then you end up in the exact same
152:20 - situation as you were
152:21 - and nothing bad happened best case
152:23 - scenario is you get this job and you get
152:24 - to learn a bunch of cool stuff
152:27 - so yes it may be a little bit of
152:28 - pressure in the first uh
152:30 - week or two and you may have a bit more
152:32 - of a learning curve
152:33 - but that's what it's about pushing
152:35 - yourself and
152:37 - eamonn hunt why do you wear a hat while
152:41 - you're inside so i wear this hat because
152:44 - i have these headphones and you see how
152:46 - they're all like
152:48 - beat up inside so if i don't have this
152:51 - hat on
152:52 - specific specifically then these little
152:54 - flakes always get all over my ears and
152:56 - stuff
152:57 - so this is pretty much just uh an ear
152:59 - protector for these
153:01 - uh things that are flaking
153:02 - [Music]
153:04 - holy lots of spam here
153:09 - oh one second let me sift through the
153:11 - spam
153:13 - [Music]
153:16 - how are you doing this pandemic i'm
153:18 - digging it i'm digging the quarantine
153:19 - i mean you wake up you can wear shorts
153:22 - uh
153:23 - you know don't have to commute to work
153:26 - wear sweatpants it's not bad the whole
153:30 - you know what's going on and how it's
153:33 - impacting people's lives not that great
153:35 - bob
153:39 - all right please bring your videos here
153:41 - is about competitive programming so
153:43 - you're just a good
153:44 - source to learn it also how to join your
153:47 - open source project
153:48 - so the video series about competitive
153:50 - programming noted
153:52 - and how to join your open source project
153:54 - if you go to thenewboston.com
153:57 - then i would first suggest joining the
153:59 - slack community
154:01 - and for that on the home page you can
154:03 - click the little slack icon and if you
154:05 - just want to dig right into the code
154:07 - then you can either click on the little
154:10 - github logo
154:11 - or there's a section called tasks
154:14 - t-a-s-k-s that you can go and see
154:17 - everything there is to work on
154:20 - but for joining it i would highly
154:22 - recommend
154:23 - uh joining the stock community and then
154:26 - in
154:26 - intros introducing yourself telling us
154:28 - about your background and then
154:31 - uh we'll find a team to put you on
154:33 - because it just feels like people are
154:36 - more part of the community that way a
154:39 - little more engaged
154:41 - good morning from lagos nigeria what up
154:44 - over in lagos
154:45 - and this guy's name is or girl is oauth
154:48 - i like that very cool also nigeria
154:52 - is uh kind of doing awesome in uh
154:55 - cryptocurrency lately i i saw on google
154:57 - trends that nigeria is one of the
155:00 - top countries that has
155:03 - lots of interest in it did you ever try
155:06 - creating your own programming language
155:07 - bucky i did not
155:13 - r which language should i learn after
155:15 - java
155:17 - so this uh depends what you want to do
155:19 - with java
155:21 - maybe not another language but maybe uh
155:24 - something
155:25 - that is java specific
155:30 - [Music]
155:31 - why are you up at 2 a.m so from what you
155:35 - yep so for me it's on the uh oh midnight
155:38 - how long wow i thought i was streaming
155:40 - for like 40 minutes two and a half hours
155:43 - dang time flies all right
155:46 - views on flutter i am pro flutter and
155:49 - flutter's coming in 201
155:53 - uh flutter overreact
155:58 - it's uh debatable
156:06 - okay
156:08 - all right 2021 resolution 2021
156:12 - resolution uh
156:19 - the main thing is just so we have a road
156:22 - map for the digital currency project
156:24 - that i am looking forward to probably
156:27 - more than anything else in 2021
156:29 - and then aside from that i just want to
156:31 - make lots of videos
156:33 - i want to make a lots of uh tutorials
156:35 - and
156:36 - get everything up in a buzzing again i
156:38 - am
156:39 - very excited about that as well to get
156:42 - back into the groove of things
156:43 - and now that we have an open source
156:45 - project an awesome community
156:47 - uh i'm feeling very good about 2021
156:50 - especially compared to 2020
156:51 - which it really isn't 20 20 even set
156:54 - that high of a bar
156:56 - let's be honest so um just looking
156:58 - forward to 2021 in general
157:01 - also in general another thing about this
157:04 - is
157:04 - i'd i'm not a big fan of resolutions
157:06 - because
157:07 - i feel like if there's something in your
157:09 - life that you want to improve
157:11 - you shouldn't have to wait till january
157:12 - 1st is there something in your life that
157:14 - you want to improve
157:15 - you just start improving it right away
157:18 - in
157:18 - aside aside from that it's also a good
157:21 - read
157:22 - um interesting that i'm not a fan of
157:24 - retros so if you work
157:26 - for a software company you know you have
157:29 - retros
157:30 - like uh with each sprint at the end of
157:33 - it
157:34 - i feel like people just save up the
157:37 - problems
157:37 - for like every two weeks where it's like
157:40 - yo
157:40 - if there's a problem or something you
157:42 - think that we could improve
157:44 - then you could just like mention it like
157:46 - a week and a half ago when this came up
157:47 - didn't need to save it for retro but
157:51 - in a way new year's resolutions are
157:54 - kind of just like retros in a way like
157:56 - what can we do better next year
157:58 - uh so and so forth
158:01 - all right so object oriented
158:05 - is okay so the question was what is
158:07 - object oriented
158:08 - object oriented is uh
158:12 - like a design pattern where instead of
158:14 - programming with individual
158:16 - functions then you use something called
158:19 - uh
158:19 - classes in objects and it allows you to
158:24 - store like um
158:27 - how can i explain this it allows you to
158:29 - store like state and memory
158:31 - with certain bits of code
158:35 - it's kind of hard without a text editor
158:37 - in front of me showing everything but
158:39 - there you go 2021
158:42 - uninstall facebook and burn your tv that
158:45 - is actually not bad advice
158:47 - i already did uninstall facebook on all
158:49 - my uh mobile devices
158:53 - not because like i'm i'm not like a huge
158:56 - fan of facebook first of all but it
158:57 - seemed to be just be killing my battery
159:00 - and burn your tv i don't know if my tv
159:02 - would burn
159:03 - but also not that bad of device
159:07 - all right let's see how do you see the
159:08 - new boston in five years
159:10 - i have very high hopes for the new
159:13 - boston
159:14 - in five years um especially after i
159:16 - announced the
159:17 - digital currency project since it has a
159:20 - lot of support
159:21 - and it's growing very strong and
159:25 - we we're still in alpha right now not
159:28 - even in beta
159:29 - so i can't imagine when this thing gets
159:31 - the beta and after we have a marketplace
159:33 - release on exchange things are
159:36 - going to be happening very quickly
159:38 - looking forward to it
159:40 - waiting for flutter tutorial from new
159:43 - boston me too
159:44 - it's on the way uh when are they coming
159:47 - they're coming in 2021
159:48 - early 2021 it's one of the earliest
159:51 - things
159:52 - uh let's see let's see what up whoa okay
159:55 - lots of comments coming in all of a
159:57 - sudden
159:59 - uh how do you feel about visual coding
160:03 - uh visual coding
160:06 - i'm not i'm not familiar with visual
160:09 - coding
160:09 - what time is it bro it's 12 14 or i am
160:13 - slightly after midnight but it's
160:14 - saturday so whatevs
160:16 - we're just rolling with it how's it
160:18 - going
160:19 - going great actually uh this comment
160:22 - says and how to start a
160:23 - fire oh
160:27 - you taught me three languages and how to
160:28 - start a fire that's
160:30 - really the four things i wanted to
160:32 - accomplish in your life so
160:34 - as long as you know three new languages
160:35 - and how to start fire then yeah mission
160:37 - accomplished
160:40 - what is the bucky's language choice to
160:42 - build a web application in 2021 nothing
160:44 - fancy here
160:45 - i'm gonna go with uh for a web
160:47 - application
160:49 - as long as it's not too processing
160:52 - intensive
160:52 - i would just stick with uh python django
160:56 - and react on the front end especially
160:58 - with bringing on new developers or
161:00 - growing it i mean they're such popular
161:03 - languages
161:04 - and they're growing in popularity it's
161:06 - it's really
161:07 - nice to get a solid application up quick
161:10 - iterate and you know
161:11 - nothing bad to say about those can i buy
161:15 - some tmb currency
161:16 - not at the moment we are still in alpha
161:18 - but
161:19 - after this we go beta and then we
161:21 - release and then at that time we're
161:23 - going to be
161:23 - uh getting on exchanges so you can't buy
161:27 - it yet but you can
161:28 - earn it which language is best to learn
161:33 - game programming so this is actually
161:36 - interesting um
161:40 - look into
161:43 - unity so
161:47 - in uh also another thing about game
161:49 - programming is i'm not a game program i
161:51 - never made a
161:52 - like a production level game so i'm
161:55 - probably not the best person to ask
161:56 - about that colin jetpack or react
161:59 - who those are uh
162:03 - uh they're just uh different
162:05 - technologies for different things
162:09 - uh after okay so it's alpha beta and
162:12 - then
162:13 - the next stage in like the software
162:15 - development life cycle is
162:16 - stable release or some people call it
162:18 - production but basically
162:20 - alpha is like almost development uh beta
162:24 - is
162:24 - this should be ready but it probably
162:26 - still has some bugs that we have to iron
162:28 - out you know get it security audited
162:30 - tested and so on and so forth
162:31 - and then at the end of beta you feel
162:34 - that
162:34 - your software is ready to go uh there's
162:36 - no more bugs you can find no more
162:38 - security holes
162:39 - and it's ready for production release so
162:42 - it's it's either called a stable release
162:44 - or production you know depending on
162:46 - terminology you use it's the same thing
162:47 - though
162:50 - okay whoa lots of comments
162:54 - guys these duplicate comments they're
162:56 - filtering out all the
162:59 - good questions how many computers do you
163:01 - have now i only have
163:05 - okay i don't know if so i have five but
163:07 - three of them are laptops and two of
163:08 - them are laptops that i
163:09 - never use one's a linux one and one's a
163:12 - windows one just for
163:13 - when i need those but usually i develop
163:15 - on mac
163:16 - just because i just like their uh
163:18 - products and they're unix-based
163:20 - which is important for the things that i
163:23 - built
163:27 - uh let's see okay come back coming back
163:30 - come back
163:31 - uh i've been on tech was ripping off
163:34 - your content he owes you don't know who
163:36 - that is
163:37 - but yeah if you owes me then
163:41 - you know what are you gonna do about it
163:42 - yo me ivan
163:46 - okay i'm a college student with not too
163:49 - much experience
163:50 - in oss how do i support the digital
163:52 - currency project
163:54 - so if you don't have too much experience
163:57 - and you want to learn
163:58 - then that's fine then there's lots of
164:01 - different areas
164:02 - in the digital currency project which is
164:04 - a cool thing
164:05 - and some you don't even have to be a
164:07 - developer for we have a back-end team we
164:09 - have a front-end team
164:10 - we have seo we have marketing we have
164:13 - design
164:14 - we have people who are just community
164:16 - managers who help out around the
164:18 - community
164:19 - lots of different areas where even if
164:21 - you are a beginner developer and you
164:23 - want to
164:24 - kind of dip yourselves in open source
164:27 - development
164:27 - or you just want to hang out join the
164:29 - community that's cool come on in
164:31 - but lots of different areas and we
164:33 - accept lots of different skill levels no
164:35 - matter how
164:36 - new or how experienced you are so come
164:39 - in
164:39 - and we'll find a place for you
164:45 - computer specs so uh whenever i
164:49 - so on my macs they're pretty much maxed
164:52 - out aside from
164:54 - um the video card since i don't really
164:57 - do like uh
164:58 - video editing or i don't need a gpu for
165:01 - anything
165:02 - really just like programming you don't
165:04 - really need a
165:05 - lots of processing power and
165:08 - i believe my hard drive as well since
165:12 - a lot of the information i just store on
165:14 - the cloud
165:16 - okay let's see a local no code movement
165:22 - low code no code i'm not familiar with
165:25 - that actually
165:27 - loco no code
165:31 - what's your favorite ide i love
165:33 - jetbrains ide
165:35 - uh why upper keeps rejecting my profile
165:38 - i
165:39 - don't know and let's see tell me more
165:42 - about your crypto stuff
165:44 - what would you like to know would you
165:47 - consider making
165:48 - videos on ue4 or
165:51 - unity um i made a lot of videos
165:55 - on unreal engine before like quite a few
165:59 - i actually don't even remember if i made
166:01 - tutorials on unity or not
166:04 - but um probably not for the
166:10 - it a lot of these things i'm not sure of
166:12 - because a lot of it depends on what
166:13 - people want to see
166:15 - so
166:19 - okay bro you play video games i don't
166:22 - i'm not
166:22 - a gamer uh i play games
166:26 - i actually have a nintendo switch that i
166:27 - really like i like it
166:29 - because i can bring it on a plane and i
166:32 - don't know i just think it's uh pretty
166:33 - fun
166:34 - i like building or i like playing games
166:36 - that you like build systems
166:38 - like minecraft or i forgot these games
166:42 - but like you put things together and the
166:43 - system becomes more complex and more
166:45 - complex and you have to manage things
166:47 - i'm not a big fan of like first person
166:48 - shooters or anything like that
166:53 - all right all right what program
166:55 - language should i learn
166:56 - first uh if you don't know anything and
167:00 - just don't know where to start it's hard
167:01 - to go wrong with
167:04 - python
167:08 - [Music]
167:12 - okay man okay machine learning is
167:15 - quickly
167:16 - coming up on this how does a crypto get
167:19 - into an exchange
167:20 - so this is a james payne
167:24 - is this the same james that's a
167:25 - developer on the project
167:27 - so um there are different types of
167:29 - exchanges you have decentralized
167:31 - exchanges which are
167:35 - uh they are less uh official less
167:38 - regulated
167:39 - basically any exchange that
167:43 - allows people to add one type of
167:44 - cryptocurrency and trade it for another
167:46 - type of cryptocurrency
167:48 - uh most of the time when people talk
167:50 - about cryptocurrency exchanges they're
167:52 - talking about
167:52 - centralized exchanges like coinbase or
167:54 - kraken and in that case
167:56 - each of these have different their own
167:59 - rules on what you need
168:01 - to do to get in and a lot of them are
168:03 - kind of vague as well
168:05 - like the development community needs to
168:07 - be active or
168:08 - the cryptocurrency needs to be stable
168:10 - however the definition of active or
168:12 - stable so on and so forth
168:14 - are really in their hands but each of
168:16 - these exchanges essentially has a list
168:18 - of guidelines
168:19 - of what you need to do before you can
168:21 - apply to get on that exchange
168:23 - so it is different for each one any
168:26 - projects for horse racing i actually
168:28 - spent a lot of time uh building
168:32 - a application to analyze different
168:34 - horses
168:35 - um their different attributes
168:39 - and believe it or not there is a lot a
168:42 - lot of information
168:44 - when it comes to analyzing horses
168:47 - like not only their um their different
168:50 - speeds but their
168:51 - uh race history their parents
168:54 - their medication that they're on uh how
168:57 - they're racing
168:58 - uh the different turf and the firmness
169:00 - so on and so forth
169:02 - i had no idea that there's this much
169:04 - data but
169:05 - the reason that i really got into it was
169:08 - because
169:09 - first of all this horse track that is
169:11 - just uh cool to watch
169:12 - and i was
169:16 - interested in what factors uh resulted
169:19 - in horses winning the race and the main
169:22 - thing that i started out with
169:24 - is is it mainly the horse or is it
169:26 - something else because
169:28 - in a horse race you have the horse
169:29 - itself which you know it's genetics
169:32 - uh it's how it trained however but you
169:34 - also have the jockey
169:35 - and different jockeys have different win
169:37 - percentages
169:38 - mostly based on like experience but you
169:41 - also have trainers as well
169:43 - so the main thing i was trying to figure
169:44 - out is if you had a horse
169:46 - is a horse going to win no matter what
169:47 - jockey or what trainer has
169:49 - or if you had a horse that didn't
169:51 - perform so well
169:53 - but you gave a really nice jockey and a
169:55 - really strong trainer then would that
169:56 - have more of an impact
169:58 - and if it was the horse then how much
170:02 - did its race history matter how much
170:05 - does its age matter maybe some things
170:08 - that people don't think of really matter
170:09 - like how long is its tail
170:11 - well maybe uh most people just disregard
170:14 - that but maybe there is a strong
170:15 - correlation
170:16 - so just taking all of these different
170:18 - factors and then plugging them together
170:21 - where not only these individual factors
170:24 - that you can kind of wait but
170:25 - in combination as well where maybe this
170:27 - horse doesn't do good but it
170:29 - when it runs with this jockey on this
170:31 - type of turf then it always does good
170:33 - so just to find those things it was not
170:35 - only an interesting challenge to program
170:38 - but also to look at the results of okay
170:41 - this was what we decided uh is horse
170:44 - that's gonna
170:46 - be most likely to finish first and often
170:50 - so so here's the interesting thing as
170:53 - well
170:54 - on topic of all this and it's the last
170:55 - point and then i'll stop talking about
170:57 - horses but
171:00 - at first what i was doing whenever i was
171:02 - making this application
171:03 - is i was just using all these different
171:04 - variables to do like machine learning
171:06 - and figure out which
171:07 - horse would most likely come in first in
171:09 - the race i figured the horse that's most
171:12 - likely to come in first is the one that
171:13 - you want to bet on
171:14 - but that is not the case because what
171:17 - you also need to consider
171:19 - is the rate in which they will win so
171:22 - if there is a horse that you think
171:25 - has a 60 chance of winning a race
171:28 - now if that horse wins then you might
171:31 - get like
171:32 - um 20 on your money so if you bet a
171:34 - dollar you might get a dollar tony back
171:37 - now so let's say that horse had a 60
171:40 - chance of winning there can be another
171:42 - horse that only has a 40
171:45 - chance of winning but if this horse wins
171:47 - then you
171:48 - triple your money so you essentially
171:50 - just can't
171:52 - run it through this algorithm and look
171:53 - at the results because it it doesn't
171:55 - give you the best results over time what
171:57 - you need to do is run it through more
171:59 - realistic
172:00 - simulation uh considering the betting
172:02 - odds as well
172:04 - and whenever i did that
172:07 - what my program uh did is it really
172:10 - really loved to gamble on the underdog
172:12 - horses almost
172:14 - every one of its picks was like a forty
172:16 - to one undershot
172:17 - or or uh an underdog so
172:20 - it really loved finding these horses
172:23 - that had a pretty
172:24 - low chance of winning now the
172:27 - interesting thing in all of that
172:29 - was that these horses that any normal
172:32 - human being would go to horse track and
172:34 - they would see oh this
172:35 - horse has no chance uh the program was
172:39 - very good at picking these underdog
172:42 - horses that had
172:43 - that ended up in the top three very
172:46 - often
172:47 - so uh it was just
172:51 - the results that i thought it was going
172:53 - to give
172:54 - was so different than what it actually
172:56 - gave and what it
172:58 - said was the best formula and um i don't
173:01 - know it's just
173:01 - something interesting so yes in exile 5a
173:05 - that was my
173:06 - long answer to that
173:09 - oh okay i keep seeing these things
173:13 - and i try to read it but then it pops
173:14 - down
173:16 - okay
173:17 - [Music]
173:21 - vs code or pycharm i mean i gotta go
173:23 - with pie jar
173:25 - i'm very biased towards jet brains ides
173:29 - roller coaster tycoon that is a good one
173:32 - actually looked in that for switch but
173:33 - it didn't have that high of a rating so
173:38 - uh is the stream being uploaded this is
173:40 - actually the second stream
173:41 - and it was it's just like a test stream
173:43 - that is turning into a longer stream
173:46 - so is it being uploaded i would say yeah
173:48 - i can save it it's cool
173:52 - can devops engineers do development work
173:54 - also
173:55 - uh that just depends on your skill set
173:57 - we have some devops engineers that are
173:58 - also
173:59 - backend engineers and that's mainly
174:01 - because
174:02 - uh so when writing scripts it's usually
174:06 - a lot of it is python scripts in a lot
174:08 - of cases
174:09 - so yeah they definitely can
174:14 - okay let's see university student with
174:17 - not much experience is there any way to
174:19 - contribute to
174:20 - coins so yes uh
174:23 - the cool thing about this project in the
174:24 - new boston open source development
174:27 - community
174:27 - is there is no restriction on the
174:30 - experience level
174:31 - whether you're just starting out in
174:33 - programming whether you've been
174:34 - programming for a long time
174:36 - there is a position for everyone so come
174:38 - on in join a community we would love to
174:41 - have you
174:42 - and if you're new to open source
174:44 - development then
174:45 - you can learn you get better that's what
174:47 - everything's about here
174:49 - is it an erc20 it is not it is
174:52 - something completely different than
174:54 - anything that exists
174:55 - however we are going to have a wrapped
174:57 - coin to get it on these decentralized
175:00 - exchanges
175:01 - so just like wrap bitcoin we're gonna
175:03 - have uh wrap the new boss in
175:05 - which is gonna be an erc20 coin uh for
175:08 - that reason
175:12 - will this channel focus mostly on
175:13 - cryptocurrency now or other stuff too
175:15 - so we only have two more well one is
175:18 - partly done
175:19 - the digital currency tutorial series and
175:21 - the other one is the
175:23 - account manager series we have planned
175:25 - which is essentially the desktop
175:26 - application that we have for connecting
175:28 - to the network
175:29 - but then after that uh it's
175:32 - it's pretty much just going to be back
175:34 - to basics with
175:35 - uh docker aws flutter lots of
175:38 - programming lots of software related
175:40 - tutorials
175:41 - but for now since there is a big barrier
175:44 - for people understanding what the
175:45 - project's all about
175:46 - and how everything works i do want to
175:48 - get these tutorials out there
175:50 - and pumped out just so you know it kind
175:52 - of helps development
175:53 - but then in 2021 pretty much going back
175:56 - to basics
176:01 - okay let's see let's see let's see
176:08 - would you rather fight to the death with
176:10 - five chicken sized horses
176:13 - or a one horse-sized chicken five
176:16 - chicken-sized
176:16 - horses oh i could crush shows
176:20 - i could crush those horses easily i mean
176:22 - it would be no contest
176:25 - and then one horse-sized chicken that
176:27 - may be a little bit more of a battle i
176:29 - can see that
176:30 - messing me up pretty bad so definitely
176:33 - uh
176:34 - would be happy to fight five
176:35 - chicken-sized horses i would just
176:36 - absolutely demolish them
176:39 - all right i'm not really gonna
176:42 - hurt those animals by the way unless
176:45 - they come after me first then game on
176:46 - you know
176:49 - project is going to be so successful our
176:52 - project
176:52 - first of all but uh thank you and i
176:56 - agree
176:57 - thank you for the support
177:02 - why do vulnerabilities occur all the
177:04 - time is because when something
177:06 - gets updated it's just because um
177:10 - technology grows quickly
177:13 - and when you grow things quickly there
177:15 - are just some spots that
177:17 - kind of just like bugs where
177:21 - building anything uh quickly there are
177:23 - some areas that you
177:24 - overlook uh different use cases that you
177:27 - didn't consider
177:28 - especially with users where you expect
177:31 - them to use your software in a certain
177:33 - kind of way
177:34 - but they almost never do and they find
177:36 - all kinds of new ways to break it
177:38 - a lot of it is unintentional as well
177:42 - glider back computer science
177:46 - okay how can you earn crypto so
177:49 - the crypto that we are building the idea
177:52 - behind it
177:53 - is that the value comes from what you
177:55 - put into it so you earn it
177:57 - by improving the network fixing bugs
178:00 - joining a team
178:00 - helping out the community so on and so
178:02 - forth but
178:04 - it's not anything that as of now you can
178:06 - buy on any exchange
178:08 - mainly because there is still an alpha
178:10 - now and the network is young
178:12 - but no buying so far you have to earn it
178:16 - by helping out the network or helping
178:17 - out the project
178:18 - [Music]
178:20 - all right all right all right how much
178:23 - were your
178:24 - crypto be worth min twin
178:28 - um so that is actually going to be up to
178:31 - the market
178:33 - i am assuming hoping
178:36 - quite a quite a bit chat is too fast wtf
178:40 - why am i burping all the time now
178:44 - nice uh chad is too fast wtf i agree
178:48 - tala not even gonna say that just
178:50 - embarrass myself i like turtles me too
178:55 - aren't the horses euthanized when they
178:57 - are injured
179:00 - uh yeah i believe so
179:06 - and that and that was actually uh a big
179:07 - thing at the race
179:09 - well i'm sure you guys don't want to
179:10 - hear about horse racing all the time
179:12 - but um yeah just one last thing at the
179:16 - horse track
179:16 - in or it's not actually in pasadena but
179:19 - san anita real quick close to where i
179:21 - live
179:21 - there's like a a record number of horses
179:24 - being injured on the track that they
179:26 - have to put down
179:27 - and no one really understands why all
179:29 - these horses like
179:30 - it's not more than average it's like
179:32 - this crazy amount of horses that keep
179:34 - getting injured
179:35 - at this one specific track and they
179:37 - thought it was
179:39 - something with the firmness of the track
179:42 - or something like that but yeah it's
179:45 - just like a big mystery in the horse
179:46 - racing community
179:48 - on this track why do horses keep getting
179:50 - injured
179:51 - uh let's see
179:57 - how do you market yourself as a
179:58 - developer i would say
180:00 - by
180:04 - through your skills through your skills
180:07 - uh
180:08 - just being a very strong developer
180:13 - all right probably got a couple more
180:14 - questions here
180:16 - then i gotta peace out oh favorite food
180:21 - i do like some mac and cheese ah let's
180:23 - see
180:25 - what's your guys favorite food
180:30 - pizza especially 99 cent pizza in new
180:33 - york city
180:35 - can't beat it
180:38 - wow that's all it thoughts
180:45 - all right do you still use ergonomic
180:47 - mouse and glows
180:52 - i have to ergonomic mouse in this
180:55 - without it
180:57 - carpal tunnel symptoms get uh pretty bad
181:02 - i watch your video on ten standard after
181:04 - eight years started my own channel
181:05 - you're my inspiration
181:07 - bucky desi coder thank you very much
181:10 - actually i'm gonna check out your
181:11 - channel desi coder
181:14 - how can i join the project if you go to
181:17 - thenewboston.com
181:19 - there is a section that says join the
181:21 - community in one of the menus
181:23 - then you can either join slack or github
181:25 - so on and so forth
181:26 - but i would recommend joining slack and
181:28 - gal
181:30 - why are you using a headphone uh
181:33 - because if i don't then the sound comes
181:35 - from my computer
181:36 - uh and instead of going through my ears
181:38 - it goes to the mic and it creates an
181:40 - echo
181:42 - tacos i just see tacos here oh from the
181:44 - question i asked
181:46 - oh yeah that's another one that's an a
181:48 - very good
181:51 - what is your cultural background nothing
181:53 - fancy
181:54 - born in uh northern new york basically
181:57 - canada
181:58 - and i'm 1 8 filipino
182:02 - great grandpa believe it was and that's
182:05 - as spicy as i get otherwise
182:06 - everything else is pretty much just like
182:08 - boring white
182:10 - standard white person
182:14 - i'm from india please guide for cyber
182:16 - security
182:17 - cyber security that would be another
182:19 - interesting series
182:26 - [Applause]
182:28 - okay all right lots of cool
182:31 - stuff all right
182:34 - so three hours i think this is good for
182:36 - a test
182:37 - um so streaming works and apparently you
182:40 - guys
182:40 - like to watch a stream as well so i'm
182:43 - definitely going to do this
182:44 - again so thank you everyone for all your
182:47 - questions
182:48 - and i'll maybe i'll schedule this uh
182:51 - so you know i didn't give anyone a heads
182:54 - up i wasn't expecting to stream for
182:55 - three hours today
182:57 - but yeah i see all the comments coming
182:59 - in now
183:03 - thank you guys thank you guys for uh
183:05 - hanging out with me asked some questions
183:07 - and it was fun so do it again now
183:10 - all right so i gotta go i'm pretty
183:12 - hungry but uh yeah thank you guys again
183:15 - and i will post on social media and also
183:17 - schedule on youtube when i'm streaming
183:19 - again
183:20 - so thank you and i'll see you later

Cleaned transcript:

all right and we are back in my comments uh we need meme review i agree okay let's check it out check it out check it out all right so i don't know if you guys notice but i now have some awesome decorations back there i got an elephant two little plants literally the only decorations in my entire apartment all right and we got a logo no more uh streaming hard duck what is this testing this is just testing the uh stream i just signed up for a stream yard it's called and just streaming on youtube making sure my audio is good video is good and pretty much it yeah i move my jacket so you know you can see my awesome decorations a little bit better it's two decorations i do have a cool steve jobs poster but i don't want to like tape it to my wall i'm too lazy to frame it i don't have any thumbtacks so it's kind of just like a laying on the ground now should probably just tape it up there all right and look at this actually you guys dig in the red the minimal or no display name i kind of like the minimum myself stream yard cost uh i think this was actually let me see i just purchased it like 30 seconds ago 39 a month yeah this was uh actually they got a 20 a month plan but it had something up it didn't have full hd and i know you guys want to see my beautiful face in full hd of course so i had a splooge on that for you not using obs um so i used to use obs to stream on twitch but they like fried my mac every time i turn it on it was over in and also another fun fact for you guys is i had to uninstall adobe creative cloud because even though i like the software it was also frying my mac whenever i turn on camtasia to record anything it was just like uh heard my mac spinning fans overheating and i looked at the processes and there were like 500 processes running in the background so i close all my adobe apps and then i close the uh like that little uh tool menu in the top right the creative cloud one and still i looked at my processes and these things weren't shutting down so i'm like whatever just uninstall that okay yo bucky what up not much what's up bucky not much and let's see um these comments are moving a little too fast okay i use please help sir what are the most important subjects for cs student operating systems network c plus plus java other languages their computation architecture please answer so for that i would say there is no um there's no one right answer it really depends on where are you trying to go what do you want to achieve in the future and then once you decide upon that figuring out the best path to get there but for some of those you may need those skills for some of you may never need them so uh why does a variable appear uninitialized in main c plus which was declared and taken as input from class dot cpp i do not remember that tutorial that specifically so i would have to look how to get freelancing projects and make a career in freelancing so i never did freelancing but i know upwork is the site that i use whenever i need freelancers so possibly that route can you make a tutorial about good practice in convention uh programming i like that idea actually i am uh obsessed with clean code to a point where it's not even like clean clothes it's more like ocd really um just making sure like properties are in alphabetical order and uh imports are optimized everything is nice and standard and you know what on the topic of clean code so i actually uh had a debate with a few people about this and whenever you're working on a software project as a team clean code seems like kind of um strictly an ocd thing but the reason that i like it is because whenever you have standards and really clean code you can go to any part of the code base and it you can't tell who it was written by and that's kind of the goal in my mind where everything is standardized consistent so it doesn't look like each part is written by a different team or a different pod however your teams are structured and also these little things of okay where do i look for this property in the list of like 60 properties or was this imported and then you have to find it it's all those little things where you don't think about but these seconds they add up and kind of i always kind of equated it to this where uh it may not be that correct or the best analogy but programming is a lot like just reading any language where you start to read and you're focused on just the letters you learn b and t and bat okay on ba in you are you put so much time and energy onto each character and then later each word that by the time you get to the end of a sentence you don't you pretty much forgot what was at the beginning and your reading comprehension is really um low when you first started out but eventually after you get more familiar with it it's like the dog is on the uh house or whatever it is and then you can begin to understand the words and then the sentences and then things just flow and then after a while you aren't thinking about those specific words you're thinking more about the meaning and paragraph and the story so kind of like coding the more familiar you are with it in the more the easier it is to read uh these different patterns you can focus more on the problem that you're trying to solve rather than the syntax of what does this do or where is this thing all of those little question marks you can get out of the way can allow you to focus on the the problem itself wow that was a long answer i didn't even remember what the original question was but let's scroll back up here flutter you guys really love flutter flutter is coming this is uh kind of my game plan for youtube videos and before i get to that let me um actually how am i going to show you guys this if you go to my twitter uh my name is bucky underscore roberts the second to last post i made actually let me back up a little bit so a couple of days ago i asked what do you want to learn in 2021 since well i wanted to know what you guys thought since those were pretty much the tutorials i was planning on making and for those of you who don't feel like going all the way over to twitter python was first surprisingly and i say surprisingly not because the community is uh you know familiar with python but mainly because i taught a lot of python before so i figured you guys would be sick of it but python was first and again this was just the results from the poll they're not anything like uh i'm committed to creating these tutorials or i haven't decided anything yet i just want to you know read you guys the results number two you guys will be happy to see is flutter number three i'm just going to read them out i'm going to say one two three all right python flutter docker django aws kubernetes react native react in ai and after that's blockchain javascript machine learning typescript and yada yada so on and so forth but flutter is definitely on the menu as is docker and aws python and django i did teach that before if there's debating whether i want to teach that again i mean if you guys would like me to teach that then yeah i guess uh rocking with that all right hold on read through comments reading through comments how to concentrate and have patience while learning so this is um okay i need to find a way to like bookmark these comments or something i as i'm answering i see all these other questions go past and in my head i'm like i'm gonna miss that i'm gonna miss that but uh okay one second okay how to concentrate and have patience while learning so i think the reason why a lot of people have trouble concentrating and having patience while learning is because the thing that they're trying to learn doesn't have a lot of meaning to them in other words whenever i was in school high school i had to learn about history and then i had to read books for english class and the fact that i had to do it rather than i wanted to do it it just it was just like okay i just got to do this to complete an assignment or whenever they teach you math in school they're like figure out this equation and then answer on your test or on your homework and in my mind i was like what's the point of this when am i ever going to use this equation uh it just feels like i'm like i'm a function i get some input and i got to do some output or else i get in trouble by my mom or whatever but um the reason i say all this is because with without that reason and say what does this matter what am i doing it for there's no purpose there's no uh nothing to attach it to on your mind because you have nothing to relate it to so whenever i am learning a new language or new technology of course i have the purpose to teach you guys but aside from that it's not i don't really think of things like uh learning in this way or i have to do this to do this what i usually do whenever i'm learning a new technology is something like this i want to build a digital currency because i want to create a better economy and i want to work on this program with everyone for my community now that's what i'm gonna do and that's my focus that's my only focus my dream what i'm passionate about so on and so forth now on that journey of getting to there i know that i'm gonna have to read through documentation i'm gonna have to understand concepts that i didn't learn before but unlike before when i was in high school and having to go through each of these things i'm still doing the exact same thing i have to learn math i have to learn new languages i have to learn this and that but it's not about that learning it's just things that you do naturally on the way to creating this digital currency or this project and a side story on this is that when i first moved down to north carolina and i had a job like um i had to mow like uh police departments and fire stations in like uh like the soccer fields that kids played at so i was just like uh a landscaper basically i worked with uh two people notably i worked with a lot of people but in this story we'll just stick with those two people one guy he hated coming to work every day and he's like ah another day another dollar that's what he always said and another guy kelvin he's like man after this week gonna get that ps3 and so you know got the ps5 now but i actually don't even know if it was the ps3 it was one of those consoles back then but he was always looking ahead to what he could do uh after like what was the purpose of work so on and so forth and i was like huh that's uh pretty interesting it's both of these people including myself we're coming in and going to work every single day we're doing the same exact thing but one guy was upset and depressed the whole time in another one in the exact same situation was just always looking forward to things so i don't know it's just uh the way that i learn it's not that i ever have to go through docs or learn something in a book it's just that these are just things to get me one step closer to what i'm concentrated on it's just um it's not so much learning anymore or having to do anything it's uh just a different mindset i suppose okay miss about 5 000 comments so let me scroll up what are you up to now regarding the channel like blockchain machine learning and web stuff so yes the channel got a lot of stuff planned um i wanna i finally have time okay let me just back up so on november 5th whenever i release the video there were a lot of people um who came into the project right away a lot more than i expected and let me kind of close this as well so a lot of more people came on to the project than i expected and it was just really um overwhelming so in a good way by the way so people would come on and message me and say hey bucky uh i want to join the project this is my background so on and so forth and as i was responding to them i could hear on my little slack bot other people coming in or uh sending me messages i'm like man i am never gonna get through these and then at the end of the night at like 1 30 2 in the morning i finally got through all my messages i'm like okay tomorrow i can go and finally uh start on my twitter messages since this was all on slack and then i would wake up open my slack prepare to go to twitter and there'd be like 150 new messages on slack and i was like oh man never going to get through this but um yeah so the point of the story is essentially i finally have some time now now that that new traffic kind of died down and i want to get through the digital currency videos which i'm hoping to rip out pretty quick and then after that i want to make a series on the account manager the desktop client that you use since a lot of people are having some trouble with that since it is a brand new piece of software of course so i want to teach that and then on the 19th i think i'm flying back to new york to see my family that's the plan for now with this virus thing going around everything's uh changing pretty quickly but i am going to um finish writing my docker tutorials my aws tutorials i'm going to be writing flutter tutorials i'm i'm not going to have my computers around since i'm since uh i film on these big imacs and what is this ah a little debate going on in the chat so i'm not gonna have these but what i'm gonna have am i am gonna have is a lot of time to uh finish writing my tutorials which actually takes the bulk of the time whenever i'm creating videos just because i need to make sure to have a general outline and then i need to make sure on each tutorial i have bullet points of what i want to cover just so i make sure that i don't want to um miss anything or skip over anything so that takes the majority of the time and then when i come back in the beginning of 2021 in january i can pretty much just pump out a bunch of those tutorials so docker aws and flutter coming first and then and then i'm essentially going to wait and see what you guys say mostly listening to the polls uh so on and so forth wow these answers are way too long okay uh scroll down scroll down okay how to increase logical skills for programming this is actually interesting question this is uh something i never thought about i guess that um so so one thing it's kind of the stupid standard answer but just uh practice lots of practice and another thing that i noticed throughout my programming career one thing that separates the really good programmers from the junior programmers that is pretty apparent is whenever they have a new feature to work on or a new little project the more senior developers they take a lot of time to plan they spend a lot of time either on a whiteboard or a notebook and by the time their fingers touch the keyboard they know exactly what they're gonna do uh it's pretty much just writing the solution as fast as you can type of course there may be some issues that they come across but more or less so much goes into planning and understanding exactly what you're building before you start writing the code where with junior developers they get a problem it can be like um an interview challenge or even like a feature later on when they get hired or when they're first starting out and whenever they do they just hop right into the code right into the code and pretty quickly right after that they usually get stuck or say i have to rewrite this rewrite this and i think what's happening in the reason that uh i guess with this digital currency thing i spent months and months and months playing them before my fingers ever touched the keyboard is that whenever you just start coding right away you're kind of looking at things uh one step at a time so if there's ten steps you say i'm gonna do step one and then step two but what it doesn't allow is to see the system as a whole and say okay so this is the individual pieces kind of like that reading comprehension if you guys were here for the earlier part of the stream but not only can you understand the individual pieces but you can understand how everything fits together and then if things don't fit when you're looking at things from a big picture you can go back and kind of tweak things move it around but um i i don't know if that was the answer of the logical skills for programming but by taking the time to plan things out thoroughly uh kind of just with a notebook a notebook and pen or a whiteboard it i feel will improve almost all of your projects all right pretty cool huh i don't know what that was referring to but i'm guessing that it was cool all righty where can i notify you about a security vulnerability you can uh send me a private message on slack uh hi daddy skip that one all right let's see what else we got can you do bitcoin for complete beginners so caleb is actually making a uh blockchain for beginners tutorial series for the new boston however he is waiting on a payment library that we haven't had time to develop yet so i wanna wait and see for his series to come out and see what he covered and then i'll kind of let the community decide if they want more if they want less if they like that if not so we're rocking with that how long will this stream be i have no idea it's already uh way longer than i expected i really just wanted to do this stream to um test out this uh this new software that i was using in the stream so there really is nothing nothing planned or important for this stream so uh yeah i need to know about the obsession with tuna so another fun fact for you guys is that whenever i started using bacon and tuna in my tutorials and i'm sure if you guys follow me on twitter you already know where this is going but i actually didn't start using the words bacon and tuna in my tutorials to be funny even though you know it is kind of funny i started using it because whenever i was learning programming for the very first time i would go through these books and teach them about so i would go through these books and learning about classes and functions and variables and these variables would be named like var num equals five and i would see these two things like var num i go is one of these like customizable is numb is var like like what's going on and it was hard for me to see like what was a builtin uh keyword and then what was customizable so in my tutorials where i did var bacon equals 18 or something or var tuna equals you know some string i did that because it's very clear to understand what is a builtin reserve keyword and then what is a customizable variable name so that is kind of the reasoning behind that if you guys just thought they're kind of random and i also know that uh a lot of people don't like kind of uh teaching programming that way because in real life you're not supposed to name things bacon however when teaching to someone for the very first time and trying to look at things from their perspective um it is good to use those kind of keywords so even though making actual application i would never suggest using tuna or bacon unless you're making a program about like foods or fish or anything but um yeah there you go oh let's see la la how does one obsession with tuna where have you been still like look like a college kid thank you i feel like i'm about 80 years old stress out from a lot of different projects uh this digital currency one got going on which is a pretty big one but i'm feeling really good about it python is good for people i suggest python i love it seems to be growing strong and also one of the most well liked wait not just the voice i am not a [ __ ] he's my daddy again okay interesting uh oh i should quit college okay got it thanks so this is actually a very interesting question so one i would say that you should probably never take my advice for anything at all so that's my little disclaimer um i i don't recommend quitting college overall it's just a general piece of advice what i would recommend is for anyone in in life really to figure out where you want to be and where you're trying to go and then for yourself independently ask yourself is college the best way to get there and for a lot of professions whether it is um being a doctor or a lawyer uh dropping out of college is not a good idea at all for being a programmer and for wanting to build something unique and for wanting to focus your time and energy on learning about different different software and technology versus going to college and learning about science or gym class then it can be a consideration and another thing is that well i guess i'm always a little weary to give advice like this because i know that what worked out for me may not work out for um other people so i i really am hesitant to uh you know advocate for dropping out of school just because even saying that it seems like a silly thing to suggest but for myself it was even now i feel uh the right choice for me 100 but it's hard to give advice for other people because i don't know your situation all right all right salesforce commerce cloud uh so to anneal bk asking about salesforce commerce cloud actually never uh use that software um familiar with it but i would not be the best person to teach that i'm afraid all right all right wow lots of comments about that okay here we go the new boston how long to learn python so this is uh interesting as well because when there there's never really a time where you can say i learned this language or i didn't learn it yet the moment you pick up a book and understand the first line of a python uh tutorial then you learn python kind of like learning a language okay i took spanish in high school and i know how to say like uh my name and i know how to say like donald biblioteca like where's the library but i don't know spanish or maybe i do now even people who even myself who am a native english speaker there's like 90 language i have no idea what those words are probably so can i say that i know it so it's always this fuzzy thing where uh myself who's been writing python for 10 years more than that i guess um there are there's a vast majority of the language that i i don't know so it's uh how long to learn something it's gradual it happens over time and it never stops you can never stop getting better toothbrush or headphone or what this is a toothbrush actually like the whenever i'm making the tutorial brush the old teeth okay do you feel like the cs field in general is becoming flooded to me in school the cs major is such an impacted major so becoming flooded um i don't it depends on your perspective because is it just like are too many people learning cs uh i wouldn't say that because if lots of people are interested in cs then they should learn it they should go after what they're passionate about as for hiring i think that tech companies specifically they don't care so much about your certifications or your degree versus other areas of um career and industry so on and so forth software companies want the best software developers they want the best software developers in the world because when you release a piece of software there's no certifications or degrees attached to it so people acquire their skills through different means some people go to school and get a master's degree in cs other people go to boot camp and become amazing developers and some people just do independent study and learn on their own and each of these avenues can turn out great for people and each can turn out not so great it really depends on how you learn best as an individual some people need to go to school even for cs because they need that pressure of someone saying okay you need to be uh kind of responsible to complete these assignments and without that pressure they never progress other people it's just um they know exactly what they want to do they know exactly what they want to learn and they don't need help going down that path but whether it's a boot camp whether it is um university whether it is independent learning all of this really depends on what works best for you so i hesitate to give a general answer but hopefully that helped out tooth pressure headphone again huh okay favorite tech stack so i don't know if this has a um uh so the tech stack i like is uh django and then i like django rest framework everything on aws even that that isn't really part of the stack and still a fan of react react in redux been using redux toolkit recently but i mean if you're just gonna like rip out a traditional uh crud application or i mean you really can't go wrong with learning python or django because it's so uh popular nowadays and then on the front end with react javascript i mean that's not dying anytime soon so it's hard to go against that even though i know answering that now everyone is going to you know be debating their own stacks in like what why not angular why not node jango so yeah i uh i blame that person for starting a war in the chat okay and this is jumping around jumping around uh what about big data so i think i might have missed a question here uh something about it or just what about it all right so how is the new boston currency so fast so this is interesting that's what i like talking about all right so there are a couple inefficiencies that i saw actually since this is a stream i guess i uh okay let's just let's just uh answer this question straight up so you know whatever let's just go way back to why i uh created the network and how that came about so whenever i was creating the digital currency i never set out to create a digital currency what i was doing is i was actually um making a simulation about the entire us stock market and what i saw is that there's an opportunity if you could figure out the retailers and their suppliers to through earnings see which companies were going to most likely uh have higher earnings than expected and the reason uh pretty simple is for this if google announced 10 more earnings then that means that more or less their company was growing by 10 so therefore since they needed to you know buy additional uh merchandise buy additional computers hire more employees expand their operations then that means that whoever they purchased their supplies from whether it was intel whether it was from amd so on and so forth that they would most likely have a 10 earnings increase as well so since i was finding this correlation what i do is i mapped out a simulation with all these different companies and then i saw i essentially needed to figure out how the money was flowing between these companies to get this correlation so the money is a little bit more complicated than just seeing where it's flowing from company to company because money doesn't flow that way in real life what happens in the v1 of the simulation is i figured that i needed to add employees so when and break this down even uh more simply is that whenever a company pays employees those are people who can go to different parts of the economy and buy something in other companies so it essentially is a company to employees they spend it at another company and then that company can hire more employees or you know pay their employees and the cycle continues now breaking this down into its most simple form i thought in my mind never went to college but things kind of work like this where whenever i have a dollar and i give it to you that is minus one dollar for me and plus one dollar for you so in the end i figured it always equals zero and then when you expand it to companies playing them employees and their employees go and you know they pay taxes and stuff but then they buy other goods in my mind i figured the total economy always equaled zero but then after looking at things i saw okay whenever i plug real numbers into the simulation that it didn't equal zero or not even close and what i didn't account for in the end after you know mapping a lot of things out is how the money got into the economy in the first place that whenever i pay you a dollar that dollar needed to come from somewhere in the in the first place so i had to essentially say okay in this economy where does the money come from oh it's the banks and they loan it out and well how did the banks get the money how does this system work oh central banks do this and oh that's kind of a unique system because huh apparently what's happening is banks are giving out people loans and that's how money gets into the system and then loans are essentially promises to pay back more money than you initially receive however breaking things down let's just say that there are three people in the economy and they each took a loan out for a dollar now if there is 10 interest on that loan at the end of the year they would each have to pay back a dollar 10 cents but after a year what you would essentially have is three people pen cap dropped no i did not watch that but you would essentially have three people who took out a dollar loan so there are three dollars in the economy however if they're all standing around each other they would say wait a minute so we as a community owe three dollars and thirty cents to these banks but there are only three dollars in the total economy so and this again is a very simplified version the economy is a lot more complex than this but um essentially that's what i was uh trying to figure out and then i saw that an alternative solution was bitcoin and way back when i didn't understand what the hype of all the uh blockchain was about since it seemed like this technology that was just technology for the sake of technology and let me uh get rid of this right here so i kind of saw bitcoin similar it's like 3d tv where okay that's pretty cool but okay like it's cool technology but is it gonna take off do we really need it is it really meaningful in any way uh i couldn't really connect it in my head so after understanding this in the problem with a simulation that i was trying to figure out which ended up being a lot more than a bug fix because i ended up having to figure out how different parts of the economy work so on and so forth i saw that okay so bitcoin is actually a pretty cool solution to this but if that's the case and people have a choice between these two systems why are they choosing this over uh bitcoin or blockchain or anything i don't mean seem like a advocate for bitcoin or whatever since i know a lot of people get pretty annoying on all that but um i was just trying to figure out in my mind it was just a better solution but why if that was the case it wasn't more widespread and one of the big things even though there are lots of things is that the transaction times were a big barrier so i know right now we have the lightning network and there are lots of other improvements but essentially no one i noticed was going to go to uh a deli and buy a cup of coffee or sandwich or whatever and be waiting there for 10 minutes while their transaction was you know pending waiting to get approved so i knew that the first thing was the transaction times that i needed to speed up or at least that was um the barrier that i saw which would eventually lead me to uh start creating this project another thing was the incentive where more or less in this economy people will will do what you pay them to where they build the things uh based on economic incentive they choose jobs based on that so on and so forth now in the bitcoin blockchain that incentive comes from mining blocks it comes from the fact that not only do you validate transactions which is useful uh it's the main goal of the miners but so much of that time and energy is spent solving this puzzle it's spent devoted to something that has absolutely nothing to do with verifying the transactions itself so in the bitcoin blockchain and this all ties back to that original question by the way one sec in the bitcoin blockchain what you essentially have is a network of miners and these miners each get transactions and they bundle them together into a block and then they validate those transactions pretty quickly but then after that what they do is they solve a puzzle a puzzle that takes around 10 minutes on average to solve and the reason that they solve that has nothing to do with validating the transactions has to do with more of a human problem and that is if you picture it like this if there were a lot of students sitting at desks and you were watching like in a football stadium or something then if you just had each of those students with pencil and paper validating a transaction and in a live network they would just stand up and shout every time they validated one then it would just be mayhem there'd just be validated validated validate you couldn't understand who's first you kind of understand if they're valid communication would just be a mess so with that in mind instead of all these uh kids i don't know why they have to be kids just imagining myself in an elementary school but now imagine each of these kids validating a set of transactions or doing a test or something and then after that you give them a big crossword puzzle to fill out or maybe a word search or something maybe a sudoku problem and this is a challenging one that takes on average 10 minutes to solve well now instead of everyone shouting shout and shouting they solve these transactions and then they have to solve this and then the communication becomes more spread out at the end of 9 minutes 10 minutes somewhere around there a kid's going to stand up and said i validated these transactions and i solved the puzzle and instead of everyone shouting at once now those people all those other students are able to determine okay this person was first that communication is pretty clear now we can just validate it pretty quickly and then move on to the next puzzle so that is what i saw but what was interesting in all of this is that aside from that earlier part that i mentioned of everyone solving this puzzle validating transactions so on and so forth i noticed that there was a moment in time where one of these students in my mind stood up and then the entire network agreed that this was a student that we go with this was the one so in that moment an entire network of computers of nodes that were controlled by people who had no idea who each other were they were able to agree on something and the bottleneck and all of that was this puzzle was this puzzle that needed to be done because they needed to figure out uh who was first or who should be able to validate that block now kind of translating that to a couple problems i identified is i saw that the efficiency inefficiency in the network uh came from a couple of things so the technical technological inefficiency was first of all within each individual minor 99 of the time is spent doing something completely unrelated to the transaction validation you got a about less than one percent validating transactions and then 99 percent of time is just spent doing this puzzle so if we could cut out the puzzle that would be great another thing is the network inefficiency where in the bitcoin network you essentially have these miners all around the world trying to mine a block because when you mine it you get that bitcoin reward now whenever one miner solves the puzzle what happens is they say yo these uh transactions are valid in everyone else's work just get tossed out the window so with one minor there's just so much little work that actually mattered and everything else was just wasted more or less now the reason back to this question is why the new boston network is so fast is in the bitcoin blockchain what they do is every single block every single um puzzle that they solve they essentially say look i solved it and then everyone else agrees on that now whenever you solve block after blockout for block you have to agree as a network on black block after block after block and there are transactions happening very quickly and it takes a long time now if instead of having all these miners and they validate these blocks and then you have to decide on each of these is this one legit is this one legit is this the one legit if you take that consensus and move it down a layer where you say we don't have to agree on every single block instead let's just go ahead and agree on the minor that we want to choose that we trust the most to validate these blocks because we're essentially taking all that uh waste that happened before and removing it to the last second where if that network in the bitcoin uh if that decision in the bitcoin network that consensus was reached on the individual block then we know a network of computers can reach a consensus about something now instead of reaching about the individual block why not reach it on the node and then we can say this node is the one that we agree that we reach a consensus on is a node that we trust now we can essentially just send all transactions to them and they can validate it as fast as they can so as soon as they come in there's no need to wait for anything else so on and so forth and for these other miners they essentially turn into uh validators where they aren't just like peaceing out saying you know you don't need me anymore they're doing a couple key things they are backing up the primary validator in case it over goes down and they are also double checking their homework essentially so they just don't blindly accept this they're revalidating each and every single one so by doing that we essentially eliminate the need for a puzzle and we eliminate the network inefficiency as well because well for all of those reasons so that is uh another man got a lot of these comments so that is essentially why we are able to uh speed up the um block times so quick because we don't have to agree on every block time we have to agree on a trusted minor and then they are going to be the ones validating all of these transactions and if they ever try to lie or cheat or steal or anything you have all of these confirmation validators checking them and they are essentially going to broadcast the moment they try to you know tweak anything by one little bite so it just um leads to a a very interesting and efficient architecture okay let's uh that was way too long i got to speed these up uh let's see how to avoid burnout of learning so many things um yeah i think that kind of comes down to you aren't you don't get burnt out by learning things that you enjoy to learn you kind of get burned out by doing things that you have to do so a lot of burnout happens because of the environment rather than individual topic what about database i think i missed the earlier question there views on ethical hacking uh ethical hacking is yeah it's uh like white hat pen testing just a different area of security did you write a 10k reader all right what do you say about aws and cloud computing should i go for network automation i am a network admin uh yeah it seems to be um where the world is shifting aws cloud computing is not going anywhere anytime soon okay let's see let's see let's see man stream is just me trying to read through questions are you a freelancer or what i am not a freelancer super chat question question i saw super chat on youtube but i'm i'm actually not sure what it is okay wow way way late on this um decentralization yes yes never knew how you look like this is it where did you learn these programming languages from you look so pretty cool uhhuh why thank you and um yeah most of them most times when i was learning programming languages so i used to just uh buy the top rated book off amazon and uh sometimes i would just like buy two or three cents like they only show you a little preview and back then uh whenever i was first starting out ebooks or kindles weren't that prevalent so just um yeah just going through books and and studying and now what i like to do is i like to watch uh video courses stephen grider is probably my favorite uh instructor i love the way he teaches and any course that he teaches i would uh highly recommend okay see superchats are where megaballer millionaire youtube's get donations from viewers very cool millionaires this is interesting where mega baller millionaire youtubers get donations from viewers it sounds like those are the last people that would need donations but um yeah sounds interesting nonetheless blockchain what if the trusted minor gets corrupted or it goes rogue what can you do sorry for spamming the question no it's a good one because it definitely uh can happen the primary validator is one that is a single source of truth in validating all transactions in the network for optimization reasons primarily now the moment that they try to cheat and uh the most likely thing they can try to mess with the network a bunch of different ways but the most likely reason that they would cheat their incentive is just adding additional money to their own account so instead of me paying you 50 coins they would either try to pay themselves 50 coins so when that happens uh through the use of digital signatures all of the other confirmation validators will notice that it is a invalid transaction and they won't accept that transaction onto their blockchain because all the confirmation validators are continuously trying essentially to um sync to the block or the primary validator of blockchain so essentially when this happens the confirmation validators will reject the primary validator the primary validator will be booted more or less from the network and all these confirmation validators will inform the banks that the primary validator was cheating and through the it's a separate process but essentially the banks move on to the next most trusted confirmation validator now another cool thing is that this process would normally take a long time where uh this primary validators kind of got caught cheating and then every other node in the network had to resync okay what do we do now what do we do now who's the most next trust in but the cool thing about this is that this decision is already in place before that happens so through trust banks are already deciding if the primary validator ever goes offline or is caught cheating so on and so forth they already know what confirmation validator to move to next so that is why even in that process the transition times and the resync of the network happens very quickly okay the even docker bro yes docker tutorials coming right soon let's see this this okay so how can we get coins so coins are earned through contributing to the project so that is where i felt the incentive should be where in different networks where it's mining the incentive comes from building the fastest miner and here the incentive in the value is essentially what you put into it so the entire idea is what you put into it is the value that you should get out and the coins are just a representation of how much you help the network and how much you help the community so you get coins through different things working on projects like if you want to work on a game or analytics tool or anything that integrates with the network you can earn that through project proposals and another thing is you can just work as a weekly contributor and these are things like the front end team the back end team uh seo marketing so on and so forth design uh those types and lastly just completing a onetime task so if you don't want to help out every week and you just want to fix some bugs or make some optimizations then if you go to the website look at the tasks then there are smaller onetime tasks that you can do okay alright client so what clients do you have what operating systems you can run on so our main client is the account manager you can download it from the new boston.com and with that it was built using electron so it works on linux windows and mac os so you can buy up a bunch of coins and control the network so i so this network is not controlled by a proof of stake at all so the amount of money or coins that you have uh doesn't have any influence okay how old am i i think i'm 33 34. this was actually the hardest question oh wow okay this is uh okay bucky meant suffer engineering or cs uh so that's up to you it's uh what you're more interested in gekko question mark yeah coin gecko is cool there might have been a earlier question but okay okay uh the value basis makes sense what about speculators that just want to buy and sell at higher prices so yes the okay so the value this is another thing where the value of the coin is a difficult concept to explain because a lot of people don't think about uh value of currency in really at all before uh bitcoin they were born into a system where uh currency already existed and with bitcoin what it showed is uh currency doesn't have to be that way the value can come from what you build it into so even with that there are different types of value there are social value their monetary value which i'm sure that you are referring to in the monetary value of this is first going to be determined whenever we start selling goods and services so we're going to start selling uh stickers and tshirts the new boston on the website in the marketplace whenever that rolls out and then later they're going to go to decentralized exchanges and these decentralized exchanges uh contributors or whoever has coins are going to be able to sell them for other types of currency bitcoin ethereum so on and so forth and the exact value of that we don't know we won't know until the moment where those coins are placed for sale and an agreement is made for one person to exchange their currency for our coins stephen grider where is his courses so he is on udemy i believe uh that's where i get his courses i'm actually i'm actually not sure if he is on youtube or not if so that would be cool but yeah check them out on udemy makes awesome courses and they're uh very indepth as well okay what do you think of the future of this crypto i have very uh okay don't uh get everyone's expectations up too high but i am liking what i am seeing a lot we still have um a couple we still have a long way to go but so far things are looking very good and i just see this comment give cat bagel all right rust as well and okay so i like and rust uh what about sqlite database uh yeah sqlite is pretty cool in memory it's nice to uh just share databases it's really simple for getting started especially locally on like a django project before you port over to postgres or anything like that but uh yeah i'm a fan of it it's probably not a fan in a production setting are you guys using solidity we are not using solidity uh this is not um erc20 compatible this is it's actually a complete rewrite of the blockchain from the ground up however later on whenever we reach out to or get on decentralized exchanges then we will most likely be wrapping it in the erc20 coin and getting on that way what is my rating in chess so i actually used to be really into chess um i can't remember what my rating was i want to say i want to say like uh 1600 1700 but uh yeah and then so i was actually climbing climbing and i took chess lessons i love my chess instructor i love chess but after a while i got busy with working some other things and then i want went into a play a little bit later and my rating dipped way down so it's one of those things where if you aren't doing it frequently at least in my experience that uh some of these comments that uh i kind of lost it but i still love chess a lot all right trying to get an entrylevel job programming i learned this and this what other skills and tools must i master i feel stuck so this really depends on what specific language you're trying to get in and i would stick with like um there's no need to learn java and c plus typically you usually stick with uh one or the other kind of like um well i guess it's a little bit different for web development because with the web development you typically need a stack unless they're looking for like strictly back end or front end but it's tough to say because depending on the company that you're trying to apply for in the position um it really depends on what they are looking for but in general i will say that your best bet is to go deep into one language because if you are like an expert in one language you can almost always find a job rather than having a shallow bit of knowledge in a lot of different ones isn't proof of stake arguably better for daytoday use than proof of work so i would say from daytoday transactions it definitely makes the network faster uh the concept behind proof of stake where you're essentially rewarding people with more money uh versus proof of work where you're rewarding people for solving puzzles faster not so as far as transaction speed then proof of stake is definitely the way to go this this yeah okay how many youtube channels did i follow uh don't know 100 maybe i followed them uh over time all right so what incentive would someone have in trading their bitcoin for the coins is there an intrinsic value so i guess um the value of each of these it's essentially similar to um bitcoin where the value of that was nothing in the beginning and that's why people pay like millions of bitcoins for pizza or they're just giving them away for free whatever the value of these cryptocurrencies it only comes from the value that you you give it or the value that you build it's the value of the network and the value of currency overall doesn't have any inherent value i mean of course uh gold coins in way back then it's a little bit different but nowadays there's nothing inherently valuable about a dollar bill with a president's head printed on it the only value of currency is for the goods and services that you can exchange for it you can take a dollar bill and you can buy a candy bar or you can hire someone to mow your lawn or something but um the the only real value of currency is what you can exchange it for that has tangible value goods and services uh learn programming say watch my channel react to native all right favorite programming language i would have to go with um i'd have to go with python just because it's well i'm biased it's just my own personal opinion that i'm most familiar with it all right all right all right all right uh let's see what do i think about machine learning um yeah it seems uh useful i always felt like i was unclear on the difference between machine learning and then statistics in like a forward loop essentially even though that's a very over simplification but um yeah lots of math involved in machine learning is my sequel obsolete absolutely not and okay uh kyle had a question up here uh more centralization hmm asciis create more centralization ee that's interesting it's like a decentralized centralization i guess not a typical one but never thought about it like that still better still building racing carts i am not uh let's see okay message retracted that's interesting all right so it looks like i got to the bottom of these all right javascript or python which holds the future uh i think they're gonna be equally valuable i don't see either one of them dying down anywhere in the near future and there's still a lot of development going on with either they're getting better every year faster uh yeah so both of them in our university we're learning c programming language is it good for beginners um so this is interesting because what programming language is good for beginners so i would say that c definitely is not the most easiest one to learn however on the flip side of it you do learn a little bit more lower level indepth programming concepts so in that way even though there's a bigger barrier to learning it it gives you almost like a more clear picture about programming overall but i guess that's a kind of general in computing where the more low level the more you understand about how like the uh bits move around but of course the closer you are the lower you are then uh not so much uh easy to get started decentralized artificial intelligence hmm now we're getting some good stuff decentralize artificial intelligence decentralize artificial intelligence so i i always thought this where um and this is an interesting concept as well where whenever you have a cell in your body like your stomach cell or your lung cell or whatever your lung cell has no concept of the lung overall it doesn't know okay i'm doing this i'm doing this so uh there there's this human outside who can like uh breathe or digest food a stomach cell is just like bloop whatever noise they make it's just doing its thing so it doesn't really understand the environment that it's in and even when you put those together your lung overall it doesn't have a brain but still continues to do these things these processes without any over without any understanding of the the body that it's in it's a lung and it just does what a lung does now with that in mind right now we have a lot of different ai and they are specific to certain tests uh image recognition uh making sure that you click uh what was that what was that a movie on netflix called social dilemma pretty much all that stuff with the ai but um whenever this ai starts connecting and starts learning from one another and i think that's going to be pretty interesting and aside from that the reason that i bring up the lung cells so on and so forth is it always felt to me like as human beings there was a drive that we didn't really understand even as kids we want to build things and we want to create things but what's our drive like when i was a kid i used to build these towers out of blocks and i knew in my head that they weren't going to last forever they're just going to be knocked down but still i wanted to build the biggest tower and now i wanted to build the fastest blockchain and do this and that but for all these things i'm doing all these things i'm building putting together figuring it out it's like why what's it what's it matter at the end whether we have a big tower a fast blockchain so on and so forth and it feels like what humans are doing is they're building something that they don't quite comprehend myself included but what i do see is that people are becoming more connected and they're becoming connected faster than ever and even though i i don't know the uh the end of this or the body it's um it's interesting to see how things are tying together with the technology that we're building and these different types of ai and how they do influence us overall now i don't want to get into another social dilemma uh so on and so forth but in terms of artificial consciousness and artificial intelligence decentralization it feels like uh overall we're moving very quickly in a certain direction and it will be very interesting to see what is going to happen in the future okay uh would you say privacy is important i think this is for me yes uh 1 000 okay dynamics 365. actually am not familiar with that pretty interesting customer relationship management okay now i know about it pretty cool funny how ideas spread oh okay i missed a bunch of ones okay privacy uh bug bounty programs yeah i'm a big fan of bug bounty programs uh the pan renter how do you bridge the gap between theory and application i'm stuck knowing how to do things when i actually but not being able to actually do them pan or answer can you um let me see you can you give me a specific example this is an interesting question teach arduino that's interesting as well yes uh who is secret agent paul cool name uh teach arduino so um i'm actually i had a poll on twitter asking people what they want to learn in 2021 i have a couple different topics on the agenda but uh if you want to recommend arduino then yeah that would be definitely a possibility what are your view on blockchain technology i used to not be a fan of blockchain technology at all i didn't see the use in it but now i do see the use in it and i am a huge fan uh any experience in computer vision i do not in how should i answer this so i was never a huge fan of computer vision because in my mind there are some problems that a certain classification problems that computers are better at solving computers are much better at solving problems versus humans when there is one right answer when they need to calculate a spreadsheet for example uh computers are just gonna be way better than humans hands down no matter what however if you ask a baby or not a baby if you ask a toddler to draw a picture of a horse and then ask a programmer to write a program to draw a picture of a horse then it's a little bit different and the reason it's different or difficult for computers is because there is no one right answer of what is a horse someone could draw a pitcher with just a head someone could draw a picture of a horse jumping over someone could draw a black horse a brown horse and when you get into these classification of problems where there is not one right answer it becomes a difficult area for computers so that's why i like computer vision and image recognition i s like i see the benefit of it like you have photos of people and you want to be able to recognize them but that's why i was um not so drawn towards that because i i view technology as a way to extend the capability of humans we can't calculate these spreadsheets or total as fast as a computer can so let's use computing as a tool to allow this to reach that limit however when it comes to understanding more abstract concepts like um identifying is this picture um a good painting of a horse then some decisions i feel are better left in the hands of humans blockchain series 2021 so caleb curry is actually working on a blockchain tutorial for or a tutorial series for this have you ever heard of fast api uh yes so i am uh definitely taking i i never use it in a production environment but i these other questions all right so i never use fast api in that production environment but i looked into it recently i it looks very cool i want to take a deeper dive and that's something i may also put on the schedule favorite channel thank you very much videos help you a lot thank you very much as well and okay how do you think about using frameworks verse micro services so um we use microservices essentially so we use frameworks whenever we want to build a more complex application just because it gives you a nice pattern to use industry standards and also developers are just familiar with different types of frameworks microservices we typically use for processes that they aren't really uh that time sensitive or they're just longer running processes that kind of can be separated from your main application one example would be like um optimizing images whenever you upload images for a product or for profile so on and so forth you want that large image because you know people ever want to zoom in or whatever but you typically want a smaller thumbnail as well just because whenever you're loading a list of products for example you don't need that huge image just because it takes so much bandwidth so a microprocessor might be good in that where it's not really time sensitive you know maybe it slows it down a bit but um yeah just uh different use cases i suppose all right python in the future from ryan so this is uh interesting i don't know if you were here earlier on but i asked on the twitter poll what do you want to learn in 2021 and surprisingly people voted python is number one and surprising because i thought that they would be sick of learning python on my channel by now but um yeah apparently not why is c still popular so c is very performant which i assume is the reason it's so popular and also it's in a lot of uh different things today people you see in electronics lowlevel things but mostly performance reasons c is really the foundation for a lot of different programming languages bucky how to make a web page update by itself whenever there's a change in database so whenever you have a change in your uh data architecture you typically run something well i guess uh what i'm familiar with in my tech stack there's something called a migration where you essentially update your database and then uh after and then in parallel you update your servers and then after you update your front end but it's actually uh it's a wellknown um challenge because what you're essentially trying to do whenever you want to update your database architecture is you don't want any downtime at all however in an alternative situation what you can do is you can take a snapshot or clone of your database and then you can change the structure of it and then you can essentially deploy your new network your back end and then your front end on this uh like temporary ghost network and then once your updates are all good to go then you could route your traffic over from your old network to your new network now the main challenge with that is that even though you can essentially take a snapshot of your entire architecture update everything while the users are still using your old one and then get everything ready and then switch the traffic over you still have an issue where at the time you took that snapshot and are rolling everything over then you essentially have people still updating data here you still have people like sending messages or adding products or whatever it is now in that time is uh these two databases can get out of sync so they have something for i always forget the color it's like red green or blue green deployment what's the name of it i feel silly even yeah i think it is blue green yeah blue green deployment where it's just different models of how you essentially solve that exact problem okay wow mr wow these are lots of messages coming on okay let's see put them in the future colin or flutter i am not falling for that trap that is uh gonna start a war in this make python addon and blender so i probably will not be teaching anymore blender for a while unfortunately where you make other algorithms and data structures tutorials so someone requested this as well and i want to get your guys input so some people say uh they would like me to make algorithm and data structures tutorials other people say that there are already lots of youtube videos and content out there for it so they would prefer me to make something else but yeah uh since i got lots of people here right now what do you guys think any plans to do machine learning courses so nothing on the immediate agenda however 2021 uh we're still figuring out exactly what type of content to produce and that appears to be a pretty big one so yeah i can see it slowly moving up on the on the schedule how do you have like what's this number how do you have 1 million 468 437 different tutorial playlists did you teach yourself all that stuff uh i don't think i have quite that many but um yes i did teach myself that it's actually pretty enjoyable i like i like learning new things it's not it's not like uh learning something in school where you have to learn it it was uh i don't know it's enjoyable and that's another thing i'm very uh fortunate i can do what i enjoy in life i know not many people have that opportunity or they get stuck into a career or path in life that they're not really interested in or not really passionate about and i'm very fortunate for that opportunity all right mongodb that's another going on man a lot of stuff i want to teach privacy encryption as your proof knowledge tutorials would be cool kyle am i liking these ideas uh how to learn things fast i don't know uh to be honest i don't learn things faster than uh other people uh i i might even learn things slower i am just really obsessed with um learning things pretty uh deep and if there's one part of it i don't understand i'll just go deeper and deeper until i understand it but i would say like um if there were a bunch of people in a room and you gave us something brand new to learn and then you said okay in an hour or however long you think it takes to learn then do this test after i would probably be uh slower than the average person just that in that example um even though i might have been slower i would want to take the the content home with me and then just pour over it even when the test was over just to understand it and maybe that's not a good example because in that case i would just be learning something just for the sake of completing a test but when it comes to computing different technologies and seeing how these different technologies can be used to connect people and build awesome things then it's uh yeah it's not really learning it's just something i'm passionate about i want to figure out how things work all right web assembly okay yes weebas slow learner but the that's uh very short and yeah i feel the same way distributed computing i like that idea as well i actually have a let me see if it's here i'll show you guys a cool book so with distributed computing i would recommend this i actually think i took a it's another thing i posted a video on instagram and or not a video i posted a picture on instagram where i i put a postit note and then a slice of cheese on this book and i said art and i don't even think people realized that it was cheese i think they just thought it was postit notes so you know i was a little disappointed about that that no one saw my beautiful artwork but uh yeah point of the story is that this is a very good book for uh distributed systems all right bucky loves bacon definitely agree with that data science related technologies yeah it's a pretty big feel build your own cryptocurrency tutorials cyberpunk well you are in luck because we have a huge open source project gone to build a very innovative cryptocurrency that is going to belong to the new boston so i actually have a series uh digital currency tutorials that we're walking through everything and then also check out the github the new boston developers lots of different repos lots of activity on that as well do you have actual advice to self teaching programmers besides the whole stick with the routine so i would say that for selfteaching programmers that it's not a good idea to say i want to learn programming so i'm going to type in programming on amazon and then i'm just going to start reading through a book because with that there is no direction there is nothing to give what you're doing meaning and when you don't know where you're going you don't know where to go it's uh okay i got through this chapter should i go next chapter should i learn this other book so on and so forth now when it comes to um a more clear vision say i want to be a web developer well then things get a little bit easier then you can say okay this company that i want to look for or work for they use django and they use react so i am going to um learn django not for the sake of learning django and hoping that something good happens but i'm gonna learn it because there's a goal at the end and then i'm gonna learn react for this and learning in that sense it becomes more than just learning for the sake of learning you don't get bogged down by oh i have to read documentation or i have to get through this chapter the site in your vision is always on that final goal that final goal which is a lot more satisfying and it's a lot more clear when people learn that way okay lots of uh lots of the same comments kind of spamming oh okay let me go back up back up here hi bucky is a degree in cs worth it um is it worth it hmm it's different for everyone uh for myself it wasn't however for you it may be it's uh it depends on so it doesn't hurt i will say that uh it's not gonna hurt your chances applying somewhere if you say i got like a masters in this area of computing versus if you don't now i will say that some people learn better not in university some people need that pressure of your teacher or someone says look you need to complete this assignment uh you need to create this test you need to finish this degree so on and so forth but some people are just better independent learning some people are better reading books some people learn better watching tutorials so it's different for each person and depending on where you want to go in the path that you need to go to get there um i would say it's i know it's not the answer that a lot of people like to hear but without understanding your background your different methods where you learn best it's uh it's difficult to say all right please make tutorials on ethereum and blockchain okay you got it yes two of my uh newly favorite subject your mic looks like a toothbrush okay no uh no response nina i concur uh helping me all these years you are welcome for that could hurt you financial kyle another good point so yes a degree um that is a thing where a degree at least in the united states it costs a lot of money education costs a lot of money and another i hate saying like downsides to this but um when you go to a university and expect to get a degree after four years what that means is that alternatively if you were to go to a boot camp or selflearn in maybe not have as much knowledge but you would begin uh entering the workforce earlier then you would essentially trade those four years for like three years worth of experience so uh and i will say from uh just everyone that we have hired in the past experienced i would almost always take someone with a oneyear boot camp and three years of developer experience versus four years of university but i don't know again that depends on the type of company okay wow every time i scroll down i feel like i miss all these uh any plans to collab yeah a couple of different collabs in the works thank you a lot of uh very okay uh lots of um people saying thank you for helping out which i appreciate very much and then another slew of comments about how my microphone looks like a toothbrush which it's interesting uh go to canada not a bad idea i don't know if they would like us americans at this point in time but design patterns and the way you explain it would be awesome yeah i like that as well i also like talking about that stuff um it's a little more interesting than uh teaching programming to show how the different parts of language connect and more of a system level another note i want to show you guys let me see it wasn't it was actually a book it's called something maybe one of you guys knows it like um thinking in systems or something but it's not strictly a programming uh book but it's more of a book on like uh systems overall of how things connected how information flows from one part to another and it's useful for like uh building any type of system whether you're making a complex application uh an organization and you just have to have a different teams how does information flow between them it's just um i don't know i'm just really interested in system development for whatever reason api tutorials please another very good recommendation and oh need more mods for chat can i have mods in here oh manage moderators very cool okay how does this work and who's going to be a moderator uh let's see competition thinking protocol buffer grpc any plans yes this seems to be an ever growing area and especially with uh cryptocurrency blockchain yeah i do like that idea as well oh react.js slow mode please for chats is that the thing are you just making that up slow mode for chats i honestly don't know if uh that's a thing or not or if you just made it up but uh yes that that would be useful okay what do we got here uh does it annoy you that technology and programming languages change so fast uh no i actually um i love it so even though it does seem like um especially with like javascript front end pro well you know what a lot of different areas now that i think about it like devops frontend development uh mobile development but i do like it because it isn't changing for the sake sake of changing it's changing for the better it's changing because we have better technologies or we can uh create things faster okay no slow mode hey guys bucky here random guy what a great username uh all right what the heck is going on bucky wait i'm here in no slow mode and then i'm here bucky there is a slow mop it's very confusing how to become a billionaire i would say uh investing in cryptocurrency do you see front end being automated soon uh front you mean front end how do you mean that continue with cli noted uh tutorials on github okay nice shirt bucky yes this is my uh stretched out stretch out what day is it saturday shirt what is the purpose of life i would say that the purpose of life is to collect memories with the people you love because those are the best memories that you can collect bro you're awesome happy to see you happy to see you too uh let's see what is cryptocurrency so cryptocurrency is a currency that exists only in digital form what is my favorite crypto well of course i'm a little biased because we are making our own crypto and of course it has to be the new boston coins uh my second so i wouldn't say i have a a favorite favorite i like um i like bitcoin for what it did for cryptocurrency overall and kind of uh everything that it stands for i like ethereum for its flexibility and how it pushed uh things even further i like monero because of the focus on privacy and yeah a lot of different cryptocurrencies i like and invest in for different reasons buckies uh do i still have that sensory deprivation thing unfortunately not i moved from my house in new york to pasadena california now and i did love that if i ever have a house again i'm definitely getting another one it was a lot of work to maintain i will say a lot more than like a pool or a hot tub and uh the thing i didn't like about it is if you ever want in on vacation or anything because there was so much salt in the water because uh it didn't keep you buoyant that it would like clog up the pipes so you needed to keep it running needed to keep it filtering and you just can't it felt a little bit scary to uh like put on an automated timer or anything because they aren't like the most stable systems and uh it would leak sometimes so you know i was afraid to leave it pumping when i wasn't there because i didn't want everything like blowing up all over all over my living room tron uh not a fan of tron is a cryptocurrency yes spam lots of spam going on all right hold on guys trying to sort through these but i got some spam comment can i buy the new boston somewhere so not right now uh we have plans on the roadmap and maybe i can show you guys this should let me talk to you guys through real quick i know some people are here interested in the uh digital currency that we're making and some people aren't so try to answer it quickly so on our roadmap we're having an authentication system built into the website and then we're gonna have user profiles and more social and then we're gonna have a marketplace where they're gonna be tshirts and uh stickers and like hats and stuff for sale then after that we're gonna allow other people to add items to the marketplace like uh books maybe this elephant and uh those things behind just like uh books artwork uh bracelets whatever people want to sell kind of like ebay craigslist style and then we're gonna add the actual payment integration system in so you can add an item to your cart scan it with your phone or whatever app and then uh like let's say it's a tshirt you can type in whatever information have it mailed to you and then after that we're going to be reaching out to other websites uh actually a couple already reached out that are interested in accepting coins and the first websites that we're going to hit is essentially uh ones that sell digital goods or downloadable goods like online courses or if they have graphics music whatever just because it's such a lowcost good to deliver and then they get coins and also in addition for coins they also get a community of developers and free marketing for their site and our community benefits because we now have something else that we can spend our coins with so that's going to happen slowly over time and also once our marketplace on the new boston.com is complete we are going to be uh not only reaching out to other websites but looking to get on an exchange as well so very exciting times ahead all right what is bitcoin bitcoin is the og cryptocurrency actually wasn't the first but it was the first i don't want to say successful since that means the other ones aren't successful but uh yeah one of the main i'm getting contracted here all right uh how can i okay to answer that question bitcoin is a cryptocurrency how can i buy ethereum without coinbase so there are so there used to be these um these sites you went to kind of like uh craigslist but you had to like meet someone a person and pay them cash i don't know if they still have those but um yeah there are lots of different exchanges aside from coinbase where uh you can buy ethereum and other cryptocurrencies for um well i don't want to say us dollar i don't know where you are but uh other currencies as well bitcoin is good but will not move anymore as a store of value because it's too slow yep uh i can so i i do think bitcoin does have lots of room to grow but it will most likely be a longer term store value more like a gold is right now rather than uh kind of like i don't feel it's going to be used in daytoday transactions all right all right stop spamming guys yes all right uh let's see okay lots of uh a little bit of spam here that's all right okay bucky do you have any plans of starting on index fun or etf i do not unfortunately i'm in the valley near pasadena foo welcome to the h hole of ello oh yeah la's getting pretty rough right now i'm actually off i'm in uh pasadena near la and flying back to see my family in new york and pretty much going from like lax to new york airports and they're like the worst places in the country right now in the world in america which isn't doing too hot either and it's like it in america's spiking like crazier right now it's my great this it's not feeling like the best idea but i haven't seen my family in a very long time oh do you like tie dye i'm indifferent to die die all right uh how can cash be replaced with cryptocurrency uh yeah it's essentially uh when those shops when those stores start deciding to accept cryptocurrency and from technical point of view i don't think it will be anything that foreign to people because they really use cryptocurrency in a way uh even though like cash isn't used for the majority of transactions a lot of it is just digital credit card uh it's just numbers on a computer or on your bank account so really not that far off it's just the underlying method behind it i think will become quite different in a good way all right will the vlogs be back that is hmm that's a good question i was thinking about booting up that channel again but uh to be honest nothing really a vlog worthy to vlog about now uh just because vlogs would pretty much just be me sitting in my apartment and either working on digital currency network or making videos um probably just not the most interesting stuff since i can't really go outside now that we're on lockdown there's a question i just saw that was pretty interesting but i forgot what it was man these comments are coming fast okay okay oh do i believe in aliens okay now we're getting to the important questions do i believe in aliens hmm i'm gonna ask this for a delay since i know that you guys will be interested as well do you believe in aliens but now let's think about this so i i guess the uh the interesting thing about this is we're not exactly sure how life began we have uh different theories of course uh but we have different theories about everything so we do we do know that it's a very unique thing we do know that it's possible also i don't want to get into any uh religious debates either but um i see it it's a very um unique thing in a unique you need a very unique set of circumstances and a lot of it i'm sure happens by chance but i don't see anything scientifically that limits the fact that life can only be created on earth so with that i unfortunately i don't have any experience seeing an alien for myself um no direct evidence of that but i'm openminded that was a good question by the way your heart getting into the good stuff now all right bucky on the plane don't use the bathroom okay i won't uh how am i funding this project so yes so there are funds being spent right now a couple contractors helping out with more specialized areas as well as hosting uh for the new boston uh so on and so forth and we need like to purchase um like wordpress themes and wordpress hosting and uh for the blog and just some like miscellaneous stuff right now i'm just funding it out of my uh personal funds flutter series coming in 2021 is your mic toothbrush yes when did you start working on cryptocurrency and why started working on it uh at the beginning of this year because um i saw some optimizations for the bitcoin blockchain i saw it as a big barrier to adoption and i i wanted to solve the problems that no one else could and i knew that uh yeah if this thing got off the ground then the network that i had through the new boston and through this community that we would be able to make a very big positive impact on the world if things went well which they seem to be going very good right now all right duh okay i like eagles hearts question if you could fly or become invisible which one would you choose if i could fly i mean these are tough both would be great i mean you just can't pass up going invisible i mean animals fly birds fly planes fly but nothing could be invisible so that would be uh you know how can i pass that up okay let's see which is more button field when comparing cloud computing blockchain and big data whoo that is tough so i would rule out big data just because it was budding a while ago i see uh oh blockchain was budding a while ago too but blockchain has had a it's like a second life all of a sudden almost since the um yeah whenever this uh the virus hit in the lockdown began a lot of these things uh crash like or dipped uh cryptocurrency but then they came back very strong and a second bit of interest cloud computing uh i wouldn't even say that's budding i would say that is already butted and we are already in the bud does that make sense in the bud hey we're wrong with it all right uh story behind the new boston this is a pretty bad story where i just thought it sounded cool i didn't know whenever i created the youtube channel the new boston that it would turn into what it turned into if i didn't know that then i definitely would have pop a lot more thought into it but whenever i was just signed up for youtube i'm like what name sounds cool the new boston that sounds pretty cool so sorry to disappoint you on that build a tutorial on how consciousness works so cyberpunk this is a very this is uh interesting that you brought this up because i thought about this specific question for longer than uh i feel like a lot of other people have because i was wondering first to be able to define consciousness and then to be able to translate it into a computer you you get into a lot of um interesting questions like what is consciousness what is life what does it mean what is thinking um and i always go back to kind of uh babies when they're entering life for the first time oh they come out into a universe and they don't they're not familiar with anything they've never seen slights before never smelled never hurt sound and everything's new and they know how to do certain things uh they don't know how to do certain things and they learn a lot of things as well so part of it is what they are and what they are naturally inclined to do and the other part is their environment it's the universe around them in a way it's like um your combination of everything that's around you everything that you've ever ate everything that influenced you so on and so forth but consciousness is a very interesting subject and as far as computing goes which i'm sure a lot of you would be interested in is is it possible for a computer to have consciousness if not why not what makes humans so special that computers will never be able to do because if human consciousness can be broken down to um our brain which is just broken down to biology which can be broken on to chemistry which can be broken down in physics which can be broken down to math then if everything can be broken down to mathematics even consciousness then there's no reason why a computer can't be consciousness can't be conscious because we can program formulas into it maybe a little bit slower with the limitations of technology but to say that would say that you are uh you need a formula for a consciousness a mathematical formula and whether consciousness can be broken down to a formula is something we have yet to find out how do we become master programmers by what means it is only through tutorials of reading books how do we become that programmer that can program a lot of things probably not the answer you're looking for but um practice i would make little projects in one second getting thirsty how do we become master programmers so even that definition is uh it changes like uh got like a helicopter out outside my window so a master is masters in uh different people's eyes but i'll just say lots of practice uh build projects that you're interested in and you're passionate about and eventually you'll get there i like to know more about cryptocurrency and learn to earn okay lots of cryptocurrency on the channel 2021 and also if you want to learn more about cryptocurrency i highly recommend that you join our github since we are working as a community the new boston on which will be the greatest cryptocurrency of all time in my opinion all right let's see this thing outside can you hear that it's like a helicopter or something really annoying me can you be my spirit guide slash accountant hmm hmm yes holy there's a lot of spam okay uh do you know tequila timmy youtube channel i do not do you need a phd not sure with what when do you think we will reach singularity and what our economy will look like after singularity so this is also an interesting thing man uh eagleheart and cyberpunk are just killing it with the questions so that it depends on how you define singularity but what i do see i kind of mentioned this earlier is that we as human beings are we have a drive to build and innovate and create and it appears that things are that we're building something that we don't understand and we're building something big and what we're building even though we may not be able to explain in words what it is what's happening with technology is it's becoming more connected and it's connecting lots of people around the world and it's happening very quickly and innovation is accelerating what the end of this is all i do not know but it's a very interesting path that we are headed down especially with the uh reemergence of ai and lots of different trends as well so when do i think we reach singularity i am not sure and what will our economy look like after singularity i'm not sure either but very different than what it looks like now singularity or not oh okay let's go back back okay uh coin am i making a coin or a token on the blockchain we're making a coin and then i'm getting old to ask this but how can i stop playing games and start coding instead so for this i would say that naturally people would do what they are most passionate about if you enjoy playing games versus uh more than you enjoy building things creating things creating software then it's probably not going to happen uh to start coding instead you need you need a reason or a purpose behind anything you do i like to build things because even when i was first starting out i like the idea that you could sit your computer and you can create something that can potentially connect people all around the world and even now i like it i like um just learning about new technologies new innovations i liked i like what you can do with knowledge and passion and then the community and the software that forms around it just something i'm very passionate about so how can i stop playing games and start coding instead if you're passionate about it then follow your heart favorite teacher or favorite programmer and favorite book so my favorite teacher um so aside from like my favorite teacher in school who was mr pulaski because in fifth grade we used to trade hockey cards and uh i think he also gave me like the good end of the trade he wasn't like ripping kids off so that was just fun but my favorite teacher online right now is uh stephen grider he teaches on udemy and he teaches i just love the way he teaches the way he communicates it's so uh indepth and yeah so and what was the last one favorite book so my favorite programming book is a python cookbook just because it has lots of little neat tips and you don't have to like read it cover to cover you can kind of pick through it my favorite other book is uh oh the place is yogo by dr seuss um it's a lot of has some very it's like a book for kids but uh i don't know it just always resonated with me favorite teacher so that was the one hopping around okay what are your upcoming courses so i'm gonna finish the digital currency tutorials and then the account manager and then after that the main tutorials that you guys are looking for we are going to be rolling out with docker and aws and flutter and then after that we are essentially just going to go to the community and see what you guys want to see or listen to what you guys want to see what makes you motivated to do great things like the new boston everyday what keeps me motivated is the impact that it can have on the world so nothing i think um i think there's different types of incentive different types of motivation of course the main thing is uh financial motivation where i i have a job because i want income i want to live an apartment and i want to eat food um things i'm really passionate about where let's just pretend that everyone in the world got paid the same amount no matter what i would pretty much just be making uh youtube tutorials in teaching just because i love learning new things i like building things i like creating things that don't exist yet and solving problems that no one else has solved before and to be able to do it with the community that supports it and the bigger it gets the better it gets is just can't really ask for anything else favorite programming language in general i would say python it's hard to go uh go wrong with python and let's see developer dylan okay my cur career bucky thank you developer dylan glad i could help you out quadratic funding so this is another interesting concept so the thing about quadratic funding is that you are essentially attempting to it's a way that you are attempting to program the level of value and fairness into a uh cryptocurrency or digital economy the concept of value and fairness is i don't know if it's something that can be programmed into a formula i think it's uh an abstract concept and i think that the definition changes over time and it's different for each and every person so i think that quadratic funding is uh interesting because it solved a lot of the problems with uh fairness that a lot of people agree is you know unfair but i think that it's difficult to program these concepts of fairness of trust of value because even though we can see that these different algorithms exist uh it's almost hard to explain where and this is something else i'm noticing as well where people in a digital economy they have a lot of ideas of what is unfair or so on and so forth but then to go back and say well what is fair it's hard for them to answer because there is no one definition of what is fair what is trustworthy uh if they say where does the value come from and then to ask them how would you define value it becomes tricky it becomes difficult because there is no one answer so to take some of these ideas and programming into uh these different models or algorithms it's it's a different way of looking at it which is always good however i don't think it's the uh final solution probably shouldn't say that final solution i think that means something else is it possible to be anonymous on the internet it is possible to do a lot of things anonymously complete on anonymity is challenging try this background all right how long does it take to learn cryptocurrency you can learn the basics probably in a youtube video uh i don't know if anyone's ever gonna learn the complete uh everything there is to know about all cryptocurrencies since it's an ever growing field but um yeah basics in youtube video you can be pretty comfortable with it understanding the concepts in less than a week and then to dig down into any specific one you it takes a little bit longer okay let's see uh what is your say on go lane i like online actually um i had to port some of my applications over to going just because it is a lot more performant than python for example i think python is very good for um innovating and creating things quickly and even for a web application where you don't need to do a lot of heavy processing typically but um yeah just being able to buy i always want to make sure i don't miss any of these questions but i do like golang for a lot of different reasons pretty much all the ones that they promote on their website okay all program languages are a mess i'm working on my own i've had enough so much confusion and mess that's cool and a lot of the best program languages came from people who felt that same way where there isn't a good solution so they wanted to build a better one so yeah i'm a big fan of that as well what equipment do you use bucky uh so i use a pretty standard equipment this is a blue yeti mic i got a logic logistic webcam it's pretty simple i had to upgrade for my builtin one and then um yeah did you mean like a youtube appointment for recording cryptocurrencies are too unstable on price to use as a daily currency that is true it's a pretty uh volatile market right now probably not the best uh this early on to be like the global currency or anything but i feel like that'll stabilize over time as we've seen with bitcoin at the very beginning and then now it is more stable even though like uh jumps of 10 percent a day aren't a normal do you use vim i do not i've i've used it before but um then i don't i just like uh jet brains ides uh even though i know they have been plugged in so on and so forth but i don't want to seem like a i always feel this funny thing where um when people ask me about different software uh to give my answer it almost feels like in a way i'm like promoting them or something so jeopardians didn't pay me or anything but i mean i just really love their ides and for as complex as their ids and any are whenever they have a new release it's like majority of the time things just work so i don't know what their development process is but jet brains they got they got their stuff together tuna bacon cheese okay tbc wow the new boston coin tuned bacon cheese whoa all right when is flutter come in 2021 what kind of knowledge can we look for about anonymous what resources can you uh advise me i actually left a post i think it was on reddit a while ago about uh the best thing that you can do to be anonymous um let's see let's just see how much i remember the first thing that you can do is well you need a device you need a device to connect with the internet and if you purchase that device using a credit card or using uh any type of means where they can track you even cash where okay there's a receipt for it but now a bunch of cameras pointing towards you then uh essentially then your identity is tied to it in one way or another especially with credit card or if you pay for it online then of course that device is always going to be tied to you so the best thing that you can do in that is probably get it at a flea market or get it from uh means where your identity is not tied to that device another thing is do not use windows for sure uh i don't know i would just stick with linux i'll say that and probably something like tails since it's an entire distribution built around privacy and then for that you essentially just need to go step by step of every bit along the network uh you want nothing tied to you as much as possible maybe use tor maybe use vpn so on and so forth but those are uh different means that you can use what stack would you choose in building your next big project so this would depend on what the project is for a web application i mean i i gotta rock with uh yeah it it also depends on the architecture if you want to distribute data uh micro service architecture uh is it a desktop application does it have heavy processing is it just a web application where you can just use django and scope scale horizontally so on and so forth but it it's um it's not a one programming language or one stack fits all solution it's more of what are you trying to achieve and then choosing the best technology to fit around that uh how do you compare react angular and view so i haven't used angular in a very long time i re view i know is lightweight react is i it's hard to find too many bad things about react especially with the growth the community um the popularity i of course i'm biased but come on how can you hate react okay let's see this uh what is your take on a lot of newbies learning python is their first language one of my friends learn it but he got stuck on easily because of simplicity yeah this was uh interesting as well because someone asked earlier about c and whether it was a good first language to learn so with python you aren't going to understand the concepts that you do with c with a pointers memory management with the low level things that you would typically learn but what it does provide especially for beginners is an easy entry into programming and they get to be familiar with programming and they don't get frustrated because of some of those more challenging concepts so i i would say it's a tradeoff if they know that they want to understand the fundamentals of programming and how languages are built overall um i would recommend c but if they want to learn programming from a different perspective and maybe they don't care so much but they want to build great things and they want to build tools that they can use for their career later on then yeah python is fine okay let's see uh domains in the field of computer science have good pay and scope in the future so one of the things that has very good pay and i believe it had good pay for a while is um devops with network architecture cloud computing aws um learning about networking and devops is something especially focusing on cloud computing is something that is going to be increasing popularity and we're always going to need it and it is always one of the top paying career fields however what i would also suggest in this decision is you don't want to go into a career field strictly because it has high pay because even though it's gonna be great for a while a year or two you're gonna quickly find that you're in a position where you ended up in a career that you don't really enjoy and you're going to have to work for a very long time as most of us are before we reach retirement and given that such a large part of your life is going to be spent in the workplace you want to make sure that you don't need to like uh have it be your full passion but you need to or you should be in a job that makes you happy all right uh how do you become so good in so many languages uh i would say for any language it's just lots of studying if you're interested about it it helps a lot and i was genuinely interested about install m lots of different uh programming languages just because of what they can do so um yeah i think i think that's a big thing where if you're interested in something it it's a lot easier to become good at it because the motivation comes from yourself rather than external factors all right let's see machine learning in the future um yes this is a big thing people are requesting i didn't have it planned before this little you know uh live stream whatever you want to call it this turned out to be a very long test by the way but uh i am finding out now that a lot more people are interested in machine learning than i originally thought so that is moving up on the menu let's see spam okay a course on blockchain please come in soon toothbrush side of your headphones all right uh name tech i mentioned this but let me brief touch on it briefly what is the story behind tuna i started using tuna for variables as well as bacon not to be funny but to differ to allow beginner developers to differentiate between builtin keywords and their selfname variables since whenever i was learning programming i saw something like var num equals six and i it was hard for me to tell which was a builtin reserve keyword and then which was a variable name so that's when i started using uh tunein big and also it's kind of funny too so object tuna yeah that's what we're talking about let's see let's see okay these are moving pretty quick ah okay i find myself in a position where i can't do the practice because of the lack of thoughts about applications i can't think anything to practice uh so i believe you mean like um uh after you learn the concepts of a programming language it's hard to know where to go from there because uh it's just hard to come up with um ideas on things to create or maybe the ideas that you come up with are way too big like uh game development and of course if you're just learning the concepts it's hard to do game development so this is an interesting question um it's it's interesting because i kind of do things uh the inverse of that where it isn't so much i learn a certain concept or language and then later on um deciding what to build with it it's more so that i always have a vision or a project in mind and i know that just from just community of programmers that there are certain languages that i should learn to best create this so i would say that maybe that's a better avenue if you start with a project in mind and then learn technology in order to build that project it may give a little bit more clear direction uh motivation as well and just maybe overall so i'll try that holy moly okay webassembly spam coming on hot uh why do you go quiet for some time i would check out my hello world video it explains lots of that and let's see let's see uh did you try to restream for streaming so i was actually comparing a stream yard versus restream and caleb curry recommended streamyard so i just tried it i actually just uh set up my account and like bought the paper today seems to be pretty cool i did watch a review on restream vs stream yard and everything basically just said that it came down to preference and the uis look pretty similar so uh yeah now we're on streaming best mobile app framework this is a tough one as well i i don't know they're uh it seems to be uh kind of like reacting angular in view a lot of it honestly comes down to personal preference uh would you like elaborate on networking and cloud computing are there any topics you recommend to get started tcp uh writing your own server and php node so not so much writing your own server and php uh or node i would say start with the basics of networking as far as how do i p addresses work um in just the basics of overall network like uh difference between a router and a switch uh kind of more so the core networking fundamentals and then afterwards you can look into things like um aws and that seems to be a big one now and a lot of those have a pretty clear path for getting certified of a kind of a chain of certifications that you can go through and when you are applying for jobs certifications for cloud computing is a big thing so they'll tell you exactly through practice exams and guides what they are looking for and what you need to know to get those certifications but if you are actually looking for a job in cloud computing then i would essentially learn the basics and then go with aws certifications and that will get you to a really solid point uh let's see let's see let's see have you ever experienced burnout too much coding if it's possible to be burnt out of doing things which you like so uh there i did experience burnout before but it wasn't for it was because at work uh we were building software and it was software that i i wanted to create perfectly but it it like wasn't my idea or it was just like uh joining a company and creating software it wasn't something i was super passionate about as far as like uh the personal projects uh i wouldn't say i got burnt out it's just at the end of them like i made this application to predict uh what horses could win in horseradish racing for bedding uh that was pretty cool but i got to the end of it and then i saw that the uh the edge for the horse tracks like the casino basically was just way too high so i'm not burnt out for the projects that we work on is a community like for the open source project it's going to be very difficult to get burnt out just because you're not developing a project for like the sake of learning programming or anything even though a lot of people come and improve their skills on and so forth but it's goal at the end of it is a bigger meaning and that meaning is as long as the site is there it's never going to burn out so uh yeah i guess uh now that you got me thinking about it it's you can burn out in software development if you work on projects that you aren't really passionate about or don't really enjoy but when you have a project that you're really passionate about and something that you do enjoy it's almost like how can you get burned out by doing something you enjoy all right i am back from sleeping are you still streaming still streaming i was on stream for a couple hours that was a quick little nap how to start with selfdriving cars from scratch wow okay uh i would start with my how to build a gokart tutorial and then automate the crap out of it uh why collaboration with caleb and when you get to know him this man is teaching legend uh yeah caleb's awesome i just got to know him recently uh he reached out to me i joined this little discord community for youtubers and he was there and he just got talking and i don't know he is cool dude how do you learn something new uh i learn based on a bigger project that i'm trying to build and usually it's the technology that i know that i have to learn to build that project so uh it's essentially just part of figuring out how to build something all right all right what is your learning process this is a good one too i always i scroll down a little bit and then people leave ton of comment okay where'd you go where did you go where did you go question okay it looks like you're not gonna find that one again oh here we go sophisal drawl what is your learning process so my learning process now and as it was before is whenever i need to learn a new language or a new technology for the very first time first place i go is to amazon and i just look for the top rated books i look to make sure that they're recent if the technology itself is recent and then i get usually two or three of them just since i don't get to see the full preview and i do like ordering physical books still it's just uh a lot easier for me to read uh for some reason and then i just start going through it and i i have this thing actually i'll show you this little book stand that i can put my book in and have it right next to my computer and i just start going through page by page learning everything and if i can't find a really good book then what i like to do is uh go to udemy and see if they have any video courses as well as youtube for video courses or just different places online so through those means uh it's usually it usually gives me a pretty solid understanding and also recently what i like to do is go to udemyfirst and go through video course since it gives me since it gives me kind of a brief overview of the main concepts and then after that i would go to my book and get a little bit deeper dive into some of the concepts all right let's see winning on chad could you recommend any open source projects about beginners so yes uh all right hit the two i hate to keep bringing this up but um on so we have uh open source projects if you go to the new boston.com clam clown what if you go to the new boston.com and click on the little github link then we're building a digital currency and we are also very open to new developers so whatever your experience level whether you're brand new to programming and you just want to learn how to contribute to an open source project or if you are a senior developer engineer designer marketer seo uh we're building something that is in my mind going to be very big so uh yeah come on in we'll love to have you want to say thank you your videos help me out a lot in college well i am glad that they could help you and let's see okay someone submitting issues on the uh open source project right now how many programming languages do you know bucky so this is interesting because knowing a programming language is uh a little bit hard to define since uh there are programming languages that i typed like hello world before i wouldn't say i know those and even now being experienced as a like um developer uh knowing python on the back end it feels like it feels like the more i learn the more that i understand that i don't learn and even the developers of the python core team i would a lot of them feel like they're areas of the project that they don't know just because they only work on a certain subset at a time so it's uh difficult to answer yes thank you no need to spam i will read your questions however this spam is making it difficult to um kind of read all these different questions python web dev is any good yes i would say it is good crow academy i was inspired by your videos a lot years ago well thank you lots of new videos coming soon ai vs this is another one disaster master cool name by the way adverse blockchain what is which will be more in demand oh this is good i don't know what do you guys think both by the way are looking strong for the future yeah this one's thump me i guess uh i would say both i want to choose one but i can't i see both of them with a very bright future eagleheart says blockchain by far so go or rust man this is uh another tough one both of those are very good too watch your videos a lot in the past now i make 70k in a year creative dev sounding good uh do you have any tutorials regarding linux os for beginner yes i have uh intro to linux or maybe it's just called linux tutorials but uh if you type in the new boston linux then it'll pop up i like linux by the way ai seemingly has more options than blockchain ai could be integrated into almost anything interesting perspective do you have advice for getting started with the game modding this other question too uh for game modding i actually don't have to much experience with game modding believe it or not i'm not a big gamer myself which sounds weird since uh you know they're very big on programming and whatnot surviving the wilderness 3 probably not that was maybe i think two is enough for that is ruby and aspect j dead i hate to say that any what technology would i consider that it's not that it's not to pick a technology that to say is dead um i don't know too much about aspect j uh ruby definitely not any video coming from machine learning complete project so machine learning is something that is okay it's definitely on the menu for 2021 that's actually going to be a pretty fun series to make played played php is dead though don't hear too much buzz about php that's for sure nowadays dead is tricky to classify anything is that but yeah i probably wouldn't recommend going down php avenue python django i actually do have a python django series i actually uh now that you guys are talking about php what is the trend of php like you know they have those stack overflow uh you can pretty much see the trend of different technologies will you film tutorials about metasploit i think that i did actually yeah i think i have a series about metasploit every two interview for uh oh this is a good question ever took interview for a young dev what do you seek in a new dev so at uh my job i'm the director of engineering and have to hire a lot of people and there are times where people would come in and there would be experience developers and i'm working on a web application so there are experienced developers that are just familiar with different technologies or their attitude wasn't quite a right fit for the team and then there were younger developers that just got out of a boot camp or some that even learned on their own and they were really passionate about programming and they told me about all these side projects that they had going on on their own time and their attitude and the way that they approach learning and solving problems and the passion that they had is just uh it's a handsdown better fit than someone who's experienced and feels like not the best fit for the team so i would say for a young developer um if you're passionate about programming then apply for a job so this is another thing with developers with every developer out there you should be applying for jobs that are higher skill level than you think that you can get you should always be aiming higher than where you think because it's almost like the value of yourself as a software developer is what you teach the world that your value is so always aim higher apply for jobs higher than the position that you think you deserve and that would be my advice and even as a young developer um looking at your very first application it doesn't hurt to apply at places where you think you might be rejected the worst case scenario is that they can say no thanks and they say it politely and then you end up in the exact same situation as you were and nothing bad happened best case scenario is you get this job and you get to learn a bunch of cool stuff so yes it may be a little bit of pressure in the first uh week or two and you may have a bit more of a learning curve but that's what it's about pushing yourself and eamonn hunt why do you wear a hat while you're inside so i wear this hat because i have these headphones and you see how they're all like beat up inside so if i don't have this hat on specific specifically then these little flakes always get all over my ears and stuff so this is pretty much just uh an ear protector for these uh things that are flaking holy lots of spam here oh one second let me sift through the spam how are you doing this pandemic i'm digging it i'm digging the quarantine i mean you wake up you can wear shorts uh you know don't have to commute to work wear sweatpants it's not bad the whole you know what's going on and how it's impacting people's lives not that great bob all right please bring your videos here is about competitive programming so you're just a good source to learn it also how to join your open source project so the video series about competitive programming noted and how to join your open source project if you go to thenewboston.com then i would first suggest joining the slack community and for that on the home page you can click the little slack icon and if you just want to dig right into the code then you can either click on the little github logo or there's a section called tasks tasks that you can go and see everything there is to work on but for joining it i would highly recommend uh joining the stock community and then in intros introducing yourself telling us about your background and then uh we'll find a team to put you on because it just feels like people are more part of the community that way a little more engaged good morning from lagos nigeria what up over in lagos and this guy's name is or girl is oauth i like that very cool also nigeria is uh kind of doing awesome in uh cryptocurrency lately i i saw on google trends that nigeria is one of the top countries that has lots of interest in it did you ever try creating your own programming language bucky i did not r which language should i learn after java so this uh depends what you want to do with java maybe not another language but maybe uh something that is java specific why are you up at 2 a.m so from what you yep so for me it's on the uh oh midnight how long wow i thought i was streaming for like 40 minutes two and a half hours dang time flies all right views on flutter i am pro flutter and flutter's coming in 201 uh flutter overreact it's uh debatable okay all right 2021 resolution 2021 resolution uh the main thing is just so we have a road map for the digital currency project that i am looking forward to probably more than anything else in 2021 and then aside from that i just want to make lots of videos i want to make a lots of uh tutorials and get everything up in a buzzing again i am very excited about that as well to get back into the groove of things and now that we have an open source project an awesome community uh i'm feeling very good about 2021 especially compared to 2020 which it really isn't 20 20 even set that high of a bar let's be honest so um just looking forward to 2021 in general also in general another thing about this is i'd i'm not a big fan of resolutions because i feel like if there's something in your life that you want to improve you shouldn't have to wait till january 1st is there something in your life that you want to improve you just start improving it right away in aside aside from that it's also a good read um interesting that i'm not a fan of retros so if you work for a software company you know you have retros like uh with each sprint at the end of it i feel like people just save up the problems for like every two weeks where it's like yo if there's a problem or something you think that we could improve then you could just like mention it like a week and a half ago when this came up didn't need to save it for retro but in a way new year's resolutions are kind of just like retros in a way like what can we do better next year uh so and so forth all right so object oriented is okay so the question was what is object oriented object oriented is uh like a design pattern where instead of programming with individual functions then you use something called uh classes in objects and it allows you to store like um how can i explain this it allows you to store like state and memory with certain bits of code it's kind of hard without a text editor in front of me showing everything but there you go 2021 uninstall facebook and burn your tv that is actually not bad advice i already did uninstall facebook on all my uh mobile devices not because like i'm i'm not like a huge fan of facebook first of all but it seemed to be just be killing my battery and burn your tv i don't know if my tv would burn but also not that bad of device all right let's see how do you see the new boston in five years i have very high hopes for the new boston in five years um especially after i announced the digital currency project since it has a lot of support and it's growing very strong and we we're still in alpha right now not even in beta so i can't imagine when this thing gets the beta and after we have a marketplace release on exchange things are going to be happening very quickly looking forward to it waiting for flutter tutorial from new boston me too it's on the way uh when are they coming they're coming in 2021 early 2021 it's one of the earliest things uh let's see let's see what up whoa okay lots of comments coming in all of a sudden uh how do you feel about visual coding uh visual coding i'm not i'm not familiar with visual coding what time is it bro it's 12 14 or i am slightly after midnight but it's saturday so whatevs we're just rolling with it how's it going going great actually uh this comment says and how to start a fire oh you taught me three languages and how to start a fire that's really the four things i wanted to accomplish in your life so as long as you know three new languages and how to start fire then yeah mission accomplished what is the bucky's language choice to build a web application in 2021 nothing fancy here i'm gonna go with uh for a web application as long as it's not too processing intensive i would just stick with uh python django and react on the front end especially with bringing on new developers or growing it i mean they're such popular languages and they're growing in popularity it's it's really nice to get a solid application up quick iterate and you know nothing bad to say about those can i buy some tmb currency not at the moment we are still in alpha but after this we go beta and then we release and then at that time we're going to be uh getting on exchanges so you can't buy it yet but you can earn it which language is best to learn game programming so this is actually interesting um look into unity so in uh also another thing about game programming is i'm not a game program i never made a like a production level game so i'm probably not the best person to ask about that colin jetpack or react who those are uh uh they're just uh different technologies for different things uh after okay so it's alpha beta and then the next stage in like the software development life cycle is stable release or some people call it production but basically alpha is like almost development uh beta is this should be ready but it probably still has some bugs that we have to iron out you know get it security audited tested and so on and so forth and then at the end of beta you feel that your software is ready to go uh there's no more bugs you can find no more security holes and it's ready for production release so it's it's either called a stable release or production you know depending on terminology you use it's the same thing though okay whoa lots of comments guys these duplicate comments they're filtering out all the good questions how many computers do you have now i only have okay i don't know if so i have five but three of them are laptops and two of them are laptops that i never use one's a linux one and one's a windows one just for when i need those but usually i develop on mac just because i just like their uh products and they're unixbased which is important for the things that i built uh let's see okay come back coming back come back uh i've been on tech was ripping off your content he owes you don't know who that is but yeah if you owes me then you know what are you gonna do about it yo me ivan okay i'm a college student with not too much experience in oss how do i support the digital currency project so if you don't have too much experience and you want to learn then that's fine then there's lots of different areas in the digital currency project which is a cool thing and some you don't even have to be a developer for we have a backend team we have a frontend team we have seo we have marketing we have design we have people who are just community managers who help out around the community lots of different areas where even if you are a beginner developer and you want to kind of dip yourselves in open source development or you just want to hang out join the community that's cool come on in but lots of different areas and we accept lots of different skill levels no matter how new or how experienced you are so come in and we'll find a place for you computer specs so uh whenever i so on my macs they're pretty much maxed out aside from um the video card since i don't really do like uh video editing or i don't need a gpu for anything really just like programming you don't really need a lots of processing power and i believe my hard drive as well since a lot of the information i just store on the cloud okay let's see a local no code movement low code no code i'm not familiar with that actually loco no code what's your favorite ide i love jetbrains ide uh why upper keeps rejecting my profile i don't know and let's see tell me more about your crypto stuff what would you like to know would you consider making videos on ue4 or unity um i made a lot of videos on unreal engine before like quite a few i actually don't even remember if i made tutorials on unity or not but um probably not for the it a lot of these things i'm not sure of because a lot of it depends on what people want to see so okay bro you play video games i don't i'm not a gamer uh i play games i actually have a nintendo switch that i really like i like it because i can bring it on a plane and i don't know i just think it's uh pretty fun i like building or i like playing games that you like build systems like minecraft or i forgot these games but like you put things together and the system becomes more complex and more complex and you have to manage things i'm not a big fan of like first person shooters or anything like that all right all right what program language should i learn first uh if you don't know anything and just don't know where to start it's hard to go wrong with python okay man okay machine learning is quickly coming up on this how does a crypto get into an exchange so this is a james payne is this the same james that's a developer on the project so um there are different types of exchanges you have decentralized exchanges which are uh they are less uh official less regulated basically any exchange that allows people to add one type of cryptocurrency and trade it for another type of cryptocurrency uh most of the time when people talk about cryptocurrency exchanges they're talking about centralized exchanges like coinbase or kraken and in that case each of these have different their own rules on what you need to do to get in and a lot of them are kind of vague as well like the development community needs to be active or the cryptocurrency needs to be stable however the definition of active or stable so on and so forth are really in their hands but each of these exchanges essentially has a list of guidelines of what you need to do before you can apply to get on that exchange so it is different for each one any projects for horse racing i actually spent a lot of time uh building a application to analyze different horses um their different attributes and believe it or not there is a lot a lot of information when it comes to analyzing horses like not only their um their different speeds but their uh race history their parents their medication that they're on uh how they're racing uh the different turf and the firmness so on and so forth i had no idea that there's this much data but the reason that i really got into it was because first of all this horse track that is just uh cool to watch and i was interested in what factors uh resulted in horses winning the race and the main thing that i started out with is is it mainly the horse or is it something else because in a horse race you have the horse itself which you know it's genetics uh it's how it trained however but you also have the jockey and different jockeys have different win percentages mostly based on like experience but you also have trainers as well so the main thing i was trying to figure out is if you had a horse is a horse going to win no matter what jockey or what trainer has or if you had a horse that didn't perform so well but you gave a really nice jockey and a really strong trainer then would that have more of an impact and if it was the horse then how much did its race history matter how much does its age matter maybe some things that people don't think of really matter like how long is its tail well maybe uh most people just disregard that but maybe there is a strong correlation so just taking all of these different factors and then plugging them together where not only these individual factors that you can kind of wait but in combination as well where maybe this horse doesn't do good but it when it runs with this jockey on this type of turf then it always does good so just to find those things it was not only an interesting challenge to program but also to look at the results of okay this was what we decided uh is horse that's gonna be most likely to finish first and often so so here's the interesting thing as well on topic of all this and it's the last point and then i'll stop talking about horses but at first what i was doing whenever i was making this application is i was just using all these different variables to do like machine learning and figure out which horse would most likely come in first in the race i figured the horse that's most likely to come in first is the one that you want to bet on but that is not the case because what you also need to consider is the rate in which they will win so if there is a horse that you think has a 60 chance of winning a race now if that horse wins then you might get like um 20 on your money so if you bet a dollar you might get a dollar tony back now so let's say that horse had a 60 chance of winning there can be another horse that only has a 40 chance of winning but if this horse wins then you triple your money so you essentially just can't run it through this algorithm and look at the results because it it doesn't give you the best results over time what you need to do is run it through more realistic simulation uh considering the betting odds as well and whenever i did that what my program uh did is it really really loved to gamble on the underdog horses almost every one of its picks was like a forty to one undershot or or uh an underdog so it really loved finding these horses that had a pretty low chance of winning now the interesting thing in all of that was that these horses that any normal human being would go to horse track and they would see oh this horse has no chance uh the program was very good at picking these underdog horses that had that ended up in the top three very often so uh it was just the results that i thought it was going to give was so different than what it actually gave and what it said was the best formula and um i don't know it's just something interesting so yes in exile 5a that was my long answer to that oh okay i keep seeing these things and i try to read it but then it pops down okay vs code or pycharm i mean i gotta go with pie jar i'm very biased towards jet brains ides roller coaster tycoon that is a good one actually looked in that for switch but it didn't have that high of a rating so uh is the stream being uploaded this is actually the second stream and it was it's just like a test stream that is turning into a longer stream so is it being uploaded i would say yeah i can save it it's cool can devops engineers do development work also uh that just depends on your skill set we have some devops engineers that are also backend engineers and that's mainly because uh so when writing scripts it's usually a lot of it is python scripts in a lot of cases so yeah they definitely can okay let's see university student with not much experience is there any way to contribute to coins so yes uh the cool thing about this project in the new boston open source development community is there is no restriction on the experience level whether you're just starting out in programming whether you've been programming for a long time there is a position for everyone so come on in join a community we would love to have you and if you're new to open source development then you can learn you get better that's what everything's about here is it an erc20 it is not it is something completely different than anything that exists however we are going to have a wrapped coin to get it on these decentralized exchanges so just like wrap bitcoin we're gonna have uh wrap the new boss in which is gonna be an erc20 coin uh for that reason will this channel focus mostly on cryptocurrency now or other stuff too so we only have two more well one is partly done the digital currency tutorial series and the other one is the account manager series we have planned which is essentially the desktop application that we have for connecting to the network but then after that uh it's it's pretty much just going to be back to basics with uh docker aws flutter lots of programming lots of software related tutorials but for now since there is a big barrier for people understanding what the project's all about and how everything works i do want to get these tutorials out there and pumped out just so you know it kind of helps development but then in 2021 pretty much going back to basics okay let's see let's see let's see would you rather fight to the death with five chicken sized horses or a one horsesized chicken five chickensized horses oh i could crush shows i could crush those horses easily i mean it would be no contest and then one horsesized chicken that may be a little bit more of a battle i can see that messing me up pretty bad so definitely uh would be happy to fight five chickensized horses i would just absolutely demolish them all right i'm not really gonna hurt those animals by the way unless they come after me first then game on you know project is going to be so successful our project first of all but uh thank you and i agree thank you for the support why do vulnerabilities occur all the time is because when something gets updated it's just because um technology grows quickly and when you grow things quickly there are just some spots that kind of just like bugs where building anything uh quickly there are some areas that you overlook uh different use cases that you didn't consider especially with users where you expect them to use your software in a certain kind of way but they almost never do and they find all kinds of new ways to break it a lot of it is unintentional as well glider back computer science okay how can you earn crypto so the crypto that we are building the idea behind it is that the value comes from what you put into it so you earn it by improving the network fixing bugs joining a team helping out the community so on and so forth but it's not anything that as of now you can buy on any exchange mainly because there is still an alpha now and the network is young but no buying so far you have to earn it by helping out the network or helping out the project all right all right all right how much were your crypto be worth min twin um so that is actually going to be up to the market i am assuming hoping quite a quite a bit chat is too fast wtf why am i burping all the time now nice uh chad is too fast wtf i agree tala not even gonna say that just embarrass myself i like turtles me too aren't the horses euthanized when they are injured uh yeah i believe so and that and that was actually uh a big thing at the race well i'm sure you guys don't want to hear about horse racing all the time but um yeah just one last thing at the horse track in or it's not actually in pasadena but san anita real quick close to where i live there's like a a record number of horses being injured on the track that they have to put down and no one really understands why all these horses like it's not more than average it's like this crazy amount of horses that keep getting injured at this one specific track and they thought it was something with the firmness of the track or something like that but yeah it's just like a big mystery in the horse racing community on this track why do horses keep getting injured uh let's see how do you market yourself as a developer i would say by through your skills through your skills uh just being a very strong developer all right probably got a couple more questions here then i gotta peace out oh favorite food i do like some mac and cheese ah let's see what's your guys favorite food pizza especially 99 cent pizza in new york city can't beat it wow that's all it thoughts all right do you still use ergonomic mouse and glows i have to ergonomic mouse in this without it carpal tunnel symptoms get uh pretty bad i watch your video on ten standard after eight years started my own channel you're my inspiration bucky desi coder thank you very much actually i'm gonna check out your channel desi coder how can i join the project if you go to thenewboston.com there is a section that says join the community in one of the menus then you can either join slack or github so on and so forth but i would recommend joining slack and gal why are you using a headphone uh because if i don't then the sound comes from my computer uh and instead of going through my ears it goes to the mic and it creates an echo tacos i just see tacos here oh from the question i asked oh yeah that's another one that's an a very good what is your cultural background nothing fancy born in uh northern new york basically canada and i'm 1 8 filipino great grandpa believe it was and that's as spicy as i get otherwise everything else is pretty much just like boring white standard white person i'm from india please guide for cyber security cyber security that would be another interesting series okay all right lots of cool stuff all right so three hours i think this is good for a test um so streaming works and apparently you guys like to watch a stream as well so i'm definitely going to do this again so thank you everyone for all your questions and i'll maybe i'll schedule this uh so you know i didn't give anyone a heads up i wasn't expecting to stream for three hours today but yeah i see all the comments coming in now thank you guys thank you guys for uh hanging out with me asked some questions and it was fun so do it again now all right so i gotta go i'm pretty hungry but uh yeah thank you guys again and i will post on social media and also schedule on youtube when i'm streaming again so thank you and i'll see you later
