With timestamps:

00:00 - hello YouTube Sam here from youtube.com/
00:03 - onli gamer for the New Boston and in
00:05 - this tutorial we're going to be working
00:07 - more on the car program now if you don't
00:09 - know what this is and this code isn't
00:11 - familiar to you you might want to move
00:13 - back to the beginning of the program so
00:15 - let's go ahead and get started let's
00:17 - come down here and we'll go ahead and
00:19 - minimize our sports car class so we'll
00:22 - just comment it sports car and then
00:25 - we'll call it class okay so now let's
00:28 - make a truck class
00:32 - so we're going to go ahead and Define
00:34 - our class so we'll just call it truck
00:38 - and we'll add car uh to simplify it so
00:40 - we know uh that it inherits from the car
00:43 - class so to make it inherit all this
00:46 - stuff that the car class has we just
00:48 - want to type
00:49 - inherits
00:51 - car so now everything car has we can use
00:55 - and I'll just add some stuff in here um
00:59 - to that's specific to a truck so let's
01:02 - go ahead and create an
01:04 - enumeration so private en num and then
01:08 - we'll just do bed length for the length
01:11 - of the truck bed as let's do
01:14 - integer so we need to fill this with
01:17 - some values so we'll set short equal to
01:21 - zero so if they have a short bed it's
01:23 - going to be equal to Z and we need to do
01:26 - short bed because short is a keyword in
01:29 - visual BAS basic and it doesn't like it
01:31 - when we use that so we'll do um medium
01:36 - bed equals 1 and long bed equals 2 so
01:41 - now that we have our bed link bed length
01:44 - enumeration let's go ahead and make a uh
01:47 - cab size enumeration so we'll just go
01:50 - ahead and comment
01:56 - this so we got short medium and
02:02 - long and they'll do cab
02:06 - length
02:08 - enumeration okay so we'll start off by
02:10 - declaring this private so private in um
02:13 - and we'll
02:14 - do cab
02:17 - length as and we'll do it with type
02:19 - integer
02:20 - again and we will set single equal to
02:25 - zero and looks like we are getting an
02:29 - error again because single is a keyword
02:31 - too uh we'll do extended
02:34 - cab and let's just do one more so let's
02:38 - do something like uh what a tundra would
02:40 - have a crew Max so we got single single
02:43 - cab uh extend cab and crew
02:46 - Max so now what we need to do is create
02:49 - a variable or two variables that will
02:52 - store uh values from these enumerations
02:56 - so we'll just type
02:58 - private uh truck bed
03:02 - length and then we'll do it of type bed
03:05 - length so as bed length and then we'll
03:08 - go ahead and do uh the cab length so
03:12 - private truck cab
03:15 - length as cab
03:18 - length Okay so now we've got uh two data
03:22 - types of our enumerations that are going
03:23 - to store some information about our
03:25 - truck so what we need to do is create
03:28 - some properties that will allow that
03:29 - will allow us to get these and set these
03:33 - so we'll just
03:35 - type
03:37 - public
03:39 - property and then we'll
03:43 - do let's go ahead and call
03:47 - it the bed length so and then we want it
03:51 - to be of type bed
03:57 - length okay so now what we need to do is
04:01 - we need to add some parentheses right
04:03 - here we'll type get and it'll fill in
04:06 - the rest of it for us so what do we want
04:08 - to
04:10 - get we need to go ahead and
04:14 - return truck bed length so whenever they
04:18 - access this property is going to give
04:20 - them back uh the bed length so what are
04:23 - we going to to set it we're going to
04:25 - type
04:27 - if value
05:29 - numeration bed
05:31 - length so now uh this will work as we
05:35 - intended it to so we'll just Ty get and
05:40 - sets the bed length so now we're going
05:44 - to need to do this again for the cab
05:46 - length so gets and
05:53 - sets truck cab
05:56 - length so we'll type public
06:01 - property the cab length and what we're
06:04 - going to need to do is set it of type
06:07 - cab
06:08 - length so the reason we made uh these
06:12 - enumerations is to keep out certain
06:14 - values and make it easier to use our
06:16 - code so when we type in get here it's
06:18 - going to fill in the rest for us so to
06:21 - get it all we have to do is return truck
06:24 - cab
06:26 - length and to set it once again we're
06:28 - going to use an statement to see if it
06:31 - is a valid number so we'll just type if
06:35 - value is greater than or equal to zero
06:39 - and value is less than or equal to two
06:43 - then go ahead and set the uh the cab
06:47 - length
06:49 - so truck cab length is going to be equal
06:53 - to
06:56 - value

Cleaned transcript:

hello YouTube Sam here from youtube.com/ onli gamer for the New Boston and in this tutorial we're going to be working more on the car program now if you don't know what this is and this code isn't familiar to you you might want to move back to the beginning of the program so let's go ahead and get started let's come down here and we'll go ahead and minimize our sports car class so we'll just comment it sports car and then we'll call it class okay so now let's make a truck class so we're going to go ahead and Define our class so we'll just call it truck and we'll add car uh to simplify it so we know uh that it inherits from the car class so to make it inherit all this stuff that the car class has we just want to type inherits car so now everything car has we can use and I'll just add some stuff in here um to that's specific to a truck so let's go ahead and create an enumeration so private en num and then we'll just do bed length for the length of the truck bed as let's do integer so we need to fill this with some values so we'll set short equal to zero so if they have a short bed it's going to be equal to Z and we need to do short bed because short is a keyword in visual BAS basic and it doesn't like it when we use that so we'll do um medium bed equals 1 and long bed equals 2 so now that we have our bed link bed length enumeration let's go ahead and make a uh cab size enumeration so we'll just go ahead and comment this so we got short medium and long and they'll do cab length enumeration okay so we'll start off by declaring this private so private in um and we'll do cab length as and we'll do it with type integer again and we will set single equal to zero and looks like we are getting an error again because single is a keyword too uh we'll do extended cab and let's just do one more so let's do something like uh what a tundra would have a crew Max so we got single single cab uh extend cab and crew Max so now what we need to do is create a variable or two variables that will store uh values from these enumerations so we'll just type private uh truck bed length and then we'll do it of type bed length so as bed length and then we'll go ahead and do uh the cab length so private truck cab length as cab length Okay so now we've got uh two data types of our enumerations that are going to store some information about our truck so what we need to do is create some properties that will allow that will allow us to get these and set these so we'll just type public property and then we'll do let's go ahead and call it the bed length so and then we want it to be of type bed length okay so now what we need to do is we need to add some parentheses right here we'll type get and it'll fill in the rest of it for us so what do we want to get we need to go ahead and return truck bed length so whenever they access this property is going to give them back uh the bed length so what are we going to to set it we're going to type if value numeration bed length so now uh this will work as we intended it to so we'll just Ty get and sets the bed length so now we're going to need to do this again for the cab length so gets and sets truck cab length so we'll type public property the cab length and what we're going to need to do is set it of type cab length so the reason we made uh these enumerations is to keep out certain values and make it easier to use our code so when we type in get here it's going to fill in the rest for us so to get it all we have to do is return truck cab length and to set it once again we're going to use an statement to see if it is a valid number so we'll just type if value is greater than or equal to zero and value is less than or equal to two then go ahead and set the uh the cab length so truck cab length is going to be equal to value
