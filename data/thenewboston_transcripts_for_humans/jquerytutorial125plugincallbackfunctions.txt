With timestamps:

00:00 - hi this is Alex from PHP academy' talked
00:02 - with a video tutorial for the new Boston
00:05 - now in this video we're gonna be taking
00:07 - a look at creating a jQuery plug-in but
00:10 - this time we're going to be allowing a
00:11 - callback function for our plugin so what
00:15 - do I mean first of all by a callback
00:16 - function now let's take a look at how
00:18 - this works
00:19 - is a simple countdown where we can
00:21 - specify a single integer and we count
00:26 - down from that integer to zero when we
00:29 - reach zero we then give our you know
00:32 - indication that the function or the
00:35 - plug-in has completed and then we can
00:37 - run the callback function and in this
00:39 - case the callback function is going to
00:41 - be an alert box so when i refresh the
00:43 - page you can see that we start counting
00:45 - down from five when we reach zero or
00:50 - when we reach you know one still
00:51 - displayed but I you know haven't gone
00:53 - into technicality with the plug-in we
00:55 - show this done input field so
00:58 - essentially what we're doing here is I'm
01:00 - applying this to a difficult countdown
01:03 - we have the div here and I'm using my
01:06 - countdown plugin which I've created
01:08 - inside plug-in is I've got an option
01:11 - that I can specify from and I'm saying
01:12 - from five so we can go ahead and change
01:14 - this to ten if we like and it'll go
01:17 - ahead and count down from ten at ten
01:19 - nine eight blah blah blah and then this
01:21 - is the callback function here so when
01:23 - it's done ie when it reaches zero we use
01:26 - that weand so send this callback
01:28 - function or allow this callback function
01:30 - to be executed and that just alert it's
01:33 - done so this could be anything it could
01:35 - be something like window dot location
01:39 - sorry equals HTTP Google Doc credit UK
01:44 - for example so we could count down from
01:46 - say three you know there's there's many
01:49 - useful ways that you could go ahead and
01:51 - use this application and you see we're
01:54 - now at Google so there's you know
01:56 - there's there's a variety of you know
01:58 - ways that you could actually take use of
02:00 - callback functions particularly when you
02:03 - are creating your own functions let's
02:07 - just go back and
02:11 - okay so we need to figure out what we're
02:17 - doing now if you haven't already looked
02:19 - at creating parameters or sending
02:21 - settings to plugins I recommend you look
02:24 - at that first because I'm not going to
02:25 - be going over it too much in the
02:27 - tutorial but the main thing we're
02:29 - focusing on is this second option about
02:31 - our plug-in declaration and that is our
02:34 - callback function so we're going to be
02:36 - creating this countdown timer so if you
02:38 - wanted to follow along and create that
02:40 - as well we're going to be creating it as
02:42 - a plugin obviously and then sending this
02:45 - callback when we're done or when the
02:47 - counter reaches zero so without further
02:50 - ado let's go ahead and take a look at
02:52 - the code okay so on the index page here
02:56 - we're going to need to create an area on
02:58 - our page for the countdown to be placed
03:01 - so the numbers that are decrementing and
03:04 - eventually reaching zero are placed so
03:07 - I'm just going to go ahead and create a
03:08 - div and this is going to be called
03:10 - countdown now inside ext ojs we can use
03:14 - our countdown to apply our plugin and
03:17 - I'll plug in wherever it's called on
03:19 - which selector that it's called will
03:21 - place the countdown so this could be
03:23 - absolutely anything it could be a
03:25 - paragraph as long as it as long as you
03:27 - select using the plug-in it will always
03:29 - place the that the numbers that are you
03:32 - know decrementing in that area
03:34 - so inside ext look Jess let's go ahead
03:36 - and outline how we might want to use our
03:38 - plug-in before we go ahead and create it
03:40 - inside plug-in j/s so the first thing I
03:43 - want to do is say document dot ready and
03:46 - inside here we run a function so this is
03:49 - just standard you know sort of notation
03:52 - for when we start a jQuery application
03:55 - or jQuery code now inside here I'm going
03:58 - to go ahead and select what was it
04:01 - called countdown so we want to select
04:04 - countdown and we want to apply it the
04:06 - countdown plug-in to this now at the
04:09 - moment I'm not going to go ahead and
04:10 - specify any options we'll do that as we
04:12 - go along and as we create our plug-in
04:14 - but essentially now we are creating the
04:17 - countdown plug-in to this countdown
04:19 - selector so
04:21 - the numbers will be in here like 10987
04:25 - blah blah blah as I as I've shown you
04:27 - before we need to specify two things in
04:29 - here the first one is the options that
04:32 - we want to send to the plugin the second
04:36 - is the callback function so we'll do
04:38 - that in a minute but now let's go ahead
04:40 - and start to actually create our plugin
04:42 - so if you've already dealt with creating
04:44 - plugins we use function and sorry that
04:48 - needs to be in brackets so we use
04:50 - function and then we use a dollar sign
04:53 - in here don't worry if you're a bit
04:55 - confused with this it you know it
04:57 - doesn't sort of really make sense but
04:59 - this is the way we make plugins and then
05:02 - we come down with this sort of block
05:04 - here if that makes sense
05:05 - now after this we want to go ahead and
05:07 - write jQuery and then a line terminator
05:09 - and this here is the standard notation
05:11 - of creating or outlining a plug-in we
05:14 - then need to go ahead and name our
05:16 - plug-in so we use dollar sign in place
05:18 - of jQuery remember we would usually use
05:20 - jQuery but now we can use dollar sign
05:23 - dot F and which stands for function name
05:25 - or function and then we call our
05:28 - function you know whatever we want to
05:30 - call it as long as it doesn't conflict
05:31 - conflict with an existing plug-in or
05:34 - another functionality or another you
05:37 - know jQuery functionality now now that
05:40 - we've said dollar dollar function count
05:42 - down this is equal to a function and
05:46 - inside of here we'll go our code so here
05:49 - it goes our code now inside of here what
05:52 - we want to do is we want to go ahead and
05:56 - actually create the countdown itself
05:58 - with an interval we're going to be
05:59 - setting an interval but inside this
06:01 - function here we first of all want to
06:03 - specify which options and also callback
06:06 - so options we're going to sort of
06:08 - condense down into a list of settings
06:09 - and at the moment we've only got one and
06:11 - that was from and a particular number
06:14 - and then we have our callback function
06:16 - at the end so let's deal with this from
06:18 - 10 at the moment so specified the
06:21 - setting as as I call my plugin now I
06:23 - need to go ahead and work out how to
06:25 - handle it so the first thing I need is a
06:27 - variable called settings and this is
06:29 - array of data and that array of data
06:32 - takes the argument or parameter name and
06:35 - then a default value so I'm going to set
06:37 - the default value to 60 what I then want
06:40 - to do is check if a user has provided
06:42 - these options now this settings hit not
06:45 - to be confused with the option set but
06:48 - what we want to do is we want to go
06:50 - combine them if options have been
06:52 - provided ie if the user has typed in
06:55 - here so I'm gonna say if options and the
07:01 - block that we want to run if options are
07:03 - available is we want to extend settings

Cleaned transcript:

hi this is Alex from PHP academy' talked with a video tutorial for the new Boston now in this video we're gonna be taking a look at creating a jQuery plugin but this time we're going to be allowing a callback function for our plugin so what do I mean first of all by a callback function now let's take a look at how this works is a simple countdown where we can specify a single integer and we count down from that integer to zero when we reach zero we then give our you know indication that the function or the plugin has completed and then we can run the callback function and in this case the callback function is going to be an alert box so when i refresh the page you can see that we start counting down from five when we reach zero or when we reach you know one still displayed but I you know haven't gone into technicality with the plugin we show this done input field so essentially what we're doing here is I'm applying this to a difficult countdown we have the div here and I'm using my countdown plugin which I've created inside plugin is I've got an option that I can specify from and I'm saying from five so we can go ahead and change this to ten if we like and it'll go ahead and count down from ten at ten nine eight blah blah blah and then this is the callback function here so when it's done ie when it reaches zero we use that weand so send this callback function or allow this callback function to be executed and that just alert it's done so this could be anything it could be something like window dot location sorry equals HTTP Google Doc credit UK for example so we could count down from say three you know there's there's many useful ways that you could go ahead and use this application and you see we're now at Google so there's you know there's there's a variety of you know ways that you could actually take use of callback functions particularly when you are creating your own functions let's just go back and okay so we need to figure out what we're doing now if you haven't already looked at creating parameters or sending settings to plugins I recommend you look at that first because I'm not going to be going over it too much in the tutorial but the main thing we're focusing on is this second option about our plugin declaration and that is our callback function so we're going to be creating this countdown timer so if you wanted to follow along and create that as well we're going to be creating it as a plugin obviously and then sending this callback when we're done or when the counter reaches zero so without further ado let's go ahead and take a look at the code okay so on the index page here we're going to need to create an area on our page for the countdown to be placed so the numbers that are decrementing and eventually reaching zero are placed so I'm just going to go ahead and create a div and this is going to be called countdown now inside ext ojs we can use our countdown to apply our plugin and I'll plug in wherever it's called on which selector that it's called will place the countdown so this could be absolutely anything it could be a paragraph as long as it as long as you select using the plugin it will always place the that the numbers that are you know decrementing in that area so inside ext look Jess let's go ahead and outline how we might want to use our plugin before we go ahead and create it inside plugin j/s so the first thing I want to do is say document dot ready and inside here we run a function so this is just standard you know sort of notation for when we start a jQuery application or jQuery code now inside here I'm going to go ahead and select what was it called countdown so we want to select countdown and we want to apply it the countdown plugin to this now at the moment I'm not going to go ahead and specify any options we'll do that as we go along and as we create our plugin but essentially now we are creating the countdown plugin to this countdown selector so the numbers will be in here like 10987 blah blah blah as I as I've shown you before we need to specify two things in here the first one is the options that we want to send to the plugin the second is the callback function so we'll do that in a minute but now let's go ahead and start to actually create our plugin so if you've already dealt with creating plugins we use function and sorry that needs to be in brackets so we use function and then we use a dollar sign in here don't worry if you're a bit confused with this it you know it doesn't sort of really make sense but this is the way we make plugins and then we come down with this sort of block here if that makes sense now after this we want to go ahead and write jQuery and then a line terminator and this here is the standard notation of creating or outlining a plugin we then need to go ahead and name our plugin so we use dollar sign in place of jQuery remember we would usually use jQuery but now we can use dollar sign dot F and which stands for function name or function and then we call our function you know whatever we want to call it as long as it doesn't conflict conflict with an existing plugin or another functionality or another you know jQuery functionality now now that we've said dollar dollar function count down this is equal to a function and inside of here we'll go our code so here it goes our code now inside of here what we want to do is we want to go ahead and actually create the countdown itself with an interval we're going to be setting an interval but inside this function here we first of all want to specify which options and also callback so options we're going to sort of condense down into a list of settings and at the moment we've only got one and that was from and a particular number and then we have our callback function at the end so let's deal with this from 10 at the moment so specified the setting as as I call my plugin now I need to go ahead and work out how to handle it so the first thing I need is a variable called settings and this is array of data and that array of data takes the argument or parameter name and then a default value so I'm going to set the default value to 60 what I then want to do is check if a user has provided these options now this settings hit not to be confused with the option set but what we want to do is we want to go combine them if options have been provided ie if the user has typed in here so I'm gonna say if options and the block that we want to run if options are available is we want to extend settings
