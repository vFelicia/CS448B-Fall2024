With timestamps:

00:00 - all right everybody welcome back to
00:02 - another amazing series and in the last
00:05 - couple series we built out a digital
00:07 - currency framework to allow anyone in
00:09 - the world to create their own digital
00:10 - currency
00:11 - so in this series what we're going to be
00:13 - doing is we're going to be working on an
00:15 - exchange to allow us to trade our coins
00:18 - with one another
00:19 - now for this project we're going to be
00:20 - using react and Redux on the front end
00:22 - and Django on the back end so if you
00:25 - haven't already make sure to check out
00:27 - my Pro Django series because the back
00:31 - end for this project is going to be
00:32 - built using all of those foundational
00:34 - Concepts
00:35 - so in this series what we're going to be
00:38 - doing is taking things even further
00:39 - learning even more advanced concepts
00:42 - such as dealing with external Services
00:44 - we're going to be looking at some
00:46 - front-end and back-end optimization
00:48 - stress testing and so on now before we
00:51 - hop into any code let's just go ahead
00:54 - and get a really high level overview of
00:56 - the entire project how everything is
00:58 - going to be set up
00:59 - so at high level we are going to have
01:02 - our Exchange Server and this is going to
01:04 - be the server that's written in Django
01:06 - and this is going to be connected to
01:08 - many different cores or digital
01:10 - currencies and what users are going to
01:13 - be able to do is deposit their coins
01:15 - into their exchange account and then
01:18 - once deposited they can trade those
01:20 - coins for any other coins and then of
01:23 - course users are going to be able to
01:24 - withdraw their coins at any time so
01:27 - pretty simple but there you go so now
01:30 - let me go ahead and show you what I have
01:31 - for the UI so far so of course basic
01:34 - sign in and create account page going to
01:37 - go ahead and sign in and when you do
01:38 - you're going to be taken to this course
01:40 - page
01:41 - now this of course is just a list of all
01:43 - the cores that are currently connected
01:45 - to the exchange just two quick ones that
01:47 - I set up before this
01:49 - and also the plan for the future of
01:53 - course is for anyone to be able to come
01:54 - in here and add a core without any you
01:57 - know extra intervention at all but for
01:59 - right now I have it set up where only I
02:01 - can add course and that's just to
02:04 - prevent people from coming in and
02:05 - spamming creating creating a bunch of
02:07 - fake cores so if you do have an actual
02:11 - core up and running and you want me to
02:13 - add it just go ahead and send me over
02:15 - the domain name and the display image in
02:19 - Ticker on Discord my username on there
02:22 - if I have this pulled up my username is
02:25 - the New Boston easy to remember so just
02:27 - go ahead and send me over that info and
02:30 - what I'll do is I'll do some quick
02:31 - testing to make sure everything's set up
02:33 - properly and then I'll manually add it
02:35 - in and of course like I said in the
02:37 - future we're going to have logic built
02:39 - into the back end to do all this testing
02:41 - automatically to make sure your core is
02:43 - set up properly
02:44 - before we enable it for trading but for
02:48 - MVP this process is manual so there you
02:51 - go now in addition to this page I also
02:54 - built out this wallets page right here
02:56 - so users are going to be able to create
02:58 - wallets for any currencies that they
03:00 - want
03:01 - and whenever they do each wallet is
03:03 - going to come with a deposit account
03:05 - that you can see right here and this is
03:08 - where you're going to send coins to and
03:10 - actually let me uh show you how this is
03:12 - going to work so I'm on the wallet for
03:15 - the new boston.net right now
03:18 - so let me go ahead and log into my
03:20 - Django admin for it and all right so let
03:25 - me copy my deposit account
03:27 - and all right so here's my account and
03:30 - let me just add like a 2001 coins to the
03:34 - account manually right now because I
03:36 - want to show you something
03:38 - so after you deposit coins to this
03:41 - account go ahead and click this refresh
03:43 - button right here and this is just gonna
03:45 - tell the um exchange to fetch the
03:47 - updated balance which you can see just
03:49 - updated to 2001 and then once you have
03:52 - coins in your deposit account you can
03:55 - just click this button right here to
03:57 - transfer them to your main account so
03:59 - this is my deposit account balance this
04:01 - is my main account balance and I'm about
04:03 - to click this button just keep an eye on
04:04 - this and boom there you go now another
04:07 - thing to remember is that your core is
04:10 - going to charge a onecoin transaction
04:11 - fee so that's why I always add one more
04:14 - coin then the total amount that I want
04:17 - to have moved over to my main Exchange
04:19 - balance and also if you click on this
04:23 - row right here you can see the details
04:25 - of the transaction the block ID sender
04:28 - recipient so on and so forth
04:30 - so there you go and of course if you
04:33 - click on this tab right here you can
04:34 - withdraw to any account now for
04:38 - withdraws let me just go ahead and uh
04:40 - while withdraw to this account I just
04:43 - want to show you something
04:44 - so whenever you are withdrawing it kind
04:47 - of Acts uh the inverse logic of that
04:50 - so if I want to withdraw a thousand then
04:53 - whenever I do withdraw that it's going
04:56 - to charge that one coin transaction fee
04:59 - and the account that you're withdrawing
05:01 - to that receiving account is going to
05:02 - end up with one less than that so you
05:05 - drew a thousand it automatically
05:07 - deducted one coin and you end up with
05:09 - 999 in your account
05:11 - so just want to point out those details
05:13 - however once you have coins in your main
05:16 - Exchange account you can begin trading
05:18 - so to trade head over to the trade page
05:21 - and the first thing you need to do is
05:23 - Select an asset pair and this of course
05:26 - just means what coins do you want to
05:29 - trade for each other so of course VTX
05:31 - 10B means you want to trade VTX for tmb
05:34 - nothing to uh fancy there and using this
05:37 - form you can create orders Now by
05:40 - creating an order you are indicating
05:42 - your intention to trade and there are of
05:46 - course two order types buy orders and a
05:49 - buy order is pretty much stating that
05:51 - you want to acquire the first currency
05:54 - you see here which I'm calling the
05:56 - primary currency
05:57 - and a sell order means that you want to
06:00 - sell or get rid of this primary currency
06:03 - so for example in the Spy order you can
06:05 - say I want to buy five VTX at a price of
06:09 - 90 NB and of course for this you would
06:12 - be paying a total of 45 tmb or you know
06:16 - quick example you want to sell five VTX
06:19 - at a price of 11 tnb
06:22 - and in this case when the order gets
06:24 - filled you will receive 55 tnb
06:28 - so when I say fill let's actually go
06:31 - ahead and talk about these fill statuses
06:33 - right now
06:34 - so actually let me go ahead and place
06:35 - one of these orders and I'll show you
06:38 - the default status of it so whenever you
06:41 - place one of these orders it's going to
06:43 - say buy order created and this is going
06:45 - to create what's called an open order
06:48 - so in open order is the default status
06:51 - whenever you first create any order it
06:54 - basically means that the order has been
06:56 - placed and is open on the market in
06:58 - other words it's just waiting to be
07:00 - matched with a suitable counter order
07:03 - now this filled status right here what
07:07 - this means is that the entire order for
07:10 - example this buy order it has been
07:12 - matched with a counter order and that
07:15 - this entire order is now complete so
07:18 - that's kind of the goal of these orders
07:19 - to get them filled
07:21 - now the last well second to last status
07:24 - is partially filled and what this means
07:28 - is part of your order has been matched
07:30 - and filled but not the entire order so
07:33 - this typically happens if your order is
07:35 - quite large and it's going to require
07:37 - multiple counter orders in order to
07:39 - complete it
07:41 - and this is in this example
07:44 - um the user placed the large buy order
07:46 - in a smaller sell order came in so it
07:49 - could fill part of it but there's still
07:52 - 40 more VTX left until this buy order is
07:55 - filled and it's the same thing if you
07:57 - have this buy order this cell order is
08:01 - going to be filled but then if you have
08:03 - another cell order that comes in that's
08:05 - more than that 40 then this one is going
08:08 - to be considered partially filled even
08:10 - though this entire buy order is now
08:12 - filled
08:13 - so a little bit tricky if you're not
08:15 - familiar with trading to get used to it
08:17 - but once we get into the code and start
08:19 - seeing things it's going to become very
08:21 - intuitive
08:22 - and the last fill status I want to talk
08:24 - about that I don't have anything diagram
08:26 - for is just the canceled status and this
08:30 - is something that you can do to your
08:32 - orders let's hop over to this orders
08:34 - page right now
08:35 - so any of your orders that are currently
08:38 - open or partially filled you can just go
08:40 - ahead and cancel them and whenever
08:43 - they're canceled it just means that it's
08:44 - going to be removed from What's called
08:46 - the order book
08:48 - and it's not going to be filled
08:49 - basically however you think have
08:51 - canceled in your head that's what this
08:53 - cancel status is going to mean now
08:55 - another thing I want to point out is
08:56 - that whenever you create an order the
08:59 - funds are going to be deducted from your
09:02 - main account and this is to prevent
09:04 - people from placing orders and then
09:06 - withdrawing those coins needed to fill
09:07 - those orders immediately off the
09:09 - exchange or else you know the system is
09:11 - going to run into a whole bunch of
09:12 - problems
09:13 - so to prevent that just remember that at
09:17 - the time when you place it those are
09:19 - when the funds are deducted and not when
09:21 - the order is filled
09:23 - now on that note I do want to talk about
09:26 - the last main topic that we need before
09:29 - we kind of hop into the code and that is
09:31 - refunds and overpayments so check this
09:34 - out say that you place a buy order and
09:37 - what was this example a hundred VTX for
09:40 - 12 tnb so I want to buy 100 VTX at a
09:44 - price of 12 tnb now you can see whenever
09:48 - I hit buy I'm not going to but well
09:50 - again let's just do it whenever I hit
09:53 - buy that's going to cost me 1200
09:56 - um tnb so we can see in this example
10:00 - that 1200 tnb is what I paid now let's
10:04 - say that there was a sell order for a
10:06 - hundred VTX at 10 tnb so basically I'm
10:10 - indicating that I'm willing to pay 12
10:13 - tnb for this but the seller says hey
10:16 - um yeah this is only a 10 tnb this cost
10:19 - so I'm actually going to be overpaying
10:22 - by two tnb per VTX
10:25 - so in this case 1200 tnb was the amount
10:28 - that I paid however the actual cost of
10:30 - that was only a thousand tnb so in this
10:34 - case since I already paid at the end of
10:37 - this transaction I'm going to have 210b
10:39 - refunded to my account so again as a
10:43 - quick recap whenever a buy order is
10:45 - matched with a sell order at a different
10:47 - price the order is always executed at
10:50 - the lower price and whatever additional
10:53 - amount needs to be refunded gets
10:54 - refunded back to the buyer and that is
10:58 - pretty much it I mean yeah there are
11:00 - some more details here and there but
11:02 - this is pretty much how the exchange is
11:04 - going to work again like I said the UI
11:06 - isn't that complicated but it's going to
11:09 - allow us to test a bunch of cool new
11:11 - programming Concepts and I thought this
11:13 - would be a very cool project because
11:16 - um like both sides of this need to be
11:18 - updated in real time we're going to be
11:20 - working with websockets and just a lot
11:22 - of cool technology now another thing
11:25 - that I want to point out is I'm going to
11:27 - log out and I'm going to go to this
11:29 - create an account page
11:31 - whenever you go to create an account you
11:34 - can see that there is an invitation code
11:36 - required right now
11:37 - now we are going to be changing this in
11:40 - the future as well but for right now I
11:42 - just want to you know prevent spammers
11:44 - from creating thousands of accounts but
11:47 - in the future we can Implement either an
11:50 - email verification system or a captcha
11:52 - or possibly some kind of improved invite
11:55 - system we'll discuss that a little bit
11:57 - later on but for right now I just want
12:00 - to point out that if you do want to kind
12:02 - of test around follow the series and you
12:04 - want to invite code just go ahead and
12:06 - message me on Discord say one invite
12:08 - code and I'll send you over one
12:10 - and on that note let's see what else we
12:13 - got to cover uh the source code of
12:15 - course if you want to check it out this
12:17 - is going to be available at github.com
12:20 - the New Boston hyphen Developers
12:23 - the backend code is going to be in the
12:26 - new Boston backend this is going to be
12:28 - all the Django code in the front end for
12:31 - this all the react and Redux is going to
12:33 - be in the new Boston front end and if
12:35 - anyone comes across any bugs then just
12:37 - go ahead and feel free to report them in
12:40 - the GitHub issues
12:42 - so go ahead to the repo just click on
12:44 - issues and submit new issue and aside
12:47 - from that if you really have any trouble
12:50 - with anything else or even if you have
12:53 - any just uh General feedback or
12:54 - suggestions let me know I'd love to hear
12:56 - reach out to me on Discord send me a
12:58 - message
12:59 - and on that note in the upcoming videos
13:02 - we are going to be like I said testing
13:04 - all of this logic manually all of you
13:08 - know these fill statuses what we're
13:09 - going to be doing is we're going to be
13:11 - going through testing everything and
13:13 - then once we're done with our manual QA
13:16 - we'll begin writing automated tests and
13:19 - then once both manual QA and automated
13:22 - testing is complete we'll go ahead and
13:24 - start on optimizations stress testing
13:27 - and a bunch of fun stuff
13:29 - trying to break the app any way that we
13:31 - can it's going to be awesome so yeah
13:34 - thank you for watching don't forget to
13:36 - subscribe and I will see you in the next
13:38 - video

Cleaned transcript:

all right everybody welcome back to another amazing series and in the last couple series we built out a digital currency framework to allow anyone in the world to create their own digital currency so in this series what we're going to be doing is we're going to be working on an exchange to allow us to trade our coins with one another now for this project we're going to be using react and Redux on the front end and Django on the back end so if you haven't already make sure to check out my Pro Django series because the back end for this project is going to be built using all of those foundational Concepts so in this series what we're going to be doing is taking things even further learning even more advanced concepts such as dealing with external Services we're going to be looking at some frontend and backend optimization stress testing and so on now before we hop into any code let's just go ahead and get a really high level overview of the entire project how everything is going to be set up so at high level we are going to have our Exchange Server and this is going to be the server that's written in Django and this is going to be connected to many different cores or digital currencies and what users are going to be able to do is deposit their coins into their exchange account and then once deposited they can trade those coins for any other coins and then of course users are going to be able to withdraw their coins at any time so pretty simple but there you go so now let me go ahead and show you what I have for the UI so far so of course basic sign in and create account page going to go ahead and sign in and when you do you're going to be taken to this course page now this of course is just a list of all the cores that are currently connected to the exchange just two quick ones that I set up before this and also the plan for the future of course is for anyone to be able to come in here and add a core without any you know extra intervention at all but for right now I have it set up where only I can add course and that's just to prevent people from coming in and spamming creating creating a bunch of fake cores so if you do have an actual core up and running and you want me to add it just go ahead and send me over the domain name and the display image in Ticker on Discord my username on there if I have this pulled up my username is the New Boston easy to remember so just go ahead and send me over that info and what I'll do is I'll do some quick testing to make sure everything's set up properly and then I'll manually add it in and of course like I said in the future we're going to have logic built into the back end to do all this testing automatically to make sure your core is set up properly before we enable it for trading but for MVP this process is manual so there you go now in addition to this page I also built out this wallets page right here so users are going to be able to create wallets for any currencies that they want and whenever they do each wallet is going to come with a deposit account that you can see right here and this is where you're going to send coins to and actually let me uh show you how this is going to work so I'm on the wallet for the new boston.net right now so let me go ahead and log into my Django admin for it and all right so let me copy my deposit account and all right so here's my account and let me just add like a 2001 coins to the account manually right now because I want to show you something so after you deposit coins to this account go ahead and click this refresh button right here and this is just gonna tell the um exchange to fetch the updated balance which you can see just updated to 2001 and then once you have coins in your deposit account you can just click this button right here to transfer them to your main account so this is my deposit account balance this is my main account balance and I'm about to click this button just keep an eye on this and boom there you go now another thing to remember is that your core is going to charge a onecoin transaction fee so that's why I always add one more coin then the total amount that I want to have moved over to my main Exchange balance and also if you click on this row right here you can see the details of the transaction the block ID sender recipient so on and so forth so there you go and of course if you click on this tab right here you can withdraw to any account now for withdraws let me just go ahead and uh while withdraw to this account I just want to show you something so whenever you are withdrawing it kind of Acts uh the inverse logic of that so if I want to withdraw a thousand then whenever I do withdraw that it's going to charge that one coin transaction fee and the account that you're withdrawing to that receiving account is going to end up with one less than that so you drew a thousand it automatically deducted one coin and you end up with 999 in your account so just want to point out those details however once you have coins in your main Exchange account you can begin trading so to trade head over to the trade page and the first thing you need to do is Select an asset pair and this of course just means what coins do you want to trade for each other so of course VTX 10B means you want to trade VTX for tmb nothing to uh fancy there and using this form you can create orders Now by creating an order you are indicating your intention to trade and there are of course two order types buy orders and a buy order is pretty much stating that you want to acquire the first currency you see here which I'm calling the primary currency and a sell order means that you want to sell or get rid of this primary currency so for example in the Spy order you can say I want to buy five VTX at a price of 90 NB and of course for this you would be paying a total of 45 tmb or you know quick example you want to sell five VTX at a price of 11 tnb and in this case when the order gets filled you will receive 55 tnb so when I say fill let's actually go ahead and talk about these fill statuses right now so actually let me go ahead and place one of these orders and I'll show you the default status of it so whenever you place one of these orders it's going to say buy order created and this is going to create what's called an open order so in open order is the default status whenever you first create any order it basically means that the order has been placed and is open on the market in other words it's just waiting to be matched with a suitable counter order now this filled status right here what this means is that the entire order for example this buy order it has been matched with a counter order and that this entire order is now complete so that's kind of the goal of these orders to get them filled now the last well second to last status is partially filled and what this means is part of your order has been matched and filled but not the entire order so this typically happens if your order is quite large and it's going to require multiple counter orders in order to complete it and this is in this example um the user placed the large buy order in a smaller sell order came in so it could fill part of it but there's still 40 more VTX left until this buy order is filled and it's the same thing if you have this buy order this cell order is going to be filled but then if you have another cell order that comes in that's more than that 40 then this one is going to be considered partially filled even though this entire buy order is now filled so a little bit tricky if you're not familiar with trading to get used to it but once we get into the code and start seeing things it's going to become very intuitive and the last fill status I want to talk about that I don't have anything diagram for is just the canceled status and this is something that you can do to your orders let's hop over to this orders page right now so any of your orders that are currently open or partially filled you can just go ahead and cancel them and whenever they're canceled it just means that it's going to be removed from What's called the order book and it's not going to be filled basically however you think have canceled in your head that's what this cancel status is going to mean now another thing I want to point out is that whenever you create an order the funds are going to be deducted from your main account and this is to prevent people from placing orders and then withdrawing those coins needed to fill those orders immediately off the exchange or else you know the system is going to run into a whole bunch of problems so to prevent that just remember that at the time when you place it those are when the funds are deducted and not when the order is filled now on that note I do want to talk about the last main topic that we need before we kind of hop into the code and that is refunds and overpayments so check this out say that you place a buy order and what was this example a hundred VTX for 12 tnb so I want to buy 100 VTX at a price of 12 tnb now you can see whenever I hit buy I'm not going to but well again let's just do it whenever I hit buy that's going to cost me 1200 um tnb so we can see in this example that 1200 tnb is what I paid now let's say that there was a sell order for a hundred VTX at 10 tnb so basically I'm indicating that I'm willing to pay 12 tnb for this but the seller says hey um yeah this is only a 10 tnb this cost so I'm actually going to be overpaying by two tnb per VTX so in this case 1200 tnb was the amount that I paid however the actual cost of that was only a thousand tnb so in this case since I already paid at the end of this transaction I'm going to have 210b refunded to my account so again as a quick recap whenever a buy order is matched with a sell order at a different price the order is always executed at the lower price and whatever additional amount needs to be refunded gets refunded back to the buyer and that is pretty much it I mean yeah there are some more details here and there but this is pretty much how the exchange is going to work again like I said the UI isn't that complicated but it's going to allow us to test a bunch of cool new programming Concepts and I thought this would be a very cool project because um like both sides of this need to be updated in real time we're going to be working with websockets and just a lot of cool technology now another thing that I want to point out is I'm going to log out and I'm going to go to this create an account page whenever you go to create an account you can see that there is an invitation code required right now now we are going to be changing this in the future as well but for right now I just want to you know prevent spammers from creating thousands of accounts but in the future we can Implement either an email verification system or a captcha or possibly some kind of improved invite system we'll discuss that a little bit later on but for right now I just want to point out that if you do want to kind of test around follow the series and you want to invite code just go ahead and message me on Discord say one invite code and I'll send you over one and on that note let's see what else we got to cover uh the source code of course if you want to check it out this is going to be available at github.com the New Boston hyphen Developers the backend code is going to be in the new Boston backend this is going to be all the Django code in the front end for this all the react and Redux is going to be in the new Boston front end and if anyone comes across any bugs then just go ahead and feel free to report them in the GitHub issues so go ahead to the repo just click on issues and submit new issue and aside from that if you really have any trouble with anything else or even if you have any just uh General feedback or suggestions let me know I'd love to hear reach out to me on Discord send me a message and on that note in the upcoming videos we are going to be like I said testing all of this logic manually all of you know these fill statuses what we're going to be doing is we're going to be going through testing everything and then once we're done with our manual QA we'll begin writing automated tests and then once both manual QA and automated testing is complete we'll go ahead and start on optimizations stress testing and a bunch of fun stuff trying to break the app any way that we can it's going to be awesome so yeah thank you for watching don't forget to subscribe and I will see you in the next video
