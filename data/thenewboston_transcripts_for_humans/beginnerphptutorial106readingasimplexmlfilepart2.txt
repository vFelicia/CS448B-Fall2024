With timestamps:

00:00 - hi this is Alex from PHP academy.org and
00:03 - this is a PHP video tutorial for the New
00:06 - Boston now in this tutorial I'm going to
00:09 - be slightly advancing on the last part
00:12 - of looking at simple XML and this time
00:15 - we're going to deal with what happen if
00:16 - we have child um elements inside of our
00:20 - XML document so at the moment our XML
00:23 - document looks like this we have uh
00:25 - currently four producers however what
00:28 - happens if we want to add some
00:30 - further information about these
00:32 - producers and I don't mean further
00:34 - information about credentials like their
00:36 - name or their age and let's just delete
00:38 - these two so we can keep an eye on
00:40 - what's going on here so inside each
00:43 - producer I want to specify a show that
00:46 - they've both produced so for example
00:49 - here I'm going to say show and I'm going
00:52 - to end
00:54 - show now I'm going to provide some
00:56 - details about this show so
01:00 - show
01:03 - name um a
01:06 - show and let's say show
01:10 - date show
01:14 - date and then let's give a date so let's
01:16 - say
01:18 - um
01:20 - 12th
01:22 - December 2010 for example okay so now
01:26 - let's copy and paste this
01:31 - and put in another show so show
01:34 - name another show and let's change this
01:37 - to the
01:39 - 4th of
01:42 - July
01:44 - 2009 okay so now Alex has
01:48 - produced two shows with these
01:51 - credentials in here so we've got show
01:53 - name and show date um but we've also
01:56 - maintained specific information about
01:58 - our producer so we're coming into sort
02:01 - of a database like structure where we've
02:03 - got the name and the age of our producer
02:05 - then we've got two different shows that
02:07 - they've produced so not only are we
02:09 - accessing each producer but we're now
02:11 - accessing data about each show that
02:13 - they've produced let's just add one for
02:15 - Billy so we can uh use that as an
02:18 - example so inside here we want uh let's
02:22 - just line these up show
02:24 - name better
02:27 - show and let's change the date 20 7 uh
02:31 - keep it at July and we'll just change
02:33 - this to the um 25th for
02:37 - example okay so now let's go back to our
02:40 - index.php
02:41 - page so we've already established that
02:44 - we've got a forre uh uh language
02:47 - construct uh which is looping through
02:49 - each producer as a producer now what we
02:52 - can do is we can Echo out these
02:54 - producers names by using this
02:58 - structure so we've established that we
03:00 - can do that we can put a line break so
03:02 - let's go uh go back to our page and
03:04 - refresh and you can see that we've got
03:06 - Alex and then a line break and Billy so
03:08 - we've produced the names of our um of
03:11 - our of our
03:13 - producers now what we could even do is
03:16 - uh incorporate the age so let's um let's
03:19 - create some uh brackets
03:23 - here and then inside the brackets I want
03:25 - to put their age so
03:28 - producer age
03:31 - okay so what this is doing is it's um
03:33 - giving us the producer name the the name
03:36 - tag inside each producer so we've got
03:40 - um we've got Alex and age and then we've
03:44 - got um sorry we've got Alex then 21 and
03:47 - billion 16 uh so that should gather the
03:50 - data from each one and then we can do a
03:52 - line break afterwards so let's refresh
03:55 - and see if that's worked okay yes so
03:56 - we've now got the age in Brackets let's
03:59 - put just a space in there to make sure
04:01 - that's neat so now underneath what
04:03 - happens if I want to list each show now
04:07 - you might think that we could just say
04:10 - Echo
04:12 - producer um let's go back to rxm our
04:16 - document see what we've got
04:20 - um then we could
04:22 - say show and then we could
04:27 - say show name
04:30 - well absolutely let's refresh and you
04:33 - can see a show under Alex however what
04:37 - this has done is it's oh let's put a
04:39 - line break so we can see what we're
04:41 - doing properly however we're only
04:44 - showing one show for one show for Alex
04:48 - and one show for Billy now Billy does
04:49 - have one show that's correct however
04:52 - Alex has two shows we've got a show uh
04:55 - let's go back we've got a show in
04:57 - another show and Billy has just got his
04:59 - one show better show so what do we do in
05:02 - this case well all we need to do is we
05:04 - need to create another for each
05:06 - statement inside hip here but this time
05:08 - what we do is we say for each
05:13 - producer and then we say for each
05:16 - producer um show uh no what's it called
05:21 - yep for each
05:24 - producer
05:26 - show as show
05:29 - now what we can do is we've taken each
05:32 - producer's show and we're now able to
05:35 - access elements inside this or our tags
05:38 - inside of this so now let's Echo out
05:42 - show remember we we're using the
05:44 - variable that we created here and then
05:47 - we can say show name for
05:50 - example and then we can um say put a
05:53 - space or say on um and then we can say
05:58 - show show date so we're accessing this
06:01 - specific information that's relative in
06:04 - our Loop to each um producer so let's
06:09 - refresh and see what data we get back
06:11 - we'll just create a line break there
06:13 - first of all let's
06:15 - refresh um now what you can see that's
06:17 - happened is we've because we've looped
06:20 - again for each
06:22 - show we've now accessed another um
06:27 - another uh tier or another
06:30 - um how can I
06:31 - explain um another dimension of our XML
06:35 - um structure so now what we've done is
06:37 - we've been able to return specific data
06:39 - on every show that this um specific
06:43 - producer has produced and therefore
06:46 - Billy always only has one um because
06:50 - that's um he's only produced One show so
06:53 - now with this example you can do another
06:56 - for each Loop if you wanted and then
06:58 - another one inside that to access each
07:00 - element of this depending on the
07:02 - structure so remember with XML the
07:04 - structure is always going to say the
07:05 - same but the data is going to vary so
07:08 - for example if we were to copy and paste
07:10 - this show
07:11 - here and then change this to another
07:14 - show two for example on the 5th of July
07:17 - you can now see that um our page will
07:19 - update and put more data in it so the
07:22 - structures remain the same and as long
07:24 - as we adhere to the structure and
07:26 - exactly the same tag names then our data
07:29 - is going to be updated even if we're
07:31 - using multi-level data

Cleaned transcript:

hi this is Alex from PHP academy.org and this is a PHP video tutorial for the New Boston now in this tutorial I'm going to be slightly advancing on the last part of looking at simple XML and this time we're going to deal with what happen if we have child um elements inside of our XML document so at the moment our XML document looks like this we have uh currently four producers however what happens if we want to add some further information about these producers and I don't mean further information about credentials like their name or their age and let's just delete these two so we can keep an eye on what's going on here so inside each producer I want to specify a show that they've both produced so for example here I'm going to say show and I'm going to end show now I'm going to provide some details about this show so show name um a show and let's say show date show date and then let's give a date so let's say um 12th December 2010 for example okay so now let's copy and paste this and put in another show so show name another show and let's change this to the 4th of July 2009 okay so now Alex has produced two shows with these credentials in here so we've got show name and show date um but we've also maintained specific information about our producer so we're coming into sort of a database like structure where we've got the name and the age of our producer then we've got two different shows that they've produced so not only are we accessing each producer but we're now accessing data about each show that they've produced let's just add one for Billy so we can uh use that as an example so inside here we want uh let's just line these up show name better show and let's change the date 20 7 uh keep it at July and we'll just change this to the um 25th for example okay so now let's go back to our index.php page so we've already established that we've got a forre uh uh language construct uh which is looping through each producer as a producer now what we can do is we can Echo out these producers names by using this structure so we've established that we can do that we can put a line break so let's go uh go back to our page and refresh and you can see that we've got Alex and then a line break and Billy so we've produced the names of our um of our of our producers now what we could even do is uh incorporate the age so let's um let's create some uh brackets here and then inside the brackets I want to put their age so producer age okay so what this is doing is it's um giving us the producer name the the name tag inside each producer so we've got um we've got Alex and age and then we've got um sorry we've got Alex then 21 and billion 16 uh so that should gather the data from each one and then we can do a line break afterwards so let's refresh and see if that's worked okay yes so we've now got the age in Brackets let's put just a space in there to make sure that's neat so now underneath what happens if I want to list each show now you might think that we could just say Echo producer um let's go back to rxm our document see what we've got um then we could say show and then we could say show name well absolutely let's refresh and you can see a show under Alex however what this has done is it's oh let's put a line break so we can see what we're doing properly however we're only showing one show for one show for Alex and one show for Billy now Billy does have one show that's correct however Alex has two shows we've got a show uh let's go back we've got a show in another show and Billy has just got his one show better show so what do we do in this case well all we need to do is we need to create another for each statement inside hip here but this time what we do is we say for each producer and then we say for each producer um show uh no what's it called yep for each producer show as show now what we can do is we've taken each producer's show and we're now able to access elements inside this or our tags inside of this so now let's Echo out show remember we we're using the variable that we created here and then we can say show name for example and then we can um say put a space or say on um and then we can say show show date so we're accessing this specific information that's relative in our Loop to each um producer so let's refresh and see what data we get back we'll just create a line break there first of all let's refresh um now what you can see that's happened is we've because we've looped again for each show we've now accessed another um another uh tier or another um how can I explain um another dimension of our XML um structure so now what we've done is we've been able to return specific data on every show that this um specific producer has produced and therefore Billy always only has one um because that's um he's only produced One show so now with this example you can do another for each Loop if you wanted and then another one inside that to access each element of this depending on the structure so remember with XML the structure is always going to say the same but the data is going to vary so for example if we were to copy and paste this show here and then change this to another show two for example on the 5th of July you can now see that um our page will update and put more data in it so the structures remain the same and as long as we adhere to the structure and exactly the same tag names then our data is going to be updated even if we're using multilevel data
