With timestamps:

00:00 - hello YouTube sam here from youtube.com
00:03 - slash on live gamer from the new Boston
00:06 - and in this tutorial we're gonna learn a
00:08 - little bit more about graphics so you
00:11 - can see here that I have the graphics
00:12 - demo open if you don't know what this is
00:15 - you may want to move back to the
00:16 - previous tutorial and we just created
00:19 - this app that whenever you click draw a
00:21 - rectangle it'll draw a rectangle onto
00:24 - the form now you can see that we don't I
00:27 - deleted the code that drew drew the
00:29 - rectangle onto the form and we're gonna
00:32 - be doing something a little bit
00:33 - different now so come over here to form
00:35 - one click your lightning bolt and we
00:38 - need to find the click event so here's
00:42 - our click well double-click on it
00:44 - so whenever the person clicks on form 1
00:47 - what we want to do is let's just say
00:51 - draw new rectangle now we will get an
00:59 - error when we do this because there's no
01:01 - such thing as draw a new rectangle so we
01:03 - need to create it
01:04 - so private sub draw new rectangle and
01:10 - we're going to need the exposition so by
01:15 - the exposition as integer and then the Y
01:21 - position so Y position as integer okay
01:30 - so whenever they draw the rectangle and
01:32 - whenever they click draw a new rectangle
01:34 - let's just go ahead and type G dot draw
01:39 - rectangle will do or let's do a fill
01:44 - rectangle so G dot fill rectangle and
01:48 - we'll do brushes dot let's make it cadet
01:54 - blue and then we will do the exposition
01:58 - so x-position y-position and we'll just
02:05 - make it 60 by 60
02:10 - okay so now all we need to do is we need
02:14 - to pass the expose position and the Y
02:16 - position to our draw a new rectangle
02:18 - method so you can see here that we have
02:23 - four for more click we have five
02:25 - Alcindor as system object the sender is
02:28 - the object of the form and then we have
02:31 - E as system event args now he has a
02:34 - whole bunch of stuff that we can use so
02:36 - for our event args we're just going to
02:39 - use e dot X and e dot Y but you can see
02:52 - that there is no such thing as e dot X
02:55 - and e dot Y so what we need to do is
02:57 - change to something else so right now is
03:01 - it is system event args we need to
03:04 - change it to Mouse event args
03:08 - so Mouse event arguments so what this is
03:13 - going to do is when we access a dot X
03:16 - it's going to give us the x position of
03:17 - the mouse so a dot X it says gets the
03:21 - x-coordinate of the mouse during the
03:23 - generating Mouse event so we're going to
03:27 - draw a new rectangle at position x and y
03:31 - now you could do all of this right here
03:34 - up in form one click but it's always
03:36 - good to put it in a different method
03:39 - so that's easier to change in the future
03:41 - so we'll go ahead and run this and you
03:45 - can see that when I click the top-left
03:48 - corner of our square is going to be
03:50 - where I clicked again you can see it's
03:54 - going to keep adding new squares so what
03:58 - we can do is so that we create a new
04:02 - square each time we just need to refresh
04:05 - the form so me dot refresh says forces
04:09 - the control to invalidate it's client
04:11 - area and immediately redraw itself so it
04:14 - redraws itself and gets rid of any
04:16 - graphics that are already on there so
04:20 - it draws a square and then when we click
04:23 - it again it's gonna draw a square
04:25 - somewhere else and the squares disappear
04:31 - each time and it draws a new square now
04:34 - we can even draw it behind our button so
04:40 - go ahead put this code in if you have it
04:43 - it's very simple just make sure that you
04:46 - change eetu mouse event args so that you
04:49 - can access the x position and the Y
04:51 - position of the mouse you have any
04:56 - questions leave them in the comments and
04:58 - then once you've done that go ahead and
05:00 - move on to the next tutorial

Cleaned transcript:

hello YouTube sam here from youtube.com slash on live gamer from the new Boston and in this tutorial we're gonna learn a little bit more about graphics so you can see here that I have the graphics demo open if you don't know what this is you may want to move back to the previous tutorial and we just created this app that whenever you click draw a rectangle it'll draw a rectangle onto the form now you can see that we don't I deleted the code that drew drew the rectangle onto the form and we're gonna be doing something a little bit different now so come over here to form one click your lightning bolt and we need to find the click event so here's our click well doubleclick on it so whenever the person clicks on form 1 what we want to do is let's just say draw new rectangle now we will get an error when we do this because there's no such thing as draw a new rectangle so we need to create it so private sub draw new rectangle and we're going to need the exposition so by the exposition as integer and then the Y position so Y position as integer okay so whenever they draw the rectangle and whenever they click draw a new rectangle let's just go ahead and type G dot draw rectangle will do or let's do a fill rectangle so G dot fill rectangle and we'll do brushes dot let's make it cadet blue and then we will do the exposition so xposition yposition and we'll just make it 60 by 60 okay so now all we need to do is we need to pass the expose position and the Y position to our draw a new rectangle method so you can see here that we have four for more click we have five Alcindor as system object the sender is the object of the form and then we have E as system event args now he has a whole bunch of stuff that we can use so for our event args we're just going to use e dot X and e dot Y but you can see that there is no such thing as e dot X and e dot Y so what we need to do is change to something else so right now is it is system event args we need to change it to Mouse event args so Mouse event arguments so what this is going to do is when we access a dot X it's going to give us the x position of the mouse so a dot X it says gets the xcoordinate of the mouse during the generating Mouse event so we're going to draw a new rectangle at position x and y now you could do all of this right here up in form one click but it's always good to put it in a different method so that's easier to change in the future so we'll go ahead and run this and you can see that when I click the topleft corner of our square is going to be where I clicked again you can see it's going to keep adding new squares so what we can do is so that we create a new square each time we just need to refresh the form so me dot refresh says forces the control to invalidate it's client area and immediately redraw itself so it redraws itself and gets rid of any graphics that are already on there so it draws a square and then when we click it again it's gonna draw a square somewhere else and the squares disappear each time and it draws a new square now we can even draw it behind our button so go ahead put this code in if you have it it's very simple just make sure that you change eetu mouse event args so that you can access the x position and the Y position of the mouse you have any questions leave them in the comments and then once you've done that go ahead and move on to the next tutorial
