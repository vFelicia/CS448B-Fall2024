With timestamps:

00:00 - what is going on everybody welcome to
00:02 - your fourth C++ tutorial and in this
00:04 - story we're going to be covering some of
00:06 - the code C in in C n is a special way
00:10 - that the user can interact with the
00:13 - program so up to this point we just
00:16 - built programs that pretty much you know
00:18 - maybe they display some text on the
00:20 - screen maybe they added a couple things
00:22 - together maybe they had some variables
00:24 - but there really wasn't any way for the
00:27 - user to interact with the program send
00:30 - information in and you know it was
00:33 - really kind of a static boring program
00:35 - so in this story we're going to be
00:38 - changing all that so let's go ahead and
00:39 - first you lie some of the things that we
00:42 - learned already and let's go ahead and
00:44 - declare a variable and I'm just going to
00:47 - name it AG canaima X if you want um I'm
00:50 - just going to name an age because I'm
00:52 - going to build a program that ask the
00:54 - user how old they are
00:55 - and they're going to enter a value and
00:58 - it's going to be stored in the variable
01:00 - age so let's go ahead and make a basic C
01:03 - out um how old are you with question
01:07 - mark and then just go ahead and end that
01:09 - line so we already know that does prints
01:11 - out how old are you on the screen now we
01:14 - need to have a way that the user can
01:17 - enter a number and whatever number they
01:21 - enter is going to be stored in the
01:22 - variable age and check this out probably
01:25 - the easiest thing you will ever learn
01:27 - see out right here what this does is it
01:30 - displays information out to the screen
01:33 - but see in what this does is it allows
01:36 - the user to input information into the
01:39 - program so see out spits information out
01:42 - of the program CN lets you input
01:44 - information into the program it's pretty
01:47 - clever huh and another thing the
01:49 - operator right here notice that it's 2
01:53 - greater than signs instead of 2 less
01:55 - signs it kind of you can kind of see if
01:57 - you look at it like a arrow the way
02:00 - you're spitting information into the
02:02 - program so see in and make sure your
02:05 - arrows are facing right instead of left
02:07 - and then go ahead and type whatever
02:09 - variable you want to store that
02:11 - information
02:13 - so what's going to happen is this it's
02:15 - going to say how old are you and on the
02:17 - next line there is going to be a
02:18 - blinking cursor and this means the user
02:20 - is supposed to input information they're
02:23 - going to type in a number like five or
02:25 - something and when they press Enter that
02:28 - number is going to be stored in the
02:30 - variable age so now age is equal to five
02:34 - in this case so now all we have to do is
02:36 - you know you don't have to do this but
02:38 - let's go ahead and write lucky is make
02:41 - sure you spell that wrong and H years
02:48 - old with explanation point what the heck
02:50 - not so now let me go ahead and tuck this
02:52 - it's bugging me Bucky is age years old
02:56 - so let's go ahead compile and run this
02:58 - and see what we get how old are you so
03:02 - that's that first C out right there and
03:05 - now I'm going to go ahead and enter 23
03:07 - press Enter and when I press ENTER that
03:10 - 23 is going to be stored in age and now
03:13 - check this out Bucky is age which is now
03:16 - 23 years old now let's just go ahead and
03:19 - cancel out that so that is a way you can
03:21 - use C in to have the user enter
03:25 - information into the program you don't
03:28 - always have to assign your variables
03:30 - something right when you create them you
03:33 - can you know build in your program to
03:35 - have the user assign a value to them
03:37 - themselves and hold on I got an itch in
03:40 - my ear that was satisfying all right now
03:44 - let's go ahead and delete this and I'll
03:46 - give you guys one more example of how
03:48 - you can use C in to build a basic
03:50 - calculator not the funnest thing but you
03:53 - know it'll do for this tutorial so let's
03:54 - go ahead and declare three variables and
03:56 - a into B int sum so what this program is
04:02 - going to do is allow the user to enter
04:03 - two numbers a and B and then it's going
04:06 - to add them up for them and it's just
04:08 - going to you know display your number is
04:10 - our sum I'll probably just print out
04:11 - some so anyways we won't give them a
04:14 - prompt you when you usually build
04:16 - program you want to give them a prompt
04:17 - about what they need to do like enter
04:19 - two numbers but since I'm talking to you
04:22 - guys you know what's going on so let's
04:23 - go ahead
04:24 - sinn a so the first number they get an
04:28 - enter is going to be stored in the
04:30 - variable a the second number the enter
04:32 - is going to be stored in the variable B
04:34 - and now that we have two numbers we can
04:36 - go ahead and take make sure it's all
04:39 - lined up take that variable sum
04:42 - and assign a value whatever they enter
04:44 - for a plus whatever they entered for B
04:47 - so we are allowing them to enter a and B
04:51 - and we are creating some ourselves by
04:54 - taking the sum of a and B and now that
04:58 - we have the sum we can just go ahead and
05:00 - print out C out I'll give them a little
05:02 - message is the sum of yo numbers is no
05:06 - that's pretty dumb I'll just go ahead to
05:08 - the year numbers is and then just go
05:12 - ahead and put some right there and might
05:15 - as well in line make everything nice and
05:17 - neat so let me check myself for errors
05:20 - and it looks pretty good execute compile
05:22 - and run this shiz right here and now we
05:25 - enter two numbers let's go ahead and
05:27 - enter 43 and it's give us some 567 the
05:31 - sum of your numbers is 610 well
05:35 - beautiful program we have so what we did
05:37 - is we entered a we entered B and then
05:40 - behind the scenes we calculated the sum
05:42 - and stored it in the variable sum and so
05:46 - the sum of your numbers is and then it
05:48 - printed out that variable sum which is
05:50 - 610 simple enough
05:52 - pretty dang sweet if you ask me so that
05:55 - is how you can you see in not only to
05:57 - input information in your program but
06:00 - also use it to uh you know actually
06:03 - that's pretty much anything you can use
06:04 - it for but uh yeah that's it so anyways
06:07 - thank you guys for watching don't forget
06:09 - to uh let's see what you guys can do buy
06:11 - my iPhone apps check out my forum rate
06:14 - this video five do something cool that I
06:16 - will be proud of you for so uh don't
06:18 - forget to check out the next video don't
06:20 - forget to subscribe and I'll see you
06:21 - guys later
06:22 - oh and by the way if you want any of
06:23 - this code I'll be posting it in the
06:25 - forum in the link below so if you want
06:27 - it go check it out it's free see you
06:30 - guys later

Cleaned transcript:

what is going on everybody welcome to your fourth C++ tutorial and in this story we're going to be covering some of the code C in in C n is a special way that the user can interact with the program so up to this point we just built programs that pretty much you know maybe they display some text on the screen maybe they added a couple things together maybe they had some variables but there really wasn't any way for the user to interact with the program send information in and you know it was really kind of a static boring program so in this story we're going to be changing all that so let's go ahead and first you lie some of the things that we learned already and let's go ahead and declare a variable and I'm just going to name it AG canaima X if you want um I'm just going to name an age because I'm going to build a program that ask the user how old they are and they're going to enter a value and it's going to be stored in the variable age so let's go ahead and make a basic C out um how old are you with question mark and then just go ahead and end that line so we already know that does prints out how old are you on the screen now we need to have a way that the user can enter a number and whatever number they enter is going to be stored in the variable age and check this out probably the easiest thing you will ever learn see out right here what this does is it displays information out to the screen but see in what this does is it allows the user to input information into the program so see out spits information out of the program CN lets you input information into the program it's pretty clever huh and another thing the operator right here notice that it's 2 greater than signs instead of 2 less signs it kind of you can kind of see if you look at it like a arrow the way you're spitting information into the program so see in and make sure your arrows are facing right instead of left and then go ahead and type whatever variable you want to store that information so what's going to happen is this it's going to say how old are you and on the next line there is going to be a blinking cursor and this means the user is supposed to input information they're going to type in a number like five or something and when they press Enter that number is going to be stored in the variable age so now age is equal to five in this case so now all we have to do is you know you don't have to do this but let's go ahead and write lucky is make sure you spell that wrong and H years old with explanation point what the heck not so now let me go ahead and tuck this it's bugging me Bucky is age years old so let's go ahead compile and run this and see what we get how old are you so that's that first C out right there and now I'm going to go ahead and enter 23 press Enter and when I press ENTER that 23 is going to be stored in age and now check this out Bucky is age which is now 23 years old now let's just go ahead and cancel out that so that is a way you can use C in to have the user enter information into the program you don't always have to assign your variables something right when you create them you can you know build in your program to have the user assign a value to them themselves and hold on I got an itch in my ear that was satisfying all right now let's go ahead and delete this and I'll give you guys one more example of how you can use C in to build a basic calculator not the funnest thing but you know it'll do for this tutorial so let's go ahead and declare three variables and a into B int sum so what this program is going to do is allow the user to enter two numbers a and B and then it's going to add them up for them and it's just going to you know display your number is our sum I'll probably just print out some so anyways we won't give them a prompt you when you usually build program you want to give them a prompt about what they need to do like enter two numbers but since I'm talking to you guys you know what's going on so let's go ahead sinn a so the first number they get an enter is going to be stored in the variable a the second number the enter is going to be stored in the variable B and now that we have two numbers we can go ahead and take make sure it's all lined up take that variable sum and assign a value whatever they enter for a plus whatever they entered for B so we are allowing them to enter a and B and we are creating some ourselves by taking the sum of a and B and now that we have the sum we can just go ahead and print out C out I'll give them a little message is the sum of yo numbers is no that's pretty dumb I'll just go ahead to the year numbers is and then just go ahead and put some right there and might as well in line make everything nice and neat so let me check myself for errors and it looks pretty good execute compile and run this shiz right here and now we enter two numbers let's go ahead and enter 43 and it's give us some 567 the sum of your numbers is 610 well beautiful program we have so what we did is we entered a we entered B and then behind the scenes we calculated the sum and stored it in the variable sum and so the sum of your numbers is and then it printed out that variable sum which is 610 simple enough pretty dang sweet if you ask me so that is how you can you see in not only to input information in your program but also use it to uh you know actually that's pretty much anything you can use it for but uh yeah that's it so anyways thank you guys for watching don't forget to uh let's see what you guys can do buy my iPhone apps check out my forum rate this video five do something cool that I will be proud of you for so uh don't forget to check out the next video don't forget to subscribe and I'll see you guys later oh and by the way if you want any of this code I'll be posting it in the forum in the link below so if you want it go check it out it's free see you guys later
