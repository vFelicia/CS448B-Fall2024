With timestamps:

00:00 - all righty y'all welcome back and in
00:03 - this video we're going to learn about
00:04 - docker images containers
00:06 - and the docker server now that's all
00:09 - going to be great but before we do that
00:11 - i just want to show you something
00:13 - interesting i just want to know if
00:15 - anyone else
00:16 - has experienced this or if i'm the only
00:18 - one it's only on my
00:19 - computer but it drives me nuts where
00:21 - whenever you copy and paste something
00:23 - from google drive
00:25 - these single quotes and double quotes
00:26 - are different from the ones that you uh
00:30 - type into your ide
00:31 - so it's like slanted like five degrees
00:35 - it's so hard to notice but anyways okay
00:38 - let's uh let's go ahead and get to the
00:40 - video enough of me chatting
00:42 - okay docker images and containers
00:46 - a lot of people whenever they're
00:47 - researching docker they get a little bit
00:48 - confused on what exactly the differences
00:51 - between each because at first glance it
00:54 - seems like they have a pretty similar
00:55 - purpose
00:56 - and in fact they're quite different so
01:00 - in another thing i want to mention real
01:01 - quick i don't
01:03 - typically like going over like
01:05 - vocabulary terms until we get to the
01:07 - point in time
01:08 - where we actually have to learn that
01:10 - term because i think
01:12 - i don't know just like in your brain you
01:13 - have nothing to uh connect it to or to
01:15 - relate it to so it's
01:16 - hard to remember or hard to learn
01:18 - however
01:20 - it is so sprinkled in everything we're
01:22 - going to be talking about in these
01:24 - upcoming videos i thought it was
01:25 - important to kind of go over some of
01:26 - these things early on
01:28 - so in this video it is mainly going to
01:30 - be about the concepts and in the next
01:32 - couple
01:33 - start getting those hands dirty all
01:34 - right so that said
01:36 - what is an image an image is a read-only
01:38 - template
01:40 - that contains a set of instructions for
01:42 - creating
01:43 - a container so again plain english
01:46 - it's pretty much the set of instructions
01:48 - on how to create a container
01:50 - a container is a runnable instance of an
01:54 - image so it's its own isolated
01:57 - environment like we saw
01:58 - in the last video that runs inside of
02:01 - your operating system
02:02 - and each of these containers almost like
02:05 - its own computer
02:06 - it has its own memory it has its own
02:09 - networking
02:10 - it has resources separate from your main
02:12 - operating system
02:13 - all right so we can see the fact that a
02:16 - container is basically like a little
02:17 - server
02:18 - running on your computer and an image
02:21 - is the instructions on how to create
02:23 - these little servers simple enough
02:25 - now hop back over into your terminal and
02:27 - run docker
02:29 - version and i want to point out two
02:32 - things and that is
02:34 - docker version it lists client and
02:37 - server so each of these have a version
02:41 - but this is interesting so i thought
02:45 - you know i just downloaded docker got
02:47 - one thing
02:48 - and you know i was expecting one version
02:51 - number but
02:51 - what are these two things running right
02:53 - here well believe it or not
02:55 - whenever you download a docker there
02:57 - were think of it like two things that
02:59 - came with it
03:00 - the first thing is the docker server or
03:03 - the docker daemon
03:04 - this is the background process that runs
03:08 - that can create images run containers
03:11 - it's basically
03:12 - what you think of as docker running on
03:15 - your computer
03:16 - now the other thing that it came with
03:18 - was the docker cli
03:20 - this is the command line tool that we
03:23 - use to type into
03:24 - so we can interact with the docker
03:26 - server now check this out
03:28 - go ahead and run docker run hello world
03:32 - back in your terminal and what this is
03:35 - going to do
03:35 - is this run command is going to create
03:38 - and run
03:39 - this hello world image in a new
03:41 - container
03:42 - now this hello world image right here
03:45 - this is just a sample image that they
03:46 - create for beginners to test out their
03:49 - docker installs basically
03:51 - and all it has is a like i said a simple
03:54 - tiny program on it that prints text out
03:56 - to the screen whenever you run it
03:58 - so you'll see again nothing meaningful
04:01 - just a quick
04:02 - sample image now the cool thing that i
04:05 - want to show you is
04:06 - look what happens whenever i run this
04:08 - command i'm going to hit enter now
04:10 - all right unable to find image pulling
04:13 - okay
04:14 - so let's see what that did okay so
04:18 - docker on hello world and it said unable
04:20 - to find image
04:22 - hello world latest locally unable to
04:24 - find emily
04:25 - locally pulling from library hello
04:28 - okay what is this all about
04:32 - whenever you ran the command docker run
04:34 - hello world
04:35 - right into your cli your cli sent that
04:38 - command to your docker
04:39 - server the background process running on
04:41 - your computer that can do all the docker
04:42 - things
04:43 - and it asks that hey docker server do
04:46 - you have
04:47 - this image hello world and docker server
04:49 - went um
04:50 - nah i got that image i know nothing
04:53 - about it and then it goes
04:54 - you know what cli let me go ahead and
04:56 - check docker hub
04:57 - and i'll let you know if i can get it
04:59 - from there so it went up to docker hub
05:02 - it saw that there was indeed a hello
05:04 - world image that someone created
05:06 - it downloaded it and it created a new
05:08 - container using the instructions
05:10 - in that image and after it was done
05:13 - creating it
05:14 - it sent that output that log to the cli
05:17 - and that is what the cli displayed on
05:19 - our screen
05:20 - for us so pretty much uh
05:24 - the docker server doing the heavy
05:26 - lifting talking to both docker hub
05:28 - making everything nice and formatted for
05:30 - our
05:31 - display how nice of it all right
05:34 - so let's look at one more thing
05:38 - before i let you guys go now i am going
05:41 - to go ahead and run this again
05:43 - and look at what happens this time oh
05:46 - that was uh pretty quick and
05:49 - unlike before where it said unable to
05:51 - find and
05:53 - getting it yada yada it didn't say that
05:56 - at all
05:57 - and in fact if you notice that entire
05:59 - command it ran
06:00 - quite a bit faster so what is going on
06:03 - in this case
06:04 - well let me just slide over here
06:07 - all right so the docker server
06:11 - is smart enough to know that whenever
06:13 - you
06:14 - ask for an image that you just asked for
06:16 - like
06:17 - like 10 seconds ago it's like nah i
06:20 - don't need to go to docker hub this time
06:22 - because
06:22 - what i did when you weren't looking is i
06:24 - actually cached
06:26 - that image because i had a feeling that
06:29 - you might ask for it again
06:30 - and if you do then i'm not gonna have to
06:33 - download it
06:34 - so once you download images
06:37 - using the run command docker server does
06:40 - cache those and i'll show you guys how
06:41 - to clean your cache later probably in
06:43 - like two tutorials or so
06:44 - but just know that that is kind of
06:46 - what's happening behind the scenes
06:48 - so with all of that said i am hoping
06:51 - that you now have a little better
06:53 - understanding of images containers
06:57 - uh the importance of the architecture
06:59 - and understanding this
07:00 - and what happens whenever you run these
07:02 - simple commands like
07:03 - run hello world a lot more behind the
07:06 - scenes than meets the eye
07:08 - all right so i'm gonna go uh see what's
07:11 - going on
07:12 - on discord but thank you guys for
07:13 - watching i will see you in the next
07:15 - video
07:16 - also special shout out sanjeev rocking
07:19 - the flames baby keep it going

Cleaned transcript:

all righty y'all welcome back and in this video we're going to learn about docker images containers and the docker server now that's all going to be great but before we do that i just want to show you something interesting i just want to know if anyone else has experienced this or if i'm the only one it's only on my computer but it drives me nuts where whenever you copy and paste something from google drive these single quotes and double quotes are different from the ones that you uh type into your ide so it's like slanted like five degrees it's so hard to notice but anyways okay let's uh let's go ahead and get to the video enough of me chatting okay docker images and containers a lot of people whenever they're researching docker they get a little bit confused on what exactly the differences between each because at first glance it seems like they have a pretty similar purpose and in fact they're quite different so in another thing i want to mention real quick i don't typically like going over like vocabulary terms until we get to the point in time where we actually have to learn that term because i think i don't know just like in your brain you have nothing to uh connect it to or to relate it to so it's hard to remember or hard to learn however it is so sprinkled in everything we're going to be talking about in these upcoming videos i thought it was important to kind of go over some of these things early on so in this video it is mainly going to be about the concepts and in the next couple start getting those hands dirty all right so that said what is an image an image is a readonly template that contains a set of instructions for creating a container so again plain english it's pretty much the set of instructions on how to create a container a container is a runnable instance of an image so it's its own isolated environment like we saw in the last video that runs inside of your operating system and each of these containers almost like its own computer it has its own memory it has its own networking it has resources separate from your main operating system all right so we can see the fact that a container is basically like a little server running on your computer and an image is the instructions on how to create these little servers simple enough now hop back over into your terminal and run docker version and i want to point out two things and that is docker version it lists client and server so each of these have a version but this is interesting so i thought you know i just downloaded docker got one thing and you know i was expecting one version number but what are these two things running right here well believe it or not whenever you download a docker there were think of it like two things that came with it the first thing is the docker server or the docker daemon this is the background process that runs that can create images run containers it's basically what you think of as docker running on your computer now the other thing that it came with was the docker cli this is the command line tool that we use to type into so we can interact with the docker server now check this out go ahead and run docker run hello world back in your terminal and what this is going to do is this run command is going to create and run this hello world image in a new container now this hello world image right here this is just a sample image that they create for beginners to test out their docker installs basically and all it has is a like i said a simple tiny program on it that prints text out to the screen whenever you run it so you'll see again nothing meaningful just a quick sample image now the cool thing that i want to show you is look what happens whenever i run this command i'm going to hit enter now all right unable to find image pulling okay so let's see what that did okay so docker on hello world and it said unable to find image hello world latest locally unable to find emily locally pulling from library hello okay what is this all about whenever you ran the command docker run hello world right into your cli your cli sent that command to your docker server the background process running on your computer that can do all the docker things and it asks that hey docker server do you have this image hello world and docker server went um nah i got that image i know nothing about it and then it goes you know what cli let me go ahead and check docker hub and i'll let you know if i can get it from there so it went up to docker hub it saw that there was indeed a hello world image that someone created it downloaded it and it created a new container using the instructions in that image and after it was done creating it it sent that output that log to the cli and that is what the cli displayed on our screen for us so pretty much uh the docker server doing the heavy lifting talking to both docker hub making everything nice and formatted for our display how nice of it all right so let's look at one more thing before i let you guys go now i am going to go ahead and run this again and look at what happens this time oh that was uh pretty quick and unlike before where it said unable to find and getting it yada yada it didn't say that at all and in fact if you notice that entire command it ran quite a bit faster so what is going on in this case well let me just slide over here all right so the docker server is smart enough to know that whenever you ask for an image that you just asked for like like 10 seconds ago it's like nah i don't need to go to docker hub this time because what i did when you weren't looking is i actually cached that image because i had a feeling that you might ask for it again and if you do then i'm not gonna have to download it so once you download images using the run command docker server does cache those and i'll show you guys how to clean your cache later probably in like two tutorials or so but just know that that is kind of what's happening behind the scenes so with all of that said i am hoping that you now have a little better understanding of images containers uh the importance of the architecture and understanding this and what happens whenever you run these simple commands like run hello world a lot more behind the scenes than meets the eye all right so i'm gonna go uh see what's going on on discord but thank you guys for watching i will see you in the next video also special shout out sanjeev rocking the flames baby keep it going
