With timestamps:

00:00 - alrighty guys welcome back to another
00:02 - docker video and in this tutorial we're
00:05 - gonna be learning about default commands
00:07 - it's gonna be thrilling trust me
00:10 - but before we hop right into that
00:12 - there's one other little bit of info
00:14 - that i wanted to mention not dealing
00:17 - anything with default commands but it's
00:18 - just something that as you start out
00:21 - learning docker and you're reading
00:22 - through the documentation
00:24 - it may just seem a little bit confusing
00:27 - so again let's just hop right into it
00:29 - and that is this
00:31 - so we already know that you can run
00:33 - commands like uh docker run hello world
00:36 - and let's just go ahead and run that
00:37 - okay we already saw what that did in the
00:39 - last video
00:40 - now
00:41 - you may also see a formatting like this
00:45 - where instead of it saying docker run
00:47 - hello world it would say docker
00:49 - container run hello world
00:52 - now if we run this
00:54 - okay it looks like both of those
00:56 - commands did the exact same thing
01:00 - so what is the difference between docker
01:01 - run hello world and docker container run
01:05 - hello world well check it out
01:08 - so
01:08 - as docker cli which is essentially this
01:12 - docker tool right here
01:13 - as it evolved over the years the docker
01:16 - team realized that they needed better
01:18 - formatting in other words
01:20 - there are commands like docker run and
01:23 - docker version
01:25 - star docker create and all these
01:28 - commands were piling up over the years
01:30 - and the docker team realized okay we
01:32 - need a better way to organize all of
01:34 - these commands
01:36 - so
01:36 - before we had something like
01:39 - docker run hello world
01:41 - so docker of course is the tool that
01:43 - we're using the cli the run
01:46 - word right here this is called the
01:47 - command and this hello world this is of
01:50 - course just the image now this other
01:52 - syntax right here we of course have the
01:54 - cli still we have the command we have
01:56 - the image but then we have this extra
01:58 - container keyword this is actually
02:00 - called the context
02:02 - now
02:03 - according to the official docker
02:05 - statement they said the old command
02:07 - syntax is still supported but we
02:09 - encourage everyone to adopt the new
02:11 - syntax
02:12 - so even though docker run hello world is
02:16 - still going to work fine and if you see
02:18 - it in you know any configuration files
02:21 - or any docs online
02:22 - it's no issue but what i am going to try
02:25 - to start doing in these tutorials is add
02:27 - the context because it's what docker
02:29 - prefers it's a little bit more formal
02:32 - and i know the new boston is always the
02:33 - most formal tutorials but uh we'll try
02:36 - to stick with the standards for this one
02:38 - so anyways like i said has nothing to do
02:41 - with the default commands we're going to
02:42 - be learning just a little bit of
02:43 - information to help clear up any
02:45 - confusion as you're learning docker
02:48 - alright so hopefully you enjoyed that
02:49 - little history
02:51 - the little history lesson now let's get
02:53 - to the fun part and that is default
02:55 - commands
02:56 - so let me just go ahead and run docker
02:59 - container run hello world to demonstrate
03:03 - this again and check it out
03:05 - so whenever you're on the container what
03:07 - it does is it prints out this message
03:10 - right here hello from docker
03:13 - so okay how did this hello world image
03:16 - know to print that text out
03:18 - well it is because this image the hello
03:21 - world one right here it came with a
03:23 - default command
03:25 - now these commands are commands that run
03:27 - right after the container is created you
03:30 - can think of them kind of like startup
03:32 - commands maybe that's even a better term
03:34 - for it so again like i said the hello
03:36 - world default command is set to print
03:38 - out hello from docker and all this other
03:40 - stuff
03:41 - however we can indeed overwrite that
03:44 - default command now instead of working
03:46 - with the hello world image and i'll
03:48 - explain why at the end of this video
03:50 - let's go ahead and
03:52 - repeat this same one instead on an image
03:55 - called busybox
03:58 - so i already have this downloaded so
04:00 - whenever i run it you're gonna see
04:02 - nothing display and this is because
04:05 - unlike that hello world image not all
04:08 - images come with the default command
04:10 - this busy box right here this is just a
04:13 - very simple image that combines a lot of
04:16 - tiny common unix utilities like it can
04:19 - echo statements it can uh list basically
04:22 - all those little unix tools busy box
04:24 - comes with
04:25 - think of it like a super lightweight uh
04:27 - unix server
04:29 - so
04:30 - the reason i want to use this one is
04:32 - because
04:33 - right after this image name we can have
04:36 - some command like list
04:38 - okay
04:39 - this not only starts up this container
04:42 - but also lists out and again these
04:44 - aren't the same files that exist on your
04:46 - operating system these are actually part
04:47 - of the container itself but just
04:49 - pointing out that we can customize this
04:52 - default command and it doesn't have to
04:53 - be something like this that can be also
04:56 - something like i want to echo
04:59 - bacon out
05:00 - so of course start this
05:02 - container and then whenever i start it
05:04 - up just echo out bacon
05:06 - why would you want to do that i'm not
05:08 - sure but you can do it so now we can see
05:10 - that there are some images that come
05:12 - with default commands and there are
05:14 - other ones that come with no default
05:16 - commands in either case if there is one
05:19 - that exists already we are free to
05:21 - override it whenever we start up the
05:23 - container
05:24 - now the last thing i want to point out
05:25 - is why did i choose to use busybox
05:28 - rather than hello world for this
05:30 - tutorial
05:31 - and that is because of this you know how
05:33 - i said that busybox comes with all those
05:36 - little unix utilities already built in
05:39 - well hello world
05:41 - actually does not
05:42 - so unlike before where i can run docker
05:44 - container on busy box echo bacon
05:47 - if i try to run it with hello world
05:51 - echo bacon
05:52 - it freaks out and i can even do this
05:55 - with a more simple command if you want
05:57 - to call it that which is list
05:59 - and check it out
06:00 - so these tweak out because let me clear
06:03 - my screen so i can show
06:05 - believe it or not hello world even
06:07 - though it's a very lightweight image
06:10 - it doesn't even include those very basic
06:13 - utilities such as ls and echo so that's
06:16 - why i decided to use busybox for this
06:18 - tutorial again not really important for
06:21 - understanding default commands but just
06:23 - wanted to point that out as well because
06:26 - if you try to you know use some images
06:28 - with some of these tools it may not work
06:31 - and that is why
06:32 - so hopefully you guys have a little bit
06:34 - better understanding of why sometimes
06:37 - you see that container keyword and why
06:39 - sometimes you don't again that has to do
06:41 - more with the history of docker but also
06:43 - more importantly default commands which
06:46 - are just startup commands that run after
06:49 - your container is created and then you
06:51 - are free to override them with your own
06:52 - custom startup commands if you want so
06:55 - thank you guys for watching and i will
06:56 - see you next video

Cleaned transcript:

alrighty guys welcome back to another docker video and in this tutorial we're gonna be learning about default commands it's gonna be thrilling trust me but before we hop right into that there's one other little bit of info that i wanted to mention not dealing anything with default commands but it's just something that as you start out learning docker and you're reading through the documentation it may just seem a little bit confusing so again let's just hop right into it and that is this so we already know that you can run commands like uh docker run hello world and let's just go ahead and run that okay we already saw what that did in the last video now you may also see a formatting like this where instead of it saying docker run hello world it would say docker container run hello world now if we run this okay it looks like both of those commands did the exact same thing so what is the difference between docker run hello world and docker container run hello world well check it out so as docker cli which is essentially this docker tool right here as it evolved over the years the docker team realized that they needed better formatting in other words there are commands like docker run and docker version star docker create and all these commands were piling up over the years and the docker team realized okay we need a better way to organize all of these commands so before we had something like docker run hello world so docker of course is the tool that we're using the cli the run word right here this is called the command and this hello world this is of course just the image now this other syntax right here we of course have the cli still we have the command we have the image but then we have this extra container keyword this is actually called the context now according to the official docker statement they said the old command syntax is still supported but we encourage everyone to adopt the new syntax so even though docker run hello world is still going to work fine and if you see it in you know any configuration files or any docs online it's no issue but what i am going to try to start doing in these tutorials is add the context because it's what docker prefers it's a little bit more formal and i know the new boston is always the most formal tutorials but uh we'll try to stick with the standards for this one so anyways like i said has nothing to do with the default commands we're going to be learning just a little bit of information to help clear up any confusion as you're learning docker alright so hopefully you enjoyed that little history the little history lesson now let's get to the fun part and that is default commands so let me just go ahead and run docker container run hello world to demonstrate this again and check it out so whenever you're on the container what it does is it prints out this message right here hello from docker so okay how did this hello world image know to print that text out well it is because this image the hello world one right here it came with a default command now these commands are commands that run right after the container is created you can think of them kind of like startup commands maybe that's even a better term for it so again like i said the hello world default command is set to print out hello from docker and all this other stuff however we can indeed overwrite that default command now instead of working with the hello world image and i'll explain why at the end of this video let's go ahead and repeat this same one instead on an image called busybox so i already have this downloaded so whenever i run it you're gonna see nothing display and this is because unlike that hello world image not all images come with the default command this busy box right here this is just a very simple image that combines a lot of tiny common unix utilities like it can echo statements it can uh list basically all those little unix tools busy box comes with think of it like a super lightweight uh unix server so the reason i want to use this one is because right after this image name we can have some command like list okay this not only starts up this container but also lists out and again these aren't the same files that exist on your operating system these are actually part of the container itself but just pointing out that we can customize this default command and it doesn't have to be something like this that can be also something like i want to echo bacon out so of course start this container and then whenever i start it up just echo out bacon why would you want to do that i'm not sure but you can do it so now we can see that there are some images that come with default commands and there are other ones that come with no default commands in either case if there is one that exists already we are free to override it whenever we start up the container now the last thing i want to point out is why did i choose to use busybox rather than hello world for this tutorial and that is because of this you know how i said that busybox comes with all those little unix utilities already built in well hello world actually does not so unlike before where i can run docker container on busy box echo bacon if i try to run it with hello world echo bacon it freaks out and i can even do this with a more simple command if you want to call it that which is list and check it out so these tweak out because let me clear my screen so i can show believe it or not hello world even though it's a very lightweight image it doesn't even include those very basic utilities such as ls and echo so that's why i decided to use busybox for this tutorial again not really important for understanding default commands but just wanted to point that out as well because if you try to you know use some images with some of these tools it may not work and that is why so hopefully you guys have a little bit better understanding of why sometimes you see that container keyword and why sometimes you don't again that has to do more with the history of docker but also more importantly default commands which are just startup commands that run after your container is created and then you are free to override them with your own custom startup commands if you want so thank you guys for watching and i will see you next video
