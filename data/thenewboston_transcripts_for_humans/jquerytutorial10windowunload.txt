With timestamps:

00:00 - hi this is Alex from PHP academy' no org
00:03 - with a video tutorial for the new Boston
00:05 - in this video we're going to look at the
00:08 - unload event applying it to the document
00:12 - itself so for example if we would have a
00:15 - link on the page and user were to click
00:18 - it or for example they were to either
00:20 - navigate away from the page using their
00:22 - back or forward buttons as well as
00:25 - closing their window we could perform a
00:28 - specific action or a specific set of
00:31 - actions based on this event so as an
00:35 - example let's go ahead and create a link
00:37 - and I'm going to create this link to
00:39 - Google so the address in here as well
00:43 - now once we've done this we can go ahead
00:48 - and start to write out our code in ext
00:51 - jas which I've included on my page as
00:54 - well as jQuery so let's go over to ext
00:57 - Jas now in previous tutorials we've
01:00 - already looked at things like window dot
01:02 - load and we've also looked at things
01:05 - like document dot ready however what
01:08 - we're going to be looking at here is
01:09 - window dot unload so this means that
01:14 - when the like I said when the user
01:16 - navigates away from the browser the
01:18 - functions or the function within this
01:20 - will be performed so let's go ahead and
01:22 - outline the function here and pull this
01:24 - down so we've got this function in here
01:27 - and we can go ahead and perform an
01:29 - action when the window is unloaded so
01:32 - over here we have our Google link here
01:34 - or this was from a previous example I'll
01:39 - just go and get rid of that okay so we
01:43 - have Google here when I click it we
01:46 - navigate to Google code at UK however we
01:49 - want to perform something or display
01:52 - something when the user leaves so for
01:55 - example we could alert out you're
01:58 - leaving you're leaving this
02:03 - Paige now in reality you wouldn't really
02:07 - alert every time a user leaves the page
02:10 - it's probably not a good idea but we use
02:12 - an alert as just as an example so we can
02:16 - see when the unload event is called now
02:19 - this doesn't work with particular you
02:24 - know we can't account from the beginning
02:27 - essentially if we wanted to say allow
02:29 - the user to cancel the navigation away
02:31 - we're unable to do this using unload and
02:35 - we'll take a look at that in a minute
02:36 - and see how that handles it so let's go
02:38 - ahead and refresh okay so when i click
02:41 - google you can see now we have this
02:43 - alert box appear say you're leaving the
02:45 - page now when i press ok it forwards the
02:49 - user to the location that was initially
02:50 - requested so for example if I now click
02:53 - forward in my browser which would take
02:56 - me back to Google it will still say
02:58 - you're leaving this page again if we
03:00 - close the window as well let's just go
03:03 - ahead and open another window okay so
03:06 - we've got Google just open here when I
03:09 - was when I for example go ahead and
03:11 - close this and this tab just up here you
03:14 - see we get the same message and we can
03:16 - press ok and that tab will be closed so
03:19 - we can now see that the unload event
03:21 - will perform a specific action based on
03:24 - when the user unloads the page and as I
03:29 - said if we were to go ahead and for
03:31 - example allow the user to either press
03:33 - ok or cancel in a confirmed dialog a
03:36 - JavaScript confirm dialog this wouldn't
03:38 - actually work so let's go ahead and
03:40 - create a confirmed dialog and see what
03:42 - we get I'm going to create a variable
03:44 - called C which is equal to the confirmed
03:47 - dialog function and inside here I'm just
03:50 - going to write for example are you sure
03:52 - you want to leave then what we could do
03:58 - is perform an if statement as we usually
04:00 - would now in this case what we would
04:03 - think would be possible was to say if
04:06 - the confirmation is okay so I the user
04:10 - presses ok we can for example return
04:13 - true
04:14 - or something like that otherwise we
04:16 - could go ahead and return false now in
04:19 - any other circumstance this would return
04:21 - false to this function and therefore the
04:23 - action wouldn't be carried out if the
04:25 - user does press ok we would return true
04:27 - therefore they would be able to leave
04:29 - the page however let's go and take a
04:31 - look at see what happens you'll see that
04:33 - we automatically get this dialog oh no
04:35 - that's from the other other part so
04:39 - let's go ahead and click on Google and
04:41 - we get this dialog box saying are you
04:43 - sure you want to leave now let's go
04:45 - ahead and press ok first of all and you
04:47 - can see that we leave the page when we
04:49 - come back to this how every one click it
04:51 - again but this time if we go ahead and
04:53 - press cancel you can see that the user
04:56 - is all you know still forwarded to the
04:59 - page that was requested and we can't
05:01 - actually stop this event from happening
05:03 - it just happens and then we carry out
05:06 - this particular operation or this
05:08 - particular set of you know this code
05:11 - this particular you know function
05:13 - whatever you want to do so there's no
05:16 - way that we can actually stop it so why
05:19 - do we use unload in that case like why
05:22 - would we ever need to use it if we don't
05:24 - want to show for example an alert dialog
05:26 - saying like you're leaving the page or
05:28 - something why would we ever use it well
05:31 - let's just say as a scenario you had
05:35 - some kind of script that would allow
05:39 - users to you know log in to say a chat
05:43 - window and show on the page that they're
05:46 - available to chat in this case you would
05:50 - obviously the user would come in and
05:51 - they would be able to say chat to other
05:53 - people on the website however if you
05:57 - were to then use this unload function it
05:59 - would be extremely useful to them remove
06:01 - them from the list of people that are
06:03 - available to chat so you would maybe
06:06 - have a assignment of user IDs that
06:11 - correspond to values in the database and
06:13 - you could remove them from the site as
06:16 - well as performing up you know using the
06:18 - unloads you can perform operations that
06:21 - you require just before the user leaves
06:23 - the page so cleaning up anything you
06:26 - know
06:26 - any particular part of your site or you
06:30 - know temporary files you know anything
06:33 - like that so use the unload function in
06:35 - this case but you wouldn't be able to
06:37 - use it to you know say are you sure you
06:40 - want to navigate away from the page it's
06:42 - not possible to do that using this
06:44 - unload event function so taking them you
06:48 - know notes of why we might use unload
06:51 - you can see that we wouldn't really be
06:53 - able to use it in the case of a link and
06:55 - confirming whether they want to leave
06:57 - but we can use it for a variety of other
07:00 - things that otherwise we would have to
07:02 - use pure JavaScript or raw JavaScript to
07:05 - do

Cleaned transcript:

hi this is Alex from PHP academy' no org with a video tutorial for the new Boston in this video we're going to look at the unload event applying it to the document itself so for example if we would have a link on the page and user were to click it or for example they were to either navigate away from the page using their back or forward buttons as well as closing their window we could perform a specific action or a specific set of actions based on this event so as an example let's go ahead and create a link and I'm going to create this link to Google so the address in here as well now once we've done this we can go ahead and start to write out our code in ext jas which I've included on my page as well as jQuery so let's go over to ext Jas now in previous tutorials we've already looked at things like window dot load and we've also looked at things like document dot ready however what we're going to be looking at here is window dot unload so this means that when the like I said when the user navigates away from the browser the functions or the function within this will be performed so let's go ahead and outline the function here and pull this down so we've got this function in here and we can go ahead and perform an action when the window is unloaded so over here we have our Google link here or this was from a previous example I'll just go and get rid of that okay so we have Google here when I click it we navigate to Google code at UK however we want to perform something or display something when the user leaves so for example we could alert out you're leaving you're leaving this Paige now in reality you wouldn't really alert every time a user leaves the page it's probably not a good idea but we use an alert as just as an example so we can see when the unload event is called now this doesn't work with particular you know we can't account from the beginning essentially if we wanted to say allow the user to cancel the navigation away we're unable to do this using unload and we'll take a look at that in a minute and see how that handles it so let's go ahead and refresh okay so when i click google you can see now we have this alert box appear say you're leaving the page now when i press ok it forwards the user to the location that was initially requested so for example if I now click forward in my browser which would take me back to Google it will still say you're leaving this page again if we close the window as well let's just go ahead and open another window okay so we've got Google just open here when I was when I for example go ahead and close this and this tab just up here you see we get the same message and we can press ok and that tab will be closed so we can now see that the unload event will perform a specific action based on when the user unloads the page and as I said if we were to go ahead and for example allow the user to either press ok or cancel in a confirmed dialog a JavaScript confirm dialog this wouldn't actually work so let's go ahead and create a confirmed dialog and see what we get I'm going to create a variable called C which is equal to the confirmed dialog function and inside here I'm just going to write for example are you sure you want to leave then what we could do is perform an if statement as we usually would now in this case what we would think would be possible was to say if the confirmation is okay so I the user presses ok we can for example return true or something like that otherwise we could go ahead and return false now in any other circumstance this would return false to this function and therefore the action wouldn't be carried out if the user does press ok we would return true therefore they would be able to leave the page however let's go and take a look at see what happens you'll see that we automatically get this dialog oh no that's from the other other part so let's go ahead and click on Google and we get this dialog box saying are you sure you want to leave now let's go ahead and press ok first of all and you can see that we leave the page when we come back to this how every one click it again but this time if we go ahead and press cancel you can see that the user is all you know still forwarded to the page that was requested and we can't actually stop this event from happening it just happens and then we carry out this particular operation or this particular set of you know this code this particular you know function whatever you want to do so there's no way that we can actually stop it so why do we use unload in that case like why would we ever need to use it if we don't want to show for example an alert dialog saying like you're leaving the page or something why would we ever use it well let's just say as a scenario you had some kind of script that would allow users to you know log in to say a chat window and show on the page that they're available to chat in this case you would obviously the user would come in and they would be able to say chat to other people on the website however if you were to then use this unload function it would be extremely useful to them remove them from the list of people that are available to chat so you would maybe have a assignment of user IDs that correspond to values in the database and you could remove them from the site as well as performing up you know using the unloads you can perform operations that you require just before the user leaves the page so cleaning up anything you know any particular part of your site or you know temporary files you know anything like that so use the unload function in this case but you wouldn't be able to use it to you know say are you sure you want to navigate away from the page it's not possible to do that using this unload event function so taking them you know notes of why we might use unload you can see that we wouldn't really be able to use it in the case of a link and confirming whether they want to leave but we can use it for a variety of other things that otherwise we would have to use pure JavaScript or raw JavaScript to do
