With timestamps:

00:00 - alrighty guys welcome back and in this
00:03 - video we're gonna be learning how to
00:04 - remove
00:05 - and also inspect containers sounds
00:08 - pretty exciting i know i know
00:10 - so let's go ahead and just view all the
00:13 - containers that we have
00:14 - so far so i'm gonna do docker container
00:17 - lsa
00:18 - and okay i mean a lot of these we just
00:22 - we just don't need anymore it's in fact
00:24 - kind of embarrassing how many containers
00:26 - i have on my computer right now so i
00:27 - want to start getting rid of some of
00:29 - them
00:30 - so this one ping google.com definitely
00:32 - not going to be using
00:33 - this again so let's figure out how to
00:35 - remove it now the first thing i'm going
00:37 - to want to do is copy this container id
00:40 - right there and a very simple command to
00:43 - remove any container you can do
00:45 - docker container rm and then you can
00:48 - paste in the container id
00:51 - all right it looks like it was removed
00:53 - now just to confirm
00:55 - yes all of them are still there instead
00:58 - of this individual one
00:59 - cb71 which was just removed
01:03 - now another thing that i want to point
01:05 - out and
01:06 - it's probably not going to happen in
01:07 - this example but
01:09 - removing a container is sometimes going
01:11 - to fail
01:12 - and this happens whenever you have some
01:14 - processes that are running inside your
01:16 - container
01:16 - remember that weird edge case that we
01:18 - saw last time either way
01:20 - the point i'm trying to make is if you
01:22 - ever need to force
01:24 - removal of a container and
01:27 - let's say docker container rm
01:30 - and then the container id itself and by
01:33 - the way this is this container id i'm
01:34 - using for this little example
01:36 - if this command ever bugs out and fails
01:39 - and you need to force removal
01:40 - right after this rm you can do dash f
01:44 - and this is just gonna force removal so
01:46 - again if you ever get any errors
01:48 - then you can force it and it'll clean it
01:50 - up remove it from your computer
01:53 - nice little tip now another cool command
01:55 - is
01:56 - inspect now the inspectmen allows you to
01:59 - view more
02:00 - detailed information and i mean a lot of
02:02 - information
02:03 - about a container a lot more that's just
02:05 - on one of these lines
02:07 - now to demonstrate that let me just grab
02:09 - any random container id
02:11 - and that is docker container inspect
02:15 - and then you can just paste in the
02:17 - container id now what this is going to
02:19 - return
02:19 - is actually a list and it this is
02:22 - formatted json
02:24 - so lots of information about your
02:26 - container not only the id
02:28 - the creation date the image yada yada
02:32 - you guys can um
02:33 - go through this if you want and see all
02:34 - of the different fields
02:36 - but just want to show you guys what
02:37 - inspect does it returns json so
02:40 - this might be useful if you're let's say
02:43 - creating a digital currency network and
02:46 - you need to simulate an entire
02:47 - peer-to-peer network on your own
02:49 - computer and you want to view
02:50 - information about each node but like
02:52 - who would do that that's just a crazy
02:54 - example no one's going to make this
02:55 - entire digital currency network
02:58 - now last but not least and i know i
03:00 - mentioned this in a previous video but i
03:02 - just want to reiterate
03:04 - since i have a feeling it's going to be
03:05 - a pretty common command especially if
03:07 - you're just getting started learning
03:09 - docker
03:09 - that is how to delete all containers
03:12 - from your system
03:13 - and that is docker system
03:16 - prune and if you do hyphen hyphen
03:19 - all this is going to wipe everything
03:22 - including the cache
03:23 - so you can run this and just verify yes
03:27 - and another thing to note is whenever
03:29 - you run this
03:30 - it is going to have to redownload from
03:32 - docker hub any containers that you had
03:34 - before
03:35 - so that's fine cleaned up some space and
03:38 - now just to verify if i list out all my
03:40 - current containers i have nothing a nice
03:43 - clean system so i thought i was gonna
03:47 - have time to talk about exec
03:49 - in this video but there's a lot to that
03:51 - so i'll actually break it up into the
03:52 - next video
03:53 - but for now thank you guys for watching
03:55 - and i will see you next time

Cleaned transcript:

alrighty guys welcome back and in this video we're gonna be learning how to remove and also inspect containers sounds pretty exciting i know i know so let's go ahead and just view all the containers that we have so far so i'm gonna do docker container lsa and okay i mean a lot of these we just we just don't need anymore it's in fact kind of embarrassing how many containers i have on my computer right now so i want to start getting rid of some of them so this one ping google.com definitely not going to be using this again so let's figure out how to remove it now the first thing i'm going to want to do is copy this container id right there and a very simple command to remove any container you can do docker container rm and then you can paste in the container id all right it looks like it was removed now just to confirm yes all of them are still there instead of this individual one cb71 which was just removed now another thing that i want to point out and it's probably not going to happen in this example but removing a container is sometimes going to fail and this happens whenever you have some processes that are running inside your container remember that weird edge case that we saw last time either way the point i'm trying to make is if you ever need to force removal of a container and let's say docker container rm and then the container id itself and by the way this is this container id i'm using for this little example if this command ever bugs out and fails and you need to force removal right after this rm you can do dash f and this is just gonna force removal so again if you ever get any errors then you can force it and it'll clean it up remove it from your computer nice little tip now another cool command is inspect now the inspectmen allows you to view more detailed information and i mean a lot of information about a container a lot more that's just on one of these lines now to demonstrate that let me just grab any random container id and that is docker container inspect and then you can just paste in the container id now what this is going to return is actually a list and it this is formatted json so lots of information about your container not only the id the creation date the image yada yada you guys can um go through this if you want and see all of the different fields but just want to show you guys what inspect does it returns json so this might be useful if you're let's say creating a digital currency network and you need to simulate an entire peertopeer network on your own computer and you want to view information about each node but like who would do that that's just a crazy example no one's going to make this entire digital currency network now last but not least and i know i mentioned this in a previous video but i just want to reiterate since i have a feeling it's going to be a pretty common command especially if you're just getting started learning docker that is how to delete all containers from your system and that is docker system prune and if you do hyphen hyphen all this is going to wipe everything including the cache so you can run this and just verify yes and another thing to note is whenever you run this it is going to have to redownload from docker hub any containers that you had before so that's fine cleaned up some space and now just to verify if i list out all my current containers i have nothing a nice clean system so i thought i was gonna have time to talk about exec in this video but there's a lot to that so i'll actually break it up into the next video but for now thank you guys for watching and i will see you next time
