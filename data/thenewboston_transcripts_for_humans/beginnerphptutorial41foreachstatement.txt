With timestamps:

00:00 - hello this is Alex from PHP academy' de
00:02 - org and this is a video for the new
00:04 - Boston in this video we're going to be
00:06 - talking about the for each construct now
00:10 - it's commonly referred to as a for each
00:11 - loop because it does actually loop
00:13 - through elements of an array and allows
00:15 - us to sort of iterate over an array and
00:18 - take out different elements now I'm left
00:21 - with the example here of when I did the
00:24 - or the code from the multi-dimensional
00:26 - arrays tutorial and but what we're going
00:29 - to be doing is we're going to be
00:30 - displaying to the user a list of healthy
00:33 - and unhealthy food so we can sort of see
00:35 - the practical uses of multi-dimensional
00:37 - arrays and then using this for each
00:40 - construct to to basically display all
00:45 - these values rather than accessing the
00:47 - values like so we could do food healthy
00:51 - and then access element 0 which would be
00:54 - salad so if we refresh that we have
00:57 - salad up here so we start by just
01:00 - writing for each and we have some
01:04 - rounded brackets and then we have a
01:06 - block so it's as simple as that
01:07 - that's the syntax for it now inside here
01:10 - we need to address the array so that
01:13 - would be food and then we need to say as
01:15 - so food as an element okay so food as
01:21 - element is taking it's taking our
01:27 - element which in actual fact is healthy
01:30 - and unhealthy now because I also need to
01:34 - take into account these here I'm saying
01:38 - food as element equals greater than food
01:42 - oh sorry I'll just do an item for
01:47 - example okay so food is the array
01:50 - overall element is healthy and unhealthy
01:53 - and item is this array here so food
01:59 - element is this sorry is this here
02:06 - and this here and then the item is each
02:10 - one of these so in fact I'll call it in
02:14 - a element just so it's easier to
02:18 - recognize now I'm going to echo element
02:24 - and then get append a line break on the
02:27 - end of that so using the dot and then
02:30 - I'm echoing out some HTML so now we need
02:33 - to refresh to see what's going to happen
02:35 - now and you can see that we're presented
02:37 - with healthy and unhealthy so already
02:39 - we've categorized the two different
02:41 - elements of this array inside here now
02:45 - what we want to do is we want to further
02:48 - access our inner elements so at the
02:51 - moment if I was to come down here and
02:53 - echo inner element spell it right you
02:58 - can see that we're not going to have
03:01 - much luck because what we're trying to
03:03 - do is echo out an array so let's just
03:05 - refresh that you can see under each one
03:07 - we've already we're already starting to
03:10 - pull together some kind of structure
03:11 - where we're going to list our healthy
03:12 - and unhealthy food
03:13 - however we just been displayed with this
03:16 - array keyword so you'll probably
03:18 - remember that the we need to loop again
03:23 - to find information about these and so
03:27 - we've already looped to find information
03:29 - about these however what we can now do
03:32 - is we'll scrap this line here and we can
03:35 - say for each and create a new for each
03:40 - so now what we can do is we can say for
03:43 - each inner element which should really
03:47 - be called inner array so let me just
03:49 - change this because it it makes a lot
03:51 - more sense as harder than you think
03:53 - naming variables so so we've echoed out
03:59 - each element of this so these health
04:01 - this healthy and this unhealthy now we
04:03 - need to go in and echo out each one of
04:04 - these so salad vegetables and pasta so
04:07 - now what we can do is say inner array as
04:09 - item item is equal to salad vegetables
04:14 - and pasta for this element here
04:17 - and and for unhealthy its equal to pizza
04:21 - and ice cream so now all we really need
04:23 - to do is say echo item a Pender line
04:27 - break on and we're done okay so now when
04:31 - we refresh you can see that it's taken
04:33 - each element of that and it's put it
04:37 - into a list if you like so what I'm
04:39 - going to do is make a simple change here
04:41 - I'm going to append strong tag on the
04:44 - start of there and a strong tag ending
04:47 - there that just sort of separates our
04:49 - tables by making them more bold so now
04:54 - what I can do is I can update this as
04:56 - much as I want so I could say popcorn
05:01 - and refresh and it just adds an element
05:05 - adds a value just straight into there so
05:09 - now you can see using this for each
05:11 - we've been able to take the inner inner
05:17 - array of this associative array overall
05:20 - it would be called a multi-dimensional
05:21 - array and we've just echoed out the data
05:24 - that we need to

Cleaned transcript:

hello this is Alex from PHP academy' de org and this is a video for the new Boston in this video we're going to be talking about the for each construct now it's commonly referred to as a for each loop because it does actually loop through elements of an array and allows us to sort of iterate over an array and take out different elements now I'm left with the example here of when I did the or the code from the multidimensional arrays tutorial and but what we're going to be doing is we're going to be displaying to the user a list of healthy and unhealthy food so we can sort of see the practical uses of multidimensional arrays and then using this for each construct to to basically display all these values rather than accessing the values like so we could do food healthy and then access element 0 which would be salad so if we refresh that we have salad up here so we start by just writing for each and we have some rounded brackets and then we have a block so it's as simple as that that's the syntax for it now inside here we need to address the array so that would be food and then we need to say as so food as an element okay so food as element is taking it's taking our element which in actual fact is healthy and unhealthy now because I also need to take into account these here I'm saying food as element equals greater than food oh sorry I'll just do an item for example okay so food is the array overall element is healthy and unhealthy and item is this array here so food element is this sorry is this here and this here and then the item is each one of these so in fact I'll call it in a element just so it's easier to recognize now I'm going to echo element and then get append a line break on the end of that so using the dot and then I'm echoing out some HTML so now we need to refresh to see what's going to happen now and you can see that we're presented with healthy and unhealthy so already we've categorized the two different elements of this array inside here now what we want to do is we want to further access our inner elements so at the moment if I was to come down here and echo inner element spell it right you can see that we're not going to have much luck because what we're trying to do is echo out an array so let's just refresh that you can see under each one we've already we're already starting to pull together some kind of structure where we're going to list our healthy and unhealthy food however we just been displayed with this array keyword so you'll probably remember that the we need to loop again to find information about these and so we've already looped to find information about these however what we can now do is we'll scrap this line here and we can say for each and create a new for each so now what we can do is we can say for each inner element which should really be called inner array so let me just change this because it it makes a lot more sense as harder than you think naming variables so so we've echoed out each element of this so these health this healthy and this unhealthy now we need to go in and echo out each one of these so salad vegetables and pasta so now what we can do is say inner array as item item is equal to salad vegetables and pasta for this element here and and for unhealthy its equal to pizza and ice cream so now all we really need to do is say echo item a Pender line break on and we're done okay so now when we refresh you can see that it's taken each element of that and it's put it into a list if you like so what I'm going to do is make a simple change here I'm going to append strong tag on the start of there and a strong tag ending there that just sort of separates our tables by making them more bold so now what I can do is I can update this as much as I want so I could say popcorn and refresh and it just adds an element adds a value just straight into there so now you can see using this for each we've been able to take the inner inner array of this associative array overall it would be called a multidimensional array and we've just echoed out the data that we need to
