With timestamps:

00:00 - so we know that this is working testing
00:02 - this at each stage is probably a really
00:04 - important step if you're just learning
00:06 - because you can see the outcome of each
00:08 - command that you're processing so in
00:12 - fact let's get rid of this for now okay
00:14 - so now what we've done is we've read in
00:17 - the image we've all we haven't read in
00:19 - the image itself but what we've done is
00:21 - got the image size from the image a file
00:23 - name that we've specified so we've got
00:25 - the width and the height of this image
00:27 - now what we need to do is we need to
00:29 - specify a new size for the image because
00:31 - obviously the point of this tutorial is
00:33 - we're scaling this image down to
00:35 - thumbnail size now we have a few issues
00:37 - we can't scale it down by a percentage
00:40 - because the file that we read in could
00:46 - be say 2,000 by 2,000 pixels or it could
00:50 - just on its own be let's say a hundred
00:54 - by a hundred pixels or it could be 50 by
00:58 - 50 pixels etc so our file size that we
01:01 - read in could be any size so what we
01:03 - want to do is create the thumbnail to an
01:06 - exacting size or a more or less exacting
01:09 - size we don't want to scale it down a
01:12 - percentage because if we were scaling
01:14 - down a percentage of an image that was
01:15 - 500 by 500 and let's say by by a very
01:21 - small percentage you'd end up with a
01:22 - very small image however if you were
01:24 - scaling down five a 2,000 by 2,000 by a
01:27 - very small percentage you're going to
01:29 - end up with a bigger image than the
01:30 - first example I've already talked about
01:32 - so hopefully this makes sense to you and
01:35 - we need to understand this before we
01:38 - start writing out our new size of our
01:40 - image because we can't just say divide
01:42 - it by a certain amount okay so we're
01:46 - going to create a new variable called
01:48 - new underscore size and what we're going
01:52 - to do in here is a few calculations that
01:54 - I've played around with myself to get
01:57 - this working so because I'm not amazing
02:00 - at math I can't explain to you why this
02:02 - works or why it doesn't know what works
02:05 - because it does what heck but you know
02:09 - follow along with this try and
02:10 - understand it for anyone that's more
02:12 - logical minded than
02:13 - means in terms of mathematics you'll
02:15 - probably understand this a lot better so
02:18 - we've got new size and I have chosen
02:22 - whilst playing around with this for a
02:24 - good hour I think
02:25 - well half an hour so I'm basically going
02:29 - to say image width and then I added this
02:35 - to image height so let's just space this
02:38 - out so you can see what we're doing so
02:39 - we've added the image width which we've
02:41 - got here to the image height then what
02:43 - we've done is we've divided that all by
02:47 - the image width multiplied by the image
02:49 - height divided by 45 so let's create
02:52 - some brackets so we're processing this
02:56 - properly so I did image width and then I
03:01 - multiplied it and then another bracket
03:03 - in here so we're multiplying this by the
03:06 - image height times @ ÿâ times by 45 so
03:13 - we've got image width it add image
03:15 - height divided by the image width times
03:17 - the image height times 45 so this
03:20 - operation will complete and then
03:22 - multiply it by the image width and these
03:24 - two operations in brackets will sub and
03:27 - complete individually and then divide by
03:29 - each other so just out of curiosity
03:32 - let's go ahead and echo out this new
03:33 - size ok so we've got the individual
03:39 - values here now let's refresh that okay
03:42 - so we've got a massively long decimal
03:45 - number so there's a still a few things
03:50 - we need to do to create the new height
03:53 - of the image and the new width of the
03:55 - image so let's go ahead and do that now
03:57 - let's go over to context let's get rid
03:59 - of that so that's just interesting to
04:00 - see what that's produced but it does
04:03 - work so now we've got new width and new
04:05 - height I'm going to create two new
04:06 - variables and I'm going to multiply the
04:09 - current width by this new size so in
04:13 - actual fact I was meant to put a divide
04:17 - there so later on this is going to make
04:20 - sense why
04:21 - when we create our new width and our new
04:24 - height so let's just echo this out to
04:26 - see what we got okay so now we've got a
04:31 - small value below zero so we've got no
04:37 - point one seven one three blah blah blah
04:39 - so this is a small value what we're
04:42 - going to now do is we're going to
04:43 - multiply the original image height by
04:48 - and the height and the width by this new
04:51 - size which will then create a small
04:53 - integer value or Mike you know might not
04:57 - but we're going to create a small value
04:59 - at least to resize our image too so
05:01 - let's create our two variables first we
05:03 - want new width and we're going to do the
05:07 - same with new height and this is
05:10 - basically going to be the image width so
05:12 - the original image width times by the
05:17 - new image size and this is just in
05:22 - general we don't have a width and a
05:24 - height for the new size this is how we
05:26 - maintain our aspect ratio we're creating
05:29 - the width and the height with the
05:32 - original height and the width so
05:34 - original width and then the original
05:36 - height times by this new size so what
05:39 - we're not what we're doing is we're
05:40 - using this variable here to just scale
05:43 - down the width and the height but by so
05:46 - what we're doing is with multiplying it
05:48 - by M I mean a negative number
05:50 - oh no sorry naught point one seven one I
05:53 - think it was but therefore we're keeping
05:55 - the aspect ratio of the width and the
05:56 - height so hopefully that makes sense to
05:58 - you that's just echo this out and echo
06:01 - this out let's append a break just on
06:05 - the end of here so you can see what's
06:06 - going on and we'll come back in a
06:08 - refresh so you can see now our image has
06:11 - been scaled down so we're going to
06:13 - forget about the decimal points here
06:14 - these aren't important these will be
06:16 - removed later on when the image is
06:18 - created so we've now got an image one
06:20 - two five by 70 so one two five by 70 is
06:24 - obviously a maintain aspect ratio value
06:27 - for the original width and the height so
06:30 - our new image is going to be a hundred
06:32 - twenty-five by 70 which sounds about
06:33 - right for
06:34 - thumbnail image so now what we can test
06:37 - doing if you'd like is test well I'm not
06:39 - going to do it in the tutorial but test
06:41 - loading in up with this code a really
06:44 - large image and see if you get around
06:46 - the same size back because with this new
06:50 - size variable here with the calculations
06:53 - that happen here you will always end up
06:55 - with more s the same size so let's get
06:59 - rid of these echo here and let's get rid
07:04 - of this break that's important we get
07:05 - rid of that

Cleaned transcript:

so we know that this is working testing this at each stage is probably a really important step if you're just learning because you can see the outcome of each command that you're processing so in fact let's get rid of this for now okay so now what we've done is we've read in the image we've all we haven't read in the image itself but what we've done is got the image size from the image a file name that we've specified so we've got the width and the height of this image now what we need to do is we need to specify a new size for the image because obviously the point of this tutorial is we're scaling this image down to thumbnail size now we have a few issues we can't scale it down by a percentage because the file that we read in could be say 2,000 by 2,000 pixels or it could just on its own be let's say a hundred by a hundred pixels or it could be 50 by 50 pixels etc so our file size that we read in could be any size so what we want to do is create the thumbnail to an exacting size or a more or less exacting size we don't want to scale it down a percentage because if we were scaling down a percentage of an image that was 500 by 500 and let's say by by a very small percentage you'd end up with a very small image however if you were scaling down five a 2,000 by 2,000 by a very small percentage you're going to end up with a bigger image than the first example I've already talked about so hopefully this makes sense to you and we need to understand this before we start writing out our new size of our image because we can't just say divide it by a certain amount okay so we're going to create a new variable called new underscore size and what we're going to do in here is a few calculations that I've played around with myself to get this working so because I'm not amazing at math I can't explain to you why this works or why it doesn't know what works because it does what heck but you know follow along with this try and understand it for anyone that's more logical minded than means in terms of mathematics you'll probably understand this a lot better so we've got new size and I have chosen whilst playing around with this for a good hour I think well half an hour so I'm basically going to say image width and then I added this to image height so let's just space this out so you can see what we're doing so we've added the image width which we've got here to the image height then what we've done is we've divided that all by the image width multiplied by the image height divided by 45 so let's create some brackets so we're processing this properly so I did image width and then I multiplied it and then another bracket in here so we're multiplying this by the image height times @ ÿâ times by 45 so we've got image width it add image height divided by the image width times the image height times 45 so this operation will complete and then multiply it by the image width and these two operations in brackets will sub and complete individually and then divide by each other so just out of curiosity let's go ahead and echo out this new size ok so we've got the individual values here now let's refresh that okay so we've got a massively long decimal number so there's a still a few things we need to do to create the new height of the image and the new width of the image so let's go ahead and do that now let's go over to context let's get rid of that so that's just interesting to see what that's produced but it does work so now we've got new width and new height I'm going to create two new variables and I'm going to multiply the current width by this new size so in actual fact I was meant to put a divide there so later on this is going to make sense why when we create our new width and our new height so let's just echo this out to see what we got okay so now we've got a small value below zero so we've got no point one seven one three blah blah blah so this is a small value what we're going to now do is we're going to multiply the original image height by and the height and the width by this new size which will then create a small integer value or Mike you know might not but we're going to create a small value at least to resize our image too so let's create our two variables first we want new width and we're going to do the same with new height and this is basically going to be the image width so the original image width times by the new image size and this is just in general we don't have a width and a height for the new size this is how we maintain our aspect ratio we're creating the width and the height with the original height and the width so original width and then the original height times by this new size so what we're not what we're doing is we're using this variable here to just scale down the width and the height but by so what we're doing is with multiplying it by M I mean a negative number oh no sorry naught point one seven one I think it was but therefore we're keeping the aspect ratio of the width and the height so hopefully that makes sense to you that's just echo this out and echo this out let's append a break just on the end of here so you can see what's going on and we'll come back in a refresh so you can see now our image has been scaled down so we're going to forget about the decimal points here these aren't important these will be removed later on when the image is created so we've now got an image one two five by 70 so one two five by 70 is obviously a maintain aspect ratio value for the original width and the height so our new image is going to be a hundred twentyfive by 70 which sounds about right for thumbnail image so now what we can test doing if you'd like is test well I'm not going to do it in the tutorial but test loading in up with this code a really large image and see if you get around the same size back because with this new size variable here with the calculations that happen here you will always end up with more s the same size so let's get rid of these echo here and let's get rid of this break that's important we get rid of that
