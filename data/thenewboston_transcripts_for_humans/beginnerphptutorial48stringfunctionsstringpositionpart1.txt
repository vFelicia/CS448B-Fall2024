With timestamps:

00:00 - hi this is Alex from PHP academy' back
00:03 - with another tutorial for the new Boston
00:05 - now in this video tutorial we're going
00:07 - to be looking at the function in PHP STR
00:10 - pause now SCR pause stands for string
00:14 - positions we've got string here position
00:16 - and what this function does is it takes
00:18 - three arguments two are required the
00:22 - first argument is the string that we
00:23 - want to search in the second argument is
00:26 - the keyword or character that we want to
00:29 - find within the string and the last and
00:34 - not an optional offset optional argument
00:38 - is the offset and the offset offset is
00:41 - where to start from the from within the
00:45 - string that you're searching so by
00:47 - default this will be 0 because we know
00:49 - that arrays or positions start at 0 and
00:53 - then increment from there so let's say
00:56 - we have a string here now I'm going to
00:59 - include a couple of keywords in the
01:00 - string that we might want to search for
01:02 - so for example it could be this is a
01:06 - string and it is an example now I've
01:11 - included two specific keywords I've
01:14 - included upwards rather is here and is
01:18 - here so eventually in this tutorial
01:20 - we're going to come up with a way where
01:22 - we can loop through each character of
01:24 - here as an offset and we can search we
01:29 - can search through this string for the
01:31 - position of each of each word so let's
01:36 - go ahead and we'll test this function
01:38 - first of all to see if we're achieving
01:41 - the results that we want and then I'm
01:43 - going to talk a little bit about how we
01:45 - can loop to find a few different words
01:49 - inside so you'll actually notice that
01:51 - we've got is here so it is within this
01:54 - we've got is here and we've also got is
01:57 - here so we've got 3 instances of the
02:00 - word is so I'm just going to put that
02:02 - into a variable called find up here for
02:04 - now so we can use that later on and
02:06 - we're also going to need the length of
02:08 - find but I'll tell you why a bit later
02:11 - so
02:12 - need to say find length and that is
02:14 - equal to the string length so we're
02:16 - bringing in a string or STR Len function
02:19 - of find so let's test this string
02:23 - position function so the first argument
02:25 - we need is the string itself which is
02:27 - this value here the second we need is
02:30 - the word to find and that is is so we
02:32 - can just pop that variable straight into
02:34 - there the third is it offset which is by
02:36 - default by zero so we don't need to
02:38 - include this just yet so now what we can
02:41 - do is we can echo out the value of this
02:44 - so let's come into our browser and
02:46 - refresh and you can see that we've been
02:48 - given the value two now what's happened
02:50 - - let's check - what one - and then
02:54 - that's the start of where this word is
02:56 - so that's fair enough but what about
02:58 - this this is here and this is here it's
03:01 - only going to return the first instance
03:03 - found after that it's not going to
03:05 - return every single position so we we
03:08 - need to find a way to loop somehow and
03:12 - find this one and return the position
03:14 - this one and return the position and
03:16 - this one and return the position so for
03:19 - example if I was set to set the offset
03:21 - to let's say 1 2 3 4 - 4 um actually no
03:28 - 0 1 2 3 yep 3 then you'll find that will
03:34 - return this position here which I think
03:37 - should be 5 so yet we've returned 5 and
03:39 - if we start the search site after this
03:42 - is here so let's say at 10 we get a
03:47 - value of 25 which is the start of this
03:50 - is here so you can see that we can use
03:53 - our offset to our advantage in a loop
03:55 - then once we found this first is let's
04:01 - say we found this at position 2 here so
04:04 - 0 1 2 we found this a position - then we
04:10 - can say well now I want to start
04:11 - searching two characters after this and
04:14 - we start the search from whether my
04:16 - correct is at the moment so here then
04:20 - once we found our position here we say
04:22 - well I want to search two characters
04:24 - after this and then
04:25 - we carry on the list so we need to we
04:29 - need to create a loop to do this and
04:32 - we've seen how string position works
04:36 - let's get rid of that for now so what we
04:39 - need to do is we need to create a while
04:41 - loop and will create the block there now
04:43 - the essence of the overall idea of this
04:46 - is that we're going to we're going to
04:48 - search while we're continually finding
04:52 - this string so as long as the string is
04:55 - found we're going to carry on searching
04:57 - and when it's not found we can break the
04:59 - loop this is why how our while loop is
05:01 - now coming into use so inside while I'm
05:04 - going to create a new variable and
05:06 - that's going to be called string
05:08 - position and this is going to be equal
05:11 - to so remember we can assign variables
05:14 - values inside of our while loop so we're
05:17 - constantly reassigning this string
05:19 - position value that's going to be equal
05:22 - to string pause now we're going to set
05:23 - it up exactly the same as before
05:25 - so our first is the string the string
05:27 - we're searching and the second is the
05:29 - word to find thirdly I'm going to create
05:32 - this variable which I haven't set a
05:33 - value to yet called offset now the
05:36 - reason why I'm creating this is because
05:38 - now when we do find a string inside here
05:41 - we need to add two to the offset because
05:43 - we need to add this is two characters
05:47 - long and that's why I created this find
05:50 - length here so in actual fact file egg
05:54 - will be equal to two so whatever we
05:56 - change this to here we're always going
05:58 - to be at always updating our search
06:00 - because we've used functions to keep up
06:02 - with this so we're looking for is inside
06:06 - string with a particular offset let's
06:08 - just give the offset here a value of
06:11 - zero
06:11 - before we begin anything

Cleaned transcript:

hi this is Alex from PHP academy' back with another tutorial for the new Boston now in this video tutorial we're going to be looking at the function in PHP STR pause now SCR pause stands for string positions we've got string here position and what this function does is it takes three arguments two are required the first argument is the string that we want to search in the second argument is the keyword or character that we want to find within the string and the last and not an optional offset optional argument is the offset and the offset offset is where to start from the from within the string that you're searching so by default this will be 0 because we know that arrays or positions start at 0 and then increment from there so let's say we have a string here now I'm going to include a couple of keywords in the string that we might want to search for so for example it could be this is a string and it is an example now I've included two specific keywords I've included upwards rather is here and is here so eventually in this tutorial we're going to come up with a way where we can loop through each character of here as an offset and we can search we can search through this string for the position of each of each word so let's go ahead and we'll test this function first of all to see if we're achieving the results that we want and then I'm going to talk a little bit about how we can loop to find a few different words inside so you'll actually notice that we've got is here so it is within this we've got is here and we've also got is here so we've got 3 instances of the word is so I'm just going to put that into a variable called find up here for now so we can use that later on and we're also going to need the length of find but I'll tell you why a bit later so need to say find length and that is equal to the string length so we're bringing in a string or STR Len function of find so let's test this string position function so the first argument we need is the string itself which is this value here the second we need is the word to find and that is is so we can just pop that variable straight into there the third is it offset which is by default by zero so we don't need to include this just yet so now what we can do is we can echo out the value of this so let's come into our browser and refresh and you can see that we've been given the value two now what's happened let's check what one and then that's the start of where this word is so that's fair enough but what about this this is here and this is here it's only going to return the first instance found after that it's not going to return every single position so we we need to find a way to loop somehow and find this one and return the position this one and return the position and this one and return the position so for example if I was set to set the offset to let's say 1 2 3 4 4 um actually no 0 1 2 3 yep 3 then you'll find that will return this position here which I think should be 5 so yet we've returned 5 and if we start the search site after this is here so let's say at 10 we get a value of 25 which is the start of this is here so you can see that we can use our offset to our advantage in a loop then once we found this first is let's say we found this at position 2 here so 0 1 2 we found this a position then we can say well now I want to start searching two characters after this and we start the search from whether my correct is at the moment so here then once we found our position here we say well I want to search two characters after this and then we carry on the list so we need to we need to create a loop to do this and we've seen how string position works let's get rid of that for now so what we need to do is we need to create a while loop and will create the block there now the essence of the overall idea of this is that we're going to we're going to search while we're continually finding this string so as long as the string is found we're going to carry on searching and when it's not found we can break the loop this is why how our while loop is now coming into use so inside while I'm going to create a new variable and that's going to be called string position and this is going to be equal to so remember we can assign variables values inside of our while loop so we're constantly reassigning this string position value that's going to be equal to string pause now we're going to set it up exactly the same as before so our first is the string the string we're searching and the second is the word to find thirdly I'm going to create this variable which I haven't set a value to yet called offset now the reason why I'm creating this is because now when we do find a string inside here we need to add two to the offset because we need to add this is two characters long and that's why I created this find length here so in actual fact file egg will be equal to two so whatever we change this to here we're always going to be at always updating our search because we've used functions to keep up with this so we're looking for is inside string with a particular offset let's just give the offset here a value of zero before we begin anything
