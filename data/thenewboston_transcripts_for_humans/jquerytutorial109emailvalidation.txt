With timestamps:

00:02 - and then finally we are just placing the
00:04 - data that we've just discussed inside
00:06 - our email feedback div uh
00:09 - span let's refresh and uh test this out
00:12 - so I'm going to go ahead and type
00:14 - Alex um in fact we can't really test its
00:18 - functionality until we've done something
00:19 - in email. PHP and that's to pick up this
00:22 - variable and return it so I'm going to
00:25 - create an if statement I'm going to
00:27 - first of all check if the email variable
00:29 - that sent is set so I've used if is set
00:34 - post email then I'm going to go ahead
00:36 - and echo doore
00:40 - poost in fact let's just make this into
00:42 - a variable so email equals dollcore
00:46 - poost email now uh just a quick note
00:49 - it's up to you whether you want to
00:51 - sanitize this data or not if it's going
00:53 - into a database then it's strongly or
00:57 - highly recommended you sanitize this
00:59 - data and by that I mean either use
01:02 - HTML entities if you know you're
01:04 - displaying it onto a page at further
01:06 - times uh this will help prevent um
01:09 - cross-site scripting attacks so xss
01:11 - attacks or the
01:13 - MySQL real
01:16 - Escape string function uh which will
01:19 - replace uh specific special characters
01:22 - in order to help prevent SQL injection
01:25 - however for the purposes of this
01:26 - tutorial I'm neither putting my data
01:28 - into a database
01:30 - table nor am I displaying it back to the
01:33 - user so I'm not going to saniz sanitize
01:36 - the data in this case anyway we're going
01:38 - to go ahead and Echo our email so now
01:41 - our Ajax is sending the data we're then
01:44 - retrieving the data here and we're then
01:46 - echoing it back out now the echo will
01:49 - then be placed into this data variable
01:52 - and then inside the email feedback span
01:55 - so let's go ahead and test so I'm going
01:57 - to type Alex and you can see that it's
01:59 - returning everything I type so Alex at
02:02 - PHP academy.org it's constantly
02:05 - returning this value now the one thing
02:07 - to knowe is that I'm moving away and
02:09 - coming back and it's still carrying out
02:12 - this um validate email function it's not
02:17 - when we focus in just showing go on
02:20 - enter valid email address so that's an
02:22 - important stage of it that we're calling
02:24 - the function at these two uh key points
02:27 - where we need the validation to take
02:29 - place
02:30 - okay so now let's go on to actually um
02:33 - validating and then returning this
02:36 - value so um let's just get rid of that
02:38 - for
02:39 - now um all I'm going to do inside of
02:42 - this function is return data okay so uh
02:45 - this function will then equal the data
02:48 - that we get back from email. PHP and
02:51 - inside here we need to start actually
02:52 - validating the email address so I'm
02:55 - going to create an if statement here um
02:57 - I'm going to say if not empty
03:00 - email we're going to go ahead and do
03:02 - something here so the email address must
03:05 - contain some value and then going to
03:08 - create another if statement and the
03:10 - condition for this uh we're going to use
03:11 - the
03:12 - filter VAR
03:15 - function and the filter VAR function
03:17 - takes typically two parameters we're
03:19 - only going to be giving it two you can
03:21 - spec uh specify additional par
03:23 - parameters but we're not going to uh be
03:26 - using them uh filter V we're validating
03:29 - this email address and we need to say
03:32 - filter validate email now this function
03:35 - will either return true or false so if
03:38 - it's equal to false we know that uh the
03:42 - email address is not valid so we're
03:44 - going to
03:45 - Echo that
03:47 - doesn't appear to be a valid email
03:53 - address
03:56 - otherwise we should have a valid email
03:58 - or we will have a valid email let's just
04:00 - tidy them up and then we can Echo valid
04:04 - email address okay so now we are passing
04:09 - this variable email we are checking it
04:11 - using the filter VAR function against
04:13 - false first of all um then we're just
04:15 - returning the appropriate error
04:17 - otherwise we assume a valid email
04:19 - address now at the moment I've just
04:22 - returned this data so this data will now
04:24 - either either contain this value here or
04:28 - this value here
04:30 - now we need to actually display it so
04:31 - we've returned the data and you'll
04:33 - notice that nothing will actually
04:37 - display you'll see that we you know we
04:40 - aren't we aren't actually displaying
04:42 - anything inside of that um inside of the
04:46 - span here the reason for this is because
04:48 - we've only returned the data and we
04:50 - haven't actually echoed it out or sorry
04:52 - not echoed it out applied it to this
04:55 - email feedback div so what I'm going to
04:57 - do is I'm just going to create a
05:00 - variable called result and that's going
05:02 - to equal validate
05:05 - email um I'm going to do the same here
05:07 - as well far result equals validate email
05:11 - now this is a bit inefficient because
05:13 - we're we're creating the same variable
05:15 - twice for each well depending on each uh
05:19 - event we choose um we could Define this
05:22 - as
05:23 - a um as a variable
05:26 - elsewhere
05:28 - um however just for now we're going to
05:30 - be keeping them as two separate um
05:33 - variables

Cleaned transcript:

and then finally we are just placing the data that we've just discussed inside our email feedback div uh span let's refresh and uh test this out so I'm going to go ahead and type Alex um in fact we can't really test its functionality until we've done something in email. PHP and that's to pick up this variable and return it so I'm going to create an if statement I'm going to first of all check if the email variable that sent is set so I've used if is set post email then I'm going to go ahead and echo doore poost in fact let's just make this into a variable so email equals dollcore poost email now uh just a quick note it's up to you whether you want to sanitize this data or not if it's going into a database then it's strongly or highly recommended you sanitize this data and by that I mean either use HTML entities if you know you're displaying it onto a page at further times uh this will help prevent um crosssite scripting attacks so xss attacks or the MySQL real Escape string function uh which will replace uh specific special characters in order to help prevent SQL injection however for the purposes of this tutorial I'm neither putting my data into a database table nor am I displaying it back to the user so I'm not going to saniz sanitize the data in this case anyway we're going to go ahead and Echo our email so now our Ajax is sending the data we're then retrieving the data here and we're then echoing it back out now the echo will then be placed into this data variable and then inside the email feedback span so let's go ahead and test so I'm going to type Alex and you can see that it's returning everything I type so Alex at PHP academy.org it's constantly returning this value now the one thing to knowe is that I'm moving away and coming back and it's still carrying out this um validate email function it's not when we focus in just showing go on enter valid email address so that's an important stage of it that we're calling the function at these two uh key points where we need the validation to take place okay so now let's go on to actually um validating and then returning this value so um let's just get rid of that for now um all I'm going to do inside of this function is return data okay so uh this function will then equal the data that we get back from email. PHP and inside here we need to start actually validating the email address so I'm going to create an if statement here um I'm going to say if not empty email we're going to go ahead and do something here so the email address must contain some value and then going to create another if statement and the condition for this uh we're going to use the filter VAR function and the filter VAR function takes typically two parameters we're only going to be giving it two you can spec uh specify additional par parameters but we're not going to uh be using them uh filter V we're validating this email address and we need to say filter validate email now this function will either return true or false so if it's equal to false we know that uh the email address is not valid so we're going to Echo that doesn't appear to be a valid email address otherwise we should have a valid email or we will have a valid email let's just tidy them up and then we can Echo valid email address okay so now we are passing this variable email we are checking it using the filter VAR function against false first of all um then we're just returning the appropriate error otherwise we assume a valid email address now at the moment I've just returned this data so this data will now either either contain this value here or this value here now we need to actually display it so we've returned the data and you'll notice that nothing will actually display you'll see that we you know we aren't we aren't actually displaying anything inside of that um inside of the span here the reason for this is because we've only returned the data and we haven't actually echoed it out or sorry not echoed it out applied it to this email feedback div so what I'm going to do is I'm just going to create a variable called result and that's going to equal validate email um I'm going to do the same here as well far result equals validate email now this is a bit inefficient because we're we're creating the same variable twice for each well depending on each uh event we choose um we could Define this as a um as a variable elsewhere um however just for now we're going to be keeping them as two separate um variables
