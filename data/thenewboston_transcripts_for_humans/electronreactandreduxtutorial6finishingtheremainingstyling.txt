With timestamps:

00:00 - I welcome back and in the last video
00:03 - just a little recap of what we did is we
00:05 - styled these top cards right there
00:07 - looking beautiful and in this video what
00:10 - we'll do is just continue chugging along
00:12 - going down styling one of these
00:14 - components at a time so the next one up
00:17 - is the connection status and just a
00:19 - little refresher of what this is going
00:21 - to be for this component what we'll have
00:24 - is a little like indicator light or
00:26 - pretty much just a icon and then we'll
00:29 - have some text on the right hand side
00:32 - depending on the state of this
00:33 - connection so that's it should be a nice
00:36 - easy component
00:38 - so let me pop this open and the
00:40 - connection status component in Styles
00:42 - file
00:43 - all right so the first thing I want to
00:45 - do is actually bump this down a little
00:47 - bit more it looked a little too close to
00:49 - those top cards
00:50 - and we're going to have two different
00:53 - elements in here so
00:56 - let's go ahead and display Flex they're
00:59 - going to be in a row by default and for
01:01 - alignment
01:03 - those can be Center aligned with one
01:04 - another
01:05 - and the first thing that we want to do
01:08 - is actually add that icon and to add
01:12 - that icon it's pretty much the exact
01:14 - same as the pencil icon so we can just
01:18 - kind of steal some of this from spaced
01:21 - items
01:22 - so to import the exact icon path
01:27 - we will do MDI Circle
01:30 - all right that looks good and then
01:33 - for this icon
01:36 - styling
01:39 - I really hate to type this out so I I
01:42 - copy whenever I can alright so we'll
01:45 - copy this and then I believe that's all
01:47 - we need to steal from the time being
01:49 - so we'll call this component icon as
01:51 - well and
01:53 - are great so how do we want to style
01:55 - this well for the color
01:58 - this is actually a pretty neat feature
02:00 - so I'm just going to hard code this
02:02 - greenish color in right now however what
02:04 - I'm going to show you in sometime in the
02:07 - future is that whenever we pass props
02:10 - into our component right here and
02:13 - actually let me just finish styling this
02:15 - will be easier to explain so s dot icon
02:20 - and just like before our path is this
02:24 - path which is just going to be a circle
02:25 - and for the size of this let's just say
02:28 - uh 14 pixels
02:31 - anyways what I was saying is that you
02:34 - know how we can pass any props into our
02:37 - like elements right here well because
02:39 - these are style components they are
02:41 - actually components meaning that if we
02:44 - have any state or props here and we want
02:46 - to pass them along to this component
02:48 - then we can actually accept those props
02:51 - right in here and we can not like write
02:55 - logic it's just some simple templating
02:57 - logic but either way based on what we
02:59 - pass into this component right here we
03:02 - can update the color to be like red or
03:04 - green or gray or whatever we want so it
03:06 - isn't just we have these components and
03:09 - we can override some Styles and it's
03:11 - just strict CSS it does have some pretty
03:14 - cool logic that we're going to be
03:15 - digging into in just a bit but anyways
03:19 - now that I said that give you a little
03:21 - teaser of what's to come to the right
03:23 - hand side
03:25 - of this let me zoom in a little bit I
03:28 - want a little bit of space right here
03:29 - between the icon and the text
03:32 - so we'll go with uh apixels right now so
03:35 - margin right
03:36 - eight pixels
03:38 - and now aside from that we also want
03:41 - some
03:43 - just call it text
03:47 - it's important the text
03:50 - and for the text styling let's just
03:54 - use in this color and we'll say uh 13
03:57 - pixels see how that looks
04:03 - all right I believe that's it so icon on
04:06 - the left
04:08 - text on the right
04:10 - and
04:13 - we'll just hard code in connect it right
04:15 - now
04:16 - all right so nice and simple just what
04:18 - we're going for and now that that is
04:20 - taken care of let's go ahead and style
04:22 - this main button
04:24 - so let me close up these
04:29 - open main button component in Styles all
04:32 - right so for the main button it's going
04:36 - to be pretty simple basically just a a
04:39 - huge circle and then we'll put some text
04:41 - on the inside and maybe we'll add some
04:43 - cool hover properties to spice it up a
04:45 - little bit but for the text I actually
04:48 - want to say go
04:51 - maybe start but we can always change
04:55 - that later on I gotta you know kind of
04:56 - get a feel for things once this is live
04:59 - up in action
05:01 - all right so it's going to say go in the
05:03 - center and let's see for the margin top
05:06 - let me bring this down a little bit
05:11 - all right so let's
05:15 - and by the way
05:17 - um for this element main button we don't
05:19 - need to add like any button element or
05:21 - any more divs we can just style this
05:23 - container straight up since it's like I
05:25 - said just a big circle so to give that
05:28 - round appearance we'll do border radius
05:30 - 50 percent
05:31 - and
05:33 - let me actually display this is flex
05:35 - because just like this University app we
05:40 - want just this text right here to float
05:42 - inside the middle of this entire
05:44 - container
05:46 - so to do that we'll say display Flex
05:51 - and we'll say a line item Center
05:56 - and also justify content Center
06:00 - all right so aside from this let me
06:03 - think
06:05 - let's go ahead and give it a width of 40
06:08 - percent
06:10 - and then I'm also going to include
06:12 - another
06:13 - uh property called aspect ratio and I'm
06:16 - going to do one to one and what this
06:18 - does is it ensures that the height of
06:22 - this element matches the width now
06:24 - without a border this is all going to be
06:27 - a little bit hard to see but before we
06:29 - add a border I just want to go ahead and
06:31 - add a color
06:33 - and then for the Border itself
06:37 - let's do one pixel solid and then we'll
06:41 - just borrow this color as well
06:45 - all right so let's see how things are
06:46 - looking so far
06:48 - Hmm this is interesting
06:51 - so okay oh I guess we got a couple
06:55 - things we have to work on but I actually
06:58 - never knew this before and it appears
07:02 - that the aspect ratio is working up to a
07:05 - certain point in the sense that the
07:07 - width of this is indeed uh forty percent
07:09 - and that the height of this is also kind
07:14 - of tracking along with that however
07:16 - what's happening
07:17 - it looks like is once we get to a
07:22 - certain point here it doesn't have
07:24 - enough vertical space to maintain that
07:26 - same one-to-one aspect ratio just
07:29 - because it has more horizontal space
07:31 - than vertical spaces available
07:33 - so what I'm thinking is that maybe we
07:37 - can just hard code value in so let's say
07:41 - the width for now and if anyone has an
07:44 - elegant solution to this then uh leave a
07:45 - comment below let me know
07:47 - but let's say let me just throw
07:49 - something in there for now so with this
07:51 - 200 pixels
07:53 - I think we're going to come across the
07:54 - same problem
08:00 - oh what to do what to do actually let me
08:03 - do this
08:04 - so we'll keep this Logic for now and
08:08 - we'll uh leave it up to the community to
08:11 - figure out an elegant solution to the Go
08:14 - Button problem the infamous Go Button
08:17 - problem and like I said we have some
08:19 - fine tuning to do in terms of
08:21 - responsiveness anyways but what we'll do
08:24 - is we'll save that for the very end
08:25 - because I already know whenever I
08:28 - include the empty State element here for
08:30 - example that it's going to be a
08:31 - different height than these and I'm
08:33 - gonna have to figure out that responsive
08:35 - issue and we'll do the button if uh no
08:39 - one from the community has anything then
08:41 - I'll figure out a solution and then
08:44 - these cards probably just stack them on
08:46 - top of each other but all this fine
08:47 - tuning can wait until a little bit later
08:50 - it'll be better then we'll have live
08:51 - data anyways
08:53 - all right so let's see what else I can
08:57 - probably bump up the font so let's do
09:00 - font size 36 pixels and for font weight
09:05 - I wanna
09:06 - make this a little bit thinner than
09:08 - usual
09:10 - see how this is looking
09:11 - all right pretty good pretty good
09:18 - all right pretty cool and then let's see
09:21 - what else of course we can add in our
09:23 - hover state so
09:26 - just like before
09:31 - the hover property what we want to do is
09:34 - we want to have this background color
09:38 - and we're going to use rgba rather than
09:41 - hex because I want to tap into this
09:42 - opacity value all in one trabang as well
09:45 - and for the color of this
09:50 - actually can we just keep this color the
09:52 - same
09:53 - we'll just keep the text color the same
09:55 - unless it uh looks weird but the last
09:57 - thing I want to do is I want to have
09:58 - cursor as a pointer
10:01 - this is looking
10:03 - all right not bad not bad the only other
10:06 - thing I would say is if we could add a
10:09 - nice little transition
10:11 - and for this we'll say transitional
10:15 - 0.2 seconds
10:18 - and we'll see how this feels
10:20 - oh yeah much better maybe even uh bring
10:24 - this down to 200 let's see
10:28 - hmm
10:30 - I think I had like 200 better than three
10:33 - all right 300 sticking with it
10:36 - so we got some responsive issues but
10:38 - we'll save that for later on when we
10:41 - make all these responsive related tweaks
10:44 - for now we can move on to the timer and
10:47 - let me pull up what I got right here
10:49 - so the timer is just gonna say whenever
10:52 - we have a request pending and we're
10:55 - waiting for a response it'll just uh
10:57 - like live update and another thing that
11:00 - I'm thinking now that I'm looking at
11:02 - this is we probably want to have the
11:04 - numbers on top and maybe this seconds
11:08 - right under here in like a lighter
11:11 - smaller font so I think that'll look
11:14 - pretty good
11:15 - so let's close all these and go to our
11:19 - timer component
11:22 - and all right so the timer let me see
11:25 - the spacing too maybe bump it down from
11:28 - this button a bit so for the margin top
11:31 - let's go 24 pixels
11:35 - and since we are gonna have two elements
11:38 - stacked on top of each other what we can
11:40 - do
11:42 - is display this is flex
11:44 - and
11:47 - Flex Direction column
11:51 - what's up and then we'll say align item
11:54 - Center
11:55 - so that they look nice and aligned and
11:59 - then we are going to have two divs one
12:01 - for the top text and one for the bottom
12:03 - text
12:10 - all right so for the top text let me
12:12 - steal one of these colors
12:14 - and for the uh again the top text is
12:16 - going to be the the numbers or the
12:18 - countdown so we want this font kind of
12:21 - big so let's go with 28 pixels
12:24 - and for the font weight
12:28 - let's go with the 200 and the reason we
12:32 - don't want it too bold is because we
12:34 - don't want this to outshine the go text
12:38 - right there so that should be good for
12:40 - the top text now
12:43 - I steal this for the bottom text which
12:45 - is the seconds counter
12:48 - and for this
12:50 - we use a more subtle color and of course
12:53 - the font size is going to be quite a bit
12:55 - smaller we'll go 12 and just bump it
12:58 - down a bit so margin top
13:01 - 2 pixels
13:04 - all right so in this container instead
13:07 - of timer we have S top text
13:10 - and then under here
13:12 - bottom text this is going to say seconds
13:15 - and for some sample
13:18 - 1.2345
13:21 - all right looks not aligned the justify
13:25 - content I always get Justified content
13:28 - all right uh align item Center Justified
13:32 - content Center wait a minute
13:35 - why isn't this aligning
13:39 - oh that's because I have aligned content
13:41 - instead of align items it's so
13:43 - embarrassing uh align items there we go
13:47 - hopefully they fixed it beautiful
13:50 - okay and now I think we should be good
13:54 - on this so now on to history
13:57 - all right so for the History Section
13:59 - what we'll have is a header and then
14:01 - we'll just have a table with four
14:03 - columns and even though I didn't show it
14:06 - here we'll also have a table header just
14:07 - to kind of label these columns
14:10 - so on that note what I'm actually gonna
14:12 - do is I'm just going to write everything
14:13 - in HTML and then we'll go and make the
14:16 - style components so
14:19 - we'll make this actual heading which we
14:22 - probably should have done for the other
14:23 - headings but either way
14:24 - uh after this
14:26 - we're going to have a table and the
14:28 - table is going to have
14:31 - a t head
14:33 - and then T body
14:35 - all right so four columns
14:39 - and let me just copy this
14:43 - all right so the columns are going to be
14:45 - accounts Network
14:48 - date
14:50 - and the speed
14:53 - is going to be like
14:54 - 0.15 seconds or whatever
14:57 - and then for the table body we actually
14:59 - need table rows and then each other
15:01 - these rows
15:04 - actually let me just create one then
15:06 - I'll just copy it all right so for a
15:10 - sample account
15:13 - already have on the right
15:15 - all right so we'll have a snippet kind
15:18 - of like we do for this chat
15:21 - where
15:22 - we don't want to display the full
15:25 - account number because it's it's well
15:28 - really it's just kind of long so we'll
15:30 - truncate it and I don't know exactly how
15:34 - long we're gonna have to truncate it but
15:37 - we'll just include these characters for
15:39 - now and then the network will use the
15:42 - shorthand
15:43 - and then the date well actually uh
15:46 - create a utility function to format our
15:48 - dates properly because the standard that
15:51 - I'm going for is internally in tnb OS
15:54 - like whenever we send messages or
15:56 - whenever we are going to log any of
15:58 - these tests
15:59 - then the date is always stored is a UTC
16:03 - date time object however
16:06 - since we have that standard we can just
16:08 - create utility functions to display them
16:10 - like shorthand or logger hand with a the
16:13 - time included or maybe we want to write
16:16 - out the days like days of the week like
16:18 - month Monday is mon however we want to
16:21 - do it we'll decide that later for right
16:23 - now we'll just put a sample date in
16:24 - and then for the speed I'll put like
16:28 - 1.2345 seconds
16:31 - all right so let me just make sure that
16:33 - this is all right looking good nothing
16:35 - breaking it looks pretty ugly right now
16:37 - but just want to get some sample data in
16:39 - there
16:40 - and I'll just create this other row
16:42 - all right so now that we got that taken
16:44 - care of let's go ahead and start
16:45 - replacing these with styled components
16:48 - and for this container let me check this
16:51 - out
16:53 - all right margin top uh actually let's
16:56 - spread this you see how in this top
16:58 - section right here that I had width 100
17:01 - and it kind of just forces everything to
17:03 - butt up right against the edge I want to
17:05 - do the same with this history table
17:06 - since well I just think it's going to
17:09 - need that full width so in this
17:11 - container I'm going to do width 100
17:13 - poison
17:15 - and then or just called the heading
17:18 - heading so export
17:20 - const heading
17:22 - set this equal to styled H1
17:31 - all right so this heading we can have
17:33 - this color right here
17:36 - and for the font size let's try 15
17:39 - pixels
17:42 - uh for font wait I want a little bit
17:44 - more bold so let's go with 700 and for
17:48 - the margin
17:50 - um I believe that headings have margin
17:52 - by default so I want all margins to zero
17:57 - aside from the bottom margin which is
17:59 - going to be we'll say eight pixels see
18:00 - how that looks so zero zero for the
18:03 - right eight pixels for the bottom and
18:04 - zero for the left
18:06 - and then since we have this we can just
18:09 - replace this H1 with our styled heading
18:16 - and then we can take a peek at our
18:19 - heading and see how it looks all right
18:21 - it's looking pretty good actually
18:24 - okay next up let me give us more room
18:28 - right here
18:31 - all right so next up let's go ahead and
18:33 - style this table
18:38 - Explorer const
18:46 - all right so the table I also want to
18:49 - have a width of 100
18:52 - and aside from this another property I
18:55 - know I need to add is border collapse
18:59 - and we'll just set this equal to
19:00 - collapse and this just is going to
19:03 - ensure that whenever we style our cells
19:06 - um there isn't like this one pixel or a
19:09 - few pixel Border in between each one so
19:11 - if if you're ever like trying to style a
19:14 - cell and you're like margin zero padding
19:16 - zero and you still get this little space
19:18 - between them it's kind of annoying this
19:20 - is the property you're probably looking
19:21 - for and for the font size on this table
19:25 - we'll just go with 13 pixels
19:27 - and now
19:30 - oh forgot didn't even uh do this yet so
19:33 - s dot table
19:36 - get this one too and then that should
19:39 - all right looking good now a couple
19:42 - different uh things I want to do first
19:45 - of all I want to left line these and I
19:48 - also just want to give a slightly
19:49 - different styling from these uh the
19:52 - table heading from these table cells
19:56 - in these rows right here so let me go
19:58 - ahead and do that next
20:00 - so
20:02 - actually let me go ahead and make this
20:05 - uh the TDS and THS and then I'll add
20:08 - some consistent cell styling to both of
20:10 - those and then add some additional
20:12 - styling to the table heads so
20:15 - expert cons would just say TD
20:18 - equal to style dot TD
20:23 - and we can do the same for these cable
20:25 - headings
20:30 - and just to make sure that we are kind
20:33 - of uh seeing everything live
20:38 - all right so these THS can be replaced
20:40 - with s dot th
20:46 - you can probably just do find and
20:48 - replace easier than that but
20:50 - these right here can be replaced with
20:52 - TDS our own custom TV way better than
20:57 - these other HTML TDS
21:00 - and all right so now just make sure
21:02 - enough is breaking shouldn't change
21:04 - though since we didn't apply any styling
21:06 - yet
21:07 - and okay what do I want to do so for the
21:10 - table heading I want to make these a
21:12 - little bit more bold and left align them
21:14 - so we'll say font weight is 600.
21:17 - and we'll say text the line is equal to
21:20 - the left
21:22 - all right looking better and now the
21:25 - only thing that I want to do is actually
21:27 - apply some standardized styling to all
21:30 - of these cells whether they're uh cell
21:33 - in the table row or table heading
21:35 - so on that note what I'm gonna do is
21:38 - this I'll use a mix in I'll show you
21:40 - guys how to use this so I want to
21:43 - basically write a snippet of CSS and I'm
21:46 - going to be applying it in a few
21:48 - different elements right here so what I
21:51 - can do is just actually just rewrite the
21:52 - same thing over and over but since I
21:55 - know that if I update it in one place
21:57 - I'm just gonna need to update it in the
21:59 - other I'm going to make a consonant for
22:01 - that
22:02 - and I usually don't like to include the
22:04 - word
22:05 - styling in this style since uh I don't
22:09 - know something just feels weird about it
22:10 - however in this case the word cell
22:13 - styling or using this as a constant it
22:15 - just uh feels pretty intuitive so
22:18 - anyways what I'm gonna do for all of
22:20 - these table cells is I'm going to add a
22:22 - border on the bottom and then just give
22:24 - it some padding since I think this looks
22:26 - just a little bit squished together
22:28 - so all of these cells are going to have
22:30 - a border bottom and I'll just say one
22:33 - pixel solid
22:34 - I'm gonna get a color from over here
22:37 - all right this light gray right here and
22:40 - for the padding I'll say eight pixels
22:43 - and 12 pixels left and right so eight
22:46 - pixel top and bottom uh 12 pixels to the
22:49 - left and the right and now to apply this
22:52 - mixing to uh these different areas right
22:55 - here what we can do is use that
22:57 - templating language
22:59 - and that is dollar sign in those curly
23:01 - brackets now anything inside here is
23:04 - pretty much just going to be treated as
23:05 - JavaScript Within
23:08 - um the styled components so cell styling
23:12 - right there and I also want to apply
23:14 - this to the
23:15 - table headers as well so cell styling
23:18 - just like that now let's just make sure
23:20 - that those are applied
23:22 - beautiful
23:23 - and okay I also wanna
23:27 - yeah so um this is looking good but
23:31 - there's like a motorcycle outside I want
23:34 - to take the very first column and very
23:38 - last column and for the very first one I
23:40 - want to remove the left batting just so
23:42 - it's left aligned with this history word
23:44 - and for the right column even though
23:46 - it's going to be hard to see right now
23:48 - if we ever have long text it's gonna
23:50 - have this extra space on the right hand
23:52 - side that I don't want so I'll just go
23:55 - ahead and uh make another one of these
23:58 - actually I don't need to yeah okay I am
24:01 - pretty lazy so
24:03 - for this I'll just call it Edge padding
24:07 - and of course these are not the
24:09 - properties we want what we want to do is
24:11 - we're going to be applying these to the
24:13 - uh table data and table headings as well
24:16 - basically all the um the cells and what
24:19 - I'll say is the first child which is
24:21 - going to refer to the first cell or in
24:24 - other words basically the First Column
24:25 - and then the last child which is these
24:28 - last cells right here and that's how I'm
24:31 - going to kind of Select those elements
24:34 - so I'll say
24:36 - first child
24:39 - of each of these things that I'm going
24:40 - to apply to I'm going to have the
24:42 - padding left be zero
24:45 - and then you can probably guess what I'm
24:47 - gonna do next and that is for the last
24:50 - child
24:52 - I'm gonna have the padding right b0
24:57 - and then I just need to just like I
25:01 - applied the cell styling to both of
25:03 - those
25:05 - I can apply this Edge padding as well
25:09 - so there we go and now
25:11 - the first child in each of these which
25:14 - is just the first cell has no left
25:16 - padding and if you saw the rightmost
25:19 - cell also had a little bit pattern you
25:22 - removed we still have some space right
25:24 - here
25:24 - because they aren't right aligned but I
25:28 - don't know if that'll look weird another
25:30 - thing that I'm thinking is I don't like
25:33 - how this seconds keyword is kind of
25:35 - repetitive however what we can do is
25:39 - something like this
25:42 - all right we can remove it from each of
25:44 - the table rows and
25:48 - just have it here
25:51 - in the table header
25:53 - that looks kind of weird too maybe if I
25:55 - shorten that to s
25:57 - a
26:00 - that looks kind of weird too because
26:03 - uh even though it doesn't take us take
26:05 - up as much space it whenever I'm reading
26:08 - this I'm reading the word speed
26:10 - with an optional S at the end so speed
26:13 - or speeds you know I don't know uh okay
26:16 - so ux is not my strong suit if anyone
26:19 - has any suggestions uh let me know but
26:22 - for the time being
26:23 - even though I really not dig in this
26:26 - repetitive second in every single value
26:29 - right here
26:32 - okay nothing else look good but uh if
26:34 - any UI or ux Pros are out there then uh
26:37 - let me know what to do about this little
26:39 - issue as well but for the time being
26:43 - aside from those responsive issues that
26:46 - we already know that we're gonna have to
26:47 - fix
26:48 - then actually let's see how this looks
26:50 - when I squish it down wow this go bound
26:53 - this go button right here is uh not the
26:57 - proudest UI element I've ever designed
26:59 - let's say this uh this go oval all right
27:03 - but um you know overall not bad I mean
27:06 - compared to this thing that we were
27:08 - going off of
27:10 - then I have to say that this is indeed
27:13 - an improvement
27:14 - so on that note now that we have the
27:17 - basic styling taken care of I'll go
27:19 - ahead and push up these changes and for
27:21 - the next video I actually don't even
27:22 - have it planned out yet maybe we'll be
27:24 - getting into the Redux store structure
27:26 - who knows
27:28 - um yeah even though I don't know what
27:29 - it's going to be about I can promise you
27:31 - that it's going to be amazing probably
27:33 - the greatest video ever made not to you
27:35 - know hype it up but it's going to be
27:37 - pretty dope so anyways uh thanks for
27:39 - sticking along and I'll see you next
27:41 - time

Cleaned transcript:

I welcome back and in the last video just a little recap of what we did is we styled these top cards right there looking beautiful and in this video what we'll do is just continue chugging along going down styling one of these components at a time so the next one up is the connection status and just a little refresher of what this is going to be for this component what we'll have is a little like indicator light or pretty much just a icon and then we'll have some text on the right hand side depending on the state of this connection so that's it should be a nice easy component so let me pop this open and the connection status component in Styles file all right so the first thing I want to do is actually bump this down a little bit more it looked a little too close to those top cards and we're going to have two different elements in here so let's go ahead and display Flex they're going to be in a row by default and for alignment those can be Center aligned with one another and the first thing that we want to do is actually add that icon and to add that icon it's pretty much the exact same as the pencil icon so we can just kind of steal some of this from spaced items so to import the exact icon path we will do MDI Circle all right that looks good and then for this icon styling I really hate to type this out so I I copy whenever I can alright so we'll copy this and then I believe that's all we need to steal from the time being so we'll call this component icon as well and are great so how do we want to style this well for the color this is actually a pretty neat feature so I'm just going to hard code this greenish color in right now however what I'm going to show you in sometime in the future is that whenever we pass props into our component right here and actually let me just finish styling this will be easier to explain so s dot icon and just like before our path is this path which is just going to be a circle and for the size of this let's just say uh 14 pixels anyways what I was saying is that you know how we can pass any props into our like elements right here well because these are style components they are actually components meaning that if we have any state or props here and we want to pass them along to this component then we can actually accept those props right in here and we can not like write logic it's just some simple templating logic but either way based on what we pass into this component right here we can update the color to be like red or green or gray or whatever we want so it isn't just we have these components and we can override some Styles and it's just strict CSS it does have some pretty cool logic that we're going to be digging into in just a bit but anyways now that I said that give you a little teaser of what's to come to the right hand side of this let me zoom in a little bit I want a little bit of space right here between the icon and the text so we'll go with uh apixels right now so margin right eight pixels and now aside from that we also want some just call it text it's important the text and for the text styling let's just use in this color and we'll say uh 13 pixels see how that looks all right I believe that's it so icon on the left text on the right and we'll just hard code in connect it right now all right so nice and simple just what we're going for and now that that is taken care of let's go ahead and style this main button so let me close up these open main button component in Styles all right so for the main button it's going to be pretty simple basically just a a huge circle and then we'll put some text on the inside and maybe we'll add some cool hover properties to spice it up a little bit but for the text I actually want to say go maybe start but we can always change that later on I gotta you know kind of get a feel for things once this is live up in action all right so it's going to say go in the center and let's see for the margin top let me bring this down a little bit all right so let's and by the way um for this element main button we don't need to add like any button element or any more divs we can just style this container straight up since it's like I said just a big circle so to give that round appearance we'll do border radius 50 percent and let me actually display this is flex because just like this University app we want just this text right here to float inside the middle of this entire container so to do that we'll say display Flex and we'll say a line item Center and also justify content Center all right so aside from this let me think let's go ahead and give it a width of 40 percent and then I'm also going to include another uh property called aspect ratio and I'm going to do one to one and what this does is it ensures that the height of this element matches the width now without a border this is all going to be a little bit hard to see but before we add a border I just want to go ahead and add a color and then for the Border itself let's do one pixel solid and then we'll just borrow this color as well all right so let's see how things are looking so far Hmm this is interesting so okay oh I guess we got a couple things we have to work on but I actually never knew this before and it appears that the aspect ratio is working up to a certain point in the sense that the width of this is indeed uh forty percent and that the height of this is also kind of tracking along with that however what's happening it looks like is once we get to a certain point here it doesn't have enough vertical space to maintain that same onetoone aspect ratio just because it has more horizontal space than vertical spaces available so what I'm thinking is that maybe we can just hard code value in so let's say the width for now and if anyone has an elegant solution to this then uh leave a comment below let me know but let's say let me just throw something in there for now so with this 200 pixels I think we're going to come across the same problem oh what to do what to do actually let me do this so we'll keep this Logic for now and we'll uh leave it up to the community to figure out an elegant solution to the Go Button problem the infamous Go Button problem and like I said we have some fine tuning to do in terms of responsiveness anyways but what we'll do is we'll save that for the very end because I already know whenever I include the empty State element here for example that it's going to be a different height than these and I'm gonna have to figure out that responsive issue and we'll do the button if uh no one from the community has anything then I'll figure out a solution and then these cards probably just stack them on top of each other but all this fine tuning can wait until a little bit later it'll be better then we'll have live data anyways all right so let's see what else I can probably bump up the font so let's do font size 36 pixels and for font weight I wanna make this a little bit thinner than usual see how this is looking all right pretty good pretty good all right pretty cool and then let's see what else of course we can add in our hover state so just like before the hover property what we want to do is we want to have this background color and we're going to use rgba rather than hex because I want to tap into this opacity value all in one trabang as well and for the color of this actually can we just keep this color the same we'll just keep the text color the same unless it uh looks weird but the last thing I want to do is I want to have cursor as a pointer this is looking all right not bad not bad the only other thing I would say is if we could add a nice little transition and for this we'll say transitional 0.2 seconds and we'll see how this feels oh yeah much better maybe even uh bring this down to 200 let's see hmm I think I had like 200 better than three all right 300 sticking with it so we got some responsive issues but we'll save that for later on when we make all these responsive related tweaks for now we can move on to the timer and let me pull up what I got right here so the timer is just gonna say whenever we have a request pending and we're waiting for a response it'll just uh like live update and another thing that I'm thinking now that I'm looking at this is we probably want to have the numbers on top and maybe this seconds right under here in like a lighter smaller font so I think that'll look pretty good so let's close all these and go to our timer component and all right so the timer let me see the spacing too maybe bump it down from this button a bit so for the margin top let's go 24 pixels and since we are gonna have two elements stacked on top of each other what we can do is display this is flex and Flex Direction column what's up and then we'll say align item Center so that they look nice and aligned and then we are going to have two divs one for the top text and one for the bottom text all right so for the top text let me steal one of these colors and for the uh again the top text is going to be the the numbers or the countdown so we want this font kind of big so let's go with 28 pixels and for the font weight let's go with the 200 and the reason we don't want it too bold is because we don't want this to outshine the go text right there so that should be good for the top text now I steal this for the bottom text which is the seconds counter and for this we use a more subtle color and of course the font size is going to be quite a bit smaller we'll go 12 and just bump it down a bit so margin top 2 pixels all right so in this container instead of timer we have S top text and then under here bottom text this is going to say seconds and for some sample 1.2345 all right looks not aligned the justify content I always get Justified content all right uh align item Center Justified content Center wait a minute why isn't this aligning oh that's because I have aligned content instead of align items it's so embarrassing uh align items there we go hopefully they fixed it beautiful okay and now I think we should be good on this so now on to history all right so for the History Section what we'll have is a header and then we'll just have a table with four columns and even though I didn't show it here we'll also have a table header just to kind of label these columns so on that note what I'm actually gonna do is I'm just going to write everything in HTML and then we'll go and make the style components so we'll make this actual heading which we probably should have done for the other headings but either way uh after this we're going to have a table and the table is going to have a t head and then T body all right so four columns and let me just copy this all right so the columns are going to be accounts Network date and the speed is going to be like 0.15 seconds or whatever and then for the table body we actually need table rows and then each other these rows actually let me just create one then I'll just copy it all right so for a sample account already have on the right all right so we'll have a snippet kind of like we do for this chat where we don't want to display the full account number because it's it's well really it's just kind of long so we'll truncate it and I don't know exactly how long we're gonna have to truncate it but we'll just include these characters for now and then the network will use the shorthand and then the date well actually uh create a utility function to format our dates properly because the standard that I'm going for is internally in tnb OS like whenever we send messages or whenever we are going to log any of these tests then the date is always stored is a UTC date time object however since we have that standard we can just create utility functions to display them like shorthand or logger hand with a the time included or maybe we want to write out the days like days of the week like month Monday is mon however we want to do it we'll decide that later for right now we'll just put a sample date in and then for the speed I'll put like 1.2345 seconds all right so let me just make sure that this is all right looking good nothing breaking it looks pretty ugly right now but just want to get some sample data in there and I'll just create this other row all right so now that we got that taken care of let's go ahead and start replacing these with styled components and for this container let me check this out all right margin top uh actually let's spread this you see how in this top section right here that I had width 100 and it kind of just forces everything to butt up right against the edge I want to do the same with this history table since well I just think it's going to need that full width so in this container I'm going to do width 100 poison and then or just called the heading heading so export const heading set this equal to styled H1 all right so this heading we can have this color right here and for the font size let's try 15 pixels uh for font wait I want a little bit more bold so let's go with 700 and for the margin um I believe that headings have margin by default so I want all margins to zero aside from the bottom margin which is going to be we'll say eight pixels see how that looks so zero zero for the right eight pixels for the bottom and zero for the left and then since we have this we can just replace this H1 with our styled heading and then we can take a peek at our heading and see how it looks all right it's looking pretty good actually okay next up let me give us more room right here all right so next up let's go ahead and style this table Explorer const all right so the table I also want to have a width of 100 and aside from this another property I know I need to add is border collapse and we'll just set this equal to collapse and this just is going to ensure that whenever we style our cells um there isn't like this one pixel or a few pixel Border in between each one so if if you're ever like trying to style a cell and you're like margin zero padding zero and you still get this little space between them it's kind of annoying this is the property you're probably looking for and for the font size on this table we'll just go with 13 pixels and now oh forgot didn't even uh do this yet so s dot table get this one too and then that should all right looking good now a couple different uh things I want to do first of all I want to left line these and I also just want to give a slightly different styling from these uh the table heading from these table cells in these rows right here so let me go ahead and do that next so actually let me go ahead and make this uh the TDS and THS and then I'll add some consistent cell styling to both of those and then add some additional styling to the table heads so expert cons would just say TD equal to style dot TD and we can do the same for these cable headings and just to make sure that we are kind of uh seeing everything live all right so these THS can be replaced with s dot th you can probably just do find and replace easier than that but these right here can be replaced with TDS our own custom TV way better than these other HTML TDS and all right so now just make sure enough is breaking shouldn't change though since we didn't apply any styling yet and okay what do I want to do so for the table heading I want to make these a little bit more bold and left align them so we'll say font weight is 600. and we'll say text the line is equal to the left all right looking better and now the only thing that I want to do is actually apply some standardized styling to all of these cells whether they're uh cell in the table row or table heading so on that note what I'm gonna do is this I'll use a mix in I'll show you guys how to use this so I want to basically write a snippet of CSS and I'm going to be applying it in a few different elements right here so what I can do is just actually just rewrite the same thing over and over but since I know that if I update it in one place I'm just gonna need to update it in the other I'm going to make a consonant for that and I usually don't like to include the word styling in this style since uh I don't know something just feels weird about it however in this case the word cell styling or using this as a constant it just uh feels pretty intuitive so anyways what I'm gonna do for all of these table cells is I'm going to add a border on the bottom and then just give it some padding since I think this looks just a little bit squished together so all of these cells are going to have a border bottom and I'll just say one pixel solid I'm gonna get a color from over here all right this light gray right here and for the padding I'll say eight pixels and 12 pixels left and right so eight pixel top and bottom uh 12 pixels to the left and the right and now to apply this mixing to uh these different areas right here what we can do is use that templating language and that is dollar sign in those curly brackets now anything inside here is pretty much just going to be treated as JavaScript Within um the styled components so cell styling right there and I also want to apply this to the table headers as well so cell styling just like that now let's just make sure that those are applied beautiful and okay I also wanna yeah so um this is looking good but there's like a motorcycle outside I want to take the very first column and very last column and for the very first one I want to remove the left batting just so it's left aligned with this history word and for the right column even though it's going to be hard to see right now if we ever have long text it's gonna have this extra space on the right hand side that I don't want so I'll just go ahead and uh make another one of these actually I don't need to yeah okay I am pretty lazy so for this I'll just call it Edge padding and of course these are not the properties we want what we want to do is we're going to be applying these to the uh table data and table headings as well basically all the um the cells and what I'll say is the first child which is going to refer to the first cell or in other words basically the First Column and then the last child which is these last cells right here and that's how I'm going to kind of Select those elements so I'll say first child of each of these things that I'm going to apply to I'm going to have the padding left be zero and then you can probably guess what I'm gonna do next and that is for the last child I'm gonna have the padding right b0 and then I just need to just like I applied the cell styling to both of those I can apply this Edge padding as well so there we go and now the first child in each of these which is just the first cell has no left padding and if you saw the rightmost cell also had a little bit pattern you removed we still have some space right here because they aren't right aligned but I don't know if that'll look weird another thing that I'm thinking is I don't like how this seconds keyword is kind of repetitive however what we can do is something like this all right we can remove it from each of the table rows and just have it here in the table header that looks kind of weird too maybe if I shorten that to s a that looks kind of weird too because uh even though it doesn't take us take up as much space it whenever I'm reading this I'm reading the word speed with an optional S at the end so speed or speeds you know I don't know uh okay so ux is not my strong suit if anyone has any suggestions uh let me know but for the time being even though I really not dig in this repetitive second in every single value right here okay nothing else look good but uh if any UI or ux Pros are out there then uh let me know what to do about this little issue as well but for the time being aside from those responsive issues that we already know that we're gonna have to fix then actually let's see how this looks when I squish it down wow this go bound this go button right here is uh not the proudest UI element I've ever designed let's say this uh this go oval all right but um you know overall not bad I mean compared to this thing that we were going off of then I have to say that this is indeed an improvement so on that note now that we have the basic styling taken care of I'll go ahead and push up these changes and for the next video I actually don't even have it planned out yet maybe we'll be getting into the Redux store structure who knows um yeah even though I don't know what it's going to be about I can promise you that it's going to be amazing probably the greatest video ever made not to you know hype it up but it's going to be pretty dope so anyways uh thanks for sticking along and I'll see you next time
