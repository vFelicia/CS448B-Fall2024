With timestamps:

00:00 - plus another sali objects number value
00:03 - so basically we're going to have to
00:06 - Sally objects already we're going to
00:08 - have a Sally object that say has a
00:10 - number of 20 and another Sally object
00:13 - that has a number of 30 and whenever we
00:15 - create the brand new number it's going
00:18 - to have a value of 50 so that's where
00:20 - we're going to be returning the
00:21 - brand-new Sally object so in order to do
00:24 - that all you do is this return brand-new
00:29 - just like that
00:30 - and what this is going to is return the
00:33 - brand-new Sally object so basically
00:35 - we're going to be calling this on a
00:37 - Sally object that already exists and
00:39 - what it's going to do is this line is
00:42 - going to create a brand new Sally object
00:44 - right here we give a number value to the
00:47 - brand new Sally object and right here
00:49 - we're just returning that brand new
00:51 - Sally object simple enough so let's go
00:54 - ahead and well I guess now we can hop
00:56 - over to main and I can actually you know
00:58 - show you guys what's going on so the
01:01 - first thing we need is two already
01:03 - existing Sally objects with the number
01:05 - property that we can add together so
01:07 - Sally well we call this object a and
01:10 - we'll give it a value of like 34 now we
01:12 - need another one
01:13 - Sally B and we'll give this value 21 now
01:18 - we need a blank one because whenever we
01:20 - call this value remember it doesn't have
01:23 - a number property yet so that's what
01:25 - we're going to be giving it so let's go
01:27 - ahead and create a blank
01:28 - Sally object with a C and now all we
01:32 - need to do is this you might be thinking
01:34 - are a whenever I wanted to before like
01:38 - give a number property to the C value I
01:41 - would do something like C equals a dot
01:44 - add and then you would add B to that and
01:47 - I mean what that would do is
01:51 - whenever you wanted to add a number
01:52 - property to see it would take a and add
01:56 - B get some integer and add it to the
01:58 - property of C right there well with this
02:01 - overloaded operator you don't have to do
02:03 - that anymore
02:04 - here's we need to do C equals a plus B
02:07 - in that way whenever we use the plus
02:10 - sign C++ already knows that we have a
02:13 - special meaning for it right here so
02:16 - whenever it sees the plus sign call it
02:18 - on one of these objects it's going to
02:19 - know to run this function right here so
02:23 - let's go ahead and run this in now that
02:25 - we use that plus sign the C object has a
02:28 - number operty so let's go ahead and see
02:31 - out um c dot num and then let's go ahead
02:36 - and end that line and let me go ahead
02:38 - and run this real quick and I'll show
02:40 - you guys that it says 55 so what it did
02:43 - is basically this it took this number
02:46 - value 34 added this number value 21 it
02:50 - gave us 55 and through the use of our
02:53 - overloaded operator that's where we got
02:56 - the Sally num so let me talk you guys
02:58 - through one last time what's going on
03:00 - maybe this will clear things up for you
03:01 - in our very first line of code we
03:05 - created a Sally object and then um had a
03:08 - value of 34 so we know whenever we
03:10 - created a Sally object and we passed in
03:12 - an integer then assign that integer to
03:15 - the property of num so we have a Sally
03:18 - object in a Sally object is num 34b
03:22 - Sally object is num 21 and then we
03:27 - created a see Sally object and remember
03:29 - whenever we created a Sally object that
03:31 - we didn't pass in a parameter it just
03:34 - created a blank
03:35 - Sally object right here so we said all
03:38 - right with our blank Sally object we
03:41 - want to use a plus B so set all right I
03:45 - know this plus since you're trying to do
03:49 - something weird I know that you're
03:51 - trying to use this overloaded operator
03:53 - so it said RAC goes a plus B that means
03:57 - you're trying to use
03:59 - the Sallee object with this function
04:02 - right now so what it did is it took the
04:05 - current object which was a right there
04:09 - and this B was treated as the parameter
04:13 - another Sallee object so what it did it
04:15 - was it took the current object's number
04:17 - which was 34 it added another Sallee
04:22 - objects number which was 21 and it
04:27 - returned a brand new sally object with
04:31 - 55 is as its number so as its returned
04:35 - value we said equal to C so C now equals
04:38 - a brand new sally object with 55 as its
04:42 - number so that way whenever we printed
04:44 - out our brand new sally object with its
04:47 - new number that's why you printed out 55
04:50 - on the screen right there so again like
04:53 - I said operator overloading is a little
04:55 - weird because it basically takes your
04:58 - plus sign and you know you don't have to
05:03 - use a function name anymore so instead
05:05 - of this it pretty much changes that all
05:09 - into a plus sign so I know it's kind of
05:11 - a weird syntax at first and to be honest
05:13 - I don't use it a whole lot in my
05:15 - programming so if that gives you
05:16 - confidence that you're probably not
05:18 - going to be seeing this a whole lot then
05:20 - you know you can relax but I just want
05:22 - to give you guys the idea of what
05:23 - operator operator overloading is because
05:27 - you know whenever you're at a job and
05:28 - people are talking about it you don't
05:29 - get lost or whatever so that's what it
05:32 - is but you won't be seeing it all too
05:34 - much in my programs so now that you guys
05:37 - understand the concept of it thank you
05:40 - guys for watching don't forget
05:41 - subscribing you're probably going to
05:42 - have to re-watch this video a couple
05:43 - times and do some examples of your own
05:46 - and if you have any questions don't
05:47 - forget to check out my form the New
05:49 - Boston comm slash for them and hopefully
05:52 - I can answer for you so anyways one last
05:54 - time thank you guys for watching don't
05:55 - forget to subscribe and I'll see you
05:56 - guys later

Cleaned transcript:

plus another sali objects number value so basically we're going to have to Sally objects already we're going to have a Sally object that say has a number of 20 and another Sally object that has a number of 30 and whenever we create the brand new number it's going to have a value of 50 so that's where we're going to be returning the brandnew Sally object so in order to do that all you do is this return brandnew just like that and what this is going to is return the brandnew Sally object so basically we're going to be calling this on a Sally object that already exists and what it's going to do is this line is going to create a brand new Sally object right here we give a number value to the brand new Sally object and right here we're just returning that brand new Sally object simple enough so let's go ahead and well I guess now we can hop over to main and I can actually you know show you guys what's going on so the first thing we need is two already existing Sally objects with the number property that we can add together so Sally well we call this object a and we'll give it a value of like 34 now we need another one Sally B and we'll give this value 21 now we need a blank one because whenever we call this value remember it doesn't have a number property yet so that's what we're going to be giving it so let's go ahead and create a blank Sally object with a C and now all we need to do is this you might be thinking are a whenever I wanted to before like give a number property to the C value I would do something like C equals a dot add and then you would add B to that and I mean what that would do is whenever you wanted to add a number property to see it would take a and add B get some integer and add it to the property of C right there well with this overloaded operator you don't have to do that anymore here's we need to do C equals a plus B in that way whenever we use the plus sign C++ already knows that we have a special meaning for it right here so whenever it sees the plus sign call it on one of these objects it's going to know to run this function right here so let's go ahead and run this in now that we use that plus sign the C object has a number operty so let's go ahead and see out um c dot num and then let's go ahead and end that line and let me go ahead and run this real quick and I'll show you guys that it says 55 so what it did is basically this it took this number value 34 added this number value 21 it gave us 55 and through the use of our overloaded operator that's where we got the Sally num so let me talk you guys through one last time what's going on maybe this will clear things up for you in our very first line of code we created a Sally object and then um had a value of 34 so we know whenever we created a Sally object and we passed in an integer then assign that integer to the property of num so we have a Sally object in a Sally object is num 34b Sally object is num 21 and then we created a see Sally object and remember whenever we created a Sally object that we didn't pass in a parameter it just created a blank Sally object right here so we said all right with our blank Sally object we want to use a plus B so set all right I know this plus since you're trying to do something weird I know that you're trying to use this overloaded operator so it said RAC goes a plus B that means you're trying to use the Sallee object with this function right now so what it did is it took the current object which was a right there and this B was treated as the parameter another Sallee object so what it did it was it took the current object's number which was 34 it added another Sallee objects number which was 21 and it returned a brand new sally object with 55 is as its number so as its returned value we said equal to C so C now equals a brand new sally object with 55 as its number so that way whenever we printed out our brand new sally object with its new number that's why you printed out 55 on the screen right there so again like I said operator overloading is a little weird because it basically takes your plus sign and you know you don't have to use a function name anymore so instead of this it pretty much changes that all into a plus sign so I know it's kind of a weird syntax at first and to be honest I don't use it a whole lot in my programming so if that gives you confidence that you're probably not going to be seeing this a whole lot then you know you can relax but I just want to give you guys the idea of what operator operator overloading is because you know whenever you're at a job and people are talking about it you don't get lost or whatever so that's what it is but you won't be seeing it all too much in my programs so now that you guys understand the concept of it thank you guys for watching don't forget subscribing you're probably going to have to rewatch this video a couple times and do some examples of your own and if you have any questions don't forget to check out my form the New Boston comm slash for them and hopefully I can answer for you so anyways one last time thank you guys for watching don't forget to subscribe and I'll see you guys later
