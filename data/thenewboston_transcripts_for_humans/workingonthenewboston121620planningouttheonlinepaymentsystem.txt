With timestamps:

00:01 - all righty
00:03 - and apparently we are live
00:06 - let me get everything situated
00:09 - wait for it wait for it and actually let
00:12 - me share this
00:13 - on the old slack
00:18 - how you guys doing today or tonight
00:21 - whatever time it is
00:26 - oh wish i say in my slack message uh
00:29 - streaming working on the payments
00:33 - say working on online payments
00:42 - we've been working on online payments
00:44 - beautiful
00:47 - okay now what are we working on today
00:49 - online payments re
00:50 - james what up
00:56 - okay okay let's get to work so i don't
00:59 - know if you guys noticed but i
01:01 - got some lights now
01:06 - all right holy crap you're alive
01:11 - i am okay so anyways
01:15 - what i was planning to do today
01:18 - was work on our online payment system so
01:21 - actually i have it right here
01:23 - uh one second let me respond to some
01:25 - comments
01:26 - james welcome uh reed james okay
01:30 - two of them life king cole d
01:34 - what's up life of king from india india
01:36 - is representing here
01:37 - okay so anyways
01:40 - we are rolling out some versions of the
01:43 - marketplace
01:45 - and this last version
01:49 - is going to be accepting actual online
01:52 - payments
01:52 - but before we get that we're gonna roll
01:54 - out this version right here
01:58 - and all right so i'll walk you guys
02:00 - through the gist of it
02:02 - so whenever you log in uh there's gonna
02:04 - be a little login button right here so
02:06 - this is already logged in
02:07 - you're going to go to your profile and
02:09 - then you're going to see your test
02:10 - completed and your listings
02:12 - so this is the part that we're building
02:14 - out now the listings
02:16 - and the listings are just going to be
02:18 - any items that you have
02:20 - in the marketplace
02:25 - and let's see all right so
02:28 - this is all uh in being designed by the
02:31 - way so nothing's finalized
02:33 - i actually just saw this link in
02:36 - shouldn't even be reviewing it yet but i
02:39 - want to check it out
02:39 - okay so this is where you go to add a
02:42 - new listing
02:46 - actually why don't you just do this if
02:49 - i'm going to review it and if anyone has
02:51 - any comments leave them in the chat and
02:52 - then i can leave them
02:54 - on figma all right
02:57 - so you log in you go to your listings
02:59 - page and you see your listings
03:02 - now uh this is how the system is going
03:05 - to work where essentially
03:07 - whenever you are a new user you're going
03:09 - to have to have your products reviewed
03:11 - however once you become a trusted user
03:14 - like you sold 100 items or something
03:17 - then you can just
03:18 - add your items directly to the
03:19 - marketplace
03:21 - and this is so this is all new to me as
03:25 - well
03:25 - so let's go through together all right
03:28 - so this is draft means you're
03:30 - just started working on it you didn't
03:31 - publish or submit it yet
03:33 - this is live meaning it's in the
03:34 - marketplace and then this is rejected
03:37 - meaning something like well it could be
03:40 - something like porn
03:41 - but also some little things like if the
03:44 - pitcher doesn't match a description like
03:47 - if uh it's a bike and you describe it as
03:49 - a
03:50 - cat this freaking
03:53 - cat with bagels probably okay so
03:55 - [Music]
03:57 - all right just filtering
04:01 - okay now to add a new one
04:05 - hey what's this listing thing so this
04:07 - listing all right
04:09 - i might want to step back so the new
04:10 - boston open source development community
04:13 - is working on
04:14 - a digital currency and we are going to
04:17 - have a marketplace
04:20 - and let me see if i can actually pull up
04:22 - the marketplace itself
04:26 - and i don't know if we have it anywhere
04:29 - but either
04:30 - either way it's going to look pretty
04:31 - similar to this right here
04:33 - and our designer just submitted these
04:38 - wireframes for review so i'm just going
04:40 - to review them real quick
04:42 - in this little stream what i want to do
04:44 - is work on this online payment system
04:47 - but for now real quick i just want to go
04:49 - over this
04:51 - all right so adding an item
04:57 - you add your title images you can remove
05:00 - them
05:02 - one thing i don't see let me see if
05:04 - there's any with multiple images in here
05:07 - since i don't see a way if you upload
05:09 - multiple images then you can reorder
05:11 - them
05:12 - for example to see which one's your main
05:14 - image but again this is
05:16 - still early in development we really
05:19 - don't need to
05:20 - worry about that much okay
05:25 - price description title pretty simple
05:28 - stuff
05:29 - and then after that what do we got down
05:32 - here
05:35 - so pending tab how did we
05:40 - okay so this is for the admins
05:43 - i think
05:46 - [Music]
05:48 - but how did we get here all right so
05:50 - anyways
05:51 - this is
05:55 - okay so this is for the moderators and
05:59 - apparently they're gonna have another
06:01 - tab it seems like
06:04 - and then pending is right here any
06:06 - approved then you're rejected
06:08 - i'm oh so this is just to show you who
06:11 - the moderators
06:12 - are i suppose
06:15 - in their little stats it's interesting
06:19 - how
06:22 - okay very cool so i guess if you're a
06:24 - moderator you go to this review section
06:26 - see all your pending ones you can see
06:28 - the images
06:30 - title description the price the user and
06:33 - then you can
06:34 - accept and reject them i don't
06:37 - know what would happen when you rejected
06:39 - or approved
06:41 - because and this is the thing we were
06:44 - discussing last meeting where whenever
06:46 - you reject it
06:47 - if it's impending right now the moment
06:49 - you hit reject
06:50 - it should technically be in this reject
06:53 - section
06:54 - now we can just pop it out of here
06:58 - immediately and move it to the reject
06:59 - section but
07:02 - i don't know okay so hover
07:06 - very cool very cool when
07:10 - you reject you give it a reason why you
07:12 - rejected it
07:14 - so they got a little bit of feedback and
07:17 - it's pretty cool
07:19 - so if it doesn't fit one of the default
07:21 - then you can just
07:23 - specify your own reason
07:27 - okay very cool very cool
07:31 - very cool very cool all right let's go
07:34 - through these
07:35 - watching a lot manish what up
07:38 - uh is this part of the series with other
07:40 - crypto videos i haven't had a
07:42 - chance to watch them yet no this is just
07:44 - a random stream
07:45 - i had some work to do and i was like i
07:47 - don't want to stream it
07:49 - all right what's this listening thing
07:50 - for the marketplace oh gee
07:52 - traces of nuts what up use waves boxer
07:56 - okay
07:59 - mystics guy
08:02 - uh
08:05 - very cool very cool very cool okay
08:11 - all right now let's get down to business
08:12 - so what
08:14 - i would like to do in this stream is
08:17 - work on the online payment system so
08:18 - essentially
08:20 - when any website any store wants to
08:23 - integrate
08:24 - then they're gonna say like uh accept
08:26 - payments online
08:27 - and we have to build the back end for
08:29 - that right now now what i did before
08:31 - this
08:32 - is i actually researched some other um
08:35 - i don't even know what they're called
08:37 - payment they're not payment processors
08:38 - they're
08:39 - something like that but we couldn't
08:42 - really use their model or it's not
08:44 - exactly what we were looking for because
08:46 - a lot of the payment systems they
08:48 - accepted bitcoin
08:50 - which was the most popular one now the
08:52 - thing about this
08:53 - is that it can't really apply to ours
08:56 - because
08:57 - bitcoin takes 10 minute transaction
08:59 - times and we want our
09:01 - system to act more like a credit card
09:04 - not on the back end but kind of the feel
09:06 - of it where you have your
09:09 - order and then like you added items to
09:11 - your shopping cart
09:12 - and you go to the order screen and it
09:14 - says submit your payment here
09:15 - whenever we submit the payment we want
09:17 - it to
09:19 - like hit the users and hit the user's ui
09:21 - in
09:22 - less than three seconds probably so
09:25 - with bitcoin since it's so long it's a
09:28 - whole different flow
09:29 - in a lot of different other currencies
09:31 - as well
09:34 - in night strike bg said let's talk about
09:36 - consciousness
09:38 - you guys cannot get me off track today
09:41 - all right yeah so bip
09:44 - bit pay is one uh skylar and
09:47 - coinbase has one i think it's called
09:49 - coinbase commerce or something
09:51 - but yeah the the flows were just a
09:55 - little bit
09:55 - funky when i tried to port it over to
09:57 - our architecture
09:59 - so i got a couple things in mind okay
10:03 - so the main goal is to make this
10:06 - as easy as possible for the user
10:09 - the secondary goal is to make it as easy
10:12 - as possible for the
10:13 - developers so who's ever going to be
10:16 - integrating
10:17 - and of course later on this can be like
10:19 - any website shopify or whatever
10:21 - but for now we're just going to assume
10:23 - that someone has a
10:25 - regular site that they have control of
10:26 - the back end and the front end
10:28 - so another fun fact is that
10:32 - right now the new boston.com in that
10:34 - marketplace that we're designing
10:36 - it is using uh django django arrest
10:39 - framework on the back end
10:40 - and on the front end single page
10:42 - application with react
10:44 - and the first implement a little
10:46 - implementation of this
10:47 - is going to be tested on our website so
10:51 - all right let's get down to it beautiful
10:54 - beautiful
10:56 - bucky's back good to see you man
10:58 - saruvanthi good to see you too
11:04 - be using memo hey uh
11:07 - sky what is that uh memo method i i saw
11:10 - you mention in a couple times but
11:13 - i didn't uh see where you posted it or
11:16 - if it was a document or a slack message
11:17 - or what
11:20 - and lower the amount of keys needed all
11:22 - right so here's what i was thinking
11:25 - the crappy thing about
11:28 - accepting online payments is that unless
11:31 - you want to
11:32 - like rewrite a huge chunk of your
11:33 - architecture then
11:35 - you essentially need to do this whenever
11:38 - someone's ready to pay for an item
11:40 - you need to take their order information
11:42 - which is like eight products three of
11:43 - these two of those
11:44 - and you need to map
11:48 - it to a payment on the network now
11:51 - inherently these two things aren't
11:53 - related like someone's random products
11:54 - that they're selling
11:56 - and also like the blockchain network
11:59 - so what we're going to do is essentially
12:00 - create a new account
12:02 - each time since when you create a new
12:04 - account you get a random account number
12:06 - and that random account number can be
12:08 - linked to the order
12:09 - so basically whenever you receive
12:13 - funds in that account which match or
12:16 - exceed if they want to pay more
12:17 - than the order then you know that the
12:19 - payment's verified and you can send the
12:20 - items or
12:22 - like give them the digital download
12:24 - whatever you want to do
12:27 - all right oh the memo oh
12:31 - so uh mr skies
12:35 - yeah so just like your bank account
12:37 - whenever you have a little description
12:39 - with each payment
12:40 - some people call it memo some people
12:42 - call it uh notes
12:43 - i heard or even just a description so
12:45 - that's what he was talking about and yes
12:47 - we are working on that and
12:51 - okay we're doing two things and then
12:52 - i'll get to it we're
12:54 - updating the blockchain to include memos
12:57 - and we are
12:58 - also um updating the blockchain to
13:00 - include
13:02 - indicating which transactions are
13:04 - transaction fees or which payments are
13:06 - transaction fees
13:08 - so we can kind of uh just help filtering
13:11 - another cool thing i know i said that
13:13 - that there was one more than i was going
13:14 - to get to it but
13:16 - i was talking with uh christy and some
13:18 - other people about this
13:20 - where right now we have a very
13:23 - fast uh block time so whenever i send
13:26 - something over the network you're gonna
13:27 - get it in like
13:28 - a second or we'll just assume you're
13:30 - overseas a second or two
13:32 - now the cool thing about this is that
13:37 - because of that once we add a memo we're
13:39 - essentially going to have this public
13:41 - messaging app so if you just format the
13:44 - ui a little bit differently then
13:46 - you can send someone onecoin in a
13:48 - message and then
13:50 - it's it just essentially becomes a
13:51 - messaging app
13:53 - now if you add a little bit of
13:54 - encryption
13:56 - to that and i didn't get into any of
13:58 - this i didn't even it was just a thought
14:01 - but we essentially have a secure
14:03 - distributed encrypting
14:04 - messaging app so that's
14:08 - down the road a bit uh not what we want
14:10 - to work on now
14:11 - but yeah there you go
14:16 - yes okay stripe why not use stripe js
14:20 - api
14:20 - because they do not accept coins
14:24 - yet not like we've been talking or
14:27 - anything but
14:28 - uh one day i'm sure they will
14:31 - so let's see let's see let's see
14:35 - so i got a couple notes here
14:40 - and let's check it out
14:43 - okay so another thing that i figured is
14:45 - that whenever these stores
14:46 - sign up i don't want my camera to shake
14:49 - whenever these stores
14:52 - um want to start accepting payments we
14:54 - know that we're going to have to create
14:55 - a key pair and someone's going to have
14:57 - to keep track
14:58 - of that sign-in key however we figured
15:01 - that
15:01 - they probably don't want to do that
15:02 - because it involves either setting up
15:04 - additional tables in their database or
15:06 - setting up cache or some file system or
15:08 - something however
15:10 - we can have the banks do it
15:14 - and the cool thing about this is that
15:16 - banks are already set up on the network
15:18 - banks are already set up to listen for
15:21 - transactions
15:22 - and they're hooked up to all the
15:23 - confirmation validators where they can
15:25 - say if you were expecting this payment
15:27 - now we know that it's confirmed and
15:31 - the idea in my head although this is
15:33 - subject to change according to your guys
15:35 - feedback
15:35 - but essentially stores in online shops
15:38 - are gonna
15:40 - register with these banks and say hey
15:42 - i'm listening for this payment
15:44 - so the bank is gonna say okay i'll let
15:46 - you know whenever it's confirmed
15:48 - and then the bank is gonna be the one to
15:51 - create this
15:51 - signing key and account number and
15:53 - they're going to return that
15:55 - to the store essentially saying that
15:57 - this is your like um
15:58 - a payment code but it's just an account
16:00 - number
16:01 - and then the bank is going to be able to
16:04 - listen no additional logic needed it's
16:06 - already doing its thing
16:07 - and then once it hears a payment for
16:10 - that amount
16:11 - then it's just going to notify the
16:13 - online store
16:14 - and the online store can choose whether
16:16 - they want to use web hooks or whether
16:18 - they want to use web sockets
16:20 - the bank is pretty flexible in that
16:22 - matter so
16:23 - the store is just gonna stream that
16:25 - information down to the user and gonna
16:27 - have a pretty nice ui
16:30 - all right now uh
16:33 - ice cream says bucky come to india
16:35 - sometime i want to go to india
16:37 - i don't think americans are allowed in
16:39 - now because we've been
16:42 - pretty silly with the virus but yeah
16:51 - okay mr sky you can save time by just
16:54 - using javascript to run a check
16:56 - for a memo it would save you lots
16:59 - of lodging so i believe
17:03 - what he is saying is that
17:08 - okay so instead of just putting
17:11 - something in the description of the
17:13 - payment like hey this is for ice cream
17:15 - or something
17:16 - to put something related to either the
17:19 - like a order information now
17:23 - once the store would hear that then they
17:25 - would know that on this confirmation
17:27 - block which is a valid payment
17:29 - it was related to this order however
17:33 - it gets a little bit tricky there
17:35 - because
17:36 - the store is still going to need that
17:39 - information
17:40 - now that information they can't just
17:43 - listen to because they don't want to
17:45 - hook up to confirmation validators
17:47 - essentially they would become a bank
17:49 - however
17:52 - what they could do is listen for that
17:55 - from
17:55 - a bank but then i think they would still
17:58 - need to
17:59 - manage their own sign-in key would they
18:04 - and he said you can put the payment code
18:07 - you put the payment code was paid via
18:09 - the memo
18:13 - hmm
18:17 - oh i see what you're saying that the
18:18 - store is going to give you
18:20 - a like an order id
18:23 - we'll just say and then whenever
18:27 - you pay for that order on the client
18:29 - side
18:30 - you can
18:34 - let me think about this
18:37 - so whenever you pay for that on the
18:39 - client side you essentially listen for
18:40 - your
18:41 - own confirmation block and then
18:44 - you would forward that
18:47 - okay let's get this you put the payment
18:50 - code was paid via the memo
18:52 - and then they would scan bank cs and
18:54 - handle their own keys
18:59 - yeah another thing about the
19:00 - architecture is that we set it up to be
19:03 - pretty efficient where
19:04 - banks don't listen for your transactions
19:09 - and they don't really like save them in
19:11 - their database unless you
19:12 - are a user at that bank and they
19:14 - indicate if you are a user if you ever
19:16 - sent a transaction
19:18 - through them so at that point in time
19:21 - the online store would have never sent a
19:24 - transaction
19:24 - through that bank and the user also gets
19:28 - to pick
19:28 - their own bank so the one that the
19:31 - online store was typically using and the
19:33 - one that the user was using would be a
19:35 - little bit
19:36 - they would most likely be different
19:38 - banks
19:41 - all right let's see store generates a
19:43 - code uh
19:44 - we'll just say it's an order number scan
19:47 - blocks
19:48 - for memo transactions and amount
19:54 - yeah keyboard is a thing so that's
19:56 - another thing as well
19:57 - where
20:00 - i figure that someone could just keep
20:03 - saying hey i want to order something i
20:05 - want to order something
20:06 - like just trying to spam the network and
20:09 - then
20:09 - these online stores could just continue
20:11 - creating keys and keys and keys and keys
20:12 - but they would never be paid
20:14 - but it would essentially be a way to
20:16 - bloat the bank's
20:18 - database and re james says
20:21 - sorry for the dumb question but what is
20:23 - going to be stored
20:25 - on chain in these cases so
20:28 - the way that this is written in the way
20:31 - that i uh
20:32 - i'm going to show you guys is that we
20:34 - really don't need anything
20:36 - stored on the chains because
20:40 - as long as the online store is able to
20:44 - have an order number which has all your
20:46 - order information
20:47 - and they relate it to an account number
20:50 - then they can
20:51 - listen for payments on that account
20:52 - number and then once
20:55 - the payment is complete then you know
20:57 - that the order is validated
20:59 - so let's just go ahead and mark it out
21:01 - and we'll get up my lucidcharts thing
21:03 - and yes mr skype please uh
21:07 - can you actually put that into google
21:09 - doc and send it to me on slack
21:11 - it might work out and in the meantime
21:14 - i'll get going with this early version
21:17 - so i actually created this my own shape
21:20 - library
21:23 - and if you guys have never used
21:25 - lucidchart before
21:26 - man lucidchart is probably the only
21:30 - company that i would uh
21:33 - do a sponsorship for just because i love
21:36 - their software so much
21:37 - genuinely all right so we have a bank
21:39 - right here and i got on my little
21:41 - primary validator
21:42 - key pair look at all these little
21:46 - amy since bob seven dollars okay so
21:48 - let's get the client out here too
21:57 - right in the scaling oh there we go
22:01 - all right zoom out a little bit
22:07 - how do i join slack if you go to the
22:10 - website the new boston.com you can
22:12 - either click join community
22:15 - all right get notification here join
22:17 - community
22:19 - or on the home page there's actually a
22:21 - slack icon
22:22 - on one of those blue charts so pretty
22:24 - cool
22:26 - all right so let me look at my cheat
22:29 - sheet here
22:29 - which is just my own notebook
22:35 - okay so we probably need a new shape for
22:38 - online store
22:40 - what about this this kind of looks like
22:41 - a store
22:48 - and what font size is this eight i gotta
22:51 - make sure all my font sizes are the same
22:53 - or
22:54 - make me frustrated
22:58 - okay and what story should what color
23:00 - should the store be
23:01 - avi avi green
23:05 - looks good
23:09 - okay so check it
23:15 - let me think let me think this entire
23:17 - stream is just gonna be
23:18 - me thinking not talking at all
23:29 - okay so pay the bank
23:33 - for a payment account
23:39 - yeah like this so the client isn't
23:41 - really brought into things yet
23:43 - what the store is going to do is it's
23:44 - going to pay the bank and let me get my
23:46 - sweet little arrows
23:50 - so store is going to pay the bank
23:54 - for a payment account
23:57 - and should we bust out these keys
24:00 - yeah why not the keys are coming out
24:05 - don't even that big though come on bucky
24:07 - let's knock it crazy here
24:12 - okay so here is the idea and here's
24:14 - another thing
24:16 - lochtar i agree
24:20 - okay so this is another thing that we
24:23 - need to consider
24:23 - that whenever the store wants to
24:26 - register with a bank
24:27 - for payment services let me straighten
24:29 - out my cam
24:31 - that the bank isn't just going to offer
24:33 - these services for free they're going to
24:35 - want to have some incentive
24:37 - for why they would be doing all this
24:38 - work for the store
24:40 - so there are a couple different models
24:43 - that we can run with
24:44 - one is
24:47 - pay per transaction so essentially
24:50 - whenever the store
24:53 - has an order that they need to process
24:55 - that they would just pay like a coin or
24:57 - two or
24:58 - it would be configurable but whatever
24:59 - the bank wants to create
25:02 - or configure it as another thing is that
25:05 - the store could say kind of like
25:07 - confirmation services that it would be
25:09 - paying for
25:10 - time so maybe it would
25:14 - say uh let's if you process transactions
25:18 - for me for the next
25:19 - day or two then i'll give you 10 coins
25:24 - and to charm introductory video i can
25:26 - see on digital currency
25:28 - if you go to my youtube channel i have a
25:30 - digital currency tutorial
25:32 - digital currency tutorial series there
25:34 - we go but anyways in this model we're
25:36 - gonna assume that this store is gonna
25:39 - pay the bank like one coin each for
25:41 - transaction
25:42 - so this was my idea and then i want to
25:44 - get your guys feedback on it
25:46 - so what the store is going to do is it's
25:48 - going to reach out to the bank and it's
25:49 - going to say hey i have
25:50 - order i need process it so in that case
25:53 - what the bank would do and i can
25:56 - probably get rid of
25:58 - this let me ungroup this
26:01 - ungroup and get out of here phone
26:04 - and i will call this what should we call
26:08 - this
26:08 - payment account
26:12 - terminator
26:16 - maybe order account
26:21 - yeah let's go order account
26:26 - 10 and then
26:32 - okay that's a little funky size
26:37 - okay so general idea
26:45 - is that whenever the store
26:50 - reaches out to the bank then the bank is
26:52 - going to go ahead and create an order
26:54 - account
26:58 - now the bank is going to store the
27:00 - signing key and i did like this behavior
27:02 - because i don't think the store is going
27:04 - to want
27:05 - store the signing key
27:09 - uh oh okay i should probably mention
27:10 - this so the store
27:12 - is actually uh the back end
27:15 - let me bring it like this
27:20 - all right store api just to make it
27:22 - clear
27:23 - so this is a store api which is the back
27:25 - end and
27:27 - we might as well do this uh the client
27:30 - is gonna say something like i want to
27:32 - place in
27:35 - rotor so the client is going to say
27:38 - something like i want to
27:39 - [Music]
27:41 - let's say i want to order a t-shirt
27:47 - so the client's going to say i want to
27:48 - order a t-shirt to the store api
27:51 - and the store is going to reach out to
27:53 - the bank and say
27:58 - i need an order
28:11 - oh man this uh gotta make it purty
28:16 - all right there we go so
28:20 - the client reaches out to the store and
28:21 - says i want to order a t-shirt
28:23 - assuming they already figured out price
28:24 - and everything and a car make sure it
28:26 - was in inventory everything's good to go
28:28 - the store's going to reach out to the
28:30 - bank and say hey i need an
28:31 - order account which is essentially a
28:34 - temporary account that the store can use
28:36 - so the bank is going to go ahead and
28:38 - create this order account
28:40 - which is essentially a new account with
28:41 - a new signing key the bank is going to
28:43 - manage
28:44 - the signing key since uh banks have to
28:46 - be secure anyways already hooked up to
28:48 - the network
28:49 - no need for the store to mess with it at
28:52 - all actually let me
28:54 - think skylar might have oh no not yet
28:58 - all right so the bank is going to create
29:00 - this order information
29:02 - and then let me see
29:07 - so the bank will store the signing key
29:09 - and that will be encrypted
29:17 - so then what we can do is
29:20 - and by the way in this flow uh
29:24 - how should i draw this
29:27 - maybe this is a bit easier
29:32 - take that move it over there move this
29:34 - over here
29:35 - here here you're here there there there
29:38 - and boom roasted peanut butter toasted
29:47 - oh that's pretty cool a new feature
29:49 - lucidchart
29:50 - okay so the client is going to say yo
29:52 - store want to order a t-shirt
29:54 - the store is going to say you need a
29:56 - payment account the bank is going to
29:57 - generate that hold on to the signing key
29:59 - and by the way these two stores are the
30:01 - same
30:03 - [Music]
30:05 - they're just different here because if i
30:07 - keep drawing arrows to the same object
30:09 - and things get kind of messy
30:10 - so just know that all right
30:14 - so what the bank's gonna do is create
30:15 - that and then it'll take this
30:17 - account number and send it back to the
30:20 - store
30:23 - now the store needs
30:28 - so the store is going to need to for
30:30 - this account number to the client
30:34 - because that is the account where the
30:37 - client needs to pay
30:41 - so the store can get that and this is
30:43 - all just going to be http
30:45 - let me move this over here actually
30:50 - so client makes a request to the store
30:55 - this is interesting
30:58 - so how long is is this fast enough to
31:02 - just stick over http
31:04 - or https i guess it would be but i'm
31:07 - thinking if we need a websocket in here
31:08 - where when the client
31:10 - reaches out the story they create this
31:12 - going to make a request to another
31:13 - server they're going to create
31:15 - an account number no additional requests
31:18 - needed so this should be very quick
31:20 - and they're just going to respond with
31:22 - this and it doesn't even involve
31:24 - querying the database or anything
31:26 - so yeah we're good right now this should
31:27 - take less than a second ideally
31:32 - and dave love said so it's not a store
31:34 - where you buy shoes it's the back end
31:36 - so this would be it could be
31:39 - a store where you buy shoes it's
31:41 - essentially just
31:42 - the um api
31:48 - it could be a shoe api
31:51 - all right so then the bank creates the
31:53 - account and then
31:54 - the store might put on some additional
31:56 - information and then the client will see
31:59 - this account number and they will know
32:02 - what to pay
32:04 - all right so let's put some text in here
32:08 - we can say
32:09 - um pay
32:13 - 100 coins to account
32:19 - abc
32:25 - and we'll say that this was account abc
32:30 - all right so new account abc gets
32:32 - created
32:33 - and the store
32:38 - let me do this
32:44 - let's think of everything we need
33:00 - all right very cool so the store already
33:03 - have the order information and we'll
33:04 - just say that everything is contained in
33:06 - order one two three
33:07 - the account that it has to pay is this
33:09 - newly generated one which was account
33:12 - abc and the amount
33:15 - that they need to pay is a hundred coins
33:18 - whatever the
33:19 - items cost
33:23 - now huh okay this is where things get
33:27 - interesting
33:33 - so let's map this out first shall we
33:38 - huh
33:43 - because we're gonna have
33:46 - two payments going on here the first is
33:49 - that
33:50 - if we decide to go with the architecture
33:52 - where the store api
34:02 - so we can go with it where let's say
34:04 - that the bank wants to charge
34:06 - one coin for every order processes
34:10 - so
34:14 - hmm this is interesting as well
34:18 - so let's say that the bank is going to
34:20 - charge one coin for every
34:22 - order that it processes
34:26 - if that is the case
34:30 - so earlier i was thinking that the store
34:33 - whatever the online store was would
34:36 - have to submit a payment to the bank
34:38 - first and then once the bank
34:40 - accepted that payment then they knew
34:43 - that they could
34:44 - kind of uh follow along and process
34:48 - the order information but now i'm
34:50 - thinking
34:52 - that it may be easier just to tack that
34:54 - payment
34:55 - onto the users payment
34:58 - so if they were intending to pay a
35:01 - hundred coins for something
35:02 - let me zoom in here so you guys can see
35:04 - as well
35:06 - so if they were intending to pay 100
35:08 - coins for something
35:10 - then the store might just charge them
35:12 - 101
35:14 - and then whenever the bank
35:17 - received that payment
35:21 - they already controlled the signing key
35:23 - and the account number
35:24 - and they would send a hundred
35:28 - to the stores account their separate
35:29 - account and they would send
35:31 - one to their own
35:36 - now i guess the only downside of that
35:42 - is there's a potential that the
35:43 - transaction fees from the primary
35:45 - validator
35:46 - might be more
35:56 - hmm
36:00 - okay so we got a
36:08 - okay we got a couple funkiness going
36:10 - here
36:11 - said have the bank respond directly to
36:13 - the client rather than going through the
36:15 - store
36:15 - api twice
36:19 - so that would be possible
36:24 - so something like this where if the bank
36:26 - responded
36:28 - directly to the client
36:35 - so if this information of transaction
36:39 - improve went right to the client
36:42 - then the client would still need to
36:44 - submit that data to the store somehow
36:47 - and let me open up what mr skye sent
36:55 - simple payment processing using memos
36:57 - the idea is to scan the chain
36:59 - for memo codes that are made for
37:06 - transactions
37:14 - surgery's payment transactions which
37:16 - should have matching memo code
37:29 - memo memo code and then the stores back
37:32 - in
37:33 - scan for its account number amount and
37:36 - memo code
37:52 - okay so
38:01 - so for this
38:07 - so sky will this be a new account that
38:11 - they generate
38:12 - so store generates payment transactions
38:14 - what should
38:15 - it oh i see so they translate uh
38:18 - or they create that section of the block
38:21 - and user sends fun to the address uh
38:24 - what
38:24 - is this a newly created address
38:31 - uh one second we might have some people
38:33 - asking questions about here
38:45 - okay so the store has a main address and
38:47 - they just keep that address throughout
38:49 - the entirety of their existence
38:51 - and they will have a memo code which is
38:55 - essentially like an
38:56 - order number and the user sends
39:00 - so the store generates that portion of
39:02 - the block and it
39:03 - puts the memo code in they give it to
39:06 - the user and i assume that the user can
39:08 - just review
39:09 - everything to make sure it's legit
39:15 - the user sends funds to the address
39:17 - putting in the memo code
39:19 - all this information so they would see a
39:23 - form that looks
39:24 - something like this with i'm sure some
39:26 - stuff would be pre-populated
39:30 - the stores back in will scan for its
39:32 - account number
39:34 - okay now this
39:39 - so the store itself can
39:42 - connect to any bank and listen for those
39:45 - notifications those confirmation blocks
39:48 - for its main account number just like
39:51 - you can on the account manager
40:03 - yeah so i don't even know if they would
40:06 - have to do any proactive
40:07 - scanning if they just hook up a
40:09 - websocket and listen
40:15 - storing the full transaction having the
40:16 - bank generate new keys will cause chain
40:18 - bloat this is definitely true
40:21 - okay lowering it to
40:27 - just scanning itself this requires
40:29 - complex well
40:32 - okay i like that you don't create
40:35 - anything new
40:36 - and you scan there's nothing there
40:42 - then you means you didn't get paid
40:46 - the banks are being paid each
40:47 - transaction regardless of method used
40:54 - for the store to keep an eye on its own
40:56 - keys
40:57 - so i guess in this case the store would
41:00 - never need
41:00 - a secret key online
41:04 - because you can just generate your
41:06 - account locally
41:08 - and then add that account number to the
41:11 - store
41:12 - for the address that you want to be paid
41:14 - to
41:16 - and then no signing keys would ever have
41:19 - to
41:20 - touch the public network at all
41:23 - so this could work
41:27 - now that we understand the basic process
41:30 - let's go ahead and pick some holes in it
41:33 - if we can find any and also what do you
41:36 - guys think about this
41:48 - it is a scan chain for memo codes that
41:51 - are made for transactions
41:59 - okay so the store puts an order number
42:02 - again i just went through this but i
42:04 - you know it's uh it's a big project so i
42:06 - want to make sure everything's perfect
42:08 - so the store can essentially generate
42:11 - the entire
42:12 - transaction itself not the block and not
42:15 - send it but
42:16 - it will generate all that useful
42:18 - transaction information
42:19 - for what fees should go to who
42:25 - now here is the thing
42:30 - so the user is going to be
42:33 - using their own bank assuming that they
42:35 - put pay from their
42:36 - phone or account manager or whatever
42:40 - so the store is going to know the
42:41 - primary validators fee
42:45 - however it's not going to know the bank
42:46 - fee
42:50 - so the bank fee is going to be it's
42:53 - going to be known by the app
42:54 - so that's irrelevant coins are going to
42:57 - be
42:58 - so pretty much everything is going to be
43:02 - pre-populated
43:09 - okay very cool now
43:12 - the store okay so here is the thing
43:15 - [Music]
43:17 - chares ali
43:22 - let's see let's see oh
43:25 - what i get is we would want to have some
43:27 - sort of clone of account manager
43:29 - as chrome extension we received the
43:31 - amount from cart
43:33 - and add that order id memo to it
43:45 - yeah even if we don't get fancy on the
43:47 - ui it's really just
43:48 - sending coins to an address and sticking
43:52 - in a memo code
43:54 - so worst case scenario they have to copy
43:56 - and paste something
43:57 - three times okay
44:01 - like the account manager and bin
44:02 - connection can be left for the user to
44:06 - select
44:09 - you know what this actually might be
44:10 - pretty easy
44:12 - the core logic of this is just like the
44:14 - account manager
44:15 - where the store instead of a user
44:18 - already gets notified of all its
44:19 - incoming payments
44:21 - and then for each incoming payment it
44:23 - would just have to
44:24 - keep track of the order id or the memo
44:27 - code
44:29 - and then i guess it would involve a
44:31 - little bit more logic because
44:34 - if the user wanted to split it up across
44:36 - multiple payments
44:37 - like if something was 100 coins and then
44:40 - they wanted to pay
44:41 - 70 from one account and then 30 from
44:43 - another account
44:45 - then the store would just say that this
44:48 - is pending or
44:49 - partial payment received until the full
44:53 - payment was
44:53 - good to go okay very cool
44:59 - so it's going to listen that so i guess
45:01 - uh on this the store can either
45:03 - long pull if it doesn't want to mess
45:05 - with web sockets
45:06 - or it can just uh hook in to its normal
45:09 - account
45:10 - any bank using a websocket
45:14 - and then process it that way
45:27 - okay so mr skye is saying that they
45:30 - could still use the same membo
45:32 - memo no matter how many wallets they
45:34 - used to fund
45:38 - yeah so memo is essentially just saying
45:41 - what
45:42 - order is this for and as long
45:45 - as you have a confirmation block that
45:47 - you can send
45:49 - to the bank and i mean excuse me to the
45:51 - store
45:52 - for their account with
45:56 - a memo saying that it's for this order
45:59 - number
46:01 - then you should be good to go
46:09 - can anyone find any holes in this logic
46:20 - greg youngers
46:32 - okay so let's diagram this up
46:50 - so i don't think we need this come on
46:52 - thing
46:53 - scrolling all around all right
46:57 - so the client is going to say to the
46:59 - store i want to order a shirt
47:07 - and the store is already going to have
47:09 - an account number
47:16 - so it's going to respond by saying
47:22 - send amount
47:29 - to send a hundred coins
47:34 - to we'll just say uh account
47:41 - store one two three
47:46 - order number
47:50 - abc okay
47:53 - if you want that t-shirt then you're
47:55 - gonna have to send let me separate this
47:57 - so send a hundred coins to store
48:00 - one two three in reference and i'll put
48:03 - memo here
48:06 - order number which it will be the memo
48:09 - would just be abc
48:16 - so what the client would do
48:19 - and take note that in this example
48:22 - the client in the store and not only in
48:25 - this example but in real life the client
48:26 - in the store would most likely have
48:28 - separate banks
48:29 - and we can keep them separate anyways
48:32 - just so we can kind of diagram out the
48:34 - most
48:34 - complex flow
48:38 - and then everything else should be
48:40 - relatively easy
48:43 - so the client is going to do is it's
48:46 - going to
48:46 - go to its bank include that's not what i
48:50 - wanted to do
48:53 - so the client is gonna send it to its
48:56 - bank
49:00 - and i think that's all the client
49:03 - actually has to do
49:07 - cloud up in here
49:13 - we'll say this is the network
49:22 - okay so the bank is going to send their
49:24 - transaction to the network
49:27 - why is this turning blue
49:34 - let me look at comments
49:42 - alright goldengamer yo may please play
49:44 - make a quick
49:45 - recap on the whole project we are trying
49:47 - to do i don't want to spend an hour
49:49 - trying to understand what we're doing
49:50 - are we hacking
49:52 - also when is the day we use the plan
49:56 - so i guess um we are working on a
50:00 - digital currency
50:01 - and in this stream we are planning out
50:03 - the online payment system
50:05 - so online stores and shops can accept
50:08 - payments for coins all right so this
50:12 - flow we have a client who wants to order
50:13 - a t-shirt so they say hey
50:15 - store i want to order your t-shirt and
50:17 - the store says yo yo if you want this
50:18 - t-shirt then send 100 coins to this
50:20 - account
50:21 - and make sure to include in the memo the
50:23 - order number
50:24 - which in this case is abc so the client
50:27 - says i
50:28 - so it formats that transaction
50:31 - and sends it to its own bank which gets
50:34 - processed on the network
50:36 - now over here what's gonna happen
50:40 - is you're gonna have this network which
50:42 - for some reason
50:43 - is more bold of an outline than this one
50:46 - what's going on with that
50:48 - that's bugging me all right so
50:52 - this
50:59 - hmm don't know what up of that but
51:03 - yeah an online api okay wouldn't the
51:06 - store request from the bank
51:13 - uh yep so it is going to so
51:18 - come on arrow
51:23 - all right something's funky going on
51:24 - with my arrows
51:29 - okay so on the other side of things and
51:32 - actually throughout this entire process
51:42 - the bank is going to be listening for
51:44 - this transaction
51:58 - what is going on with my lucidchart
52:04 - all right so the bank's going to be
52:05 - listening for this transaction
52:08 - and then once it gets it
52:21 - i may want to separate this out
52:28 - and let me uh i want to read these
52:30 - comments frequently i know it's uh
52:33 - some of you guys don't enjoy when i'm
52:35 - reading comments but i want to make sure
52:37 - i didn't miss any detail
52:39 - so what is the currency going to be
52:41 - called it's going to be called coins
52:42 - we're going to keep it nice and simple
52:44 - and also i called it units first just
52:48 - when i wrote the original white paper
52:49 - which later turned into docs
52:51 - and then we were thinking of uh
52:55 - some other things as well but eventually
52:59 - everyone just started calling it coins
53:01 - like
53:01 - hey how are your coins doing or send me
53:03 - some coins whenever we're developing so
53:06 - it's just like okay seems like a natural
53:08 - good fit
53:09 - in love karsh
53:13 - says the client will make the payment on
53:15 - store website
53:16 - once payment is done bank will get
53:18 - feedback to store website for a
53:20 - successful payment
53:25 - why not chart out how an online
53:27 - transaction currently works and then
53:29 - enter
53:29 - digital currency part
53:34 - of the process into that chart
53:37 - so our architecture is
53:41 - quite a bit different
53:44 - so it wouldn't pour over so nicely
53:51 - and i'm getting notifications from david
53:55 - saying i'm alive now okay
53:58 - so anyways client makes payment to the
54:00 - network payment gets verified
54:02 - confirmation validators send down
54:03 - confirmation
54:04 - blocks to the bank the bank is going to
54:06 - route that to the store
54:08 - and the store is then going to receive a
54:10 - confirmation block
54:13 - for payments yeah i really don't think
54:16 - it's that hard
54:22 - sky did i miss any key points
54:26 - the project stream do you have a quick
54:28 - second to explain it
54:34 - very briefly
54:37 - so yes in this stream we're just working
54:39 - on our open source digital currency
54:47 - okay very cool
54:53 - now we can probably start coding this
55:04 - huh
55:06 - so now we have to add memos in
55:15 - all right so mr skye looks correct store
55:17 - makes memo client sends
55:18 - dress bank verifies
55:28 - now one thing that we do have to do is
55:31 - this
55:32 - in the actual ui how is this going to
55:34 - work
55:35 - where the client says i want to order a
55:38 - t-shirt since i'll show you guys the ui
55:41 - right now sec let me get my window up
55:55 - all right now let's think about this
55:56 - practically and let me
56:00 - hmm
56:03 - i don't know how to add another screen
56:05 - in here
56:08 - let me remove this for a second
56:12 - uh stop screen
56:18 - share screen application window account
56:21 - manager
56:22 - okay so let's walk through this where i
56:25 - go to a website
56:29 - i go to a website and i see a t-shirt
56:32 - and then
56:33 - it says okay if you want this t-shirt
56:35 - then you're gonna have to send me
56:37 - um a hundred coins to store for
56:41 - this order number so i'm gonna go to my
56:44 - account
56:45 - i'm gonna hit send coins and then
56:48 - how tedious is this gonna be so
56:52 - i'm already gonna have to paste in the
56:54 - account number that's cool
56:56 - and then i would just need to set the
56:58 - amount
57:01 - 100 and then make sure i had another
57:03 - field
57:04 - probably a text area or input for the
57:06 - memo
57:08 - i actually think that's not that bad
57:13 - so i guess the only change in the flow
57:16 - would be
57:16 - the memo
57:21 - and then i send that and then what
57:23 - happens is i hop over to the site
57:27 - and then i would see a spinner or
57:29 - something
57:33 - and then when it's paid it's paid it's
57:35 - pretty cool
57:42 - all right very cool i think we got our
57:45 - architecture down
57:47 - so first of all thank you mr skye for
57:49 - that
57:51 - uh we really need to get on this
57:59 - alright alright alright alright alright
58:01 - so i think what i need to do now
58:04 - is now that we got the main diagram in
58:07 - place the main
58:08 - flow what i need to do is take a little
58:10 - bit of
58:11 - time
58:16 - take a little bit of time and plan out
58:18 - the uh coding architecture
58:20 - so dars said scan a qr code or send them
58:23 - a link that automatically populates the
58:25 - data and memo
58:26 - memo can become long it's not a bad idea
58:29 - either so
58:34 - yeah we can definitely have a qr code
58:35 - and i think qr codes have enough
58:37 - data storage where they can store all
58:39 - this information
58:40 - but yeah so we'll keep this uh stream a
58:44 - nice little mini stream
58:46 - and we're gonna roll with this and i'm
58:48 - gonna
58:49 - take a little bit of time and architect
58:51 - how this is gonna fit in i need to dig
58:53 - through some code
58:54 - it may not be that interesting but
58:58 - yeah i see another comment where bitcoin
59:00 - yesterday
59:01 - broke all-time high i think it was over
59:03 - 21 000
59:04 - so that's pretty cool uh
59:08 - big fan of that okay so i'm gonna get
59:11 - going and i need to do some other stuff
59:12 - too
59:13 - some more boring things
59:16 - one more question can i explain
59:19 - okay so uh yeah
59:23 - like i said nice little mini stream and
59:26 - i will probably announce my
59:28 - uh next stream another thing is that i
59:30 - do want to keep
59:31 - this youtube channel mostly focused
59:33 - around uh programming tutorials
59:36 - and not be like a stream heavy but i am
59:39 - going to be streaming on twitch quite
59:41 - often
59:41 - so if you guys are interested in hanging
59:44 - out watching these streams
59:45 - which is mostly going to be around like
59:47 - uh planning the architecture
59:49 - building things for the digital currency
59:50 - network i'll keep my youtube more
59:53 - geared towards what people are more
59:55 - interested in
59:56 - but go to my website uh find the twitch
59:58 - in the community or social section
60:01 - and then yeah let me actually send you
60:03 - guys a link real quick before i
60:05 - peace out
60:09 - one second one second
60:12 - okay so my twitch is this
60:18 - www.twitch.tv slash the new boston
60:20 - that's the theme song just made it up
60:22 - all right so anyways
60:26 - yes i will see you guys hey might not
60:29 - might even stream later tonight who
60:30 - knows
60:31 - all right so thank you guys for watching
60:33 - and i will see you guys
60:34 - later

Cleaned transcript:

all righty and apparently we are live let me get everything situated wait for it wait for it and actually let me share this on the old slack how you guys doing today or tonight whatever time it is oh wish i say in my slack message uh streaming working on the payments say working on online payments we've been working on online payments beautiful okay now what are we working on today online payments re james what up okay okay let's get to work so i don't know if you guys noticed but i got some lights now all right holy crap you're alive i am okay so anyways what i was planning to do today was work on our online payment system so actually i have it right here uh one second let me respond to some comments james welcome uh reed james okay two of them life king cole d what's up life of king from india india is representing here okay so anyways we are rolling out some versions of the marketplace and this last version is going to be accepting actual online payments but before we get that we're gonna roll out this version right here and all right so i'll walk you guys through the gist of it so whenever you log in uh there's gonna be a little login button right here so this is already logged in you're going to go to your profile and then you're going to see your test completed and your listings so this is the part that we're building out now the listings and the listings are just going to be any items that you have in the marketplace and let's see all right so this is all uh in being designed by the way so nothing's finalized i actually just saw this link in shouldn't even be reviewing it yet but i want to check it out okay so this is where you go to add a new listing actually why don't you just do this if i'm going to review it and if anyone has any comments leave them in the chat and then i can leave them on figma all right so you log in you go to your listings page and you see your listings now uh this is how the system is going to work where essentially whenever you are a new user you're going to have to have your products reviewed however once you become a trusted user like you sold 100 items or something then you can just add your items directly to the marketplace and this is so this is all new to me as well so let's go through together all right so this is draft means you're just started working on it you didn't publish or submit it yet this is live meaning it's in the marketplace and then this is rejected meaning something like well it could be something like porn but also some little things like if the pitcher doesn't match a description like if uh it's a bike and you describe it as a cat this freaking cat with bagels probably okay so all right just filtering okay now to add a new one hey what's this listing thing so this listing all right i might want to step back so the new boston open source development community is working on a digital currency and we are going to have a marketplace and let me see if i can actually pull up the marketplace itself and i don't know if we have it anywhere but either either way it's going to look pretty similar to this right here and our designer just submitted these wireframes for review so i'm just going to review them real quick in this little stream what i want to do is work on this online payment system but for now real quick i just want to go over this all right so adding an item you add your title images you can remove them one thing i don't see let me see if there's any with multiple images in here since i don't see a way if you upload multiple images then you can reorder them for example to see which one's your main image but again this is still early in development we really don't need to worry about that much okay price description title pretty simple stuff and then after that what do we got down here so pending tab how did we okay so this is for the admins i think but how did we get here all right so anyways this is okay so this is for the moderators and apparently they're gonna have another tab it seems like and then pending is right here any approved then you're rejected i'm oh so this is just to show you who the moderators are i suppose in their little stats it's interesting how okay very cool so i guess if you're a moderator you go to this review section see all your pending ones you can see the images title description the price the user and then you can accept and reject them i don't know what would happen when you rejected or approved because and this is the thing we were discussing last meeting where whenever you reject it if it's impending right now the moment you hit reject it should technically be in this reject section now we can just pop it out of here immediately and move it to the reject section but i don't know okay so hover very cool very cool when you reject you give it a reason why you rejected it so they got a little bit of feedback and it's pretty cool so if it doesn't fit one of the default then you can just specify your own reason okay very cool very cool very cool very cool all right let's go through these watching a lot manish what up uh is this part of the series with other crypto videos i haven't had a chance to watch them yet no this is just a random stream i had some work to do and i was like i don't want to stream it all right what's this listening thing for the marketplace oh gee traces of nuts what up use waves boxer okay mystics guy uh very cool very cool very cool okay all right now let's get down to business so what i would like to do in this stream is work on the online payment system so essentially when any website any store wants to integrate then they're gonna say like uh accept payments online and we have to build the back end for that right now now what i did before this is i actually researched some other um i don't even know what they're called payment they're not payment processors they're something like that but we couldn't really use their model or it's not exactly what we were looking for because a lot of the payment systems they accepted bitcoin which was the most popular one now the thing about this is that it can't really apply to ours because bitcoin takes 10 minute transaction times and we want our system to act more like a credit card not on the back end but kind of the feel of it where you have your order and then like you added items to your shopping cart and you go to the order screen and it says submit your payment here whenever we submit the payment we want it to like hit the users and hit the user's ui in less than three seconds probably so with bitcoin since it's so long it's a whole different flow in a lot of different other currencies as well in night strike bg said let's talk about consciousness you guys cannot get me off track today all right yeah so bip bit pay is one uh skylar and coinbase has one i think it's called coinbase commerce or something but yeah the the flows were just a little bit funky when i tried to port it over to our architecture so i got a couple things in mind okay so the main goal is to make this as easy as possible for the user the secondary goal is to make it as easy as possible for the developers so who's ever going to be integrating and of course later on this can be like any website shopify or whatever but for now we're just going to assume that someone has a regular site that they have control of the back end and the front end so another fun fact is that right now the new boston.com in that marketplace that we're designing it is using uh django django arrest framework on the back end and on the front end single page application with react and the first implement a little implementation of this is going to be tested on our website so all right let's get down to it beautiful beautiful bucky's back good to see you man saruvanthi good to see you too be using memo hey uh sky what is that uh memo method i i saw you mention in a couple times but i didn't uh see where you posted it or if it was a document or a slack message or what and lower the amount of keys needed all right so here's what i was thinking the crappy thing about accepting online payments is that unless you want to like rewrite a huge chunk of your architecture then you essentially need to do this whenever someone's ready to pay for an item you need to take their order information which is like eight products three of these two of those and you need to map it to a payment on the network now inherently these two things aren't related like someone's random products that they're selling and also like the blockchain network so what we're going to do is essentially create a new account each time since when you create a new account you get a random account number and that random account number can be linked to the order so basically whenever you receive funds in that account which match or exceed if they want to pay more than the order then you know that the payment's verified and you can send the items or like give them the digital download whatever you want to do all right oh the memo oh so uh mr skies yeah so just like your bank account whenever you have a little description with each payment some people call it memo some people call it uh notes i heard or even just a description so that's what he was talking about and yes we are working on that and okay we're doing two things and then i'll get to it we're updating the blockchain to include memos and we are also um updating the blockchain to include indicating which transactions are transaction fees or which payments are transaction fees so we can kind of uh just help filtering another cool thing i know i said that that there was one more than i was going to get to it but i was talking with uh christy and some other people about this where right now we have a very fast uh block time so whenever i send something over the network you're gonna get it in like a second or we'll just assume you're overseas a second or two now the cool thing about this is that because of that once we add a memo we're essentially going to have this public messaging app so if you just format the ui a little bit differently then you can send someone onecoin in a message and then it's it just essentially becomes a messaging app now if you add a little bit of encryption to that and i didn't get into any of this i didn't even it was just a thought but we essentially have a secure distributed encrypting messaging app so that's down the road a bit uh not what we want to work on now but yeah there you go yes okay stripe why not use stripe js api because they do not accept coins yet not like we've been talking or anything but uh one day i'm sure they will so let's see let's see let's see so i got a couple notes here and let's check it out okay so another thing that i figured is that whenever these stores sign up i don't want my camera to shake whenever these stores um want to start accepting payments we know that we're going to have to create a key pair and someone's going to have to keep track of that signin key however we figured that they probably don't want to do that because it involves either setting up additional tables in their database or setting up cache or some file system or something however we can have the banks do it and the cool thing about this is that banks are already set up on the network banks are already set up to listen for transactions and they're hooked up to all the confirmation validators where they can say if you were expecting this payment now we know that it's confirmed and the idea in my head although this is subject to change according to your guys feedback but essentially stores in online shops are gonna register with these banks and say hey i'm listening for this payment so the bank is gonna say okay i'll let you know whenever it's confirmed and then the bank is gonna be the one to create this signing key and account number and they're going to return that to the store essentially saying that this is your like um a payment code but it's just an account number and then the bank is going to be able to listen no additional logic needed it's already doing its thing and then once it hears a payment for that amount then it's just going to notify the online store and the online store can choose whether they want to use web hooks or whether they want to use web sockets the bank is pretty flexible in that matter so the store is just gonna stream that information down to the user and gonna have a pretty nice ui all right now uh ice cream says bucky come to india sometime i want to go to india i don't think americans are allowed in now because we've been pretty silly with the virus but yeah okay mr sky you can save time by just using javascript to run a check for a memo it would save you lots of lodging so i believe what he is saying is that okay so instead of just putting something in the description of the payment like hey this is for ice cream or something to put something related to either the like a order information now once the store would hear that then they would know that on this confirmation block which is a valid payment it was related to this order however it gets a little bit tricky there because the store is still going to need that information now that information they can't just listen to because they don't want to hook up to confirmation validators essentially they would become a bank however what they could do is listen for that from a bank but then i think they would still need to manage their own signin key would they and he said you can put the payment code you put the payment code was paid via the memo hmm oh i see what you're saying that the store is going to give you a like an order id we'll just say and then whenever you pay for that order on the client side you can let me think about this so whenever you pay for that on the client side you essentially listen for your own confirmation block and then you would forward that okay let's get this you put the payment code was paid via the memo and then they would scan bank cs and handle their own keys yeah another thing about the architecture is that we set it up to be pretty efficient where banks don't listen for your transactions and they don't really like save them in their database unless you are a user at that bank and they indicate if you are a user if you ever sent a transaction through them so at that point in time the online store would have never sent a transaction through that bank and the user also gets to pick their own bank so the one that the online store was typically using and the one that the user was using would be a little bit they would most likely be different banks all right let's see store generates a code uh we'll just say it's an order number scan blocks for memo transactions and amount yeah keyboard is a thing so that's another thing as well where i figure that someone could just keep saying hey i want to order something i want to order something like just trying to spam the network and then these online stores could just continue creating keys and keys and keys and keys but they would never be paid but it would essentially be a way to bloat the bank's database and re james says sorry for the dumb question but what is going to be stored on chain in these cases so the way that this is written in the way that i uh i'm going to show you guys is that we really don't need anything stored on the chains because as long as the online store is able to have an order number which has all your order information and they relate it to an account number then they can listen for payments on that account number and then once the payment is complete then you know that the order is validated so let's just go ahead and mark it out and we'll get up my lucidcharts thing and yes mr skype please uh can you actually put that into google doc and send it to me on slack it might work out and in the meantime i'll get going with this early version so i actually created this my own shape library and if you guys have never used lucidchart before man lucidchart is probably the only company that i would uh do a sponsorship for just because i love their software so much genuinely all right so we have a bank right here and i got on my little primary validator key pair look at all these little amy since bob seven dollars okay so let's get the client out here too right in the scaling oh there we go all right zoom out a little bit how do i join slack if you go to the website the new boston.com you can either click join community all right get notification here join community or on the home page there's actually a slack icon on one of those blue charts so pretty cool all right so let me look at my cheat sheet here which is just my own notebook okay so we probably need a new shape for online store what about this this kind of looks like a store and what font size is this eight i gotta make sure all my font sizes are the same or make me frustrated okay and what story should what color should the store be avi avi green looks good okay so check it let me think let me think this entire stream is just gonna be me thinking not talking at all okay so pay the bank for a payment account yeah like this so the client isn't really brought into things yet what the store is going to do is it's going to pay the bank and let me get my sweet little arrows so store is going to pay the bank for a payment account and should we bust out these keys yeah why not the keys are coming out don't even that big though come on bucky let's knock it crazy here okay so here is the idea and here's another thing lochtar i agree okay so this is another thing that we need to consider that whenever the store wants to register with a bank for payment services let me straighten out my cam that the bank isn't just going to offer these services for free they're going to want to have some incentive for why they would be doing all this work for the store so there are a couple different models that we can run with one is pay per transaction so essentially whenever the store has an order that they need to process that they would just pay like a coin or two or it would be configurable but whatever the bank wants to create or configure it as another thing is that the store could say kind of like confirmation services that it would be paying for time so maybe it would say uh let's if you process transactions for me for the next day or two then i'll give you 10 coins and to charm introductory video i can see on digital currency if you go to my youtube channel i have a digital currency tutorial digital currency tutorial series there we go but anyways in this model we're gonna assume that this store is gonna pay the bank like one coin each for transaction so this was my idea and then i want to get your guys feedback on it so what the store is going to do is it's going to reach out to the bank and it's going to say hey i have order i need process it so in that case what the bank would do and i can probably get rid of this let me ungroup this ungroup and get out of here phone and i will call this what should we call this payment account terminator maybe order account yeah let's go order account 10 and then okay that's a little funky size okay so general idea is that whenever the store reaches out to the bank then the bank is going to go ahead and create an order account now the bank is going to store the signing key and i did like this behavior because i don't think the store is going to want store the signing key uh oh okay i should probably mention this so the store is actually uh the back end let me bring it like this all right store api just to make it clear so this is a store api which is the back end and we might as well do this uh the client is gonna say something like i want to place in rotor so the client is going to say something like i want to let's say i want to order a tshirt so the client's going to say i want to order a tshirt to the store api and the store is going to reach out to the bank and say i need an order oh man this uh gotta make it purty all right there we go so the client reaches out to the store and says i want to order a tshirt assuming they already figured out price and everything and a car make sure it was in inventory everything's good to go the store's going to reach out to the bank and say hey i need an order account which is essentially a temporary account that the store can use so the bank is going to go ahead and create this order account which is essentially a new account with a new signing key the bank is going to manage the signing key since uh banks have to be secure anyways already hooked up to the network no need for the store to mess with it at all actually let me think skylar might have oh no not yet all right so the bank is going to create this order information and then let me see so the bank will store the signing key and that will be encrypted so then what we can do is and by the way in this flow uh how should i draw this maybe this is a bit easier take that move it over there move this over here here here you're here there there there and boom roasted peanut butter toasted oh that's pretty cool a new feature lucidchart okay so the client is going to say yo store want to order a tshirt the store is going to say you need a payment account the bank is going to generate that hold on to the signing key and by the way these two stores are the same they're just different here because if i keep drawing arrows to the same object and things get kind of messy so just know that all right so what the bank's gonna do is create that and then it'll take this account number and send it back to the store now the store needs so the store is going to need to for this account number to the client because that is the account where the client needs to pay so the store can get that and this is all just going to be http let me move this over here actually so client makes a request to the store this is interesting so how long is is this fast enough to just stick over http or https i guess it would be but i'm thinking if we need a websocket in here where when the client reaches out the story they create this going to make a request to another server they're going to create an account number no additional requests needed so this should be very quick and they're just going to respond with this and it doesn't even involve querying the database or anything so yeah we're good right now this should take less than a second ideally and dave love said so it's not a store where you buy shoes it's the back end so this would be it could be a store where you buy shoes it's essentially just the um api it could be a shoe api all right so then the bank creates the account and then the store might put on some additional information and then the client will see this account number and they will know what to pay all right so let's put some text in here we can say um pay 100 coins to account abc and we'll say that this was account abc all right so new account abc gets created and the store let me do this let's think of everything we need all right very cool so the store already have the order information and we'll just say that everything is contained in order one two three the account that it has to pay is this newly generated one which was account abc and the amount that they need to pay is a hundred coins whatever the items cost now huh okay this is where things get interesting so let's map this out first shall we huh because we're gonna have two payments going on here the first is that if we decide to go with the architecture where the store api so we can go with it where let's say that the bank wants to charge one coin for every order processes so hmm this is interesting as well so let's say that the bank is going to charge one coin for every order that it processes if that is the case so earlier i was thinking that the store whatever the online store was would have to submit a payment to the bank first and then once the bank accepted that payment then they knew that they could kind of uh follow along and process the order information but now i'm thinking that it may be easier just to tack that payment onto the users payment so if they were intending to pay a hundred coins for something let me zoom in here so you guys can see as well so if they were intending to pay 100 coins for something then the store might just charge them 101 and then whenever the bank received that payment they already controlled the signing key and the account number and they would send a hundred to the stores account their separate account and they would send one to their own now i guess the only downside of that is there's a potential that the transaction fees from the primary validator might be more hmm okay so we got a okay we got a couple funkiness going here said have the bank respond directly to the client rather than going through the store api twice so that would be possible so something like this where if the bank responded directly to the client so if this information of transaction improve went right to the client then the client would still need to submit that data to the store somehow and let me open up what mr skye sent simple payment processing using memos the idea is to scan the chain for memo codes that are made for transactions surgery's payment transactions which should have matching memo code memo memo code and then the stores back in scan for its account number amount and memo code okay so so for this so sky will this be a new account that they generate so store generates payment transactions what should it oh i see so they translate uh or they create that section of the block and user sends fun to the address uh what is this a newly created address uh one second we might have some people asking questions about here okay so the store has a main address and they just keep that address throughout the entirety of their existence and they will have a memo code which is essentially like an order number and the user sends so the store generates that portion of the block and it puts the memo code in they give it to the user and i assume that the user can just review everything to make sure it's legit the user sends funds to the address putting in the memo code all this information so they would see a form that looks something like this with i'm sure some stuff would be prepopulated the stores back in will scan for its account number okay now this so the store itself can connect to any bank and listen for those notifications those confirmation blocks for its main account number just like you can on the account manager yeah so i don't even know if they would have to do any proactive scanning if they just hook up a websocket and listen storing the full transaction having the bank generate new keys will cause chain bloat this is definitely true okay lowering it to just scanning itself this requires complex well okay i like that you don't create anything new and you scan there's nothing there then you means you didn't get paid the banks are being paid each transaction regardless of method used for the store to keep an eye on its own keys so i guess in this case the store would never need a secret key online because you can just generate your account locally and then add that account number to the store for the address that you want to be paid to and then no signing keys would ever have to touch the public network at all so this could work now that we understand the basic process let's go ahead and pick some holes in it if we can find any and also what do you guys think about this it is a scan chain for memo codes that are made for transactions okay so the store puts an order number again i just went through this but i you know it's uh it's a big project so i want to make sure everything's perfect so the store can essentially generate the entire transaction itself not the block and not send it but it will generate all that useful transaction information for what fees should go to who now here is the thing so the user is going to be using their own bank assuming that they put pay from their phone or account manager or whatever so the store is going to know the primary validators fee however it's not going to know the bank fee so the bank fee is going to be it's going to be known by the app so that's irrelevant coins are going to be so pretty much everything is going to be prepopulated okay very cool now the store okay so here is the thing chares ali let's see let's see oh what i get is we would want to have some sort of clone of account manager as chrome extension we received the amount from cart and add that order id memo to it yeah even if we don't get fancy on the ui it's really just sending coins to an address and sticking in a memo code so worst case scenario they have to copy and paste something three times okay like the account manager and bin connection can be left for the user to select you know what this actually might be pretty easy the core logic of this is just like the account manager where the store instead of a user already gets notified of all its incoming payments and then for each incoming payment it would just have to keep track of the order id or the memo code and then i guess it would involve a little bit more logic because if the user wanted to split it up across multiple payments like if something was 100 coins and then they wanted to pay 70 from one account and then 30 from another account then the store would just say that this is pending or partial payment received until the full payment was good to go okay very cool so it's going to listen that so i guess uh on this the store can either long pull if it doesn't want to mess with web sockets or it can just uh hook in to its normal account any bank using a websocket and then process it that way okay so mr skye is saying that they could still use the same membo memo no matter how many wallets they used to fund yeah so memo is essentially just saying what order is this for and as long as you have a confirmation block that you can send to the bank and i mean excuse me to the store for their account with a memo saying that it's for this order number then you should be good to go can anyone find any holes in this logic greg youngers okay so let's diagram this up so i don't think we need this come on thing scrolling all around all right so the client is going to say to the store i want to order a shirt and the store is already going to have an account number so it's going to respond by saying send amount to send a hundred coins to we'll just say uh account store one two three order number abc okay if you want that tshirt then you're gonna have to send let me separate this so send a hundred coins to store one two three in reference and i'll put memo here order number which it will be the memo would just be abc so what the client would do and take note that in this example the client in the store and not only in this example but in real life the client in the store would most likely have separate banks and we can keep them separate anyways just so we can kind of diagram out the most complex flow and then everything else should be relatively easy so the client is going to do is it's going to go to its bank include that's not what i wanted to do so the client is gonna send it to its bank and i think that's all the client actually has to do cloud up in here we'll say this is the network okay so the bank is going to send their transaction to the network why is this turning blue let me look at comments alright goldengamer yo may please play make a quick recap on the whole project we are trying to do i don't want to spend an hour trying to understand what we're doing are we hacking also when is the day we use the plan so i guess um we are working on a digital currency and in this stream we are planning out the online payment system so online stores and shops can accept payments for coins all right so this flow we have a client who wants to order a tshirt so they say hey store i want to order your tshirt and the store says yo yo if you want this tshirt then send 100 coins to this account and make sure to include in the memo the order number which in this case is abc so the client says i so it formats that transaction and sends it to its own bank which gets processed on the network now over here what's gonna happen is you're gonna have this network which for some reason is more bold of an outline than this one what's going on with that that's bugging me all right so this hmm don't know what up of that but yeah an online api okay wouldn't the store request from the bank uh yep so it is going to so come on arrow all right something's funky going on with my arrows okay so on the other side of things and actually throughout this entire process the bank is going to be listening for this transaction what is going on with my lucidchart all right so the bank's going to be listening for this transaction and then once it gets it i may want to separate this out and let me uh i want to read these comments frequently i know it's uh some of you guys don't enjoy when i'm reading comments but i want to make sure i didn't miss any detail so what is the currency going to be called it's going to be called coins we're going to keep it nice and simple and also i called it units first just when i wrote the original white paper which later turned into docs and then we were thinking of uh some other things as well but eventually everyone just started calling it coins like hey how are your coins doing or send me some coins whenever we're developing so it's just like okay seems like a natural good fit in love karsh says the client will make the payment on store website once payment is done bank will get feedback to store website for a successful payment why not chart out how an online transaction currently works and then enter digital currency part of the process into that chart so our architecture is quite a bit different so it wouldn't pour over so nicely and i'm getting notifications from david saying i'm alive now okay so anyways client makes payment to the network payment gets verified confirmation validators send down confirmation blocks to the bank the bank is going to route that to the store and the store is then going to receive a confirmation block for payments yeah i really don't think it's that hard sky did i miss any key points the project stream do you have a quick second to explain it very briefly so yes in this stream we're just working on our open source digital currency okay very cool now we can probably start coding this huh so now we have to add memos in all right so mr skye looks correct store makes memo client sends dress bank verifies now one thing that we do have to do is this in the actual ui how is this going to work where the client says i want to order a tshirt since i'll show you guys the ui right now sec let me get my window up all right now let's think about this practically and let me hmm i don't know how to add another screen in here let me remove this for a second uh stop screen share screen application window account manager okay so let's walk through this where i go to a website i go to a website and i see a tshirt and then it says okay if you want this tshirt then you're gonna have to send me um a hundred coins to store for this order number so i'm gonna go to my account i'm gonna hit send coins and then how tedious is this gonna be so i'm already gonna have to paste in the account number that's cool and then i would just need to set the amount 100 and then make sure i had another field probably a text area or input for the memo i actually think that's not that bad so i guess the only change in the flow would be the memo and then i send that and then what happens is i hop over to the site and then i would see a spinner or something and then when it's paid it's paid it's pretty cool all right very cool i think we got our architecture down so first of all thank you mr skye for that uh we really need to get on this alright alright alright alright alright so i think what i need to do now is now that we got the main diagram in place the main flow what i need to do is take a little bit of time take a little bit of time and plan out the uh coding architecture so dars said scan a qr code or send them a link that automatically populates the data and memo memo can become long it's not a bad idea either so yeah we can definitely have a qr code and i think qr codes have enough data storage where they can store all this information but yeah so we'll keep this uh stream a nice little mini stream and we're gonna roll with this and i'm gonna take a little bit of time and architect how this is gonna fit in i need to dig through some code it may not be that interesting but yeah i see another comment where bitcoin yesterday broke alltime high i think it was over 21 000 so that's pretty cool uh big fan of that okay so i'm gonna get going and i need to do some other stuff too some more boring things one more question can i explain okay so uh yeah like i said nice little mini stream and i will probably announce my uh next stream another thing is that i do want to keep this youtube channel mostly focused around uh programming tutorials and not be like a stream heavy but i am going to be streaming on twitch quite often so if you guys are interested in hanging out watching these streams which is mostly going to be around like uh planning the architecture building things for the digital currency network i'll keep my youtube more geared towards what people are more interested in but go to my website uh find the twitch in the community or social section and then yeah let me actually send you guys a link real quick before i peace out one second one second okay so my twitch is this www.twitch.tv slash the new boston that's the theme song just made it up all right so anyways yes i will see you guys hey might not might even stream later tonight who knows all right so thank you guys for watching and i will see you guys later
