With timestamps:

00:00 - all right so here we go again all this
00:03 - is is it's a list of objects that we
00:07 - want saved in our store so just a list
00:10 - of users if you want to make another one
00:12 - call it a reducer movies then you can
00:15 - have a list of movies in there if you
00:16 - want to have another one called a
00:18 - reducer music then you could have a list
00:20 - of your favorite songs in there whatever
00:22 - so a reducer is basically just a piece
00:24 - of data that you want saved in your
00:26 - store now one other thing I want to
00:30 - mention before we actually toss this
00:31 - into the store is this remember I said
00:34 - that your store is one big JavaScript
00:39 - object one big JavaScript object so if
00:43 - we have a list of users and we have a
00:45 - list of movies and we have a list of our
00:48 - favorite songs
00:48 - that's three objects now the store we
00:52 - can only pass in one object so before we
00:54 - take all these reducers and just toss
00:56 - them in our store we actually need to
00:58 - combine them into one big object first
01:02 - so in your reducers directory right here
01:05 - go ahead and make a new javascript file
01:08 - and just name it index now this is a
01:11 - file that I always have no matter what
01:13 - type of data I'm using in my application
01:16 - and what you can do is you can actually
01:19 - call a function called combined reducers
01:22 - and this is a built-in function and what
01:24 - this does is it's function that allows
01:26 - you to pretty much take all of your
01:28 - reducers and combine them into one
01:30 - object that's it so how do you use this
01:33 - imports combine reducers from three
01:41 - ducks now from here you just need to
01:45 - import this file so whenever we import
01:49 - this file by default it imports this
01:52 - function in other words our list of
01:55 - users all right so what I'm going to do
01:59 - is I'm just going to state in for user
02:02 - reducer from and it's in the same
02:06 - directory so I'll just write dot forward
02:08 - slash reducer users
02:11 - now since this is the default import
02:14 - you're pretty much importing this and
02:17 - storing it in a variable called user
02:20 - reducer all right so now I'm just going
02:24 - to go ahead and make constant called all
02:27 - reducers and this is going to be the
02:29 - main object that's going to be thrown
02:32 - inside our store so again anytime you
02:34 - make another reducer just remember to
02:35 - add it to all reducers and again this is
02:38 - just equal to the combined reducers
02:41 - function and all this function does is
02:46 - it takes each of these reducers as an
02:50 - object now here is the thing whatever
02:53 - you name your object that's how you're
02:56 - going to refer to it in your application
02:58 - so I'm going to say users and set this
03:01 - equal to user reducer so now all
03:05 - throughout my entire application in all
03:07 - my components in all my containers I'm
03:09 - going to have a piece of data named
03:11 - users now this object is equal to this
03:16 - bit of data right here I can actually
03:20 - change the name of this to anything I
03:21 - want but since it's equal to users I
03:23 - thought it was kind of appropriate and
03:25 - then again you can make another function
03:28 - called reducer movies or whatever you
03:30 - want to name it and then you can have
03:32 - something like movies equals movies
03:36 - reducers and then you have more data
03:38 - available throughout your entire
03:39 - application but there you go so this is
03:41 - how you can take all your reducers all
03:43 - your different bits or chunks of data
03:46 - and combine them into one big object so
03:51 - now with this object we just need to go
03:53 - ahead and throw in our create store and
03:55 - it creates a react storage from all of
04:00 - your objects pretty cool huh
04:01 - and of course we need to import this so
04:05 - import all reducers too lazy like this
04:09 - I'm just going to copy from reducers
04:15 - and since it's the index then I'll grab
04:18 - that by default so there we go so again
04:21 - just to recap one last time right here
04:24 - we created our main store our main
04:28 - application storage which is the huge
04:32 - JavaScript object that's responsible for
04:34 - storing all of our applications data now
04:37 - right now we just made a small piece of
04:39 - data to stick in there and this is just
04:41 - a list of users but whenever we make
04:44 - another one we have to pretty much throw
04:46 - them inside this function combined
04:48 - reducers and that takes all of your
04:50 - little bits of data and combines it into
04:52 - one big JavaScript object that we can
04:55 - throw in to create our main store for
04:58 - our entire application so there we go
05:01 - and in the next video I'm going to be
05:03 - showing you guys how to take this store
05:04 - and pass it to your components so that's
05:08 - what we have to look forward to I'll see
05:10 - you guys next time

Cleaned transcript:

all right so here we go again all this is is it's a list of objects that we want saved in our store so just a list of users if you want to make another one call it a reducer movies then you can have a list of movies in there if you want to have another one called a reducer music then you could have a list of your favorite songs in there whatever so a reducer is basically just a piece of data that you want saved in your store now one other thing I want to mention before we actually toss this into the store is this remember I said that your store is one big JavaScript object one big JavaScript object so if we have a list of users and we have a list of movies and we have a list of our favorite songs that's three objects now the store we can only pass in one object so before we take all these reducers and just toss them in our store we actually need to combine them into one big object first so in your reducers directory right here go ahead and make a new javascript file and just name it index now this is a file that I always have no matter what type of data I'm using in my application and what you can do is you can actually call a function called combined reducers and this is a builtin function and what this does is it's function that allows you to pretty much take all of your reducers and combine them into one object that's it so how do you use this imports combine reducers from three ducks now from here you just need to import this file so whenever we import this file by default it imports this function in other words our list of users all right so what I'm going to do is I'm just going to state in for user reducer from and it's in the same directory so I'll just write dot forward slash reducer users now since this is the default import you're pretty much importing this and storing it in a variable called user reducer all right so now I'm just going to go ahead and make constant called all reducers and this is going to be the main object that's going to be thrown inside our store so again anytime you make another reducer just remember to add it to all reducers and again this is just equal to the combined reducers function and all this function does is it takes each of these reducers as an object now here is the thing whatever you name your object that's how you're going to refer to it in your application so I'm going to say users and set this equal to user reducer so now all throughout my entire application in all my components in all my containers I'm going to have a piece of data named users now this object is equal to this bit of data right here I can actually change the name of this to anything I want but since it's equal to users I thought it was kind of appropriate and then again you can make another function called reducer movies or whatever you want to name it and then you can have something like movies equals movies reducers and then you have more data available throughout your entire application but there you go so this is how you can take all your reducers all your different bits or chunks of data and combine them into one big object so now with this object we just need to go ahead and throw in our create store and it creates a react storage from all of your objects pretty cool huh and of course we need to import this so import all reducers too lazy like this I'm just going to copy from reducers and since it's the index then I'll grab that by default so there we go so again just to recap one last time right here we created our main store our main application storage which is the huge JavaScript object that's responsible for storing all of our applications data now right now we just made a small piece of data to stick in there and this is just a list of users but whenever we make another one we have to pretty much throw them inside this function combined reducers and that takes all of your little bits of data and combines it into one big JavaScript object that we can throw in to create our main store for our entire application so there we go and in the next video I'm going to be showing you guys how to take this store and pass it to your components so that's what we have to look forward to I'll see you guys next time
