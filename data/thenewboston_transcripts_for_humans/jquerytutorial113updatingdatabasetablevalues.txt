With timestamps:

00:01 - okay so over in settings.php we need to
00:04 - pick up this name variable so we can go
00:07 - ahead and check if this is set first of
00:09 - all now I'm not going to be creating a
00:12 - lot of validation in this tutorial for
00:16 - the purpose of time uh I want to explain
00:19 - other things that are more relevant it's
00:21 - up to you really how you validate this
00:23 - name fi uh this name value here um
00:28 - obviously you want to check if it it if
00:30 - something's been typed in or not and uh
00:33 - by all means go ahead and apply other
00:34 - validation methods or apply the
00:36 - validation within settings.php entirely
00:39 - up to you uh but in this tutorial we're
00:41 - not going to be covering it so I'm going
00:43 - to create a new variable called name and
00:46 - I'm going to assign this value that
00:48 - we've taken from um this post data
00:53 - remember we posting to this settings.php
00:56 - file now I'm going to apply some
00:58 - relevant uh Sani ization the first one
01:01 - is HTML entities and this will remove
01:04 - any
01:06 - HTML um literal HTML uh code from here
01:10 - and and create it and turn it into
01:13 - entities uh this means that the HTML
01:15 - will be displayed rather than actually
01:17 - um interpreted by the browser and I also
01:20 - want to uh include the MySQL
01:24 - real Escape string function because
01:27 - we're posting to our database we need
01:29 - need to ensure that we first of all
01:31 - protect from SQL injection and with HTML
01:35 - entities we're uh preventing uh cross-
01:38 - site scripting so xss
01:40 - attacks okay so the only validation here
01:43 - I'm going to do is
01:45 - if uh no we won we'll stick not won't do
01:49 - validation we'll just uh go ahead and
01:50 - update the database so I'm going to
01:53 - create a new variable called update and
01:55 - this is going to hold the query uh that
01:58 - we're going to use to update
02:00 - this value here to um the value that
02:04 - we've uh submitted here name so the
02:07 - query would be update users remember our
02:10 - table is called
02:12 - users and I'm going to set name equal to
02:19 - name
02:21 - where user ID is equal to and just
02:25 - outside here append on our
02:27 - session user ID so let me just go and
02:30 - explain this for those of you that are
02:32 - unfamiliar with how uh a query in this
02:34 - case would work however I'm sure you are
02:37 - because jQuery is a language that's most
02:41 - often um used alongside
02:45 - PHP so we're updating the users table
02:48 - and we're setting the name field to name
02:51 - but the condition with our wear Clause
02:53 - is where the user ID is equal to this
02:55 - particular session now this would
02:57 - usually be something that you uh that
02:59 - you has been defined as the user has
03:01 - logged in so you know depending on their
03:04 - user ID however in init.php remember we
03:08 - Define this ourselves just for the sake
03:10 - of not going through uh a login and a
03:13 - registration process or a login process
03:16 - so we're just updating this name here
03:19 - next to this ID so where it matches it's
03:22 - a unique ID I should have probably
03:24 - mentioned beforehand that this user ID
03:26 - field is an autoincrement field so it's
03:29 - Unique every time a new row a new record
03:32 - is added and um it's also a primary key
03:37 - so if I was to go ahead and insert a new
03:39 - value for example
03:41 - Billy uh you can see that when we browse
03:43 - to the data the user ID is now two and
03:45 - the name is now Billy so we can test
03:47 - this out a bit later once we've updated
03:49 - this name we can go ahead and update
03:51 - this one as well okay so now what we
03:53 - want to do is check if this update query
03:56 - has completed properly so if update is
03:58 - equal to true
04:00 - this means that the uh query has uh
04:03 - succeeded so we can Echo
04:05 - out settings have being
04:09 - updated
04:11 - otherwise we want to say if we'll just
04:14 - do a uh an if else if statement um if
04:18 - update is equal to
04:21 - false
04:22 - Echo
04:24 - could uh or there was an error updating
04:30 - your
04:32 - settings okay so now what's happening is
04:35 - um we are just well we've we've
04:37 - performed the query which is uh we've
04:39 - already explained and we're just
04:41 - checking if update is equal to true or
04:43 - false and giving the uh message uh
04:46 - appropriately so this message here or
04:49 - this message here depending on whether
04:51 - the query is run successfully or not
04:53 - will now be uh put into this data here
04:57 - which we then add into uh our SA save
04:59 - status or we override the current text
05:02 - which is the loading sign or text and we
05:06 - put that into save status so now that
05:09 - we've done that we should uh retrieve
05:11 - well we should receive this me message
05:13 - unless I've created the query
05:15 - wrong and then we should receive this
05:18 - error message or have this error message
05:20 - display um just here so let's go ahead
05:25 - and first of all uh refresh this so we
05:27 - know that the data is here so we've got
05:29 - the current value is Alex Garrett if I
05:32 - then put in for example my name is Alex
05:35 - G rather than Garrett and click save it
05:38 - says settings have been updated now you
05:40 - didn't see the loading symbol because
05:42 - this query is extremely simple and
05:44 - performed or was executed or run
05:48 - extremely quickly so we didn't see the
05:51 - loading um thing here the loading text
05:54 - here that we placed in between clicking
05:56 - the button and actually retrieving the
05:58 - results so in a minute we'll create um a
06:01 - sleep well we'll call the Sleep function
06:03 - in PHP so this will become a bit clearer
06:06 - now when I go go ahead and browse you
06:08 - can see that that value is now been
06:09 - changed to Alex G so we know this is
06:12 - working so let's say that the user has
06:15 - logged in as Billy as AO instead of Alex

Cleaned transcript:

okay so over in settings.php we need to pick up this name variable so we can go ahead and check if this is set first of all now I'm not going to be creating a lot of validation in this tutorial for the purpose of time uh I want to explain other things that are more relevant it's up to you really how you validate this name fi uh this name value here um obviously you want to check if it it if something's been typed in or not and uh by all means go ahead and apply other validation methods or apply the validation within settings.php entirely up to you uh but in this tutorial we're not going to be covering it so I'm going to create a new variable called name and I'm going to assign this value that we've taken from um this post data remember we posting to this settings.php file now I'm going to apply some relevant uh Sani ization the first one is HTML entities and this will remove any HTML um literal HTML uh code from here and and create it and turn it into entities uh this means that the HTML will be displayed rather than actually um interpreted by the browser and I also want to uh include the MySQL real Escape string function because we're posting to our database we need need to ensure that we first of all protect from SQL injection and with HTML entities we're uh preventing uh cross site scripting so xss attacks okay so the only validation here I'm going to do is if uh no we won we'll stick not won't do validation we'll just uh go ahead and update the database so I'm going to create a new variable called update and this is going to hold the query uh that we're going to use to update this value here to um the value that we've uh submitted here name so the query would be update users remember our table is called users and I'm going to set name equal to name where user ID is equal to and just outside here append on our session user ID so let me just go and explain this for those of you that are unfamiliar with how uh a query in this case would work however I'm sure you are because jQuery is a language that's most often um used alongside PHP so we're updating the users table and we're setting the name field to name but the condition with our wear Clause is where the user ID is equal to this particular session now this would usually be something that you uh that you has been defined as the user has logged in so you know depending on their user ID however in init.php remember we Define this ourselves just for the sake of not going through uh a login and a registration process or a login process so we're just updating this name here next to this ID so where it matches it's a unique ID I should have probably mentioned beforehand that this user ID field is an autoincrement field so it's Unique every time a new row a new record is added and um it's also a primary key so if I was to go ahead and insert a new value for example Billy uh you can see that when we browse to the data the user ID is now two and the name is now Billy so we can test this out a bit later once we've updated this name we can go ahead and update this one as well okay so now what we want to do is check if this update query has completed properly so if update is equal to true this means that the uh query has uh succeeded so we can Echo out settings have being updated otherwise we want to say if we'll just do a uh an if else if statement um if update is equal to false Echo could uh or there was an error updating your settings okay so now what's happening is um we are just well we've we've performed the query which is uh we've already explained and we're just checking if update is equal to true or false and giving the uh message uh appropriately so this message here or this message here depending on whether the query is run successfully or not will now be uh put into this data here which we then add into uh our SA save status or we override the current text which is the loading sign or text and we put that into save status so now that we've done that we should uh retrieve well we should receive this me message unless I've created the query wrong and then we should receive this error message or have this error message display um just here so let's go ahead and first of all uh refresh this so we know that the data is here so we've got the current value is Alex Garrett if I then put in for example my name is Alex G rather than Garrett and click save it says settings have been updated now you didn't see the loading symbol because this query is extremely simple and performed or was executed or run extremely quickly so we didn't see the loading um thing here the loading text here that we placed in between clicking the button and actually retrieving the results so in a minute we'll create um a sleep well we'll call the Sleep function in PHP so this will become a bit clearer now when I go go ahead and browse you can see that that value is now been changed to Alex G so we know this is working so let's say that the user has logged in as Billy as AO instead of Alex
