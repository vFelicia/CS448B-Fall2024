With timestamps:

00:00 - are are right mofos welcome back and in
00:02 - this video I'm going to show you how to
00:03 - use variables and also data binding so
00:07 - in other words I'm going to show you
00:08 - guys how to have variables inside this
00:10 - class and we can include them inside our
00:12 - template and by the way just to give you
00:14 - guys a little heads up since we kind of
00:17 - need to be making some kind of sample
00:19 - for this tutorial I'm just going to make
00:21 - a basic video player application and
00:23 - it's just going to have YouTube videos
00:25 - so we're going to have a list of YouTube
00:27 - videos on the right-hand side kind of
00:29 - like a playlist and whenever you click
00:31 - one it's going to display on the left so
00:34 - a really you know simple component but
00:36 - we'll learn a bunch of cool stuff about
00:38 - angular so the first thing I want to do
00:41 - is instead of just having plain old
00:43 - static text in here I actually want to
00:46 - change this up some time so what I'm
00:47 - going to do is in my class I'm going to
00:50 - make it a variable and you can name this
00:52 - variable anything you want I'm just
00:53 - going to name my main heading now I'm
00:56 - going to set this equal to something
00:58 - like my videos semicolon at the end and
01:02 - boom look at that so right now our class
01:05 - is no longer empty it's happy it has
01:07 - this main heading variable but now we
01:10 - have to think all right how do we
01:12 - include this variable right here so it
01:16 - displays well in order to do that we use
01:18 - a concept called
01:20 - data binding in other words we want to
01:22 - include something from our class inside
01:25 - our template so the syntax for this is
01:28 - double squigglies so two left's
01:31 - Quigley's and two right squigglies i am
01:33 - positive that that's not the technical
01:35 - technical name from but curly braces
01:38 - whatever so inside here you just write
01:40 - whatever variable so main heading and
01:44 - check it out
01:45 - so now let me go ahead and look that my
01:49 - videos so again that's the very basics
01:52 - of data binding in other words including
01:55 - class variables inside your template now
01:57 - just a heads up there are a lot of
01:59 - different kinds of binding in angular so
02:02 - if you're looking through the
02:04 - documentation in you're like wait a
02:05 - minute I'm looking at two-way binding
02:08 - and the syntax is a little bit different
02:10 - we're going to talk about how you can
02:12 - buying things differently later on it's
02:14 - pretty simple but we'll get to that
02:16 - later for now I want to mention this the
02:20 - number one rule at least my number one
02:22 - rule of software design is never repeat
02:24 - yourself if you are ever making
02:26 - application or a piece of software and
02:28 - you find yourself doing the same thing
02:30 - over and over again then you're doing it
02:32 - wrong so a lot of the times especially
02:35 - when you're making a website you have
02:37 - certain bits of code that you include
02:39 - over and over and over again for example
02:41 - the title of your web page now on my
02:43 - website I have the New Boston in almost
02:45 - every single title so instead of just
02:48 - writing it on every single file and then
02:50 - what if my website changed I would have
02:52 - to go through and do it again instead
02:54 - what I did is I made this one settings
02:57 - file and it has a setting for the title
03:00 - now if I ever wanted to update that I
03:02 - would only have to update it in one
03:04 - location and update through my entire
03:06 - program now I'm going to show you guys
03:08 - how to do that in this and since we
03:10 - don't have really any important settings
03:12 - right now I'm just going to do it with
03:13 - the heading but later on let's say that
03:16 - you're working with like the Twitter API
03:18 - and they gave you an API key that you
03:20 - needed to use all over or maybe like a
03:22 - file path then you would have that in
03:24 - your settings file but right now we'll
03:25 - just put something stupid in here like
03:27 - this right there so we're going to
03:30 - actually make a new file and go ahead
03:34 - and name it
03:34 - config service TS so all of your
03:39 - typescript files are going to named or
03:41 - excuse me Ã± in the TS file extension and
03:45 - for here we're just going to export a
03:47 - class in we're just going to have
03:49 - variables in here so export class and
03:53 - I'm just going to name it config
03:55 - basically your configuration settings or
03:58 - the overall settings for your website so
04:01 - this is going to be variable called main
04:04 - heading you can actually name it
04:06 - whatever you want and since this is
04:07 - going to be a constant in other words
04:09 - it's not going to change before it use
04:12 - the keyword static so this means that
04:14 - this isn't just a normal variable this
04:16 - is going to be a constant in other words
04:18 - a static not changing so whenever you're
04:21 - using typescript after you make your
04:23 - variable you
04:25 - : and then you write what type it is so
04:28 - this is just a string just going to have
04:29 - some text in it it's not a number or
04:31 - anything like that and now you just set
04:33 - equal to anything just like a regular
04:35 - JavaScript variable and just so I can
04:38 - show you guys that it's different let me
04:40 - change this I'll put like my favorite
04:43 - videos alright so that's it so now
04:46 - whenever we include this in other files
04:48 - we're pretty much just taking all the
04:50 - variables in here and we can use it
04:52 - somewhere else
04:53 - so pop back over to app components the
04:56 - TS and now we actually need to import
04:58 - this file
04:59 - so again import what is the class name
05:02 - it was just config this name right here
05:07 - and now we need to say what file it's
05:10 - coming from so remember anytime we
05:13 - include one of our files we have to use
05:16 - the relative pad so dot forward and that
05:20 - is just config dot service so config dot
05:26 - service now remember don't add the file
05:28 - extension and I explained in the last
05:30 - video why you don't so now what we can
05:33 - do instead of just setting this equal to
05:35 - some chunk of text right here we can
05:37 - actually use the variables from this
05:39 - file so the variables name main heading
05:43 - so just straight config main heading
05:47 - pretty awesome name now if I look back
05:49 - here my favorite videos check it out so
05:54 - this is pretty cool because again not
05:57 - very useful in this example but later on
06:00 - if we include this all over we would
06:02 - only have to go back here to this one
06:04 - file and change the value of this
06:07 - variable right here and it would be
06:09 - updated in every single component where
06:11 - we had this main heading pretty awesome
06:13 - at

Cleaned transcript:

are are right mofos welcome back and in this video I'm going to show you how to use variables and also data binding so in other words I'm going to show you guys how to have variables inside this class and we can include them inside our template and by the way just to give you guys a little heads up since we kind of need to be making some kind of sample for this tutorial I'm just going to make a basic video player application and it's just going to have YouTube videos so we're going to have a list of YouTube videos on the righthand side kind of like a playlist and whenever you click one it's going to display on the left so a really you know simple component but we'll learn a bunch of cool stuff about angular so the first thing I want to do is instead of just having plain old static text in here I actually want to change this up some time so what I'm going to do is in my class I'm going to make it a variable and you can name this variable anything you want I'm just going to name my main heading now I'm going to set this equal to something like my videos semicolon at the end and boom look at that so right now our class is no longer empty it's happy it has this main heading variable but now we have to think all right how do we include this variable right here so it displays well in order to do that we use a concept called data binding in other words we want to include something from our class inside our template so the syntax for this is double squigglies so two left's Quigley's and two right squigglies i am positive that that's not the technical technical name from but curly braces whatever so inside here you just write whatever variable so main heading and check it out so now let me go ahead and look that my videos so again that's the very basics of data binding in other words including class variables inside your template now just a heads up there are a lot of different kinds of binding in angular so if you're looking through the documentation in you're like wait a minute I'm looking at twoway binding and the syntax is a little bit different we're going to talk about how you can buying things differently later on it's pretty simple but we'll get to that later for now I want to mention this the number one rule at least my number one rule of software design is never repeat yourself if you are ever making application or a piece of software and you find yourself doing the same thing over and over again then you're doing it wrong so a lot of the times especially when you're making a website you have certain bits of code that you include over and over and over again for example the title of your web page now on my website I have the New Boston in almost every single title so instead of just writing it on every single file and then what if my website changed I would have to go through and do it again instead what I did is I made this one settings file and it has a setting for the title now if I ever wanted to update that I would only have to update it in one location and update through my entire program now I'm going to show you guys how to do that in this and since we don't have really any important settings right now I'm just going to do it with the heading but later on let's say that you're working with like the Twitter API and they gave you an API key that you needed to use all over or maybe like a file path then you would have that in your settings file but right now we'll just put something stupid in here like this right there so we're going to actually make a new file and go ahead and name it config service TS so all of your typescript files are going to named or excuse me Ã± in the TS file extension and for here we're just going to export a class in we're just going to have variables in here so export class and I'm just going to name it config basically your configuration settings or the overall settings for your website so this is going to be variable called main heading you can actually name it whatever you want and since this is going to be a constant in other words it's not going to change before it use the keyword static so this means that this isn't just a normal variable this is going to be a constant in other words a static not changing so whenever you're using typescript after you make your variable you and then you write what type it is so this is just a string just going to have some text in it it's not a number or anything like that and now you just set equal to anything just like a regular JavaScript variable and just so I can show you guys that it's different let me change this I'll put like my favorite videos alright so that's it so now whenever we include this in other files we're pretty much just taking all the variables in here and we can use it somewhere else so pop back over to app components the TS and now we actually need to import this file so again import what is the class name it was just config this name right here and now we need to say what file it's coming from so remember anytime we include one of our files we have to use the relative pad so dot forward and that is just config dot service so config dot service now remember don't add the file extension and I explained in the last video why you don't so now what we can do instead of just setting this equal to some chunk of text right here we can actually use the variables from this file so the variables name main heading so just straight config main heading pretty awesome name now if I look back here my favorite videos check it out so this is pretty cool because again not very useful in this example but later on if we include this all over we would only have to go back here to this one file and change the value of this variable right here and it would be updated in every single component where we had this main heading pretty awesome at
