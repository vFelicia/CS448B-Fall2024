With timestamps:

00:00 - all right guys in this video I'm going
00:02 - to be showing you guys what the arrow
00:04 - member selection operator does and when
00:07 - you should use it but I was thinking and
00:09 - I was like you know what we haven't
00:10 - created a new class in a while and it
00:12 - actually would be kind of useful in this
00:14 - tutorial so let's go ahead and start
00:16 - working with a new class so just a
00:18 - refresher from I don't know I probably
00:20 - did this like 20 tutorials ago in order
00:22 - to create a new class press file new
00:25 - class and then you go ahead and name
00:27 - your class anything you want I'm going
00:29 - to name mine Sally
00:30 - and I don't think we covered destructors
00:32 - yet so let's go ahead and uncheck those
00:34 - and make sure we're working in the same
00:36 - directory as our main CPP so everything
00:40 - looks good um go ahead and click create
00:43 - and of course it's going to give you
00:44 - these two confirmation yeah of course I
00:47 - wanted to do both of those and now we
00:49 - got two new files a Sally header file
00:52 - and a Sally CPP file and remember the
00:54 - Sally header file is basically where
00:57 - we're going to be making all our
00:58 - prototypes and the s. CPP is where we're
01:01 - going to be doing the actual coding so
01:04 - in our main CPP we need to do a couple
01:06 - housekeeping things first go ahead and
01:08 - copy these and of course it's your IR
01:11 - stream and namespace and go ahead and
01:13 - copy it right in here and of course we
01:16 - need the Sally header I forgot I always
01:19 - try to right click and select copy but
01:21 - there is no copy so anyways go ahead and
01:24 - get our Sally header and paste it in our
01:27 - main.cpp so basically the beginning of
01:30 - main CPP and Sally CPP should look
01:32 - pretty much the same so now a couple
01:35 - things I like to do actually the only
01:37 - thing I like to do is this go ahead and
01:38 - take out this comment because useless
01:41 - comments annoy me and uh I guess I might
01:44 - as well go over this one more time in F
01:47 - Def and Define and end if all this means
01:49 - this stuff in green right here they put
01:52 - that there in every class they
01:54 - automatically build for you and it
01:55 - pretty much means don't include a header
01:58 - file if you don't need it this literally
02:00 - means if not defined Sally header file
02:04 - then Define it so basically whenever
02:06 - you're running in main CPP all these
02:08 - classes are going to have it and it's
02:10 - like if you already included Sally
02:12 - header file then don't include it again
02:14 - because you only need to include it once
02:16 - obviously so that's what all that means
02:18 - so now all my explaining we can finally
02:20 - get to the tutorial so in this tutorial
02:23 - the first thing we need to be able to do
02:25 - is I'm just going to create a random
02:27 - stupid function in the Sally class
02:30 - so in order to do that let's go ahead
02:32 - and it's not going to return anything so
02:34 - I just put void and then write your
02:35 - class name Sally and then we need that
02:39 - double colon operator and then prints
02:42 - crap oh i' already have my uh my
02:45 - favorite function stored for me so
02:47 - basically we need this double colon
02:49 - operator again this is a reminder
02:52 - because without it it wouldn't know what
02:54 - function print crap belong to so we're
02:56 - saying all right this belongs to the
02:58 - Sally class and uh you know if we didn't
03:01 - have that then we would get an error so
03:03 - write your class name double colon and
03:05 - then your function name whenever you're
03:06 - building functions so print crap and all
03:09 - we're going to have this do is see out
03:12 - um write something stupid like did
03:14 - someone say
03:16 - stake and endline so basically we have
03:20 - the Sally class and we have our
03:22 - Constructor function which doesn't do
03:24 - anything and we have this function
03:26 - called print crap that pretty much
03:28 - prints crap out on the screen so now we
03:30 - can go ahead and prototype it and
03:32 - remember whenever you're prototyping in
03:34 - class go ahead and copy that and
03:37 - actually what we need to do is this
03:39 - don't even copy that just under your
03:41 - public write void
03:45 - print crap and that's all we have to do
03:48 - to prototype it we don't have to copy it
03:50 - because this Sally is basically telling
03:53 - this header file it belongs to the Sally
03:55 - class but whenever we're prototyping the
03:58 - class it already knows that of course
04:00 - we're working with the Sally class so
04:02 - that's why we don't write something like
04:03 - this
04:05 - Sally like that so you know just a nice
04:08 - little note to keep track of so now that
04:11 - we have basically a class made with one
04:14 - function in it I want to talk to you
04:16 - guys about what I'm going to teach you
04:18 - in this tutorial and that is the arrow
04:20 - member selection operator and that's
04:22 - this little dinging right there saying
04:24 - what the heck is that what's it do
04:26 - what's the point of it well in order to
04:28 - explain to you guys what that that does
04:30 - let's go ahead and first build a Sally
04:32 - object so Sally uh make a Sally object
04:35 - called
04:36 - Sally object and we know with our Sally
04:40 - object then we can access the stuff
04:42 - inside the Sally class using
04:46 - Sally object using the dot and then go
04:50 - ahead and you know use whatever you want
04:52 - to use a variable or function or
04:53 - whatever so now when we go ahead and
04:55 - build and run this it says did someone
04:58 - say stake pretty cool huh so we know
05:01 - that these facts are true in order to
05:05 - access stuff from the Sally class we
05:07 - need to use a Sally object and then we
05:10 - can use that by putting the object first
05:13 - using a DOT separator and then writing
05:15 - whatever we want to access after it so
05:18 - that is how we access stuff inside the
05:20 - Sally class but now I want to teach you
05:22 - guys that there's a different way to
05:24 - access the stuff inside the Sally class
05:26 - this is by making a pointer to to the
05:29 - Sally object so let's go ahead and see
05:31 - what I'm talking about in order to make
05:34 - a pointer you go ahead and write what
05:36 - type of data you're going to hold I'm
05:38 - going to be holding Sally type of data
05:40 - because a class is actually a type of
05:42 - data that you create yourself and now
05:44 - you go ahead and name your pointer using
05:46 - pointer and I'm just going to name mine
05:49 - Sally pointer and now we set it equal to
05:53 - the memory address of Sally object so
05:57 - basically the Sally pointer is pointing
06:00 - to this object right here simple enough
06:03 - so they're basically the same thing I
06:05 - mean I shouldn't even say that because a
06:06 - lot of people are going to be like a
06:07 - pointers and same thing as an object but
06:09 - you know they're basically same thing so
06:12 - now what we can do is we can use that
06:13 - pointer to access the stuff in the print
06:16 - crap class I mean excuse me the Sally
06:18 - class so let's go ahead and put Sally
06:21 - pointer and you might be thinking all
06:24 - right so use the dot separator and then
06:26 - write print crap just like that and I'll
06:28 - try to run this it's going to work fine
06:30 - but why am I getting an error message
06:31 - right here and that brings me to the
06:33 - point of this tutorial whenever you're
06:35 - using a pointer to access stuff inside a
06:39 - class you need to use something called
06:41 - The Arrow member selection operator so
06:44 - again whenever you run this it's going
06:46 - to work fine and dandy so this is
06:49 - accessing it with the object and this is
06:51 - accessing it with a pointer pretty cool
06:53 - huh so it's basically two different ways
06:56 - where you can access things inside a
06:57 - class um right now I just want to show
07:00 - you guys how to do it and then later on
07:02 - I'm going to show you guys when you
07:03 - would need to do it but not in this
07:05 - tutorial for this tutorial I just want
07:06 - to make sure you guys understand this
07:08 - information you have two different ways
07:10 - of accessing things inside of a class
07:12 - one way is to use an object and then you
07:14 - know the function name and another way
07:17 - is to use a pointer and then the
07:19 - function name or variable name whenever
07:21 - you use an object you use the dot
07:23 - separator whenever you use a pointer you
07:26 - use the arrow and that's actually pretty
07:27 - easy to remember because whenever you're
07:29 - using a pointer it kind of looks like a
07:31 - pointer so I mean it's not can't get
07:34 - easier to remember than that so that's
07:37 - how I want to teach you guys for this
07:38 - tutorial um hopefully you understand the
07:41 - concept behind it you probably don't
07:43 - understand why you would use one versus
07:44 - the other but you will later on so for
07:46 - now just understand this and uh don't
07:48 - forget to make sure that your uh
07:51 - beginning of all your CPP files are
07:53 - basically the same so that's all I have
07:55 - for you guys for this tutorial um thank
07:57 - you guys for watching don't forget to
07:58 - subscribe and uh guess I'll see you guys
08:00 - in next video

Cleaned transcript:

all right guys in this video I'm going to be showing you guys what the arrow member selection operator does and when you should use it but I was thinking and I was like you know what we haven't created a new class in a while and it actually would be kind of useful in this tutorial so let's go ahead and start working with a new class so just a refresher from I don't know I probably did this like 20 tutorials ago in order to create a new class press file new class and then you go ahead and name your class anything you want I'm going to name mine Sally and I don't think we covered destructors yet so let's go ahead and uncheck those and make sure we're working in the same directory as our main CPP so everything looks good um go ahead and click create and of course it's going to give you these two confirmation yeah of course I wanted to do both of those and now we got two new files a Sally header file and a Sally CPP file and remember the Sally header file is basically where we're going to be making all our prototypes and the s. CPP is where we're going to be doing the actual coding so in our main CPP we need to do a couple housekeeping things first go ahead and copy these and of course it's your IR stream and namespace and go ahead and copy it right in here and of course we need the Sally header I forgot I always try to right click and select copy but there is no copy so anyways go ahead and get our Sally header and paste it in our main.cpp so basically the beginning of main CPP and Sally CPP should look pretty much the same so now a couple things I like to do actually the only thing I like to do is this go ahead and take out this comment because useless comments annoy me and uh I guess I might as well go over this one more time in F Def and Define and end if all this means this stuff in green right here they put that there in every class they automatically build for you and it pretty much means don't include a header file if you don't need it this literally means if not defined Sally header file then Define it so basically whenever you're running in main CPP all these classes are going to have it and it's like if you already included Sally header file then don't include it again because you only need to include it once obviously so that's what all that means so now all my explaining we can finally get to the tutorial so in this tutorial the first thing we need to be able to do is I'm just going to create a random stupid function in the Sally class so in order to do that let's go ahead and it's not going to return anything so I just put void and then write your class name Sally and then we need that double colon operator and then prints crap oh i' already have my uh my favorite function stored for me so basically we need this double colon operator again this is a reminder because without it it wouldn't know what function print crap belong to so we're saying all right this belongs to the Sally class and uh you know if we didn't have that then we would get an error so write your class name double colon and then your function name whenever you're building functions so print crap and all we're going to have this do is see out um write something stupid like did someone say stake and endline so basically we have the Sally class and we have our Constructor function which doesn't do anything and we have this function called print crap that pretty much prints crap out on the screen so now we can go ahead and prototype it and remember whenever you're prototyping in class go ahead and copy that and actually what we need to do is this don't even copy that just under your public write void print crap and that's all we have to do to prototype it we don't have to copy it because this Sally is basically telling this header file it belongs to the Sally class but whenever we're prototyping the class it already knows that of course we're working with the Sally class so that's why we don't write something like this Sally like that so you know just a nice little note to keep track of so now that we have basically a class made with one function in it I want to talk to you guys about what I'm going to teach you in this tutorial and that is the arrow member selection operator and that's this little dinging right there saying what the heck is that what's it do what's the point of it well in order to explain to you guys what that that does let's go ahead and first build a Sally object so Sally uh make a Sally object called Sally object and we know with our Sally object then we can access the stuff inside the Sally class using Sally object using the dot and then go ahead and you know use whatever you want to use a variable or function or whatever so now when we go ahead and build and run this it says did someone say stake pretty cool huh so we know that these facts are true in order to access stuff from the Sally class we need to use a Sally object and then we can use that by putting the object first using a DOT separator and then writing whatever we want to access after it so that is how we access stuff inside the Sally class but now I want to teach you guys that there's a different way to access the stuff inside the Sally class this is by making a pointer to to the Sally object so let's go ahead and see what I'm talking about in order to make a pointer you go ahead and write what type of data you're going to hold I'm going to be holding Sally type of data because a class is actually a type of data that you create yourself and now you go ahead and name your pointer using pointer and I'm just going to name mine Sally pointer and now we set it equal to the memory address of Sally object so basically the Sally pointer is pointing to this object right here simple enough so they're basically the same thing I mean I shouldn't even say that because a lot of people are going to be like a pointers and same thing as an object but you know they're basically same thing so now what we can do is we can use that pointer to access the stuff in the print crap class I mean excuse me the Sally class so let's go ahead and put Sally pointer and you might be thinking all right so use the dot separator and then write print crap just like that and I'll try to run this it's going to work fine but why am I getting an error message right here and that brings me to the point of this tutorial whenever you're using a pointer to access stuff inside a class you need to use something called The Arrow member selection operator so again whenever you run this it's going to work fine and dandy so this is accessing it with the object and this is accessing it with a pointer pretty cool huh so it's basically two different ways where you can access things inside a class um right now I just want to show you guys how to do it and then later on I'm going to show you guys when you would need to do it but not in this tutorial for this tutorial I just want to make sure you guys understand this information you have two different ways of accessing things inside of a class one way is to use an object and then you know the function name and another way is to use a pointer and then the function name or variable name whenever you use an object you use the dot separator whenever you use a pointer you use the arrow and that's actually pretty easy to remember because whenever you're using a pointer it kind of looks like a pointer so I mean it's not can't get easier to remember than that so that's how I want to teach you guys for this tutorial um hopefully you understand the concept behind it you probably don't understand why you would use one versus the other but you will later on so for now just understand this and uh don't forget to make sure that your uh beginning of all your CPP files are basically the same so that's all I have for you guys for this tutorial um thank you guys for watching don't forget to subscribe and uh guess I'll see you guys in next video
