With timestamps:

00:00 - all right hi there and welcome to this
00:02 - spring boot
00:03 - and caught in tutorial series now
00:06 - obviously i'm not bucky but just bear
00:08 - with me for a minute here
00:10 - my name's peter and i'm part of the new
00:12 - boston community
00:14 - so i contribute to the digital currency
00:16 - to the kotlin sdk
00:18 - and also i contribute as a youtube
00:20 - educator
00:21 - which gives me the chance to teach you
00:23 - something on this channel
00:25 - now when i don't do this i also work as
00:28 - a full stack developer and i work as
00:32 - online teacher on the side so i have
00:34 - courses on my own platform at
00:37 - codalong.tv
00:38 - on udemy and some other sites
00:41 - so hopefully i can give you a nice and
00:44 - gentle introduction to not only kotlin
00:47 - but also to spring boot in this tutorial
00:49 - series
00:50 - so without any further ado let's just
00:52 - get into it
00:54 - alright so here we are on the official
00:56 - spring website at
00:58 - spring.io on here let's go
01:01 - to projects and click on overview
01:04 - so here you can see that spring really
01:06 - is an entire
01:07 - ecosystem of different projects that are
01:10 - tailored to different use cases
01:13 - and the ones that we're really
01:14 - interested in for this tutorial series
01:18 - are spring boot and spring framework
01:22 - at some later point maybe i'll also
01:24 - cover spring security
01:26 - to handle authorization and
01:29 - authentication
01:30 - to your application but for now
01:33 - let's understand the spring framework
01:36 - and spring boot
01:37 - at least at a very rough level so the
01:40 - spring framework really comes with
01:42 - lots of infrastructure that you
01:44 - typically need for enterprise web
01:46 - applications
01:47 - in java so it provides things like
01:50 - dependency injection
01:52 - transaction management accessing
01:54 - different data sources and many many
01:57 - other things now this spring framework
02:00 - is really extensive so it can be hard to
02:02 - get started can be
02:04 - a bit overwhelming at first so i hope
02:06 - that this tutorial series
02:08 - is also kind of like a gentle
02:10 - introduction to the spring framework
02:13 - but also we're going to be focusing on
02:15 - spring boot
02:16 - and the whole purpose of spring boot is
02:18 - basically
02:19 - to allow you to get started building web
02:22 - applications using the spring framework
02:25 - more easily by providing an
02:28 - opinionated view of building these kinds
02:30 - of spring applications
02:32 - so this means there are lots of defaults
02:35 - defined
02:37 - for how you configure stuff and it
02:39 - really makes it a lot easier because it
02:41 - narrows down the solution path that you
02:44 - have
02:45 - for building your web application all
02:48 - right so with that out of the way
02:49 - what we're going to do in these tutorial
02:51 - series is um
02:52 - building a rest api little web
02:55 - application
02:56 - with a rest api for banks
03:00 - so in order to fit into the new boston
03:02 - community
03:03 - we're going to take digital currency as
03:05 - the domain for these examples
03:07 - so we're going to build a rest api that
03:09 - knows how to handle bank objects
03:12 - so you can fetch banks from the rest api
03:14 - you can create new banks
03:16 - update existing bank data delete banks
03:19 - and so on
03:21 - so let me show you what this will look
03:23 - like once we're done
03:25 - so over here in postman this is a tool
03:28 - that allows you to make different types
03:31 - of http requests
03:33 - so you can make get requests post put
03:36 - delete
03:36 - and quite a few others and we're going
03:39 - to talk about what these mean
03:41 - in the coming tutorials but for now
03:45 - you can see here we have a rest api with
03:48 - our service running on localhost
03:50 - on port 8080 and if we make a call here
03:54 - let's say to the bank's endpoint this
03:56 - will give us a list
03:58 - of all the banks that are currently
04:01 - known to the service
04:02 - so we have three banks that are set up
04:06 - these consist of an account numbers
04:08 - transaction fee and trust
04:10 - it's not so much about data you could
04:12 - add different types of data of course if
04:14 - you want to
04:16 - you can also fetch a single bank
04:20 - by appending the account number of the
04:23 - bank you're interested in
04:24 - and then you can see over here the rest
04:26 - api will
04:28 - respond with just the bank that you
04:30 - requested
04:32 - and similarly you can also create a post
04:35 - request in order to create a bank
04:37 - so with this over here you can give it
04:39 - the data it wants
04:41 - or or you want it to add to the
04:44 - available banks send it and then if we
04:47 - go back
04:48 - you can also see here the response is
04:51 - 201 created
04:53 - and now if you fetch all the banks you
04:55 - can see you now have those four banks
04:57 - over here
04:59 - you can use a put request in order to
05:02 - update an existing bank
05:04 - so over here what does it currently look
05:08 - like
05:08 - so this with the account number here
05:12 - has a transaction fee of 10 and 80
05:14 - currently
05:15 - so now let's use a put request for this
05:18 - bank with this account number and change
05:21 - the transaction fee and the trust
05:23 - so if we send this over you can see it's
05:25 - acknowledged by the rest api by
05:28 - giving you the same thing back as the
05:30 - response and now if i go back
05:32 - and get all the banks again you can see
05:35 - the transaction fee is now three and the
05:37 - trust is now 85
05:39 - and then lastly what you're also going
05:42 - to build is a delete endpoint
05:44 - so on this rest api you can delete a
05:46 - specific bank
05:48 - again using the account number as an id
05:51 - and that's going to give you two or four
05:53 - no content
05:56 - and if i go now back to creating or
05:59 - retrieving all the banks
06:01 - you can see it's now back to only three
06:03 - of them
06:04 - so all of this is what you're going to
06:06 - be building over these next few
06:08 - tutorials it's going to be a really nice
06:10 - introduction into
06:11 - building rest apis using spring boot
06:14 - and also how to test your applications
06:17 - using junit 5.
06:20 - so with this little overview done let's
06:22 - go to
06:23 - projects and down here click on spring
06:26 - initializer
06:27 - now this is a really useful tool to get
06:29 - started with a new
06:31 - spring based project by allowing you to
06:34 - say which kind of technologies you want
06:36 - to use which spring dependencies you
06:39 - want to include
06:40 - and then it's going to generate the base
06:42 - project for you
06:44 - now for these tutorials let's go ahead
06:47 - and create a gradle project
06:49 - and of course we're going to use kotlin
06:52 - so don't be afraid if you've never used
06:54 - it before that's also
06:55 - part of this tutorial series to just get
06:58 - your feet wet
07:00 - using kotlin and building your first
07:02 - application with it
07:04 - let's also go ahead and choose the
07:06 - latest snapshot over here of
07:08 - the spring boot 2 point something
07:10 - version
07:11 - we're only going to be using very basic
07:14 - functionalities of spring boot
07:16 - so i don't expect any major changes in
07:19 - any of the
07:20 - 2.x versions so feel free to use a newer
07:24 - version if you have one available as
07:26 - well
07:27 - then down here i'm going to go ahead and
07:29 - set my
07:30 - group id so here again the
07:34 - convention is to use your domain name
07:36 - for me that's kodalong.tv
07:39 - in reverse order and then let's say
07:42 - tutorials spring boot and then
07:45 - as the artifact id let's go ahead and
07:47 - say the new boston
07:49 - so this is a spring boot tutorial
07:55 - series for the new boston
07:59 - and then for packaging i'm going to use
08:01 - jar
08:02 - and i'm going to leave the java 11 which
08:06 - is the current
08:07 - long term support version so i'm going
08:09 - to leave that there
08:11 - and then we just want one dependency
08:13 - over here
08:14 - which is spring web so as you can see
08:17 - there are many different dependencies
08:19 - you can choose from
08:21 - and spring web is the one that allows
08:23 - you to create
08:24 - restful applications or rest api exactly
08:27 - what we want to build here and it's
08:30 - going to use
08:31 - tomcat as the default container
08:34 - so let's select the stream web
08:36 - dependency and then hit
08:38 - generate which is going to give you the
08:40 - base project
08:41 - as a zip file so let's just go ahead
08:44 - download this
08:45 - and then please just extract it into a
08:47 - folder wherever you want to have your
08:50 - project
08:50 - on your file system and with that you
08:53 - have your base
08:54 - project ready so in the next tutorial
08:56 - let's go ahead and finally write some
08:59 - code

Cleaned transcript:

all right hi there and welcome to this spring boot and caught in tutorial series now obviously i'm not bucky but just bear with me for a minute here my name's peter and i'm part of the new boston community so i contribute to the digital currency to the kotlin sdk and also i contribute as a youtube educator which gives me the chance to teach you something on this channel now when i don't do this i also work as a full stack developer and i work as online teacher on the side so i have courses on my own platform at codalong.tv on udemy and some other sites so hopefully i can give you a nice and gentle introduction to not only kotlin but also to spring boot in this tutorial series so without any further ado let's just get into it alright so here we are on the official spring website at spring.io on here let's go to projects and click on overview so here you can see that spring really is an entire ecosystem of different projects that are tailored to different use cases and the ones that we're really interested in for this tutorial series are spring boot and spring framework at some later point maybe i'll also cover spring security to handle authorization and authentication to your application but for now let's understand the spring framework and spring boot at least at a very rough level so the spring framework really comes with lots of infrastructure that you typically need for enterprise web applications in java so it provides things like dependency injection transaction management accessing different data sources and many many other things now this spring framework is really extensive so it can be hard to get started can be a bit overwhelming at first so i hope that this tutorial series is also kind of like a gentle introduction to the spring framework but also we're going to be focusing on spring boot and the whole purpose of spring boot is basically to allow you to get started building web applications using the spring framework more easily by providing an opinionated view of building these kinds of spring applications so this means there are lots of defaults defined for how you configure stuff and it really makes it a lot easier because it narrows down the solution path that you have for building your web application all right so with that out of the way what we're going to do in these tutorial series is um building a rest api little web application with a rest api for banks so in order to fit into the new boston community we're going to take digital currency as the domain for these examples so we're going to build a rest api that knows how to handle bank objects so you can fetch banks from the rest api you can create new banks update existing bank data delete banks and so on so let me show you what this will look like once we're done so over here in postman this is a tool that allows you to make different types of http requests so you can make get requests post put delete and quite a few others and we're going to talk about what these mean in the coming tutorials but for now you can see here we have a rest api with our service running on localhost on port 8080 and if we make a call here let's say to the bank's endpoint this will give us a list of all the banks that are currently known to the service so we have three banks that are set up these consist of an account numbers transaction fee and trust it's not so much about data you could add different types of data of course if you want to you can also fetch a single bank by appending the account number of the bank you're interested in and then you can see over here the rest api will respond with just the bank that you requested and similarly you can also create a post request in order to create a bank so with this over here you can give it the data it wants or or you want it to add to the available banks send it and then if we go back you can also see here the response is 201 created and now if you fetch all the banks you can see you now have those four banks over here you can use a put request in order to update an existing bank so over here what does it currently look like so this with the account number here has a transaction fee of 10 and 80 currently so now let's use a put request for this bank with this account number and change the transaction fee and the trust so if we send this over you can see it's acknowledged by the rest api by giving you the same thing back as the response and now if i go back and get all the banks again you can see the transaction fee is now three and the trust is now 85 and then lastly what you're also going to build is a delete endpoint so on this rest api you can delete a specific bank again using the account number as an id and that's going to give you two or four no content and if i go now back to creating or retrieving all the banks you can see it's now back to only three of them so all of this is what you're going to be building over these next few tutorials it's going to be a really nice introduction into building rest apis using spring boot and also how to test your applications using junit 5. so with this little overview done let's go to projects and down here click on spring initializer now this is a really useful tool to get started with a new spring based project by allowing you to say which kind of technologies you want to use which spring dependencies you want to include and then it's going to generate the base project for you now for these tutorials let's go ahead and create a gradle project and of course we're going to use kotlin so don't be afraid if you've never used it before that's also part of this tutorial series to just get your feet wet using kotlin and building your first application with it let's also go ahead and choose the latest snapshot over here of the spring boot 2 point something version we're only going to be using very basic functionalities of spring boot so i don't expect any major changes in any of the 2.x versions so feel free to use a newer version if you have one available as well then down here i'm going to go ahead and set my group id so here again the convention is to use your domain name for me that's kodalong.tv in reverse order and then let's say tutorials spring boot and then as the artifact id let's go ahead and say the new boston so this is a spring boot tutorial series for the new boston and then for packaging i'm going to use jar and i'm going to leave the java 11 which is the current long term support version so i'm going to leave that there and then we just want one dependency over here which is spring web so as you can see there are many different dependencies you can choose from and spring web is the one that allows you to create restful applications or rest api exactly what we want to build here and it's going to use tomcat as the default container so let's select the stream web dependency and then hit generate which is going to give you the base project as a zip file so let's just go ahead download this and then please just extract it into a folder wherever you want to have your project on your file system and with that you have your base project ready so in the next tutorial let's go ahead and finally write some code
