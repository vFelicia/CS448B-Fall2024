With timestamps:

00:03 - and that's something else will be to
00:05 - check the email address again so let's
00:09 - click in here okay so it tells us going
00:11 - into a valid email address I'm gonna
00:13 - enter a valid email address and come
00:15 - away then I'm going to click back in and
00:17 - you can see that we don't have the same
00:18 - message instead what we want to do is
00:21 - something else and that is to check the
00:23 - email as well so we're gonna leave this
00:27 - for now I'm just going to change this
00:28 - text here to say check email address
00:34 - valid because what we want to do is if
00:37 - the user has entered something into here
00:39 - and then they click back into it we want
00:41 - to revalidate it it doesn't matter
00:43 - whether they've entered a valid or for
00:45 - example an invalid email address we want
00:48 - to revalidate it so we can tell the user
00:51 - again if the email address is invalid or
00:53 - if it's valid so now we need to create
00:57 - the actual function that will do that
00:59 - will will outline it at the top of our
01:01 - page and this is going to be let's just
01:06 - call this validate email
01:11 - and in that we take an email address so
01:15 - here's our function validate email now
01:18 - it's going to cool it here it's going to
01:20 - call this function just here so this
01:22 - this bit later on when we've actually
01:24 - filled in the block in here we'll equal
01:27 - or we'll call the validate email
01:30 - function also when we have a key up
01:34 - event we also want to call the validate
01:37 - email function as well so we've appended
01:41 - like we have with blur the key up
01:43 - function or the key up event had long to
01:45 - the end of here and inside we want to go
01:48 - ahead and create a function so in here
01:51 - what's going to happen is we're going to
01:53 - first of all retrieve the value of the
01:56 - in fact we don't have to read have to
01:59 - store this in a variable to waste memory
02:01 - we can go ahead and call the validate
02:04 - email function directly and here we want
02:08 - to supply an email address and the email
02:10 - address that we wanted to supply is the
02:13 - email address field so email dot Val so
02:17 - I've used a selector and the valve
02:20 - function in jQuery to grab the value of
02:22 - this email address field so we also want
02:27 - to do this here so we can just copy and
02:32 - paste that there so we've used this
02:34 - function outside of here because
02:35 - otherwise we would have to duplicate the
02:37 - code here and here to validate the email
02:40 - address now this function is going to
02:43 - deal with the Ajax request and it's
02:44 - going to take this email address here
02:46 - it's gonna feed it to a PHP page which
02:49 - we're going to create in just a moment
02:51 - and it's going to you know PHP is going
02:53 - to handle the validation it's then going
02:56 - to return the result of this and then
02:58 - with valid email we can return the
03:00 - result and then we can put that into a
03:03 - or we don't have to return the result
03:05 - from this function we can go ahead and
03:07 - just put this straight into our field
03:09 - it's probably better practice though to
03:11 - return the value so perhaps we'll do
03:14 - that instead okay so now I need to think
03:17 - about what what we're going to write
03:19 - inside of our function well we're going
03:21 - to use the post a jack
03:23 - request so I've just outlined this here
03:26 - it's a dollar sign a full stop post and
03:29 - in brackets inside brackets we're gonna
03:31 - give this three parameters the first one
03:35 - obviously there's a comma separated the
03:37 - first one is going to be the file we're
03:38 - looking for or we're submitting our data
03:41 - to the second in curly brackets remember
03:44 - this is extremely important is going to
03:46 - be our data and the third is a callback
03:49 - function which is going to hold the
03:51 - result returned by this page so that is
03:55 - function data and we can go ahead and
03:58 - bring that down okay so the file that
04:02 - we're submitting this particular data to
04:04 - that will eventually appear inside of
04:06 - our brackets is PHP /e male PHP we need
04:12 - to send some values so we are sending a
04:15 - variable called email and this is going
04:19 - to be the value we pick up inside PHP
04:22 - and the email here is the one that we
04:25 - want to put in here to be submitted so
04:28 - I've used the same variable name here
04:30 - and here but not to be confused this is
04:32 - the name of the variable that we're
04:34 - sending and this is the value retrieved
04:36 - from our function so now that we've done
04:39 - that it's going to submit this variable
04:41 - here with this value to PHP /e male PHP
04:46 - so the first thing to do is go ahead and
04:48 - create that file and we're just going to
04:50 - outline PHP tags and I'm going to save
04:52 - this inside our PHP folder as email dot
04:56 - PHP now that I have that we can actually
04:59 - run some tests before we start to
05:01 - validate so we can run tests to see if
05:04 - our owl Ajax or our jQuery is working so
05:11 - I'm simply going to say
05:14 - email feedback dots text data now
05:22 - remember this data here is what is
05:24 - what's returned from this file here so
05:26 - we've we've created a callback function
05:28 - with data as the handler or the variable
05:32 - that handles what's returned from this
05:34 - file here and then we're just putting
05:37 - that inside of our email feedback span
05:40 - so now what should happen is we are
05:44 - using the validate email function or
05:46 - calling this with the email that we've
05:48 - picked up we are then using what we're
05:52 - calling this validate email function
05:54 - supplying an email for example Alex at
05:56 - PHP academy' de org this is then sent to
05:59 - email dot PHP with the variable name
06:02 - email and this value here would
06:04 - correspond to Alex at PHP academy' de
06:06 - org data then contains whatever email
06:09 - throws back asks for example if we echo
06:11 - something out in here we were to echo
06:14 - hello hello would then be inside of date
06:18 - this data variable here

Cleaned transcript:

and that's something else will be to check the email address again so let's click in here okay so it tells us going into a valid email address I'm gonna enter a valid email address and come away then I'm going to click back in and you can see that we don't have the same message instead what we want to do is something else and that is to check the email as well so we're gonna leave this for now I'm just going to change this text here to say check email address valid because what we want to do is if the user has entered something into here and then they click back into it we want to revalidate it it doesn't matter whether they've entered a valid or for example an invalid email address we want to revalidate it so we can tell the user again if the email address is invalid or if it's valid so now we need to create the actual function that will do that will will outline it at the top of our page and this is going to be let's just call this validate email and in that we take an email address so here's our function validate email now it's going to cool it here it's going to call this function just here so this this bit later on when we've actually filled in the block in here we'll equal or we'll call the validate email function also when we have a key up event we also want to call the validate email function as well so we've appended like we have with blur the key up function or the key up event had long to the end of here and inside we want to go ahead and create a function so in here what's going to happen is we're going to first of all retrieve the value of the in fact we don't have to read have to store this in a variable to waste memory we can go ahead and call the validate email function directly and here we want to supply an email address and the email address that we wanted to supply is the email address field so email dot Val so I've used a selector and the valve function in jQuery to grab the value of this email address field so we also want to do this here so we can just copy and paste that there so we've used this function outside of here because otherwise we would have to duplicate the code here and here to validate the email address now this function is going to deal with the Ajax request and it's going to take this email address here it's gonna feed it to a PHP page which we're going to create in just a moment and it's going to you know PHP is going to handle the validation it's then going to return the result of this and then with valid email we can return the result and then we can put that into a or we don't have to return the result from this function we can go ahead and just put this straight into our field it's probably better practice though to return the value so perhaps we'll do that instead okay so now I need to think about what what we're going to write inside of our function well we're going to use the post a jack request so I've just outlined this here it's a dollar sign a full stop post and in brackets inside brackets we're gonna give this three parameters the first one obviously there's a comma separated the first one is going to be the file we're looking for or we're submitting our data to the second in curly brackets remember this is extremely important is going to be our data and the third is a callback function which is going to hold the result returned by this page so that is function data and we can go ahead and bring that down okay so the file that we're submitting this particular data to that will eventually appear inside of our brackets is PHP /e male PHP we need to send some values so we are sending a variable called email and this is going to be the value we pick up inside PHP and the email here is the one that we want to put in here to be submitted so I've used the same variable name here and here but not to be confused this is the name of the variable that we're sending and this is the value retrieved from our function so now that we've done that it's going to submit this variable here with this value to PHP /e male PHP so the first thing to do is go ahead and create that file and we're just going to outline PHP tags and I'm going to save this inside our PHP folder as email dot PHP now that I have that we can actually run some tests before we start to validate so we can run tests to see if our owl Ajax or our jQuery is working so I'm simply going to say email feedback dots text data now remember this data here is what is what's returned from this file here so we've we've created a callback function with data as the handler or the variable that handles what's returned from this file here and then we're just putting that inside of our email feedback span so now what should happen is we are using the validate email function or calling this with the email that we've picked up we are then using what we're calling this validate email function supplying an email for example Alex at PHP academy' de org this is then sent to email dot PHP with the variable name email and this value here would correspond to Alex at PHP academy' de org data then contains whatever email throws back asks for example if we echo something out in here we were to echo hello hello would then be inside of date this data variable here
