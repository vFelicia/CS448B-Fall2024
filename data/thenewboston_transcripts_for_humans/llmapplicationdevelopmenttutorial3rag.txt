With timestamps:

00:00 - all right everybody welcome back to
00:02 - another video and in this one we are
00:04 - going to be improving ya even more so in
00:07 - the last video we improved A's ability
00:10 - to answer very simple programming
00:11 - questions but then towards the end of
00:13 - the video we started thinking about the
00:15 - product from a more realistic point of
00:18 - view now putting ourselves in the user
00:21 - shoes whenever they're on this video
00:23 - page talking to the chatbot we know that
00:26 - they're not going to be asking strictly
00:29 - simple programming related questions I
00:32 - mean it's more realistic to believe that
00:35 - they may ask questions about I don't
00:37 - know maybe some people that they saw in
00:39 - the video or maybe questions about the
00:41 - source code in the video or maybe
00:43 - they're going to be asking questions to
00:45 - a about herself like um what llm are you
00:49 - using or what's your name or what is
00:51 - your purpose who knows what the user may
00:54 - type into this chat box now in order to
00:56 - give a the ability to answer these types
00:58 - of questions we need to give her some
01:01 - more intelligence some more information
01:04 - so now what we can do is in our template
01:08 - where do we start well let's go ahead
01:10 - and open up our existing template in the
01:13 - playground and let's go ahead and ask
01:15 - one of these questions so for example
01:18 - this is a question from Ian one of the
01:20 - ones that we're going to be uh using in
01:22 - this example and in here this is a
01:24 - prompt engineering tutorial that he made
01:26 - about image
01:27 - variation now in this this let me see if
01:31 - I can get that screenshot again okay so
01:34 - that's not that's not me this is me
01:36 - right here so he used my image in this
01:40 - video and by the way this is just the uh
01:42 - the variation of
01:43 - it but anyways the point of the story is
01:47 - let's imagine that a user is on this
01:48 - video and they ask who is the dude in
01:50 - this video well right now of
01:56 - course what we're looking at is
01:58 - basically A's brain and she doesn't know
02:01 - anything about any video she doesn't
02:02 - know she's going to be embedded on the
02:04 - New Boston uh website she doesn't know
02:07 - anything except for this right here and
02:10 - what is already in the llm all that
02:13 - information so of course that's not
02:15 - going to work also if we ask something
02:17 - like what is your name uh that's not
02:20 - going to work either and I'll show you
02:23 - guys the other um examples that we're
02:25 - going to try to figure out so this is a
02:28 - C++ tutorial if someone ask what's the
02:31 - return value of this video or maybe
02:34 - someone ask in this video what's the
02:36 - name of this class or maybe someone
02:39 - asked in this video what is printed out
02:42 - in this first Loop ya just doesn't have
02:45 - that
02:45 - information so now we have to ask
02:48 - ourselves what information does a need
02:51 - in order to be able to answer these
02:52 - types of questions well the first thing
02:55 - I can think that would really help her
02:57 - out are the transcripts from these vide
02:59 - videos so all of this text again she
03:03 - can't hear the audio but what we can do
03:05 - is we can take this video get the trans
03:08 - script from it basically convert it to
03:10 - text and then feed that text into IO now
03:15 - another kind of classification of
03:17 - questions that people ask a lot are
03:19 - about the source code in the video so if
03:22 - we could also provide I with the source
03:24 - code I think that would help a lot so
03:27 - what our plan is is in addition to this
03:30 - very basic system prompt what I want to
03:32 - do is I want
03:34 - to provide a with the transcript of the
03:37 - video and we'll say the transcript is
03:39 - going to go here and then I also want to
03:42 - provide the source
03:44 - code so let's just go ahead and see if
03:48 - these two things can answer some answer
03:50 - some of these simple questions and the
03:52 - first question that we will try to
03:53 - answer is who is the dude in this video
03:56 - of course the dude is me but I'll say
03:59 - this who is the dude in this video all
04:03 - right so before we convert this into a
04:05 - prompt template and add our variables
04:07 - right here what I want to do first is I
04:10 - just want to manually stick in a
04:11 - transcript in some source code here just
04:14 - to prove that this Theory can work and
04:18 - if I do provide a with this information
04:20 - then she could potentially spit out more
04:22 - accurate answers so for the transcript
04:26 - this is actually pretty interesting so
04:29 - open AI they actually have this model
04:33 - right here whisper one and what it can
04:36 - do is you can give it an MP4 video and
04:40 - you can upload it and it can return the
04:42 - transcript of the video so I have those
04:46 - four videos that I just showed you uh
04:48 - the first one was prompt engineering
04:50 - then Bucky C++ tutorial then my Java one
04:53 - then my intermediate Java one so what
04:56 - I'm going to do in this example is I'm
04:58 - just going to give it
05:00 - this video right here and I'll show you
05:03 - the transcript that it pops back out so
05:06 - this takes about like uh I don't know 15
05:08 - seconds or so all right I think that was
05:11 - a little bit longer than 15 seconds but
05:13 - either way you can
05:14 - see what it returns is the text from the
05:18 - video and actually this is pretty good I
05:19 - went over it and uh was just
05:22 - double-checking and it's pretty dang
05:25 - accurate but either way what I want to
05:27 - do first is I just want to plop this in
05:29 - where the transcript is going to be and
05:33 - then the other thing that I want to
05:34 - paste in which isn't going to help with
05:36 - this question specifically but just to
05:39 - kind of show you guys the template I'm
05:40 - going for in this video I want to paste
05:44 - in this source code as well so the
05:47 - source code for this is in this AI
05:50 - playground repo but for now I'm just
05:53 - going to take this and inject it right
05:57 - here now another thing that I I want to
06:00 - do is I want to update my prompt and let
06:03 - me just remove this sentence right here
06:06 - uh you
06:08 - are embedded on a
06:12 - website that
06:15 - helps uh people
06:18 - program through YouTube
06:24 - videos and this way I just want to give
06:26 - a some context of like where she is
06:29 - living in the universe basically so I
06:31 - want to say you're on a website so if
06:32 - someone says like hey something about
06:35 - the website or a video she doesn't get a
06:37 - little lost so now with this extra
06:40 - information I'm going to ask again who
06:43 - is the dude in the video because I know
06:45 - for effect uh let's see if I can find it
06:49 - yeah it says uh I probably recognize
06:52 - this person as Bucky so now let me go
06:55 - ahead and send this
06:57 - request and check it out
07:00 - all right so now we can see that I was
07:03 - indeed able to give the right answer
07:06 - that it was Bucky Roberts that's me and
07:09 - that information again came from the
07:11 - transcript in the video so from here
07:14 - what I want to do is of course go ahead
07:17 - and convert this to a prompt template
07:20 - now I can kind of just save the time
07:23 - here so in actually let me just do this
07:26 - maybe easier so I'm going to copy this
07:29 - entire system prompt and then I'm going
07:31 - to make a new template and I'll say a
07:36 - video and I'll paste this in for the
07:38 - system prompt however instead of
07:40 - hardcoding this
07:42 - transcript I'm just going to first of
07:45 - all change this to Ginger
07:48 - 2 and I'll say this is going to accept a
07:52 - transcript variable which I'm going to
07:55 - be uh pasting in basically right here
07:58 - and it's also going to
08:02 - accept a source code little snippet that
08:06 - I'm going to be pasting in right there
08:08 - and the last variable that we need just
08:12 - like
08:13 - before is we need the question from the
08:16 - user now there's another thing that I'm
08:20 - thinking through that may help and that
08:23 - is
08:25 - this kind of ignore this right now you
08:29 - remember
08:31 - earlier when actually I think this was
08:33 - the first video there or the second
08:35 - video and I said um what's the problem
08:39 - with this and I said something like VAR
08:42 - equals 3 and I was hoping to get back
08:45 - the answer that it's missing the
08:46 - variable name and it needs a semicolon
08:49 - however I was a little confused because
08:52 - she didn't understand that I was asking
08:53 - it from a JavaScript perspective she got
08:56 - confused and thought that I was writing
08:58 - python which admitted this does look
09:00 - more like python than JavaScript but
09:02 - either way I think another good thing to
09:05 - help clear up some of that confusion is
09:07 - if we pass in the topic of these videos
09:11 - to let her know hey we're talking about
09:13 - C++ or hey we're talking about a Java
09:16 - tutorial I just think that would be um
09:19 - better to give her more context or
09:21 - understanding of the problem so with
09:24 - that I will say
09:28 - this video
09:31 - topic and let's just call it video
09:36 - topic all right so now whenever I use
09:39 - this prompt template I'm going to have
09:40 - to give it four V variables the topic of
09:43 - the video the
09:45 - transcript the source code from the
09:47 - video and then of course the question
09:49 - which is going to come from the user of
09:51 - whatever the question is now the last
09:53 - thing I want to do is I just want to go
09:55 - ahead and set the parameters for this
09:58 - which you guys understood why I'm doing
10:00 - that from the last video and now I just
10:02 - want to save this so now we have this
10:05 - new prompt template now how do we test
10:09 - it well you guys already know this as
10:11 - well and also what I did before this
10:14 - video is I already made up this test
10:16 - right here and I also see that I named
10:18 - it topic instead of video topic so what
10:21 - I'm going to
10:22 - do is just edit my template real quick
10:26 - to rename this topic just so I can keep
10:29 - everything
10:32 - consistent okay so I'll go ahead and
10:36 - quickly talk about um these again there
10:38 - are only well how many questions do I
10:40 - have four different questions so the
10:43 - first one like I said is who is the
10:45 - person in this video this prompt
10:47 - engineering video and the answer should
10:49 - indeed be Bucky Roberts the second
10:52 - question I'm going to test a on is what
10:54 - is the return value of the main function
10:57 - from this video and this main function
10:59 - returns zero so that's why it's
11:02 - zero now in this one the Java
11:05 - programming video I said what is the
11:07 - name of the class in this video so the
11:10 - name of the class is indeed apples it's
11:12 - the only class in the video and for the
11:15 - last question I just say what words
11:17 - print out in the first Loop for the
11:19 - intermediate Java tutorial and this
11:21 - first Loop it prints out all the words
11:23 - that start with Fu so Funk and furry is
11:28 - the right answer
11:29 - so Funk and furry so now that we
11:34 - understand the basic test that we're
11:35 - going to use what I can do is I'm just
11:37 - going to go ahead and download that to a
11:40 - CSV and again this was called video
11:43 - specific questions so now I'm going to
11:46 - go ahead and create a new
11:48 - evaluation and I'll just name it
11:51 - video specific
11:54 - questions and now for the data set I'm
11:56 - just going to upload that data set that
11:58 - we you're just taking a look at video
12:01 - specific questions and for the name I'll
12:03 - just name it video specific questions
12:05 - data set nothing too fancy here and this
12:08 - is the data set that I want to use with
12:10 - these four questions so now I'm going to
12:13 - go ahead and select my data set and I'm
12:15 - going to go ahead and create my
12:18 - pipeline so now what I want to do is
12:22 - this I'm going to add another step and
12:26 - I'm going to be evaluating that prompt
12:27 - template that we just created
12:30 - and for this I'll just name it the llm
12:33 - response as well and for the prompt
12:35 - template we're actually going to be
12:36 - using that new one called I of video
12:39 - we'll just use the latest
12:40 - version and now here I just need to plug
12:43 - up basically all of these columns to say
12:47 - which template variables are they going
12:49 - to be connected to so the question is
12:51 - the question this is why I like naming
12:53 - my um column names the same as the
12:56 - variable name and the template because
12:58 - when you're evalua it's a piece of cake
13:00 - to kind of hook everything up the source
13:02 - code is going to go here and the topic
13:04 - is going to go there and there you go
13:07 - and since we already configured this
13:09 - prompt template to use I can show
13:13 - you University I of video it is already
13:17 - configured to use open AI 3.5 turbo
13:20 - that's why it's already spitting out
13:22 - these
13:23 - answers and there you go you can now see
13:27 - that with this extra context with this
13:29 - added information a is now able to
13:31 - answer this whole other slew of problems
13:34 - that she was unable to before so very
13:36 - cool and in fact just to kind of uh walk
13:41 - you guys through this architecture this
13:43 - is actually called a rag architecture
13:46 - what it basically means is before you
13:48 - send your prompt to the llm you're going
13:51 - to inject some additional information
13:53 - into it so to show you guys a more
13:56 - realistic example of how this would work
13:59 - in the real world what would happen is
14:01 - ya is going to be living on my server
14:04 - that's running the new boston.com and of
14:07 - course all of this data is going to be
14:09 - in some um
14:11 - database whether it's a thirdparty
14:13 - service or API basically this app needs
14:16 - to reach out to somewhere else to grab
14:18 - this extra data so let's just say that
14:21 - for the sake of Simplicity that the
14:23 - source code in all the transcripts for
14:25 - my video were just stored in my own
14:27 - database for the New Boston
14:30 - so what happens is whenever this
14:32 - question comes in is what is the name of
14:35 - the class in the video my app or a is
14:38 - basically going to say okay what video
14:41 - page are you on oh I see you're on Java
14:44 - 7 video or whatever so I'm going to go
14:46 - ahead and get the transcript for this
14:49 - video in the source code I'm going to
14:51 - inject it into those that prompt
14:54 - template where those two variables are
14:56 - as well as the topic of the video and
14:58 - then I'm going to send this this to the
14:59 - llm now the reason that this is called
15:01 - rag I really don't like the name of it
15:04 - but it stands for I believe retrieval
15:07 - augmented generation basically means
15:10 - you're retrieving some data you're
15:12 - augmenting or changing the prompt by
15:15 - adding it to it and then you're
15:17 - generating the response so retrieving
15:20 - data adding or augmenting and then
15:23 - generating the response now the reason I
15:26 - wanted to take some time and talk about
15:27 - this architecture specifically
15:29 - isn't because you know I didn't think
15:31 - you guys could figure out how to pull
15:33 - data from a database and inject it in
15:34 - your prom template but more so to focus
15:38 - on how we are evaluating this prom
15:41 - template because the way we evaluate it
15:44 - in the way we are going to use this in
15:45 - the real world are slightly different
15:47 - and there's a reason for this so we see
15:50 - here the real world usage is going to
15:53 - involve making an API call or basically
15:57 - doing something extra with some third
15:58 - party service to grab this information
16:02 - now in our evaluation we aren't doing
16:05 - that what we're doing is we're just
16:07 - taking the response data from whatever
16:10 - that API call would be and just
16:12 - hardcoding it into our data set right
16:14 - here now believe it or not I'll actually
16:17 - show you this cool feature with prom
16:20 - player so we don't have to do it this
16:24 - way in fact what we can do is we can
16:26 - make a custom API endpoint and whenever
16:30 - we give it a custom URL then what's
16:33 - going to happen is it's going to take
16:34 - all this data and throw it into that URL
16:37 - and we can basically structure a custom
16:41 - API endpoint to set it up and respond
16:46 - just like we would with our production
16:48 - data so it sounds like that may be kind
16:52 - of a better method for testing right
16:54 - like we want our test to simulate the
16:56 - production environment as much as we can
16:59 - so why don't we go with this method
17:02 - instead of hardcoding everything well
17:05 - there are pros and cons to each for one
17:08 - if we were to use I keep closing this
17:11 - thing and popping it back open but if we
17:13 - were to use the actual API service then
17:17 - for one thing it's going to be slower
17:20 - because instead of just reading the data
17:21 - from here we have to actually make some
17:23 - API call and get that data back another
17:26 - thing is that it's not going to be
17:29 - consistent so for example if our API
17:32 - ever changes and we say hey give me the
17:35 - transcript for this video one day and
17:37 - the next day we make a call and get
17:38 - different data back then our data set or
17:41 - our test is going to be changing so then
17:43 - the prompt template that we're testing
17:46 - it's not going to be giving consistent
17:48 - results because you're pretty much at
17:49 - the whim of whatever the API is
17:52 - returning and the last one is just error
17:55 - prone because if this service is ever
17:57 - down that means means that we can't
17:59 - evaluate our prompt template and we
18:02 - pretty much uh can't prove it anymore so
18:05 - of course those are the downsides of
18:07 - using this however it does have some
18:09 - benefits as well first of all if you're
18:12 - using the same response data for
18:15 - example if you have a test where you're
18:20 - testing on this one specific video and
18:22 - you're using this exact same transcript
18:24 - every time well instead of having that
18:26 - data in this cell in this cell in this
18:29 - cell well it will help minimize your
18:32 - data set because you know you basically
18:34 - don't have to store this you're just
18:35 - making a call for it and the other thing
18:38 - that it helps with is maintenance so for
18:41 - example let's say that you transcribed
18:43 - this video and this was the wrong
18:45 - transcript let's say there's just um I
18:48 - don't know it gave you an inaccurate
18:50 - transcript and then you're using that
18:52 - transcript in a bunch of other cells
18:54 - right here well if you updated the API
18:58 - to fix the results and it changed to
19:01 - give you those correct results you
19:02 - either one have to update this location
19:05 - this location this location everywhere
19:07 - you have it versus if you were just
19:09 - making an API call you would then get
19:11 - those correct results back so there's a
19:14 - lot of different trade-offs on how you
19:16 - evaluate a prompt template using rag
19:18 - data properly there's no right or wrong
19:21 - method just understand that there are
19:23 - trade-offs between either one now the
19:25 - very last thing I'm going to do before I
19:26 - let you guys go for this video is I'm
19:29 - actually going to do this for myself
19:30 - because I'm pretty lazy so what I want
19:33 - to do is I want to add another column
19:36 - here to basically be the same thing as
19:38 - that score column as before however like
19:41 - I said I'm lazy and I don't feel like
19:44 - going through each of these every time
19:46 - and doing zero Z one zero I mean I got
19:50 - stuff to do so I wish there was a better
19:55 - method well I already have the answer
19:57 - right here so I I know what the correct
19:59 - answers are however the problem with
20:03 - that is I just can't do something like a
20:05 - a quality comparison because the llm May
20:09 - respond with something that doesn't
20:13 - quite match this exact answer but it's
20:15 - still correct for example in here the
20:17 - llm responded with the question who is
20:20 - the person in the image with the person
20:23 - in the image is Bucky Roberts he is yada
20:25 - yada for educational content now I also
20:28 - would have accepted the person in the
20:30 - image is Bucky Roberts also it could
20:32 - have just said Bucky Roberts it could
20:34 - phrase it in a bunch of different ways
20:37 - and we just need to know is this the
20:39 - correct answer even though it may not be
20:41 - an exact match to this so what can we do
20:44 - for that well what we can do is hop back
20:47 - in here and we can create a new prompt
20:50 - template in general and I will say that
20:54 - this is called um a uh answer to to
21:00 - booing and in the system system prompt
21:03 - what I'm going to say is um you are an
21:08 - AI
21:10 - um assessment tool your job is to
21:16 - judge whether or not an answer is
21:22 - correct and I will say that um your
21:27 - response should be one word
21:31 - only true or
21:35 - false and then after this what I'm going
21:38 - to do is I'm first going to give it the
21:40 - original
21:43 - question and let make sure I Chang this
21:45 - to a ging 2
21:48 - template and then after this in addition
21:51 - to giving a the question I'm going to
21:54 - say that this is
21:57 - the
22:01 - this is the provided answer and I'll
22:06 - say provide an
22:08 - answer and then I'll have another one
22:11 - for actual
22:14 - answer and I actually just want to
22:16 - change the order of
22:19 - these and the reason that I'm going to
22:21 - change the order of these is just
22:23 - because in my report I'm going to have
22:26 - the question as one of the earliest
22:28 - columns and then the actual answer is
22:29 - like the middle one and the provider one
22:31 - is going to be last just for uh like
22:33 - organization
22:35 - purposes so actually let me take
22:39 - this and I'll actually throw it into the
22:42 - user message right
22:44 - here all right so the last thing I want
22:46 - to do is I just want to set these
22:48 - parameters so I don't have to adjust the
22:51 - prompt template or excuse me the engine
22:52 - settings in the report and now let me go
22:55 - ahead and create this
22:57 - template
22:59 - beautiful so now that I have this prompt
23:03 - template that we're going to be able to
23:04 - feed in a question the provided answer
23:07 - and the actual answer and get back a
23:10 - Boolean now what we can do is use this
23:13 - instead of me to grade these answers so
23:17 - let me pop this open in a new
23:20 - tab and now in my video specific
23:23 - questions evaluation I'm going to add
23:26 - another step and this is going to be the
23:28 - prompt template that we just created so
23:30 - prompt template and I'll just say
23:35 - um uh uh assessment or I'll say
23:41 - booing now let's do assessment okay and
23:45 - then for this it is I answer to Boolean
23:48 - just use the latest version and now the
23:51 - actual answer is going to come from A's
23:53 - llm response this is how a responds now
23:57 - the question is just this original
24:00 - question actually let me change this
24:03 - around I got a little confused okay so
24:06 - the provided
24:08 - answer is going to be I response and the
24:11 - actual answer is going to come from the
24:13 - data set yeah I got this right so this
24:16 - is the question this is the actual
24:19 - answer and the provided answer is going
24:21 - to come from a she has to figure that
24:23 - out on her own so that's going to be the
24:24 - llm response so now let me go ahead and
24:27 - run this step
24:28 - and then we can see if my prompt
24:30 - template can assess these answers so is
24:33 - this answer acceptable for this and
24:36 - already it says no and this is not
24:39 - correct so let's go ahead and actually
24:42 - do this um we can do a little prompt
24:45 - engineering to fix this so I'm going to
24:47 - go ahead and run this full batch and
24:50 - give us some time and let's inspect the
24:52 - results of this so the first thing I was
24:55 - going to do is answer all these
24:57 - questions to the best of her ability and
25:00 - then what she's going to do is she's
25:02 - going to try to assess is this answer an
25:06 - acceptable answer given that this is the
25:08 - real answer now the first one she
25:11 - actually got it wrong she said that even
25:13 - though she got the question right the
25:14 - person in the image is Bucky Roberts um
25:17 - she says that no this is not a suitable
25:19 - answer for this answer which is Bucky
25:21 - Roberts and not true same thing with
25:24 - this the answer we were looking for is
25:26 - Apples she said the name of the class
25:29 - from the video is Apples but then when
25:31 - she assessed her answer to see if it was
25:34 - right or not she said no that's not the
25:36 - right answer I don't know why that's so
25:38 - funny to me but there are a couple
25:40 - things right now that I'm noticing now
25:43 - the very first thing is that I response
25:46 - to these they're just a bit wordy like
25:49 - I'm just looking for Bucky Roberts I
25:51 - don't need all this extra fluff I don't
25:52 - need all these extra sentences like just
25:54 - give me the answer in the shortest way
25:56 - you know how another thing is that these
25:58 - look like they're just wrong um even
26:01 - though this is a little bit wordy I
26:03 - should still be able to figure out that
26:04 - this is the right answer so I'm actually
26:07 - going to make two adjustments here the
26:09 - first one is to this template and the
26:11 - other one is to this template so first
26:13 - let's try to cut down on A's
26:16 - wordiness so in here University template
26:21 - uh this is a video I'm going to edit
26:24 - this and I'm going to say answer in as
26:30 - few words as
26:33 - possible okay now I'm going to update
26:36 - this and even though this is updated I
26:39 - don't want to run the evaluation again
26:41 - because I want to make a change to that
26:43 - assessment prom template before so I'm
26:45 - just going to go ahead and save this
26:47 - without kicking off the other uh
26:49 - evaluation or test and now the other
26:52 - change I wanted to make was this right
26:54 - here so this looks like it structured
26:58 - all right the only other thing that I
27:00 - want to change right here is I want to
27:02 - upgrade
27:03 - this from 3.5 turbo and I'll use four
27:08 - basically just a smarter uh model and
27:11 - now I'm going to update this and now
27:13 - after I do then this entire evaluation
27:16 - is like I'm good so those were all the
27:20 - changes I want to make now after this
27:22 - just go ahead and run this evaluation
27:23 - again which were my video specific
27:26 - questions going to confirm that and when
27:28 - I do we can go to the latest version
27:31 - which now has gp4 enabled and we can see
27:35 - if I does any
27:36 - better so the first thing I'm curious
27:39 - about okay so this change is good
27:41 - instead of you know all the extra text
27:44 - it looks like these are a lot shorter
27:47 - answers and yes look at this not only is
27:52 - A's response getting better more
27:55 - accurate less fluff but also her ability
27:58 - to assess these answers is getting
28:01 - better as well and this is pretty cool
28:03 - because half of these were pretty easy
28:06 - she got the exact same answer but half
28:09 - of these are different than the answer
28:11 - like the ideal answer this one says the
28:14 - person is Bucky Roberts or the person in
28:17 - the image rather than just the name and
28:19 - this one has quotes around the words and
28:22 - still she said true so yeah a lot of um
28:26 - information there I think this tutorial
28:28 - was a little bit longer than anticipated
28:31 - but that is pretty much how you would
28:33 - evaluate a prompt template using rag
28:36 - data and also having a prompt template
28:39 - assessment to save you a lot of clicking
28:42 - and manual assessing as well so I don't
28:45 - know what we're going to be doing in the
28:46 - next video but um I mean I is getting
28:49 - smarter and yeah I'm pretty excited
28:52 - looking forward to the next video so
28:53 - I'll see you guys then

Cleaned transcript:

all right everybody welcome back to another video and in this one we are going to be improving ya even more so in the last video we improved A's ability to answer very simple programming questions but then towards the end of the video we started thinking about the product from a more realistic point of view now putting ourselves in the user shoes whenever they're on this video page talking to the chatbot we know that they're not going to be asking strictly simple programming related questions I mean it's more realistic to believe that they may ask questions about I don't know maybe some people that they saw in the video or maybe questions about the source code in the video or maybe they're going to be asking questions to a about herself like um what llm are you using or what's your name or what is your purpose who knows what the user may type into this chat box now in order to give a the ability to answer these types of questions we need to give her some more intelligence some more information so now what we can do is in our template where do we start well let's go ahead and open up our existing template in the playground and let's go ahead and ask one of these questions so for example this is a question from Ian one of the ones that we're going to be uh using in this example and in here this is a prompt engineering tutorial that he made about image variation now in this this let me see if I can get that screenshot again okay so that's not that's not me this is me right here so he used my image in this video and by the way this is just the uh the variation of it but anyways the point of the story is let's imagine that a user is on this video and they ask who is the dude in this video well right now of course what we're looking at is basically A's brain and she doesn't know anything about any video she doesn't know she's going to be embedded on the New Boston uh website she doesn't know anything except for this right here and what is already in the llm all that information so of course that's not going to work also if we ask something like what is your name uh that's not going to work either and I'll show you guys the other um examples that we're going to try to figure out so this is a C++ tutorial if someone ask what's the return value of this video or maybe someone ask in this video what's the name of this class or maybe someone asked in this video what is printed out in this first Loop ya just doesn't have that information so now we have to ask ourselves what information does a need in order to be able to answer these types of questions well the first thing I can think that would really help her out are the transcripts from these vide videos so all of this text again she can't hear the audio but what we can do is we can take this video get the trans script from it basically convert it to text and then feed that text into IO now another kind of classification of questions that people ask a lot are about the source code in the video so if we could also provide I with the source code I think that would help a lot so what our plan is is in addition to this very basic system prompt what I want to do is I want to provide a with the transcript of the video and we'll say the transcript is going to go here and then I also want to provide the source code so let's just go ahead and see if these two things can answer some answer some of these simple questions and the first question that we will try to answer is who is the dude in this video of course the dude is me but I'll say this who is the dude in this video all right so before we convert this into a prompt template and add our variables right here what I want to do first is I just want to manually stick in a transcript in some source code here just to prove that this Theory can work and if I do provide a with this information then she could potentially spit out more accurate answers so for the transcript this is actually pretty interesting so open AI they actually have this model right here whisper one and what it can do is you can give it an MP4 video and you can upload it and it can return the transcript of the video so I have those four videos that I just showed you uh the first one was prompt engineering then Bucky C++ tutorial then my Java one then my intermediate Java one so what I'm going to do in this example is I'm just going to give it this video right here and I'll show you the transcript that it pops back out so this takes about like uh I don't know 15 seconds or so all right I think that was a little bit longer than 15 seconds but either way you can see what it returns is the text from the video and actually this is pretty good I went over it and uh was just doublechecking and it's pretty dang accurate but either way what I want to do first is I just want to plop this in where the transcript is going to be and then the other thing that I want to paste in which isn't going to help with this question specifically but just to kind of show you guys the template I'm going for in this video I want to paste in this source code as well so the source code for this is in this AI playground repo but for now I'm just going to take this and inject it right here now another thing that I I want to do is I want to update my prompt and let me just remove this sentence right here uh you are embedded on a website that helps uh people program through YouTube videos and this way I just want to give a some context of like where she is living in the universe basically so I want to say you're on a website so if someone says like hey something about the website or a video she doesn't get a little lost so now with this extra information I'm going to ask again who is the dude in the video because I know for effect uh let's see if I can find it yeah it says uh I probably recognize this person as Bucky so now let me go ahead and send this request and check it out all right so now we can see that I was indeed able to give the right answer that it was Bucky Roberts that's me and that information again came from the transcript in the video so from here what I want to do is of course go ahead and convert this to a prompt template now I can kind of just save the time here so in actually let me just do this maybe easier so I'm going to copy this entire system prompt and then I'm going to make a new template and I'll say a video and I'll paste this in for the system prompt however instead of hardcoding this transcript I'm just going to first of all change this to Ginger 2 and I'll say this is going to accept a transcript variable which I'm going to be uh pasting in basically right here and it's also going to accept a source code little snippet that I'm going to be pasting in right there and the last variable that we need just like before is we need the question from the user now there's another thing that I'm thinking through that may help and that is this kind of ignore this right now you remember earlier when actually I think this was the first video there or the second video and I said um what's the problem with this and I said something like VAR equals 3 and I was hoping to get back the answer that it's missing the variable name and it needs a semicolon however I was a little confused because she didn't understand that I was asking it from a JavaScript perspective she got confused and thought that I was writing python which admitted this does look more like python than JavaScript but either way I think another good thing to help clear up some of that confusion is if we pass in the topic of these videos to let her know hey we're talking about C++ or hey we're talking about a Java tutorial I just think that would be um better to give her more context or understanding of the problem so with that I will say this video topic and let's just call it video topic all right so now whenever I use this prompt template I'm going to have to give it four V variables the topic of the video the transcript the source code from the video and then of course the question which is going to come from the user of whatever the question is now the last thing I want to do is I just want to go ahead and set the parameters for this which you guys understood why I'm doing that from the last video and now I just want to save this so now we have this new prompt template now how do we test it well you guys already know this as well and also what I did before this video is I already made up this test right here and I also see that I named it topic instead of video topic so what I'm going to do is just edit my template real quick to rename this topic just so I can keep everything consistent okay so I'll go ahead and quickly talk about um these again there are only well how many questions do I have four different questions so the first one like I said is who is the person in this video this prompt engineering video and the answer should indeed be Bucky Roberts the second question I'm going to test a on is what is the return value of the main function from this video and this main function returns zero so that's why it's zero now in this one the Java programming video I said what is the name of the class in this video so the name of the class is indeed apples it's the only class in the video and for the last question I just say what words print out in the first Loop for the intermediate Java tutorial and this first Loop it prints out all the words that start with Fu so Funk and furry is the right answer so Funk and furry so now that we understand the basic test that we're going to use what I can do is I'm just going to go ahead and download that to a CSV and again this was called video specific questions so now I'm going to go ahead and create a new evaluation and I'll just name it video specific questions and now for the data set I'm just going to upload that data set that we you're just taking a look at video specific questions and for the name I'll just name it video specific questions data set nothing too fancy here and this is the data set that I want to use with these four questions so now I'm going to go ahead and select my data set and I'm going to go ahead and create my pipeline so now what I want to do is this I'm going to add another step and I'm going to be evaluating that prompt template that we just created and for this I'll just name it the llm response as well and for the prompt template we're actually going to be using that new one called I of video we'll just use the latest version and now here I just need to plug up basically all of these columns to say which template variables are they going to be connected to so the question is the question this is why I like naming my um column names the same as the variable name and the template because when you're evalua it's a piece of cake to kind of hook everything up the source code is going to go here and the topic is going to go there and there you go and since we already configured this prompt template to use I can show you University I of video it is already configured to use open AI 3.5 turbo that's why it's already spitting out these answers and there you go you can now see that with this extra context with this added information a is now able to answer this whole other slew of problems that she was unable to before so very cool and in fact just to kind of uh walk you guys through this architecture this is actually called a rag architecture what it basically means is before you send your prompt to the llm you're going to inject some additional information into it so to show you guys a more realistic example of how this would work in the real world what would happen is ya is going to be living on my server that's running the new boston.com and of course all of this data is going to be in some um database whether it's a thirdparty service or API basically this app needs to reach out to somewhere else to grab this extra data so let's just say that for the sake of Simplicity that the source code in all the transcripts for my video were just stored in my own database for the New Boston so what happens is whenever this question comes in is what is the name of the class in the video my app or a is basically going to say okay what video page are you on oh I see you're on Java 7 video or whatever so I'm going to go ahead and get the transcript for this video in the source code I'm going to inject it into those that prompt template where those two variables are as well as the topic of the video and then I'm going to send this this to the llm now the reason that this is called rag I really don't like the name of it but it stands for I believe retrieval augmented generation basically means you're retrieving some data you're augmenting or changing the prompt by adding it to it and then you're generating the response so retrieving data adding or augmenting and then generating the response now the reason I wanted to take some time and talk about this architecture specifically isn't because you know I didn't think you guys could figure out how to pull data from a database and inject it in your prom template but more so to focus on how we are evaluating this prom template because the way we evaluate it in the way we are going to use this in the real world are slightly different and there's a reason for this so we see here the real world usage is going to involve making an API call or basically doing something extra with some third party service to grab this information now in our evaluation we aren't doing that what we're doing is we're just taking the response data from whatever that API call would be and just hardcoding it into our data set right here now believe it or not I'll actually show you this cool feature with prom player so we don't have to do it this way in fact what we can do is we can make a custom API endpoint and whenever we give it a custom URL then what's going to happen is it's going to take all this data and throw it into that URL and we can basically structure a custom API endpoint to set it up and respond just like we would with our production data so it sounds like that may be kind of a better method for testing right like we want our test to simulate the production environment as much as we can so why don't we go with this method instead of hardcoding everything well there are pros and cons to each for one if we were to use I keep closing this thing and popping it back open but if we were to use the actual API service then for one thing it's going to be slower because instead of just reading the data from here we have to actually make some API call and get that data back another thing is that it's not going to be consistent so for example if our API ever changes and we say hey give me the transcript for this video one day and the next day we make a call and get different data back then our data set or our test is going to be changing so then the prompt template that we're testing it's not going to be giving consistent results because you're pretty much at the whim of whatever the API is returning and the last one is just error prone because if this service is ever down that means means that we can't evaluate our prompt template and we pretty much uh can't prove it anymore so of course those are the downsides of using this however it does have some benefits as well first of all if you're using the same response data for example if you have a test where you're testing on this one specific video and you're using this exact same transcript every time well instead of having that data in this cell in this cell in this cell well it will help minimize your data set because you know you basically don't have to store this you're just making a call for it and the other thing that it helps with is maintenance so for example let's say that you transcribed this video and this was the wrong transcript let's say there's just um I don't know it gave you an inaccurate transcript and then you're using that transcript in a bunch of other cells right here well if you updated the API to fix the results and it changed to give you those correct results you either one have to update this location this location this location everywhere you have it versus if you were just making an API call you would then get those correct results back so there's a lot of different tradeoffs on how you evaluate a prompt template using rag data properly there's no right or wrong method just understand that there are tradeoffs between either one now the very last thing I'm going to do before I let you guys go for this video is I'm actually going to do this for myself because I'm pretty lazy so what I want to do is I want to add another column here to basically be the same thing as that score column as before however like I said I'm lazy and I don't feel like going through each of these every time and doing zero Z one zero I mean I got stuff to do so I wish there was a better method well I already have the answer right here so I I know what the correct answers are however the problem with that is I just can't do something like a a quality comparison because the llm May respond with something that doesn't quite match this exact answer but it's still correct for example in here the llm responded with the question who is the person in the image with the person in the image is Bucky Roberts he is yada yada for educational content now I also would have accepted the person in the image is Bucky Roberts also it could have just said Bucky Roberts it could phrase it in a bunch of different ways and we just need to know is this the correct answer even though it may not be an exact match to this so what can we do for that well what we can do is hop back in here and we can create a new prompt template in general and I will say that this is called um a uh answer to to booing and in the system system prompt what I'm going to say is um you are an AI um assessment tool your job is to judge whether or not an answer is correct and I will say that um your response should be one word only true or false and then after this what I'm going to do is I'm first going to give it the original question and let make sure I Chang this to a ging 2 template and then after this in addition to giving a the question I'm going to say that this is the this is the provided answer and I'll say provide an answer and then I'll have another one for actual answer and I actually just want to change the order of these and the reason that I'm going to change the order of these is just because in my report I'm going to have the question as one of the earliest columns and then the actual answer is like the middle one and the provider one is going to be last just for uh like organization purposes so actually let me take this and I'll actually throw it into the user message right here all right so the last thing I want to do is I just want to set these parameters so I don't have to adjust the prompt template or excuse me the engine settings in the report and now let me go ahead and create this template beautiful so now that I have this prompt template that we're going to be able to feed in a question the provided answer and the actual answer and get back a Boolean now what we can do is use this instead of me to grade these answers so let me pop this open in a new tab and now in my video specific questions evaluation I'm going to add another step and this is going to be the prompt template that we just created so prompt template and I'll just say um uh uh assessment or I'll say booing now let's do assessment okay and then for this it is I answer to Boolean just use the latest version and now the actual answer is going to come from A's llm response this is how a responds now the question is just this original question actually let me change this around I got a little confused okay so the provided answer is going to be I response and the actual answer is going to come from the data set yeah I got this right so this is the question this is the actual answer and the provided answer is going to come from a she has to figure that out on her own so that's going to be the llm response so now let me go ahead and run this step and then we can see if my prompt template can assess these answers so is this answer acceptable for this and already it says no and this is not correct so let's go ahead and actually do this um we can do a little prompt engineering to fix this so I'm going to go ahead and run this full batch and give us some time and let's inspect the results of this so the first thing I was going to do is answer all these questions to the best of her ability and then what she's going to do is she's going to try to assess is this answer an acceptable answer given that this is the real answer now the first one she actually got it wrong she said that even though she got the question right the person in the image is Bucky Roberts um she says that no this is not a suitable answer for this answer which is Bucky Roberts and not true same thing with this the answer we were looking for is Apples she said the name of the class from the video is Apples but then when she assessed her answer to see if it was right or not she said no that's not the right answer I don't know why that's so funny to me but there are a couple things right now that I'm noticing now the very first thing is that I response to these they're just a bit wordy like I'm just looking for Bucky Roberts I don't need all this extra fluff I don't need all these extra sentences like just give me the answer in the shortest way you know how another thing is that these look like they're just wrong um even though this is a little bit wordy I should still be able to figure out that this is the right answer so I'm actually going to make two adjustments here the first one is to this template and the other one is to this template so first let's try to cut down on A's wordiness so in here University template uh this is a video I'm going to edit this and I'm going to say answer in as few words as possible okay now I'm going to update this and even though this is updated I don't want to run the evaluation again because I want to make a change to that assessment prom template before so I'm just going to go ahead and save this without kicking off the other uh evaluation or test and now the other change I wanted to make was this right here so this looks like it structured all right the only other thing that I want to change right here is I want to upgrade this from 3.5 turbo and I'll use four basically just a smarter uh model and now I'm going to update this and now after I do then this entire evaluation is like I'm good so those were all the changes I want to make now after this just go ahead and run this evaluation again which were my video specific questions going to confirm that and when I do we can go to the latest version which now has gp4 enabled and we can see if I does any better so the first thing I'm curious about okay so this change is good instead of you know all the extra text it looks like these are a lot shorter answers and yes look at this not only is A's response getting better more accurate less fluff but also her ability to assess these answers is getting better as well and this is pretty cool because half of these were pretty easy she got the exact same answer but half of these are different than the answer like the ideal answer this one says the person is Bucky Roberts or the person in the image rather than just the name and this one has quotes around the words and still she said true so yeah a lot of um information there I think this tutorial was a little bit longer than anticipated but that is pretty much how you would evaluate a prompt template using rag data and also having a prompt template assessment to save you a lot of clicking and manual assessing as well so I don't know what we're going to be doing in the next video but um I mean I is getting smarter and yeah I'm pretty excited looking forward to the next video so I'll see you guys then
