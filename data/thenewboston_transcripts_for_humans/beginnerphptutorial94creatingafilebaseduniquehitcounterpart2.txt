With timestamps:

00:00 - so we don't actually want to echo out
00:02 - the IP addresses we just want to use
00:03 - them inside here so I'm going to create
00:06 - a variable called IP single and that's
00:12 - equal to each one so we can use this
00:15 - variable to check whether the user's IP
00:19 - address which is up here corresponds to
00:21 - one already in here so we can say if we
00:25 - can say if IP address is equal to so
00:30 - using a double equals comparison
00:32 - operator is equal to IP single do
00:37 - something otherwise do something else
00:39 - now in actual fact we don't need this
00:42 - if-else statement we just need an if
00:44 - statement because if the if the IP
00:47 - address is in there actually let's think
00:50 - about this logically if the IP address
00:52 - is in there we don't want to record the
00:55 - IP so what we can say is if IP address
01:00 - doesn't equal IP single so essentially
01:05 - what we're doing is we're looping
01:06 - through this IP dot txt file we're
01:09 - checking of the user's IP addresses -
01:11 - this is equal to this one first and then
01:13 - we're checking if it's equal to this one
01:15 - now if it is equal to this one or if
01:18 - it's not equal rather we're going to say
01:21 - found equals false otherwise we're going
01:27 - to say
01:30 - come back up here found equals true and
01:34 - the reason we do this is because we're
01:35 - in a loop here we don't to increment the
01:39 - value of the count dot txt file
01:42 - inside a loop because if we increment
01:44 - the value of something in a loop is
01:46 - going to be performed over and over and
01:48 - over again so we want to create a
01:50 - boolean value could found which is going
01:52 - to be equal to either true or false
01:54 - then what we can do is under this for
01:57 - each under this for each here we can
02:01 - then say if found equals false and in
02:07 - here what we can do is increment count
02:11 - txt value so let's just test this first
02:16 - of all we can echo here IP not found and
02:20 - in the case of the IP address not being
02:22 - found we can increment the value of
02:25 - count so let's just test this works
02:27 - refresh IP not found oh it should have
02:31 - been okay so I think the problem here is
02:37 - that we've declared this outside our
02:39 - function so we need to do is if we pop
02:41 - this inside of our function just in
02:45 - there and we refresh Oh No okay so let's
02:52 - try and determine the problem with this
02:53 - let's echo this up first of all and
02:56 - refresh so let's have a look inside our
03:00 - IP dot txt that's on the first line
03:03 - there so we'll go through and debug this
03:05 - carefully probably just something that
03:07 - I've completely missed echo that out
03:14 - and that's one to 7.1.1 so if that is
03:20 - equal to my IP IP address underscore
03:25 - address doesn't equal IP single found
03:29 - equals false found it was true oh okay I
03:34 - understand
03:35 - so if it is found we need to say if it's
03:39 - not found we need to say found equals I
03:41 - get false otherwise found equals true
03:45 - and we need to say it found equals true
03:49 - and we run this it means our IP address
03:55 - has been found however if I was to
03:57 - remove this IP address we can keep this
04:00 - one and refresh no no okay
04:05 - hold on let's take another look at this
04:06 - let's put that back in there so this is
04:10 - probably great I've made a mistake you
04:12 - can follow me and see what I've done
04:14 - wrong so if IP address doesn't equal IP
04:17 - single found equals false
04:21 - if found equals false is equal to false
04:27 - right okay I think I've sort of worked
04:30 - out the problem now I'll tell you why
04:34 - this isn't working first of all how to
04:36 - have had a little look at it and I've
04:40 - and I've sort of worked out what's wrong
04:42 - so what's happening is is where because
04:45 - we're looping through every IP address
04:47 - first of all we're going to set the
04:49 - boolean found found the variable found
04:53 - which is a boolean to true and then what
04:57 - we're going to do is yeah so okay so I P
05:03 - address doesn't equal IP single let's
05:05 - change this to equals equals and we'll
05:08 - change this around so it's just easier
05:10 - to grasp so if the IP address in the
05:13 - file does equal the IP address of the
05:16 - user then found equals true so therefore
05:20 - if found equals true we want to say
05:25 - already or will just say fountain for
05:31 - now so otherwise once say folks however
05:35 - when we go through again it's going to
05:37 - check the second one and put this to
05:39 - false automatically we're not keeping
05:41 - the same value of found therefore
05:43 - underneath each one of these we want to
05:45 - use break so we're only finding the IP
05:49 - address and then breaking in fact we can
05:53 - say folks keep that as folks that's
05:56 - absolutely fine so now if we were to
05:59 - refresh it says found because it's found
06:03 - within here so all break is doing is if
06:06 - it is found we don't need any more
06:08 - information so we're breaking out of
06:10 - this current loop it's for each here
06:12 - okay so obviously if we were to put a
06:15 - break here and it wasn't found would
06:16 - break out straight away we want to keep
06:18 - going through the file until it's found
06:20 - so logically looking at this I was
06:22 - confused and you may be at this stage
06:24 - but just have a good look and try and
06:26 - understand why we break out

Cleaned transcript:

so we don't actually want to echo out the IP addresses we just want to use them inside here so I'm going to create a variable called IP single and that's equal to each one so we can use this variable to check whether the user's IP address which is up here corresponds to one already in here so we can say if we can say if IP address is equal to so using a double equals comparison operator is equal to IP single do something otherwise do something else now in actual fact we don't need this ifelse statement we just need an if statement because if the if the IP address is in there actually let's think about this logically if the IP address is in there we don't want to record the IP so what we can say is if IP address doesn't equal IP single so essentially what we're doing is we're looping through this IP dot txt file we're checking of the user's IP addresses this is equal to this one first and then we're checking if it's equal to this one now if it is equal to this one or if it's not equal rather we're going to say found equals false otherwise we're going to say come back up here found equals true and the reason we do this is because we're in a loop here we don't to increment the value of the count dot txt file inside a loop because if we increment the value of something in a loop is going to be performed over and over and over again so we want to create a boolean value could found which is going to be equal to either true or false then what we can do is under this for each under this for each here we can then say if found equals false and in here what we can do is increment count txt value so let's just test this first of all we can echo here IP not found and in the case of the IP address not being found we can increment the value of count so let's just test this works refresh IP not found oh it should have been okay so I think the problem here is that we've declared this outside our function so we need to do is if we pop this inside of our function just in there and we refresh Oh No okay so let's try and determine the problem with this let's echo this up first of all and refresh so let's have a look inside our IP dot txt that's on the first line there so we'll go through and debug this carefully probably just something that I've completely missed echo that out and that's one to 7.1.1 so if that is equal to my IP IP address underscore address doesn't equal IP single found equals false found it was true oh okay I understand so if it is found we need to say if it's not found we need to say found equals I get false otherwise found equals true and we need to say it found equals true and we run this it means our IP address has been found however if I was to remove this IP address we can keep this one and refresh no no okay hold on let's take another look at this let's put that back in there so this is probably great I've made a mistake you can follow me and see what I've done wrong so if IP address doesn't equal IP single found equals false if found equals false is equal to false right okay I think I've sort of worked out the problem now I'll tell you why this isn't working first of all how to have had a little look at it and I've and I've sort of worked out what's wrong so what's happening is is where because we're looping through every IP address first of all we're going to set the boolean found found the variable found which is a boolean to true and then what we're going to do is yeah so okay so I P address doesn't equal IP single let's change this to equals equals and we'll change this around so it's just easier to grasp so if the IP address in the file does equal the IP address of the user then found equals true so therefore if found equals true we want to say already or will just say fountain for now so otherwise once say folks however when we go through again it's going to check the second one and put this to false automatically we're not keeping the same value of found therefore underneath each one of these we want to use break so we're only finding the IP address and then breaking in fact we can say folks keep that as folks that's absolutely fine so now if we were to refresh it says found because it's found within here so all break is doing is if it is found we don't need any more information so we're breaking out of this current loop it's for each here okay so obviously if we were to put a break here and it wasn't found would break out straight away we want to keep going through the file until it's found so logically looking at this I was confused and you may be at this stage but just have a good look and try and understand why we break out
