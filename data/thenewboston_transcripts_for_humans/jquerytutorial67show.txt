With timestamps:

00:00 - hi this is Alex from PHP academy' de org
00:02 - with a video tutorial for the new Boston
00:04 - in the last video we looked at the hide
00:07 - function in jQuery the effect in jQuery
00:10 - and we successfully hid an element by
00:14 - clicking a button so we clicked hide and
00:16 - this text disappeared we then used a
00:19 - callback function to tell the user the
00:21 - the element had been hidden and I
00:23 - explained a bit about why we were why we
00:25 - would use callback functions in this
00:28 - tutorial we're gonna look similarly at
00:30 - show so if we go ahead and change hide
00:34 - here to show nothing will happen at the
00:37 - moment because the element is all
00:38 - automatically shown by default so when
00:42 - we show the element we don't really show
00:44 - anything because it's already been shown
00:46 - now this show function applies to
00:50 - elements that have a visibility of
00:53 - nothing so for example if we were to
00:55 - come into our div here and type style
00:58 - equals and create some inline CSS we
01:03 - could actually hide this element by
01:06 - default so when the page loads we can
01:08 - hide this element by default so for
01:10 - example I would write display:none now
01:15 - when I let's just modify this button as
01:17 - well so it says show if I was to refresh
01:22 - now when I click show this element is
01:24 - shown and then we have our callback
01:26 - function with element hidden but
01:29 - obviously we've shown our element that
01:30 - was just wiper in here so it's just
01:33 - changed that to shown okay so what
01:36 - happens if you want to eradicate the use
01:39 - of CSS but automatically make specific
01:42 - elements hidden by default and then be
01:45 - able to show them now in side-effects
01:47 - jeaious we can use the document.ready
01:49 - functionality to hide any elements we
01:52 - want and then allow this click event to
01:55 - actually reshow them so let's go ahead
01:58 - and say document dot ready
02:01 - and inside here we need a function we
02:05 - need our function block and we're going
02:07 - to pull that down so we can write our
02:08 - code in here so what I'm going to do is
02:11 - I'm going to choose the element a
02:13 - underscore div you remember using the
02:15 - hash the dollar sign outside of these
02:17 - parentheses and I'm gonna say dot hide
02:20 - and that's it
02:21 - so we've automatically hidden this when
02:24 - the page is loaded so we're not using
02:26 - any CSS styling but we're using jQuery
02:28 - to handle the fact that we're hiding
02:30 - this element once the document is ready
02:33 - what we can then do is use the button to
02:36 - catch the event show this slow linear
02:41 - and then use the callback function to
02:43 - alert that the element has been shown
02:45 - let's go ahead to our browser and test
02:47 - this out now you can automatically see
02:49 - that the element has been hidden despite
02:51 - the fact that we haven't used any CSS to
02:54 - do so
02:54 - so when we go ahead and click show we
02:57 - get the same functionality we have some
02:59 - text inside here and then we have
03:01 - element shown so the two functions hide
03:05 - and show both both work in opposite of
03:09 - each other where the hide actually sets
03:11 - the element visibility to none and the
03:14 - show removes this element or removes
03:16 - this visibility set to none so this is a
03:21 - problem because obviously we can only
03:23 - show and hide with one set of function
03:28 - however there is a toggle function which
03:30 - we'll be looking at a bit later on that
03:32 - allows you to simultaneously hide and
03:34 - show elements

Cleaned transcript:

hi this is Alex from PHP academy' de org with a video tutorial for the new Boston in the last video we looked at the hide function in jQuery the effect in jQuery and we successfully hid an element by clicking a button so we clicked hide and this text disappeared we then used a callback function to tell the user the the element had been hidden and I explained a bit about why we were why we would use callback functions in this tutorial we're gonna look similarly at show so if we go ahead and change hide here to show nothing will happen at the moment because the element is all automatically shown by default so when we show the element we don't really show anything because it's already been shown now this show function applies to elements that have a visibility of nothing so for example if we were to come into our div here and type style equals and create some inline CSS we could actually hide this element by default so when the page loads we can hide this element by default so for example I would write displaynone now when I let's just modify this button as well so it says show if I was to refresh now when I click show this element is shown and then we have our callback function with element hidden but obviously we've shown our element that was just wiper in here so it's just changed that to shown okay so what happens if you want to eradicate the use of CSS but automatically make specific elements hidden by default and then be able to show them now in sideeffects jeaious we can use the document.ready functionality to hide any elements we want and then allow this click event to actually reshow them so let's go ahead and say document dot ready and inside here we need a function we need our function block and we're going to pull that down so we can write our code in here so what I'm going to do is I'm going to choose the element a underscore div you remember using the hash the dollar sign outside of these parentheses and I'm gonna say dot hide and that's it so we've automatically hidden this when the page is loaded so we're not using any CSS styling but we're using jQuery to handle the fact that we're hiding this element once the document is ready what we can then do is use the button to catch the event show this slow linear and then use the callback function to alert that the element has been shown let's go ahead to our browser and test this out now you can automatically see that the element has been hidden despite the fact that we haven't used any CSS to do so so when we go ahead and click show we get the same functionality we have some text inside here and then we have element shown so the two functions hide and show both both work in opposite of each other where the hide actually sets the element visibility to none and the show removes this element or removes this visibility set to none so this is a problem because obviously we can only show and hide with one set of function however there is a toggle function which we'll be looking at a bit later on that allows you to simultaneously hide and show elements
