With timestamps:

00:00 - hello YouTube sam here from youtube.com
00:03 - slash on live gamer for the new Boston
00:05 - and in this tutorial we're gonna
00:07 - continue working on the log for our game
00:10 - so as I was saying what we need to do is
00:13 - create an array that will hold the
00:15 - values of the damage for each one of the
00:18 - attacks so we'll just go ahead and make
00:22 - a public read-only array and we will
00:25 - call it attack damage and then we'll
00:31 - make it an integer and now we're going
00:37 - to set it equal or something so we will
00:41 - set it equal to our damages so 5 4 punch
00:45 - 10 4 kick and 15 for an anchor throw so
00:51 - now that we've created our array that
00:55 - holds the values of each of the damages
00:59 - we can come down here into public sub
01:01 - attack and you can see that when they
01:04 - attack it creates a I mean it depletes
01:09 - the enemy health based on a certain
01:12 - number now using numbers is it works but
01:16 - it's not always the best idea always use
01:18 - variables when you can so that you can
01:20 - easily change multiple values later on
01:22 - without having to go in and change them
01:24 - manually this is the concept of
01:26 - indirection which I have brought up
01:28 - several times so what we can do is we
01:31 - can minus equals and then we will do
01:34 - attack damage at index of attack num so
01:39 - the index is going to be the same index
01:41 - as the one that's in here so if select
01:43 - case attack num
01:44 - so if attack num is equal to zero then
01:47 - it's going to be Punch and zero again
01:50 - that's going to be five and they
01:51 - correspond to each other and then if he
01:53 - has spinach and the damage is going to
01:55 - be doubled and then for this one it's
01:58 - just going to be attack damage attack
02:02 - num so you can see that I've done that
02:06 - for each one of those other cases that
02:09 - could happen so it's going to be a tack
02:11 - damage at index of attack
02:13 - times two now you could also do spinach
02:17 - multiplier for this so you don't have to
02:20 - type into each time but I'll just go
02:22 - ahead and leave that the way it is so
02:26 - we'll come back here into forum on BB
02:29 - and we will believe but an attack open
02:32 - for now and what we need to do is make a
02:35 - function so private function create
02:40 - event as string and we need to have some
02:46 - arguments so by Val
02:50 - string name as a string and then our
02:56 - function is going to return a string so
03:00 - what we need to do is create an if
03:02 - statement so by using an int statement
03:04 - we can use this same create event
03:06 - function for either enemies or popeye
03:09 - and we don't have to create a create
03:11 - popeye event and create enemy that we
03:12 - can do it just by using one function so
03:15 - if string name is equal to and they'll
03:20 - do popeye dot name because name is a
03:23 - constant we use popeye instead of our
03:26 - object name so if it's equal to Popeyes
03:29 - name in what do we want to do we want to
03:32 - return we will return string name and
03:36 - then we will add some stuff to it so
03:39 - we'll just say has used and now what we
03:45 - want to add is the attack so we'll just
03:48 - enclose it in brackets so they can
03:50 - easily distinguish it from other parts
03:53 - of the log so what we can do is we can
03:56 - do hero dot attacks at the index of
04:01 - attack num
04:07 - and you can see that we are getting an
04:09 - error there so what we need to do is
04:13 - come over here to popeye and we need to
04:16 - create attack num as a public variable
04:19 - which is an integer and down here we
04:22 - need to get rid of the as integer that
04:25 - was here and the dim before attack num
04:28 - so that we're actually using this one
04:30 - instead of creating our own new attack
04:32 - num so we'll come back into here for
04:38 - Mondavi be
04:48 - and what we need to do is instead of
04:51 - just using attack num attack now I'm
04:54 - referencing this right here would
04:55 - reference a variable inside this class
04:57 - ourselves so we need to use the object
04:59 - here oh not attack now that's why we
05:01 - were getting the air and not because it
05:03 - wasn't public although we do need to
05:05 - make it public if you haven't already
05:07 - done that then you may want to so then
05:09 - we'll just close that in brackets and
05:11 - then we will type for and now we need to
05:15 - add the damage so hero dot attack damage
05:20 - at the index of what index so we want
05:24 - well we want the same thing as this one
05:25 - right here which would be attack num so
05:28 - at the index of hero attack num and then
05:34 - we'll just close this one in brackets -
05:39 - and we'll just say damage right there
05:42 - and let's come over here and we'll add a
05:47 - bracket right there okay so if the
05:51 - string name is Popeye then it's going to
05:54 - return all of this back to the sender so
05:57 - now I need to make an else so if it's
06:00 - anything else which would be a type of
06:02 - enemy we're just going to return string
06:06 - name and then we will type has used

Cleaned transcript:

hello YouTube sam here from youtube.com slash on live gamer for the new Boston and in this tutorial we're gonna continue working on the log for our game so as I was saying what we need to do is create an array that will hold the values of the damage for each one of the attacks so we'll just go ahead and make a public readonly array and we will call it attack damage and then we'll make it an integer and now we're going to set it equal or something so we will set it equal to our damages so 5 4 punch 10 4 kick and 15 for an anchor throw so now that we've created our array that holds the values of each of the damages we can come down here into public sub attack and you can see that when they attack it creates a I mean it depletes the enemy health based on a certain number now using numbers is it works but it's not always the best idea always use variables when you can so that you can easily change multiple values later on without having to go in and change them manually this is the concept of indirection which I have brought up several times so what we can do is we can minus equals and then we will do attack damage at index of attack num so the index is going to be the same index as the one that's in here so if select case attack num so if attack num is equal to zero then it's going to be Punch and zero again that's going to be five and they correspond to each other and then if he has spinach and the damage is going to be doubled and then for this one it's just going to be attack damage attack num so you can see that I've done that for each one of those other cases that could happen so it's going to be a tack damage at index of attack times two now you could also do spinach multiplier for this so you don't have to type into each time but I'll just go ahead and leave that the way it is so we'll come back here into forum on BB and we will believe but an attack open for now and what we need to do is make a function so private function create event as string and we need to have some arguments so by Val string name as a string and then our function is going to return a string so what we need to do is create an if statement so by using an int statement we can use this same create event function for either enemies or popeye and we don't have to create a create popeye event and create enemy that we can do it just by using one function so if string name is equal to and they'll do popeye dot name because name is a constant we use popeye instead of our object name so if it's equal to Popeyes name in what do we want to do we want to return we will return string name and then we will add some stuff to it so we'll just say has used and now what we want to add is the attack so we'll just enclose it in brackets so they can easily distinguish it from other parts of the log so what we can do is we can do hero dot attacks at the index of attack num and you can see that we are getting an error there so what we need to do is come over here to popeye and we need to create attack num as a public variable which is an integer and down here we need to get rid of the as integer that was here and the dim before attack num so that we're actually using this one instead of creating our own new attack num so we'll come back into here for Mondavi be and what we need to do is instead of just using attack num attack now I'm referencing this right here would reference a variable inside this class ourselves so we need to use the object here oh not attack now that's why we were getting the air and not because it wasn't public although we do need to make it public if you haven't already done that then you may want to so then we'll just close that in brackets and then we will type for and now we need to add the damage so hero dot attack damage at the index of what index so we want well we want the same thing as this one right here which would be attack num so at the index of hero attack num and then we'll just close this one in brackets and we'll just say damage right there and let's come over here and we'll add a bracket right there okay so if the string name is Popeye then it's going to return all of this back to the sender so now I need to make an else so if it's anything else which would be a type of enemy we're just going to return string name and then we will type has used
