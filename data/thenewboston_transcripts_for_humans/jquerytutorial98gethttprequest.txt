With timestamps:

00:00 - now we need to think of a name for this
00:02 - variable name so let's go back to ax. JS
00:06 - now you do this inside uh curly brackets
00:10 - and the uh each value you send to this
00:12 - file is comma
00:14 - separated so the first one we're going
00:17 - to well the only variable we're going to
00:19 - send is the string so I'm going to uh
00:24 - call the variable
00:25 - input and I'm going to make this equal
00:28 - to string now this might look bit odd
00:31 - essentially this input here is what we
00:33 - would um use in PHP to grab this so
00:39 - input is the name of the variable that
00:42 - we've sent and string is obviously the
00:45 - variable we created earlier with the
00:47 - string data from this text
00:50 - field so now that we've done that um we
00:53 - would you well I mean if we needed to
00:55 - supply additional parameters we could
00:57 - say um input two
01:00 - string two something like that so they
01:03 - you'll comma separate every single value
01:05 - that you um
01:07 - include the third parameter is a
01:09 - callback function which in this case is
01:11 - extremely important now after we've sent
01:14 - the data to this file this PHP reverse.
01:18 - PHP file we want to be able to return
01:21 - the data that's sent back from reverse.
01:24 - PHP and in this case we're reversing the
01:27 - string using the sgr Rev function in PHP
01:30 - so we need to create a callback function
01:33 - and again we create a block here which
01:35 - we can pull just down and in here it
01:37 - will make it easier to write the code
01:39 - but we need to give this function a
01:41 - parameter and that's going to equal the
01:43 - value that's returned by reverse. PHP so
01:47 - in this case I'm going to write data now
01:49 - data will contain everything that is
01:52 - sent from reverse. PHP so the the output
01:55 - contents of reverse. PHP will then be
01:58 - stored inside
02:00 - data so inside of our um callback
02:03 - function here what we can actually do is
02:06 - go ahead and put this data here into a
02:10 - div underneath here so let's go and
02:13 - create a
02:15 - div I'm going to call this feedback and
02:18 - I'm going to end the div there I'm
02:20 - obviously not going to write anything in
02:22 - there because uh we're going to have um
02:24 - jQuery handle that for us so in in
02:28 - ajax.gif
02:30 - is I want to um use a
02:33 - selector and I'm selecting the feedback
02:36 - div and then I'm going to say do text
02:39 - and then in Brackets I'm going to write
02:41 - data so let's just go ahead uh and
02:44 - explain again what we're doing we're
02:46 - sending data to this file here we're
02:49 - sending a variable called input with the
02:52 - value string which we've retrieved up
02:55 - here we're then using a callback
02:57 - function and we're grabbing dat data
03:00 - here that's sent back from this reverse.
03:03 - PHP file we're then putting this data
03:06 - inside the feedback div that we created
03:08 - on our index page so hopefully that
03:11 - makes sense so far now what we're going
03:13 - to do is test out um our our HTTP
03:17 - request now at the moment nothing really
03:20 - here um is is uh useful because we
03:23 - haven't created any code inside reverse.
03:26 - PHP however what I'm going to do is I'm
03:28 - just going to Simply come in create some
03:30 - PHP tags and Echo out
03:34 - test now what's going to happen is
03:37 - despite the fact that we've sent this
03:38 - variable here data will now contain the
03:43 - value test because we've echoed this
03:45 - outto the page the page contents will
03:48 - now become available in this data
03:50 - variable so our feedback div will
03:53 - contain the value test let's go over to
03:56 - our page and uh test this out
04:00 - so despite what I type in here now
04:02 - nothing's really going to you know work
04:04 - because uh we haven't created anything
04:06 - uh interesting uh we've just echoed out
04:09 - test from our PHP file however when I
04:12 - click go you can see that the value test
04:14 - has been returned and placed inside that
04:17 - div so now that we know that the HTTP
04:20 - request has worked we need to work on
04:22 - the PHP file in order to manipulate this
04:25 - input and then uh return the Reversed
04:28 - string
04:30 - so the first thing we want to do is
04:31 - check if the variable is
04:34 - set so we're going to say if is set
04:37 - dollar uncore get and in here we need to
04:40 - supply the variable name and that is
04:44 - input so
04:46 - input so if that is set we can go ahead
04:49 - and create a new variable and that's
04:51 - going to be um that's going to just grab
04:54 - this value here which we obviously have
04:56 - in get input so this is going to be
04:59 - string is equal to dollor
05:03 - getet input so now string is equal to um
05:09 - the posted variable here which comes
05:12 - originally from the text box so now what
05:15 - we can do is Echo St Str rev which is a
05:18 - simple function that reverses a string
05:21 - and we Supply that with one parameter
05:23 - which is the original
05:25 - string so now what's going to happen is
05:27 - when we refresh our page and type
05:29 - something else in I'm going to type my
05:31 - name and click go you can see that PHP
05:35 - has returned the Reversed version of
05:38 - what we originally typed in the text
05:40 - input
05:41 - field so we've now successfully
05:44 - performed a get HTTP request using
05:48 - jQuery now like I've said in um another
05:52 - part of this a these Ajax uh jQuery
05:55 - tutorials is that if we were to do this
05:57 - with Ajax on its own pure Ajax we would
06:01 - be writing um a lot more lines than we
06:04 - are now so although some of this looks
06:06 - complicated uh some of the syntax looks
06:08 - complicated especially with these
06:10 - brackets uh and this callback function
06:12 - here hopefully the concept is
06:15 - understandable to you and you can now go
06:17 - ahead and start to test with this in the
06:19 - next video we're going to look at the uh
06:22 - post HTTP request as well and a bit
06:26 - about why we might use that instead of
06:28 - get but for now we have created a short
06:32 - piece of code which sends data to the
06:34 - reverse. PHP file and then returns a
06:38 - reversed version of the
06:40 - string

Cleaned transcript:

now we need to think of a name for this variable name so let's go back to ax. JS now you do this inside uh curly brackets and the uh each value you send to this file is comma separated so the first one we're going to well the only variable we're going to send is the string so I'm going to uh call the variable input and I'm going to make this equal to string now this might look bit odd essentially this input here is what we would um use in PHP to grab this so input is the name of the variable that we've sent and string is obviously the variable we created earlier with the string data from this text field so now that we've done that um we would you well I mean if we needed to supply additional parameters we could say um input two string two something like that so they you'll comma separate every single value that you um include the third parameter is a callback function which in this case is extremely important now after we've sent the data to this file this PHP reverse. PHP file we want to be able to return the data that's sent back from reverse. PHP and in this case we're reversing the string using the sgr Rev function in PHP so we need to create a callback function and again we create a block here which we can pull just down and in here it will make it easier to write the code but we need to give this function a parameter and that's going to equal the value that's returned by reverse. PHP so in this case I'm going to write data now data will contain everything that is sent from reverse. PHP so the the output contents of reverse. PHP will then be stored inside data so inside of our um callback function here what we can actually do is go ahead and put this data here into a div underneath here so let's go and create a div I'm going to call this feedback and I'm going to end the div there I'm obviously not going to write anything in there because uh we're going to have um jQuery handle that for us so in in ajax.gif is I want to um use a selector and I'm selecting the feedback div and then I'm going to say do text and then in Brackets I'm going to write data so let's just go ahead uh and explain again what we're doing we're sending data to this file here we're sending a variable called input with the value string which we've retrieved up here we're then using a callback function and we're grabbing dat data here that's sent back from this reverse. PHP file we're then putting this data inside the feedback div that we created on our index page so hopefully that makes sense so far now what we're going to do is test out um our our HTTP request now at the moment nothing really here um is is uh useful because we haven't created any code inside reverse. PHP however what I'm going to do is I'm just going to Simply come in create some PHP tags and Echo out test now what's going to happen is despite the fact that we've sent this variable here data will now contain the value test because we've echoed this outto the page the page contents will now become available in this data variable so our feedback div will contain the value test let's go over to our page and uh test this out so despite what I type in here now nothing's really going to you know work because uh we haven't created anything uh interesting uh we've just echoed out test from our PHP file however when I click go you can see that the value test has been returned and placed inside that div so now that we know that the HTTP request has worked we need to work on the PHP file in order to manipulate this input and then uh return the Reversed string so the first thing we want to do is check if the variable is set so we're going to say if is set dollar uncore get and in here we need to supply the variable name and that is input so input so if that is set we can go ahead and create a new variable and that's going to be um that's going to just grab this value here which we obviously have in get input so this is going to be string is equal to dollor getet input so now string is equal to um the posted variable here which comes originally from the text box so now what we can do is Echo St Str rev which is a simple function that reverses a string and we Supply that with one parameter which is the original string so now what's going to happen is when we refresh our page and type something else in I'm going to type my name and click go you can see that PHP has returned the Reversed version of what we originally typed in the text input field so we've now successfully performed a get HTTP request using jQuery now like I've said in um another part of this a these Ajax uh jQuery tutorials is that if we were to do this with Ajax on its own pure Ajax we would be writing um a lot more lines than we are now so although some of this looks complicated uh some of the syntax looks complicated especially with these brackets uh and this callback function here hopefully the concept is understandable to you and you can now go ahead and start to test with this in the next video we're going to look at the uh post HTTP request as well and a bit about why we might use that instead of get but for now we have created a short piece of code which sends data to the reverse. PHP file and then returns a reversed version of the string
