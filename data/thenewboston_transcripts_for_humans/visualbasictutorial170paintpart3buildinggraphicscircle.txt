With timestamps:

00:00 - hello YouTube sam here from youtube.com
00:03 - slash on live gamer for the new Boston
00:06 - and in this tutorial women continue
00:08 - working on our paint program that comes
00:10 - from the book beginning Microsoft Visual
00:12 - Basic 2008 by Fearon Willis and Brian
00:16 - Newsome published by rocks I just want
00:18 - to make sure to give them credit in each
00:20 - one of these videos to prevent any
00:22 - problems from happening I'm not claiming
00:24 - this as my own but I'm teaching you guys
00:26 - how to do it so if you remember from the
00:29 - previous tutorial we created the class
00:31 - graphics item so now let's go ahead and
00:36 - we'll come over here to paint you do and
00:38 - let's add a new class now if you don't
00:41 - know what graphics item is then I highly
00:44 - suggest you move back to the previous
00:45 - tutorial because it'll be really
00:48 - complicated if you don't know what it
00:51 - does and what's in it and I don't have
00:53 - the time to explain it again in this
00:55 - tutorial so we'll create another class
00:57 - called graphics circle now what we're
01:01 - going to be drawing with is a circle so
01:03 - when we start drawing with circles it's
01:06 - going to create a solid line so here is
01:11 - our graphics circle class if you don't
01:13 - want to know what I mean by I mean
01:15 - making a solid line let me show you guys
01:17 - real quick I want files right here and
01:19 - open up the finished product and I'll
01:21 - show you guys what happens when what I
01:23 - mean by drawing a solid line oh you can
01:25 - see okay so you can see here is my paper
01:30 - and when I start drawing with the circle
01:32 - it draws straight lines here so go ahead
01:37 - and close out of that I just wanted to
01:39 - explain to you what that does so we have
01:43 - our class graphic circle and you
01:46 - probably have already guessed know by
01:48 - now but we're gonna have it inherit from
01:51 - graphics item so we'll go ahead and come
01:57 - down here
01:57 - and you can see that when I press ENTER
01:59 - it automatically creates this sub draw
02:01 - for us it's public over I sub draw you
02:05 - can see here that we made that in our
02:07 - graphics items class and it's must
02:09 - override draw so whenever we inherit
02:12 - from graphics item it's going to go
02:14 - ahead and create this for us I want to
02:16 - press ENTER now when you're making
02:18 - programs in the future whenever you
02:20 - create must inherit class or it must
02:22 - override subs and you inherit from a
02:25 - class that has those it's gonna fill in
02:27 - all of those in there so you could have
02:29 - like a million different subs it's gonna
02:31 - fill in all this for you all of the must
02:33 - override subs so here's our draw sub and
02:38 - what we want to do is let's create a new
02:41 - brush so we'll just call it object solid
02:45 - brush as new solid brush and it defines
02:50 - a brush of a single color brushes are
02:52 - used to fill graphic shapes such as
02:54 - rectangles ellipses pies polygons and
02:57 - paths they cannot be inherited that's
02:59 - pretty much the description of solid
03:01 - brush and it's gonna take one argument
03:04 - we're going to need color so we'll type
03:07 - me dot color
03:10 - so by using the keyword meat that refers
03:13 - to the class graphic circle so it's
03:16 - gonna use the variable color from
03:18 - graphic circle this will prevent any
03:20 - errors from happening by using this
03:22 - right here because if we just use the
03:24 - word color we may get an error because
03:26 - that is a keyword for Visual Basic and
03:28 - if we have any other color variables as
03:34 - such as ones that are only inside subs
03:36 - or methods or functions this will
03:40 - prevent any conflict from happening and
03:43 - if you're wondering where did we get
03:44 - color from well it's in the class
03:47 - graphics item it's a public color of
03:49 - type color so now that we've created our
03:52 - solid brush let's go ahead and draw the
03:56 - circle so we'll do graphics and you can
04:00 - see here that graphics comes from the
04:02 - argument so you got draw and then for
04:04 - the arguments we need a graphics as of
04:06 - type system dot drawings about graphics
04:10 - so we want to fill any lips now an
04:16 - ellipse is basically a circle or an oval
04:19 - and ovals can be warped in all different
04:23 - kinds of ways they could be really long
04:24 - and skinny really tall and skinny
04:27 - whatever is around is going to be an
04:30 - ellipse and a perfect circle would also
04:32 - fall under that category so graphics on
04:34 - fill ellipse then what we want to do is
04:36 - use object solid brush for our brush
04:44 - and then for the second argument our
04:46 - rectangle will type me dot rectangle now
04:51 - once again this refers to the public
04:54 - variable rectangle that is in class
04:57 - graphic circle now you can't see it here
04:59 - because it's inherited from graphics
05:01 - item so rectangle is given to graphic
05:04 - circle by graphics item and then we can
05:06 - use it by typing me dot rectangle okay
05:10 - so now that we've created our graphics
05:12 - item and our graphic Circle classes
05:15 - let's come over here to paint canvas dot
05:17 - B beam will right-click it and we'll
05:20 - select view code so here's the code
05:22 - that's gonna run inside of our paint
05:26 - canvas class so inside of this let's go
05:30 - ahead and create an enumeration now this
05:33 - enumeration is going to hold the sizes
05:36 - the possible sizes for the circle so
05:39 - we're gonna have a small a medium and a
05:40 - large
05:41 - so we'll type public you know
05:48 - graphics
05:51 - graphics sizes as integer and we'll set
05:57 - small equal to let's say five medium is
06:05 - going to equal ten and then large let's
06:09 - make large equal to 25 so we've got our
06:13 - graphic sizes enumeration and let's
06:15 - create one more enumeration now this is
06:19 - going to be graphic graphics tools
06:26 - and we wanted to be of type integer and
06:28 - we can't forget to put in numeration
06:31 - right here so public and um graphics
06:33 - tools as integer go ahead and hit enter
06:36 - and we'll set circle pin equal to zero
06:42 - so whenever we make a variable of type
06:45 - of graphics tools there's only going to
06:47 - be one option for us and it's gonna be 0
06:49 - which is a circle pin so this is all
06:54 - we're gonna add right now in the paint
06:57 - canvas class so we're gonna be adding
07:01 - more in the next tutorial and if you
07:03 - have any questions about our graphics
07:05 - circle class or the anything else in
07:09 - this tutorial or in the paint program go
07:11 - ahead and leave them in the comments
07:12 - I'll try to answer as many as I can and
07:15 - if you understand everything go ahead
07:17 - and move on to the next tutorial

Cleaned transcript:

hello YouTube sam here from youtube.com slash on live gamer for the new Boston and in this tutorial women continue working on our paint program that comes from the book beginning Microsoft Visual Basic 2008 by Fearon Willis and Brian Newsome published by rocks I just want to make sure to give them credit in each one of these videos to prevent any problems from happening I'm not claiming this as my own but I'm teaching you guys how to do it so if you remember from the previous tutorial we created the class graphics item so now let's go ahead and we'll come over here to paint you do and let's add a new class now if you don't know what graphics item is then I highly suggest you move back to the previous tutorial because it'll be really complicated if you don't know what it does and what's in it and I don't have the time to explain it again in this tutorial so we'll create another class called graphics circle now what we're going to be drawing with is a circle so when we start drawing with circles it's going to create a solid line so here is our graphics circle class if you don't want to know what I mean by I mean making a solid line let me show you guys real quick I want files right here and open up the finished product and I'll show you guys what happens when what I mean by drawing a solid line oh you can see okay so you can see here is my paper and when I start drawing with the circle it draws straight lines here so go ahead and close out of that I just wanted to explain to you what that does so we have our class graphic circle and you probably have already guessed know by now but we're gonna have it inherit from graphics item so we'll go ahead and come down here and you can see that when I press ENTER it automatically creates this sub draw for us it's public over I sub draw you can see here that we made that in our graphics items class and it's must override draw so whenever we inherit from graphics item it's going to go ahead and create this for us I want to press ENTER now when you're making programs in the future whenever you create must inherit class or it must override subs and you inherit from a class that has those it's gonna fill in all of those in there so you could have like a million different subs it's gonna fill in all this for you all of the must override subs so here's our draw sub and what we want to do is let's create a new brush so we'll just call it object solid brush as new solid brush and it defines a brush of a single color brushes are used to fill graphic shapes such as rectangles ellipses pies polygons and paths they cannot be inherited that's pretty much the description of solid brush and it's gonna take one argument we're going to need color so we'll type me dot color so by using the keyword meat that refers to the class graphic circle so it's gonna use the variable color from graphic circle this will prevent any errors from happening by using this right here because if we just use the word color we may get an error because that is a keyword for Visual Basic and if we have any other color variables as such as ones that are only inside subs or methods or functions this will prevent any conflict from happening and if you're wondering where did we get color from well it's in the class graphics item it's a public color of type color so now that we've created our solid brush let's go ahead and draw the circle so we'll do graphics and you can see here that graphics comes from the argument so you got draw and then for the arguments we need a graphics as of type system dot drawings about graphics so we want to fill any lips now an ellipse is basically a circle or an oval and ovals can be warped in all different kinds of ways they could be really long and skinny really tall and skinny whatever is around is going to be an ellipse and a perfect circle would also fall under that category so graphics on fill ellipse then what we want to do is use object solid brush for our brush and then for the second argument our rectangle will type me dot rectangle now once again this refers to the public variable rectangle that is in class graphic circle now you can't see it here because it's inherited from graphics item so rectangle is given to graphic circle by graphics item and then we can use it by typing me dot rectangle okay so now that we've created our graphics item and our graphic Circle classes let's come over here to paint canvas dot B beam will rightclick it and we'll select view code so here's the code that's gonna run inside of our paint canvas class so inside of this let's go ahead and create an enumeration now this enumeration is going to hold the sizes the possible sizes for the circle so we're gonna have a small a medium and a large so we'll type public you know graphics graphics sizes as integer and we'll set small equal to let's say five medium is going to equal ten and then large let's make large equal to 25 so we've got our graphic sizes enumeration and let's create one more enumeration now this is going to be graphic graphics tools and we wanted to be of type integer and we can't forget to put in numeration right here so public and um graphics tools as integer go ahead and hit enter and we'll set circle pin equal to zero so whenever we make a variable of type of graphics tools there's only going to be one option for us and it's gonna be 0 which is a circle pin so this is all we're gonna add right now in the paint canvas class so we're gonna be adding more in the next tutorial and if you have any questions about our graphics circle class or the anything else in this tutorial or in the paint program go ahead and leave them in the comments I'll try to answer as many as I can and if you understand everything go ahead and move on to the next tutorial
