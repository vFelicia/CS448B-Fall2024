With timestamps:

00:00 - hi this is Alex from PHP calamita org
00:02 - and this is a PHP video tutorial for the
00:05 - new Boston now we've already looked at
00:07 - include and require but what about
00:10 - require once now require once looks like
00:13 - this it works exactly the same one as in
00:17 - at one it works exactly the same way
00:19 - sorry as require and include on their
00:23 - own you can also use include once as
00:28 - well now but why would you want to use
00:31 - this I mean presumably if I was to say
00:34 - require my header Inc dot PHP file which
00:38 - I've got up here which just has some
00:39 - HTML data in and I was to go and refresh
00:42 - the page you can see that it just says
00:46 - Alex's page so we've included this we've
00:49 - required this header in there's not
00:51 - really any difference in output when we
00:54 - do require once it's exactly the same
00:56 - thing it produces exactly the same
00:58 - result but there's one difference if you
01:01 - use require once throughout your page it
01:04 - will check to see if this file has
01:07 - previously been required and if so won't
01:10 - require it so let's have a go at now
01:13 - requiring and just requiring not
01:15 - requiring one's head adding dot PHP in
01:18 - here so let's press f5 now you can see
01:21 - that it's required or included if you
01:24 - like the file twice now bear in mind
01:27 - that throughout this whole process we
01:28 - can use the include once as well as the
01:31 - include so require once header dot in
01:33 - dot PHP and require header dot PHP so
01:37 - now what this is done is its required
01:39 - heading dot PHP and once but then it's
01:43 - required it again without using the once
01:45 - so let's try and swap these around and
01:47 - see what result we get out ok so you can
01:51 - see that what's happened is we've
01:53 - already required or included if you like
01:56 - the header Inc dot PHP so now what this
02:00 - what this statement will do if you like
02:02 - it will check to see if the header Inc
02:06 - dot PHP has already been included and it
02:10 - will it will include it if if
02:13 - if it hasn't been included and if not
02:15 - then it won't and require once is
02:18 - similar to doing something like this if
02:20 - defined and then you choose header dot
02:25 - php' within this function or this
02:27 - language construct if defined then
02:32 - require header Inc dot PHP so what I've
02:35 - just wrote written here is exactly the
02:37 - same as the require one so if we refresh
02:40 - now we can see that we don't have a
02:42 - record we don't have another version of
02:45 - it required in here however if I was to
02:47 - swap them around again so vice versa
02:50 - that's what I already did a moment
02:52 - they're going to swap them back around
02:53 - and I click refresh you see
02:55 - oh no that two are two unincluded so
02:58 - this will be now been if not defined
03:01 - when we refresh you can see that two of
03:03 - them come up so forget this for now that
03:05 - was just an example but when we use the
03:07 - require once we just ensure that the
03:09 - same file isn't required twice now why
03:13 - might we want to do this bear in mind
03:16 - the whole time you can use the include
03:17 - once that's just different ways to
03:19 - handle the errors include will include
03:21 - the file if it doesn't exist and it will
03:24 - continue with the rest of the page
03:25 - content require will stop the page so
03:28 - including require ones why might we want
03:30 - to require them use them sorry so if
03:33 - we've got a large sake or fire where we
03:36 - keeping variables different functions
03:39 - connecting to our database just things
03:42 - like that and we then go to require the
03:45 - file twice we're significantly slower
03:47 - slowing down the execution of the page
03:50 - and the reason for this is we're
03:52 - requiring something twice or including
03:54 - something twice without using this
03:56 - underscore once means that it will
03:59 - actually require it twice so you'll be
04:02 - processing an include page more than
04:05 - once so that's the main reason that you
04:07 - would use it some people have said that
04:09 - the require and include once language
04:13 - constructs will actually slow down a
04:15 - page anyway however nowadays with the
04:20 - processing time it won't actually make
04:22 - much difference so you're much better
04:23 - off using this include
04:25 - school once or require underscore once
04:27 - to save the speed of your page for later
04:30 - on just in case you do happen to include
04:33 - or require something more than once

Cleaned transcript:

hi this is Alex from PHP calamita org and this is a PHP video tutorial for the new Boston now we've already looked at include and require but what about require once now require once looks like this it works exactly the same one as in at one it works exactly the same way sorry as require and include on their own you can also use include once as well now but why would you want to use this I mean presumably if I was to say require my header Inc dot PHP file which I've got up here which just has some HTML data in and I was to go and refresh the page you can see that it just says Alex's page so we've included this we've required this header in there's not really any difference in output when we do require once it's exactly the same thing it produces exactly the same result but there's one difference if you use require once throughout your page it will check to see if this file has previously been required and if so won't require it so let's have a go at now requiring and just requiring not requiring one's head adding dot PHP in here so let's press f5 now you can see that it's required or included if you like the file twice now bear in mind that throughout this whole process we can use the include once as well as the include so require once header dot in dot PHP and require header dot PHP so now what this is done is its required heading dot PHP and once but then it's required it again without using the once so let's try and swap these around and see what result we get out ok so you can see that what's happened is we've already required or included if you like the header Inc dot PHP so now what this what this statement will do if you like it will check to see if the header Inc dot PHP has already been included and it will it will include it if if if it hasn't been included and if not then it won't and require once is similar to doing something like this if defined and then you choose header dot php' within this function or this language construct if defined then require header Inc dot PHP so what I've just wrote written here is exactly the same as the require one so if we refresh now we can see that we don't have a record we don't have another version of it required in here however if I was to swap them around again so vice versa that's what I already did a moment they're going to swap them back around and I click refresh you see oh no that two are two unincluded so this will be now been if not defined when we refresh you can see that two of them come up so forget this for now that was just an example but when we use the require once we just ensure that the same file isn't required twice now why might we want to do this bear in mind the whole time you can use the include once that's just different ways to handle the errors include will include the file if it doesn't exist and it will continue with the rest of the page content require will stop the page so including require ones why might we want to require them use them sorry so if we've got a large sake or fire where we keeping variables different functions connecting to our database just things like that and we then go to require the file twice we're significantly slower slowing down the execution of the page and the reason for this is we're requiring something twice or including something twice without using this underscore once means that it will actually require it twice so you'll be processing an include page more than once so that's the main reason that you would use it some people have said that the require and include once language constructs will actually slow down a page anyway however nowadays with the processing time it won't actually make much difference so you're much better off using this include school once or require underscore once to save the speed of your page for later on just in case you do happen to include or require something more than once
