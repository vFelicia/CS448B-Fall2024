With timestamps:

00:00 - what's going on guys welcome to your
00:01 - 64th C++ tutorial and in this tutorial
00:04 - I'm going to be beginning to talk about
00:06 - files now we need to be able to work
00:09 - with files because files are what you
00:11 - use to save data on your computer and
00:14 - you're saying hold on Bucky I know what
00:16 - to use to save data you can just uh you
00:18 - know store the data in variables or
00:20 - something like that well we can't
00:22 - exactly do that for permanent data for
00:25 - example whenever we store data in a
00:28 - variable and we close out of the program
00:31 - or maybe we want to shut down our
00:32 - computer that data is going to get wiped
00:35 - out now in order to save data
00:37 - permanently what we need to do is we
00:39 - need to store it on a file on our
00:42 - computer and what this does is whenever
00:44 - you're working with files it stores it
00:46 - to your hard drive it permanently etches
00:48 - it in there so then whenever we shut
00:50 - down our computer we can go ahead and
00:52 - pull it back up and everything is going
00:54 - to be working fine for example if you're
00:57 - were playing a computer game or if you
00:59 - had to write an essay for school you
01:01 - wouldn't want to just store all that
01:03 - information in a variable because then
01:05 - the user would have no way of saving
01:07 - that data so what we're going to be
01:09 - doing is we're going to be working with
01:11 - files storing them on the computer's
01:13 - hard drives and that gives our user a
01:16 - permanent solution to save data very
01:18 - useful and well you're probably going to
01:20 - be working with files in every single
01:22 - program you're using unless you know
01:24 - you're just making a cool animation or
01:26 - something so let's go ahead and the
01:28 - first thing I need to show you guys is
01:31 - we need to include an additional header
01:33 - file so let's go ahead and copy this
01:35 - save us a little bit of typ in and
01:37 - instead of IO stream we're going to put
01:40 - fstream right here now this is the
01:43 - header file that we need for file input
01:45 - and output without this header file we
01:47 - won't be able to work with files at all
01:49 - basically so that's your main file file
01:53 - I guess you could say so let's go ahead
01:55 - and now that we got everything included
01:57 - we need again this is the work with
01:59 - files this is to input and output data
02:02 - or basically how to add data to the file
02:04 - and read data from the file so there you
02:07 - go and uh let's go ahead and start
02:09 - coding now so here is how you work with
02:13 - files in C++ the very first thing you
02:15 - need to do is you need to build an
02:18 - object since C++ can't work directly
02:21 - with the file itself it needs to be able
02:23 - to go through objects just because you
02:25 - know whoever made C++ that's how they
02:27 - made it so the very first thing we do is
02:29 - we need to write
02:31 - o stream right like that and this allows
02:35 - us well there are different types of uh
02:38 - file streams basically this is how you
02:40 - create a file object and right after
02:43 - this you give your file object a name
02:45 - any name you want I'm just going to name
02:46 - mine bies file now we have a file object
02:51 - AKA access to a file so now the first
02:54 - thing that we want to do after this is
02:56 - we need to associate this object with a
02:59 - file itself because if we're just
03:01 - working with this object it's like all
03:02 - right you have like a billion files on
03:04 - your computer how am I supposed to know
03:06 - what object this one or excuse me what
03:09 - file this object is supposed to you know
03:11 - represent well that's what we do in the
03:13 - next line of code and in order to do
03:15 - that we go ahead and type the name of
03:17 - our object and we open a file and we
03:20 - just do that using the open function
03:22 - without the star right there and without
03:24 - this right there we use the open
03:27 - function and inside is a string we pass
03:31 - in what file do we want to open now I'm
03:33 - going to go ahead and open tuna. text
03:36 - and you're saying all right Bucky I
03:38 - don't have a tuna text file on my
03:41 - website or excuse me sorry I've been
03:43 - making uh web tutorials way too often
03:46 - but you're saying all right Bucky I
03:47 - don't have a tuna text file on my
03:49 - computer so is it going to crash
03:51 - whenever it tries to open it well no
03:54 - whenever you're working with files in
03:56 - C++ and it opens a file that doesn't
03:59 - exist it's going to see that it doesn't
04:01 - exist and it's going to automatically
04:02 - create one for you for example my file
04:06 - is going to get created right here now
04:09 - as you can see in this directory there
04:11 - is no tuna text file so whenever I try
04:13 - to open it it's going to look for a tuna
04:15 - text file it's going to say doesn't
04:17 - exist I'll create one for you so it's
04:19 - going to get created automatically and
04:20 - it's pretty cool because it saves us you
04:22 - know a line of code from having to
04:24 - create it so basically what we're going
04:26 - to be doing so far is creating a file
04:29 - object object that way we have access to
04:31 - some file and in this line of code right
04:34 - here we're going to say what file do we
04:37 - want to be associated with this object
04:39 - well now tuna text file is associated
04:42 - with this buy file object so now
04:45 - basically any input and output that we
04:47 - make to this object is going to be input
04:50 - and outputed in this file we just can't
04:53 - you know input an output directly to the
04:55 - file because C++ won't let us
04:57 - basically Bucky's file is the exact same
05:00 - thing as tune a text file from now on so
05:04 - now we can go ahead and you know output
05:06 - characters to that file or whatever you
05:08 - want to output for example you're saying
05:10 - all right how do you output to a file
05:12 - what are you talking about well just go
05:13 - ahead and instead of outputting things
05:16 - to your computer screen like we have
05:18 - before we use that operator right there
05:21 - those two little less than signs and we
05:23 - just write some text like um I love tuna
05:27 - and tuna loves me
05:31 - and we won't end that line actually go
05:34 - ahead and put a new line just like that
05:36 - and now you're saying all right before I
05:39 - had see out right there and output it to
05:41 - my computer screen well now I'm going to
05:44 - go ahead and have Bucky's file right
05:46 - there and all this text is going to
05:48 - Output to a text file instead of the
05:50 - computer screen so nothing's going to
05:52 - show up on the computer screen what this
05:54 - means this little operator is output
05:56 - this data to this location so so before
06:00 - we were outputting the data to the
06:01 - computer screen and now we're just
06:03 - outputting it all to a file simple
06:07 - enough I mean the operator is pretty
06:08 - cool it works in that way so now like I
06:12 - said we basically Associated a file with
06:17 - a object in these two lines and now
06:19 - anytime we use this object name it
06:21 - pretty much knows we're going to be it
06:23 - represents this file so it knows
06:25 - whenever we want to Output this text
06:27 - it's really outputting it to this tun
06:30 - . text file right here so that's going
06:32 - to run perfectly but at the end of all
06:35 - your programs when you're done working
06:36 - with files you always want to close that
06:39 - object and what that does is any you
06:42 - know little memory or buffers or any
06:45 - resources that the computer was using
06:47 - when it was working with this file right
06:49 - here it's going to close them out and
06:50 - it's going to free your computer's
06:51 - memory so it's just good programming
06:54 - practice to do this so let's go ahead
06:55 - and type our file object Bucky file and
06:58 - just go ahead and type clows with no
07:00 - parameters so let's go ahead and run
07:02 - this program and as you can see nothing
07:05 - happens right here because we didn't
07:07 - output anything to the computer screen
07:09 - but if we go ahead and take a look at
07:11 - that directory we now have a tuna text
07:15 - document that got created so if you go
07:17 - ahead and double click that the content
07:19 - of this is I love tuna and tuna loves me
07:23 - pretty cool huh so as you can see this
07:25 - would be useful whenever you're you know
07:27 - creating a computer game and you have a
07:30 - character with a bunch of Statistics
07:31 - like health and you know happiness and
07:34 - hunger they can go ahead and play the
07:36 - game for you know an hour store all
07:39 - their data shut off their computer go to
07:41 - school go to work whatever come back and
07:43 - all their data is going to be right
07:44 - there for them it's not a new computer
07:46 - game every single time you start because
07:48 - that would be kind of a waste of time so
07:51 - that is how files are useful in computer
07:54 - programming and how to work with a
07:56 - simple text file so if you think you're
07:59 - done with files yet you got a long ways
08:02 - to go so in the next tutorial we're
08:03 - going to be covering more about files
08:05 - and trust me there's a lot more
08:06 - information that we need to learn but
08:08 - for now thank you guys for watching
08:09 - don't forget to subscribe and I'll see
08:11 - you guys in the next video

Cleaned transcript:

what's going on guys welcome to your 64th C++ tutorial and in this tutorial I'm going to be beginning to talk about files now we need to be able to work with files because files are what you use to save data on your computer and you're saying hold on Bucky I know what to use to save data you can just uh you know store the data in variables or something like that well we can't exactly do that for permanent data for example whenever we store data in a variable and we close out of the program or maybe we want to shut down our computer that data is going to get wiped out now in order to save data permanently what we need to do is we need to store it on a file on our computer and what this does is whenever you're working with files it stores it to your hard drive it permanently etches it in there so then whenever we shut down our computer we can go ahead and pull it back up and everything is going to be working fine for example if you're were playing a computer game or if you had to write an essay for school you wouldn't want to just store all that information in a variable because then the user would have no way of saving that data so what we're going to be doing is we're going to be working with files storing them on the computer's hard drives and that gives our user a permanent solution to save data very useful and well you're probably going to be working with files in every single program you're using unless you know you're just making a cool animation or something so let's go ahead and the first thing I need to show you guys is we need to include an additional header file so let's go ahead and copy this save us a little bit of typ in and instead of IO stream we're going to put fstream right here now this is the header file that we need for file input and output without this header file we won't be able to work with files at all basically so that's your main file file I guess you could say so let's go ahead and now that we got everything included we need again this is the work with files this is to input and output data or basically how to add data to the file and read data from the file so there you go and uh let's go ahead and start coding now so here is how you work with files in C++ the very first thing you need to do is you need to build an object since C++ can't work directly with the file itself it needs to be able to go through objects just because you know whoever made C++ that's how they made it so the very first thing we do is we need to write o stream right like that and this allows us well there are different types of uh file streams basically this is how you create a file object and right after this you give your file object a name any name you want I'm just going to name mine bies file now we have a file object AKA access to a file so now the first thing that we want to do after this is we need to associate this object with a file itself because if we're just working with this object it's like all right you have like a billion files on your computer how am I supposed to know what object this one or excuse me what file this object is supposed to you know represent well that's what we do in the next line of code and in order to do that we go ahead and type the name of our object and we open a file and we just do that using the open function without the star right there and without this right there we use the open function and inside is a string we pass in what file do we want to open now I'm going to go ahead and open tuna. text and you're saying all right Bucky I don't have a tuna text file on my website or excuse me sorry I've been making uh web tutorials way too often but you're saying all right Bucky I don't have a tuna text file on my computer so is it going to crash whenever it tries to open it well no whenever you're working with files in C++ and it opens a file that doesn't exist it's going to see that it doesn't exist and it's going to automatically create one for you for example my file is going to get created right here now as you can see in this directory there is no tuna text file so whenever I try to open it it's going to look for a tuna text file it's going to say doesn't exist I'll create one for you so it's going to get created automatically and it's pretty cool because it saves us you know a line of code from having to create it so basically what we're going to be doing so far is creating a file object object that way we have access to some file and in this line of code right here we're going to say what file do we want to be associated with this object well now tuna text file is associated with this buy file object so now basically any input and output that we make to this object is going to be input and outputed in this file we just can't you know input an output directly to the file because C++ won't let us basically Bucky's file is the exact same thing as tune a text file from now on so now we can go ahead and you know output characters to that file or whatever you want to output for example you're saying all right how do you output to a file what are you talking about well just go ahead and instead of outputting things to your computer screen like we have before we use that operator right there those two little less than signs and we just write some text like um I love tuna and tuna loves me and we won't end that line actually go ahead and put a new line just like that and now you're saying all right before I had see out right there and output it to my computer screen well now I'm going to go ahead and have Bucky's file right there and all this text is going to Output to a text file instead of the computer screen so nothing's going to show up on the computer screen what this means this little operator is output this data to this location so so before we were outputting the data to the computer screen and now we're just outputting it all to a file simple enough I mean the operator is pretty cool it works in that way so now like I said we basically Associated a file with a object in these two lines and now anytime we use this object name it pretty much knows we're going to be it represents this file so it knows whenever we want to Output this text it's really outputting it to this tun . text file right here so that's going to run perfectly but at the end of all your programs when you're done working with files you always want to close that object and what that does is any you know little memory or buffers or any resources that the computer was using when it was working with this file right here it's going to close them out and it's going to free your computer's memory so it's just good programming practice to do this so let's go ahead and type our file object Bucky file and just go ahead and type clows with no parameters so let's go ahead and run this program and as you can see nothing happens right here because we didn't output anything to the computer screen but if we go ahead and take a look at that directory we now have a tuna text document that got created so if you go ahead and double click that the content of this is I love tuna and tuna loves me pretty cool huh so as you can see this would be useful whenever you're you know creating a computer game and you have a character with a bunch of Statistics like health and you know happiness and hunger they can go ahead and play the game for you know an hour store all their data shut off their computer go to school go to work whatever come back and all their data is going to be right there for them it's not a new computer game every single time you start because that would be kind of a waste of time so that is how files are useful in computer programming and how to work with a simple text file so if you think you're done with files yet you got a long ways to go so in the next tutorial we're going to be covering more about files and trust me there's a lot more information that we need to learn but for now thank you guys for watching don't forget to subscribe and I'll see you guys in the next video
