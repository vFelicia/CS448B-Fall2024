With timestamps:

00:00 - already houses welcome back and now that
00:02 - we have our component displaying exactly
00:05 - how we want what we have to do next is
00:07 - we need to set up our actions now
00:10 - remember in action is basically just
00:12 - anything that you can do to your
00:14 - application so clicking a button that's
00:17 - an action submitting a form that's an
00:19 - action moving a slider that's an action
00:22 - it's really simple it's just anything
00:24 - that you can do to your app so what I'm
00:28 - going to do in this little lesson is I'm
00:31 - just going to have it where whenever the
00:32 - user clicks one of these user names like
00:35 - clicking the name Bucky Roberts that's
00:37 - an action so whenever they click it I'm
00:40 - going to display the details below so
00:43 - again we're only going to have one
00:44 - action in this little demo keep things
00:47 - really simple but once you see how to
00:48 - build and setup one action you can do it
00:51 - for 100 so in action if you could guess
00:55 - is just a function a function that you
00:57 - call and I'll explain a little bit of
01:00 - terminology in just a second but for now
01:02 - just go ahead and create a new directory
01:04 - and let's just go ahead and name actions
01:07 - in a sense I'm only going to have one
01:10 - I'm just going to make a new file and
01:13 - I'll name it index is usually if you
01:17 - have a bunch you may want to break it up
01:18 - but again I'm going to keep things real
01:21 - simple so there you go
01:23 - let me rearrange this alright so for
01:27 - this action again it's just a function
01:29 - so you can name it anything you want
01:30 - what it's going to be is whenever the
01:33 - user which is me clicks one of these
01:35 - names so you can say click user but what
01:39 - I'm going to do is I'm going to say
01:40 - select user and since it's going to be
01:43 - the only function in here we can just go
01:45 - ahead and export it as a constant select
01:49 - user now what information do we need to
01:53 - pass in to this function well the only
01:55 - thing that we need to pass in is what
01:57 - user they selected so as a parameter I'm
02:00 - just going to go ahead and write user
02:01 - and actually let me do it this way I
02:05 - might as well keep everything on nice
02:07 - and neat so make a fat arrow we'll do
02:10 - that kind of new Essex syntax
02:12 - get my semicolons taken care of right
02:15 - now and I guess we can do this right now
02:18 - so I'm just going to print out in the
02:21 - console whenever they click and this is
02:22 - just to verify you really don't need to
02:24 - do this but just so we can see that
02:27 - something's going on I'll say um
02:29 - whenever they click the user I'll just
02:31 - print out you know
02:33 - click on user now remember this user is
02:39 - the user object so whenever we want to
02:42 - print out something from it well you
02:44 - have to say like a user first to print
02:47 - out their name so user first and that
02:50 - I'll print out their actual name instead
02:52 - of this weird-looking object so there we
02:54 - go but now what we have to do clean up
02:58 - my code a little bit is this so you know
03:01 - that I said that basically this action
03:06 - right here is a function well that was
03:08 - kind of like the action is actually the
03:11 - part that gets returned the actual
03:14 - function is called the action creator so
03:18 - I'll finish this in then I'll explain
03:19 - it's it really doesn't matter that much
03:22 - is just terminology but I figured I
03:24 - might as well explain what's going on so
03:27 - the action itself is made up of two
03:30 - parts let me show you my diagram the
03:33 - first part is a type and the type is
03:35 - really just a string that explains what
03:37 - happened like a new movie button clicked
03:39 - user name clicked slider removed any way
03:45 - to describe what happened to your
03:47 - application now the second part is the
03:49 - payload or any information that you need
03:52 - to give your app in this case we're just
03:54 - going to go ahead and give it the user
03:55 - object so they have access to whatever
03:59 - user they clicked
04:00 - so if I click Jovi's name we're just
04:02 - going to pass the user object in to or
04:04 - as the payload so I'll go ahead and
04:08 - finish this and then you guys are going
04:09 - to see what's going on so the type again
04:11 - this can be anything you want for the
04:14 - app whenever it needs to handle it I'm
04:16 - just going to say user select it so
04:18 - that's the type of action that occurred
04:21 - the user got selected the user got
04:25 - clicked on
04:26 - now again the payload I'm just going to
04:29 - pass in user and you can actually name
04:30 - this parameter anything you want you can
04:32 - name it data it's just kind of
04:33 - convention name it payload
04:35 - all right so ten seconds ago I was
04:37 - saying something about this isn't
04:39 - actually the action it's actually the
04:40 - action creator what the heck was I
04:43 - talking about
04:43 - technically in a react the correct
04:46 - terminology is the action is made up of
04:49 - two parts it's an object with the type
04:51 - and a payload so this whatever turns
04:55 - this is actually the action now this
04:59 - entire function is called an action
05:01 - creator so again you have a function
05:04 - that you're going to be calling from
05:06 - your application and it's called the
05:08 - action creator and it's job is just to
05:10 - return an object called the action
05:12 - alright so that is fantastic so now
05:15 - let's actually go ahead and use this
05:17 - action creator or this function that we
05:19 - just made so over in your user list of
05:23 - course what we need to do is we need to
05:24 - hook it up so we're going to put a
05:27 - function or event handler on this list
05:30 - item and we're going to pretty much hook
05:32 - it up to this function right here so
05:35 - whenever they hit this we're going to
05:37 - say on click call this function so what
05:41 - we need to do first is just go ahead and
05:42 - import everything so we're going to
05:44 - import select user from how do you get
05:51 - there up to actions index alright and a
05:56 - semicolon and okay so this select user
06:00 - is equal to whatever this exported boom
06:03 - this function so here's the thing and
06:06 - this is the only other thing that may
06:08 - throw you for a little bit of a loop so
06:12 - we can just say on click call select
06:15 - user and you may think that that would
06:18 - be perfect but here's the thing see we
06:21 - are hooking up our react application to
06:23 - work with redux so if we do that then we
06:26 - kind of bypass the important stuff so it
06:30 - will work but it isn't hooked up
06:33 - properly to be used in a redux
06:35 - application so in order to use it in a
06:38 - Redux application we just can't
06:40 - pass it in directly what we need to do
06:43 - is we need to connect it to this
06:46 - container which is the smart component
06:49 - so again we can pass in to the component
06:51 - directly but to hook it up with Redux we
06:54 - actually need to hook it up to this
06:56 - connect function right here and it's
06:58 - almost the exact same is this just
07:00 - another function actually let me add it
07:03 - below so what we do is we need to make a
07:07 - fun function called match dispatch to
07:10 - props and it sounds confusing they name
07:14 - these functions so confusing but they're
07:15 - actually really easy to understand it's
07:17 - annoying miss to match
07:23 - dispatch to props okay so let me go
07:27 - ahead and type this to make sure I don't
07:30 - have any typos and check this out so all
07:34 - we're doing right here is instead of
07:37 - just passing it in directly we're just
07:39 - going to pass it in as a prop so you
07:41 - know before all we did right here is we
07:43 - pretty much said all right whatever the
07:46 - state is we're going to pass that in as
07:47 - a prop well in order to use it in our
07:50 - component we also need to pass it in as
07:52 - a prop so we're going to take this
07:54 - function pass it in as a prop and we're
07:58 - going to hook it up pretty much so we
08:00 - can use it with the redux in dispatch
08:02 - just pretty much is a fancy way of
08:04 - saying call a function that's it alright
08:08 - so what we're going to do is we're going
08:10 - to return bind action creators in bind
08:14 - this is just a synonym for connect in
08:17 - action creators remember I said it's
08:19 - just another name for a function so
08:22 - we're pretty much going to connect this
08:24 - function see it's so easy why didn't you
08:27 - everything so confusing and whenever we
08:30 - pass in as a prop we can actually just
08:32 - use the same exact function name so it's
08:34 - super easy so the prop select user is
08:38 - equal to the function select user easy
08:41 - enough now just for housekeeping the
08:43 - last parameter that we have to call them
08:45 - this is dispatch and again like I said
08:48 - that is just some something that happens
08:50 - behind the scenes with redux to actually
08:52 - call this
08:54 - function alright so in order to actually
08:58 - throw this in right after match state
09:01 - the props you just throw this function
09:03 - and that's it so again all we did is
09:08 - whenever the user does something to your
09:11 - application they need to generate in
09:13 - action and an action is just a way of
09:15 - telling your entire application that
09:17 - something happened so we made an action
09:20 - called user selected and of course this
09:23 - entire function that gets called is
09:24 - called the action creator because it
09:26 - creates this object now whenever we pass
09:29 - it in to our component or container
09:32 - since it's kind of smart now we're just
09:34 - going to pass it in as a property with
09:36 - the same name so we don't get confused
09:38 - or anything like that so now in here we
09:41 - have access to a property called select
09:43 - user which is essentially this function
09:46 - boom roasted so we can go ahead and call
09:50 - that right now actually so let me clean
09:52 - up this code a little bit so we can see
09:54 - what's going on entertaining myself over
09:57 - here all right so the key is equal to
10:00 - the user ID still and I'll say on on
10:05 - clock skin all right so on click what do
10:10 - we want to do we just want to say this
10:11 - dot props dot select user and remember
10:17 - this function
10:17 - it actually takes in the user object so
10:21 - make sure just the pass in the entire
10:22 - user and not the user ID or username or
10:25 - anything like that
10:25 - and now listener if your function and
10:30 - got object and that is because I am an
10:33 - idiot it just needs to be
10:35 - alright so make sure they actually treat
10:38 - this as a function and not a property
10:39 - since it is a function through bulky art
10:42 - so now if I rebuild this hopefully if it
10:45 - in do anything else wrong whenever we
10:47 - click these we bump this up check this
10:50 - out
10:51 - you clicked on user Bucky Joe be Matty
10:54 - Joe be Bucky tomato tomahto so what we
10:58 - did is we successfully hooked up in
11:00 - action creator to a user event so now
11:04 - whenever they click this
11:06 - it calls the action creator and in
11:09 - essence we know that it's creating this
11:11 - action or this object because we have
11:13 - this line of code that is running
11:15 - successfully so now that we can create
11:19 - actions using user events what is the
11:22 - next piece of the puzzle well now we
11:24 - have to figure out how to pipe this off
11:25 - to a reducer what the heck of reducer is
11:28 - and why we need it so that ladies and
11:31 - gentlemen is what we're going to be
11:32 - doing in the next tutorial and it's
11:34 - going to be awesome I bet you guys can't
11:36 - wait the suspense is killing you so yes
11:39 - thank you guys for watching and I'll see
11:40 - you next time

Cleaned transcript:

already houses welcome back and now that we have our component displaying exactly how we want what we have to do next is we need to set up our actions now remember in action is basically just anything that you can do to your application so clicking a button that's an action submitting a form that's an action moving a slider that's an action it's really simple it's just anything that you can do to your app so what I'm going to do in this little lesson is I'm just going to have it where whenever the user clicks one of these user names like clicking the name Bucky Roberts that's an action so whenever they click it I'm going to display the details below so again we're only going to have one action in this little demo keep things really simple but once you see how to build and setup one action you can do it for 100 so in action if you could guess is just a function a function that you call and I'll explain a little bit of terminology in just a second but for now just go ahead and create a new directory and let's just go ahead and name actions in a sense I'm only going to have one I'm just going to make a new file and I'll name it index is usually if you have a bunch you may want to break it up but again I'm going to keep things real simple so there you go let me rearrange this alright so for this action again it's just a function so you can name it anything you want what it's going to be is whenever the user which is me clicks one of these names so you can say click user but what I'm going to do is I'm going to say select user and since it's going to be the only function in here we can just go ahead and export it as a constant select user now what information do we need to pass in to this function well the only thing that we need to pass in is what user they selected so as a parameter I'm just going to go ahead and write user and actually let me do it this way I might as well keep everything on nice and neat so make a fat arrow we'll do that kind of new Essex syntax get my semicolons taken care of right now and I guess we can do this right now so I'm just going to print out in the console whenever they click and this is just to verify you really don't need to do this but just so we can see that something's going on I'll say um whenever they click the user I'll just print out you know click on user now remember this user is the user object so whenever we want to print out something from it well you have to say like a user first to print out their name so user first and that I'll print out their actual name instead of this weirdlooking object so there we go but now what we have to do clean up my code a little bit is this so you know that I said that basically this action right here is a function well that was kind of like the action is actually the part that gets returned the actual function is called the action creator so I'll finish this in then I'll explain it's it really doesn't matter that much is just terminology but I figured I might as well explain what's going on so the action itself is made up of two parts let me show you my diagram the first part is a type and the type is really just a string that explains what happened like a new movie button clicked user name clicked slider removed any way to describe what happened to your application now the second part is the payload or any information that you need to give your app in this case we're just going to go ahead and give it the user object so they have access to whatever user they clicked so if I click Jovi's name we're just going to pass the user object in to or as the payload so I'll go ahead and finish this and then you guys are going to see what's going on so the type again this can be anything you want for the app whenever it needs to handle it I'm just going to say user select it so that's the type of action that occurred the user got selected the user got clicked on now again the payload I'm just going to pass in user and you can actually name this parameter anything you want you can name it data it's just kind of convention name it payload all right so ten seconds ago I was saying something about this isn't actually the action it's actually the action creator what the heck was I talking about technically in a react the correct terminology is the action is made up of two parts it's an object with the type and a payload so this whatever turns this is actually the action now this entire function is called an action creator so again you have a function that you're going to be calling from your application and it's called the action creator and it's job is just to return an object called the action alright so that is fantastic so now let's actually go ahead and use this action creator or this function that we just made so over in your user list of course what we need to do is we need to hook it up so we're going to put a function or event handler on this list item and we're going to pretty much hook it up to this function right here so whenever they hit this we're going to say on click call this function so what we need to do first is just go ahead and import everything so we're going to import select user from how do you get there up to actions index alright and a semicolon and okay so this select user is equal to whatever this exported boom this function so here's the thing and this is the only other thing that may throw you for a little bit of a loop so we can just say on click call select user and you may think that that would be perfect but here's the thing see we are hooking up our react application to work with redux so if we do that then we kind of bypass the important stuff so it will work but it isn't hooked up properly to be used in a redux application so in order to use it in a Redux application we just can't pass it in directly what we need to do is we need to connect it to this container which is the smart component so again we can pass in to the component directly but to hook it up with Redux we actually need to hook it up to this connect function right here and it's almost the exact same is this just another function actually let me add it below so what we do is we need to make a fun function called match dispatch to props and it sounds confusing they name these functions so confusing but they're actually really easy to understand it's annoying miss to match dispatch to props okay so let me go ahead and type this to make sure I don't have any typos and check this out so all we're doing right here is instead of just passing it in directly we're just going to pass it in as a prop so you know before all we did right here is we pretty much said all right whatever the state is we're going to pass that in as a prop well in order to use it in our component we also need to pass it in as a prop so we're going to take this function pass it in as a prop and we're going to hook it up pretty much so we can use it with the redux in dispatch just pretty much is a fancy way of saying call a function that's it alright so what we're going to do is we're going to return bind action creators in bind this is just a synonym for connect in action creators remember I said it's just another name for a function so we're pretty much going to connect this function see it's so easy why didn't you everything so confusing and whenever we pass in as a prop we can actually just use the same exact function name so it's super easy so the prop select user is equal to the function select user easy enough now just for housekeeping the last parameter that we have to call them this is dispatch and again like I said that is just some something that happens behind the scenes with redux to actually call this function alright so in order to actually throw this in right after match state the props you just throw this function and that's it so again all we did is whenever the user does something to your application they need to generate in action and an action is just a way of telling your entire application that something happened so we made an action called user selected and of course this entire function that gets called is called the action creator because it creates this object now whenever we pass it in to our component or container since it's kind of smart now we're just going to pass it in as a property with the same name so we don't get confused or anything like that so now in here we have access to a property called select user which is essentially this function boom roasted so we can go ahead and call that right now actually so let me clean up this code a little bit so we can see what's going on entertaining myself over here all right so the key is equal to the user ID still and I'll say on on clock skin all right so on click what do we want to do we just want to say this dot props dot select user and remember this function it actually takes in the user object so make sure just the pass in the entire user and not the user ID or username or anything like that and now listener if your function and got object and that is because I am an idiot it just needs to be alright so make sure they actually treat this as a function and not a property since it is a function through bulky art so now if I rebuild this hopefully if it in do anything else wrong whenever we click these we bump this up check this out you clicked on user Bucky Joe be Matty Joe be Bucky tomato tomahto so what we did is we successfully hooked up in action creator to a user event so now whenever they click this it calls the action creator and in essence we know that it's creating this action or this object because we have this line of code that is running successfully so now that we can create actions using user events what is the next piece of the puzzle well now we have to figure out how to pipe this off to a reducer what the heck of reducer is and why we need it so that ladies and gentlemen is what we're going to be doing in the next tutorial and it's going to be awesome I bet you guys can't wait the suspense is killing you so yes thank you guys for watching and I'll see you next time
