With timestamps:

00:00 - of each field value so you can see that
00:02 - MySQL returned an empty result set so
00:05 - now let's go ahead and search for um
00:08 - Billy for example so Billy on the left
00:10 - hand side and then a wild card for the
00:12 - rest of the content oh sorry I didn't
00:13 - mean to uh do that uh click on go and
00:17 - you can see it returns Billy Garrett so
00:18 - you can see how we can chop and change
00:20 - this wild card around in order to um
00:23 - produce specific results from specific
00:25 - places um and uh use well basically
00:28 - using the wild card so now let's um take
00:30 - this example of um this now let's search
00:33 - for G and uh our wild card is on either
00:37 - side so G can be contained anywhere in
00:40 - our um in our uh field name so let's
00:44 - click go you can see it's returned Alex
00:47 - Garrett Dale Garrett and Billy Garrett
00:49 - but it hasn't returned Alex
00:52 - Malcolm because Alex Malcolm doesn't
00:54 - contain a g anywhere in it so if you
00:56 - were to create say a search feature in
00:59 - PHP which we'll be doing a bit later on
01:01 - in the tutorial and you were to be um
01:03 - you were to be searching for um a name
01:06 - you would probably use the wild card on
01:07 - either side because if the user was to
01:09 - search for Alex for example and they
01:11 - were to click go you could see that
01:13 - they're produced with all results that
01:16 - the first name is Alex or Alex is found
01:18 - anywhere in this string now if they were
01:20 - to um search for say Alex Garett on its
01:23 - own then they'll automatically be be
01:26 - returned with the value that equals Alex
01:27 - Garrett because the wild card is on
01:29 - either side leaving the middle content
01:31 - as the result found so now we can also
01:34 - do um we can also say where it were not
01:39 - like so we're not like uh G um as we
01:43 - explain as I explained before the only
01:45 - result the with a wild card on either
01:47 - side and G that wasn't returned was Alex
01:49 - Malcolm so this essentially reverses our
01:52 - condition so if we click go we're uh
01:54 - we're given the result Alex
01:56 - Malcolm okay so that's uh using the not
01:59 - key word uh with the like or the not
02:02 - operator with the like condition what we
02:04 - can also do is we can say like and we
02:07 - can specify an underscore so like I said
02:09 - before we could say where um like equals
02:12 - Alex and then we could say G underscore
02:16 - a r r e t TT sorry no uh there so
02:21 - wherever um like is this and then we
02:23 - fill in somewhere with the G uh so let's
02:26 - click go and click go copy and paste
02:28 - this in first the clipboard
02:30 - and you can see we've returned Alex
02:32 - Garett so we can see that we can either
02:35 - search using a wild card on either side
02:37 - or we can use the underscore uh to
02:40 - specify exactly the character uh or the
02:43 - amount of characters so we could we can
02:45 - double up this uh we can double or
02:47 - triple up this uh um underscore so we
02:49 - could say that as well let's click
02:52 - go you can see that that's also returned
02:54 - Alex Garett so you can use um an
02:56 - underscore to search for a specific
02:58 - character um as well so now let's put
03:01 - this into practice we want to uh inside
03:04 - PHP create a small uh search engine if
03:07 - you like that is going to search these
03:09 - names so what our user is going to do is
03:12 - they're going to be um presented with a
03:14 - a text area or a text box rather an
03:18 - input field where they can input a name
03:20 - and then they can uh then they can be
03:22 - returned the results based on what
03:23 - they've typed in so let's go ahead and
03:25 - connect to our database first of all we
03:27 - have this connect. in.php which we've
03:28 - used in previous examples so let's go
03:31 - ahead and require that into our
03:34 - code okay so let's double check that
03:36 - everything's working by refreshing we've
03:38 - connected to our database successfully
03:41 - now let's come down and uh before we
03:42 - actually start on the PHP code we'll
03:44 - create the form so form action equals
03:47 - and Method equals something so the
03:49 - method is post and the action we're
03:51 - going back to index.php so it's basic
03:54 - form submission if you don't already
03:55 - know how to do this then there are
03:57 - tutorials on it uh for myself and other
03:59 - people so we want a name and then we're
04:03 - specify we're giving the user an area to
04:06 - type in a name so the text uh the input
04:08 - typ ex text and the name we're going to
04:11 - say um search uncore name uh let's also
04:15 - give them a submit button that they can
04:17 - press when they when they're finished so
04:19 - uh value equals and uh we could say
04:22 - search in this case I guess okay so uh
04:25 - now what we need to do is pick this uh
04:27 - value up from PHP so let's just double
04:29 - check that everything works we've got
04:31 - our name we've got a text area here
04:33 - where we can type a name to search we
04:34 - can click search and that submits
04:36 - straight back to
04:37 - index.php so let's go ahead and check if
04:40 - the form has been submitted first of all
04:42 - then we're going to check whether the
04:43 - search name field is empty or not and
04:45 - then after that we're going to actually
04:47 - process our query uh inside of our
04:49 - database

Cleaned transcript:

of each field value so you can see that MySQL returned an empty result set so now let's go ahead and search for um Billy for example so Billy on the left hand side and then a wild card for the rest of the content oh sorry I didn't mean to uh do that uh click on go and you can see it returns Billy Garrett so you can see how we can chop and change this wild card around in order to um produce specific results from specific places um and uh use well basically using the wild card so now let's um take this example of um this now let's search for G and uh our wild card is on either side so G can be contained anywhere in our um in our uh field name so let's click go you can see it's returned Alex Garrett Dale Garrett and Billy Garrett but it hasn't returned Alex Malcolm because Alex Malcolm doesn't contain a g anywhere in it so if you were to create say a search feature in PHP which we'll be doing a bit later on in the tutorial and you were to be um you were to be searching for um a name you would probably use the wild card on either side because if the user was to search for Alex for example and they were to click go you could see that they're produced with all results that the first name is Alex or Alex is found anywhere in this string now if they were to um search for say Alex Garett on its own then they'll automatically be be returned with the value that equals Alex Garrett because the wild card is on either side leaving the middle content as the result found so now we can also do um we can also say where it were not like so we're not like uh G um as we explain as I explained before the only result the with a wild card on either side and G that wasn't returned was Alex Malcolm so this essentially reverses our condition so if we click go we're uh we're given the result Alex Malcolm okay so that's uh using the not key word uh with the like or the not operator with the like condition what we can also do is we can say like and we can specify an underscore so like I said before we could say where um like equals Alex and then we could say G underscore a r r e t TT sorry no uh there so wherever um like is this and then we fill in somewhere with the G uh so let's click go and click go copy and paste this in first the clipboard and you can see we've returned Alex Garett so we can see that we can either search using a wild card on either side or we can use the underscore uh to specify exactly the character uh or the amount of characters so we could we can double up this uh we can double or triple up this uh um underscore so we could say that as well let's click go you can see that that's also returned Alex Garett so you can use um an underscore to search for a specific character um as well so now let's put this into practice we want to uh inside PHP create a small uh search engine if you like that is going to search these names so what our user is going to do is they're going to be um presented with a a text area or a text box rather an input field where they can input a name and then they can uh then they can be returned the results based on what they've typed in so let's go ahead and connect to our database first of all we have this connect. in.php which we've used in previous examples so let's go ahead and require that into our code okay so let's double check that everything's working by refreshing we've connected to our database successfully now let's come down and uh before we actually start on the PHP code we'll create the form so form action equals and Method equals something so the method is post and the action we're going back to index.php so it's basic form submission if you don't already know how to do this then there are tutorials on it uh for myself and other people so we want a name and then we're specify we're giving the user an area to type in a name so the text uh the input typ ex text and the name we're going to say um search uncore name uh let's also give them a submit button that they can press when they when they're finished so uh value equals and uh we could say search in this case I guess okay so uh now what we need to do is pick this uh value up from PHP so let's just double check that everything works we've got our name we've got a text area here where we can type a name to search we can click search and that submits straight back to index.php so let's go ahead and check if the form has been submitted first of all then we're going to check whether the search name field is empty or not and then after that we're going to actually process our query uh inside of our database
