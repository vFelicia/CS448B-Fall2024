With timestamps:

00:00 - hi this is Alex from PHP academy' de org
00:02 - and this is a PHP video tutorial for the
00:05 - new Boston now in this tutorial we're
00:08 - going to be connecting to our database
00:09 - but we're going to be using a class to
00:12 - do this and we're also going to be using
00:13 - a constructor to initiate some variables
00:16 - first of all when we initiate this class
00:19 - when we create a new instance of this
00:21 - class so what we're doing is we're
00:23 - taking a few things that we've learnt
00:25 - already and we're applying them into a
00:27 - real-life situation or real-life
00:29 - application rather so the first thing I
00:32 - want to do is obvious I'm going to
00:34 - create a new class so this class is
00:36 - going to be called database connect so
00:39 - let's open that up into our block so we
00:41 - can start writing what we need inside of
00:43 - it
00:44 - now the first thing we need is a
00:46 - constructor and what this is going to do
00:48 - is it's going to take the host name the
00:50 - username and the password
00:51 - and it's going to apply this to a method
00:54 - inside of our class so we're only
00:56 - working with one class here but we're
00:59 - using a constructor first of all to take
01:01 - in some variables and then what we're
01:04 - doing is we're using a method inside of
01:06 - our class to actually connect to the
01:07 - database now if the database connect
01:10 - successfully we're going to return true
01:12 - and then in the constructor we're going
01:14 - to rotate this value we're going to
01:16 - return either true or false from the
01:17 - method and in the constructor we're
01:20 - going to pick up on either this true or
01:21 - false value and then echo if we've
01:23 - successfully connected or if we have
01:25 - them so it's a bit of a long way round
01:28 - of things however what we're actually
01:29 - doing is practicing that's the main
01:32 - thing we're practicing okay so the first
01:34 - thing we need to do is create our
01:36 - constructor so I've got here I'm going
01:38 - to say public function two underscores
01:41 - and Constructicons
01:47 - strucked okay so remember the
01:50 - parentheses at the end we're going to
01:52 - put our arguments in there in a moment
01:54 - and then our block here remember that as
01:56 - well so if you don't remember what a
01:59 - construct does let me just demonstrate
02:01 - let's just echo out hello now let's come
02:05 - down here and create a new instance of
02:07 - our class by saying connection equals
02:09 - new database connect now what this does
02:14 - is is as soon as we initiate this class
02:17 - as soon as we create a new instance of
02:19 - it this code inside this block will be
02:22 - run that's basically what we're looking
02:24 - at when we see this constructor here so
02:26 - you can see that we've run the text
02:28 - hello however if this was to be a normal
02:30 - function or normal method we wouldn't
02:33 - automatically echo anything out so let's
02:36 - get rid of that and let's get rid of
02:38 - that then we need to think about what
02:40 - parameters we need to pass through into
02:42 - our into our class as it's created so we
02:47 - need the DB host which is the database
02:49 - host and you can name these anything I'm
02:52 - just calling them disks up this is what
02:53 - I'm used to DB username and DB password
02:58 - okay
02:59 - so let's give this a test so let's echo
03:01 - out the DB user the DB host sorry and
03:07 - append a break onto that and the DB
03:11 - username append another break onto that
03:14 - and the DB password so we're basically
03:18 - now testing when we create the new
03:21 - instance of our class our database
03:24 - connects class we're testing that the
03:26 - parameters are being sent through
03:27 - correctly so let's say connection equals
03:31 - new database Connect now in here we need
03:37 - to submit a supply some parameters if we
03:39 - don't you'll see that we'll get an error
03:41 - says here blah blah blah missing
03:43 - argument one two and three and then
03:45 - we've got an undefined variable in here
03:47 - as well because we haven't supplied the
03:49 - arguments these are all undefined
03:51 - variables and the argument error came
03:53 - from here which you could see missing
03:56 - argument
03:57 - so let's supply it with the arguments
04:00 - that requires we've got one two and
04:02 - three the first one I'm just going to
04:05 - say localhost I'm going to say rue and
04:07 - I'm going to say password
04:08 - so let's go and refresh and you can see
04:12 - that that's simply taken the constructor
04:14 - and it's echoed out the arguments that
04:17 - we've passed into it so we know that
04:19 - that works now get rid of this now what
04:24 - we're essentially going to be doing here
04:25 - is performing a check to see if another
04:28 - method returns a true or false value
04:29 - let's go ahead and create that method
04:32 - now so we know exactly what we're doing
04:33 - now the method is going to be called
04:37 - connect and inside this method we're
04:40 - going to be making use of the MySQL
04:43 - connect function so what we're
04:46 - essentially doing is we're saying if and
04:48 - we're saying MySQL connect
04:50 - and then we're supplying it with a few
04:52 - arguments in here which are going to be
04:55 - gained from inside here so it's getting
04:57 - quite complicated and multi-level now
04:59 - but hopefully by the end of this you'll
05:01 - understand what's going on if this MySQL
05:04 - Connect is true then we're going to
05:05 - return the true value which is going to
05:07 - be picked up by our constructor so we've
05:10 - created the skeleton outline for our
05:12 - connect method now let's go let's apply
05:16 - these parameters so it's DB host DB
05:20 - username and DB password so what this
05:24 - will do is this will allow us to feed in
05:26 - some parameters or arguments into this
05:28 - connect method and we're going to do
05:30 - that inside our block code here so what
05:32 - we're going to do is we're going to say
05:33 - if this and inside this connect then we
05:41 - sang DB host DB username DB password
05:49 - if this is true do something otherwise
05:53 - do something else so in here I'm going
05:56 - to say if not if this doesn't return a
06:00 - true value so if the Kinect doesn't
06:03 - return a true value it's safe to say
06:05 - that the connection has failed so we're
06:10 - going to put connection failed otherwise
06:11 - they're going to echo connected to and
06:15 - then we're just going to display the
06:16 - data base house that were connected to

Cleaned transcript:

hi this is Alex from PHP academy' de org and this is a PHP video tutorial for the new Boston now in this tutorial we're going to be connecting to our database but we're going to be using a class to do this and we're also going to be using a constructor to initiate some variables first of all when we initiate this class when we create a new instance of this class so what we're doing is we're taking a few things that we've learnt already and we're applying them into a reallife situation or reallife application rather so the first thing I want to do is obvious I'm going to create a new class so this class is going to be called database connect so let's open that up into our block so we can start writing what we need inside of it now the first thing we need is a constructor and what this is going to do is it's going to take the host name the username and the password and it's going to apply this to a method inside of our class so we're only working with one class here but we're using a constructor first of all to take in some variables and then what we're doing is we're using a method inside of our class to actually connect to the database now if the database connect successfully we're going to return true and then in the constructor we're going to rotate this value we're going to return either true or false from the method and in the constructor we're going to pick up on either this true or false value and then echo if we've successfully connected or if we have them so it's a bit of a long way round of things however what we're actually doing is practicing that's the main thing we're practicing okay so the first thing we need to do is create our constructor so I've got here I'm going to say public function two underscores and Constructicons strucked okay so remember the parentheses at the end we're going to put our arguments in there in a moment and then our block here remember that as well so if you don't remember what a construct does let me just demonstrate let's just echo out hello now let's come down here and create a new instance of our class by saying connection equals new database connect now what this does is is as soon as we initiate this class as soon as we create a new instance of it this code inside this block will be run that's basically what we're looking at when we see this constructor here so you can see that we've run the text hello however if this was to be a normal function or normal method we wouldn't automatically echo anything out so let's get rid of that and let's get rid of that then we need to think about what parameters we need to pass through into our into our class as it's created so we need the DB host which is the database host and you can name these anything I'm just calling them disks up this is what I'm used to DB username and DB password okay so let's give this a test so let's echo out the DB user the DB host sorry and append a break onto that and the DB username append another break onto that and the DB password so we're basically now testing when we create the new instance of our class our database connects class we're testing that the parameters are being sent through correctly so let's say connection equals new database Connect now in here we need to submit a supply some parameters if we don't you'll see that we'll get an error says here blah blah blah missing argument one two and three and then we've got an undefined variable in here as well because we haven't supplied the arguments these are all undefined variables and the argument error came from here which you could see missing argument so let's supply it with the arguments that requires we've got one two and three the first one I'm just going to say localhost I'm going to say rue and I'm going to say password so let's go and refresh and you can see that that's simply taken the constructor and it's echoed out the arguments that we've passed into it so we know that that works now get rid of this now what we're essentially going to be doing here is performing a check to see if another method returns a true or false value let's go ahead and create that method now so we know exactly what we're doing now the method is going to be called connect and inside this method we're going to be making use of the MySQL connect function so what we're essentially doing is we're saying if and we're saying MySQL connect and then we're supplying it with a few arguments in here which are going to be gained from inside here so it's getting quite complicated and multilevel now but hopefully by the end of this you'll understand what's going on if this MySQL Connect is true then we're going to return the true value which is going to be picked up by our constructor so we've created the skeleton outline for our connect method now let's go let's apply these parameters so it's DB host DB username and DB password so what this will do is this will allow us to feed in some parameters or arguments into this connect method and we're going to do that inside our block code here so what we're going to do is we're going to say if this and inside this connect then we sang DB host DB username DB password if this is true do something otherwise do something else so in here I'm going to say if not if this doesn't return a true value so if the Kinect doesn't return a true value it's safe to say that the connection has failed so we're going to put connection failed otherwise they're going to echo connected to and then we're just going to display the data base house that were connected to
