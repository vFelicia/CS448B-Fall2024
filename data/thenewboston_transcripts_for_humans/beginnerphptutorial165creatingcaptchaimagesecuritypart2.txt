With timestamps:

00:00 - okay so we do need to bring in if
00:03 - statement here not just yet but soon and
00:06 - this will ensure that we maintain the
00:09 - same value after we've submitted our
00:11 - form
00:11 - but once we've included our form then we
00:15 - won't need to worry about it so we've
00:17 - got our text what do we need to do next
00:20 - well we need to create a variable with
00:24 - our font size so and their mind this is
00:27 - experimental so the font size depends on
00:31 - obviously what font you're using so for
00:33 - now I'm going to set this to a 30 and
00:36 - but we might want to change it later on
00:38 - what we also want to do is set the the
00:42 - width of the height and the image so
00:45 - we'll pull out here and we'll come down
00:46 - a couple more say let's call the
00:50 - variable image height and image width
00:52 - we'll start with width image width let's
00:54 - say we'll give it a width of 200 and
00:59 - image height oops sorry
01:03 - let's say 40 for now but obviously we're
01:08 - going to change this around depending on
01:09 - how our text is output and just so we
01:12 - can get a feel of everything the way it
01:15 - works and how it looks so the next thing
01:18 - is to create the image itself so let's
01:20 - create a variable called image and we're
01:22 - going to be using the image create
01:25 - function as part of the GD library and
01:29 - the image create function takes two
01:31 - parameters this is going to be the width
01:32 - and the height so obviously we've
01:34 - already defined this up here so we just
01:38 - put image width and image height in okay
01:42 - so now we've generated the image and the
01:44 - the width and the height of that we need
01:47 - to allocate a background color and a
01:49 - foreground color now my background color
01:51 - is going to be white even though we even
01:55 - though we are working the white
01:56 - background anyway we still need to
01:58 - define this just so it we ensure that it
02:01 - stays white so we use the image color
02:05 - allocate function here and we use this
02:07 - on our own we don't set it to any
02:09 - variable and this ensures it just
02:11 - applies it to the background backdrop of
02:13 - our document
02:13 - or our image rather so let's go ahead
02:17 - and say image color allocate and we're
02:23 - allocating this to the image so we've
02:25 - already opened this image here we've
02:27 - already created this image so we're
02:28 - applying it to image and we specify this
02:31 - in an RGB value so we've got three
02:34 - integers and this is for white this is
02:36 - obviously going to be 255 255 and 255 if
02:40 - you already know how to work with RGB
02:42 - values that's great you'll know that
02:43 - white is 255 255 255 and black is zero
02:48 - zero zero which is what we're going to
02:49 - be doing for our foreground color or our
02:51 - text color but if you not sure about
02:54 - these look them up try convertor if
02:57 - you're used to hexadecimal color values
02:59 - etc etc okay so now with regards to the
03:04 - text color we need to look at setting
03:07 - this into a variable because what we
03:10 - want to do is when we use this image
03:11 - TTFN text function we need to supply a
03:14 - text color whereas we don't need to
03:17 - supply the background color that's why
03:19 - we've done it without a variable
03:21 - declaration so let's create a new
03:24 - variable called text underscore color
03:26 - and we're going to use the image color
03:29 - allocate function once again and we're
03:32 - applying this to image but this time
03:34 - we're using zero zero zero so our text
03:37 - color is going to be zero zero zero
03:38 - which is black okay so the next thing to
03:42 - do is we want to use our image TTFN text
03:47 - function to ensure that we are
03:49 - outputting the the secure session
03:53 - properly and we're going to preview this
03:55 - from index dot PHP we're not going to
03:57 - preview it from generator PHP so let's
03:59 - start with the image TTFN text function
04:02 - now it takes a number of parameters so
04:04 - as we go along I'll explain each one
04:07 - more or less each one the ones that are
04:09 - relevant to us the first one's easy it's
04:11 - just the image that we're working with
04:13 - at the moment as we've specified here
04:15 - here
04:16 - and that's it so we're just supplying
04:19 - the image that we're working with now we
04:21 - want the font size which we predefined
04:23 - up there so we can just pop that
04:24 - straight in this is the reason we've
04:27 - predefined our variables so they can
04:29 - change dynamically as well
04:30 - next is the angle which we don't need to
04:32 - worry about in this case and now is the
04:34 - positioning so I'm going to say 15 from
04:37 - the from X sorry and v and 30 from Y we
04:45 - can play around with these values we're
04:46 - going to play around with the font size
04:47 - the width and the height of the document
04:50 - and these as well just so we can get in
04:52 - the middle of the of the little area
04:55 - that we've created okay so the next is
04:59 - the text color so we've already supplied
05:02 - that in a variable just a moment ago so
05:04 - we can say text underscore color there
05:06 - okay and now what we want to do is the
05:10 - the font file itself
05:13 - now I've already created the font file
05:15 - or rather copied it over from my windows
05:18 - fonts folder and I've just I've just
05:20 - called it font
05:22 - TTFN so make sure you do this copy over
05:25 - the font that you want to use and this
05:27 - one's Cali hand
05:28 - so when copy this over from your fonts
05:33 - folder and just put it in the same
05:35 - directory or in another directory and
05:37 - you're going to specify it in this next
05:38 - parameter so I'm just going to type in
05:40 - font TTFN simple
05:42 - okay the next is the text itself because
05:45 - you can probably see we haven't actually
05:46 - defined what text so we've got the text
05:49 - in a variable up here called text so we
05:51 - simply just put that in there and that's
05:53 - done we've only got one more thing to do
05:55 - and that is use the image JPEG function
05:59 - and what this is going to do is going to
06:01 - finalize everything and it's going to
06:02 - write out our image onto this page so it
06:05 - can be displayed as an image so image
06:07 - JPEG image this function can also be
06:10 - used to save the file but in this case
06:13 - we're just outputting it to the page
06:15 - so let's go to index dot PHP and let's
06:18 - come under here and create an image an
06:22 - image property or element if you like
06:25 - and we're going to reference this to
06:27 - generate PHP and the reason we can do
06:30 - this is remember generate PHP is now
06:33 - even though it has its PHP extension
06:35 - it's now an image file so hopefully
06:38 - what's going to happen now considering
06:40 - everything in here works or if it does
06:42 - work we're going to view something out
06:45 - on our page because we're setting the
06:48 - session here and in the generator PHP
06:50 - file we're reading it in here so let's
06:54 - start open up our browser and see if
06:56 - this works let's go over to index.php
07:00 - okay so it hasn't worked so we need to
07:03 - work out exactly why it hasn't worked so
07:07 - let's have a look inside I'll generate a
07:09 - PHP file I know what we haven't done is
07:14 - even though we're declaring our session
07:16 - up here we're starting our session
07:17 - rather if you like in our generator PHP
07:20 - file we still need to start our session
07:24 - and the reason for this is that were
07:26 - accessing the session data here as well
07:28 - and although we're including it in here
07:30 - as an image is still regarded as its own
07:33 - file so remember to include sessions
07:35 - start at the end of it at the start of
07:36 - this let's go back and refresh

Cleaned transcript:

okay so we do need to bring in if statement here not just yet but soon and this will ensure that we maintain the same value after we've submitted our form but once we've included our form then we won't need to worry about it so we've got our text what do we need to do next well we need to create a variable with our font size so and their mind this is experimental so the font size depends on obviously what font you're using so for now I'm going to set this to a 30 and but we might want to change it later on what we also want to do is set the the width of the height and the image so we'll pull out here and we'll come down a couple more say let's call the variable image height and image width we'll start with width image width let's say we'll give it a width of 200 and image height oops sorry let's say 40 for now but obviously we're going to change this around depending on how our text is output and just so we can get a feel of everything the way it works and how it looks so the next thing is to create the image itself so let's create a variable called image and we're going to be using the image create function as part of the GD library and the image create function takes two parameters this is going to be the width and the height so obviously we've already defined this up here so we just put image width and image height in okay so now we've generated the image and the the width and the height of that we need to allocate a background color and a foreground color now my background color is going to be white even though we even though we are working the white background anyway we still need to define this just so it we ensure that it stays white so we use the image color allocate function here and we use this on our own we don't set it to any variable and this ensures it just applies it to the background backdrop of our document or our image rather so let's go ahead and say image color allocate and we're allocating this to the image so we've already opened this image here we've already created this image so we're applying it to image and we specify this in an RGB value so we've got three integers and this is for white this is obviously going to be 255 255 and 255 if you already know how to work with RGB values that's great you'll know that white is 255 255 255 and black is zero zero zero which is what we're going to be doing for our foreground color or our text color but if you not sure about these look them up try convertor if you're used to hexadecimal color values etc etc okay so now with regards to the text color we need to look at setting this into a variable because what we want to do is when we use this image TTFN text function we need to supply a text color whereas we don't need to supply the background color that's why we've done it without a variable declaration so let's create a new variable called text underscore color and we're going to use the image color allocate function once again and we're applying this to image but this time we're using zero zero zero so our text color is going to be zero zero zero which is black okay so the next thing to do is we want to use our image TTFN text function to ensure that we are outputting the the secure session properly and we're going to preview this from index dot PHP we're not going to preview it from generator PHP so let's start with the image TTFN text function now it takes a number of parameters so as we go along I'll explain each one more or less each one the ones that are relevant to us the first one's easy it's just the image that we're working with at the moment as we've specified here here and that's it so we're just supplying the image that we're working with now we want the font size which we predefined up there so we can just pop that straight in this is the reason we've predefined our variables so they can change dynamically as well next is the angle which we don't need to worry about in this case and now is the positioning so I'm going to say 15 from the from X sorry and v and 30 from Y we can play around with these values we're going to play around with the font size the width and the height of the document and these as well just so we can get in the middle of the of the little area that we've created okay so the next is the text color so we've already supplied that in a variable just a moment ago so we can say text underscore color there okay and now what we want to do is the the font file itself now I've already created the font file or rather copied it over from my windows fonts folder and I've just I've just called it font TTFN so make sure you do this copy over the font that you want to use and this one's Cali hand so when copy this over from your fonts folder and just put it in the same directory or in another directory and you're going to specify it in this next parameter so I'm just going to type in font TTFN simple okay the next is the text itself because you can probably see we haven't actually defined what text so we've got the text in a variable up here called text so we simply just put that in there and that's done we've only got one more thing to do and that is use the image JPEG function and what this is going to do is going to finalize everything and it's going to write out our image onto this page so it can be displayed as an image so image JPEG image this function can also be used to save the file but in this case we're just outputting it to the page so let's go to index dot PHP and let's come under here and create an image an image property or element if you like and we're going to reference this to generate PHP and the reason we can do this is remember generate PHP is now even though it has its PHP extension it's now an image file so hopefully what's going to happen now considering everything in here works or if it does work we're going to view something out on our page because we're setting the session here and in the generator PHP file we're reading it in here so let's start open up our browser and see if this works let's go over to index.php okay so it hasn't worked so we need to work out exactly why it hasn't worked so let's have a look inside I'll generate a PHP file I know what we haven't done is even though we're declaring our session up here we're starting our session rather if you like in our generator PHP file we still need to start our session and the reason for this is that were accessing the session data here as well and although we're including it in here as an image is still regarded as its own file so remember to include sessions start at the end of it at the start of this let's go back and refresh
