With timestamps:

00:00 - hi this is Alex from PHP academy' dog
00:02 - back with another tutorial for the new
00:04 - Boston now in this tutorial we've
00:07 - already looked at or in the past
00:09 - tutorial we've already looked at
00:10 - connecting to our database now to make
00:16 - this a lot more efficient so we can
00:17 - include it where we require it I'm just
00:20 - going to get rid of everything in our
00:22 - index dot PHP file and I'm going to
00:24 - create a new file make sure this is
00:27 - enclosed in PHP tags and the reason I'm
00:30 - doing this is I'm now going to save it
00:33 - as connecting PHP now what I can do with
00:38 - this now is whenever I open up a new
00:40 - page let's say it might be index.php or
00:43 - something else dot PHP all I can do is
00:47 - at the top I can require connect dot PHP
00:51 - and this way we've required this file to
00:55 - be the first will exist because require
00:58 - will kill the rest of the page if this
00:59 - can't be found
01:00 - second of all connect connects to our
01:02 - database so now what we can do is under
01:04 - here we can start doing things to allow
01:06 - us to grab some data from our database
01:10 - okay so let's assume that we've
01:12 - connected to our database properly let's
01:15 - come into database and refresh from the
01:17 - last tutorial oK we've got nothing up so
01:20 - under here let's echo maybe okay out
01:24 - just so we know that it's working let's
01:26 - refresh okay so we've got okay so the
01:29 - first thing we know is that we've
01:30 - required the file correctly the file
01:32 - exists
01:33 - second of all we know that we've
01:34 - connected properly because we haven't
01:35 - killed here so this should always come
01:40 - at the top of your page so let's go to a
01:45 - PHP myadmin and inside this a database
01:48 - I'm going to insert some some data so oh
01:54 - well we need a table first I'm going to
01:57 - call this table food a number of fields
02:00 - I'm going to say let's say we need an ID
02:03 - field we need a the name of the food and
02:06 - I'm going to say the calories and
02:10 - whether it's unhealthy or healthy
02:12 - so I'm going to have four fields so
02:15 - let's create these fields we're going to
02:17 - ID with is going to be int we're going
02:22 - to have the indexes primary because this
02:24 - is a unique and AI which is auto
02:26 - increment it's going to be yes so we
02:28 - want this Auto increment next is going
02:30 - to be food and then we're going to say
02:32 - calories and then we're going to say I'm
02:35 - going to call this healthy or unhealthy
02:36 - I'm going to call it hu in fact let's
02:41 - make it a bit easier to stay healthy and
02:43 - healthy and this is going to be equal to
02:47 - I'm going to say a varchar' length one
02:52 - so if the foods healthy this value is
02:56 - going to equal H if it's unhealthy it's
02:58 - going to equal you the food I'm going to
03:00 - save our chart of let's say 25 and
03:04 - calories is going to stay an int because
03:07 - we're always going to have an integer
03:08 - number for the amount of calories in the
03:10 - food so let's go along down here and I'm
03:15 - going to click Save so let's hopefully
03:17 - we're going to return yet we've returned
03:19 - table has been created so let's browse
03:22 - we can't browse the data but we can see
03:24 - the structure got ID as a primary key in
03:26 - into food of avatar 25 calories in
03:29 - healthy unhealthy varchar' 1 so storing
03:33 - either an H or au for this ok so let's
03:36 - go and insert a row of data I'm going to
03:40 - put the food remember the ID can be
03:42 - blank because that's automatically gonna
03:43 - equal 1 the food I'm going to say pizza
03:47 - the calories I'm going to say a thousand
03:49 - an unhealthy or healthy I'm going to say
03:52 - u for unhealthy let's just uncheck this
03:57 - ignore mal insert another row food let's
04:00 - say salad calories I'm going to say 200
04:04 - and I'm going to say it's healthy so I'm
04:05 - going to put an H so let's click on go
04:08 - that's inserted them two rows that's
04:10 - successfully done now we can click
04:12 - browse and view this data so we can see
04:15 - that we've got an ID which is unique
04:16 - we've got the food name the calorie
04:18 - amount and healthy or unhealthy so let's
04:21 - say I want to select all the data and
04:24 - display
04:25 - now to select all data we need to first
04:28 - perform a query as we've discussed the
04:31 - needs to select all the data so I'm
04:33 - going to create a variable called query
04:36 - and this is going to be equal to some
04:38 - string text so I'm using double
04:40 - quotation marks because remember we're
04:42 - using singles inside the inside the
04:45 - query so this query is going to be
04:48 - select now we need to mention the field
04:50 - names so select I'm going to say food
04:53 - and calories so food calories separated
04:59 - by a comma
04:59 - from up with a space so from and this
05:03 - table is called food so we need to
05:05 - mention that where in fact we can encase
05:10 - these in here as well so we're selecting
05:16 - the filled food and calories which is
05:18 - what we're going to display if we needed
05:20 - to display for example the ID as well we
05:23 - choose ID but we don't we just want to
05:25 - we just want to keep that hidden for now
05:27 - so food calories from food wear and I
05:31 - want to say in fact no don't say
05:34 - anything that's it we can specify an
05:37 - order bias we can say order by ID for
05:40 - example that's absolutely fine so order
05:42 - by ID now what we need to do is we need
05:45 - to actually perform the query as far as
05:49 - this goes we haven't actually executed
05:51 - the query within the database we refresh
05:54 - our page you see that nothing's
05:55 - happening we're not actually executing
05:58 - the query so query I'm going to say run
06:02 - equals now we're using this MySQL query
06:06 - function to actually run the query so
06:08 - you can either use the MySQL query
06:10 - function on its own and insert your
06:13 - structured query language in there or
06:15 - what you can do is just then pop that
06:18 - inside of it so we're popping this query
06:21 - in here and then this is running the
06:23 - query ok
06:25 - what we can also do is we can use this
06:28 - or Die
06:30 - but what I'm going to do is I'm going to
06:32 - say and so I've just deleted that I
06:35 - didn't mean to comment that
06:36 - I'm going to say if query run equals
06:42 - MySQL query query then run this block
06:48 - the reason I'm doing this is because if
06:51 - the query is successful this will
06:54 - evaluate to true and then we can
06:55 - continue with our code but I'm going to
06:57 - say otherwise query failed
07:03 - okay so echo query success now what
07:10 - we're not doing is we're not displaying
07:12 - the result of this query just yet we're
07:15 - just performing the query we can use
07:17 - some functions later on to display the
07:20 - results but for now what we're doing is
07:23 - we're just saying query success if this
07:25 - query makes sense and and return
07:27 - something and is structured properly
07:29 - otherwise we're saying query failed

Cleaned transcript:

hi this is Alex from PHP academy' dog back with another tutorial for the new Boston now in this tutorial we've already looked at or in the past tutorial we've already looked at connecting to our database now to make this a lot more efficient so we can include it where we require it I'm just going to get rid of everything in our index dot PHP file and I'm going to create a new file make sure this is enclosed in PHP tags and the reason I'm doing this is I'm now going to save it as connecting PHP now what I can do with this now is whenever I open up a new page let's say it might be index.php or something else dot PHP all I can do is at the top I can require connect dot PHP and this way we've required this file to be the first will exist because require will kill the rest of the page if this can't be found second of all connect connects to our database so now what we can do is under here we can start doing things to allow us to grab some data from our database okay so let's assume that we've connected to our database properly let's come into database and refresh from the last tutorial oK we've got nothing up so under here let's echo maybe okay out just so we know that it's working let's refresh okay so we've got okay so the first thing we know is that we've required the file correctly the file exists second of all we know that we've connected properly because we haven't killed here so this should always come at the top of your page so let's go to a PHP myadmin and inside this a database I'm going to insert some some data so oh well we need a table first I'm going to call this table food a number of fields I'm going to say let's say we need an ID field we need a the name of the food and I'm going to say the calories and whether it's unhealthy or healthy so I'm going to have four fields so let's create these fields we're going to ID with is going to be int we're going to have the indexes primary because this is a unique and AI which is auto increment it's going to be yes so we want this Auto increment next is going to be food and then we're going to say calories and then we're going to say I'm going to call this healthy or unhealthy I'm going to call it hu in fact let's make it a bit easier to stay healthy and healthy and this is going to be equal to I'm going to say a varchar' length one so if the foods healthy this value is going to equal H if it's unhealthy it's going to equal you the food I'm going to save our chart of let's say 25 and calories is going to stay an int because we're always going to have an integer number for the amount of calories in the food so let's go along down here and I'm going to click Save so let's hopefully we're going to return yet we've returned table has been created so let's browse we can't browse the data but we can see the structure got ID as a primary key in into food of avatar 25 calories in healthy unhealthy varchar' 1 so storing either an H or au for this ok so let's go and insert a row of data I'm going to put the food remember the ID can be blank because that's automatically gonna equal 1 the food I'm going to say pizza the calories I'm going to say a thousand an unhealthy or healthy I'm going to say u for unhealthy let's just uncheck this ignore mal insert another row food let's say salad calories I'm going to say 200 and I'm going to say it's healthy so I'm going to put an H so let's click on go that's inserted them two rows that's successfully done now we can click browse and view this data so we can see that we've got an ID which is unique we've got the food name the calorie amount and healthy or unhealthy so let's say I want to select all the data and display now to select all data we need to first perform a query as we've discussed the needs to select all the data so I'm going to create a variable called query and this is going to be equal to some string text so I'm using double quotation marks because remember we're using singles inside the inside the query so this query is going to be select now we need to mention the field names so select I'm going to say food and calories so food calories separated by a comma from up with a space so from and this table is called food so we need to mention that where in fact we can encase these in here as well so we're selecting the filled food and calories which is what we're going to display if we needed to display for example the ID as well we choose ID but we don't we just want to we just want to keep that hidden for now so food calories from food wear and I want to say in fact no don't say anything that's it we can specify an order bias we can say order by ID for example that's absolutely fine so order by ID now what we need to do is we need to actually perform the query as far as this goes we haven't actually executed the query within the database we refresh our page you see that nothing's happening we're not actually executing the query so query I'm going to say run equals now we're using this MySQL query function to actually run the query so you can either use the MySQL query function on its own and insert your structured query language in there or what you can do is just then pop that inside of it so we're popping this query in here and then this is running the query ok what we can also do is we can use this or Die but what I'm going to do is I'm going to say and so I've just deleted that I didn't mean to comment that I'm going to say if query run equals MySQL query query then run this block the reason I'm doing this is because if the query is successful this will evaluate to true and then we can continue with our code but I'm going to say otherwise query failed okay so echo query success now what we're not doing is we're not displaying the result of this query just yet we're just performing the query we can use some functions later on to display the results but for now what we're doing is we're just saying query success if this query makes sense and and return something and is structured properly otherwise we're saying query failed
