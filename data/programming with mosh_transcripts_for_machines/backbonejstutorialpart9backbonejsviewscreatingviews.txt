a backroom view unlike what you might expect is not the page or view itself instead it's the object that is responsible for rendering the content of the view as well as responding to any events raised from there for example clicks drag and drops press keys and so on so backbone views are more like controllers in the classic MVC terms every view has a reference to a Dom element and is responsible for rendering the content of this element as well as responding to any events raised from it let's go ahead and create our first view you creating views is similar to creating models and collections we use the extend method to extend back upon that view let's see what's going on here the render method is where we implement the rendering logic this dollar L is a case jQuery object that contains the views Dom element we are using the jquery HTML method to display a hello world message on the view the convention returned a reference to the view at the end of the render method this helps chaining method calls as you'll see shortly now let's declare an instance of the view you when instantiate in the view were specifying Dom element to which this view should attach to we are doing this by setting the L property to a jQuery selector string in this case we are telling our view that there is an HTML element with the ID of container in our HTML markup this view will be responsible for rendering the content inside the container as well as responding to any events raised from it now let's go to our main that HTML and create this element you okay now let's try it in Chrome there you go we got the hello world message let's inspect the view object not the difference between the Elle and dollar L properties the L property is a jQuery selector that references the Dom element that this view owns the dollar L property is a case jQuery object that contains this Dom element it's faster to use this case jQuery object when we need to reference the Dom element or any of his children as opposed to constructing a jQuery object using the selector every time all right now let's go and make it tiny change to our code I'm going to remove the initialization of the L property let's refresh the page and see what happens the hello word message is gone but let me show you something interesting we're going to inspect the view again okay let's expand a dollar or property note that this property has initialized is referencing a div this means that if you don't specify the Dom element when instantiating a view backbone automatically creates one for the view but this Dom element is in the memory it's not inserted in the HTML markup and that's the reason we don't see the hello world message here let's go ahead and fix this you so we are using the jQuery selector to get the container element and then we use the HTML method to insert the views Dom element inside the container let's try it out there you go so the lesson is every view has a Dom element at all times if you specify a Dom element that exists on the page the view attaches itself to it otherwise the view will create a Dom element this Dom element is by default an empty div let me show this to you so let's inspect this element here now the div here we can overwrite the default and tell the view to create a different kind of HTML element let's see how it works we can use the tag name property to specify the type of HTML element to be created we can also give it a class or even an ID all righty HTML attributes you now let's see the result you note that this time we have a span with the idea of one two three four with the class song and it also has an html5 data attribute one last thing before we finish this lecture earlier I told you we should return a reference to the view at the end of the render method I told you this is used for chaining method calls let me clarify what I meant by not using this technique we can combine these two lines here into something like this because the return value from the render method is a reference to the song view object we can directly access its dollar L property you often see these in backbone code examples so to create a view we extend back on that view and implement the render method every view has a reference to a Dom element and is responsible for rendering anything inside that element are responding to events raised from there we can specify the element but instantiate interview using a jQuery selector if we don't specify the element backbone we'll create one for view this element is in the memory and we need to manually insert it on the page we can customize the Dom element that backbone creates for the view using the tag name class name ID and attributes properties okay so you have seen the basic structure of a view but backbone views are usually but not always used along with backbone models in this example when our view was rendered we saw a static hello world message in the next lecture I will show you how you can pass a model to a view this way we can render the view based on the values of the model's attributes thank you for watching