to become a mobile app developer there are five essential skills let's go over them one by one there are basically two ways to build mobile apps native or crossplatform with Native development we can build an app that runs only on a particular platform like iOS or Android this approach gives us full control over the capabilities of the target platform resulting in great performance and the best user experience however the downside is that if you want to build the same app for a different platform form we have to create a separate project in an entirely different language and ecosystem this means two separate projects and two sets of bugs to fix that's where crossplatform or multiplatform development comes to the rescue with crossplatform development we can reduce development Time by reusing the same code for different platforms and potentially reduce bugs fixing a bug once means it's fixed across multiple platforms now for Native development we have a few options for iOS we can use Objective C which is an older language or Swift which is modern and preferred for Android we can use Java which is a traditional language or cotland which is modern and preferred for crossplatform development the option depends on the framework or toolkit we use there are several crossplatform toolkits like react native flutter cotland multiplatform Maui and a few others let's dive into each one first off we have react native which was released by Facebook in 2015 this toolkit lets you build mobile apps using JavaScript and and react which is a popular library for building web user interfaces some big names using react native include Microsoft Office scype and even Facebook itself then we have flut which is a Google product that came out in 2017 flut uses a programming language called Dart which takes the best parts of JavaScript Java and C some examples of apps built with flutter are eBay Alibaba and Google pay it's really powerful and gaining a lot of traction now let's talk about cotland multiplatform this is the newest player released by jetbrains the same company behind tools like intellig pycharm and webstorm in my opinion the best idees in the world it uses the cotlin programming language which is a modern language inspired by Java apps like McDonald's Netflix and cash app are built with cotton multiplatform finally we have Maui which stands for net multiplatform appui introduced by Microsoft Maui allows you to build native mobile and desktop apps using C and . net these days most companies prefer to use multiplatform development to reduce their costs this means we can rule out native development for now and focus on crossplatform options now which framework is the best well there is no such a thing as the best framework yes there are people out there like our Superstar highly opinionated developer Mr John Smith who swears by react native but there are others with a different opinion the reality is that neither of these Frameworks is perfect each has its own problems and quirks that you you will discover once you start building real applications Beyond YouTube tutorials and the reason for that is that they try to support two entirely different platforms at the same time so which crossplatform solution should you choose well it depends on two things first on what languages and Technologies you're familiar with for example if you're a c developer Maui might be the easier route if you know web Technologies like JavaScript and react you might want to go for react native it's an easier transition from web to mobile development the other factor is job opportunities there are often more jobs available for react native and flutter here you can see the number of open positions for different types of mobile app developers in the US now this is the current situation here and maybe different where you live maybe there are more job opportunities for a flutter developer so I recommend doing your own research rather than taking my or someone else's advice about which route to choose but realistically if you're looking for a career in Mobile development you would have to choose between react native and flutter if you have basic web development skills react native is a better route otherwise I would recommend flutter because Dart which is the programming language that flutter uses is a nicer language to work with than JavaScript it's more modern and doesn't have the quirks and weird Parts you find in JavaScript so decide between JavaScript or Dart and commit to a study plan I believe if you dedicate 3 to 5 hours every day you can learn the essence of either of these languages in about 2 months to help you on this journey I've created a free supplementary PDF that breaks down the specific Concepts you need to learn for each skill it also includes several project ideas to help you practice and apply what you have learned it's a great resource to review your progress find gaps in your knowledge and prepare for interviews you can find the link in the description Box by the way I have a bunch of tutorials on this channel and complete courses on my website if you're looking for structur learning again links are in the description box the next thing you need to learn is a Version Control System them like git git is not a programming language it's a tool we use to track changes to our code and collaborate with others git and GitHub which is a platform that hosts git repositories are essential for every developer now git has a ton of features but you don't need to know them all for everyday use think of it like the 8020 rule 80% of the time you use 20% of git's features 1 to two weeks of practice is enough to get up and running now building mobile apps often involves working with data structures and implementing complex algorithms this is where a lot of selftaught programmers struggle because they try to skip ahead and learn more and more languages and tools without learning the fundamentals of computer science data structures and algorithms are critical subjects taught to computer science students and they're often covered in Tech interviews especially at big companies like apple Google and Microsoft while you can skip this step and go to the next as someone who has had the privilege of teaching millions of people I highly recommend you not to overlook this step otherwise you're going to feel the pain later in your career so spend 1 to 2 months studying classic data structures and algorithms this will give you a strong foundation in programming and problem solving the next thing I would recommend learning which again a lot of selftaught developers Miss is design patterns design patterns are proven solutions to Common software design problems there are 23 classic design patterns documented in the book design patterns by the gang of four many of these patterns are used in Mobile Frameworks so learning them will give you a deeper understanding of objectoriented design principles and how these mobile Frameworks work under the hood now I have to tell you this book is pretty old and written in C++ honestly it's a difficult read because many of the examples in the book are dry and not quite relevant to Modern software that's why I've created a very HandsOn and pragmatic course on this topic where I use Java and modern examples found in applications we use every day you can see how design patterns are used to solve problems in modern applications whether you want to take my course or use a different resource I believe if you dedicate a few hours every day you can have a pretty solid understanding of design patterns in about 2 months all right the next thing you need to learn is a mobile framework which we talked about before for Dart you should learn flutter and for JavaScript you should learn react native assuming you have a solid background in programming you can learn either of these Frameworks in about 2 months so if you dedicated a few hours every day and follow this road map you'll have the necessary knowledge to apply for an entrylevel mobile developer job in about 8 to 12 months if you have any questions please let me know in the comments below I'll do my best to answer you right here or in my future videos If you enjoyed this video please give it a like And subscribe for more useful content