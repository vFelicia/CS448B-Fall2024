welcome to my late hour Q&A show in these shows you can ask me your questions on anything technical or nontechnical topics and if I see the topic interesting and valuable to others I will include your question in my next show so tonight's show is about Junior versus Senior developers one of my good students Kyle from Melbourne has sent me this question what is the difference between a junior and a senior developer so briefly k has three years of programming experience including a year and a half of University study he's told me that in most interviews he has attended employers think that he's a junior developer but when he got his current job he demoed his previous work to his colleagues and they thought he has implemented quite a few Advanced features so Kyle is wondering what he should focus on to become a real senior developer and here's my response hi Kyle thanks for sending me your question question I should say that this is actually a pretty interesting question and I'm going to get into a lot of details in my response first of all there are two ways to Define what makes a developer junior or senior job agencies have their own criteria which is often based on the number of years of experience of course they have other criterias based on your skill set but they put a lot of weight on the number of years now in my personal opinion years of experience is not always a good way to assess if a given C candidate is a senior developer or not I've worked with developers with more than 10 years of experience who were at the intermediate level at best software industry as you probably know is very fast pacing and if you don't constantly learn new things fast sooner or later you'll be behind the game I've seen developers with 20 years of experience who are still using Microsoft Access so do 20 years of experience make such a developer a senior developer not really so I personally believe being a senior developer depends on the skills not the years of experience and the skill set is subjective you ask 10 different senior developers what are the skills that a senior developer should have and chances are you will hear different answers but if you're interested to know my answer I would say a senior developer has experience with a wide range of Technologies often both on the front end and the back end they have reasonable understanding of design patterns or at least they know the key ones so if someone says abstract Factory or Builder pattern they know what they're talking about they're exposed to no SQL databases but not necessarily an expert in the area they're familiar with messaging tools and Frameworks but again not necessarily an expert they're able to troubleshoot problems often faster than Junior developers but not necessarily fast they can think of different solutions to solve a problem and they can explain the pros and cons of each solution from different points of view such as per performance scalability security maintainability and so on they often write cleaner and more maintainable code they should be able to write unit tests for their code whether before the production code which we call test driven development or tdd or after these are my personal criteria to tell if someone is a junior or senior developer but I think these are fair assumptions and if you ask 10 senior developers most of them are going to agree with most of the criteria I've listed here no one is going to say no a senior developer doesn't need to know unit testing no one is going to say a senior developer um doesn't have to write clean code now having said that I've worked with senior Consultants who fail at taking these boxes and it really surprises me how they end up getting those titles but that aside to answer a question what you should do to become a senior developer I would say there are two parts here one part is the number of years which you get judged upon at that's really out of your control so don't worry about it instead focus on what is under your control and that's the skill set I talked about so improve your coding skills learn to write cleaner and more maintainable code because I don't think anyone would regard a developer who writes messy code as a senior developer no matter how many years of experience they have if you're interested I have a course on UD called clean code look at the table of content and see if you know all the topics I have covered if not I would suggest that should be your starting point also spend some time studying and practicing unit testing that will certainly take you to the next level and on the side get yourself exposed to a wide range of front end and backend tools and Frameworks if you want to be a full stack developer on the client make sure you're pretty confident with HTML CSS JavaScript jQuery and bootstrap and I mean really really confident because this is the absolute minimum you should also be pretty confident in one of the leading frontend Frameworks like angular or react on the backand if you want to use Microsoft Technologies you should be pretty confident with H9 NVC web API Entity framework and relational database at an absolute minimum you should also be pretty confident writing most queries in plain SQL to get data out of your database now on top of all this if I want to give you a golden key I would say go and build three different applications end to end entirely by yourself pick any kind of domain you're interested in and build a real world application if you don't have any ideas look at the applications around you any website you visit any apps you use think of building a simplified version of that application when you build an application end to endend by yourself you will have a far deeper understanding of all these Technologies and various challenges of putting them together along the way when you join the team most of the time there is some Legacy code sitting there and there's a lot of magic happening in that code that you have no idea about most of the time you'll be working on little bits and pieces here and there and to be frank with you this stuff wouldn't really give you the depth that you need as a senior developer you will just learn how to maintain existing applications and this is not something to be proud of so in your spare time build an application end to end and deploy it to Azure yes you would have to pay a a little bit of money for your subscription but trust me that's not much and you can turn off the service shortly after deployment so you wouldn't have to pay any more money when you go through all these different phases of software development life cycle starting from the requirements and eventually deploying working software you would be a completely different developer so to recap on the client make sure you're pretty confident with HTML CSS JavaScript jQuery bootstrap and at least one of the leading Frameworks like Ang or react on the server if you're going to use Microsoft Technologies make sure you're pretty confident with as.net NVC web API enti the framework and relational databases on top of all this you should write really clean code you should know your unit testing you should know your design patterns then I would say you're a senior developer now just one thing since you're new to the industry you may get intimidated by different kinds of things you need to know but trust me it's not that hard when you build a word application end to endend you will deal with these Technologies all the time and after a while they become like a piece of cake so I hope I've answered your question and I wish you all the best