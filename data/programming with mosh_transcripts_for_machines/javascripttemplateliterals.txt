in the last lecture you learned that backslash n adds a newline to a string now what I don't like about this approach is that it doesn't allow us to visualize what the output looks like in other words if we log message on the console you can see this is what the output looks like so on the first line we have this is my and on the second line we have first message but when writing code our string looks different now if you want to make this string similar to what the output looks like we have to do something like this so we break this string into two parts and concatenate them like this and then we add the second part and a newline we can also put the first part on a new line and now this kind of looks similar to what we have in the output but we still have this backslash n getting in the way creating some noise in the code to make the matter worse if you want to surround first with single quotes will have to escape the single code character like this again this is very very ugly let's lock this one more time very very ugly and noisy that's where template literals come in the picture so so far you have learned about different kinds of literals in JavaScript so we have object literals which are indicated by curly braces we have boolean literals which are true or false we have string literals which are indicated by single or double quotes now starting from es6 we have template literals which are indicated by the backtick character this backtick character is the character before number 1 on your keyboard so let's see how template literals help us read cleaner code I'm gonna define another constant but this time I'm gonna use a template literal instead of a string literal so we add the backtick character this is my now to add a new line we don't need backslash in here we can simply add a line break and then type first message so we can format our string the way we want it to look like so now let's log message and another see what we have in code looks very similar to what we have and the output that we can also put this on a new line now if you want to surround first with single codes we can simply add them here there is no need to escape them because we have used a different character to define our string so save the changes one more time message another they look identical but compare this code with the former code this is particularly useful if you want to send out email messages in your application for example let's say you want to send an email to the user like this hi John thank you for joining my mailing list regards mush so we can format our string exactly the way we want it to look like there is no need for any of these plus or backslash n characters so let me delete all this stuff now another benefit of using template literals is that here we can add placeholders so let's say we want to add the name dynamically with a regular string we'll have to do something like this so message we set it to high then you have to concatenate this with some variable or constant let me define name here set it to John now we'll have to concatenate this message with name then add a comma then backslash n this is really really ugly let me show you a better way with template literals we can add a placeholder using a dollar sign and curly braces now inside these curly braces we add an expression we can pass the name of a variable or a constant now save the changes let's take a look at another you can see we've got John here dynamically so this is a placeholder for our name constant now here we can add any kind of expression we can also add a simple mathematical expression like this let's log this one more time so hi John five so technically we can add any expression that produces a value in between the curly braces we can also call a function that returns a value and that's perfectly valid so these are the benefits of using template literals hi guys thank you for watching my javascript tutorial this tutorial is part of my JavaScript course where you learn all the essential JavaScript features that every web and mobile application developer must know if you're an absolute beginner or have some experience in JavaScript and are looking for a fun and indepth course that teaches you the fundamentals of JavaScript this course is for you this course is also packed with tons of exercises that help you master what you learned in the course in fact many of these exercises are questions that come up in technical programming interviews so if you're pursuing a job as a frontend or a backend developer or if you simply want to have a more indepth understanding of JavaScript I highly encourage you to enroll in the course for a limited time you can get this course with a discount using the link in the video description click the link to find out more about the course and enroll