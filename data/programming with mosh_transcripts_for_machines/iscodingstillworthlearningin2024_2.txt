I got this question on this channel hey msh I'm 30 and I was planning to start a career as a programmer do you think this is wise comment question a lot of people are worried that AI is going to replace software Engineers so is coding still worth learning in 2024 well depends who you ask if you ask certain folks the ones who always seem miserable and say everything is going to collapse they will say no coding has no future but I've got a different take backed up by real world numbers in this video I'm sharing data that shows the continued demand for software Engineers so to understand where we are now and what the future will look like for software engineers make sure to watch this video to the end first I want to be transparent I've been creating coding courses for the past 10 years and in that time I've been lucky enough to teach millions of people how to code and launch their careers in Tech so yes you could say I have a vested interest in this field but I want to assure you that this isn't a sales pitch it's about helping you make make an informed decision I want you to hear both side of the story and decide for yourself what you believe at the end of the day it's your decision whether you want to learn coding or not and even if you want to you don't even have to buy my courses or learn from me there are thousands of great options out there so yeah there is a lot of fear about AI replacing coders headlines scream about robots taking over jobs and it can be overwhelming but the truth is AI is not going to take your job instead it's the person who knows how to work with AI that will steal your job the reality is software engineering is not going away at least not anytime soon don't just take my word for it here's some data to back it up the United States Bureau of Labor Statistics often called the BLS is a government agency that tracks job growth across the country on their website you can see that the employment for software developers is expected to grow by 26% from 2022 to 2031 the average across all occupations is 3% so that's a strong indication that software engineering is here to stay but it'll most likely transform and that's what we will explore in this video to better understand the impact of AI on software engineering let's take a minute and talk about the history of programming in the early days of computing programmers wrote code in a way that only computers understood long strings of zeros and ones it was incredibly tedious they had to keep track of of exactly where each piece of data and code was stored in the computer's memory and to do that they had to manually calculate memory addresses and make sure that different parts of the program didn't override each other compilers came to solve this problem with a compiler we can program in a human readable language like C++ without worrying about how that code should eventually get converted to zeros and ones and where it will get stored in the memory that's the job of a compiler now here here's a fact compilers didn't replace programmers they made them more efficient and the result of that the amazing websites and apps we have today that no one could even imagine in the past these days billions of people can communicate in real time AI will likely do the same in the future we'll be able to delegate routine and repetitive coding tasks to AI so we can focus on complex problem solving design and Innovation this will allow us to build more sophisticated software that most people can't even imagine today but even then just because AI can generate code doesn't mean we can or we should delegate the entire coding aspect of software development to AI because AI generated code has a lower quality and humans still need to review and refine it before using it in production in fact there's a study to support this they collected 153 million change lines of code between January 2020 and December 2023 and they found disconcerting trends for maintenance ability and listen to their prediction for 2024 Cod churn which means the percentage of lines that are reverted or updated less than 2 weeks after being authored is projected to double in 2024 so yes we can produce more code in less time with AI but more doesn't equal better humans should always review and refine AI generated code for quality and security before deploying it to production and that means all the coding skills as software engineer currently has will continue to stay relevant in the future you will still need the knowledge of data structures algorithms programming languages and their tricky parts tools and Frameworks you still need to have all that knowledge to be able to review and refine the AI generated code you'll just spend less time typing it so anyone telling you that you can use natural language to build software without understanding anything about coding is out of touch with the reality of software engineering sure you can make a dummy app but not the kind of software that runs our banks Airlines Healthcare the kind of software our life depends on we can't let a Code Monkey talk to a chat bot in plain English and get that software built at least not anytime soon in the future we'll probably spend more time designing new features and products with AI instead of writing boilerplate code we'll likely delegate aspects of coding to AI but this doesn't mean we don't need to learn to code think of it like a skilled architect using blue prints the architect doesn't need to handra the whole blueprint themselves but they still need to understand those blueprints in detail make sure everything works as designed and give clear instructions for those building the final structure as a software engineer you will always need to understand the code review what AI generates and refine it either by hand or by guiding the AI to improve also keep in mind that coding is only one part of a software engineer's job we often spend most of our time talking to people understanding requirements writing stories discussing software architecture and so on AI cannot help with that aspect of our work it can only boost our programming productivity but not necessarily the overall productivity in fact another study by McKenzie found that for highly complex tasks developers saw less than a 10% Improvement in their speed so as we can see here AI helped the most with documentation and code generation to some extent but moving on to refactoring the the Improvement dropped to 20% and for highly complex tasks it was less than 10% and this happens when the coding task involves something the developer isn't already familiar with so if anyone tells you that software Engineers will be obsolete in 5 years they're either ignorant or trying to sell you something in fact some argue that the role of software Engineers may become more valuable as they will be needed to develop manage and maintain these AI systems they need to understand all the complex of building software and use AI to boost their productivity now some are worried that one senior engineer can simply use Ai and replace many Engineers essentially leaving no job opportunities for juniors but again that's a fallacy because in reality the time savings you get from AI is not as great as you are promised anyone who has used AI to generate code knows that it takes effort to get the right prompts for usable results and the Cod still needs polishing so it's not like like one engineer will suddenly have so much free time to do the job of many people now you might say but MOS that's the current state of AI look AI is rapidly advancing and in a year or two it will be able to build software just like a human well in theory yes AI is advancing and one day it may even reach and surpass human intelligence but in theory theory and practice are the same in practice they're not the reality is while machines may be able to handle repetitive and routine tasks human creativity and expertise will still be necessary for developing complex Solutions and strategies I strongly believe software engineering is going to be extremely important over the next several decades I don't think it's going away but I do think it's going to change in the future we'll have to learn how to input the right prompt into our AI tools to get the expected result it's not an easy skill to develop it requires problem solving capability as well as knowledge of languages and tools so here's the bottom line if you have already made up your mind and don't want to invest your time in software engineering that's perfectly fine Follow Your Passion but if you like building things with code if the idea of shaping the future with technology gets you excited don't let negativity and fear hold your back software Powers our world and that won't change anytime soon yes the tools will evolve but the true skill lies in learning and adapting the future software engineer needs today's coding skills and an understanding of how to use AI effectively the output of AI is only as good as the instructions you give it think about it programmers must work directly with zeros and once today's web developers need to know HTML CSS Tailwind JavaScript typescript react nextjs git automated testing and so much more my prediction is that the future brings even more complexity demanding more knowledge and adaptability from software Engineers if you found this video helpful please give it a like And subscribe for more useful coding advice