so earlier I mentioned that note applications are highly scalable and this is because of the nonblocking or asynchronous nature of note what do you mean by asynchronous let me give you a metaphor imagine you go to a restaurant the waiter comes to your table takes your order and gives it to the kitchen then they move on to serve another table while the chef is preparing your meal so the same person can serve many different tables they don't have to wait for the chef to cook one meal before they serve another table this is what we call nonblocking or asynchronous architecture and this is how node applications work the waiter is like a thread allocated to handle a request so a single thread is used to handle multiple requests in contrast to nonblocking or asynchronous architecture we have blocking or synchronous architecture let's see how that works so back to our restaurant example imagine you go to another restaurant and in this restaurant a waiter is allocated to you they take your order and give it to the kitchen now they are sitting in the kitchen waiting for the chef to prepare your meal at this time they are not doing anything else they're just waiting they're not going to take an order from another table until your meal is ready this is what we call blocking or synchronous architecture and that's how applications built with frameworks like a speed net or rails work out of the box so when we receive a request on the server a thread is allocated to handle that request as part of handling that requests it is likely that we're going to query a database and as you know sometimes it may take a little while until the result is ready when the database is executing the query that thread is sitting there waiting it can't be used to serve another client so we need a new thread to serve another client imagine what would happen if we have a large number of concurrent clients at some point we're going to run out of threads to serve these clients so new clients have to wait until three threads are available or if we don't want them to wait we need to add more hardware so with this kind of architecture we are not utilizing our resources efficiently this is the problem with blocking or synchronous architecture and as I explained that's how applications built with frameworks like asp.net worked by default of course in asp.net it is possible to use asynchronous architecture but you will have to do extra work for now in contrast no the applications are asynchronous by default so you don't have to do anything extra in node we have a single thread to handle all requests linear request arrives that single thread is used to handle that request if you need to query a database our thread doesn't have to wait for the database to return the data while the database is executing our query that thread will be used to serve another client when the database prepares the result it puts a message in what we call an event queue node is continuously monitoring this queue in the background when it finds an event in this queue it will take it out and process it this kind of architecture makes node ideal for building applications that include a lot of disk or network access we can serve more clients without the need to throw in more hardware and that's why no the applications are highly scalable in contrast node should not be used for CPU intensive applications like a video encoding or an image manipulation service in this kind of applications we have a lot of calculations that should be done by CPU and few operations that touch the file system or the network since no the applications are single threaded when performing the calculations to serve one client other clients have to wait and that's why note should not be used or CPU intensive applications it should only be used for building data intensive and realtime applications ok enough theory Nix I'm gonna show you how to install node and build your first node application hi guys its mosh here thank you for watching my know tutorial I just wanted to let you know that this video you've been watching it's part of my complete note course where you will learn everything about node from the basic to the advanced topics if you're serious about learning node I highly recommend you to enroll in my node course because this is much faster than jumping from one tutorial to another it saves you time plus you're going to get a lot of exercises that will prepare you for the real work and also at the end of the course you'll receive a certificate of completion that you can provide your current or future employer so if you want to enroll click on the link in the video description I hope to see you in the course