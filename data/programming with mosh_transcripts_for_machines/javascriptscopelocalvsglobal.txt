and it's lecture we're going to talk about a very important concept called scope so I'm gonna define a constant called message and set it to high now let's log this on the console so obviously we can high on the console but what would happen if I add this message in a code block I'll save the changes and see what happens we get this error uncut reference error message is not defined this is all about scoping so a scope of a variable or a constant determines where that variable or constant is accessible and let me declare variables and constants with let or Const their scope is limited to the block in which they are defined so message is accessible in this block but it's not accessible outside of this block now you might be wondering why do we need this code block here well this code block can be part of a function so here we can have a function called start I now we have a constant in this function so because the scope of this constant is limited to the block in which it's defined we cannot access this constant outside of the start function the same is true when we declare a variable or a constant in an if block so let's add an if block here some condition we don't care let's declare another constant and set it to by now this constant is only accessible in this block if I go out of this block and try to log it on the console we're gonna get an error so I'm gonna remove the last line let's just call the start function save the changes we get the same error reference error another is not defined we have the same concept in our loops so let's define a for loop let I equal to 0 we're gonna run it 5 times now I is a variable that is only accessible in this block so here we can log I let's save the changes we get numbers zero to four but if we go outside of this four block and log I we're going to get the same error reference error I is not defined now let me simplify this code so we're gonna have a function with a constant called message we can have another function let's call that stop and in this function we can have a constant called message with a different value that's perfectly valid JavaScript code because the scope of this constant is limited to the block in which it's defined so we can have two variables or constants with the same name but in different functions that's perfectly valid now what if we define a variable or a constant outside of a function so here I'm gonna define a constant caller and set it to red now here we don't have any code blocks so what do you think is the scope of this constant this constant has global scope global means this constant is accessible everywhere globally so we can go to the start function and log caller save the changes we can see we have access to this constant caller right so this constant is accessible in all the functions we have in our program now what if we have a constant with the exact same name in our function so let's take a look I'm gonna define this color constant what set it to blue what do you think we're going to see when I save the changes let's take a look we get blue so local variables or local constants in a function take precedence over global variables or constants now in general you should avoid defining global variables or constants that is considered bad practice let me give you a metaphor imagine this is a toothbrush and each function is a person you don't want to have a toothbrush that is shared between multiple people each person should have their own toothbrush so you should avoid defining global variables or constants because they're accessible everywhere globally and each function can accidentally change their value and this will lead to all kinds of bugs and issues in our programs hi guys thank you for watching my javascript tutorial this tutorial is part of my JavaScript course where you learn all the essential JavaScript features that every web and mobile application developer must know if you're an absolute beginner or have some experience in JavaScript and are looking for a fun and indepth course that teaches you the fundamentals of JavaScript this course is for you this course is also packed with tons of exercises that help you master what you learned in the course in fact many of these exercises are questions that come up in technical programming interviews so if you're pursuing a job as a frontend or a backend developer or if you simply want to have a more indepth understanding of JavaScript I highly encourage you to enroll in the course for a limited time you can get this course with a discount using the link in the video description click the link to find out more about the course and enroll