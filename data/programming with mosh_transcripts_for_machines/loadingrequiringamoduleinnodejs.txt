to load the module we use the require function this is one of the functions in node we don't have this in browsers this function takes one argument and that's the name or path of the target module we want to load so here we're gonna load the logger module now we can see both the app module and logger module are in the same folder so we use period slash to indicate the current folder and then we add the name of our module that is logger ojs or we can make it shorter and just use logger because node assumes this is a JavaScript file it automatically asked the GS extension now if this logger was in a subfolder we could add that subfolder here or if it was in the parent folder we could use dot dot slash so here we are using the relative path to the target module in this case that module is in the same folder now this required function returns the object that is exported from this target module so this exports object here this is what we get when we call the require function let me show you so I'm gonna declare a variable call it lager the name of the module and set it to the return value of the require function now let's log this logger and see what we get so node object yes look we get an object this object has a single method called log you can see that's a function so we can call this function or this method in app J s so back here we call logger dot and look here we have intellisense in vs code so we call log and pass a message now back in terminal let's run this app and we get message on the console so this is how we work with modules in node when we define a module we export one or more members and then to load the module we use the require function now in the recent versions of JavaScript we have the ability to define constants so as a best practice when loading a module using the required function it's better to store the result in a constant like this the reason for this is because we don't want to accidentally overwrite the value of logger like this here if we set this to one then when we call the log method we're going to get an exception let me show you so one more time look you got logger that log is not a function now in contrast if we define this as a constant now back in the terminal let's run this program one more time look we got a different kind of error assignment two constant variable now there are tools out there that check our JavaScript code for errors like that so by using this constructs properly we can prevent these errors from happening at runtime so one of these popular tools is J's hint if you have never used it before don't worry I'm just gonna show you a quick demo so if you're on J s hint app but j s we get this error attempting to override logger which is a constant so with tools like jeaious hint we can scan all our JavaScript code for errors like that so that's the benefit of using a constant as opposed to a variable here if you accidentally reset this object then we're gonna get an error at compile time instead of at run time okay and one last thing before we finish this lecture sometimes instead of exporting an object from a module you may want to export only a single function for example in our logger module we don't necessarily need an object because we have a single method an object would be useful if we had multiple methods or properties here but in this case instead of exporting an object we can export a single function so we can reset this export to the log function so initially it was an empty object but we reset it to just a function with that like in app Jas the logger is no longer an object it's a function that we can call directly like this so logger we call it and give it an argument now a better name for this function is lock so I'm gonna press f2 to rename these log like this now back in terminal let's run node op j s and we get the same result so in your modules you can export a single function or an object hi guys it's mash here thank you for watching my node tutorial I just wanted to let you know that this video you've been watching is part of my complete note course where you will learn everything about node from the basic to the advanced topics if you're serious about learning node I highly recommend you to enroll in my node course because this is much faster than jumping from one tutorial to another it saves you time plus you're going to get a lot of exercises that will prepare you for the real work and also at the end of the course you'll receive a certificate of completion that you can provide your current or future employer so if you want to enroll click on the link in the video description I hope to see you in the course