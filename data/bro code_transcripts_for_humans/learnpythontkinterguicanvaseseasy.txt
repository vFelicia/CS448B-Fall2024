With timestamps:

00:00 - what's going on everybody it's your bro
00:01 - here hope you're doing well and in this
00:03 - video i'm going to teach you guys how we
00:04 - can use the canvas widget to draw some
00:06 - simple shapes so
00:07 - sit back relax and enjoy the show
00:12 - if you find this video helpful please
00:13 - remember to like
00:15 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - welcome back everyone well in this video
00:22 - we're going to be creating a
00:23 - canvas a canvas is a widget that is used
00:26 - to draw simple graphs plots and images
00:28 - within a window
00:29 - we're going to be creating some simple
00:31 - shapes in this video not anything too
00:33 - sophisticated i might get
00:34 - more into the canvas widget in a
00:36 - separate video and at the end of this
00:38 - lesson we're going to practice by
00:39 - creating a pokeball
00:41 - so to begin we'll need a window window
00:43 - equals tk
00:44 - followed by window.main loop to create a
00:47 - canvas we can just simply call this
00:49 - canvas
00:49 - canvas equals canvas and we're adding
00:52 - this canvas
00:53 - to our window and then we need to follow
00:55 - this with canvas.pack or
00:57 - place but i'm just going to use pack
00:59 - because it's simple
01:00 - this is what our canvas looks like it's
01:02 - a rectangular area which we can draw
01:04 - graphics on
01:05 - we can also set the width and the height
01:07 - of this canvas so when we create this
01:09 - canvas
01:09 - we're going to set the options for a
01:11 - height and a width so let's begin with
01:13 - the height
01:14 - height equals let's say 500 and the
01:17 - width will be the same
01:18 - 500 and now we have a square
01:21 - canvas that we can draw graphics on
01:23 - let's begin by creating some simple
01:25 - shapes
01:26 - maybe a line i think a line is a shape
01:28 - maybe a one dimensional one
01:30 - i don't know i don't geometry so let's
01:32 - create a simple line
01:34 - so we type the name of the canvas dot
01:37 - create and there's a bunch of different
01:38 - shapes that we can create
01:40 - let's create a line
01:43 - now i'm just going to turn this into a
01:44 - comment for a moment we need to set some
01:46 - coordinates
01:47 - for this line this top left corner of
01:50 - our canvas
01:51 - is 0 0 and the bottom right corner of
01:54 - this canvas
01:55 - is 500 by 500 depends on what you set
01:57 - the dimensions of the canvas to
01:59 - so when we create a line we need a
02:01 - starting point and an ending point
02:04 - so if we want this to start in the top
02:05 - left corner we're going to pass
02:07 - in 0 0 that is the starting position
02:10 - and we can place the coordinates for the
02:12 - ending position if we want this line to
02:14 - end in the bottom
02:15 - right corner that would be where x is
02:17 - 500
02:18 - and y is 500 and this is what this looks
02:21 - like
02:22 - we just have a simple line going across
02:24 - the screen
02:25 - but that's not all we can also change
02:27 - the color of this line and the thickness
02:29 - let's begin by changing the color so we
02:32 - can do that with
02:32 - fill fill equals let's pick the color
02:36 - blue
02:38 - and now we have a blue line going across
02:40 - the screen but we can also change
02:42 - the width of this as well so we can do
02:44 - that using the width option
02:46 - and let's set this to 5. now we get an
02:50 - extra thick line across the screen now
02:53 - let's
02:53 - make a red line so i'm just going to
02:56 - copy this
02:58 - canvas dot create line and let's change
03:00 - some coordinates for this
03:03 - let's say we want this to start in the
03:05 - bottom left corner and go up to the top
03:07 - right
03:08 - so the starting x position would be zero
03:11 - y would actually be 500 x
03:15 - for the ending position would be 500 and
03:17 - y would be zero
03:18 - let's set this to red and we'll keep the
03:21 - width the same
03:24 - okay so here's our red line and notice
03:27 - that this red line
03:28 - is overlapping the blue line so when you
03:31 - create shapes
03:32 - on a canvas if there's any that overlap
03:34 - the one that you most recently created
03:36 - will appear on the top
03:38 - one option available to you is that you
03:40 - can actually give
03:41 - these graphics a unique name with our
03:43 - blue line we could call this
03:45 - blue line blue line equals all of this
03:49 - and then we can call our red line
03:50 - something different like
03:52 - red line this would be useful if you
03:54 - want to call or use a graphic
03:56 - by its name if you want to like move a
03:58 - graphic on the screen
04:00 - or have something appear you can use
04:01 - this by its name
04:03 - but we don't really need it for this
04:04 - lesson so i'll just revert this back to
04:06 - what we had previously
04:07 - i'm just letting you know that you can
04:08 - do that all right what do we have up
04:10 - next let's create a rectangle so canvas
04:13 - dot create rectangle
04:16 - we can set some starting coordinates and
04:18 - ending coordinates
04:19 - the starting coordinates are for the top
04:21 - left of the rectangle and the ending
04:23 - coordinates are for the bottom
04:24 - right so for the starting coordinates
04:26 - let's say we're going to place
04:28 - this where x is 50 y is 50.
04:31 - for the ending coordinates we want this
04:32 - where
04:34 - x is 250 and y is 250. i'm just making
04:37 - up numbers
04:38 - put it whatever you want really and this
04:40 - is what this looks like
04:43 - but i think i'm going to comment out
04:44 - these lines for now
04:48 - and here is our rectangle well i guess
04:50 - it's also a square
04:51 - we can actually give this a fill color
04:53 - as well so we do that with the
04:55 - fill option fill equals
04:59 - purple i guess and now we have a purple
05:03 - rectangle next on our list is create
05:06 - polygon we can create many sorts of
05:09 - shapes using create polygon but it
05:11 - really depends on how many coordinates
05:12 - that we enter
05:13 - let's create a simple triangle so we
05:15 - need at least three coordinates for this
05:17 - to work
05:18 - so canvas dot create polygon
05:21 - and i have some coordinates picked out
05:23 - already so let's place the first set of
05:25 - coordinates where x
05:26 - is 250 y is zero for the second set
05:30 - where x is 500 and y is 500
05:33 - in the last set the third set we'll
05:36 - place this where x is 0 and
05:38 - y is 500 and what this looks like
05:41 - is that we have this black triangle
05:43 - that's taking up most of the canvas
05:45 - we can also change the fill color as
05:47 - well so we do that with the
05:49 - option fill and we can set this to
05:52 - whatever color you want
05:53 - let's say yellow and we now have
05:57 - a yellow triangle on our screen and it
05:59 - kind of resembles the triforce from the
06:01 - legend of zelda series one of my
06:02 - personal favorites
06:04 - let's also add a border this is actually
06:06 - done with outline
06:08 - outline equals and then pick a color for
06:10 - the outline let's say black
06:12 - and we have a black outline around this
06:14 - graphic
06:15 - and you can also change the thickness of
06:17 - this too with width
06:18 - and let's set the width to 5 and now we
06:21 - have an extra thick
06:23 - line around our triangle with these
06:26 - shapes you can pass in a list of points
06:28 - too
06:29 - so i'm going to get rid of all these and
06:31 - we're going to pass
06:32 - in a list so let's create a list called
06:35 - points
06:36 - points equals all the points that we
06:38 - just entered in previously
06:40 - and then instead of passing in all these
06:42 - coordinates individually i'm just going
06:44 - to pass
06:44 - in our list of points and this will work
06:48 - exactly the same okay let's create an
06:50 - arc now so canvas
06:52 - dot create arc and arc is really just
06:56 - a curved line between at two points
06:58 - however
06:59 - when we list some coordinates we're not
07:01 - listing the coordinates of the
07:02 - starting position and ending position
07:04 - for this arc it's more or less for the
07:07 - amount of space that we want to allocate
07:09 - to actually draw this arc
07:11 - so let's say that we want this arc to
07:12 - take up the entire canvas
07:14 - we can pass in the dimensions for this
07:16 - canvas so the top left corner is zero
07:18 - zero
07:19 - and the height and the width are five
07:21 - hundred
07:26 - so this is our arc it resembles a pi
07:28 - slice it's not starting in the top left
07:30 - corner
07:30 - and ending down here that's the amount
07:32 - of space that we're giving
07:34 - this create arc function to actually
07:36 - draw an arc it's really an entire circle
07:39 - but only a portion of it is visible
07:41 - let's also set a fill color for this so
07:44 - fill
07:44 - equals what color did we not pick yet
07:47 - let's say green
07:50 - and now we have a green pie slice
07:53 - there's different styles you can do too
07:56 - so we can change that with
07:58 - style equals the default is pi slice
08:01 - that's what we had previously let's
08:03 - change this to chord
08:04 - this will draw a line between these two
08:07 - points
08:07 - and this kind of resembles like a bow
08:10 - like a bow with arrows
08:11 - and there is also just arc
08:14 - where it's simply just a curved line
08:18 - let's change this back to pi slice well
08:20 - because i like pi
08:22 - we can change the starting position of
08:25 - where this arc begins with the option
08:27 - start so start equals 0 by default so
08:30 - there's going to be no apparent change
08:33 - let's adjust this by 90 degrees so this
08:36 - is in
08:36 - degrees so this shifted
08:40 - what is this direction counterclockwise
08:42 - by 90 degrees
08:44 - so 180 would theoretically flip this
08:50 - and now this is on the other side of
08:51 - what we had previously
08:53 - and then 270.
08:59 - all right we can also set an extent
09:02 - so the default is normally 90 degrees
09:04 - but let's change this to 180
09:08 - and now we have a what is that
09:10 - hemisphere
09:11 - half a circle all right people let's
09:13 - practice by creating a pokeball there's
09:15 - still one more function that we have to
09:17 - cover it's called create oval but we'll
09:19 - do that as we're making this
09:21 - so let's begin by creating the top red
09:23 - hemisphere of this pokeball so that's
09:25 - canvas
09:26 - dot create arc and we're going to set
09:30 - the extent of this
09:31 - to 0 0 500 500
09:35 - so that this is going to take up the
09:36 - entire canvas
09:38 - and then let's also set a fill color to
09:41 - red
09:41 - so fill equals red
09:44 - we need to change the extent of how far
09:47 - this extends
09:48 - so we'll do that with the extent
09:49 - function so extent
09:51 - equals 180 so that this is a half circle
09:54 - and let's also change the thickness of
09:57 - this outline as well
09:58 - using the width option so width
10:01 - equals 10 would be good
10:04 - and we have a red hemisphere for the top
10:07 - of our pokeball let's work on the bottom
10:09 - half
10:10 - so that is a white hemisphere
10:13 - so canvas dot create arc these are all
10:15 - the same we'll change the fill to white
10:19 - the extent will be the same but we need
10:21 - a different starting position so start
10:23 - equals 180 so this is going to begin at
10:27 - the 180 degree mark
10:29 - so when you combine these both together
10:30 - we get two different colored hemispheres
10:33 - that form a perfect circle
10:35 - now let's create an oval within the
10:37 - center of this pokeball
10:40 - so we're going to do that with canvas
10:42 - dot create
10:44 - oval we're going to set the amount of
10:47 - space that we want to give
10:49 - the circle to be drawn so we'll place
10:51 - this where
10:52 - x is 190 where y is 190
10:55 - where x 2 or the second x position is
10:59 - 310
11:00 - and y2 is 310.
11:05 - let's set the fill color next so we do
11:07 - that with fill
11:08 - fill equals white
11:12 - and lastly let's just give this a
11:13 - thicker border
11:15 - so that is width
11:18 - equals 10 to match the width for the
11:22 - two arcs that we have and there you have
11:24 - it we have a simple pokeball
11:27 - alright well that's the basics of the
11:29 - canvas widget if you'd like a copy of
11:30 - all this code i'll post all of this in
11:32 - the comments down below
11:33 - but yeah that's the basics of the canvas
11:35 - widget in python
11:37 - hey you yeah i'm talking to you if you
11:40 - learn something new
11:41 - then you can help me help you in three
11:44 - easy steps
11:45 - by smashing that like button drop a
11:47 - comment down below
11:48 - and subscribe if you'd like to become a
11:50 - fellow bro
11:56 - [Music]
12:11 - you

Cleaned transcript:

what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys how we can use the canvas widget to draw some simple shapes so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running welcome back everyone well in this video we're going to be creating a canvas a canvas is a widget that is used to draw simple graphs plots and images within a window we're going to be creating some simple shapes in this video not anything too sophisticated i might get more into the canvas widget in a separate video and at the end of this lesson we're going to practice by creating a pokeball so to begin we'll need a window window equals tk followed by window.main loop to create a canvas we can just simply call this canvas canvas equals canvas and we're adding this canvas to our window and then we need to follow this with canvas.pack or place but i'm just going to use pack because it's simple this is what our canvas looks like it's a rectangular area which we can draw graphics on we can also set the width and the height of this canvas so when we create this canvas we're going to set the options for a height and a width so let's begin with the height height equals let's say 500 and the width will be the same 500 and now we have a square canvas that we can draw graphics on let's begin by creating some simple shapes maybe a line i think a line is a shape maybe a one dimensional one i don't know i don't geometry so let's create a simple line so we type the name of the canvas dot create and there's a bunch of different shapes that we can create let's create a line now i'm just going to turn this into a comment for a moment we need to set some coordinates for this line this top left corner of our canvas is 0 0 and the bottom right corner of this canvas is 500 by 500 depends on what you set the dimensions of the canvas to so when we create a line we need a starting point and an ending point so if we want this to start in the top left corner we're going to pass in 0 0 that is the starting position and we can place the coordinates for the ending position if we want this line to end in the bottom right corner that would be where x is 500 and y is 500 and this is what this looks like we just have a simple line going across the screen but that's not all we can also change the color of this line and the thickness let's begin by changing the color so we can do that with fill fill equals let's pick the color blue and now we have a blue line going across the screen but we can also change the width of this as well so we can do that using the width option and let's set this to 5. now we get an extra thick line across the screen now let's make a red line so i'm just going to copy this canvas dot create line and let's change some coordinates for this let's say we want this to start in the bottom left corner and go up to the top right so the starting x position would be zero y would actually be 500 x for the ending position would be 500 and y would be zero let's set this to red and we'll keep the width the same okay so here's our red line and notice that this red line is overlapping the blue line so when you create shapes on a canvas if there's any that overlap the one that you most recently created will appear on the top one option available to you is that you can actually give these graphics a unique name with our blue line we could call this blue line blue line equals all of this and then we can call our red line something different like red line this would be useful if you want to call or use a graphic by its name if you want to like move a graphic on the screen or have something appear you can use this by its name but we don't really need it for this lesson so i'll just revert this back to what we had previously i'm just letting you know that you can do that all right what do we have up next let's create a rectangle so canvas dot create rectangle we can set some starting coordinates and ending coordinates the starting coordinates are for the top left of the rectangle and the ending coordinates are for the bottom right so for the starting coordinates let's say we're going to place this where x is 50 y is 50. for the ending coordinates we want this where x is 250 and y is 250. i'm just making up numbers put it whatever you want really and this is what this looks like but i think i'm going to comment out these lines for now and here is our rectangle well i guess it's also a square we can actually give this a fill color as well so we do that with the fill option fill equals purple i guess and now we have a purple rectangle next on our list is create polygon we can create many sorts of shapes using create polygon but it really depends on how many coordinates that we enter let's create a simple triangle so we need at least three coordinates for this to work so canvas dot create polygon and i have some coordinates picked out already so let's place the first set of coordinates where x is 250 y is zero for the second set where x is 500 and y is 500 in the last set the third set we'll place this where x is 0 and y is 500 and what this looks like is that we have this black triangle that's taking up most of the canvas we can also change the fill color as well so we do that with the option fill and we can set this to whatever color you want let's say yellow and we now have a yellow triangle on our screen and it kind of resembles the triforce from the legend of zelda series one of my personal favorites let's also add a border this is actually done with outline outline equals and then pick a color for the outline let's say black and we have a black outline around this graphic and you can also change the thickness of this too with width and let's set the width to 5 and now we have an extra thick line around our triangle with these shapes you can pass in a list of points too so i'm going to get rid of all these and we're going to pass in a list so let's create a list called points points equals all the points that we just entered in previously and then instead of passing in all these coordinates individually i'm just going to pass in our list of points and this will work exactly the same okay let's create an arc now so canvas dot create arc and arc is really just a curved line between at two points however when we list some coordinates we're not listing the coordinates of the starting position and ending position for this arc it's more or less for the amount of space that we want to allocate to actually draw this arc so let's say that we want this arc to take up the entire canvas we can pass in the dimensions for this canvas so the top left corner is zero zero and the height and the width are five hundred so this is our arc it resembles a pi slice it's not starting in the top left corner and ending down here that's the amount of space that we're giving this create arc function to actually draw an arc it's really an entire circle but only a portion of it is visible let's also set a fill color for this so fill equals what color did we not pick yet let's say green and now we have a green pie slice there's different styles you can do too so we can change that with style equals the default is pi slice that's what we had previously let's change this to chord this will draw a line between these two points and this kind of resembles like a bow like a bow with arrows and there is also just arc where it's simply just a curved line let's change this back to pi slice well because i like pi we can change the starting position of where this arc begins with the option start so start equals 0 by default so there's going to be no apparent change let's adjust this by 90 degrees so this is in degrees so this shifted what is this direction counterclockwise by 90 degrees so 180 would theoretically flip this and now this is on the other side of what we had previously and then 270. all right we can also set an extent so the default is normally 90 degrees but let's change this to 180 and now we have a what is that hemisphere half a circle all right people let's practice by creating a pokeball there's still one more function that we have to cover it's called create oval but we'll do that as we're making this so let's begin by creating the top red hemisphere of this pokeball so that's canvas dot create arc and we're going to set the extent of this to 0 0 500 500 so that this is going to take up the entire canvas and then let's also set a fill color to red so fill equals red we need to change the extent of how far this extends so we'll do that with the extent function so extent equals 180 so that this is a half circle and let's also change the thickness of this outline as well using the width option so width equals 10 would be good and we have a red hemisphere for the top of our pokeball let's work on the bottom half so that is a white hemisphere so canvas dot create arc these are all the same we'll change the fill to white the extent will be the same but we need a different starting position so start equals 180 so this is going to begin at the 180 degree mark so when you combine these both together we get two different colored hemispheres that form a perfect circle now let's create an oval within the center of this pokeball so we're going to do that with canvas dot create oval we're going to set the amount of space that we want to give the circle to be drawn so we'll place this where x is 190 where y is 190 where x 2 or the second x position is 310 and y2 is 310. let's set the fill color next so we do that with fill fill equals white and lastly let's just give this a thicker border so that is width equals 10 to match the width for the two arcs that we have and there you have it we have a simple pokeball alright well that's the basics of the canvas widget if you'd like a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of the canvas widget in python hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
