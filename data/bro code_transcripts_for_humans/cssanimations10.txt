With timestamps:

00:00 - hey how's it going everybody its bro
00:02 - here hope you're doing well and in this
00:03 - video I'm going to be teaching you guys
00:05 - all about basic animations and CSS so
00:08 - let's get into it
00:11 - before you reach the end of this video
00:14 - make sure to LIKE comment and subscribe
00:16 - so that we together can challenge and
00:19 - defeat the mighty YouTube algorithm
00:22 - everyone so basically speaking and
00:25 - animation allows us to change some
00:27 - property of an element over the course
00:29 - of time instead of having it become an
00:31 - instantaneous change which is what we're
00:34 - used to so let's begin by creating some
00:36 - sample text to work with so on my HTML
00:39 - document I'm just going to use a
00:40 - paragraph tag I'll give this a unique ID
00:43 - of p1 and then I'll just type in the
00:47 - word maybe hi again like what we did
00:49 - with the last video so then we'll close
00:52 - this safe of the page reload and then
00:55 - let's go to our style sheet and let's
00:57 - work on a square for our paragraph
00:59 - element
01:00 - well let's target p1 since we're D using
01:03 - an ID all right so let's make a square
01:06 - so we'll give this a width of 100 pixels
01:09 - and a height of 100 pixels and then
01:14 - background maybe red all right then font
01:23 - size I think last time we picked 85
01:29 - text-align:center and margin 0 pixels
01:35 - let's save reload the page okay this
01:38 - will work for now moving on to our next
01:40 - step what we need to do now is to create
01:42 - something called a keyframe rule and
01:45 - this is basically the animation itself
01:47 - any element that is using this keyframe
01:49 - rule will behave based on the animation
01:52 - steps that are listed within this rule
01:55 - so what we'll do for a keyframe rule is
01:58 - type in at keyframes and then we need a
02:01 - unique name for this animation let's say
02:04 - that we want to change the color from
02:05 - red to blue we could call this maybe my
02:09 - color
02:10 - animation otherwise name this whatever
02:13 - you
02:13 - you could still name this like best
02:17 - animation ever and this would still work
02:21 - but you know your name should be
02:22 - descriptive of what the animation does
02:25 - so I'll just call this my color
02:27 - animation then a set of curly braces all
02:31 - right this is the framework for the
02:33 - keyframe rule we'll need some sort of
02:35 - starting position and ending position
02:37 - the first line we're going to type from
02:40 - then a set of curly braces and the
02:42 - second line to another set of curly
02:45 - braces we can list some sort of property
02:48 - within this from line and this will be
02:51 - like the starting position so we can say
02:53 - background - color should start at red
02:57 - and then at the end on this two line
03:01 - will type in background - color maybe
03:07 - blue all right now within an element
03:11 - that you want to use this animation what
03:13 - we're going to do is use the animation
03:15 - property so animation colon and then
03:19 - we're going to take our animation name
03:20 - that we want to use and place it right
03:23 - here next to the property name for
03:25 - animation now second will need a
03:28 - duration how long do we want this
03:30 - animation to take so we'll use this
03:33 - property called animation duration and
03:36 - let's say that we want this animation to
03:38 - take five seconds so we'll place five s
03:41 - here so let's save and after reloading
03:44 - the page now the background color of our
03:46 - element
03:47 - changed from red to blue but it only
03:49 - does this once so you can actually set
03:52 - something called an animation iteration
03:54 - count so let's say if you want to have
03:58 - this animation occur twice you could put
03:59 - two here otherwise if you want this to
04:01 - be continuous you can place the word
04:03 - infinite so then after using animation
04:07 - iteration count infinite this animation
04:09 - will continuously occur infinitely then
04:13 - so we can also list multiple different
04:16 - steps in our animation it doesn't
04:18 - necessarily have to be - but what we're
04:20 - going to do here is list some
04:22 - percentages instead of this keyword from
04:24 - and - so we could actually have this
04:27 - train
04:27 - addition to a bunch of different colors
04:29 - so I think that's what we'll do then
04:31 - so maybe six different colors so maybe
04:35 - red orange yellow green blue and maybe
04:50 - lastly purple that should be good enough
04:55 - okay so next to each of these basically
05:00 - steps we're going to list a percentage
05:02 - so we're going to start at zero percent
05:04 - and for the second step will say that
05:08 - when our animation reaches twenty
05:10 - percent we want the color to be orange
05:12 - and we could list forty percent for the
05:16 - next step then sixty eighty and then
05:20 - when this animation finishes the color
05:23 - should be purple so now what this Square
05:28 - should transition to a bunch of
05:30 - different colors and we also set an
05:32 - iteration count of infinite so it's just
05:34 - going to continue on and on so you can
05:36 - also use percentages for your animation
05:39 - it doesn't necessarily just have to be
05:41 - from and - let's rotate this bad boy
05:44 - let's create a new animation so at
05:47 - keyframes my rotate animation because I
05:52 - can't think of a more clever name at the
05:54 - moment so what would just do here is say
05:58 - maybe 100 percent what do we want this
06:02 - animation to do well we're going to use
06:04 - the transform property and let's rotate
06:08 - this on its z axis but make sure this
06:12 - first letter is lowercase and then we're
06:16 - going to put an amount of degrees so
06:18 - let's say we want this to rotate 360
06:21 - degrees then I just need a semicolon and
06:25 - then we should be good and we're going
06:27 - to change the animation from my color
06:30 - animation to my rotate animation so what
06:34 - this does now is that it rotates on its
06:36 - z axis 360 degrees over the course
06:41 - five seconds and we also set this to
06:43 - infinite so it's just going to continue
06:45 - on and on you know you could also
06:48 - increase this or decrease this so 720
06:52 - degrees would have this rotated a little
06:54 - bit faster let's just set this to like a
06:56 - million or something and it should go
06:58 - crazy yeah sorry if I gave you a seizure
07:01 - alright so maybe we'll just set that 360
07:05 - degrees for now and let's rotate this on
07:08 - multiple different accesses is that
07:11 - plural for axis I don't know you know
07:14 - what I mean though
07:15 - alright so XY and Z but I'm going to
07:19 - turn a few of these into a comment all
07:24 - right so maybe we'll just start with X
07:26 - and this should be a comment too okay so
07:33 - now it's rotating on its x axis and
07:40 - let's also rotate this on the y axis
07:47 - that's a pretty sweet animation all
07:50 - right
07:51 - so that's how you use a rotation sort of
07:53 - animation let's try another type of
07:56 - animation okay I have an idea let's move
07:59 - our element around the screen using the
08:01 - translate properties so let's create a
08:03 - new animation for this so keyframes my I
08:08 - don't know translate alright then what I
08:14 - think we'll do actually is set this to
08:17 - 50% and you'll see why in just a moment
08:19 - alright then what we'll do here is use
08:23 - transform translate so this takes two
08:29 - values an exposition and a Y position so
08:33 - if we want to move this maybe 100 pixels
08:35 - to the right we'll just place 100 pixels
08:38 - here followed by 0 and then let let's
08:41 - list this animation here so just going
08:44 - to copy this and paste it save reload
08:47 - and now this moves all the way to the
08:49 - right but now since we set this to 50%
08:52 - when it reaches 100 it's actually going
08:54 - to go
08:55 - back to its original position now if
08:57 - this was 100% what ends up happening is
09:00 - that when it reaches the end it's kind
09:03 - of going to like blink back to where it
09:05 - was previously so if you want this to
09:07 - look more natural and kind of ease its
09:11 - way back in you could set this to 50%
09:14 - and then when it starts to reach 100 or
09:17 - after 50% it's going to go back to its
09:20 - original position so that's something to
09:22 - consider too if you want something to
09:24 - ease back into where it was originally
09:27 - let's also move this downwards so on the
09:30 - y-axis so I'll set that to 100 pixels
09:33 - and I'll set the first value to zero so
09:36 - now this is moving down and you can
09:39 - actually combine the two so let's move
09:41 - this 100 by 100 pixels and you get like
09:45 - a diagonal animation which is pretty
09:47 - sweet all right let's go over scaling
09:50 - animations so let's create a new
09:53 - keyframe keyframes my scale and maybe
10:00 - I'll set this to 50% then we're going to
10:04 - use transform scale 2 by 2 and then
10:12 - we'll list this new animation here ok
10:18 - now the size of our element is scaling
10:21 - up by 2 or if we put maybe 3 here you
10:26 - know it's scaling on its x axis 3 times
10:29 - the original size and the y axis 2 times
10:33 - otherwise you can always shrink this too
10:36 - we can say 0.5 and 0.5 and then it's
10:42 - getting smaller and it's pulling back up
10:45 - to its normal size as well let's change
10:48 - the opacity I promise we're almost done
10:52 - we just have a few other things to cover
10:55 - so my opacity
10:58 - and let's have this start at 0% with the
11:02 - opacity opacity is like basically the
11:06 - visibility so we'll set this to zero and
11:09 - at 50% we want the opacity to be one
11:15 - which is basically 100% and then at 100%
11:18 - we want the opacity here to be zero
11:23 - again and then let's list this as the
11:26 - animation now so what ends up happening
11:29 - is that it fades in and then it fades
11:33 - out which is pretty sweet too and lastly
11:37 - let's change the font size over time so
11:40 - you can basically pick like any property
11:42 - that you want to change I'm just making
11:43 - stuff up as I go along here but you know
11:46 - there's more you can do with these you
11:48 - can also combine different
11:51 - transformations and animations - I'm
11:54 - just taking this like step by step so
11:56 - maybe let's call this animation my font
12:00 - and then at 0 % of this animation will
12:05 - have the font - size be 85 pixels which
12:10 - is what we set it to originally 50% font
12:15 - - sighs maybe 400 so the size of our
12:20 - font is going to expand to fill our
12:23 - window and then at 100% we want this the
12:28 - font size to go back to 85 and let's
12:33 - list this as the new animation paste it
12:36 - here and let's try this all right it's
12:40 - aggressively saying hi to us alright
12:43 - guys well there's one thing I forgot to
12:44 - mention to you so you can actually have
12:47 - an animation begin when you hover over
12:49 - an element so for example let's say that
12:52 - we want this animation to occur only
12:55 - when we move our mouse cursor over this
12:57 - red box our element so what we'll do is
13:00 - we'll take our element and for our
13:02 - example it's p1 and we're going to use
13:04 - the hover pseudo-class take all of the
13:07 - animation properties listed for this
13:09 - element and place it within these
13:11 - go class so we'll just place that here
13:13 - all right so let's save this reload the
13:16 - page and when this page is reloaded it
13:19 - doesn't appear to do anything until you
13:21 - move your mouse cursor over it then the
13:23 - animation begins so I thought I would
13:25 - just throw that in real quick before we
13:26 - wrapped up this video so that's the very
13:29 - basics of animations in CSS if you would
13:31 - like a copy of everything we worked on
13:33 - today I'll post this in the comments
13:35 - down below
13:35 - but yeah that's the basics of animations
13:38 - and CSS hey you yeah I'm talking to you
13:42 - if you learn something new then you can
13:45 - help me help you in three easy steps
13:48 - by smashing that like button drop a
13:50 - comment down below and subscribe if
13:53 - you'd like to become a fellow bro
13:55 - [Music]

Cleaned transcript:

hey how's it going everybody its bro here hope you're doing well and in this video I'm going to be teaching you guys all about basic animations and CSS so let's get into it before you reach the end of this video make sure to LIKE comment and subscribe so that we together can challenge and defeat the mighty YouTube algorithm everyone so basically speaking and animation allows us to change some property of an element over the course of time instead of having it become an instantaneous change which is what we're used to so let's begin by creating some sample text to work with so on my HTML document I'm just going to use a paragraph tag I'll give this a unique ID of p1 and then I'll just type in the word maybe hi again like what we did with the last video so then we'll close this safe of the page reload and then let's go to our style sheet and let's work on a square for our paragraph element well let's target p1 since we're D using an ID all right so let's make a square so we'll give this a width of 100 pixels and a height of 100 pixels and then background maybe red all right then font size I think last time we picked 85 textaligncenter and margin 0 pixels let's save reload the page okay this will work for now moving on to our next step what we need to do now is to create something called a keyframe rule and this is basically the animation itself any element that is using this keyframe rule will behave based on the animation steps that are listed within this rule so what we'll do for a keyframe rule is type in at keyframes and then we need a unique name for this animation let's say that we want to change the color from red to blue we could call this maybe my color animation otherwise name this whatever you you could still name this like best animation ever and this would still work but you know your name should be descriptive of what the animation does so I'll just call this my color animation then a set of curly braces all right this is the framework for the keyframe rule we'll need some sort of starting position and ending position the first line we're going to type from then a set of curly braces and the second line to another set of curly braces we can list some sort of property within this from line and this will be like the starting position so we can say background color should start at red and then at the end on this two line will type in background color maybe blue all right now within an element that you want to use this animation what we're going to do is use the animation property so animation colon and then we're going to take our animation name that we want to use and place it right here next to the property name for animation now second will need a duration how long do we want this animation to take so we'll use this property called animation duration and let's say that we want this animation to take five seconds so we'll place five s here so let's save and after reloading the page now the background color of our element changed from red to blue but it only does this once so you can actually set something called an animation iteration count so let's say if you want to have this animation occur twice you could put two here otherwise if you want this to be continuous you can place the word infinite so then after using animation iteration count infinite this animation will continuously occur infinitely then so we can also list multiple different steps in our animation it doesn't necessarily have to be but what we're going to do here is list some percentages instead of this keyword from and so we could actually have this train addition to a bunch of different colors so I think that's what we'll do then so maybe six different colors so maybe red orange yellow green blue and maybe lastly purple that should be good enough okay so next to each of these basically steps we're going to list a percentage so we're going to start at zero percent and for the second step will say that when our animation reaches twenty percent we want the color to be orange and we could list forty percent for the next step then sixty eighty and then when this animation finishes the color should be purple so now what this Square should transition to a bunch of different colors and we also set an iteration count of infinite so it's just going to continue on and on so you can also use percentages for your animation it doesn't necessarily just have to be from and let's rotate this bad boy let's create a new animation so at keyframes my rotate animation because I can't think of a more clever name at the moment so what would just do here is say maybe 100 percent what do we want this animation to do well we're going to use the transform property and let's rotate this on its z axis but make sure this first letter is lowercase and then we're going to put an amount of degrees so let's say we want this to rotate 360 degrees then I just need a semicolon and then we should be good and we're going to change the animation from my color animation to my rotate animation so what this does now is that it rotates on its z axis 360 degrees over the course five seconds and we also set this to infinite so it's just going to continue on and on you know you could also increase this or decrease this so 720 degrees would have this rotated a little bit faster let's just set this to like a million or something and it should go crazy yeah sorry if I gave you a seizure alright so maybe we'll just set that 360 degrees for now and let's rotate this on multiple different accesses is that plural for axis I don't know you know what I mean though alright so XY and Z but I'm going to turn a few of these into a comment all right so maybe we'll just start with X and this should be a comment too okay so now it's rotating on its x axis and let's also rotate this on the y axis that's a pretty sweet animation all right so that's how you use a rotation sort of animation let's try another type of animation okay I have an idea let's move our element around the screen using the translate properties so let's create a new animation for this so keyframes my I don't know translate alright then what I think we'll do actually is set this to 50% and you'll see why in just a moment alright then what we'll do here is use transform translate so this takes two values an exposition and a Y position so if we want to move this maybe 100 pixels to the right we'll just place 100 pixels here followed by 0 and then let let's list this animation here so just going to copy this and paste it save reload and now this moves all the way to the right but now since we set this to 50% when it reaches 100 it's actually going to go back to its original position now if this was 100% what ends up happening is that when it reaches the end it's kind of going to like blink back to where it was previously so if you want this to look more natural and kind of ease its way back in you could set this to 50% and then when it starts to reach 100 or after 50% it's going to go back to its original position so that's something to consider too if you want something to ease back into where it was originally let's also move this downwards so on the yaxis so I'll set that to 100 pixels and I'll set the first value to zero so now this is moving down and you can actually combine the two so let's move this 100 by 100 pixels and you get like a diagonal animation which is pretty sweet all right let's go over scaling animations so let's create a new keyframe keyframes my scale and maybe I'll set this to 50% then we're going to use transform scale 2 by 2 and then we'll list this new animation here ok now the size of our element is scaling up by 2 or if we put maybe 3 here you know it's scaling on its x axis 3 times the original size and the y axis 2 times otherwise you can always shrink this too we can say 0.5 and 0.5 and then it's getting smaller and it's pulling back up to its normal size as well let's change the opacity I promise we're almost done we just have a few other things to cover so my opacity and let's have this start at 0% with the opacity opacity is like basically the visibility so we'll set this to zero and at 50% we want the opacity to be one which is basically 100% and then at 100% we want the opacity here to be zero again and then let's list this as the animation now so what ends up happening is that it fades in and then it fades out which is pretty sweet too and lastly let's change the font size over time so you can basically pick like any property that you want to change I'm just making stuff up as I go along here but you know there's more you can do with these you can also combine different transformations and animations I'm just taking this like step by step so maybe let's call this animation my font and then at 0 % of this animation will have the font size be 85 pixels which is what we set it to originally 50% font sighs maybe 400 so the size of our font is going to expand to fill our window and then at 100% we want this the font size to go back to 85 and let's list this as the new animation paste it here and let's try this all right it's aggressively saying hi to us alright guys well there's one thing I forgot to mention to you so you can actually have an animation begin when you hover over an element so for example let's say that we want this animation to occur only when we move our mouse cursor over this red box our element so what we'll do is we'll take our element and for our example it's p1 and we're going to use the hover pseudoclass take all of the animation properties listed for this element and place it within these go class so we'll just place that here all right so let's save this reload the page and when this page is reloaded it doesn't appear to do anything until you move your mouse cursor over it then the animation begins so I thought I would just throw that in real quick before we wrapped up this video so that's the very basics of animations in CSS if you would like a copy of everything we worked on today I'll post this in the comments down below but yeah that's the basics of animations and CSS hey you yeah I'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro
