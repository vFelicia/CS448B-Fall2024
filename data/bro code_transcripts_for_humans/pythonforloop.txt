With timestamps:

00:00 - hey what's going on everybody it's bro
00:02 - hope you're doing well
00:03 - and in this video i'm going to explain
00:04 - for loops in python and at the end of
00:06 - this video we're going to create a
00:07 - countdown timer so
00:09 - sit back relax and enjoy the show
00:14 - if you wouldn't mind please like comment
00:16 - and subscribe
00:17 - one like equals one prayer for the
00:19 - youtube algorithm
00:21 - all right guys and gals let's talk about
00:23 - for loops a for loop is a statement that
00:26 - will execute
00:27 - its block of code a limited amount of
00:29 - times
00:30 - it's similar but different from a while
00:32 - loop because a while loop
00:33 - could iterate an unlimited or infinite
00:37 - amount of times depending on the
00:38 - condition a for loop
00:40 - will only iterate a limited amount of
00:42 - times and before
00:44 - we start executing its block of code we
00:46 - already know how many times we're going
00:47 - to repeat this block of code
00:49 - so for this example let's create a for
00:50 - loop that will simply count it to 10
00:52 - and then we'll create a few more
00:54 - sophisticated examples
00:55 - so to create a for loop that will count
00:57 - up to 10 this is what we'll type
00:59 - four and then we need some sort of
01:00 - counter people usually either write
01:03 - index or they shorten it to just i i for
01:05 - index
01:06 - four i in and we can set a range range
01:10 - 10. so we will execute this for loop 10
01:13 - times
01:13 - and to finish this for loop just add a
01:15 - colon at the end
01:16 - so the next line or lines will be
01:19 - indented so that's the block of code for
01:21 - the for loop
01:22 - what do we want to do during each
01:23 - iteration let's just print what i
01:26 - is and let's take a look to see what
01:28 - would happen
01:29 - so we executed this for loop ten times
01:31 - except with computers computers always
01:33 - start with zero
01:34 - so when we said four i in range ten
01:37 - we're counting numbers
01:38 - zero through nine so it's as if this
01:41 - number
01:41 - is exclusive so there's two ways we can
01:44 - change this we could say range
01:45 - ten plus one or what i would do is say
01:47 - print
01:48 - i plus one so this will give us numbers
01:51 - one through ten so that's a for loop it
01:54 - will execute a limited amount of times
01:56 - this time let's count a range between
01:58 - two numbers
01:59 - not necessarily 0 to 10 but something
02:02 - else so let's say 4i
02:04 - in range maybe the numbers 50 through
02:07 - 100
02:08 - so within my range function i will pass
02:10 - in two numbers
02:11 - the first number will be the starting
02:13 - point and the second number is the
02:15 - ending point
02:16 - this first number is inclusive and the
02:18 - second number is exclusive
02:20 - so let's print this print whatever i is
02:23 - so this will count 50 through 99
02:26 - actually
02:26 - if you wanted to include this last
02:28 - number since it's exclusive what we
02:30 - could do
02:31 - is just add one to the end so this would
02:33 - give us 50 through 100
02:35 - except that this will iterate 51 times
02:38 - since we're counting 50. so you just
02:40 - have to pay attention to your range and
02:42 - the numbers that it's counting now one
02:44 - thing that you can do with the range
02:45 - function
02:46 - is that you can add a third argument and
02:48 - this will function as the step
02:49 - how much you want to count up or down by
02:52 - so this time let's count up by two
02:54 - so i'll add comma two we're passing in a
02:57 - third argument this time
02:58 - so this program will now count up by two
03:01 - starting at 50
03:02 - and go all the way to 100. a benefit of
03:06 - for loops is that we can iterate through
03:08 - anything that is considered iterable
03:10 - this could include a string the letters
03:12 - in a string
03:13 - or any sort of collection so this time
03:15 - let's create a for loop that will
03:17 - iterate once
03:18 - through each letter in maybe a name so
03:21 - for
03:21 - i in and let's type a name here type in
03:24 - whatever your first name and last name
03:25 - is
03:27 - and then we will print whatever i is
03:30 - for i in whatever your name is print
03:33 - each letter
03:34 - in the string so when i run this each
03:36 - letter
03:37 - within my name will be printed to a new
03:39 - line
03:40 - all right people for my last trick we're
03:42 - going to create a program where we will
03:44 - simulate a countdown starting at 10 and
03:47 - count down to zero
03:48 - and then maybe once we reach zero we can
03:50 - print something such as
03:51 - happy new year so to create this program
03:53 - we'll need an import so at the top
03:55 - we're going to import the time module
03:57 - because we'll be waiting
03:58 - one second after each iteration of this
04:01 - for loop
04:02 - so to create this program let's say four
04:04 - you could say i but you can really write
04:06 - anything here and
04:07 - to demonstrate that let's say four
04:09 - seconds four
04:10 - seconds in range so
04:13 - the starting point is going to be ten
04:15 - the ending point will be zero
04:17 - and we'll add a step what do we want to
04:19 - count up or down by
04:20 - let's set this to negative one so this
04:22 - will be a countdown starting at ten and
04:24 - ending at zero
04:25 - so after each iteration let's print
04:28 - whatever i is or in this case seconds
04:32 - and then we can sleep have our thread
04:34 - sleep for
04:35 - a number of seconds too so after we
04:37 - print seconds
04:39 - type time dot sleep and pass in
04:42 - how long you want to sleep for i would
04:44 - like to sleep for one second
04:46 - and then at the end let's print happy
04:48 - new year make sure this isn't within the
04:50 - for loop
04:51 - print happy new year and well
04:55 - that's it let's test this so we'll begin
04:57 - at 10 and count down to zero and you can
04:59 - see that
05:00 - my thread that is running this program
05:02 - is sleeping for one second
05:04 - after each iteration of this for loop
05:06 - then once we reach zero
05:07 - it will display happy new year well
05:10 - everybody that's the basics
05:11 - of for loops a for loop is a statement
05:14 - that will execute its block of code
05:16 - a limited amount of times it's different
05:18 - from a while loop because a while loop
05:20 - could
05:21 - execute an infinite or unlimited amount
05:23 - of times
05:24 - with for loops they execute limited
05:26 - amounts of times
05:27 - and before we enter the for loop we
05:29 - already know how many times we're going
05:31 - to iterate this for loop
05:32 - if you'd like a copy of all this code i
05:34 - will post this in the comments down
05:36 - below
05:36 - but yeah that's how for loops work in
05:39 - python
05:41 - hey you yeah i'm talking to you if you
05:43 - learned something new
05:44 - then help me help you in three easy
05:47 - steps
05:47 - by smashing that like button drop a
05:49 - comment down below
05:51 - and subscribe if you'd like to become a
05:52 - fellow bro
06:07 - [Music]
06:15 - you

Cleaned transcript:

hey what's going on everybody it's bro hope you're doing well and in this video i'm going to explain for loops in python and at the end of this video we're going to create a countdown timer so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm all right guys and gals let's talk about for loops a for loop is a statement that will execute its block of code a limited amount of times it's similar but different from a while loop because a while loop could iterate an unlimited or infinite amount of times depending on the condition a for loop will only iterate a limited amount of times and before we start executing its block of code we already know how many times we're going to repeat this block of code so for this example let's create a for loop that will simply count it to 10 and then we'll create a few more sophisticated examples so to create a for loop that will count up to 10 this is what we'll type four and then we need some sort of counter people usually either write index or they shorten it to just i i for index four i in and we can set a range range 10. so we will execute this for loop 10 times and to finish this for loop just add a colon at the end so the next line or lines will be indented so that's the block of code for the for loop what do we want to do during each iteration let's just print what i is and let's take a look to see what would happen so we executed this for loop ten times except with computers computers always start with zero so when we said four i in range ten we're counting numbers zero through nine so it's as if this number is exclusive so there's two ways we can change this we could say range ten plus one or what i would do is say print i plus one so this will give us numbers one through ten so that's a for loop it will execute a limited amount of times this time let's count a range between two numbers not necessarily 0 to 10 but something else so let's say 4i in range maybe the numbers 50 through 100 so within my range function i will pass in two numbers the first number will be the starting point and the second number is the ending point this first number is inclusive and the second number is exclusive so let's print this print whatever i is so this will count 50 through 99 actually if you wanted to include this last number since it's exclusive what we could do is just add one to the end so this would give us 50 through 100 except that this will iterate 51 times since we're counting 50. so you just have to pay attention to your range and the numbers that it's counting now one thing that you can do with the range function is that you can add a third argument and this will function as the step how much you want to count up or down by so this time let's count up by two so i'll add comma two we're passing in a third argument this time so this program will now count up by two starting at 50 and go all the way to 100. a benefit of for loops is that we can iterate through anything that is considered iterable this could include a string the letters in a string or any sort of collection so this time let's create a for loop that will iterate once through each letter in maybe a name so for i in and let's type a name here type in whatever your first name and last name is and then we will print whatever i is for i in whatever your name is print each letter in the string so when i run this each letter within my name will be printed to a new line all right people for my last trick we're going to create a program where we will simulate a countdown starting at 10 and count down to zero and then maybe once we reach zero we can print something such as happy new year so to create this program we'll need an import so at the top we're going to import the time module because we'll be waiting one second after each iteration of this for loop so to create this program let's say four you could say i but you can really write anything here and to demonstrate that let's say four seconds four seconds in range so the starting point is going to be ten the ending point will be zero and we'll add a step what do we want to count up or down by let's set this to negative one so this will be a countdown starting at ten and ending at zero so after each iteration let's print whatever i is or in this case seconds and then we can sleep have our thread sleep for a number of seconds too so after we print seconds type time dot sleep and pass in how long you want to sleep for i would like to sleep for one second and then at the end let's print happy new year make sure this isn't within the for loop print happy new year and well that's it let's test this so we'll begin at 10 and count down to zero and you can see that my thread that is running this program is sleeping for one second after each iteration of this for loop then once we reach zero it will display happy new year well everybody that's the basics of for loops a for loop is a statement that will execute its block of code a limited amount of times it's different from a while loop because a while loop could execute an infinite or unlimited amount of times with for loops they execute limited amounts of times and before we enter the for loop we already know how many times we're going to iterate this for loop if you'd like a copy of all this code i will post this in the comments down below but yeah that's how for loops work in python hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
