With timestamps:

00:00 - hey again everybody it's me big surprise
00:02 - there today I'm going to explain the
00:03 - filter method in JavaScript the filter
00:06 - method creates a new array by filtering
00:09 - out elements in this example we'll
00:11 - create an array of
00:13 - numbers we will filter out any numbers
00:16 - that are odd let's add the numbers 1
00:19 - through
00:22 - 7 now we need a
00:24 - function
00:25 - function is even we have one parameter
00:29 - we have an element that's going to be
00:31 - provided to us by the filter method we
00:34 - are going to return then write a
00:36 - condition we will take our element
00:40 - modulus 2 the modulus operator gives you
00:43 - the remainder of any division you can
00:45 - use modulus 2 to check to see if a
00:47 - number is even if this condition is zero
00:50 - strictly equal to zero then we will
00:53 - return true we will be returning a
00:56 - Boolean true or false the filter method
00:59 - will will take any values that return
01:01 - true and stick them within a new array
01:04 - which will effectively filter out any
01:05 - elements we don't need that don't return
01:07 - true let's see if this works I will
01:09 - create a new array even nums equals take
01:14 - our original array use the filter method
01:18 - pass in a call back is even we will
01:23 - display
01:25 - console.log our new array even numbers
01:29 - and there we are
01:30 - 2 4 6 let's do this with odd
01:34 - numbers function is
01:38 - odd take our element modulus 2 is this
01:42 - strictly not equal to zero that means
01:46 - the number is
01:47 - odd let's create a new array let odd
01:51 - nums equals our original array numbers
01:56 - do use the filter method passing a call
01:58 - back is odd let's check out our new
02:02 - array odd
02:04 - nums there we are we have the numbers 1
02:07 - 35 7 any numbers that are odd let's go
02:11 - over another
02:12 - example I will create an array of Ages
02:15 - I'll use const this time instead of let
02:17 - const ages Pretend We're teaching a
02:21 - college class we might have some
02:23 - students still in high school let's say
02:24 - a student is 16 another is 17 two are 18
02:30 - 19 20 and then we have somebody that's
02:33 - just a little bit older they're um 60
02:36 - we'll use the filter method to filter
02:38 - out anybody that is under 18 we will
02:40 - find all of the adults we will need a
02:43 - function function is adult we have one
02:48 - element as a parameter that's going to
02:50 - be provided to us we will return a
02:55 - condition return check our element is it
02:59 - great greater than or equal to
03:02 - 18 so that's our function let's create a
03:06 - new array of adults equals take our
03:10 - original array dot use the filter method
03:14 - pass in a call back is adult then
03:18 - display our new array
03:20 - console.log
03:22 - adults we have five elements the age of
03:25 - the students is 18 18 19 20 and 60 let's
03:30 - do this with is children to find anybody
03:33 - that's under
03:34 - 18 is child
03:37 - function return element less than 18
03:42 - we'll create a new array const children
03:47 - equals take our original array use the
03:50 - filter method pass in a call back is
03:53 - child then display the new array we have
03:57 - two students that are children one is 16
04:00 - the other is 17 last example we'll
04:03 - create an array of words const
04:07 - words add some words I think I'll add
04:10 - some fruit I'll add an
04:13 - apple
04:15 - orange
04:17 - banana
04:20 - kiwi
04:24 - pomegranate and a
04:27 - coconut I will filter out any words
04:30 - where the length of that word is above
04:32 - six so we will create a function
04:35 - function get short
04:39 - words we have an element as a
04:42 - parameter we will return a condition we
04:46 - will check if our element access the
04:49 - length property of that element they're
04:51 - strings so they all have a length
04:53 - property how many characters are they
04:55 - long that's the length check to see if
04:57 - the length of this element is less than
05:00 - or equal to
05:01 - six if it is return true if not return
05:05 - false we will create a new array let's
05:08 - call this array short words equals take
05:12 - our array use the built-in filter method
05:16 - pass in a call back get short words then
05:19 - we will console.log the new array short
05:23 - words in our array there are four
05:26 - elements with the length of the
05:27 - characters of each string is six
05:29 - surrender Apple orange banana kiwi then
05:33 - to finish this off let's get any long
05:35 - words we'll create a new
05:37 - function get long words check the length
05:41 - of the element to see if it's above six
05:45 - then we will create a new array const
05:48 - long words equals take our original
05:51 - array use the filter method pass in a
05:54 - call back get long words then we will
05:57 - display our new array long words within
06:01 - our original array there's two words
06:03 - that are considered long pomegranate and
06:05 - coconut these words each have more than
06:07 - six characters coconut is seven
06:11 - pomegranate is 11 all right everybody
06:14 - that is the filter method it creates a
06:16 - new array by filtering out elements your
06:19 - callback is likely going to check in
06:21 - condition does each element pass this
06:23 - condition and well everybody that is the
06:25 - filter method in
06:28 - JavaScript

Cleaned transcript:

hey again everybody it's me big surprise there today I'm going to explain the filter method in JavaScript the filter method creates a new array by filtering out elements in this example we'll create an array of numbers we will filter out any numbers that are odd let's add the numbers 1 through 7 now we need a function function is even we have one parameter we have an element that's going to be provided to us by the filter method we are going to return then write a condition we will take our element modulus 2 the modulus operator gives you the remainder of any division you can use modulus 2 to check to see if a number is even if this condition is zero strictly equal to zero then we will return true we will be returning a Boolean true or false the filter method will will take any values that return true and stick them within a new array which will effectively filter out any elements we don't need that don't return true let's see if this works I will create a new array even nums equals take our original array use the filter method pass in a call back is even we will display console.log our new array even numbers and there we are 2 4 6 let's do this with odd numbers function is odd take our element modulus 2 is this strictly not equal to zero that means the number is odd let's create a new array let odd nums equals our original array numbers do use the filter method passing a call back is odd let's check out our new array odd nums there we are we have the numbers 1 35 7 any numbers that are odd let's go over another example I will create an array of Ages I'll use const this time instead of let const ages Pretend We're teaching a college class we might have some students still in high school let's say a student is 16 another is 17 two are 18 19 20 and then we have somebody that's just a little bit older they're um 60 we'll use the filter method to filter out anybody that is under 18 we will find all of the adults we will need a function function is adult we have one element as a parameter that's going to be provided to us we will return a condition return check our element is it great greater than or equal to 18 so that's our function let's create a new array of adults equals take our original array dot use the filter method pass in a call back is adult then display our new array console.log adults we have five elements the age of the students is 18 18 19 20 and 60 let's do this with is children to find anybody that's under 18 is child function return element less than 18 we'll create a new array const children equals take our original array use the filter method pass in a call back is child then display the new array we have two students that are children one is 16 the other is 17 last example we'll create an array of words const words add some words I think I'll add some fruit I'll add an apple orange banana kiwi pomegranate and a coconut I will filter out any words where the length of that word is above six so we will create a function function get short words we have an element as a parameter we will return a condition we will check if our element access the length property of that element they're strings so they all have a length property how many characters are they long that's the length check to see if the length of this element is less than or equal to six if it is return true if not return false we will create a new array let's call this array short words equals take our array use the builtin filter method pass in a call back get short words then we will console.log the new array short words in our array there are four elements with the length of the characters of each string is six surrender Apple orange banana kiwi then to finish this off let's get any long words we'll create a new function get long words check the length of the element to see if it's above six then we will create a new array const long words equals take our original array use the filter method pass in a call back get long words then we will display our new array long words within our original array there's two words that are considered long pomegranate and coconut these words each have more than six characters coconut is seven pomegranate is 11 all right everybody that is the filter method it creates a new array by filtering out elements your callback is likely going to check in condition does each element pass this condition and well everybody that is the filter method in JavaScript
