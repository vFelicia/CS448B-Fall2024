With timestamps:

00:02 - well well well
00:03 - welcome back so we need to talk about
00:05 - arithmetic operators because well this
00:07 - wouldn't be a full course without them
00:09 - so as you probably know arithmetic
00:11 - operators are
00:12 - well addition subtraction multiplication
00:15 - division and there's a few others too
00:17 - unique with programming such as modulus
00:19 - increment and decrement so let's go over
00:21 - a few let's say that we have
00:23 - int z and if we need to add two numbers
00:26 - we could say
00:26 - x plus y equals z and then display the
00:30 - sum which of course
00:32 - is seven so subtraction is well minus
00:35 - five minus two is three multiplication
00:38 - is an asterisk
00:39 - five times two equals ten okay now pay
00:43 - attention to this with division
00:45 - so 5 divided by 2 equals 2.5 right well
00:48 - that's where you're wrong
00:50 - it's 2 because we're storing the results
00:52 - within an integer and with integers we
00:54 - can only store whole numbers
00:56 - so we will lose that decimal portion it
00:58 - will be truncated there's a few things
01:00 - we'll need to change
01:01 - first we'll need to store the result
01:03 - within a float
01:05 - or a double and then let's display this
01:07 - percent f for a float
01:09 - okay another thing that we need to
01:10 - change too and that involves integer
01:12 - division
01:13 - if we're dividing by an integer we'll
01:15 - truncate that decimal portion
01:17 - there's one of two things we can do we
01:19 - can either change our divisor to a float
01:22 - or a double and that will solve that
01:25 - problem
01:25 - 2.5 or if we would like to keep this as
01:28 - an integer
01:29 - we can convert this integer to a float
01:32 - or double
01:32 - by preceding the divisor with float
01:36 - or double either one so if i would like
01:40 - to keep
01:41 - y as an integer and we divide x by y
01:44 - we will convert 2 into a float so 2.0
01:48 - and store the result within float z and
01:50 - the result
01:51 - is 2.5 so if you're performing division
01:54 - with any integers you need to pay
01:56 - attention to
01:57 - integer division and you may need to
01:59 - cast your divisor
02:00 - as a float or as a double now we have
02:03 - modulus
02:04 - modulus gives you the remainder of any
02:06 - division five does not divide by
02:09 - two evenly int z equals
02:12 - x modulus y and if we display z
02:17 - so make sure to change your format
02:19 - specifier if you didn't
02:20 - the remainder of five divided by two is
02:23 - one if this was four four divides by two
02:27 - evenly
02:28 - and the result is going to be zero
02:30 - modulus gives you the remainder of any
02:31 - division
02:32 - it's actually pretty helpful to find if
02:34 - a number is even odd
02:36 - all you do is say modulus 2 or some
02:39 - variable containing the value of 2
02:41 - either way and then we can increment or
02:43 - decrement a number by 1.
02:45 - if i need to increment x for some reason
02:47 - you'll see this when we get to the video
02:49 - on
02:49 - loops i could say x plus plus
02:53 - and then let's display x x
02:56 - incremented by one would be six
03:00 - and then let's decrement y y minus minus
03:03 - and y decremented by one equals one
03:07 - so yeah everybody those are a few
03:09 - arithmetic operators a lot of these are
03:11 - fairly simple
03:12 - you know addition subtraction
03:14 - multiplication and division
03:15 - do pay attention to integer division
03:18 - because that can throw off your program
03:19 - then there's also modulus increment and
03:22 - decrement
03:23 - if you found this video helpful please
03:24 - remember to smash that like button
03:26 - leave a random comment down below and
03:28 - subscribe if you'd like to become a
03:29 - fellow bro

Cleaned transcript:

well well well welcome back so we need to talk about arithmetic operators because well this wouldn't be a full course without them so as you probably know arithmetic operators are well addition subtraction multiplication division and there's a few others too unique with programming such as modulus increment and decrement so let's go over a few let's say that we have int z and if we need to add two numbers we could say x plus y equals z and then display the sum which of course is seven so subtraction is well minus five minus two is three multiplication is an asterisk five times two equals ten okay now pay attention to this with division so 5 divided by 2 equals 2.5 right well that's where you're wrong it's 2 because we're storing the results within an integer and with integers we can only store whole numbers so we will lose that decimal portion it will be truncated there's a few things we'll need to change first we'll need to store the result within a float or a double and then let's display this percent f for a float okay another thing that we need to change too and that involves integer division if we're dividing by an integer we'll truncate that decimal portion there's one of two things we can do we can either change our divisor to a float or a double and that will solve that problem 2.5 or if we would like to keep this as an integer we can convert this integer to a float or double by preceding the divisor with float or double either one so if i would like to keep y as an integer and we divide x by y we will convert 2 into a float so 2.0 and store the result within float z and the result is 2.5 so if you're performing division with any integers you need to pay attention to integer division and you may need to cast your divisor as a float or as a double now we have modulus modulus gives you the remainder of any division five does not divide by two evenly int z equals x modulus y and if we display z so make sure to change your format specifier if you didn't the remainder of five divided by two is one if this was four four divides by two evenly and the result is going to be zero modulus gives you the remainder of any division it's actually pretty helpful to find if a number is even odd all you do is say modulus 2 or some variable containing the value of 2 either way and then we can increment or decrement a number by 1. if i need to increment x for some reason you'll see this when we get to the video on loops i could say x plus plus and then let's display x x incremented by one would be six and then let's decrement y y minus minus and y decremented by one equals one so yeah everybody those are a few arithmetic operators a lot of these are fairly simple you know addition subtraction multiplication and division do pay attention to integer division because that can throw off your program then there's also modulus increment and decrement if you found this video helpful please remember to smash that like button leave a random comment down below and subscribe if you'd like to become a fellow bro
