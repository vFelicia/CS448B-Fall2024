With timestamps:

00:00 - hey what's going on everybody it's your
00:01 - bro here hope you're doing well and in
00:03 - this video i'm going to teach you guys
00:04 - all about the grid geometry manager in
00:06 - python so sit back relax and enjoy the
00:09 - show
00:11 - if you find this video helpful please
00:13 - remember to like
00:14 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - all right everybody let's talk about the
00:21 - grid geometry manager
00:22 - well because we have to this is a useful
00:25 - way to organize widgets within a
00:26 - container
00:27 - imagine our window is being arranged
00:29 - into a series of
00:30 - rows and columns similar to an excel
00:33 - spreadsheet
00:34 - i tend to use that example a lot the top
00:36 - left most cell
00:37 - is row zero column zero computers always
00:40 - begin with zero so that's why our grid
00:42 - doesn't begin with
00:43 - row one column one and we can list which
00:46 - row and column
00:47 - we would like our widgets to be placed
00:48 - within and by default we only have
00:51 - one row and one column to work with at
00:53 - the start but we can explicitly state
00:55 - which row and column this widget should
00:57 - be placed within
00:58 - relative to the container that it's in
01:00 - and python will create new relative rows
01:02 - and columns for us if we state where
01:04 - these widgets
01:05 - should be placed so let's create a small
01:08 - submission form
01:09 - and then organize all of our widgets
01:10 - using our new grid system that we have
01:12 - so let's begin by creating a window
01:14 - window equals tk
01:16 - followed by window.mainloop now that we
01:18 - have our window we'll need to create
01:20 - some widgets to add to this window
01:22 - so let's say that we want an entry box
01:24 - and a label for a first name
01:26 - last name and email address as well as a
01:29 - submit button
01:30 - so let's create a label and an entry box
01:33 - for a first name just to demonstrate
01:35 - this
01:35 - so let's call this label first name
01:39 - label equals label we're adding this to
01:41 - the window
01:42 - and let's set the text to first
01:46 - name for now i'm just going to use that
01:49 - pack to demonstrate the differences
01:50 - between
01:51 - pack and grid and let's create an entry
01:54 - box
01:56 - let's call this first name
01:59 - entry equals entry
02:03 - we are adding this to the window and for
02:06 - now we're just going to
02:07 - pack this and let's take a look
02:12 - so here's our label on the top it says
02:14 - first name and then it has
02:15 - our entry box right underneath so what
02:18 - if we want to have
02:19 - this label on the left hand side and our
02:22 - entry box on the right hand side of the
02:24 - label
02:25 - we're better off using the grid geometry
02:28 - manager
02:28 - so we're going to replace pack with grid
02:35 - and we have to set which row and column
02:37 - that we want each of these widgets to be
02:39 - placed within
02:40 - normally if you use the pack geometry
02:43 - manager
02:44 - as you create new widgets they're just
02:46 - going to be placed directly underneath
02:48 - in one long column so
02:51 - let's say that for our name label we
02:54 - want to place this where
02:56 - the row is zero and the column is zero
02:58 - that's the top left corner
03:00 - so within the grid geometry manager when
03:03 - we call it we're going to set
03:05 - row to equal zero as well as column
03:08 - to equal zero and then for the first
03:11 - name
03:11 - entry we want this to be on the right
03:13 - hand side of our label
03:15 - so we'll place this within the same row
03:17 - row
03:18 - equals zero but in a different column
03:21 - column equals one so column one
03:24 - is directly to the right of column zero
03:26 - and then when we compile and run this
03:28 - we now have our entry box to the right
03:31 - of our label that we have
03:33 - so let's repeat the process for a last
03:35 - name an email address and then a submit
03:37 - button
03:38 - so i'm just going to copy what we have
03:40 - here and change first name
03:41 - to last name so last name label
03:46 - and we'll change the text to last name
03:49 - last name entry and we'll keep that the
03:53 - same
03:54 - now we want this last name label to be
03:57 - underneath
03:58 - the first name label because right now
04:00 - they're going to overlap because we have
04:02 - them in the same
04:02 - row and columns so you can see that we
04:05 - can no longer see the first name label
04:07 - or the
04:07 - first name entry so let's place this
04:10 - directly underneath
04:11 - we're going to put these underneath by
04:12 - one row
04:14 - so we'll keep the columns the same but
04:16 - we're going to
04:17 - put this underneath by one row so row
04:19 - one
04:20 - and row one for the last name entry and
04:23 - what you get is that
04:24 - these two labels and entry boxes are
04:27 - arranged neatly
04:28 - into rows and columns and let's do the
04:30 - same thing for an email
04:33 - so i'm going to copy what we have and
04:35 - we're going to change
04:36 - last name to email so
04:39 - email label and email entry and then
04:42 - change
04:43 - for the text last name to just email
04:46 - and we're going to place these where row
04:49 - equals 2
04:49 - and we'll keep the column the same and
04:51 - for email entry
04:54 - row 2 column one
04:58 - so doesn't that look a lot better now
05:00 - let's create a submit button
05:03 - so let's call this submit button
05:06 - equals button and then we're adding this
05:09 - to the window
05:10 - and we should set some text text equals
05:14 - submit i guess dot grid
05:18 - and we want to place this underneath
05:21 - currently kind of just shoves it
05:22 - underneath for now
05:23 - let's say that we want this between
05:25 - these two columns
05:28 - so we'll want to set the row and the
05:30 - column to begin with
05:31 - row is going to equal three
05:34 - and column we'll set this equal to zero
05:37 - for now
05:38 - there isn't going to be any apparent
05:39 - change it's still going to be in the
05:40 - same place
05:41 - but one thing that we can do is use an
05:43 - option called column
05:45 - span we can have a widget take up more
05:47 - than one column
05:48 - and it's going to place this widget in
05:50 - between both of these columns
05:52 - in between the combined width of both of
05:55 - them
05:55 - so we'll add column span
05:59 - equals two so this widget is going to
06:01 - take up
06:02 - the next two available columns including
06:04 - the one that it's currently
06:06 - in and you can see that our submit
06:08 - button is now between
06:10 - these two columns that we have one thing
06:12 - that you should know is that
06:14 - the column width is dependent on the
06:16 - width of the largest widget that is
06:17 - contained within that particular column
06:20 - let's say that we increase the width of
06:22 - our first name
06:23 - label well our column is going to expand
06:26 - to actually fit
06:27 - that widget that we have so for our
06:29 - first name label
06:30 - let's set the width to maybe 20.
06:34 - and this is going to increase the width
06:36 - of column 0
06:38 - and to even better demonstrate this
06:40 - let's color
06:41 - each label a certain color just for a
06:43 - visual
06:44 - for our first name label let's say this
06:46 - is red and then for
06:48 - our last name label let's set this to
06:51 - green
06:53 - and then for email maybe blue
07:01 - now all of these are color coordinated
07:03 - and you can see that
07:04 - the background color of our first name
07:06 - label
07:07 - is taking up the entire column space now
07:10 - what if we changed the size of our
07:12 - email label to something even larger
07:14 - like 30
07:16 - so width equals 30.
07:20 - and now the column 0 has expanded to
07:24 - accommodate the size of our largest
07:26 - widget which is our email
07:27 - which has a width of 30. and before we
07:30 - finish this video let's add a title to
07:32 - the submission form
07:34 - right on top of the first name label and
07:36 - the entry label
07:38 - so let's call this title label equals
07:41 - label
07:42 - writing this to the window let's set
07:43 - some text let's say
07:46 - enter your info
07:49 - and let's pick font font equals
07:54 - what am i feeling like today maybe just
07:57 - arial
07:58 - and then a size maybe 25 we're going to
08:01 - use the
08:01 - grid geometry manager
08:05 - and we want this at the top so we want
08:07 - row zero at least
08:09 - i want this to take up two columns so
08:12 - we'll say
08:13 - column equals zero and then set a column
08:15 - span
08:16 - column span equals two
08:20 - now a few things are going to overlap
08:22 - here
08:24 - so we're going to move everything down
08:26 - by one row
08:27 - besides our title label so we want
08:31 - this first name label to be directly
08:32 - underneath our title label
08:34 - so let's move everything down by one row
08:47 - and our title is going to be directly on
08:49 - top of our first name label
08:51 - as well as the first name entry box that
08:53 - we have
08:54 - all right so that's the very basics of
08:56 - the grid geometry manager if you want a
08:59 - copy of all this code
09:00 - i'll post all of this in the comments
09:01 - down below but yeah that's the basics of
09:03 - the grid geometry manager
09:05 - in python hey you
09:08 - yeah i'm talking to you if you learn
09:10 - something new then you can help
09:12 - me help you in three easy steps
09:15 - by smashing that like button drop a
09:17 - comment down below
09:19 - and subscribe if you'd like to become a
09:20 - fellow bro
09:22 - [Music]
09:42 - you

Cleaned transcript:

hey what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys all about the grid geometry manager in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right everybody let's talk about the grid geometry manager well because we have to this is a useful way to organize widgets within a container imagine our window is being arranged into a series of rows and columns similar to an excel spreadsheet i tend to use that example a lot the top left most cell is row zero column zero computers always begin with zero so that's why our grid doesn't begin with row one column one and we can list which row and column we would like our widgets to be placed within and by default we only have one row and one column to work with at the start but we can explicitly state which row and column this widget should be placed within relative to the container that it's in and python will create new relative rows and columns for us if we state where these widgets should be placed so let's create a small submission form and then organize all of our widgets using our new grid system that we have so let's begin by creating a window window equals tk followed by window.mainloop now that we have our window we'll need to create some widgets to add to this window so let's say that we want an entry box and a label for a first name last name and email address as well as a submit button so let's create a label and an entry box for a first name just to demonstrate this so let's call this label first name label equals label we're adding this to the window and let's set the text to first name for now i'm just going to use that pack to demonstrate the differences between pack and grid and let's create an entry box let's call this first name entry equals entry we are adding this to the window and for now we're just going to pack this and let's take a look so here's our label on the top it says first name and then it has our entry box right underneath so what if we want to have this label on the left hand side and our entry box on the right hand side of the label we're better off using the grid geometry manager so we're going to replace pack with grid and we have to set which row and column that we want each of these widgets to be placed within normally if you use the pack geometry manager as you create new widgets they're just going to be placed directly underneath in one long column so let's say that for our name label we want to place this where the row is zero and the column is zero that's the top left corner so within the grid geometry manager when we call it we're going to set row to equal zero as well as column to equal zero and then for the first name entry we want this to be on the right hand side of our label so we'll place this within the same row row equals zero but in a different column column equals one so column one is directly to the right of column zero and then when we compile and run this we now have our entry box to the right of our label that we have so let's repeat the process for a last name an email address and then a submit button so i'm just going to copy what we have here and change first name to last name so last name label and we'll change the text to last name last name entry and we'll keep that the same now we want this last name label to be underneath the first name label because right now they're going to overlap because we have them in the same row and columns so you can see that we can no longer see the first name label or the first name entry so let's place this directly underneath we're going to put these underneath by one row so we'll keep the columns the same but we're going to put this underneath by one row so row one and row one for the last name entry and what you get is that these two labels and entry boxes are arranged neatly into rows and columns and let's do the same thing for an email so i'm going to copy what we have and we're going to change last name to email so email label and email entry and then change for the text last name to just email and we're going to place these where row equals 2 and we'll keep the column the same and for email entry row 2 column one so doesn't that look a lot better now let's create a submit button so let's call this submit button equals button and then we're adding this to the window and we should set some text text equals submit i guess dot grid and we want to place this underneath currently kind of just shoves it underneath for now let's say that we want this between these two columns so we'll want to set the row and the column to begin with row is going to equal three and column we'll set this equal to zero for now there isn't going to be any apparent change it's still going to be in the same place but one thing that we can do is use an option called column span we can have a widget take up more than one column and it's going to place this widget in between both of these columns in between the combined width of both of them so we'll add column span equals two so this widget is going to take up the next two available columns including the one that it's currently in and you can see that our submit button is now between these two columns that we have one thing that you should know is that the column width is dependent on the width of the largest widget that is contained within that particular column let's say that we increase the width of our first name label well our column is going to expand to actually fit that widget that we have so for our first name label let's set the width to maybe 20. and this is going to increase the width of column 0 and to even better demonstrate this let's color each label a certain color just for a visual for our first name label let's say this is red and then for our last name label let's set this to green and then for email maybe blue now all of these are color coordinated and you can see that the background color of our first name label is taking up the entire column space now what if we changed the size of our email label to something even larger like 30 so width equals 30. and now the column 0 has expanded to accommodate the size of our largest widget which is our email which has a width of 30. and before we finish this video let's add a title to the submission form right on top of the first name label and the entry label so let's call this title label equals label writing this to the window let's set some text let's say enter your info and let's pick font font equals what am i feeling like today maybe just arial and then a size maybe 25 we're going to use the grid geometry manager and we want this at the top so we want row zero at least i want this to take up two columns so we'll say column equals zero and then set a column span column span equals two now a few things are going to overlap here so we're going to move everything down by one row besides our title label so we want this first name label to be directly underneath our title label so let's move everything down by one row and our title is going to be directly on top of our first name label as well as the first name entry box that we have all right so that's the very basics of the grid geometry manager if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of the grid geometry manager in python hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
