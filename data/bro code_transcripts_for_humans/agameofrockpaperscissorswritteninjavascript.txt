With timestamps:

00:00 - hey guys in this video we're going to
00:01 - create a game of rock paper scissors
00:03 - using javascript so sit back relax and
00:06 - enjoy the show
00:09 - all right then everybody in this video
00:11 - we're going to be creating a game of
00:13 - rock paper scissors we'll be using html
00:15 - elements javascript code and styling
00:18 - with css
00:20 - let's head to our html document
00:22 - i'll create a div section to contain our
00:24 - game
00:25 - div
00:26 - id equals i'll name this game
00:30 - div
00:32 - we'll close it
00:36 - i'll create three labels one for the
00:38 - player the computer and the result who
00:41 - won
00:43 - these will be h1 header tags
00:50 - i'll give each of these header tags a
00:51 - class class equals
00:54 - game
00:55 - text
01:01 - i'll give the first h1 header tag a
01:03 - unique id of player text
01:07 - the second header tag will be computer
01:10 - text third will be
01:15 - result
01:16 - text
01:18 - the first h1 header tag will have this
01:20 - initial text
01:22 - player colon space
01:26 - then
01:27 - computer colon space
01:31 - result colon space
01:34 - let's add three buttons
01:35 - for rock paper scissors
01:41 - button close it
01:45 - each of these buttons will have a class
01:47 - class
01:48 - equals
01:49 - choice
01:51 - button
01:54 - we'll need three buttons
01:57 - add some text
02:00 - rock
02:02 - paper
02:06 - scissors
02:08 - that's everything for now
02:10 - let's head to our javascript file
02:12 - let's select all of the elements that
02:14 - we'll need
02:15 - we'll begin with the player text
02:18 - const
02:19 - player text
02:21 - equals document
02:23 - dot
02:24 - query
02:25 - selector
02:27 - we are selecting
02:28 - an id that id was player text
02:34 - we'll select the computer text
02:36 - const
02:39 - computer text
02:40 - the id was computer text
02:44 - we'll select the result text
02:48 - construct
02:51 - result text
02:53 - the id was result text
02:56 - then we will select all of the buttons
02:59 - const
03:01 - choice
03:03 - buttons
03:05 - equals
03:06 - document dot
03:09 - query
03:10 - selector
03:11 - all
03:14 - we are selecting the choice button class
03:18 - we'll create three variables let player
03:21 - to store the player's choice
03:23 - let computer
03:25 - for the computer's random choice
03:27 - let result
03:29 - to display who won
03:32 - we'll iterate over our choice buttons
03:33 - using the for each method
03:36 - choice buttons
03:37 - for each
03:40 - we'll use an arrow function expression
03:43 - for each button within our choice
03:45 - buttons array
03:48 - we will use an arrow function
03:50 - i'm going to add an event listener to
03:52 - each of these buttons within the arrow
03:54 - function expression
03:55 - button
03:56 - dot
03:57 - add
03:58 - event
04:00 - listener
04:02 - the event is
04:04 - click
04:05 - when we click on a button we're going to
04:06 - do something
04:08 - within the ad event listener we'll add a
04:10 - second arrow function expression
04:12 - there are no arguments
04:15 - arrow
04:18 - then we're going to do a bunch of stuff
04:20 - so let's expand this
04:22 - when we click on a button what are we
04:24 - going to do
04:25 - let's take our player this is our
04:27 - player's choice
04:29 - set the sequel to
04:31 - whatever button we select
04:33 - and get the text
04:35 - content
04:38 - if we click on this rock button then our
04:40 - player variable contains the string rock
04:43 - same thing goes with paper and scissors
04:45 - if we select those
04:46 - then we will invoke the computer's turn
04:50 - computer
04:51 - turn
04:52 - function
04:53 - we'll need to declare this function
04:56 - outside of our for each method let's
04:59 - declare this computer turn function
05:01 - function computer turn
05:04 - we'll select a random number between 1
05:06 - and 3.
05:10 - constrained number
05:13 - equals
05:14 - math
05:16 - dot floor
05:18 - we'll need a random number
05:20 - math.random
05:22 - method there's only three choices we'll
05:25 - multiply this by three
05:28 - then add one
05:30 - this will give us a random number
05:31 - between one and three
05:33 - we can examine this random number with a
05:35 - switch
05:37 - switch
05:39 - rand number
05:41 - we'll find any matching cases
05:44 - case one
05:47 - computer
05:49 - will equal the string
05:51 - rock
05:53 - then break
05:58 - case two computer equals paper
06:05 - case three computer equals scissors
06:10 - and that's it for the computer turn
06:12 - function
06:13 - the player variable will be assigned a
06:14 - string as well as the computer
06:16 - next what we'll need to do is set the
06:18 - text with our choices
06:20 - player text dot text
06:23 - content
06:25 - equals i'll use a template literal
06:28 - player colon space
06:32 - i'll add a placeholder player
06:36 - let's do the same thing with computer
06:40 - computer text
06:42 - text content
06:44 - computer
06:46 - computer
06:49 - then the results text
06:54 - results text dot text content
06:58 - we will set the sequel to
07:01 - invoke a check winner function
07:05 - we'll need to define this function
07:07 - let's do that after the computer turn
07:09 - function
07:12 - function
07:13 - check winner
07:17 - first we'll compare if our player and
07:19 - computer strings are the same
07:21 - if player
07:22 - is equal to computer
07:25 - we will return a value
07:27 - this will be a string
07:29 - draw it's a tie
07:33 - else if
07:36 - computer
07:37 - is equal to
07:39 - rock
07:44 - going to return
07:45 - then use the ternary operator our
07:47 - condition is if
07:49 - player
07:50 - is equal to paper
07:53 - question mark
07:55 - if the computer is equal to rock is the
07:58 - player equal to paper
08:00 - if so then we will return a string
08:03 - you
08:04 - win
08:06 - if this condition is false we'll return
08:08 - a different string
08:10 - u
08:11 - lose
08:14 - okay let's create another else if
08:15 - statement
08:16 - else if computer is equal to paper
08:20 - and the player
08:21 - is equal to
08:23 - scissors
08:27 - add another elsif statement
08:29 - else if the computer is equal to
08:32 - scissors and the player is equal to rock
08:38 - and that should be it let's test it
08:41 - okay rock
08:43 - it's a draw
08:44 - paper you lose
08:46 - scissors you win
08:49 - all right so that is the logic of our
08:51 - game
08:52 - hey for fun let's style this using css
08:57 - let's begin with our game development
08:59 - that surrounds our game
09:02 - let's take this id
09:04 - we will style game div it's an id
09:07 - i'll set the font
09:09 - family to
09:13 - brush
09:14 - script
09:16 - mt
09:17 - if my web browser can't display this
09:19 - font i'll have a fallback of cursive
09:24 - i'll add a border
09:26 - border
09:27 - 3 pixels solid
09:31 - i'll round the corners
09:34 - border
09:35 - radius
09:37 - 25 pixels
09:39 - that's better but let's add some padding
09:43 - padding
09:44 - 10 pixels is good
09:47 - i'll add a background
09:48 - color background dash color
09:52 - maybe light gray
09:55 - i'll align the text in the center
09:58 - text
09:59 - align
10:01 - center
10:03 - okay we're getting somewhere
10:05 - let's select these buttons they all have
10:08 - the same class
10:09 - that class is choice button
10:13 - i like to add classes at the top
10:15 - choice button class let's change the
10:19 - line
10:20 - height to
10:22 - 30 pixels
10:26 - then set a width because all of these
10:28 - buttons have different widths to
10:29 - accommodate the text
10:31 - i would like them all to be uniform
10:33 - width
10:34 - of 150 pixels is good
10:38 - let's expand this a little bit
10:40 - there let's select our player text
10:44 - id player text
10:48 - i'll change the color of the text
10:50 - color
10:51 - pick a color
10:52 - i'll be blue
10:56 - let's do the same thing with computer
10:57 - text
11:00 - id computer text
11:03 - i think the computer should be red
11:05 - okay let's try this one last time
11:08 - rock
11:10 - paper
11:11 - scissors
11:12 - well alright everybody that is a basic
11:15 - game of rock paper scissors for
11:16 - beginners
11:18 - if you would like a copy of my
11:19 - javascript code as well as the html and
11:21 - the css markup i'll post all of this in
11:24 - the comments section down below and pin
11:26 - it to the top be sure to check
11:27 - underneath the original video in the
11:29 - playlist but yeah that is a basic game
11:32 - of rock paper scissors using javascript

Cleaned transcript:

hey guys in this video we're going to create a game of rock paper scissors using javascript so sit back relax and enjoy the show all right then everybody in this video we're going to be creating a game of rock paper scissors we'll be using html elements javascript code and styling with css let's head to our html document i'll create a div section to contain our game div id equals i'll name this game div we'll close it i'll create three labels one for the player the computer and the result who won these will be h1 header tags i'll give each of these header tags a class class equals game text i'll give the first h1 header tag a unique id of player text the second header tag will be computer text third will be result text the first h1 header tag will have this initial text player colon space then computer colon space result colon space let's add three buttons for rock paper scissors button close it each of these buttons will have a class class equals choice button we'll need three buttons add some text rock paper scissors that's everything for now let's head to our javascript file let's select all of the elements that we'll need we'll begin with the player text const player text equals document dot query selector we are selecting an id that id was player text we'll select the computer text const computer text the id was computer text we'll select the result text construct result text the id was result text then we will select all of the buttons const choice buttons equals document dot query selector all we are selecting the choice button class we'll create three variables let player to store the player's choice let computer for the computer's random choice let result to display who won we'll iterate over our choice buttons using the for each method choice buttons for each we'll use an arrow function expression for each button within our choice buttons array we will use an arrow function i'm going to add an event listener to each of these buttons within the arrow function expression button dot add event listener the event is click when we click on a button we're going to do something within the ad event listener we'll add a second arrow function expression there are no arguments arrow then we're going to do a bunch of stuff so let's expand this when we click on a button what are we going to do let's take our player this is our player's choice set the sequel to whatever button we select and get the text content if we click on this rock button then our player variable contains the string rock same thing goes with paper and scissors if we select those then we will invoke the computer's turn computer turn function we'll need to declare this function outside of our for each method let's declare this computer turn function function computer turn we'll select a random number between 1 and 3. constrained number equals math dot floor we'll need a random number math.random method there's only three choices we'll multiply this by three then add one this will give us a random number between one and three we can examine this random number with a switch switch rand number we'll find any matching cases case one computer will equal the string rock then break case two computer equals paper case three computer equals scissors and that's it for the computer turn function the player variable will be assigned a string as well as the computer next what we'll need to do is set the text with our choices player text dot text content equals i'll use a template literal player colon space i'll add a placeholder player let's do the same thing with computer computer text text content computer computer then the results text results text dot text content we will set the sequel to invoke a check winner function we'll need to define this function let's do that after the computer turn function function check winner first we'll compare if our player and computer strings are the same if player is equal to computer we will return a value this will be a string draw it's a tie else if computer is equal to rock going to return then use the ternary operator our condition is if player is equal to paper question mark if the computer is equal to rock is the player equal to paper if so then we will return a string you win if this condition is false we'll return a different string u lose okay let's create another else if statement else if computer is equal to paper and the player is equal to scissors add another elsif statement else if the computer is equal to scissors and the player is equal to rock and that should be it let's test it okay rock it's a draw paper you lose scissors you win all right so that is the logic of our game hey for fun let's style this using css let's begin with our game development that surrounds our game let's take this id we will style game div it's an id i'll set the font family to brush script mt if my web browser can't display this font i'll have a fallback of cursive i'll add a border border 3 pixels solid i'll round the corners border radius 25 pixels that's better but let's add some padding padding 10 pixels is good i'll add a background color background dash color maybe light gray i'll align the text in the center text align center okay we're getting somewhere let's select these buttons they all have the same class that class is choice button i like to add classes at the top choice button class let's change the line height to 30 pixels then set a width because all of these buttons have different widths to accommodate the text i would like them all to be uniform width of 150 pixels is good let's expand this a little bit there let's select our player text id player text i'll change the color of the text color pick a color i'll be blue let's do the same thing with computer text id computer text i think the computer should be red okay let's try this one last time rock paper scissors well alright everybody that is a basic game of rock paper scissors for beginners if you would like a copy of my javascript code as well as the html and the css markup i'll post all of this in the comments section down below and pin it to the top be sure to check underneath the original video in the playlist but yeah that is a basic game of rock paper scissors using javascript
