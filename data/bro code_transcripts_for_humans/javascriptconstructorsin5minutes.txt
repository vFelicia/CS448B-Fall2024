With timestamps:

00:00 - what's up people so today I got to
00:01 - explain Constructors in JavaScript a
00:04 - Constructor is a special method for
00:06 - defining the properties and methods of
00:09 - objects in Prior videos we've
00:11 - constructed objects like this we would
00:13 - declare an object assign it some
00:15 - properties and some methods you know
00:17 - this works but what if we have to create
00:19 - a lot of objects here I'm manually
00:21 - creating three different car objects
00:23 - that can be a lot of work what we could
00:25 - do instead is use a Constructor to
00:28 - construct these objects automatically Al
00:30 - all we have to do to construct these
00:32 - objects is pass in some unique data to
00:34 - the Constructor to construct these
00:36 - objects here's an example we are going
00:38 - to create a function
00:41 - car do pay attention to the
00:45 - capitalization we'll need to set up some
00:47 - parameters what sorts of properties will
00:49 - we accept when we construct a car object
00:52 - how about a make model year and
00:57 - color these are arguments we'll receive
00:59 - when we construct a car object to assign
01:02 - these properties we're going to use the
01:04 - this keyword doake equals the make that
01:09 - we
01:09 - receive let's do this with model this do
01:13 - model equals the model we
01:16 - receive this doe equals year this do
01:22 - color equals color that's good enough
01:25 - for now our car Constructor is a
01:28 - reusable method where we can define the
01:30 - properties and methods of objects we
01:32 - create to use this Constructor I will
01:34 - create an instance of an
01:36 - object I will use const car one will be
01:39 - our first object equals we'll need to
01:42 - use the new keyword type the name of the
01:45 - Constructor car car is a special method
01:48 - we'll need to pass in some arguments
01:50 - we'll need a make model year and color
01:53 - in that order my first car feel free to
01:56 - send some different data to the
01:57 - Constructor but for me my first car will
01:59 - be be a
02:01 - Ford make sure each value is comma
02:04 - separated Mustang the year will be
02:08 - 2024 and the color will be
02:11 - red we should now have a car object with
02:14 - the name of car 1 and I'm going to
02:18 - console.log car 1's properties car 1.
02:22 - make Ford let's do this with the other
02:25 - properties we have
02:26 - model
02:28 - Mustang
02:31 - year
02:34 - 2024 and color red now this method is
02:39 - reusable we can reuse it to create other
02:41 - car
02:42 - objects let's create const Car 2 equals
02:48 - new car we'll pass in different data
02:50 - this time the make will be chevr
02:55 - a I will pick a
02:58 - Camaro the year
03:00 - 2025 and the color will be blue now I
03:04 - can display car 2's
03:06 - properties let's Select Car 2. make car
03:09 - 2. model car 2. year car
03:11 - 2.cor we have a Chevy Camaro year 2025
03:15 - the color is blue let's create one more
03:18 - car same process as before const car 3
03:23 - equals new
03:26 - car I'll go with a Dodge
03:30 - charger the year
03:33 - 2026 and the color will be
03:37 - silver let's access car 3's properties
03:40 - car 3. make car 3. model car 3. year car
03:44 - 3.or Dodge Charger 2026 the color is
03:48 - silver another thing with these
03:49 - parameters too you can name these
03:51 - parameters anything when we assign these
03:53 - properties it can be kind of confusing
03:56 - like this. make equals make really we
03:58 - write our Constructors this way just for
04:00 - readability technically this would work
04:02 - if we renamed our parameters for example
04:04 - make will be parameter a model will be B
04:07 - year is C color is D then be sure to
04:10 - change these when we assign them A B C D
04:16 - this would still work however this
04:18 - Constructor isn't as readable like what
04:20 - the heck is a b c and d it would be good
04:23 - practice to clearly Define our
04:25 - parameters for readability purposes all
04:28 - right now let's add a method
04:30 - we'll take this.
04:33 - Drive equals a
04:39 - function we
04:42 - console.log I'll use a template string
04:46 - you drive the I'll add a
04:49 - placeholder
04:51 - this.
04:53 - model with Cars 1 through three let's
04:56 - use the drive method car 1. drive
05:01 - you drive the
05:04 - Mustang car 2. drive you drive the
05:07 - Camaro and K 3.
05:10 - drive you drive the charger all right
05:13 - everybody so that's a Constructor it's a
05:15 - special method for defining the
05:17 - properties and methods of objects it
05:19 - helps with code reusability we can reuse
05:21 - it to create many objects instead of
05:23 - having to type them all out manually and
05:25 - well everybody those are Constructors in
05:28 - JavaScript

Cleaned transcript:

what's up people so today I got to explain Constructors in JavaScript a Constructor is a special method for defining the properties and methods of objects in Prior videos we've constructed objects like this we would declare an object assign it some properties and some methods you know this works but what if we have to create a lot of objects here I'm manually creating three different car objects that can be a lot of work what we could do instead is use a Constructor to construct these objects automatically Al all we have to do to construct these objects is pass in some unique data to the Constructor to construct these objects here's an example we are going to create a function car do pay attention to the capitalization we'll need to set up some parameters what sorts of properties will we accept when we construct a car object how about a make model year and color these are arguments we'll receive when we construct a car object to assign these properties we're going to use the this keyword doake equals the make that we receive let's do this with model this do model equals the model we receive this doe equals year this do color equals color that's good enough for now our car Constructor is a reusable method where we can define the properties and methods of objects we create to use this Constructor I will create an instance of an object I will use const car one will be our first object equals we'll need to use the new keyword type the name of the Constructor car car is a special method we'll need to pass in some arguments we'll need a make model year and color in that order my first car feel free to send some different data to the Constructor but for me my first car will be be a Ford make sure each value is comma separated Mustang the year will be 2024 and the color will be red we should now have a car object with the name of car 1 and I'm going to console.log car 1's properties car 1. make Ford let's do this with the other properties we have model Mustang year 2024 and color red now this method is reusable we can reuse it to create other car objects let's create const Car 2 equals new car we'll pass in different data this time the make will be chevr a I will pick a Camaro the year 2025 and the color will be blue now I can display car 2's properties let's Select Car 2. make car 2. model car 2. year car 2.cor we have a Chevy Camaro year 2025 the color is blue let's create one more car same process as before const car 3 equals new car I'll go with a Dodge charger the year 2026 and the color will be silver let's access car 3's properties car 3. make car 3. model car 3. year car 3.or Dodge Charger 2026 the color is silver another thing with these parameters too you can name these parameters anything when we assign these properties it can be kind of confusing like this. make equals make really we write our Constructors this way just for readability technically this would work if we renamed our parameters for example make will be parameter a model will be B year is C color is D then be sure to change these when we assign them A B C D this would still work however this Constructor isn't as readable like what the heck is a b c and d it would be good practice to clearly Define our parameters for readability purposes all right now let's add a method we'll take this. Drive equals a function we console.log I'll use a template string you drive the I'll add a placeholder this. model with Cars 1 through three let's use the drive method car 1. drive you drive the Mustang car 2. drive you drive the Camaro and K 3. drive you drive the charger all right everybody so that's a Constructor it's a special method for defining the properties and methods of objects it helps with code reusability we can reuse it to create many objects instead of having to type them all out manually and well everybody those are Constructors in JavaScript
