With timestamps:

00:00 - why hello again everybody today I need
00:02 - to explain a raise in PHP think of an
00:05 - array as a special type of variable
00:07 - which can hold more than one value at a
00:11 - time in my example I have four different
00:13 - variables food one food two food three
00:16 - food four we have an apple orange banana
00:19 - coconut it can be very inconvenient to
00:22 - have to work with so many variables it
00:24 - would be really nice if I could store
00:26 - all of these values in one place which
00:29 - is what we can do with an array let's
00:31 - delete these variables we will create a
00:34 - special type of variable which is an
00:36 - array to create an array you'll need a
00:38 - variable name to begin with let's say
00:40 - Foods Foods equals to create an array
00:44 - type array add a set of parentheses then
00:48 - the semicolon at the end this is a
00:50 - function which we'll discuss more in the
00:52 - future whatever values you're going to
00:54 - squeeze into this variable just place
00:56 - them within the parentheses we had four
00:59 - variables Apple orange banana coconut
01:10 - separate all of your values with the
01:12 - comma there we go we now have what
01:15 - appears to be a variable but it's
01:17 - technically an array it stores more than
01:19 - one value in one convenient place if I
01:22 - was to Echo my array which I named Foods
01:26 - this is what happens
01:28 - warning a rate to string conversion we
01:32 - can't directly print this array instead
01:34 - you would need to access one of the
01:36 - elements an element is a given position
01:39 - within an array currently we have four
01:42 - elements because there's four values to
01:45 - access one of the elements found within
01:47 - your array after the array name add a
01:50 - set of square brackets then an element
01:52 - number with the raise the first element
01:55 - has an index of zero
01:57 - I would like the first element within my
02:00 - array so the element is going to be zero
02:03 - that will display Apple which is the
02:06 - first element in my array let's do this
02:08 - with the others for practice
02:10 - let's Echo Foods at index one
02:14 - I should probably add a line break so
02:16 - let me do some string concatenation real
02:18 - quick I'll add a line break
02:21 - do that here as well
02:24 - we have apple Orange
02:26 - let's do this with the others
02:29 - Foods at index 2 is banana
02:33 - Foods at index three that would be
02:36 - coconut what if I attempt to access an
02:39 - element that doesn't exist we only have
02:42 - four elements if I access our array
02:45 - Foods
02:47 - at index 4
02:50 - well then we have a warning undefined
02:53 - array key for
02:55 - that is something you do need to pay
02:57 - attention to if you need to display all
02:59 - of the elements of an array there's an
03:01 - easier way of doing this instead of
03:03 - echoing every single element line by
03:06 - line
03:07 - we can use a for each Loop
03:10 - for each add a set of parentheses then a
03:14 - set of curly braces
03:16 - for each take your array Foods
03:20 - as
03:21 - now what we need is a temporary name for
03:25 - each element within the array
03:27 - my personal naming convention if I'm
03:30 - accessing a single element within an
03:33 - array I like to take the array name and
03:36 - set the variable name to be the singular
03:38 - version if we're working with Foods well
03:41 - each element is considered a food
03:45 - for every food in foods
03:49 - if we were working with different values
03:51 - let's say cars my for each Loop may be
03:54 - for every
03:56 - car in Cars but that's just my naming
04:00 - convention So within this for each loop
04:02 - I will Echo
04:04 - each food
04:06 - then I'll add a break line
04:11 - okay let's see what happens
04:13 - here are all the elements in our array
04:16 - to display all of the elements in your
04:18 - array a convenient way to do so is to
04:21 - use a for each Loop
04:23 - there are a lot of useful utilities
04:25 - related to arrays to change one of the
04:28 - elements of an array type the name of
04:30 - the array
04:31 - then we'll list an index number
04:34 - I would like to change the first element
04:36 - in this array to be a pineapple type the
04:40 - name of the array
04:41 - followed by a set of square brackets
04:43 - the first element in my array is zero
04:46 - I will set that to equal a new value
04:50 - Foods at index 0 is now a pineapple
04:54 - pineapple orange banana coconut
04:58 - there is a push function which will add
05:01 - a new element to the end of your array
05:03 - array underscore push function
05:09 - within the set of parentheses type in
05:11 - the name of your array comma
05:14 - then a value
05:16 - at the end of my array I would like to
05:18 - add a pineapple
05:20 - Apple orange banana coconut pineapple
05:23 - you can add more than one value too
05:25 - let's add a kiwi as well
05:28 - Apple orange banana coconut pineapple
05:30 - kiwi that is the array push function you
05:34 - can add one or more elements to the end
05:36 - of your array after you create one
05:39 - then we have the pop function array
05:41 - underscore pop
05:43 - pop will remove the last element in your
05:46 - array place your array name within the
05:48 - set of parentheses
05:50 - array pop Foods
05:53 - now we have apple orange banana our last
05:56 - element coconut was removed
05:58 - then we have shift array underscore
06:01 - shift
06:02 - shift will remove the first element in
06:05 - your array then shift all of the
06:07 - elements over by one within the set of
06:10 - parentheses list your array name
06:12 - we now have an orange banana coconut our
06:16 - Apple was removed it was shifted shifted
06:19 - out of the array
06:21 - we can reverse an array
06:23 - array underscore reverse
06:26 - place your array name within the set of
06:28 - parentheses
06:29 - now this isn't going to work I'll
06:31 - explain why
06:33 - our array is still in the same order
06:34 - Apple orange banana coconut
06:37 - this function returns a new array we can
06:41 - assign the result to a new array
06:43 - such as
06:45 - reversed
06:48 - Foods
06:50 - equals the array reverse function
06:53 - then I could display this
06:56 - our array is now reversed coconut banana
06:59 - orange Apple
07:00 - otherwise the array that's returned we
07:03 - can reassign it to the same array
07:06 - which is what I'll do
07:09 - that does the same thing if you would
07:11 - rather reuse the same array that is how
07:13 - to reverse an array
07:15 - we can count the elements in an array
07:18 - I will Echo
07:21 - use the count function
07:23 - place your array name within the
07:25 - function
07:27 - let me cut this real quick
07:29 - we have four elements within our array
07:32 - use the count function to get the
07:34 - current number of elements within your
07:35 - array
07:36 - all right everybody so that's an array
07:38 - think of it as a special type of
07:41 - variable that can hold more than one
07:43 - value at a time it's a convenient way to
07:46 - store multiple values that are similar
07:48 - or related in place of creating many
07:50 - different variables it's a lot easier to
07:53 - work with an array than several
07:55 - variables and well everybody those are
07:58 - arrays in PHP

Cleaned transcript:

why hello again everybody today I need to explain a raise in PHP think of an array as a special type of variable which can hold more than one value at a time in my example I have four different variables food one food two food three food four we have an apple orange banana coconut it can be very inconvenient to have to work with so many variables it would be really nice if I could store all of these values in one place which is what we can do with an array let's delete these variables we will create a special type of variable which is an array to create an array you'll need a variable name to begin with let's say Foods Foods equals to create an array type array add a set of parentheses then the semicolon at the end this is a function which we'll discuss more in the future whatever values you're going to squeeze into this variable just place them within the parentheses we had four variables Apple orange banana coconut separate all of your values with the comma there we go we now have what appears to be a variable but it's technically an array it stores more than one value in one convenient place if I was to Echo my array which I named Foods this is what happens warning a rate to string conversion we can't directly print this array instead you would need to access one of the elements an element is a given position within an array currently we have four elements because there's four values to access one of the elements found within your array after the array name add a set of square brackets then an element number with the raise the first element has an index of zero I would like the first element within my array so the element is going to be zero that will display Apple which is the first element in my array let's do this with the others for practice let's Echo Foods at index one I should probably add a line break so let me do some string concatenation real quick I'll add a line break do that here as well we have apple Orange let's do this with the others Foods at index 2 is banana Foods at index three that would be coconut what if I attempt to access an element that doesn't exist we only have four elements if I access our array Foods at index 4 well then we have a warning undefined array key for that is something you do need to pay attention to if you need to display all of the elements of an array there's an easier way of doing this instead of echoing every single element line by line we can use a for each Loop for each add a set of parentheses then a set of curly braces for each take your array Foods as now what we need is a temporary name for each element within the array my personal naming convention if I'm accessing a single element within an array I like to take the array name and set the variable name to be the singular version if we're working with Foods well each element is considered a food for every food in foods if we were working with different values let's say cars my for each Loop may be for every car in Cars but that's just my naming convention So within this for each loop I will Echo each food then I'll add a break line okay let's see what happens here are all the elements in our array to display all of the elements in your array a convenient way to do so is to use a for each Loop there are a lot of useful utilities related to arrays to change one of the elements of an array type the name of the array then we'll list an index number I would like to change the first element in this array to be a pineapple type the name of the array followed by a set of square brackets the first element in my array is zero I will set that to equal a new value Foods at index 0 is now a pineapple pineapple orange banana coconut there is a push function which will add a new element to the end of your array array underscore push function within the set of parentheses type in the name of your array comma then a value at the end of my array I would like to add a pineapple Apple orange banana coconut pineapple you can add more than one value too let's add a kiwi as well Apple orange banana coconut pineapple kiwi that is the array push function you can add one or more elements to the end of your array after you create one then we have the pop function array underscore pop pop will remove the last element in your array place your array name within the set of parentheses array pop Foods now we have apple orange banana our last element coconut was removed then we have shift array underscore shift shift will remove the first element in your array then shift all of the elements over by one within the set of parentheses list your array name we now have an orange banana coconut our Apple was removed it was shifted shifted out of the array we can reverse an array array underscore reverse place your array name within the set of parentheses now this isn't going to work I'll explain why our array is still in the same order Apple orange banana coconut this function returns a new array we can assign the result to a new array such as reversed Foods equals the array reverse function then I could display this our array is now reversed coconut banana orange Apple otherwise the array that's returned we can reassign it to the same array which is what I'll do that does the same thing if you would rather reuse the same array that is how to reverse an array we can count the elements in an array I will Echo use the count function place your array name within the function let me cut this real quick we have four elements within our array use the count function to get the current number of elements within your array all right everybody so that's an array think of it as a special type of variable that can hold more than one value at a time it's a convenient way to store multiple values that are similar or related in place of creating many different variables it's a lot easier to work with an array than several variables and well everybody those are arrays in PHP
