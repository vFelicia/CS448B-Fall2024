With timestamps:

00:02 - hey everyone in this video i'm going to
00:04 - show you how we can create an array of
00:06 - strings let's say we will have an array
00:08 - named cars
00:10 - so we will need a two-dimensional array
00:12 - so we need two sets of straight brackets
00:14 - and within the second set of straight
00:16 - brackets we will specify a maximum size
00:19 - for each of these elements let's say
00:21 - maybe 10 characters so a string is
00:24 - already an array of characters let's add
00:26 - our first string maybe we have a mustang
00:28 - so to add a second element we would
00:30 - separate the next one with the comma
00:32 - then we can add another string
00:34 - let's say we have a corvette and then
00:36 - one more how about a maybe camaro okay
00:39 - so with all of these different strings
00:41 - i'm going to surround with a set of
00:43 - curly braces and here we go we have an
00:46 - array of strings it's basically a 2d
00:49 - array of individual characters except
00:51 - each element is a string now one
00:54 - important difference with an array of
00:55 - strings is that we can't directly change
00:58 - one of the values
00:59 - let's say cars at index zero equals a
01:02 - tesla
01:04 - and then i'm going to try and run this
01:07 - so we can't directly assign a new value
01:09 - one way in which we can do so is to use
01:12 - the string copy function so if you're
01:14 - going to use the string copy function
01:16 - include this import
01:19 - string dot h okay so to update one of
01:22 - the values i will use string
01:25 - copy
01:27 - pass in my array
01:29 - and an index number
01:30 - followed by a string so let's say a
01:33 - tesla and this would work now to display
01:36 - an array of strings we can use a for
01:38 - loop and there's no need for a nested
01:41 - loop so we will create an index i set
01:44 - this equal to zero i would like to
01:46 - continue this as long as i is less than
01:49 - and we will calculate how many elements
01:50 - are within our array so we will use the
01:53 - size of operator pass in our array
01:56 - divided by one of the elements
01:58 - size of
02:00 - cars and maybe the first element of zero
02:03 - and then increment i by one during each
02:06 - iteration so then during each iteration
02:08 - let's display one of these elements
02:10 - using a printf statement
02:12 - let's display a string i'll add a new
02:14 - line after each printf statement
02:17 - and let's display our array cars at
02:19 - index of i
02:20 - so this should display tesla corvette
02:23 - and camaro in that order
02:26 - tesla corvette and a camaro so yeah
02:29 - that's an array of strings it's really a
02:31 - two-dimensional array of characters but
02:33 - it involves less steps because each of
02:35 - these strings is already an array and if
02:37 - you need to update or edit one of the
02:39 - values you can use the string copy
02:42 - function so yeah that's how to work with
02:44 - an array of strings if you would like a
02:45 - copy of this code i'll post this to the
02:47 - comments section down below and well
02:49 - yeah that's how to work with an array of
02:51 - strings in c

Cleaned transcript:

hey everyone in this video i'm going to show you how we can create an array of strings let's say we will have an array named cars so we will need a twodimensional array so we need two sets of straight brackets and within the second set of straight brackets we will specify a maximum size for each of these elements let's say maybe 10 characters so a string is already an array of characters let's add our first string maybe we have a mustang so to add a second element we would separate the next one with the comma then we can add another string let's say we have a corvette and then one more how about a maybe camaro okay so with all of these different strings i'm going to surround with a set of curly braces and here we go we have an array of strings it's basically a 2d array of individual characters except each element is a string now one important difference with an array of strings is that we can't directly change one of the values let's say cars at index zero equals a tesla and then i'm going to try and run this so we can't directly assign a new value one way in which we can do so is to use the string copy function so if you're going to use the string copy function include this import string dot h okay so to update one of the values i will use string copy pass in my array and an index number followed by a string so let's say a tesla and this would work now to display an array of strings we can use a for loop and there's no need for a nested loop so we will create an index i set this equal to zero i would like to continue this as long as i is less than and we will calculate how many elements are within our array so we will use the size of operator pass in our array divided by one of the elements size of cars and maybe the first element of zero and then increment i by one during each iteration so then during each iteration let's display one of these elements using a printf statement let's display a string i'll add a new line after each printf statement and let's display our array cars at index of i so this should display tesla corvette and camaro in that order tesla corvette and a camaro so yeah that's an array of strings it's really a twodimensional array of characters but it involves less steps because each of these strings is already an array and if you need to update or edit one of the values you can use the string copy function so yeah that's how to work with an array of strings if you would like a copy of this code i'll post this to the comments section down below and well yeah that's how to work with an array of strings in c
