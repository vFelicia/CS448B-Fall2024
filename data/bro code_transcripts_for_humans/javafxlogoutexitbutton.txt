With timestamps:

00:00 - yo what's going on everybody it's bro
00:02 - hope you're doing well
00:03 - and in this video i'm going to show you
00:04 - guys how we can create a button to close
00:06 - out of our programs in javafx
00:08 - so sit back relax and enjoy the show
00:14 - all right people let's create a simple
00:16 - logout button
00:17 - so we'll need a pane to work with pick a
00:19 - pane of your choice i'm just going to
00:21 - pick an anchor pane
00:23 - and to give your pane a unique id
00:26 - under the code drop down menu i'm going
00:29 - to call this scene
00:31 - pane now let's create a button
00:34 - drag and drop it anywhere i'll place it
00:36 - in the middle you can set the text
00:38 - although it's optional i'll set this to
00:41 - log out
00:44 - and for the id i will name this
00:49 - logout button and for the action we
00:52 - haven't defined one yet but i will
00:54 - create
00:55 - a method named logout that we'll define
00:57 - later
00:58 - and let's just be sure that we're
01:00 - setting our controller
01:02 - so under the controller drop down menu
01:04 - go to controller class and select the
01:06 - controller that you need
01:08 - let's save and close now head to your
01:11 - fxml document just to be sure that
01:12 - everything updates because
01:14 - sometimes it won't update unless you
01:16 - actively select it
01:17 - now within our controller class let's
01:19 - define all the things that we'll need
01:21 - we're going to inject our fxml into our
01:24 - controller class so add that annotation
01:27 - at the top
01:28 - let's define our button private button
01:32 - and i named mine logout button
01:36 - and for your pane we actually need a
01:37 - separate fxml annotation
01:40 - so private and i picked an anchor pane
01:42 - but you might have picked something
01:44 - different
01:44 - anchor pane scene pane
01:48 - and you might want to head to your fxml
01:50 - document just to verify that
01:52 - so we have our button named logout
01:54 - button
01:55 - and our pane is named scenepin
01:58 - and let's define a stage stage stage
02:02 - and get your imports to make sure that
02:04 - you're importing from javafx and not
02:06 - anyplace else
02:07 - now it's time to define that logout
02:09 - method so this will be public
02:11 - void log out
02:15 - and there is one parameter action
02:18 - event event all right
02:22 - now the first thing that we'll do within
02:24 - our logout method here
02:26 - is that we need to get the current
02:28 - stitch that we're working with
02:29 - in order to close it so let's add this
02:31 - line we already declared our stage we
02:33 - just have to initialize it
02:35 - stage equals we're going to add a cast
02:38 - of stage and then
02:42 - scene pain dot
02:45 - get scene followed by
02:49 - dot get window
02:53 - so that our stage is the current stage
02:55 - that we're working with
02:57 - and let's print something just to test
03:00 - this logout method
03:01 - let's print you successfully
03:05 - logged out and to close the stage
03:09 - you type stage dot close
03:13 - all right let's test this
03:18 - so we have our logout button to close
03:20 - out of this window
03:21 - you just click on this button log out
03:23 - you successfully
03:24 - logged out now if there's anything that
03:27 - you need to do
03:28 - after you click the logout button but
03:30 - before we actually close out of the
03:32 - stage
03:32 - you can just add some code before these
03:34 - lines here so let's say we would like to
03:36 - create an alert box that asks the user
03:39 - hey are you sure you want to log out and
03:40 - then they can confirm with
03:42 - ok or cancel so if we would like to add
03:45 - a feature like that
03:46 - this is how we can do so let's create an
03:48 - alert object
03:49 - named alert equals new
03:54 - alert and within here we can set an
03:57 - alert type
03:58 - alert type dot
04:01 - and one good one is confirmation
04:05 - and then get your imports due
04:09 - so with this alert you can set a title
04:12 - header and
04:13 - content let's set the title alert dot
04:16 - set
04:17 - title and i will set this to
04:22 - log out
04:25 - we can set a header set header
04:32 - you're about to log out
04:36 - and lastly set content
04:41 - this will be the content of the body
04:44 - of our alert box do you
04:47 - want to save before
04:54 - exiting
04:56 - okay so then we're going to place all of
04:58 - this code within an if statement
05:01 - if alert dot
05:04 - show and wait
05:08 - followed by dot get so depending on
05:12 - their response if they click
05:14 - okay button type
05:18 - dot okay that means they would like to
05:22 - exit
05:24 - let's put all of this within an if
05:25 - statement
05:29 - and we should be good so let's test
05:31 - things
05:34 - here's our logout button when i click
05:36 - log out we will call that log
05:38 - out method and here is that alert box
05:41 - that we created
05:41 - we're not actually going to close out of
05:43 - the stage until we
05:45 - select okay here if i were to click
05:47 - cancel
05:48 - we will cancel the process of logging
05:51 - out or closing the window
05:52 - so this time let's click ok to close out
05:55 - of the window
05:55 - you successfully logged out although we
05:58 - can click
05:59 - this logout button that we created to
06:01 - save any progress
06:02 - of our program and close out of our
06:04 - stage if you were to click this
06:06 - red x in the corner that's going to
06:08 - circumvent this method
06:09 - what we could do next is that we can
06:11 - call this method when we click on that
06:13 - red x in the corner
06:15 - so to do that let's copy this method
06:17 - that we have and head to our main java
06:19 - file
06:20 - and paste that here within the logout
06:22 - method
06:23 - there are two changes that we're going
06:24 - to make we no longer need to instantiate
06:27 - a stage because that is created for us
06:30 - already when we call the start method
06:32 - when we begin this program
06:34 - and second we're going to change our
06:35 - parameter from action event
06:37 - event to a stage because our stage is
06:40 - currently not recognized
06:42 - so we will pass in a stage as an
06:44 - argument
06:45 - and within our start method we're going
06:48 - to
06:49 - take our stage and use the set on
06:52 - close request so when we click that red
06:55 - x in the corner of our window
06:57 - it's going to call this method and we
06:59 - can create some sort of event or call
07:02 - a method before we actually close out of
07:04 - the program
07:05 - so we're going to pass in a lambda
07:07 - function
07:08 - event then that arrow for lambda
07:11 - functions
07:12 - and then we will call it the logout
07:14 - method and pass in
07:16 - our stage so when we run this program
07:20 - and we hit that red x in the corner we
07:22 - will call the
07:23 - logout method and this window will pop
07:26 - up this alert
07:27 - however there's one issue though if i
07:28 - were to hit cancel we're not going to
07:31 - interrupt our event it's still going to
07:32 - continue so we can consume
07:35 - this event so let's add our code within
07:38 - a set
07:39 - of curly braces because we're writing
07:41 - more than one line of code via a lambda
07:43 - function
07:44 - and we are going to type event dot
07:48 - consume we will consume the event and
07:50 - that will prevent
07:51 - our program from closing when we hit
07:53 - that red x normally
07:55 - unless we confirm it via the alert
07:57 - message that we have
07:58 - so let's test this now so when i hit
08:01 - this red x
08:02 - we get our alert and when i hit cancel
08:05 - we will not close out of this window
08:07 - but if i were to hit that red x again
08:09 - then okay
08:10 - we will close out of this window oh and
08:13 - here's a fun fact
08:14 - if you hold alt plus f4 that will close
08:17 - out of the program too
08:18 - and we'll still get this logout alert as
08:20 - well so you can either
08:22 - for this application click the log out
08:25 - button to log out
08:26 - you can click the red x to log out or
08:29 - you can hold
08:30 - alt f4 to log out so that is how to
08:33 - create
08:33 - a basic button to close out of your
08:35 - window if you would like a copy of all
08:37 - this code i will post all of this to the
08:39 - comment section
08:40 - down below but yeah that is how to
08:41 - create a simple logout button
08:43 - in javafx hey you
08:47 - yeah i'm talking to you if you learned
08:49 - something new then help me
08:51 - help you in three easy steps by smashing
08:54 - that like button
08:54 - drop a comment down below and subscribe
08:57 - if you'd like to become a fellow bro
09:11 - [Music]
09:20 - you

Cleaned transcript:

yo what's going on everybody it's bro hope you're doing well and in this video i'm going to show you guys how we can create a button to close out of our programs in javafx so sit back relax and enjoy the show all right people let's create a simple logout button so we'll need a pane to work with pick a pane of your choice i'm just going to pick an anchor pane and to give your pane a unique id under the code drop down menu i'm going to call this scene pane now let's create a button drag and drop it anywhere i'll place it in the middle you can set the text although it's optional i'll set this to log out and for the id i will name this logout button and for the action we haven't defined one yet but i will create a method named logout that we'll define later and let's just be sure that we're setting our controller so under the controller drop down menu go to controller class and select the controller that you need let's save and close now head to your fxml document just to be sure that everything updates because sometimes it won't update unless you actively select it now within our controller class let's define all the things that we'll need we're going to inject our fxml into our controller class so add that annotation at the top let's define our button private button and i named mine logout button and for your pane we actually need a separate fxml annotation so private and i picked an anchor pane but you might have picked something different anchor pane scene pane and you might want to head to your fxml document just to verify that so we have our button named logout button and our pane is named scenepin and let's define a stage stage stage and get your imports to make sure that you're importing from javafx and not anyplace else now it's time to define that logout method so this will be public void log out and there is one parameter action event event all right now the first thing that we'll do within our logout method here is that we need to get the current stitch that we're working with in order to close it so let's add this line we already declared our stage we just have to initialize it stage equals we're going to add a cast of stage and then scene pain dot get scene followed by dot get window so that our stage is the current stage that we're working with and let's print something just to test this logout method let's print you successfully logged out and to close the stage you type stage dot close all right let's test this so we have our logout button to close out of this window you just click on this button log out you successfully logged out now if there's anything that you need to do after you click the logout button but before we actually close out of the stage you can just add some code before these lines here so let's say we would like to create an alert box that asks the user hey are you sure you want to log out and then they can confirm with ok or cancel so if we would like to add a feature like that this is how we can do so let's create an alert object named alert equals new alert and within here we can set an alert type alert type dot and one good one is confirmation and then get your imports due so with this alert you can set a title header and content let's set the title alert dot set title and i will set this to log out we can set a header set header you're about to log out and lastly set content this will be the content of the body of our alert box do you want to save before exiting okay so then we're going to place all of this code within an if statement if alert dot show and wait followed by dot get so depending on their response if they click okay button type dot okay that means they would like to exit let's put all of this within an if statement and we should be good so let's test things here's our logout button when i click log out we will call that log out method and here is that alert box that we created we're not actually going to close out of the stage until we select okay here if i were to click cancel we will cancel the process of logging out or closing the window so this time let's click ok to close out of the window you successfully logged out although we can click this logout button that we created to save any progress of our program and close out of our stage if you were to click this red x in the corner that's going to circumvent this method what we could do next is that we can call this method when we click on that red x in the corner so to do that let's copy this method that we have and head to our main java file and paste that here within the logout method there are two changes that we're going to make we no longer need to instantiate a stage because that is created for us already when we call the start method when we begin this program and second we're going to change our parameter from action event event to a stage because our stage is currently not recognized so we will pass in a stage as an argument and within our start method we're going to take our stage and use the set on close request so when we click that red x in the corner of our window it's going to call this method and we can create some sort of event or call a method before we actually close out of the program so we're going to pass in a lambda function event then that arrow for lambda functions and then we will call it the logout method and pass in our stage so when we run this program and we hit that red x in the corner we will call the logout method and this window will pop up this alert however there's one issue though if i were to hit cancel we're not going to interrupt our event it's still going to continue so we can consume this event so let's add our code within a set of curly braces because we're writing more than one line of code via a lambda function and we are going to type event dot consume we will consume the event and that will prevent our program from closing when we hit that red x normally unless we confirm it via the alert message that we have so let's test this now so when i hit this red x we get our alert and when i hit cancel we will not close out of this window but if i were to hit that red x again then okay we will close out of this window oh and here's a fun fact if you hold alt plus f4 that will close out of the program too and we'll still get this logout alert as well so you can either for this application click the log out button to log out you can click the red x to log out or you can hold alt f4 to log out so that is how to create a basic button to close out of your window if you would like a copy of all this code i will post all of this to the comment section down below but yeah that is how to create a simple logout button in javafx hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
