With timestamps:

00:00 - yo what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in this video i'm going to show you
00:04 - all how we can verify user input using a
00:07 - text field in javafx
00:09 - so sit back relax and enjoy the show
00:14 - let me give you all a tour of my setup
00:16 - here i have a total of four nodes
00:18 - two of which are labels this top label
00:20 - has a fixed id of my label
00:23 - this other label does not have a fixed
00:24 - id it's just going to function as a
00:27 - prompt
00:27 - to let the user know we would like them
00:29 - to enter their age into this text field
00:31 - down below
00:32 - and this text field has an id of my text
00:34 - field
00:35 - and lastly we have a button this button
00:37 - has an id of my button
00:39 - as well as a linked action of submit
00:42 - which we'll define later within our code
00:44 - let's pretend that a user is signing up
00:46 - for a credit card and in order to sign
00:48 - up for a credit card you have to be 18
00:50 - years or older
00:51 - a user is going to enter their edge into
00:53 - this text field and click submit
00:54 - if their age is less than 18 the text
00:58 - for this welcome label will change
01:00 - to something such as you are too young
01:02 - to sign up
01:03 - however if they're 18 years or older
01:05 - that's the minimum criteria
01:07 - so this welcome message the text in this
01:09 - welcome message
01:10 - will change to display you are now
01:13 - signed up
01:14 - so before we begin let's make sure that
01:16 - our controller class is linked
01:18 - we have at least three fixed ids my
01:20 - label
01:21 - my text field my button and your button
01:24 - should have a linked action
01:25 - of submit or some other function that
01:27 - you're going to remember
01:28 - so let's save and head to our ide within
01:31 - your controller class we're going to
01:33 - inject our fxml code into this
01:35 - controller class by adding
01:36 - this annotation for each id that we have
01:39 - at fxml
01:40 - and we had three different nodes with
01:42 - ids we have
01:43 - a label so private label
01:47 - and the idea i gave was my label
01:50 - at fxml
01:54 - private text field
01:58 - my text field
02:01 - and we have a button at fxml private
02:05 - button my button
02:08 - will declare an integer variable named
02:10 - edge but we're not going to assign it a
02:12 - value quite yet we'll do so within
02:14 - our submit method that we'll create so
02:16 - public void
02:18 - submit there is one parameter of action
02:21 - event event and we're going to assign
02:25 - this variable of
02:27 - edge age equals
02:30 - my text field dot get
02:34 - text however
02:37 - this function is going to return a
02:38 - string so we need to cast
02:40 - the string to an integer variable
02:44 - so let's say integer dot parse
02:48 - int and add in our
02:51 - my text field dot get text method that
02:54 - we have
02:55 - so this will assign whatever text is
02:57 - within my text field into this
02:59 - edge variable and just to test this i'm
03:02 - going to print
03:03 - whatever our edges to the console window
03:06 - okay now let's test it so i'm going to
03:08 - refresh my fxml document
03:10 - and then run this program so enter your
03:12 - age let's say that i'm 21
03:14 - then i press submit no problem it
03:16 - displays 21 to the console window
03:18 - but what if i type in something that's
03:20 - not a number such as a name like
03:22 - smitty warbin jaeger man
03:26 - jensen well this is going to interrupt
03:28 - our program so we should probably catch
03:30 - and handle any exceptions when they
03:32 - occur
03:32 - let's place our code within a try block
03:34 - because it would be good practice
03:36 - so try all of this code and we will
03:39 - catch any exceptions as they occur
03:41 - so for the time being we will catch
03:44 - exception e and i will print
03:47 - whatever this exception is to the
03:48 - console window by using a print line
03:50 - statement
03:51 - and i will print whatever e is
03:54 - okay let's try it again and let's see if
03:57 - we can get the name of that exception
03:58 - that occurs
04:01 - enter your age smitty submit
04:05 - okay so we have a number format
04:07 - exception
04:08 - so it's better if we catch that as well
04:10 - specifically
04:11 - so let's add an additional catch block
04:14 - preceding
04:15 - our catch all catch block so catch
04:19 - this right here number format exception
04:23 - number format
04:27 - exception e and we will print a message
04:31 - like enter only
04:35 - numbers please okay let's try it again
04:39 - enter your age smitty submit
04:42 - enter only numbers please and this did
04:44 - not interrupt our program
04:46 - if there's any additional exceptions you
04:48 - would like to catch specifically just be
04:50 - sure to write an additional catch block
04:52 - preceding our catch-all exception e what
04:55 - we'll do at this point is that we'll
04:56 - change
04:57 - the text of our label to reflect what
04:59 - the user typed in
05:00 - let's begin with the catch blocks so
05:02 - let's say if somebody does not type in a
05:05 - number for their edge
05:06 - we'll change our label mylabel dot set
05:10 - text to
05:13 - enter only numbers
05:16 - please and if there's anything else that
05:21 - happens
05:21 - let's change this to maybe just air but
05:24 - remember it's better to
05:25 - catch specific exceptions beforehand
05:28 - okay let's try this again
05:32 - okay enter your age smitty warbin
05:35 - jagerman jensen
05:37 - submit enter only numbers please now if
05:40 - user takes this seriously
05:42 - let's write an if statement to check
05:43 - their age if age
05:45 - is greater than or equal to 18
05:49 - we will change the text of my label
05:52 - to reflect a message such as you
05:56 - are now signed up
06:00 - else let's print
06:05 - you must be 18 plus for 18 years or
06:09 - older
06:10 - and let's try this again okay enter your
06:13 - edge let's say that i'm 21
06:15 - i press submit you are now signed up but
06:17 - what if i'm 12 and i'm trying to sign up
06:19 - for a credit card
06:20 - well you must be 18 years or older 18
06:23 - plus
06:24 - so everybody that's a basic form of
06:27 - validating user input via a text field
06:30 - i will post all of this code to the
06:32 - comments section down below
06:33 - and well yeah that's a basic way to
06:35 - validate user input using a text field

Cleaned transcript:

yo what's going on everybody it's you bro hope you're doing well and in this video i'm going to show you all how we can verify user input using a text field in javafx so sit back relax and enjoy the show let me give you all a tour of my setup here i have a total of four nodes two of which are labels this top label has a fixed id of my label this other label does not have a fixed id it's just going to function as a prompt to let the user know we would like them to enter their age into this text field down below and this text field has an id of my text field and lastly we have a button this button has an id of my button as well as a linked action of submit which we'll define later within our code let's pretend that a user is signing up for a credit card and in order to sign up for a credit card you have to be 18 years or older a user is going to enter their edge into this text field and click submit if their age is less than 18 the text for this welcome label will change to something such as you are too young to sign up however if they're 18 years or older that's the minimum criteria so this welcome message the text in this welcome message will change to display you are now signed up so before we begin let's make sure that our controller class is linked we have at least three fixed ids my label my text field my button and your button should have a linked action of submit or some other function that you're going to remember so let's save and head to our ide within your controller class we're going to inject our fxml code into this controller class by adding this annotation for each id that we have at fxml and we had three different nodes with ids we have a label so private label and the idea i gave was my label at fxml private text field my text field and we have a button at fxml private button my button will declare an integer variable named edge but we're not going to assign it a value quite yet we'll do so within our submit method that we'll create so public void submit there is one parameter of action event event and we're going to assign this variable of edge age equals my text field dot get text however this function is going to return a string so we need to cast the string to an integer variable so let's say integer dot parse int and add in our my text field dot get text method that we have so this will assign whatever text is within my text field into this edge variable and just to test this i'm going to print whatever our edges to the console window okay now let's test it so i'm going to refresh my fxml document and then run this program so enter your age let's say that i'm 21 then i press submit no problem it displays 21 to the console window but what if i type in something that's not a number such as a name like smitty warbin jaeger man jensen well this is going to interrupt our program so we should probably catch and handle any exceptions when they occur let's place our code within a try block because it would be good practice so try all of this code and we will catch any exceptions as they occur so for the time being we will catch exception e and i will print whatever this exception is to the console window by using a print line statement and i will print whatever e is okay let's try it again and let's see if we can get the name of that exception that occurs enter your age smitty submit okay so we have a number format exception so it's better if we catch that as well specifically so let's add an additional catch block preceding our catch all catch block so catch this right here number format exception number format exception e and we will print a message like enter only numbers please okay let's try it again enter your age smitty submit enter only numbers please and this did not interrupt our program if there's any additional exceptions you would like to catch specifically just be sure to write an additional catch block preceding our catchall exception e what we'll do at this point is that we'll change the text of our label to reflect what the user typed in let's begin with the catch blocks so let's say if somebody does not type in a number for their edge we'll change our label mylabel dot set text to enter only numbers please and if there's anything else that happens let's change this to maybe just air but remember it's better to catch specific exceptions beforehand okay let's try this again okay enter your age smitty warbin jagerman jensen submit enter only numbers please now if user takes this seriously let's write an if statement to check their age if age is greater than or equal to 18 we will change the text of my label to reflect a message such as you are now signed up else let's print you must be 18 plus for 18 years or older and let's try this again okay enter your edge let's say that i'm 21 i press submit you are now signed up but what if i'm 12 and i'm trying to sign up for a credit card well you must be 18 years or older 18 plus so everybody that's a basic form of validating user input via a text field i will post all of this code to the comments section down below and well yeah that's a basic way to validate user input using a text field
