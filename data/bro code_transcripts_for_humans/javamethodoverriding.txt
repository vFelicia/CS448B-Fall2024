With timestamps:

00:00 - hey how's it going everybody it's you
00:01 - bro hope you're doing well and in this
00:02 - video i'm going to teach you guys about
00:04 - method overriding in java so
00:06 - sit back relax enjoy the show
00:10 - if you find this video helpful please
00:12 - remember to like
00:13 - comment and subscribe your support will
00:16 - help keep this channel running
00:18 - all right guys i'm going to teach you
00:19 - all about method overriding
00:21 - this is done by declaring a method in a
00:23 - subclass
00:24 - which is already present in a parent
00:27 - class and this is done so that a child
00:29 - class
00:30 - can have its own implementation of that
00:32 - method
00:33 - so here's an example i have two
00:35 - additional classes
00:36 - a class called animal and a class called
00:39 - dog that extends animal
00:41 - so the dog class is going to inherit
00:43 - everything that the animal class has
00:45 - so let's say our animal class has one
00:48 - method maybe a speak method
00:50 - void speak and all that this method will
00:53 - do
00:53 - is just display a message to the console
00:56 - window such as
00:58 - the animal speaks i don't know what kind
01:00 - of animal it is but
01:02 - it's speaking so let's create a dog
01:04 - object and our dog class is going to
01:06 - inherit everything from the animal class
01:09 - just a speak method really so let's
01:11 - create a dog object
01:12 - dog dog equals new dog
01:15 - and we can have our dog object use the
01:18 - speak method
01:19 - which will display the animal speaks
01:23 - now what we could do is that we can give
01:25 - this class
01:26 - its own implementation of our method
01:30 - speak so it's going to have the same
01:32 - name speak
01:33 - and i'm just going to copy everything i
01:34 - have here paste it
01:36 - and what we are doing now is called
01:38 - method overriding we're giving this dog
01:40 - class its own
01:41 - implementation of this method speak and
01:44 - we can have this method
01:45 - do something more specific for dogs such
01:48 - as displaying a message
01:50 - like the dog goes
01:54 - bark and if we were to compile and run
01:58 - this again
01:59 - our new message says the dog goes bark
02:02 - now our speak method within the dog
02:04 - class
02:05 - is considered the overriding method and
02:07 - the one that it inherits from its parent
02:10 - class
02:10 - is considered the overridden method so
02:13 - if we're overriding
02:14 - a method the overriding method should
02:17 - have
02:17 - this annotation on the top override
02:21 - this isn't necessary but it's considered
02:23 - good practice to add
02:24 - this note in just to let other users
02:26 - know that this is an
02:28 - overriding method but it doesn't add any
02:30 - additional functionality
02:32 - so if we were to create an animal object
02:34 - this time
02:36 - animal let's call this animal equals new
02:39 - animal and we have our animal object use
02:42 - the speak method
02:43 - it's going to use its own implementation
02:46 - of the speak method
02:47 - which just states the animal speaks and
02:50 - if we use dog
02:51 - this will display the dog goes bark
02:54 - so each class is going to use the method
02:57 - that is more closely associated with
02:59 - it with our dog class if we removed
03:02 - the overriding speak method well it's
03:05 - going to next
03:05 - use the closest speak method available
03:08 - to it
03:09 - which is the one it inherits from the
03:10 - animal class so
03:12 - this will now display the animal speaks
03:15 - and that's all really that method
03:16 - overriding is
03:17 - it allows a child class to have its own
03:20 - implementation of a method
03:22 - that it inherits from a parent class so
03:24 - that with this method
03:25 - you could do something that is more
03:27 - specific to this class
03:29 - such as changing the message from the
03:32 - animal speaks to
03:34 - the dog goes bark so that's the basics
03:37 - of method overriding in java if you'd
03:39 - like a copy of all this code i will post
03:41 - all of this in the comments down below
03:43 - but yeah that's the basics of method
03:45 - overriding in java
03:47 - hey you yeah i'm talking to you if you
03:50 - learn something new
03:51 - then you can help me help you in three
03:54 - easy steps
03:55 - by smashing that like button drop a
03:57 - comment down below
03:59 - and subscribe if you'd like to become a
04:00 - fellow bro
04:16 - [Music]
04:22 - you

Cleaned transcript:

hey how's it going everybody it's you bro hope you're doing well and in this video i'm going to teach you guys about method overriding in java so sit back relax enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right guys i'm going to teach you all about method overriding this is done by declaring a method in a subclass which is already present in a parent class and this is done so that a child class can have its own implementation of that method so here's an example i have two additional classes a class called animal and a class called dog that extends animal so the dog class is going to inherit everything that the animal class has so let's say our animal class has one method maybe a speak method void speak and all that this method will do is just display a message to the console window such as the animal speaks i don't know what kind of animal it is but it's speaking so let's create a dog object and our dog class is going to inherit everything from the animal class just a speak method really so let's create a dog object dog dog equals new dog and we can have our dog object use the speak method which will display the animal speaks now what we could do is that we can give this class its own implementation of our method speak so it's going to have the same name speak and i'm just going to copy everything i have here paste it and what we are doing now is called method overriding we're giving this dog class its own implementation of this method speak and we can have this method do something more specific for dogs such as displaying a message like the dog goes bark and if we were to compile and run this again our new message says the dog goes bark now our speak method within the dog class is considered the overriding method and the one that it inherits from its parent class is considered the overridden method so if we're overriding a method the overriding method should have this annotation on the top override this isn't necessary but it's considered good practice to add this note in just to let other users know that this is an overriding method but it doesn't add any additional functionality so if we were to create an animal object this time animal let's call this animal equals new animal and we have our animal object use the speak method it's going to use its own implementation of the speak method which just states the animal speaks and if we use dog this will display the dog goes bark so each class is going to use the method that is more closely associated with it with our dog class if we removed the overriding speak method well it's going to next use the closest speak method available to it which is the one it inherits from the animal class so this will now display the animal speaks and that's all really that method overriding is it allows a child class to have its own implementation of a method that it inherits from a parent class so that with this method you could do something that is more specific to this class such as changing the message from the animal speaks to the dog goes bark so that's the basics of method overriding in java if you'd like a copy of all this code i will post all of this in the comments down below but yeah that's the basics of method overriding in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
