With timestamps:

00:00 - all right everybody here's a quick
00:02 - introduction to trees in this video
00:04 - we're only going to cover some of the
00:06 - terminology a tree is a non-linear data
00:09 - structure where nodes are organized in a
00:11 - hierarchy this could be one example of a
00:13 - tree it's made up of nodes and edges
00:16 - nodes could be some piece of data and
00:18 - edges represent a relationship between
00:20 - two nodes a real-life example of a tree
00:23 - could be a family tree maybe we're at
00:25 - node that's us or me or you b is a
00:29 - parent e is your brother or sister a is
00:32 - a grandparent
00:33 - c could be an enter uncle and f is your
00:36 - cousin a few examples of where a tree
00:38 - data structure would be used in
00:40 - programming or technology would be file
00:42 - explorers databases
00:44 - domain name servers and the html
00:46 - document object model the top of the
00:49 - tree is known as the root node the root
00:52 - node doesn't have any incoming edges
00:54 - only outgoing edges
00:56 - any nodes at the bottom of a tree are
00:58 - known as leaf nodes they do not have any
01:01 - outgoing edges but they do have incoming
01:03 - edges and branch nodes are in the middle
01:05 - they have incoming and outgoing edges
01:08 - here's a few other terms any nodes with
01:11 - outgoing edges are also known as parents
01:14 - any node with an incoming edge is known
01:16 - as a child node and nodes can be both
01:18 - parents and children if they have both
01:21 - incoming and outgoing nodes any two
01:23 - children that share the same parent are
01:25 - known as siblings nodes d and e both
01:29 - share the same parent of b so d and e
01:31 - are both siblings the same thing goes
01:34 - with b and c nodes b and c share a as a
01:37 - parent so these two nodes are siblings
01:39 - it's just like a family tree a sub-tree
01:42 - is a smaller tree held within a larger
01:44 - tree you could say that this portion is
01:47 - a sub-tree
01:48 - the size of a tree is equal to the
01:50 - number of nodes so what's the size of
01:52 - this tree
01:53 - we have one node two three
01:56 - four five six
01:58 - the size of this tree is six six nodes
02:02 - the depth of a node is the number of
02:04 - edges below the root node our root node
02:07 - would have a depth of zero
02:09 - then as we move down levels b and c have
02:12 - a depth of one d e and f have a depth of
02:15 - two and lastly the height of a node is
02:18 - the number of edges above the furthest
02:20 - leaf node all of these leaf nodes are
02:22 - the same distance away from the root
02:24 - node these would all have a height of
02:26 - zero b and c have a height of one and a
02:30 - has a height of two well alright then
02:33 - everybody that is a quick introduction
02:35 - to some of the terminology around trees
02:37 - it's a non-linear data structure where
02:40 - nodes are organized in a hierarchy and
02:42 - in the next few topics we'll get a
02:44 - little more in depth with trees if you
02:46 - found this video helpful please help me
02:48 - out by smashing that like button leave
02:49 - random comments down below and subscribe
02:51 - if you'd like to become a fellow bro

Cleaned transcript:

all right everybody here's a quick introduction to trees in this video we're only going to cover some of the terminology a tree is a nonlinear data structure where nodes are organized in a hierarchy this could be one example of a tree it's made up of nodes and edges nodes could be some piece of data and edges represent a relationship between two nodes a reallife example of a tree could be a family tree maybe we're at node that's us or me or you b is a parent e is your brother or sister a is a grandparent c could be an enter uncle and f is your cousin a few examples of where a tree data structure would be used in programming or technology would be file explorers databases domain name servers and the html document object model the top of the tree is known as the root node the root node doesn't have any incoming edges only outgoing edges any nodes at the bottom of a tree are known as leaf nodes they do not have any outgoing edges but they do have incoming edges and branch nodes are in the middle they have incoming and outgoing edges here's a few other terms any nodes with outgoing edges are also known as parents any node with an incoming edge is known as a child node and nodes can be both parents and children if they have both incoming and outgoing nodes any two children that share the same parent are known as siblings nodes d and e both share the same parent of b so d and e are both siblings the same thing goes with b and c nodes b and c share a as a parent so these two nodes are siblings it's just like a family tree a subtree is a smaller tree held within a larger tree you could say that this portion is a subtree the size of a tree is equal to the number of nodes so what's the size of this tree we have one node two three four five six the size of this tree is six six nodes the depth of a node is the number of edges below the root node our root node would have a depth of zero then as we move down levels b and c have a depth of one d e and f have a depth of two and lastly the height of a node is the number of edges above the furthest leaf node all of these leaf nodes are the same distance away from the root node these would all have a height of zero b and c have a height of one and a has a height of two well alright then everybody that is a quick introduction to some of the terminology around trees it's a nonlinear data structure where nodes are organized in a hierarchy and in the next few topics we'll get a little more in depth with trees if you found this video helpful please help me out by smashing that like button leave random comments down below and subscribe if you'd like to become a fellow bro
