With timestamps:

00:00 - hey what's going on everybody Dubrow
here and in this video I'm going to show
00:03 - you how switches work in C++ let's get
into it
00:09 - the switch is basically a bunch of
consecutive if statements however using
00:13 - a switch is much more efficient you
could say that it's harder better faster
00:18 - stronger so here's an example of when we
might want to use a switch in place of a
00:23 - bunch of if statements let's write a
program where we can enter a number
00:27 - between 1 and 12 and it will give us a
corresponding month depending on the
00:31 - number that we type in so before we get
the started let's just include one thing
00:35 - we're going to type include then a set
of angle brackets and then we're going
00:40 - to type in strength
all right let's create a integer named
00:46 - month and we will not assign this value
right away we'll just declare it and
00:50 - let's create a prompt to ask for a month
enter the month then we'll put the
00:59 - numbers 1 through 12 here think I'm
gonna get rid of that :
01:04 - all right and then we are going to use
CIN a month
01:10 - I finished typing everything so here's
what you don't want to do writing an if
01:16 - statement and then writing an if
statement or an else if statement right
01:19 - after and it's going to check if month
is equal to 1 2 3 so on and so forth all
01:24 - the way till 12 so if a veteran
programmer sees you do something like
01:30 - this where you write a bunch of
consecutive if statements they're
01:33 - probably going to call you a noob and
there's a better option and that's by
01:36 - using this thing called a switch this is
how you write one we're going to type
01:39 - switch then we need an expression or we
can stick a very bold within here so we
01:45 - want to check the month and then we need
a set of curly brackets in place of if
01:50 - statements we use cases and we're going
to check if our value is equal to some
01:56 - case and the first thing we'll want to
check if our case is equal to one so
02:01 - we're going to type in case 1 colon and
then on the next line we're going to
02:06 - type C out it is January and then this
step is important too we're going to
02:15 - type break so if this case matches what
we want to evaluate or check
02:23 - we're going to do this and then break
out of the switch and we don't need to
02:27 - check anything else so we're going to do
the same thing for case two so case two
02:32 - then we want our program to do this
display it is February and then break
02:42 - all right well you get the idea I'm
going to repeat this process for cases
02:46 - three through 12
so I'll just fast forward this video all
02:49 - right it's done so we have cases one
through twelve one corresponding to each
02:55 - month of the year so let's test out this
program enter the month well currently
03:01 - it is April so I'm going to type four
and hit enter so four enter and it says
03:07 - it is April let's try a different month
I'm going to type in 12 hit enter and it
03:11 - says it is December so we know the
switch is working what happens if we
03:16 - type in a number that doesn't match any
of these cases well let's see what
03:21 - happens so it says enter the month I'm
going to type in the word pizza so
03:26 - nothing appears to happen so what we can
do is that we can place a default case
03:32 - what do we want our switch to do by
default in case there are no matching
03:37 - cases so we're going to write default at
the end and what do we want our program
03:41 - to do so first make sure you write
default and then add a colon at the end
03:46 - and let's simply display a message that
says you did not enter a number between
03:53 - 1 and 12 enter the month it is pizza
month you did not enter a number between
04:04 - 1 and 12 so it's similar to an else
statement where it's like a last resort
04:10 - if there are no matching cases we'll
have our program do this by default so
04:15 - how this works is that the switch
expression is evaluated at once and
04:20 - selects one of these many code blocks
depending if there's a matching case or
04:24 - not if there's no matching case we can
execute whatever is within the default
04:28 - code block now with these break keywords
these are important to have after each
04:32 - case and if you were to take these out
we would continue on to the next case
04:36 - as if the next case was also true so
let's try this program again and take
04:41 - out a few of these breaks and see what
happens and for the month it is April so
04:46 - I'm going to type in the number 4 and
hit enter and our result is it is April
04:51 - it is May it is June it is July it is
August so if you're missing a break
04:56 - within a case it's going to continue on
to the next case as if that next case
05:01 - was also true and it's not going to stop
until it reaches a break and these cases
05:06 - don't necessarily have to be numbers
let's try another example using char
05:11 - values two characters I have an idea
let's write a program that will ask for
05:15 - a letter grade like in school the
letters A through F and we will give a
05:20 - response based on what letter grade that
we answer with so to begin let's create
05:25 - a variable that will store a single
character a char value and we'll say
05:30 - answer and we don't need to assign this
value right away next we will say C out
05:37 - this will function as a prompt what
letter grade did you get and perhaps
05:47 - I'll just put a through F in here and
then we will say C in answer let's
05:57 - create a switch so switch then this
parts the expression we'll just put our
06:02 - answer within here and we will check
this answer against many different cases
06:07 - in our first case instead of one we're
going to type in a within single quotes
06:12 - so if our answer matches this case where
it's a the character a what do we want
06:20 - our program to do perhaps a simple
message such as you did perfect and then
06:30 - we want to break all right let's repeat
the same process for the other letter
06:36 - grades so case B what do we want our
program to do if this case matches you
06:44 - did good and then break
and it's just a matter repeating the
06:51 - same process for each of these letter
grades so case C C out you did okay and
07:05 - break case D C out you did not do so
good it's still passing though and case
07:28 - F C out you failed and break we can add
a default code block so let's do that
07:44 - we're going to type in default and we
will display a message enter a letter
07:54 - grade A through F oh I guess we're
missing EE but who cares let's run this
08:02 - program and see if it actually works
08:08 - what letter grade did you get I got an A
so I typed in a hit enter you did
08:14 - perfect all right we got an A everybody
what letter grade did you get
08:19 - I got enough you failed have a nice day
alright then let's type in something
08:25 - that's not a letter grade like the word
pizza and we get that default message of
08:31 - enter a letter grade A through F so we
know the switch is working but yeah
08:36 - you're not limited to just using numbers
for your cases you can also use
08:40 - characters and other things too so just
to summarize what we did here today a
08:44 - switch is more efficient than using a
bunch of consecutive if statements we
08:50 - can take a value or expression and
compare it to see if it's equal against
08:54 - many cases at once if there is a
matching case we can activate the
08:59 - corresponding code block and have our
program do something that was
09:03 - by and then we can use the break keyword
to break out of the switch and continue
09:07 - on with the rest of the program and we
can also add a default code block if
09:11 - there are no matching cases we can have
our program do something by default but
09:17 - yeah that's the basics if you want a
copy of the examples that we worked on
09:21 - today I'll post it in the comments down
below and pin it to the top and if
09:26 - you're looking for a practice or a
project to work on why don't you create
09:29 - your own switch and then post it in the
comments down below but yeah that's the
09:34 - basics of how switches work in C++ hey
you if you enjoyed this lesson then you
09:40 - can help me help you in 3 easy steps by
smashing that like button drop a comment
09:47 - down below and subscribe if you'd like
to become a fellow bro

Cleaned transcript:

hey what's going on everybody Dubrow here and in this video I'm going to show you how switches work in C++ let's get into it the switch is basically a bunch of consecutive if statements however using a switch is much more efficient you could say that it's harder better faster stronger so here's an example of when we might want to use a switch in place of a bunch of if statements let's write a program where we can enter a number between 1 and 12 and it will give us a corresponding month depending on the number that we type in so before we get the started let's just include one thing we're going to type include then a set of angle brackets and then we're going to type in strength all right let's create a integer named month and we will not assign this value right away we'll just declare it and let's create a prompt to ask for a month enter the month then we'll put the numbers 1 through 12 here think I'm gonna get rid of that all right and then we are going to use CIN a month I finished typing everything so here's what you don't want to do writing an if statement and then writing an if statement or an else if statement right after and it's going to check if month is equal to 1 2 3 so on and so forth all the way till 12 so if a veteran programmer sees you do something like this where you write a bunch of consecutive if statements they're probably going to call you a noob and there's a better option and that's by using this thing called a switch this is how you write one we're going to type switch then we need an expression or we can stick a very bold within here so we want to check the month and then we need a set of curly brackets in place of if statements we use cases and we're going to check if our value is equal to some case and the first thing we'll want to check if our case is equal to one so we're going to type in case 1 colon and then on the next line we're going to type C out it is January and then this step is important too we're going to type break so if this case matches what we want to evaluate or check we're going to do this and then break out of the switch and we don't need to check anything else so we're going to do the same thing for case two so case two then we want our program to do this display it is February and then break all right well you get the idea I'm going to repeat this process for cases three through 12 so I'll just fast forward this video all right it's done so we have cases one through twelve one corresponding to each month of the year so let's test out this program enter the month well currently it is April so I'm going to type four and hit enter so four enter and it says it is April let's try a different month I'm going to type in 12 hit enter and it says it is December so we know the switch is working what happens if we type in a number that doesn't match any of these cases well let's see what happens so it says enter the month I'm going to type in the word pizza so nothing appears to happen so what we can do is that we can place a default case what do we want our switch to do by default in case there are no matching cases so we're going to write default at the end and what do we want our program to do so first make sure you write default and then add a colon at the end and let's simply display a message that says you did not enter a number between 1 and 12 enter the month it is pizza month you did not enter a number between 1 and 12 so it's similar to an else statement where it's like a last resort if there are no matching cases we'll have our program do this by default so how this works is that the switch expression is evaluated at once and selects one of these many code blocks depending if there's a matching case or not if there's no matching case we can execute whatever is within the default code block now with these break keywords these are important to have after each case and if you were to take these out we would continue on to the next case as if the next case was also true so let's try this program again and take out a few of these breaks and see what happens and for the month it is April so I'm going to type in the number 4 and hit enter and our result is it is April it is May it is June it is July it is August so if you're missing a break within a case it's going to continue on to the next case as if that next case was also true and it's not going to stop until it reaches a break and these cases don't necessarily have to be numbers let's try another example using char values two characters I have an idea let's write a program that will ask for a letter grade like in school the letters A through F and we will give a response based on what letter grade that we answer with so to begin let's create a variable that will store a single character a char value and we'll say answer and we don't need to assign this value right away next we will say C out this will function as a prompt what letter grade did you get and perhaps I'll just put a through F in here and then we will say C in answer let's create a switch so switch then this parts the expression we'll just put our answer within here and we will check this answer against many different cases in our first case instead of one we're going to type in a within single quotes so if our answer matches this case where it's a the character a what do we want our program to do perhaps a simple message such as you did perfect and then we want to break all right let's repeat the same process for the other letter grades so case B what do we want our program to do if this case matches you did good and then break and it's just a matter repeating the same process for each of these letter grades so case C C out you did okay and break case D C out you did not do so good it's still passing though and case F C out you failed and break we can add a default code block so let's do that we're going to type in default and we will display a message enter a letter grade A through F oh I guess we're missing EE but who cares let's run this program and see if it actually works what letter grade did you get I got an A so I typed in a hit enter you did perfect all right we got an A everybody what letter grade did you get I got enough you failed have a nice day alright then let's type in something that's not a letter grade like the word pizza and we get that default message of enter a letter grade A through F so we know the switch is working but yeah you're not limited to just using numbers for your cases you can also use characters and other things too so just to summarize what we did here today a switch is more efficient than using a bunch of consecutive if statements we can take a value or expression and compare it to see if it's equal against many cases at once if there is a matching case we can activate the corresponding code block and have our program do something that was by and then we can use the break keyword to break out of the switch and continue on with the rest of the program and we can also add a default code block if there are no matching cases we can have our program do something by default but yeah that's the basics if you want a copy of the examples that we worked on today I'll post it in the comments down below and pin it to the top and if you're looking for a practice or a project to work on why don't you create your own switch and then post it in the comments down below but yeah that's the basics of how switches work in C++ hey you if you enjoyed this lesson then you can help me help you in 3 easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro
