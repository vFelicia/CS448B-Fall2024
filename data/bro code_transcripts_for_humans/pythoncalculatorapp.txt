With timestamps:

00:00 - what's going on everybody it's you bro
00:01 - hope you're doing well and in this video
00:03 - i'm going to show you all how we can
00:04 - create a basic calculator using python
00:07 - so
00:07 - sit back relax and enjoy the show
00:12 - if you wouldn't mind please like comment
00:15 - and subscribe
00:16 - one like equals one prayer for the
00:18 - youtube algorithm
00:20 - let's create a calculator after
00:21 - importing tkinter we'll need to define
00:24 - three separate functions our first
00:26 - function will be named
00:27 - button press and there is one parameter
00:31 - which we will call num we're not going
00:33 - to fill this in quite yet we'll get back
00:35 - to it later we'll use
00:36 - pass as a placeholder we'll also need an
00:39 - equals function to calculate our
00:42 - expression
00:44 - and a function to clear our calculator
00:49 - okay that's it for our three functions
00:51 - let's create a window
00:53 - window equals tk and at the end of our
00:56 - program
00:57 - we'll write window.midloop
01:00 - let's set a title window
01:03 - dot title calculator
01:08 - programs good but make sure you spell
01:12 - title right
01:15 - and let's set a geometry of
01:19 - 500 by 500 should be decent
01:23 - now we're going to create a string named
01:25 - equation
01:27 - text equals a set of quotes
01:31 - this will effectively be empty for the
01:33 - time being
01:34 - and we'll need to create a string var
01:37 - and i will call this
01:38 - equation label equals string
01:42 - var let's create a label
01:45 - label equals label we're adding our
01:48 - label
01:49 - to our window i will set our text
01:52 - variable equal to our equation label
01:58 - you can pick a font if you wish
02:05 - i'll set the background color equal to
02:07 - white
02:11 - a width of 24
02:15 - and a height of two
02:18 - and we need to finish this by using
02:20 - label dot pack
02:22 - and we should have a blank label within
02:24 - our calculator
02:26 - this will display our numbers that we're
02:27 - entering in or our expression
02:30 - okay this is the tedious part we have to
02:32 - create all of the buttons and i think we
02:34 - should place these all within a frame
02:36 - frame equals frame we're adding our
02:39 - frame to our window
02:40 - frame dot pack
02:44 - now let's create button one we'll do
02:46 - some copying and pasting later
02:48 - so it's not as tedious so button one
02:51 - equals button we're adding our button to
02:54 - our frame
02:55 - i'll set the text equal to one
02:58 - the height equal to four and the width
03:01 - equal to nine and
03:04 - a font size of 35
03:09 - okay we'll need a command command
03:12 - equals i'll write a lambda function here
03:16 - lambda we will call button press
03:22 - actually i think i'm going to put this
03:23 - on the next line just so it's easier to
03:25 - read
03:25 - button press and we will pass in the
03:27 - number one
03:29 - and we need to add our button to our
03:31 - frame
03:32 - button one dot grid
03:36 - and i'm going to set a row equal to zero
03:39 - and
03:39 - a column equal to zero
03:42 - and let's just test it okay let's add
03:45 - the other buttons
03:47 - i'm going to copy and paste everything
03:48 - that we have for button one
03:50 - and change button one to button two
03:54 - set the text equal to two pass into
03:57 - two button press and for the row and
04:00 - column
04:01 - i'm going to set the column equal to one
04:03 - but keep row the same
04:05 - okay button three
04:10 - it's gonna be the same process really so
04:13 - text equals
04:14 - three button press three row zero
04:17 - column two
04:21 - and button four
04:25 - text equals four button press
04:28 - four column
04:31 - actually let's set this to row one
04:34 - column zero and i need to change that
04:38 - too
04:41 - okay let's just double check this
04:46 - okay button five
04:51 - so button five text equals five
04:56 - button press five and
04:59 - let's set column equal to one
05:04 - okay number six i told you all this is
05:08 - going to be tedious
05:15 - okay so row one column two
05:24 - seven
05:33 - okay so row two column two
05:38 - actually let's change that to column
05:40 - zero
05:42 - much better okay button eight
05:49 - eight eight eight eight
05:53 - row two column one
05:58 - number nine
06:08 - row two column two
06:14 - and lastly zero
06:20 - so button zero
06:24 - text equals zero button press pass in
06:27 - zero
06:28 - and this will be row three column
06:32 - zero okay
06:35 - not too bad now let's fill in some of
06:38 - the symbols
06:39 - so we need plus
06:43 - i'm just going to rename this as plus
06:49 - the text will equal the plus sign put
06:52 - that within quotes
06:54 - and button press will be plus
06:59 - on we should probably put this in a row
07:01 - and column so let's say
07:03 - row zero column three
07:06 - so it should be on the right hand side
07:08 - here
07:10 - okay we need minus
07:19 - let's change plus to minus
07:25 - and place this at row one column three
07:30 - we need multiply
07:39 - that is an asterisk
07:45 - row two column three
07:49 - and divide
07:58 - that is a forward slash
08:06 - row three column three
08:12 - i promise we're near the end of creating
08:14 - these buttons we'll need an equal sign
08:17 - let's say equal
08:21 - equal text
08:25 - is the equal sign and our command
08:28 - is going to be equals
08:32 - the function and this will be
08:36 - row 3 column 2.
08:44 - we need a decimal
08:56 - let's change the text to a decimal
09:02 - row three column one
09:08 - okay and lastly we just need a clear
09:10 - button let's put this at the bottom
09:18 - so clear clear
09:23 - let's set the text equal to the word
09:25 - clear
09:27 - and the command will be our clear
09:30 - function
09:33 - and i think i'm going to pack this at
09:34 - the end
09:36 - but let's change frame to window
09:41 - okay let's check out all these buttons
09:44 - okay not too bad i think i'm going to
09:46 - change the width on our clear button so
09:47 - it's a little bit wider
09:49 - let's change the width to 12.
09:53 - that's a little bit better okay let's
09:55 - fill in some of these functions
09:57 - let's start with button press we're
10:00 - going to state
10:01 - global equation
10:04 - text then our equation text
10:10 - is equal to equation text plus
10:14 - we're converting whatever number or
10:16 - symbol that we receive
10:18 - to a string and our
10:21 - equation label which is a string var
10:25 - will be set to our equation text
10:30 - and let's test this
10:33 - so we can type in any combination of
10:36 - numbers or symbols
10:41 - okay let's work on our equals
10:44 - function next so let's say
10:48 - global equation
10:51 - text total
10:55 - equals
10:58 - eval now eval will parse the expression
11:02 - that we pass in
11:04 - equation
11:08 - text
11:11 - and our equation label
11:14 - will be set to whatever our total is
11:20 - and if we want to reuse our total let's
11:22 - set
11:23 - our equation text
11:27 - equal to total two
11:30 - plus two equals four minus three
11:34 - equals one times five equals five
11:37 - divided by two equals two point five
11:41 - now what if we divide by zero well
11:44 - we'll run into that ugly zero division
11:46 - error
11:47 - so let's write our code within a try and
11:49 - accept block
11:51 - so i'm going to indent some of this
11:55 - and let's write try all of this code
11:58 - and we will catch a zero division error
12:00 - exception
12:02 - so accept zero division error
12:09 - and i will set our equation
12:13 - label set
12:17 - let's say arithmetic
12:22 - error
12:24 - text equals a set of quotes okay so we
12:27 - should be able to catch this exception
12:29 - now
12:31 - five divided by zero equals arithmetic
12:34 - error
12:35 - now what if we have a syntax here
12:39 - like we type in just a bunch of symbols
12:41 - and hit equals
12:43 - we'll probably want to catch the syntax
12:45 - error as well
12:47 - so let's write an additional accept
12:49 - block before
12:50 - zero division error or after i guess it
12:53 - doesn't matter
12:55 - accept syntax
12:58 - error let's change arithmetic to
13:03 - syntax and we can keep equation text the
13:05 - same
13:07 - so now our program won't crash if we
13:09 - type in a bunch of symbols
13:11 - syntax error now let's work on the clear
13:14 - button
13:17 - so that is within the clear function
13:22 - so we will set global
13:26 - equation text
13:31 - equation label
13:35 - dot set to a set of quotes to
13:37 - effectively clear it
13:40 - and our equation
13:43 - text equal to a set of quotes as well
13:48 - and that should be it for this program
13:50 - let's run this one last time
13:51 - let's say three point one four times
13:55 - two point one equals six point five
13:58 - nine four divided by 2.1
14:03 - equals 3.14 minus 1. i'm just making up
14:06 - numbers here
14:07 - plus 10 equals 12.14
14:10 - and let's clear this and start again one
14:13 - plus
14:13 - two plus three plus 4 equals 10.
14:17 - i think that's good enough all right
14:18 - everybody so that's how to create a
14:20 - basic
14:21 - calculator in python i will post all of
14:23 - my code in the comments section down
14:25 - below if you would like a copy for
14:27 - yourself
14:28 - but yeah that's how to create a basic
14:30 - calculator using python
14:33 - hey you yeah i'm talking to you if you
14:35 - learned something new
14:36 - then help me help you in three easy
14:39 - steps
14:39 - by smashing that like button drop a
14:41 - comment down below
14:43 - and subscribe if you'd like to become a
14:44 - fellow bro
14:59 - [Music]
15:07 - you

Cleaned transcript:

what's going on everybody it's you bro hope you're doing well and in this video i'm going to show you all how we can create a basic calculator using python so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm let's create a calculator after importing tkinter we'll need to define three separate functions our first function will be named button press and there is one parameter which we will call num we're not going to fill this in quite yet we'll get back to it later we'll use pass as a placeholder we'll also need an equals function to calculate our expression and a function to clear our calculator okay that's it for our three functions let's create a window window equals tk and at the end of our program we'll write window.midloop let's set a title window dot title calculator programs good but make sure you spell title right and let's set a geometry of 500 by 500 should be decent now we're going to create a string named equation text equals a set of quotes this will effectively be empty for the time being and we'll need to create a string var and i will call this equation label equals string var let's create a label label equals label we're adding our label to our window i will set our text variable equal to our equation label you can pick a font if you wish i'll set the background color equal to white a width of 24 and a height of two and we need to finish this by using label dot pack and we should have a blank label within our calculator this will display our numbers that we're entering in or our expression okay this is the tedious part we have to create all of the buttons and i think we should place these all within a frame frame equals frame we're adding our frame to our window frame dot pack now let's create button one we'll do some copying and pasting later so it's not as tedious so button one equals button we're adding our button to our frame i'll set the text equal to one the height equal to four and the width equal to nine and a font size of 35 okay we'll need a command command equals i'll write a lambda function here lambda we will call button press actually i think i'm going to put this on the next line just so it's easier to read button press and we will pass in the number one and we need to add our button to our frame button one dot grid and i'm going to set a row equal to zero and a column equal to zero and let's just test it okay let's add the other buttons i'm going to copy and paste everything that we have for button one and change button one to button two set the text equal to two pass into two button press and for the row and column i'm going to set the column equal to one but keep row the same okay button three it's gonna be the same process really so text equals three button press three row zero column two and button four text equals four button press four column actually let's set this to row one column zero and i need to change that too okay let's just double check this okay button five so button five text equals five button press five and let's set column equal to one okay number six i told you all this is going to be tedious okay so row one column two seven okay so row two column two actually let's change that to column zero much better okay button eight eight eight eight eight row two column one number nine row two column two and lastly zero so button zero text equals zero button press pass in zero and this will be row three column zero okay not too bad now let's fill in some of the symbols so we need plus i'm just going to rename this as plus the text will equal the plus sign put that within quotes and button press will be plus on we should probably put this in a row and column so let's say row zero column three so it should be on the right hand side here okay we need minus let's change plus to minus and place this at row one column three we need multiply that is an asterisk row two column three and divide that is a forward slash row three column three i promise we're near the end of creating these buttons we'll need an equal sign let's say equal equal text is the equal sign and our command is going to be equals the function and this will be row 3 column 2. we need a decimal let's change the text to a decimal row three column one okay and lastly we just need a clear button let's put this at the bottom so clear clear let's set the text equal to the word clear and the command will be our clear function and i think i'm going to pack this at the end but let's change frame to window okay let's check out all these buttons okay not too bad i think i'm going to change the width on our clear button so it's a little bit wider let's change the width to 12. that's a little bit better okay let's fill in some of these functions let's start with button press we're going to state global equation text then our equation text is equal to equation text plus we're converting whatever number or symbol that we receive to a string and our equation label which is a string var will be set to our equation text and let's test this so we can type in any combination of numbers or symbols okay let's work on our equals function next so let's say global equation text total equals eval now eval will parse the expression that we pass in equation text and our equation label will be set to whatever our total is and if we want to reuse our total let's set our equation text equal to total two plus two equals four minus three equals one times five equals five divided by two equals two point five now what if we divide by zero well we'll run into that ugly zero division error so let's write our code within a try and accept block so i'm going to indent some of this and let's write try all of this code and we will catch a zero division error exception so accept zero division error and i will set our equation label set let's say arithmetic error text equals a set of quotes okay so we should be able to catch this exception now five divided by zero equals arithmetic error now what if we have a syntax here like we type in just a bunch of symbols and hit equals we'll probably want to catch the syntax error as well so let's write an additional accept block before zero division error or after i guess it doesn't matter accept syntax error let's change arithmetic to syntax and we can keep equation text the same so now our program won't crash if we type in a bunch of symbols syntax error now let's work on the clear button so that is within the clear function so we will set global equation text equation label dot set to a set of quotes to effectively clear it and our equation text equal to a set of quotes as well and that should be it for this program let's run this one last time let's say three point one four times two point one equals six point five nine four divided by 2.1 equals 3.14 minus 1. i'm just making up numbers here plus 10 equals 12.14 and let's clear this and start again one plus two plus three plus 4 equals 10. i think that's good enough all right everybody so that's how to create a basic calculator in python i will post all of my code in the comments section down below if you would like a copy for yourself but yeah that's how to create a basic calculator using python hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
