With timestamps:

00:00 - hey what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in this video i'm going to explain
00:05 - to polymorphism in c
00:06 - sharp so sit back relax and enjoy the
00:09 - show
00:11 - all right what's going on people
00:13 - polymorphism
00:14 - polymorphism is a greek word that means
00:17 - to have many forms
00:19 - with programming objects can be
00:20 - identified by more than one type
00:23 - they can have many forms for example
00:25 - let's say that we have a dog
00:27 - a dog could be considered a canine an
00:30 - animal
00:30 - and an organism so a dog has more than
00:33 - just
00:33 - one form it has more than one data type
00:36 - here's the situation we're going to have
00:38 - a race
00:38 - we'll enter in a car object bicycle
00:41 - object and
00:41 - boat object so i have four classes
00:44 - vehicle is the base class
00:46 - otherwise known as the parent class and
00:48 - car bicycle and boat
00:50 - all inherit from the vehicle class so
00:52 - with my race i need to create a car
00:54 - object
00:54 - bicycle object and boat object so let's
00:57 - do that
00:58 - car car equals new car
01:02 - bicycle bicycle equals
01:05 - new bicycle
01:09 - and boat boat equals new boat
01:12 - i would like to place all of these
01:14 - objects within an array for my race
01:16 - but what's the data type of the array
01:18 - going to be so let's try and make an
01:20 - array of cars
01:21 - and add our car bicycle and boat and
01:24 - let's just see what happens
01:25 - i will name this array just vehicles
01:29 - equals and then within curly braces add
01:32 - whatever objects you would like i would
01:33 - like to enter my car into the race
01:36 - my bicycle and my boat
01:39 - okay but we're running into some errors
01:40 - here cannot implicitly convert
01:43 - bicycle to car so i stated that the
01:46 - data type of this array is going to be
01:48 - cars i can only enter
01:50 - car objects so i have no issue there but
01:53 - i cannot
01:53 - enter in my bicycle and boat objects
01:56 - into this array
01:57 - but one way in which we can solve this
01:59 - is by using polymorphism
02:01 - so we can find what they all have in
02:03 - common they all
02:04 - identify as vehicles because they all
02:07 - inherit
02:08 - from the vehicle class these objects
02:10 - have more than one form
02:11 - they can be identified by more than one
02:13 - type so instead of my array being an
02:15 - array of cars
02:16 - i'm going to change this to vehicle
02:19 - because well
02:20 - these three objects identify as well a
02:23 - car
02:23 - a bicycle and a boat respectively but
02:25 - also vehicles because they inherit from
02:28 - the vehicle class
02:29 - so you can see that this is valid if you
02:31 - need to create an array of
02:32 - different types of objects you have to
02:35 - find what they have in common
02:36 - and then you can just use that as a data
02:38 - type they are all also considered
02:40 - vehicles
02:41 - let's move on to part two what i would
02:43 - like to do is have
02:44 - all of these vehicles use a go method so
02:46 - they will all begin the race at the same
02:48 - time
02:49 - so let's create a go method within each
02:51 - of these classes
02:53 - public void go
02:57 - and we'll just display the car
03:00 - is moving place that within the car
03:02 - class
03:03 - let's make a go method for bicycles
03:06 - change car
03:07 - to bicycle
03:10 - and then the boat is moving
03:13 - okay now to iterate over this array of
03:16 - vehicles
03:16 - we can use a for each loop for each
03:20 - now what's the data type of our vehicle
03:22 - array well
03:23 - it's vehicles vehicle vehicle
03:27 - in vehicles and now i would like
03:30 - each vehicle to use its go method
03:33 - vehicle.go so each vehicle will use
03:37 - its go method but there's one more thing
03:39 - that we need to do
03:40 - we need a go method within our vehicle
03:43 - class
03:43 - so all of these methods within our car
03:46 - bicycle
03:47 - and boat classes all are going to be
03:49 - overriding
03:50 - a go map that found within the vehicle
03:52 - class so let's create a
03:54 - virtual method public
03:57 - virtual void
04:00 - go and we don't necessarily need to
04:05 - define anything within the go method
04:07 - because we're going to be overriding
04:09 - this method okay
04:11 - then we need to use this override
04:13 - modifier
04:17 - all right now when we iterate over this
04:20 - array of vehicles
04:21 - each vehicle will use its go method it's
04:24 - as if
04:25 - when we would like to begin our race all
04:27 - of the vehicles within our array will
04:29 - use
04:29 - their go methods at the same time the
04:31 - car is moving
04:32 - the bicycle is moving the boat is moving
04:35 - so yeah that's polymorphism it's a greek
04:37 - word that means to have many forms
04:40 - objects can be identified by more than
04:42 - one type
04:43 - and in this example we created an array
04:45 - of vehicles
04:46 - our car identifies as a car but it also
04:49 - identifies as a vehicle
04:51 - and objects do identify as objects too
04:53 - so cars identify as objects
04:56 - and the same thing can apply with
04:57 - bicycle and boats in our example
05:00 - so yeah that's polymorphism if you found
05:02 - this video helpful be sure to smash that
05:04 - like button
05:05 - leave a random comment down below and
05:07 - subscribe if you'd like to become a
05:08 - fellow bro

Cleaned transcript:

hey what's going on everybody it's you bro hope you're doing well and in this video i'm going to explain to polymorphism in c sharp so sit back relax and enjoy the show all right what's going on people polymorphism polymorphism is a greek word that means to have many forms with programming objects can be identified by more than one type they can have many forms for example let's say that we have a dog a dog could be considered a canine an animal and an organism so a dog has more than just one form it has more than one data type here's the situation we're going to have a race we'll enter in a car object bicycle object and boat object so i have four classes vehicle is the base class otherwise known as the parent class and car bicycle and boat all inherit from the vehicle class so with my race i need to create a car object bicycle object and boat object so let's do that car car equals new car bicycle bicycle equals new bicycle and boat boat equals new boat i would like to place all of these objects within an array for my race but what's the data type of the array going to be so let's try and make an array of cars and add our car bicycle and boat and let's just see what happens i will name this array just vehicles equals and then within curly braces add whatever objects you would like i would like to enter my car into the race my bicycle and my boat okay but we're running into some errors here cannot implicitly convert bicycle to car so i stated that the data type of this array is going to be cars i can only enter car objects so i have no issue there but i cannot enter in my bicycle and boat objects into this array but one way in which we can solve this is by using polymorphism so we can find what they all have in common they all identify as vehicles because they all inherit from the vehicle class these objects have more than one form they can be identified by more than one type so instead of my array being an array of cars i'm going to change this to vehicle because well these three objects identify as well a car a bicycle and a boat respectively but also vehicles because they inherit from the vehicle class so you can see that this is valid if you need to create an array of different types of objects you have to find what they have in common and then you can just use that as a data type they are all also considered vehicles let's move on to part two what i would like to do is have all of these vehicles use a go method so they will all begin the race at the same time so let's create a go method within each of these classes public void go and we'll just display the car is moving place that within the car class let's make a go method for bicycles change car to bicycle and then the boat is moving okay now to iterate over this array of vehicles we can use a for each loop for each now what's the data type of our vehicle array well it's vehicles vehicle vehicle in vehicles and now i would like each vehicle to use its go method vehicle.go so each vehicle will use its go method but there's one more thing that we need to do we need a go method within our vehicle class so all of these methods within our car bicycle and boat classes all are going to be overriding a go map that found within the vehicle class so let's create a virtual method public virtual void go and we don't necessarily need to define anything within the go method because we're going to be overriding this method okay then we need to use this override modifier all right now when we iterate over this array of vehicles each vehicle will use its go method it's as if when we would like to begin our race all of the vehicles within our array will use their go methods at the same time the car is moving the bicycle is moving the boat is moving so yeah that's polymorphism it's a greek word that means to have many forms objects can be identified by more than one type and in this example we created an array of vehicles our car identifies as a car but it also identifies as a vehicle and objects do identify as objects too so cars identify as objects and the same thing can apply with bicycle and boats in our example so yeah that's polymorphism if you found this video helpful be sure to smash that like button leave a random comment down below and subscribe if you'd like to become a fellow bro
