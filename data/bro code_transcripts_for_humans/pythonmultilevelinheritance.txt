With timestamps:

00:00 - yo what's going on everybody it's you
00:01 - bro hope you're doing well
00:03 - and in this video i'm going to explain
00:04 - how multi-level inheritance works in
00:07 - python so
00:08 - sit back relax and enjoy the show
00:12 - if you wouldn't mind please like comment
00:15 - and subscribe
00:16 - one like equals one prayer for the
00:18 - youtube algorithm
00:20 - all right welcome back everybody let's
00:22 - talk about multi-level inheritance this
00:24 - is a concept where
00:26 - a derived class also known as a child
00:28 - class
00:29 - inherits from another derived class
00:31 - here's an example let's say we have a
00:33 - hierarchy of classes
00:35 - there will be three levels to this we'll
00:37 - create a family tree of
00:38 - living organisms so at the very top
00:41 - we're going to have a class called
00:43 - organism any class that inherits from
00:45 - the organism parent class
00:47 - will receive one attribute one variable
00:50 - named alive
00:51 - and this will be set to true so if you
00:53 - are an organism you begin by being alive
00:56 - now let's say we have a child class that
00:58 - will inherit from the organism
00:59 - parent class let's say animal
01:02 - class animal inherits from organism
01:06 - so any animal that we create will have
01:08 - this alive attribute set the true
01:11 - and all animals eat so let's define a
01:14 - function that does that
01:15 - at least i believe all animals eat let's
01:17 - pretend that they do
01:18 - so this animal is
01:22 - eating and now why stop there let's
01:24 - create a class
01:25 - for a specific type of animal i like
01:27 - dogs so let's create a dog class
01:29 - class dog inherits from the animal class
01:34 - and all dogs should be able to bark so
01:36 - let's create a function to do that
01:40 - and we'll print this dog
01:44 - is barking okay so what we just did here
01:47 - is
01:48 - multi-level inheritance we had a derived
01:51 - child class
01:52 - inherit from another child class so it's
01:55 - kind of like
01:56 - this dog class is the child animal class
01:58 - is the parent
01:59 - and then the parent of the parent class
02:01 - would be like
02:02 - a grandparent right and then if you
02:04 - added another layer on top of that to
02:05 - this hierarchy
02:06 - well then the parent of the grandparent
02:08 - would be like a great grandparent
02:10 - that's how i think of it at least now
02:11 - let's create a dog object just to verify
02:13 - that everything's working so let's call
02:15 - our dog
02:16 - dog and our dog object should have
02:19 - access to an attribute named alive and
02:22 - our dog object receives that attribute
02:24 - from the organism class
02:26 - and this will print true if i were to
02:28 - print whatever this attribute contains
02:30 - and our dog should be able to eat
02:32 - because it receives this method from the
02:34 - animal parent class
02:37 - and lastly our dog should be able to
02:39 - bark and that method is defined within
02:40 - its own class
02:44 - so that's how multi-level inheritance
02:46 - works it's a concept where a child
02:48 - class will inherit from another child
02:51 - class i like to think of it like a
02:53 - family tree
02:54 - where a child class will have a parent
02:56 - and the parent of that parent would be
02:58 - like
02:59 - a grandparent basically so if you would
03:01 - like a copy of this code
03:03 - i will post all of this to the comment
03:04 - section down below but yeah that is how
03:07 - multi-level inheritance works in python

Cleaned transcript:

yo what's going on everybody it's you bro hope you're doing well and in this video i'm going to explain how multilevel inheritance works in python so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm all right welcome back everybody let's talk about multilevel inheritance this is a concept where a derived class also known as a child class inherits from another derived class here's an example let's say we have a hierarchy of classes there will be three levels to this we'll create a family tree of living organisms so at the very top we're going to have a class called organism any class that inherits from the organism parent class will receive one attribute one variable named alive and this will be set to true so if you are an organism you begin by being alive now let's say we have a child class that will inherit from the organism parent class let's say animal class animal inherits from organism so any animal that we create will have this alive attribute set the true and all animals eat so let's define a function that does that at least i believe all animals eat let's pretend that they do so this animal is eating and now why stop there let's create a class for a specific type of animal i like dogs so let's create a dog class class dog inherits from the animal class and all dogs should be able to bark so let's create a function to do that and we'll print this dog is barking okay so what we just did here is multilevel inheritance we had a derived child class inherit from another child class so it's kind of like this dog class is the child animal class is the parent and then the parent of the parent class would be like a grandparent right and then if you added another layer on top of that to this hierarchy well then the parent of the grandparent would be like a great grandparent that's how i think of it at least now let's create a dog object just to verify that everything's working so let's call our dog dog and our dog object should have access to an attribute named alive and our dog object receives that attribute from the organism class and this will print true if i were to print whatever this attribute contains and our dog should be able to eat because it receives this method from the animal parent class and lastly our dog should be able to bark and that method is defined within its own class so that's how multilevel inheritance works it's a concept where a child class will inherit from another child class i like to think of it like a family tree where a child class will have a parent and the parent of that parent would be like a grandparent basically so if you would like a copy of this code i will post all of this to the comment section down below but yeah that is how multilevel inheritance works in python
