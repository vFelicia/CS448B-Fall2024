With timestamps:

00:00 - all right everybody it's about time I
00:01 - discuss some basic data types in mongodb
00:04 - we will Begin by inserting a new
00:06 - document into our students collection
00:10 - db.students.insert1 we're inserting a
00:13 - document add a set of curly braces the
00:16 - first data type I'll discuss is a string
00:18 - suppose we have a field of name a string
00:21 - is a series of text within quotes these
00:23 - can be either double quotes or single
00:25 - quotes but typically I like to put them
00:27 - within double quotes a string is a
00:29 - series of text like a name
00:31 - Like Larry strings can contain spaces we
00:35 - can enter in a first name space then a
00:37 - last name Larry Lobster
00:39 - they can also contain numbers
00:42 - larry123 however in a string we treat
00:44 - the numbers differently we read the
00:46 - Morris characters rather than actual
00:48 - numbers
00:50 - so let's stick with name Larry that's a
00:53 - string it's a series of characters then
00:55 - we have integers and integer is a whole
00:58 - number
00:59 - let's create a field for age Larry will
01:02 - be 32. whole integers don't contain
01:05 - decimal portions it wouldn't make sense
01:07 - to enter in 32.5 we don't really keep
01:10 - track of people's half birthdays and
01:12 - stuff so age would be a whole number
01:14 - those are integers whole numbers
01:17 - then we have doubles a double is a
01:20 - number that contains a decimal portion
01:22 - maybe a grade point average
01:25 - grade point averages typically contain
01:27 - decimals Larry has a 2.8 GPA
01:31 - it's a double because there's a decimal
01:33 - portion
01:34 - integers are whole numbers doubles are
01:37 - numbers that contain a decimal
01:39 - then we have booleans booleans are
01:42 - either true or they're false it's kind
01:45 - of like a light switch it's only on or
01:47 - off there's only two states
01:49 - let's create a field for full time
01:52 - is the student full time this can be
01:54 - either true or false
01:57 - Larry is too busy working out all the
01:59 - time he is a part-time student not a
02:02 - full-time student we'll set that field
02:04 - to be false date objects are pretty
02:06 - popular in mongodb suppose we have a
02:10 - registration date
02:12 - register date
02:13 - to create a date object you can use the
02:15 - new keyword followed by a call to the
02:18 - date Constructor if you don't pass any
02:20 - arguments to the date Constructor you'll
02:22 - use the current time in the UTC time
02:25 - zone
02:25 - otherwise you can pass a date in time
02:27 - like 2023 January 2nd you could add a
02:32 - time too
02:34 - but we'll just stick with the current
02:36 - date and time that's assigned to us
02:38 - those are date objects
02:40 - the next data type is null no means no
02:43 - value I'll create a field for a
02:45 - graduation date
02:47 - and I will set that to be null
02:50 - Larry is a current student but we don't
02:52 - know when he's going to graduate all
02:54 - we're really doing is creating a
02:55 - placeholder we don't have a date yet so
02:58 - we can set that to be null that's to be
03:00 - filled in later
03:01 - so null means no value then we have
03:05 - arrays much like in modern programming
03:07 - languages is kind of like a variable
03:09 - that has more than one value but in
03:12 - mongodb we have a field that can have
03:14 - more than one value let's create a field
03:17 - of courses what courses is Larry
03:20 - enrolled in place all values within a
03:23 - set of straight brackets
03:25 - let's insert multiple values what
03:28 - courses is Larry in maybe he's in
03:30 - biology
03:32 - these values are all comma separated
03:35 - chemistry
03:38 - then calculus
03:41 - so that's an array they're all enclosed
03:44 - within a set of square brackets they
03:46 - allow one field to contain multiple
03:48 - values then we have nested documents
03:51 - this would be good for an address to
03:54 - create a nested document you use a set
03:55 - of curly braces within the nested
03:58 - document we can list some field value
04:00 - pairs how about a street
04:04 - let's come up with a street name one two
04:06 - three fake street is good
04:10 - than a city
04:15 - big Keeney bottom
04:18 - and a zip code
04:21 - one two three four five
04:23 - it is possible to have documents within
04:25 - documents which is what we did with the
04:27 - address let's enter everything to see if
04:29 - it works yeah that was acknowledged
04:33 - let's head to Compass
04:35 - refresh and here is Larry name Larry h32
04:39 - GPA 2.8 full time is set to false he's a
04:43 - part-time student here is Larry's
04:45 - registration date and time we're using
04:47 - the UTC time zone
04:49 - his graduation date is set to null all
04:52 - of his courses that he's in is stored
04:54 - within an array and his address is
04:57 - stored as a nested document alright
04:59 - everybody and those are a few basic data
05:01 - types you should know in mongodb

Cleaned transcript:

all right everybody it's about time I discuss some basic data types in mongodb we will Begin by inserting a new document into our students collection db.students.insert1 we're inserting a document add a set of curly braces the first data type I'll discuss is a string suppose we have a field of name a string is a series of text within quotes these can be either double quotes or single quotes but typically I like to put them within double quotes a string is a series of text like a name Like Larry strings can contain spaces we can enter in a first name space then a last name Larry Lobster they can also contain numbers larry123 however in a string we treat the numbers differently we read the Morris characters rather than actual numbers so let's stick with name Larry that's a string it's a series of characters then we have integers and integer is a whole number let's create a field for age Larry will be 32. whole integers don't contain decimal portions it wouldn't make sense to enter in 32.5 we don't really keep track of people's half birthdays and stuff so age would be a whole number those are integers whole numbers then we have doubles a double is a number that contains a decimal portion maybe a grade point average grade point averages typically contain decimals Larry has a 2.8 GPA it's a double because there's a decimal portion integers are whole numbers doubles are numbers that contain a decimal then we have booleans booleans are either true or they're false it's kind of like a light switch it's only on or off there's only two states let's create a field for full time is the student full time this can be either true or false Larry is too busy working out all the time he is a parttime student not a fulltime student we'll set that field to be false date objects are pretty popular in mongodb suppose we have a registration date register date to create a date object you can use the new keyword followed by a call to the date Constructor if you don't pass any arguments to the date Constructor you'll use the current time in the UTC time zone otherwise you can pass a date in time like 2023 January 2nd you could add a time too but we'll just stick with the current date and time that's assigned to us those are date objects the next data type is null no means no value I'll create a field for a graduation date and I will set that to be null Larry is a current student but we don't know when he's going to graduate all we're really doing is creating a placeholder we don't have a date yet so we can set that to be null that's to be filled in later so null means no value then we have arrays much like in modern programming languages is kind of like a variable that has more than one value but in mongodb we have a field that can have more than one value let's create a field of courses what courses is Larry enrolled in place all values within a set of straight brackets let's insert multiple values what courses is Larry in maybe he's in biology these values are all comma separated chemistry then calculus so that's an array they're all enclosed within a set of square brackets they allow one field to contain multiple values then we have nested documents this would be good for an address to create a nested document you use a set of curly braces within the nested document we can list some field value pairs how about a street let's come up with a street name one two three fake street is good than a city big Keeney bottom and a zip code one two three four five it is possible to have documents within documents which is what we did with the address let's enter everything to see if it works yeah that was acknowledged let's head to Compass refresh and here is Larry name Larry h32 GPA 2.8 full time is set to false he's a parttime student here is Larry's registration date and time we're using the UTC time zone his graduation date is set to null all of his courses that he's in is stored within an array and his address is stored as a nested document alright everybody and those are a few basic data types you should know in mongodb
