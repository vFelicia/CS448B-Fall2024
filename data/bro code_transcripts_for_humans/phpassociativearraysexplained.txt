With timestamps:

00:00 - hey welcome back everybody today I'm
00:02 - going to explain associative arrays it's
00:04 - an array where each element is a key
00:07 - value pair for example we can make an
00:10 - array where each element is a country
00:13 - that's the key and the value is a
00:16 - capital A few other examples could be an
00:19 - ID and a username
00:22 - or an item and a price these would be
00:25 - examples of key value pairs here's an
00:28 - example let's start with a basic array I
00:31 - will create an array of capitals
00:33 - capitals equals we will use the array
00:36 - function
00:38 - we'll begin with keys each key needs to
00:41 - be unique I'll think of four examples we
00:43 - have the USA
00:46 - Japan
00:49 - South Korea
00:53 - then maybe India
00:56 - right now capitals is an array it's not
00:59 - an associative array to change this
01:01 - array into an associative array after
01:04 - each key add an arrow
01:12 - for readability I'm going to place each
01:15 - element on a new line
01:18 - it's not necessary but it's a lot easier
01:20 - for me to read following the arrow we
01:23 - will give each key a value the value in
01:26 - this example will be each country's
01:28 - respective capital
01:30 - the capital of the USA is Washington DC
01:36 - Japan that's Kyoto
01:40 - South Korea
01:42 - that is Seoul
01:45 - India
01:47 - new
01:49 - Delhi
01:51 - we now have an associative array it's
01:53 - made of key value pairs
01:56 - if you need one of the values at a given
01:58 - key
01:59 - we would then access our associative
02:01 - array capitals at index then place your
02:06 - key within the set of square brackets
02:08 - let's find the capital of the USA
02:12 - then let's Echo whatever the result is
02:16 - and the result is Washington DC if I
02:19 - change the key to Japan
02:21 - we will be given the value at this key
02:24 - of Japan
02:27 - to print all of the key value pairs of
02:29 - our associative array we'll use a for
02:31 - each Loop
02:35 - within the parentheses we're going to
02:37 - write something a little different first
02:39 - we need our associative array
02:41 - capitals
02:43 - as
02:45 - key
02:47 - Arrow
02:48 - value
02:50 - this for each Loop will Loop through all
02:53 - of the key value pairs
02:55 - let's print them
02:57 - Echo
02:59 - I'll add a placeholder let's print each
03:01 - key
03:03 - and each value
03:06 - then I'll add a break line
03:09 - here are the keys
03:13 - and here are the values
03:15 - I'll add an equal sign before key and
03:17 - value just so it's more readable
03:20 - that's how to use a for each Loop to
03:22 - Loop through all the key value pairs in
03:24 - this associative array
03:26 - to change one of the values we need to
03:28 - access this array by a key
03:30 - I'll change the capital of the USA to be
03:34 - maybe Las Vegas let's take our
03:36 - associative array
03:39 - then I would like to access using square
03:41 - brackets USA
03:44 - set this equal to some new value the new
03:48 - value will be Las Vegas when I run this
03:52 - program
03:54 - the value at this key is now Las Vegas
03:59 - that's how to update a key value pair
04:01 - First Look up the key then you can set
04:03 - the value equal to some new value
04:06 - to add a new key value pair we will
04:09 - access our associative array
04:12 - add a set of square brackets
04:14 - then place a new key within a set of
04:16 - quotes within the square brackets let's
04:19 - add China
04:20 - will equal
04:23 - Beijing
04:27 - there's our new key value pair the key
04:29 - is China
04:30 - the value is Beijing
04:33 - the pop function will remove the last
04:35 - pair in this array
04:37 - array underscore pop
04:39 - we will pop our associative array
04:42 - capitals
04:44 - our pairing of India and New Delhi is
04:47 - gone
04:48 - that's how to remove the last pair in
04:50 - this array
04:51 - the shift function will remove the first
04:54 - element
04:55 - array
04:56 - shift
04:58 - pass in your array
05:01 - the USA and Washington DC pair is now
05:03 - gone it's shifted out of the array
05:07 - if you ever need all of the keys in this
05:10 - associative array there is an array Keys
05:13 - function
05:14 - array
05:16 - keys
05:17 - pass in your array
05:20 - of capitals
05:22 - this will return a new array
05:25 - I will assign that to a new array let's
05:28 - name it keys
05:30 - then I'm going to display all of the
05:32 - keys within our array using the for each
05:34 - Loop
05:35 - so let's change this a little bit
05:38 - we have an array of keys and I would
05:41 - like to display
05:42 - as key
05:45 - for every key in Keys
05:48 - let's Echo each key then I'll add a line
05:51 - break
05:53 - here are all of the keys within our
05:55 - associative array
05:57 - if you need the values instead there's a
05:59 - values function
06:03 - array
06:05 - values I'll create a new array named
06:08 - values
06:10 - for every value in values
06:15 - print each value
06:19 - and here are the Capitals all of the
06:21 - values within our associative array
06:24 - you can flip the keys and the values by
06:27 - using the flip function
06:29 - array
06:31 - flip
06:33 - pass in your array within the set of
06:35 - parentheses
06:37 - this function will return a new
06:40 - associative array
06:41 - we can either create a new associative
06:43 - array
06:44 - or reassign it
06:47 - I'll reassign our associative array
06:49 - then we need to change our for each loop
06:52 - again
06:53 - so we have capitals as
06:56 - key Arrow
06:58 - value
07:00 - then we will display
07:02 - every key and every value
07:05 - key
07:06 - equals
07:08 - value
07:10 - our values are now switched with our
07:12 - keys the capitals are now the keys the
07:15 - countries are the values that is the
07:18 - array flip function
07:21 - if you need to reverse the order of your
07:24 - pairs you can use the reverse function
07:27 - array underscore reverse
07:30 - pass in your array
07:34 - this will return a new array I will
07:36 - reassign it
07:38 - the order in which we originally placed
07:41 - these key value pairs is now reversed
07:43 - India is now at the beginning the USA is
07:46 - now at the end then if you need the
07:49 - amount of key value pairs you can use
07:51 - the count function Echo count
07:55 - capitals
07:56 - let me get rid of this for each Loop to
07:58 - demonstrate we have four pairs within
08:01 - our associative array one two three four
08:05 - all right everybody so it's time for
08:07 - some practice I will delete everything
08:10 - but our associative array
08:13 - we'll create an HTML document so
08:15 - preceding our PHP script using vs code I
08:18 - will type an exclamation point then hit
08:21 - tab to create some sample HTML we'll
08:24 - create a text box a user is going to
08:26 - type in a country hit submit then we
08:29 - will return the value for that
08:31 - Associated country that capital
08:33 - will need a form
08:36 - be sure to close it right away
08:40 - the action will equal
08:43 - index.php
08:46 - the method will be post
08:50 - let's create a label
08:57 - enter a country
09:02 - then we'll need a text box
09:04 - input type equals text
09:08 - the name will be country
09:14 - then a button input type
09:18 - equals submit
09:22 - here we are
09:25 - within our PHP script we have our
09:27 - associative array
09:29 - we'll need to access whatever's within
09:31 - this text box
09:33 - I'll store that within a new variable
09:35 - named Capital singular Capital equals
09:39 - dollar sign underscore
09:41 - post
09:43 - the value we are trying to access is the
09:47 - name country
09:49 - let's see what we have so far just for
09:52 - testing I'm going to Echo our capital
09:56 - if I type in USA then click submit this
09:59 - should return USA
10:01 - to get the value associated with this
10:04 - key USA
10:06 - I will take our associative array
10:08 - capitals
10:10 - at index
10:12 - of a country so in this example it's USA
10:15 - right I can copy this post variable
10:17 - delete this line within the set of
10:20 - quotes I will place the post variable
10:24 - then get rid of the quotes
10:28 - I will reassign Capital to equal
10:31 - whatever value we receive
10:34 - so I will type in this time
10:36 - Japan
10:38 - then this returns
10:40 - Kyoto
10:42 - we could even put this variable within a
10:44 - sentence
10:46 - the capital is
10:49 - our Capital variable
10:54 - if we type India then click submit the
10:57 - capital is New Delhi all right everybody
10:59 - so that's an associative array it's an
11:01 - array made of key value pairs you could
11:04 - create an associative array of countries
11:06 - and capitals ID numbers and usernames or
11:10 - items and a price those are a few
11:13 - examples and well everybody those are
11:15 - associative arrays in PHP

Cleaned transcript:

hey welcome back everybody today I'm going to explain associative arrays it's an array where each element is a key value pair for example we can make an array where each element is a country that's the key and the value is a capital A few other examples could be an ID and a username or an item and a price these would be examples of key value pairs here's an example let's start with a basic array I will create an array of capitals capitals equals we will use the array function we'll begin with keys each key needs to be unique I'll think of four examples we have the USA Japan South Korea then maybe India right now capitals is an array it's not an associative array to change this array into an associative array after each key add an arrow for readability I'm going to place each element on a new line it's not necessary but it's a lot easier for me to read following the arrow we will give each key a value the value in this example will be each country's respective capital the capital of the USA is Washington DC Japan that's Kyoto South Korea that is Seoul India new Delhi we now have an associative array it's made of key value pairs if you need one of the values at a given key we would then access our associative array capitals at index then place your key within the set of square brackets let's find the capital of the USA then let's Echo whatever the result is and the result is Washington DC if I change the key to Japan we will be given the value at this key of Japan to print all of the key value pairs of our associative array we'll use a for each Loop within the parentheses we're going to write something a little different first we need our associative array capitals as key Arrow value this for each Loop will Loop through all of the key value pairs let's print them Echo I'll add a placeholder let's print each key and each value then I'll add a break line here are the keys and here are the values I'll add an equal sign before key and value just so it's more readable that's how to use a for each Loop to Loop through all the key value pairs in this associative array to change one of the values we need to access this array by a key I'll change the capital of the USA to be maybe Las Vegas let's take our associative array then I would like to access using square brackets USA set this equal to some new value the new value will be Las Vegas when I run this program the value at this key is now Las Vegas that's how to update a key value pair First Look up the key then you can set the value equal to some new value to add a new key value pair we will access our associative array add a set of square brackets then place a new key within a set of quotes within the square brackets let's add China will equal Beijing there's our new key value pair the key is China the value is Beijing the pop function will remove the last pair in this array array underscore pop we will pop our associative array capitals our pairing of India and New Delhi is gone that's how to remove the last pair in this array the shift function will remove the first element array shift pass in your array the USA and Washington DC pair is now gone it's shifted out of the array if you ever need all of the keys in this associative array there is an array Keys function array keys pass in your array of capitals this will return a new array I will assign that to a new array let's name it keys then I'm going to display all of the keys within our array using the for each Loop so let's change this a little bit we have an array of keys and I would like to display as key for every key in Keys let's Echo each key then I'll add a line break here are all of the keys within our associative array if you need the values instead there's a values function array values I'll create a new array named values for every value in values print each value and here are the Capitals all of the values within our associative array you can flip the keys and the values by using the flip function array flip pass in your array within the set of parentheses this function will return a new associative array we can either create a new associative array or reassign it I'll reassign our associative array then we need to change our for each loop again so we have capitals as key Arrow value then we will display every key and every value key equals value our values are now switched with our keys the capitals are now the keys the countries are the values that is the array flip function if you need to reverse the order of your pairs you can use the reverse function array underscore reverse pass in your array this will return a new array I will reassign it the order in which we originally placed these key value pairs is now reversed India is now at the beginning the USA is now at the end then if you need the amount of key value pairs you can use the count function Echo count capitals let me get rid of this for each Loop to demonstrate we have four pairs within our associative array one two three four all right everybody so it's time for some practice I will delete everything but our associative array we'll create an HTML document so preceding our PHP script using vs code I will type an exclamation point then hit tab to create some sample HTML we'll create a text box a user is going to type in a country hit submit then we will return the value for that Associated country that capital will need a form be sure to close it right away the action will equal index.php the method will be post let's create a label enter a country then we'll need a text box input type equals text the name will be country then a button input type equals submit here we are within our PHP script we have our associative array we'll need to access whatever's within this text box I'll store that within a new variable named Capital singular Capital equals dollar sign underscore post the value we are trying to access is the name country let's see what we have so far just for testing I'm going to Echo our capital if I type in USA then click submit this should return USA to get the value associated with this key USA I will take our associative array capitals at index of a country so in this example it's USA right I can copy this post variable delete this line within the set of quotes I will place the post variable then get rid of the quotes I will reassign Capital to equal whatever value we receive so I will type in this time Japan then this returns Kyoto we could even put this variable within a sentence the capital is our Capital variable if we type India then click submit the capital is New Delhi all right everybody so that's an associative array it's an array made of key value pairs you could create an associative array of countries and capitals ID numbers and usernames or items and a price those are a few examples and well everybody those are associative arrays in PHP
