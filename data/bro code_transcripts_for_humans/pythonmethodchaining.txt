With timestamps:

00:00 - hey what's going on everybody it's you
00:02 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys all
00:05 - about method chaining in python so sit
00:07 - back
00:08 - relax and enjoy the show
00:12 - if you find this video helpful please
00:14 - remember to like
00:15 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - all right everybody let's talk about
00:21 - method training method chaining is used
00:23 - to call
00:24 - multiple methods sequentially and each
00:27 - call performs an action on the same
00:28 - object
00:29 - and return self here's an example of how
00:31 - method chaining would be useful
00:33 - let's say we have a class named car car
00:36 - has
00:36 - four methods turn on drive break and
00:39 - turn off
00:40 - they will all just print a simple
00:42 - message beginning with turn on
00:44 - turn on will print you start the engine
00:46 - drive will print you drive the car
00:48 - brake will print you step on the brakes
00:50 - and turn off will print
00:51 - you turn off the engine let's say we
00:53 - have a car object
00:54 - car equals car and i would like my car
00:57 - object
00:58 - to use its turn on method immediately
01:01 - followed by
01:01 - the drive method with how we've been
01:03 - coding things previously we may write
01:05 - something such as the name of the object
01:07 - in this case car dot and then the method
01:09 - to use i would like my card to use the
01:12 - turn on method followed by car dot
01:15 - drive so currently this will take two
01:17 - lines of code
01:18 - but this will print you start the engine
01:21 - and you drive the car
01:22 - now with method training we can call
01:25 - multiple methods
01:26 - sequentially now the format on this is
01:28 - going to be a little bit different
01:29 - and if we were to write the same code
01:31 - using method chaining it might look a
01:33 - little something like this
01:34 - after the first method call we would add
01:37 - dot
01:37 - and then an additional method that we
01:39 - would like to call so for example
01:41 - after the turn on method we'll
01:43 - immediately call
01:44 - the drive method but there's one more
01:46 - thing that we need to add when we're
01:47 - using python to do method training
01:49 - so normally this by itself will not work
01:52 - when we call a method in python if there
01:54 - is nothing that is returned python will
01:56 - return
01:57 - none so as you can see here attribute
01:59 - error none type
02:00 - object has no attribute of drive so we
02:03 - need to return itself
02:05 - under each method that we're using
02:06 - method training with so let's add return
02:09 - self to each of these methods so let's
02:11 - do that for
02:12 - drive break and the turn off method
02:16 - and this should work now you start the
02:19 - engine
02:20 - you drive the car so think of it like
02:22 - this after we finish
02:23 - calling this method python is going to
02:26 - return self
02:27 - so it's going to return car so then
02:29 - we'll immediately use
02:30 - car.drive now here's another example
02:33 - let's say i would like to
02:34 - call the break method followed by the
02:36 - turn off method
02:38 - so that would be car dot break
02:40 - parenthesis
02:41 - followed by dot turn
02:45 - off so this will print you step on the
02:48 - brakes
02:48 - you turn off the engine now here's an
02:50 - extreme example let's say we would like
02:52 - to call all four methods in order
02:54 - so that would be car dot
02:57 - turn on followed by dot drive
03:02 - dot break dot
03:05 - turn off so this will call all four
03:09 - methods in order starting with
03:11 - the leftmost method you start the engine
03:13 - you drive the car
03:15 - you step on the brakes you turn off the
03:16 - engine now if you have
03:18 - one long method chain like this it might
03:20 - become difficult to read after a while
03:22 - so what i would recommend
03:24 - if you're doing a lot of method chaining
03:26 - is that after each method call
03:28 - just hit enter to move each method call
03:30 - down to a new line
03:31 - so it'll look something like that and
03:33 - this backslash might be inserted this is
03:35 - a
03:36 - line continuation character so this is a
03:39 - little more readable but
03:40 - you know it still does the same thing
03:42 - basically all right everybody so that is
03:44 - method training
03:45 - it's used to call multiple methods
03:47 - sequentially
03:48 - and each call performs an action on the
03:50 - same object and returns self
03:52 - if you would like a copy of this code i
03:54 - will post all of this in the comments
03:55 - section down below
03:57 - but yeah that is how to do a method
03:59 - chaining in python

Cleaned transcript:

hey what's going on everybody it's you bro hope you're doing well and in this video i'm going to teach you guys all about method chaining in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right everybody let's talk about method training method chaining is used to call multiple methods sequentially and each call performs an action on the same object and return self here's an example of how method chaining would be useful let's say we have a class named car car has four methods turn on drive break and turn off they will all just print a simple message beginning with turn on turn on will print you start the engine drive will print you drive the car brake will print you step on the brakes and turn off will print you turn off the engine let's say we have a car object car equals car and i would like my car object to use its turn on method immediately followed by the drive method with how we've been coding things previously we may write something such as the name of the object in this case car dot and then the method to use i would like my card to use the turn on method followed by car dot drive so currently this will take two lines of code but this will print you start the engine and you drive the car now with method training we can call multiple methods sequentially now the format on this is going to be a little bit different and if we were to write the same code using method chaining it might look a little something like this after the first method call we would add dot and then an additional method that we would like to call so for example after the turn on method we'll immediately call the drive method but there's one more thing that we need to add when we're using python to do method training so normally this by itself will not work when we call a method in python if there is nothing that is returned python will return none so as you can see here attribute error none type object has no attribute of drive so we need to return itself under each method that we're using method training with so let's add return self to each of these methods so let's do that for drive break and the turn off method and this should work now you start the engine you drive the car so think of it like this after we finish calling this method python is going to return self so it's going to return car so then we'll immediately use car.drive now here's another example let's say i would like to call the break method followed by the turn off method so that would be car dot break parenthesis followed by dot turn off so this will print you step on the brakes you turn off the engine now here's an extreme example let's say we would like to call all four methods in order so that would be car dot turn on followed by dot drive dot break dot turn off so this will call all four methods in order starting with the leftmost method you start the engine you drive the car you step on the brakes you turn off the engine now if you have one long method chain like this it might become difficult to read after a while so what i would recommend if you're doing a lot of method chaining is that after each method call just hit enter to move each method call down to a new line so it'll look something like that and this backslash might be inserted this is a line continuation character so this is a little more readable but you know it still does the same thing basically all right everybody so that is method training it's used to call multiple methods sequentially and each call performs an action on the same object and returns self if you would like a copy of this code i will post all of this in the comments section down below but yeah that is how to do a method chaining in python
