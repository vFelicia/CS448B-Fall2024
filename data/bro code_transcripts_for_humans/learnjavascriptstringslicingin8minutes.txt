With timestamps:

00:00 - hey everybody so today I'm going to
00:01 - explain string slicing in JavaScript
00:04 - string slicing is the process of
00:06 - creating a substring from a portion of
00:09 - another string this won't alter the
00:11 - original string just to demonstrate
00:13 - let's create a constant for our full
00:16 - name go ahead and type in your full name
00:20 - or you can copy me I'm going to extract
00:23 - the first name from my full name and
00:25 - create a new string out of it so I'll
00:27 - declare this let first first name equals
00:32 - Now to create a substring we can follow
00:34 - this formula we take our string in this
00:37 - case our full name dot then use the
00:40 - built-in slice
00:42 - method
00:43 - slice then we can list a starting and
00:46 - ending index where would we like to
00:49 - begin so the first character has an
00:51 - index of zero we'll start at the
00:53 - beginning index0 comma where are we
00:57 - going to end 0 1 2
01:00 - this isn't necessarily going to work and
01:03 - let me demonstrate so let's
01:06 - console.log our first name so my first
01:10 - name is BR so the ending index is
01:13 - actually exclusive in my full name we're
01:15 - ending at o but we don't include it
01:17 - within our substring because the ending
01:20 - index is exclusive I'll increase the
01:22 - ending index to three that should
01:24 - include one more character which it does
01:27 - now let's get the last name let
01:30 - last name equals again following this
01:33 - formula take our original string use the
01:37 - built-in slice method State the
01:40 - beginning index 0 1 2 3 4 mine will be
01:44 - four yours may be different depending on
01:46 - what your name is and the ending index 4
01:51 - 5 6 7 and remember that the last index
01:54 - is exclusive so I'm going to increase
01:55 - that to be eight then we'll display our
01:58 - last name
02:00 - console.log last
02:02 - name and there's my last name so the
02:06 - reason that I set the beginning index to
02:08 - be four and not three is because we'll
02:10 - include that space within the result as
02:13 - you can see here if you're going to be
02:15 - creating a substring from some position
02:17 - all the way to the end you don't
02:19 - necessarily need an ending index I'm
02:21 - going to remove the ending index and
02:23 - this should work the
02:26 - same all right what if I need the first
02:28 - character in the string
02:30 - let first Char meaning character equals
02:36 - take our string we will use the slice
02:38 - method for the first character you can
02:40 - use 0 comma
02:43 - 1 then let's display our first
02:47 - character and in my example mine is B
02:50 - for the last character let last
02:56 - character full name do slice
03:00 - we can use a negative index even if
03:02 - you're using a negative index you'll
03:04 - begin at the end then by decreasing the
03:07 - number you'll work your way towards the
03:09 - beginning so the last character in my
03:11 - name is
03:13 - e -2 would be
03:17 - de three is OD four is c for code
03:22 - negative indices work as well with these
03:25 - specific numbers that I've listed
03:27 - they're only going to work if my name is
03:29 - exact this what if I were to change my
03:31 - first name to be instead of bro broseph
03:35 - like
03:36 - Joseph then let's display our first name
03:39 - then our last
03:43 - name first name bro last name f which is
03:48 - not correct to make this program more
03:51 - Dynamic we can combine string slicing
03:53 - with the index of method we'll search
03:56 - the string for the first instance of a
03:58 - space then depending on where that space
04:01 - is we'll take the first part of our full
04:03 - name and create a substring for the
04:05 - first name anything after the space will
04:07 - be our last name so let's turn these
04:10 - lines into comments we don't need them
04:13 - anymore let first name equals again take
04:18 - our full
04:20 - name do
04:23 - slice we'll begin at the beginning index
04:26 - zero now where do we end we're not going
04:28 - to count the number of character this
04:30 - time we're going to calculate it the
04:32 - ending index will be take our full
04:36 - name dot then use the index of
04:40 - method where's the first index of a
04:45 - space so that is the ending position
04:48 - wherever there's a space then we'll
04:51 - display our first
04:53 - name uh let me get rid of our last name
04:56 - there
04:58 - brosive
05:00 - now for the last
05:01 - name let last name
05:04 - equals let's copy this line of code
05:08 - paste
05:09 - it the beginning index will be full
05:12 - name. index of
05:15 - space you can list an ending index but
05:18 - we don't need to we would like to
05:19 - extract every character that comes after
05:21 - this position so we don't need an ending
05:24 - index all right let's see if this
05:26 - works broi space
05:30 - code we're including that space so to
05:33 - remedy this I can add plus one find the
05:36 - first index of a space then start in the
05:39 - position after that's why we're adding
05:41 - plus one then give me every letter that
05:43 - comes after and that works just fine
05:46 - broi code all right let's go over an
05:51 - exercise this time we will list an
05:54 - email const email equals why don't you
05:57 - go ahead and type in your email I'll
05:59 - make one up for me bro 1@gmail.com
06:04 - I'll extract the first part of my email
06:08 - to be stored as a
06:09 - username let username equals again we're
06:14 - going to take our string email do use
06:18 - the slice method where are we going to
06:20 - begin we'll begin at index zero that's
06:22 - the beginning of a
06:23 - string where will we end we'll end
06:26 - wherever the at symbol is but we need to
06:28 - search for it
06:30 - we'll use the built-in index of method
06:32 - of a string email. index of what are we
06:37 - searching for we are searching for the
06:39 - at
06:42 - symbol and let's see if this works
06:47 - console.log our
06:50 - username yep bro
06:52 - one then let's get the
06:56 - extension let extension
07:00 - equals we can copy this line of code
07:03 - paste it make a few
07:05 - changes this substring will begin where
07:08 - the last one
07:11 - ended then again
07:14 - console.log the
07:17 - extension at
07:19 - gmail.com again like I said before I
07:21 - would like to begin after this
07:24 - index I will add plus
07:27 - one my username is B1 my extension is
07:31 - gmail.com all right everybody so that's
07:33 - string slicing it's the process of
07:35 - creating a substring from a portion of
07:38 - another string when you create a
07:39 - substring you won't alter the original
07:43 - and I've proven that by setting this
07:44 - string to be a constant you can't change
07:46 - a constant to create a substring you
07:49 - take the string use the built-in slice
07:51 - method then you can list starting or
07:53 - ending indices and well everybody that
07:55 - is string slicing in
07:58 - JavaScript

Cleaned transcript:

hey everybody so today I'm going to explain string slicing in JavaScript string slicing is the process of creating a substring from a portion of another string this won't alter the original string just to demonstrate let's create a constant for our full name go ahead and type in your full name or you can copy me I'm going to extract the first name from my full name and create a new string out of it so I'll declare this let first first name equals Now to create a substring we can follow this formula we take our string in this case our full name dot then use the builtin slice method slice then we can list a starting and ending index where would we like to begin so the first character has an index of zero we'll start at the beginning index0 comma where are we going to end 0 1 2 this isn't necessarily going to work and let me demonstrate so let's console.log our first name so my first name is BR so the ending index is actually exclusive in my full name we're ending at o but we don't include it within our substring because the ending index is exclusive I'll increase the ending index to three that should include one more character which it does now let's get the last name let last name equals again following this formula take our original string use the builtin slice method State the beginning index 0 1 2 3 4 mine will be four yours may be different depending on what your name is and the ending index 4 5 6 7 and remember that the last index is exclusive so I'm going to increase that to be eight then we'll display our last name console.log last name and there's my last name so the reason that I set the beginning index to be four and not three is because we'll include that space within the result as you can see here if you're going to be creating a substring from some position all the way to the end you don't necessarily need an ending index I'm going to remove the ending index and this should work the same all right what if I need the first character in the string let first Char meaning character equals take our string we will use the slice method for the first character you can use 0 comma 1 then let's display our first character and in my example mine is B for the last character let last character full name do slice we can use a negative index even if you're using a negative index you'll begin at the end then by decreasing the number you'll work your way towards the beginning so the last character in my name is e 2 would be de three is OD four is c for code negative indices work as well with these specific numbers that I've listed they're only going to work if my name is exact this what if I were to change my first name to be instead of bro broseph like Joseph then let's display our first name then our last name first name bro last name f which is not correct to make this program more Dynamic we can combine string slicing with the index of method we'll search the string for the first instance of a space then depending on where that space is we'll take the first part of our full name and create a substring for the first name anything after the space will be our last name so let's turn these lines into comments we don't need them anymore let first name equals again take our full name do slice we'll begin at the beginning index zero now where do we end we're not going to count the number of character this time we're going to calculate it the ending index will be take our full name dot then use the index of method where's the first index of a space so that is the ending position wherever there's a space then we'll display our first name uh let me get rid of our last name there brosive now for the last name let last name equals let's copy this line of code paste it the beginning index will be full name. index of space you can list an ending index but we don't need to we would like to extract every character that comes after this position so we don't need an ending index all right let's see if this works broi space code we're including that space so to remedy this I can add plus one find the first index of a space then start in the position after that's why we're adding plus one then give me every letter that comes after and that works just fine broi code all right let's go over an exercise this time we will list an email const email equals why don't you go ahead and type in your email I'll make one up for me bro 1@gmail.com I'll extract the first part of my email to be stored as a username let username equals again we're going to take our string email do use the slice method where are we going to begin we'll begin at index zero that's the beginning of a string where will we end we'll end wherever the at symbol is but we need to search for it we'll use the builtin index of method of a string email. index of what are we searching for we are searching for the at symbol and let's see if this works console.log our username yep bro one then let's get the extension let extension equals we can copy this line of code paste it make a few changes this substring will begin where the last one ended then again console.log the extension at gmail.com again like I said before I would like to begin after this index I will add plus one my username is B1 my extension is gmail.com all right everybody so that's string slicing it's the process of creating a substring from a portion of another string when you create a substring you won't alter the original and I've proven that by setting this string to be a constant you can't change a constant to create a substring you take the string use the builtin slice method then you can list starting or ending indices and well everybody that is string slicing in JavaScript
