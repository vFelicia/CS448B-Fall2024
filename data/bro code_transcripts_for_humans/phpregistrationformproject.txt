With timestamps:

00:00 - hey everybody in today's video we're
00:02 - going to create a registration form in
00:04 - PHP so sit back relax and enjoy the show
00:10 - a few prerequisites that we'll need for
00:12 - this project is that we'll need a table
00:15 - within a database we have created one in
00:18 - Prior topics we have an ID a user a
00:21 - password and a registration date you'll
00:23 - need a working database connection as
00:25 - well which is what we have done here
00:28 - in my index file I have included that
00:30 - PHP code that contains my connection
00:32 - then we will write a second PHP script
00:36 - within this file
00:39 - we are going to close our MySQL
00:41 - connection because if we don't do it now
00:43 - I know that I'm going to forget later so
00:45 - let's close it now
00:47 - and we are closing our connection
00:51 - let's go to our index file
00:53 - generate some HTML
00:55 - we'll create a pair of form tags
01:02 - for the action
01:04 - we're going to set this to a PHP script
01:06 - within quotes just in case I update the
01:09 - name of this file this script will
01:11 - reflect the changes
01:13 - so let's create a PHP script
01:16 - we will get
01:18 - from our server super Global variable
01:22 - PHP self
01:24 - accessing the key of PHP self that will
01:27 - give us the name of the file but this is
01:29 - vulnerable to cross-site scripts we
01:32 - should enclose this within a filter
01:34 - HTML special chars is a good one for
01:37 - this situation
01:40 - then we should set the method equal to
01:43 - post because we're creating a
01:45 - registration form
01:47 - let's add a title to our web page let's
01:50 - use an H2 header tag
01:55 - welcome to
01:57 - fake book
01:59 - it's like Facebook but worse we'll have
02:02 - a user type in a username and a password
02:04 - username
02:06 - add a break
02:09 - add a text box
02:12 - input type
02:14 - equals text
02:16 - the name attribute will be username
02:20 - add a break
02:22 - and I'm just saving and reloading
02:24 - everything as I go along
02:26 - we'll need a password
02:31 - create an input tag set the type equal
02:34 - to password
02:37 - the name will be password as well
02:41 - add a break then let's create a submit
02:44 - button
02:45 - that is also an input tag
02:47 - the type will be submit
02:50 - for the name let's set that to be submit
02:52 - as well
02:56 - then for the value maybe register
03:01 - that looks pretty good
03:02 - okay our form is complete
03:05 - let's go to our PHP script
03:08 - the method of our form is set to post
03:12 - we can detect that with a if statement
03:14 - we will access the server super Global
03:17 - variable
03:18 - and check the request method key
03:22 - so type request method
03:25 - is this equal to post has the request
03:28 - method changed to post
03:30 - if a post request is made we should
03:33 - filter both the username and the
03:35 - password it just in case they contain a
03:37 - malicious script
03:38 - so let's assign our username equal to we
03:42 - will filter the input using the filter
03:45 - input function
03:48 - type input post because we're using post
03:51 - the second argument is the attribute
03:53 - name username
03:56 - then a filter type
03:58 - filter
04:00 - sanitize
04:02 - special
04:03 - chars
04:05 - let's copy this line
04:09 - then paste it directly underneath
04:12 - but change username to password
04:17 - do that here too
04:20 - so that should filter any malicious
04:22 - grips
04:23 - once we have a username and a password
04:25 - that's been filtered we'll check if one
04:27 - of these fields is empty
04:30 - we can use an if statement
04:33 - let's check if our username is empty
04:36 - if
04:37 - empty function our username
04:40 - then we will Echo
04:42 - please enter a username
04:47 - else if
04:49 - our password is empty
04:52 - empty function
04:54 - let's check our password
04:58 - please enter a password
05:02 - Let's test that real quick
05:04 - I'll type in a username but not a
05:06 - password please enter a password
05:09 - I won't type in a username but I'll type
05:11 - in a password
05:13 - please enter a username
05:15 - if we type in both
05:21 - nothing happens but that's good
05:23 - if our username isn't missing and our
05:26 - password isn't missing we can execute
05:28 - and else clause
05:29 - in our database we'll want to store a
05:32 - hash of a password let's take our
05:34 - password
05:35 - declare a hash variable
05:38 - then use the password hash function
05:43 - we will pass in our password
05:45 - then an option let's use password
05:47 - default
05:51 - okay now that we have our hash we need
05:54 - to write an SQL query we'll insert the
05:56 - username and the hash of the password
05:59 - we'll store our SQL query within a
06:02 - variable SQL
06:04 - then we will write the query it's going
06:07 - to be an insert statement
06:09 - insert in two
06:12 - the name of the table in this case my
06:14 - table is named users
06:17 - list the columns
06:19 - user and password
06:25 - values
06:28 - list the values
06:30 - we will be inserting our username
06:32 - variable
06:33 - as well as our hash the hash variable
06:38 - then to initiate the query we can use
06:40 - the query function
06:42 - mysqli underscore
06:45 - query
06:47 - pass in our connection as the first
06:48 - argument
06:50 - followed by our SQL query
06:54 - once that's complete we should probably
06:55 - let the user know that they registered
06:57 - successfully
06:59 - let's Echo
07:02 - you are now registered
07:07 - for the username I will type SpongeBob
07:11 - SpongeBob will have a password of
07:13 - pineapple one
07:16 - I'll click register
07:17 - you are now registered let's go to our
07:20 - table
07:21 - refresh I might need to zoom out a
07:24 - little bit
07:25 - and here's the first record user ID one
07:29 - username is SpongeBob
07:31 - this is the hash of the password
07:34 - and I have a registration date one
07:36 - important thing I forgot to mention I'm
07:38 - only allowing in this table unique user
07:41 - IDs
07:42 - if I were to register another user as
07:44 - SpongeBob
07:46 - we might have a little problem
07:48 - SpongeBob
07:50 - I'll make up another password fry cook
07:53 - too
07:55 - well we get a fatal error
07:57 - uncaught MySQL exception we have a
08:01 - duplicate entry for SpongeBob
08:03 - we never really talked much about
08:05 - exception handling but one way in which
08:07 - you could handle this exception is that
08:10 - we can copy the exception name
08:12 - place any code that might cause an
08:14 - exception within a try block
08:21 - then catch that exception
08:25 - in this case it was a MySQL exception
08:30 - then let's Echo
08:32 - that username is taken there's still a
08:36 - lot more you can do with exceptions but
08:37 - that's more of an intermediate topic I
08:39 - would say
08:41 - let's type in SpongeBob again
08:44 - brycook 2 and register that username is
08:48 - taken
08:49 - let's create the username Squidward
08:52 - Squidward will have a password of
08:55 - clarinet2
08:57 - you are now registered
08:59 - and here's Squidward
09:01 - all right everybody so I thought that
09:03 - would be a fun final project for us to
09:05 - do to wrap up this video I would look at
09:08 - both object oriented programming and
09:10 - exception handling next hey if you made
09:13 - it this far be sure you've smashed that
09:14 - like button leave a random comment down
09:16 - below and subscribe if you'd like to
09:18 - become a fellow bro

Cleaned transcript:

hey everybody in today's video we're going to create a registration form in PHP so sit back relax and enjoy the show a few prerequisites that we'll need for this project is that we'll need a table within a database we have created one in Prior topics we have an ID a user a password and a registration date you'll need a working database connection as well which is what we have done here in my index file I have included that PHP code that contains my connection then we will write a second PHP script within this file we are going to close our MySQL connection because if we don't do it now I know that I'm going to forget later so let's close it now and we are closing our connection let's go to our index file generate some HTML we'll create a pair of form tags for the action we're going to set this to a PHP script within quotes just in case I update the name of this file this script will reflect the changes so let's create a PHP script we will get from our server super Global variable PHP self accessing the key of PHP self that will give us the name of the file but this is vulnerable to crosssite scripts we should enclose this within a filter HTML special chars is a good one for this situation then we should set the method equal to post because we're creating a registration form let's add a title to our web page let's use an H2 header tag welcome to fake book it's like Facebook but worse we'll have a user type in a username and a password username add a break add a text box input type equals text the name attribute will be username add a break and I'm just saving and reloading everything as I go along we'll need a password create an input tag set the type equal to password the name will be password as well add a break then let's create a submit button that is also an input tag the type will be submit for the name let's set that to be submit as well then for the value maybe register that looks pretty good okay our form is complete let's go to our PHP script the method of our form is set to post we can detect that with a if statement we will access the server super Global variable and check the request method key so type request method is this equal to post has the request method changed to post if a post request is made we should filter both the username and the password it just in case they contain a malicious script so let's assign our username equal to we will filter the input using the filter input function type input post because we're using post the second argument is the attribute name username then a filter type filter sanitize special chars let's copy this line then paste it directly underneath but change username to password do that here too so that should filter any malicious grips once we have a username and a password that's been filtered we'll check if one of these fields is empty we can use an if statement let's check if our username is empty if empty function our username then we will Echo please enter a username else if our password is empty empty function let's check our password please enter a password Let's test that real quick I'll type in a username but not a password please enter a password I won't type in a username but I'll type in a password please enter a username if we type in both nothing happens but that's good if our username isn't missing and our password isn't missing we can execute and else clause in our database we'll want to store a hash of a password let's take our password declare a hash variable then use the password hash function we will pass in our password then an option let's use password default okay now that we have our hash we need to write an SQL query we'll insert the username and the hash of the password we'll store our SQL query within a variable SQL then we will write the query it's going to be an insert statement insert in two the name of the table in this case my table is named users list the columns user and password values list the values we will be inserting our username variable as well as our hash the hash variable then to initiate the query we can use the query function mysqli underscore query pass in our connection as the first argument followed by our SQL query once that's complete we should probably let the user know that they registered successfully let's Echo you are now registered for the username I will type SpongeBob SpongeBob will have a password of pineapple one I'll click register you are now registered let's go to our table refresh I might need to zoom out a little bit and here's the first record user ID one username is SpongeBob this is the hash of the password and I have a registration date one important thing I forgot to mention I'm only allowing in this table unique user IDs if I were to register another user as SpongeBob we might have a little problem SpongeBob I'll make up another password fry cook too well we get a fatal error uncaught MySQL exception we have a duplicate entry for SpongeBob we never really talked much about exception handling but one way in which you could handle this exception is that we can copy the exception name place any code that might cause an exception within a try block then catch that exception in this case it was a MySQL exception then let's Echo that username is taken there's still a lot more you can do with exceptions but that's more of an intermediate topic I would say let's type in SpongeBob again brycook 2 and register that username is taken let's create the username Squidward Squidward will have a password of clarinet2 you are now registered and here's Squidward all right everybody so I thought that would be a fun final project for us to do to wrap up this video I would look at both object oriented programming and exception handling next hey if you made it this far be sure you've smashed that like button leave a random comment down below and subscribe if you'd like to become a fellow bro
