With timestamps:

00:00 - why hello there everybody today I will
00:02 - be explaining the on delete Clause
00:04 - there's two versions on delete Sentinel
00:07 - and on delete Cascade with on delete set
00:10 - null when a foreign key is deleted we
00:13 - can replace the foreign key with the
00:15 - value no otherwise there's on delete
00:18 - Cascade
00:20 - when a foreign key is deleted delete the
00:22 - entire row here's an example let's take
00:25 - a look at our table transactions select
00:28 - all from
00:30 - transactions
00:33 - in my transactions table the customer ID
00:36 - column is the foreign key what would
00:38 - happen if I were to delete one of these
00:40 - customers let's select all from our
00:43 - customers table
00:45 - I'm going to delete poppy puff she has a
00:47 - customer ID of four
00:50 - delete from customers
00:53 - where customer ID equals four
00:58 - if you run into this error cannot delete
01:01 - or update a parent row a foreign key
01:03 - constraint fails there's a foreign key
01:05 - that's preventing us from deleting this
01:07 - customer because this customer is used
01:09 - elsewhere in a different table like that
01:11 - transaction stable so just temporarily
01:14 - for this demonstration
01:16 - I'm going to set foreign key checks to
01:19 - be zero
01:21 - and that should work our customer with
01:23 - an idea 4 is gone one two three five
01:26 - poppy puff is no longer within our
01:28 - customers table before I forget I'm
01:30 - going to set foreign key checks back to
01:32 - one
01:34 - let's take a look at our transactions
01:36 - table
01:38 - underneath this transaction of 1005
01:40 - we're referencing a customer that
01:43 - doesn't exist the customer with an idea
01:45 - 4 is no longer within our customers
01:47 - table we have a couple options whenever
01:49 - we delete a primary key from another
01:51 - table that's being used as a foreign key
01:53 - somewhere else
01:54 - we can either replace that value with
01:57 - null or delete the entire row with
02:00 - Cascade with on delete set null we can
02:04 - replace this value with null much like
02:06 - these two rows
02:08 - or on delete Cascade we can delete the
02:11 - entire row let's begin with on delete
02:14 - Sentinel I'm going to reinsert Poppy
02:16 - puff back into our table of customers
02:20 - and there we are poppy puff is back in
02:22 - the customers table
02:24 - now with on delete Sentinel if we're
02:27 - creating a new table
02:29 - let's say I'm recreating my table of
02:30 - transactions after adding the foreign
02:33 - key constraint foreign key our customer
02:35 - ID column references the customer ID
02:39 - column of the customers table I can add
02:42 - this clause on delete set no
02:47 - that's if I'm creating a new table but I
02:49 - already do have a transactions table I
02:51 - don't want to update it
02:53 - however we can update an existing table
02:56 - with this Clause I already do have a
02:58 - foreign key constraint I'm just going to
02:59 - drop it real quick
03:01 - alter table
03:04 - transactions
03:06 - drop
03:08 - foreign
03:10 - key then the name of the foreign key
03:12 - mine is FK underscore customer ID
03:18 - and that key is now dropped we are going
03:21 - to add a foreign key constraint to our
03:23 - transactions table with this clause on
03:25 - delete Sentinel alter table the name of
03:29 - the table
03:31 - add constraint you can give your
03:34 - constraint a name I'll give it the same
03:35 - name as before
03:36 - FK customer ID
03:41 - list the foreign key
03:42 - foreign key
03:46 - my foreign key is customer ID
03:50 - references
03:52 - another table which was customers and
03:55 - what is the primary key of that table
03:58 - customer ID
04:00 - then we will add the clause on delete
04:04 - set no
04:06 - if I delete a customer ID from customers
04:09 - the foreign key of that row will be set
04:11 - to null automatically let's execute this
04:15 - let's take a look at our transactions
04:17 - table select all from transactions I am
04:21 - now going to delete customer number four
04:22 - from the customers table
04:25 - delete from customers
04:28 - where customer ID equals four
04:33 - yeah check that out with our transaction
04:35 - ID of 1005 the customer ID is now null
04:39 - now there's and delete Cascade when a
04:42 - foreign key is deleted we can instead
04:45 - delete the entire row let's go ahead and
04:47 - add poppy puff back to our customers
04:49 - table
04:53 - all right she's back in
04:55 - let's drop the current foreign key
04:57 - constraint of our transactions table
04:59 - alter table transactions
05:04 - drop
05:05 - foreign key
05:08 - FK
05:10 - customer
05:12 - ID or whatever else it's named
05:17 - and that key is now gone we will add the
05:20 - on delete Cascade Clause to a table that
05:23 - already exists
05:24 - alter table
05:27 - transactions
05:29 - add
05:31 - constraint you can come up with the name
05:34 - FK
05:36 - underscore
05:37 - transactions underscore ID list the
05:41 - foreign key
05:44 - foreign key
05:47 - customer ID
05:50 - references
05:53 - the customers table
05:56 - and the primary key of that table is the
05:59 - customer ID
06:01 - then add on delete
06:04 - Cascade
06:09 - let's take a look at our transactions
06:11 - table
06:12 - select all from
06:14 - transactions
06:16 - oh let's update this customer ID real
06:18 - quick I forgot to do that update
06:21 - transactions set customer ID equal to
06:27 - four
06:28 - where
06:30 - transaction
06:31 - ID equals one thousand five
06:36 - yeah I forgot to add that back now let's
06:38 - do it
06:40 - delete from
06:43 - customers
06:45 - where
06:47 - customer
06:48 - ID equals four
06:52 - yeah take a look at that the entire row
06:55 - is now gone
06:56 - we have transactions one thousand three
06:58 - one thousand four one thousand six one
07:00 - thousand five is missing because it was
07:02 - referencing the customer with an ID of
07:04 - four we set the foreign key to delete
07:07 - the entire row when that foreign key is
07:09 - deleted that is on delete Cascade well
07:12 - in conclusion everybody on delete is a
07:14 - clause where if you delete a foreign key
07:16 - you can set that value to be null or
07:19 - Cascade which will delete the entire row
07:22 - which has its uses and well yeah that's
07:25 - the on delete clause in MySQL

Cleaned transcript:

why hello there everybody today I will be explaining the on delete Clause there's two versions on delete Sentinel and on delete Cascade with on delete set null when a foreign key is deleted we can replace the foreign key with the value no otherwise there's on delete Cascade when a foreign key is deleted delete the entire row here's an example let's take a look at our table transactions select all from transactions in my transactions table the customer ID column is the foreign key what would happen if I were to delete one of these customers let's select all from our customers table I'm going to delete poppy puff she has a customer ID of four delete from customers where customer ID equals four if you run into this error cannot delete or update a parent row a foreign key constraint fails there's a foreign key that's preventing us from deleting this customer because this customer is used elsewhere in a different table like that transaction stable so just temporarily for this demonstration I'm going to set foreign key checks to be zero and that should work our customer with an idea 4 is gone one two three five poppy puff is no longer within our customers table before I forget I'm going to set foreign key checks back to one let's take a look at our transactions table underneath this transaction of 1005 we're referencing a customer that doesn't exist the customer with an idea 4 is no longer within our customers table we have a couple options whenever we delete a primary key from another table that's being used as a foreign key somewhere else we can either replace that value with null or delete the entire row with Cascade with on delete set null we can replace this value with null much like these two rows or on delete Cascade we can delete the entire row let's begin with on delete Sentinel I'm going to reinsert Poppy puff back into our table of customers and there we are poppy puff is back in the customers table now with on delete Sentinel if we're creating a new table let's say I'm recreating my table of transactions after adding the foreign key constraint foreign key our customer ID column references the customer ID column of the customers table I can add this clause on delete set no that's if I'm creating a new table but I already do have a transactions table I don't want to update it however we can update an existing table with this Clause I already do have a foreign key constraint I'm just going to drop it real quick alter table transactions drop foreign key then the name of the foreign key mine is FK underscore customer ID and that key is now dropped we are going to add a foreign key constraint to our transactions table with this clause on delete Sentinel alter table the name of the table add constraint you can give your constraint a name I'll give it the same name as before FK customer ID list the foreign key foreign key my foreign key is customer ID references another table which was customers and what is the primary key of that table customer ID then we will add the clause on delete set no if I delete a customer ID from customers the foreign key of that row will be set to null automatically let's execute this let's take a look at our transactions table select all from transactions I am now going to delete customer number four from the customers table delete from customers where customer ID equals four yeah check that out with our transaction ID of 1005 the customer ID is now null now there's and delete Cascade when a foreign key is deleted we can instead delete the entire row let's go ahead and add poppy puff back to our customers table all right she's back in let's drop the current foreign key constraint of our transactions table alter table transactions drop foreign key FK customer ID or whatever else it's named and that key is now gone we will add the on delete Cascade Clause to a table that already exists alter table transactions add constraint you can come up with the name FK underscore transactions underscore ID list the foreign key foreign key customer ID references the customers table and the primary key of that table is the customer ID then add on delete Cascade let's take a look at our transactions table select all from transactions oh let's update this customer ID real quick I forgot to do that update transactions set customer ID equal to four where transaction ID equals one thousand five yeah I forgot to add that back now let's do it delete from customers where customer ID equals four yeah take a look at that the entire row is now gone we have transactions one thousand three one thousand four one thousand six one thousand five is missing because it was referencing the customer with an ID of four we set the foreign key to delete the entire row when that foreign key is deleted that is on delete Cascade well in conclusion everybody on delete is a clause where if you delete a foreign key you can set that value to be null or Cascade which will delete the entire row which has its uses and well yeah that's the on delete clause in MySQL
