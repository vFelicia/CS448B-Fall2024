With timestamps:

00:00 - hey what's going on everybody it's your
00:02 - bro hope you're doing well
00:03 - and in this video i'm going to be
00:04 - explaining the basics of scenes
00:06 - in javafx so sit back relax
00:10 - and enjoy the show
00:13 - if you find this video helpful please
00:15 - remember to like
00:16 - comment and subscribe your support will
00:18 - help keep this channel running
00:20 - well hello friends this video is all
00:23 - about scenes a scene is a drawing
00:25 - surface for graphical content and a
00:27 - container for nodes
00:28 - during the last video we covered the
00:30 - architecture of an fx gui program
00:32 - i like to think of it as a sandwich the
00:34 - stage is the bread
00:36 - the scene is the meat and all of the
00:38 - nodes are various toppings and
00:40 - condiments
00:40 - we covered stages in the previous video
00:42 - and in this video we'll be focusing on
00:45 - scenes before we begin let's just make
00:47 - sure we have a few things set up
00:49 - so with all of our imports you can
00:51 - import things as you're going along
00:52 - but you'll want to be sure that you're
00:54 - importing from java fx and not anyplace
00:57 - else
00:57 - otherwise a lot of the stuff might not
00:59 - work so we need a root node
01:01 - i'm using the group class to create a
01:03 - root node add the root node to the scene
01:05 - you can create a stage or you can use
01:07 - the stage that is passed in
01:08 - via the start method add your scene to
01:11 - the stage using the set scene method
01:13 - and at the end show the stage you'll be
01:15 - ready once you run the program and you
01:17 - have a blank
01:18 - scene on a stage now to create a scene
01:21 - we need to pass in at least a
01:22 - root node but we can add a few other
01:24 - things as arguments too when we
01:25 - construct a scene we can add a width and
01:27 - a height for the scene
01:28 - so let's pass in a width and a height as
01:31 - arguments to our scene constructor
01:33 - so let's say 600 by 600
01:36 - and the size of your stage is actually
01:38 - going to adjust
01:40 - to fit the size of the scene you can see
01:42 - that our stage is no longer as wide as
01:44 - it was before
01:45 - it's now a perfect square you can also
01:48 - change the background color too
01:49 - we'll pass in a color as an argument
01:51 - color dot
01:52 - and then you can pick a color from this
01:54 - list i wonder if there's like a sky blue
01:57 - yeah let's pick that and now our scene
02:01 - should be
02:02 - a sky blue color and if you adjust the
02:05 - size
02:06 - of your stage the window your scene is
02:08 - going to adjust in size as well too
02:10 - if you need to disable that just use the
02:12 - set resizable method of stages
02:15 - let's add some text to the scene so we
02:16 - need to create a text object
02:18 - text text equals new text
02:22 - you can either pass in a string to the
02:24 - text constructor or you can use the set
02:26 - text method
02:27 - so text dot then set
02:31 - text and we can pass in some text like
02:35 - whoa all right
02:39 - so since we're using a group root node
02:41 - we need to
02:42 - manually place the coordinates of this
02:45 - object
02:46 - so we'll set x and set y text
02:49 - dot set x and let's set this to maybe 50
02:53 - so this will be
02:54 - on the left side and then we will set y
02:57 - to be
02:58 - 50 as well so that will be near the top
03:00 - so this should be in the top left corner
03:02 - text is a type of node so we need to add
03:06 - this node to our root node and our root
03:08 - node is already added to the scene
03:10 - so before we set the scene and show the
03:13 - stage
03:13 - let's add our text to our root node so
03:17 - type in
03:18 - root or whatever you're using for your
03:20 - root node if it's named something else
03:22 - dot get children
03:26 - then add at the end dot add
03:30 - whatever it is you want to add whatever
03:31 - node so we would like to add
03:33 - our text node when we run this program
03:36 - we should have some text on our scene
03:39 - whoa
03:40 - but you can't really see it because the
03:42 - font is kind of small so let's change
03:43 - the font
03:44 - so let's change a few other properties
03:46 - of our text node that we have
03:48 - so after we set the x and y coordinates
03:52 - let's change the font text dot
03:55 - set font and you need to pass in a font
03:58 - as an argument
04:00 - font dot font
04:04 - and let's pick a font maybe for
04:07 - dana and a size as well maybe 50.
04:11 - and let's try this again
04:15 - yeah that's much better so let's also
04:17 - change
04:18 - the color as well the fill color text
04:21 - dot set fill and you pass
04:24 - in a paint object as an argument so
04:27 - let's just say color
04:29 - dot maybe green
04:32 - wow there's a lot of green colors uh how
04:35 - about lime green
04:37 - let's take a look at that
04:41 - yeah that's not too bad so that's how to
04:42 - add text to your scene
04:44 - let's create a line line line
04:48 - equals new line a lot of these values
04:51 - i'm about to show you you can pass into
04:53 - the align constructor
04:54 - or there's various methods for setting
04:56 - them so we need to set
04:58 - some starting coordinates as well as
05:00 - ending coordinates so let's begin
05:01 - with the starting coordinates line dot
05:04 - set start x and then y
05:08 - so where do we want this line to begin
05:10 - on the x axis
05:11 - maybe where x is 200 so let's set y
05:15 - as well line dot set star
05:18 - y then we need an ending point for this
05:21 - line
05:22 - line dot set end x and then y
05:25 - so i would like this line to end where x
05:28 - is
05:29 - 500 this will be a horizontal line
05:32 - and we will set y to be 200 line
05:35 - dot set and y 200
05:38 - now line is a node and we just need to
05:40 - add this node
05:41 - to our root node so let's copy what we
05:44 - did for
05:45 - our text node and change text
05:48 - to line and we should have a horizontal
05:51 - line on our scene
05:53 - you also can change the stroke width as
05:55 - well as the stroke color let's begin by
05:58 - changing the stroke width
05:59 - blind dot set stroke width
06:03 - and pass in a new width maybe five so
06:06 - this should be
06:07 - an extra thick line that we have
06:10 - you can also change the color to line
06:13 - dot set stroke
06:16 - and then pass in a paint object color
06:20 - dot maybe red
06:24 - so this should be a red line
06:27 - you can change the opacity line
06:31 - dot set opacity
06:35 - so the opacity makes your object
06:37 - transparent if i were to set this to 0.5
06:41 - this will now be a transparent line so
06:44 - this is on a scale
06:45 - with opacity between 0 and one i believe
06:48 - too
06:48 - so 0.5 would mean that this is
06:52 - like 50 transparent you can also rotate
06:54 - the stew
06:55 - using the set rotate method line dot set
06:58 - rotate and let's pass
07:02 - in an amount of degrees like 45
07:06 - and this will rotate our line 45 degrees
07:09 - now these methods that i've shown you
07:11 - are only just a few if you were to type
07:12 - in the name of your object
07:14 - dot if you have intellisense set up you
07:16 - should have a huge comprehensive list of
07:19 - all the methods available to you to
07:20 - change some of these properties around
07:22 - for your object
07:22 - i've only just covered a few but there's
07:24 - still way more than this feel free to
07:26 - experiment and play around with some of
07:27 - those now let's move on to rectangles
07:30 - rectangle rectangle equals
07:34 - new rectangle we need to
07:38 - set x and y so type in the name
07:41 - of your rectangle in my case it's
07:43 - rectangle dot
07:45 - set x i will set this to
07:48 - 100 and then set y
07:51 - set y to 100 as well i suppose
07:55 - so we can set a width and height so type
07:58 - in
07:58 - rectangle dot set
08:02 - width i'll make this a square so 100 by
08:06 - 100
08:07 - and then rectangle dot set height
08:12 - set height i will set this to 100
08:15 - and then we need to add our rectangle to
08:18 - our root node so i'll copy what i have
08:21 - here
08:22 - root dot gel children dot add i would
08:25 - like to add my rectangle
08:26 - and we should have a rectangle on our
08:29 - scene
08:30 - so this is just a black rectangle we can
08:33 - change some of the properties around too
08:35 - let's change some of the properties of
08:37 - this rectangle such as the color
08:39 - rectangle dot set fill
08:42 - and we can pass in a color color
08:45 - dot maybe blue
08:49 - now this should be a blue rectangle we
08:52 - can also add
08:53 - a border around this rectangle as well
08:56 - so we can use set stroke width and you
08:59 - can change the color of two
09:00 - so rectangle dot set
09:03 - stroke width i'll set this to 5 to match
09:06 - the width of our line
09:08 - you can also set the stroke color as
09:10 - well rectangle
09:11 - dot set stroke
09:15 - and pass in a color maybe i'll keep this
09:18 - as black
09:18 - color dot black all right let's take a
09:21 - look
09:24 - and here is our rectangle and we added a
09:26 - black border around our rectangle
09:29 - like i said with a lot of these objects
09:31 - you do have various properties and
09:33 - methods to change them
09:34 - for example with rectangles there is a
09:37 - site opacity and
09:38 - set rotate method as well although i've
09:40 - already shown that so that would be kind
09:42 - of redundant
09:43 - so feel free to experiment with some of
09:45 - those as well now let's move on to
09:47 - triangles and to create a triangle we
09:49 - actually need to use the polygon class
09:52 - polygon and let's call this triangle
09:54 - equals
09:55 - new polygon
10:00 - as we know triangles have three points
10:02 - we need to add a set of coordinates
10:05 - for each point so to do that type in the
10:08 - name of your polygon
10:09 - in this case it is triangle dot get
10:13 - points we'll do a little bit of method
10:15 - training at the end
10:17 - add dot set all
10:20 - the set all method takes double data
10:23 - types
10:24 - all of our coordinates are going to be
10:25 - doubles so after each coordinate
10:28 - you can add point zero or you can do
10:30 - some casting too either way
10:32 - so let's say my first point is 200 by
10:34 - 200
10:36 - and to make this more readable i'm going
10:38 - to add each coordinate to a new line
10:40 - it's not necessary but it helps me read
10:42 - this so
10:43 - these are the coordinates for my first
10:45 - point and
10:46 - let's set the coordinates for the second
10:48 - point
10:50 - 300.0 and 300.0 works
10:54 - and the third point 200.0
10:58 - and 300.0 you can always change these
11:02 - around too
11:03 - let's change the color of this triangle
11:05 - triangle dot
11:06 - set fill and pick a color
11:09 - i will pick yellow
11:14 - and we need to add this triangle node
11:16 - this polygon node
11:18 - to our root node at the end
11:21 - root dot get children dot
11:24 - add triangle and we should have a
11:26 - triangle
11:27 - on our scene let's move on to circles
11:31 - circle circle equals new
11:34 - circle when we set the location of our
11:39 - circle
11:39 - we set center x and y this is where
11:43 - the center of our circle is going to
11:45 - appear set
11:47 - center x and then y so let's say
11:50 - 350 for x and the same for
11:54 - y set center y 350
11:57 - we'll need to set a radius as well for
11:59 - the circle so
12:00 - type in the name your circle dot
12:04 - set radius and pick a radius
12:07 - i will pick 50 and we can set a fill
12:10 - color as well
12:12 - circle dot set fill
12:16 - and then pick a color i think this time
12:18 - i'll pick orange so
12:19 - it kind of resembles a basketball and we
12:22 - need to add
12:23 - the circle node to our root node
12:27 - root dot get children dot add
12:30 - circle and we should have an orange
12:33 - circle
12:34 - on our scene it's a basketball
12:38 - last but not least we're going to add an
12:40 - image to our scene i would like to add
12:42 - an image of a slice of pizza to my scene
12:45 - for some reason so copy your file and
12:47 - then go to your source folder
12:49 - and then paste your image file my image
12:52 - is called
12:53 - pizza.png i'm going to create an
12:55 - image out of this file so let's do that
12:58 - maybe here
13:00 - image image equals new
13:04 - image then within the constructor of
13:06 - your image
13:07 - list the file path or the file name this
13:10 - is within my source folder i only have
13:12 - to list the file name
13:13 - if for some reason this doesn't work you
13:15 - can always troubleshoot using the file
13:17 - path
13:17 - so i'm going to go to properties and you
13:20 - can copy the location
13:21 - so if the following steps don't work for
13:24 - you you can always troubleshoot and try
13:26 - the file path instead
13:27 - uh make sure this is within quotes
13:29 - though but since
13:30 - this is within my source folder i only
13:32 - need to list the file
13:34 - name now i need to create an image view
13:37 - object
13:37 - image view and i will call this image
13:41 - view
13:41 - equals new image view
13:44 - and pass in my image to the image view
13:47 - constructor
13:50 - and we will set the coordinates of our
13:52 - image view
13:54 - imageview.set x
13:57 - i'll set this to 400 and we will set
14:00 - y as well image view dot set y
14:05 - i will keep that the same as 400
14:08 - and we need to add this image view to
14:10 - our root node
14:12 - so root dot get children dot add
14:16 - your image view and now there should be
14:19 - a slice of pizza on my scene
14:22 - for some reason i don't know why i
14:23 - decided that well friends
14:25 - that's the basics of scenes it's a
14:28 - drawing surface for graphical content
14:30 - and a container for various nodes
14:32 - if you would like a copy of all this
14:34 - code i will post all of this in the
14:36 - comments section down below
14:37 - but yeah that is how scenes work in
14:40 - javafx
14:42 - hey you yeah i'm talking to you if you
14:45 - learned something new
14:46 - then help me help you in three easy
14:48 - steps
14:49 - by smashing that like button drop a
14:51 - comment down below
14:52 - and subscribe if you'd like to become a
14:54 - fellow bro
15:16 - you

Cleaned transcript:

hey what's going on everybody it's your bro hope you're doing well and in this video i'm going to be explaining the basics of scenes in javafx so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running well hello friends this video is all about scenes a scene is a drawing surface for graphical content and a container for nodes during the last video we covered the architecture of an fx gui program i like to think of it as a sandwich the stage is the bread the scene is the meat and all of the nodes are various toppings and condiments we covered stages in the previous video and in this video we'll be focusing on scenes before we begin let's just make sure we have a few things set up so with all of our imports you can import things as you're going along but you'll want to be sure that you're importing from java fx and not anyplace else otherwise a lot of the stuff might not work so we need a root node i'm using the group class to create a root node add the root node to the scene you can create a stage or you can use the stage that is passed in via the start method add your scene to the stage using the set scene method and at the end show the stage you'll be ready once you run the program and you have a blank scene on a stage now to create a scene we need to pass in at least a root node but we can add a few other things as arguments too when we construct a scene we can add a width and a height for the scene so let's pass in a width and a height as arguments to our scene constructor so let's say 600 by 600 and the size of your stage is actually going to adjust to fit the size of the scene you can see that our stage is no longer as wide as it was before it's now a perfect square you can also change the background color too we'll pass in a color as an argument color dot and then you can pick a color from this list i wonder if there's like a sky blue yeah let's pick that and now our scene should be a sky blue color and if you adjust the size of your stage the window your scene is going to adjust in size as well too if you need to disable that just use the set resizable method of stages let's add some text to the scene so we need to create a text object text text equals new text you can either pass in a string to the text constructor or you can use the set text method so text dot then set text and we can pass in some text like whoa all right so since we're using a group root node we need to manually place the coordinates of this object so we'll set x and set y text dot set x and let's set this to maybe 50 so this will be on the left side and then we will set y to be 50 as well so that will be near the top so this should be in the top left corner text is a type of node so we need to add this node to our root node and our root node is already added to the scene so before we set the scene and show the stage let's add our text to our root node so type in root or whatever you're using for your root node if it's named something else dot get children then add at the end dot add whatever it is you want to add whatever node so we would like to add our text node when we run this program we should have some text on our scene whoa but you can't really see it because the font is kind of small so let's change the font so let's change a few other properties of our text node that we have so after we set the x and y coordinates let's change the font text dot set font and you need to pass in a font as an argument font dot font and let's pick a font maybe for dana and a size as well maybe 50. and let's try this again yeah that's much better so let's also change the color as well the fill color text dot set fill and you pass in a paint object as an argument so let's just say color dot maybe green wow there's a lot of green colors uh how about lime green let's take a look at that yeah that's not too bad so that's how to add text to your scene let's create a line line line equals new line a lot of these values i'm about to show you you can pass into the align constructor or there's various methods for setting them so we need to set some starting coordinates as well as ending coordinates so let's begin with the starting coordinates line dot set start x and then y so where do we want this line to begin on the x axis maybe where x is 200 so let's set y as well line dot set star y then we need an ending point for this line line dot set end x and then y so i would like this line to end where x is 500 this will be a horizontal line and we will set y to be 200 line dot set and y 200 now line is a node and we just need to add this node to our root node so let's copy what we did for our text node and change text to line and we should have a horizontal line on our scene you also can change the stroke width as well as the stroke color let's begin by changing the stroke width blind dot set stroke width and pass in a new width maybe five so this should be an extra thick line that we have you can also change the color to line dot set stroke and then pass in a paint object color dot maybe red so this should be a red line you can change the opacity line dot set opacity so the opacity makes your object transparent if i were to set this to 0.5 this will now be a transparent line so this is on a scale with opacity between 0 and one i believe too so 0.5 would mean that this is like 50 transparent you can also rotate the stew using the set rotate method line dot set rotate and let's pass in an amount of degrees like 45 and this will rotate our line 45 degrees now these methods that i've shown you are only just a few if you were to type in the name of your object dot if you have intellisense set up you should have a huge comprehensive list of all the methods available to you to change some of these properties around for your object i've only just covered a few but there's still way more than this feel free to experiment and play around with some of those now let's move on to rectangles rectangle rectangle equals new rectangle we need to set x and y so type in the name of your rectangle in my case it's rectangle dot set x i will set this to 100 and then set y set y to 100 as well i suppose so we can set a width and height so type in rectangle dot set width i'll make this a square so 100 by 100 and then rectangle dot set height set height i will set this to 100 and then we need to add our rectangle to our root node so i'll copy what i have here root dot gel children dot add i would like to add my rectangle and we should have a rectangle on our scene so this is just a black rectangle we can change some of the properties around too let's change some of the properties of this rectangle such as the color rectangle dot set fill and we can pass in a color color dot maybe blue now this should be a blue rectangle we can also add a border around this rectangle as well so we can use set stroke width and you can change the color of two so rectangle dot set stroke width i'll set this to 5 to match the width of our line you can also set the stroke color as well rectangle dot set stroke and pass in a color maybe i'll keep this as black color dot black all right let's take a look and here is our rectangle and we added a black border around our rectangle like i said with a lot of these objects you do have various properties and methods to change them for example with rectangles there is a site opacity and set rotate method as well although i've already shown that so that would be kind of redundant so feel free to experiment with some of those as well now let's move on to triangles and to create a triangle we actually need to use the polygon class polygon and let's call this triangle equals new polygon as we know triangles have three points we need to add a set of coordinates for each point so to do that type in the name of your polygon in this case it is triangle dot get points we'll do a little bit of method training at the end add dot set all the set all method takes double data types all of our coordinates are going to be doubles so after each coordinate you can add point zero or you can do some casting too either way so let's say my first point is 200 by 200 and to make this more readable i'm going to add each coordinate to a new line it's not necessary but it helps me read this so these are the coordinates for my first point and let's set the coordinates for the second point 300.0 and 300.0 works and the third point 200.0 and 300.0 you can always change these around too let's change the color of this triangle triangle dot set fill and pick a color i will pick yellow and we need to add this triangle node this polygon node to our root node at the end root dot get children dot add triangle and we should have a triangle on our scene let's move on to circles circle circle equals new circle when we set the location of our circle we set center x and y this is where the center of our circle is going to appear set center x and then y so let's say 350 for x and the same for y set center y 350 we'll need to set a radius as well for the circle so type in the name your circle dot set radius and pick a radius i will pick 50 and we can set a fill color as well circle dot set fill and then pick a color i think this time i'll pick orange so it kind of resembles a basketball and we need to add the circle node to our root node root dot get children dot add circle and we should have an orange circle on our scene it's a basketball last but not least we're going to add an image to our scene i would like to add an image of a slice of pizza to my scene for some reason so copy your file and then go to your source folder and then paste your image file my image is called pizza.png i'm going to create an image out of this file so let's do that maybe here image image equals new image then within the constructor of your image list the file path or the file name this is within my source folder i only have to list the file name if for some reason this doesn't work you can always troubleshoot using the file path so i'm going to go to properties and you can copy the location so if the following steps don't work for you you can always troubleshoot and try the file path instead uh make sure this is within quotes though but since this is within my source folder i only need to list the file name now i need to create an image view object image view and i will call this image view equals new image view and pass in my image to the image view constructor and we will set the coordinates of our image view imageview.set x i'll set this to 400 and we will set y as well image view dot set y i will keep that the same as 400 and we need to add this image view to our root node so root dot get children dot add your image view and now there should be a slice of pizza on my scene for some reason i don't know why i decided that well friends that's the basics of scenes it's a drawing surface for graphical content and a container for various nodes if you would like a copy of all this code i will post all of this in the comments section down below but yeah that is how scenes work in javafx hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
