With timestamps:

00:00 - hey everybody today I got to talk about
00:02 - class variables in Python class
00:04 - variables are shared among all instances
00:08 - meaning objects created from a class
00:10 - instance variables are defined inside of
00:13 - the Constructor class variables are
00:15 - defined outside of the Constructor with
00:18 - class variables they allow you to share
00:20 - data among all objects created from the
00:23 - class with instance variables each
00:26 - object has their own version with a
00:28 - class variable all those objects share
00:31 - one variable here's an example we will
00:34 - create a class of
00:37 - student we also need a
00:39 - Constructor when we create a student
00:41 - object this Constructor is automatically
00:44 - going to be called but we need to pass
00:46 - in some arguments we are provided with
00:48 - self self refers to the object we're
00:51 - currently working with we will set up a
00:54 - name parameter and an age parameter we
00:57 - will assign self the object currently
01:00 - working with set the name attribute to
01:03 - equal the data for the name that we
01:06 - receive from this parameter and self. AG
01:10 - equals age let's construct two student
01:14 - objects we will have student one equals
01:18 - then call the Constructor for
01:21 - student so type the name of the class
01:23 - followed by a set of parentheses to
01:25 - invoke it this will automatically call
01:27 - The Constructor but we have to pass in
01:29 - data for the name and the age for the
01:31 - name let's pass in SpongeBob because
01:34 - basically everybody in the world knows
01:36 - who SpongeBob is I don't know how old
01:38 - SpongeBob is we'll say he's 30 we'll
01:41 - create another student object which we
01:43 - will refer to as student 2 we will call
01:47 - the Constructor of our student class
01:50 - pass in data for the name and age
01:53 - student two will be Patrick Patrick will
01:56 - be
01:57 - 35 okay let's make sure this works
02:01 - let's print student
02:03 - 1's name followed by student 1's
02:10 - age and we should get SpongeBob and his
02:13 - age is 30 let's print student 2's name
02:17 - and student 2's age Patrick Patrick is
02:20 - 35 now we'll create a class variable
02:23 - class variables are defined outside the
02:26 - Constructor and they are shared among
02:28 - all objects created from that class each
02:32 - object has their own name and age
02:34 - property these are instance variables
02:36 - but class variables are defined outside
02:39 - the Constructor each object will share
02:42 - this one variable so if we're working
02:44 - with students let's say there is a class
02:49 - variable of class year what is the
02:53 - graduating year of this
02:56 - class
02:58 - 2024 now now let's print student 1's
03:02 - graduating
03:04 - year print student
03:07 - one.
03:09 - class
03:14 - year okay so SpongeBob has a class year
03:18 - of 2024 that's when he's graduating
03:21 - let's check student
03:22 - [Music]
03:25 - 2 Patrick his age is 35 his graduating
03:29 - class year is
03:31 - 2024 now with class variables you can
03:35 - access them through any one object such
03:37 - as student one or student 2 it's good
03:39 - practice to access a class variable by
03:42 - the name of the class rather than any
03:44 - object created from the class since
03:47 - we're accessing class year we'll access
03:50 - this class variable by the name of the
03:52 - class of student make sure the S is
03:57 - capital this helps with clarity and
04:00 - readability if I was looking at this
04:02 - print statement I can tell that class
04:04 - year is a class variable because we're
04:06 - accessing it directly from the class and
04:09 - not any instance from this class without
04:12 - looking at this class I can't tell if
04:15 - class year is an instance variable or a
04:17 - class variable but if I access it via
04:20 - the class name it's more explicit so
04:23 - it's good practice to access a class
04:25 - variable by the class name itself and
04:28 - not any one instance of this
04:30 - class let's create another class
04:33 - variable we'll create a class variable
04:36 - to keep track of how many students we
04:38 - have created this class variable will be
04:41 - num students meaning number of students
04:44 - equals z So within our Constructor we
04:48 - can write any code that we want this
04:50 - code will always be executed when we
04:53 - instantiate an object I would like to
04:55 - take our number of students and
04:58 - increment it by one each time we
05:00 - construct a new student object so
05:02 - instead of using self self refers to the
05:05 - object we're currently working with if
05:07 - we're constructing student one just
05:09 - imagine we're replacing self with
05:11 - student one or student two if we were
05:14 - constructing student two if we're going
05:17 - to be modifying a class variable in
05:19 - place of self we'll use the name of the
05:22 - class student access our class of
05:25 - student get the class variable of number
05:28 - of students
05:30 - then I will increment it by one plus
05:33 - equals
05:34 - 1 we are constructing two student
05:38 - objects I will
05:40 - print access our class of
05:43 - student get the number of students and
05:46 - print it we're constructing two student
05:49 - objects if I print the number of
05:51 - students that we have it should be two
05:54 - then just to be sure that this is
05:55 - working let's construct a third student
05:58 - object student student 3 equals student
06:03 - this student will have a name of
06:05 - Squidward Squidward's age will be
06:09 - 55 now we have three
06:12 - students and for good measure let's
06:14 - construct one
06:16 - more student 4 equals we will create a
06:20 - new student with a name of Sandy sy's
06:25 - age will be
06:26 - 27 the number of students is now four
06:30 - just as an
06:32 - exercise using an F string let's print
06:35 - the student classes class year as well
06:38 - as the number of
06:39 - students I will print use an F string my
06:46 - graduating class of let's add a
06:50 - placeholder access the class of
06:54 - student then access the class
06:57 - Year my graduating class of
07:02 - 2024 has then we need the number of
07:04 - students we'll add a
07:06 - placeholder access the class of
07:09 - student access the number of
07:12 - students has
07:14 - blank
07:17 - students let's see if this works my
07:20 - graduating class of 2024 has four
07:23 - students now if I were to change 2024 to
07:26 - 2025 my graduating class of 2025 has
07:31 - four
07:32 - students let's print the name of each
07:35 - student these are instance variables
07:38 - student one.
07:42 - name then we need Student two three and
07:48 - four my graduating class of 2025 has
07:51 - four students SpongeBob Patrick
07:54 - Squidward Sandy all right everybody so
07:57 - those are class variables class
07:59 - variables are shared among all instances
08:02 - of a class they are defined outside of
08:05 - the Constructor the benefit is that they
08:07 - allow you to share data among all
08:09 - objects created from that class and well
08:12 - everybody those are class variables in
08:14 - Python

Cleaned transcript:

hey everybody today I got to talk about class variables in Python class variables are shared among all instances meaning objects created from a class instance variables are defined inside of the Constructor class variables are defined outside of the Constructor with class variables they allow you to share data among all objects created from the class with instance variables each object has their own version with a class variable all those objects share one variable here's an example we will create a class of student we also need a Constructor when we create a student object this Constructor is automatically going to be called but we need to pass in some arguments we are provided with self self refers to the object we're currently working with we will set up a name parameter and an age parameter we will assign self the object currently working with set the name attribute to equal the data for the name that we receive from this parameter and self. AG equals age let's construct two student objects we will have student one equals then call the Constructor for student so type the name of the class followed by a set of parentheses to invoke it this will automatically call The Constructor but we have to pass in data for the name and the age for the name let's pass in SpongeBob because basically everybody in the world knows who SpongeBob is I don't know how old SpongeBob is we'll say he's 30 we'll create another student object which we will refer to as student 2 we will call the Constructor of our student class pass in data for the name and age student two will be Patrick Patrick will be 35 okay let's make sure this works let's print student 1's name followed by student 1's age and we should get SpongeBob and his age is 30 let's print student 2's name and student 2's age Patrick Patrick is 35 now we'll create a class variable class variables are defined outside the Constructor and they are shared among all objects created from that class each object has their own name and age property these are instance variables but class variables are defined outside the Constructor each object will share this one variable so if we're working with students let's say there is a class variable of class year what is the graduating year of this class 2024 now now let's print student 1's graduating year print student one. class year okay so SpongeBob has a class year of 2024 that's when he's graduating let's check student 2 Patrick his age is 35 his graduating class year is 2024 now with class variables you can access them through any one object such as student one or student 2 it's good practice to access a class variable by the name of the class rather than any object created from the class since we're accessing class year we'll access this class variable by the name of the class of student make sure the S is capital this helps with clarity and readability if I was looking at this print statement I can tell that class year is a class variable because we're accessing it directly from the class and not any instance from this class without looking at this class I can't tell if class year is an instance variable or a class variable but if I access it via the class name it's more explicit so it's good practice to access a class variable by the class name itself and not any one instance of this class let's create another class variable we'll create a class variable to keep track of how many students we have created this class variable will be num students meaning number of students equals z So within our Constructor we can write any code that we want this code will always be executed when we instantiate an object I would like to take our number of students and increment it by one each time we construct a new student object so instead of using self self refers to the object we're currently working with if we're constructing student one just imagine we're replacing self with student one or student two if we were constructing student two if we're going to be modifying a class variable in place of self we'll use the name of the class student access our class of student get the class variable of number of students then I will increment it by one plus equals 1 we are constructing two student objects I will print access our class of student get the number of students and print it we're constructing two student objects if I print the number of students that we have it should be two then just to be sure that this is working let's construct a third student object student student 3 equals student this student will have a name of Squidward Squidward's age will be 55 now we have three students and for good measure let's construct one more student 4 equals we will create a new student with a name of Sandy sy's age will be 27 the number of students is now four just as an exercise using an F string let's print the student classes class year as well as the number of students I will print use an F string my graduating class of let's add a placeholder access the class of student then access the class Year my graduating class of 2024 has then we need the number of students we'll add a placeholder access the class of student access the number of students has blank students let's see if this works my graduating class of 2024 has four students now if I were to change 2024 to 2025 my graduating class of 2025 has four students let's print the name of each student these are instance variables student one. name then we need Student two three and four my graduating class of 2025 has four students SpongeBob Patrick Squidward Sandy all right everybody so those are class variables class variables are shared among all instances of a class they are defined outside of the Constructor the benefit is that they allow you to share data among all objects created from that class and well everybody those are class variables in Python
