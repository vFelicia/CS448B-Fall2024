With timestamps:

00:00 - hey what's going on everybody in today's
00:01 - video we're going to create a Color
00:03 - Picker program using react this serves
00:05 - as more of an exercise now that we know
00:07 - how the UST State Hook and the onchange
00:09 - event handlers work so let's get started
00:12 - all right let's begin everybody within
00:14 - our source folder we'll create a new
00:16 - file for a Color Picker
00:18 - component this will be a jsx file we
00:22 - will use function based components
00:24 - function Color Picker there are no
00:28 - parameters then let's be sure to export
00:31 - this export default Color
00:35 - Picker we need to return something for
00:38 - the time being I'm going to return a
00:40 - fragment just so that everything works
00:43 - going back to our app component we will
00:46 - import our Color Picker component from
00:50 - its
00:52 - location SL colorpicker
00:56 - djsx then let's include one Color Picker
01:00 - component and that is all we need with
01:02 - the app component heading to the Color
01:05 - Picker component we will need to import
01:07 - the UST State hook import from react
01:11 - we'll use object destructuring just to
01:13 - get the use State Hook from
01:18 - react within our Color Picker function
01:21 - at the top we'll use the UST State hook
01:23 - to create a stateful color
01:25 - variable const we're going to use array
01:28 - D structuring and and create a color and
01:31 - a Setter function for that color we will
01:35 - use the use State
01:37 - hook for the color if you would like to
01:39 - set an initial color you can do that I
01:42 - recommend using heximal values to keep
01:44 - it simple for example if you would like
01:47 - white that would be
01:48 - 6fs personally I'm a fan of using hsl
01:52 - values for Hue saturation and lightness
01:55 - but that can get kind of complicated you
01:57 - would need to pass in a JavaScript
01:59 - object with those three properties we'll
02:01 - stick with heximal values just to keep
02:03 - it
02:04 - simple then we'll create our HTML
02:06 - elements So within the return statement
02:09 - I will create a div
02:13 - element this div element will have a
02:16 - class
02:17 - name of Color Picker
02:22 - container with react when using CSS I
02:25 - like to use a hyphenated naming
02:27 - convention this development will contain
02:29 - everything we need for our Color Picker
02:31 - component within this St elopment I will
02:33 - create an H1 element for a heading The
02:37 - Heading will be Color
02:40 - Picker after this H1 element I will
02:42 - create a nested div
02:44 - element this nested div element will
02:47 - have a class name equal to
02:51 - color- display this is what's going to
02:54 - change color this
02:56 - development now I will set the style
02:59 - attribute equal to some JavaScript if I
03:02 - attempt to set the background
03:05 - color to our color
03:08 - variable well with any CSS properties in
03:11 - JavaScript we need to enclose them
03:13 - within an object so we will use a double
03:16 - set of curly braces and that would work
03:19 - if you're embedding some JavaScript and
03:21 - then you're changing some CSS properties
03:23 - you'll need to enclose those CSS
03:25 - properties within a JavaScript object
03:28 - within this nested Dev element will
03:30 - create a paragraph
03:31 - element that has text of selected
03:36 - color embed some JavaScript include our
03:39 - stateful color
03:41 - variable after this development I will
03:44 - create a
03:46 - label this label will have text of
03:50 - select a
03:53 - color I'll create an input
03:56 - element
03:58 - input
04:02 - the type attribute is going to be
04:04 - color we'll have an input element for a
04:07 - color the default is black I'll set the
04:11 - value equal
04:13 - to our state full color
04:16 - variable then to change the color I will
04:20 - set the onchange event handler equal to
04:24 - a call back to a
04:25 - function we will handle color change
04:30 - but we still need to Define this
04:31 - function that's the last step in this
04:34 - component so we will create a function
04:37 - to handle color
04:40 - change there will be one parameter an
04:43 - event all we're going to do is use our
04:46 - Setter function for our color whichever
04:49 - color we select that's going to be its
04:52 - value either RGB hsl or
04:56 - heximal we will access this event
05:01 - Target access its value set the color to
05:05 - whatever that value is so if I set the
05:08 - color to be I don't know blue well that
05:12 - color is going to change to be blue and
05:15 - that is everything we need for this
05:16 - component we haven't applied any CSS yet
05:19 - so it's not very impressive although it
05:21 - does have
05:22 - functionality so be sure to save
05:24 - everything we will go to our CSS
05:27 - stylesheet let's select the body of our
05:30 - document I will set the font family to
05:34 - be aial with a backup of s
05:37 - serif I will take our class of Color
05:42 - Picker
05:45 - container this is what contains
05:47 - everything this div
05:50 - element take our Color Picker container
05:54 - I will use flexbox because I like
05:57 - flexbox display Flex
06:00 - Flex direction will be a column right
06:04 - now it's a
06:05 - row and
06:07 - align items in the
06:10 - center much
06:12 - better let's take our H1 element that
06:15 - would be this heading we are selecting
06:19 - H1 let's add some margin of 50
06:24 - pixels and increase the font size to 3
06:28 - RM
06:31 - let's select our color display that
06:33 - would be this element right
06:35 - here that has a class of color-
06:40 - display I will set a width of 300
06:45 - pixels a height of 300
06:49 - pixels I'll use flex box for all the
06:52 - elements within display
06:56 - Flex justify content
07:00 - tent in the
07:03 - center then
07:05 - align items
07:08 - Center I'll add a border around this
07:11 - element border 5 pixel
07:16 - solid I'll use hsl for the
07:21 - color let's pick something light gray
07:24 - I'll set the lightness to be
07:26 - 80% then I'll round the corners with
07:28 - border
07:30 - radius border
07:32 - radius 25
07:35 - pixels I'll add a little bit of margin
07:37 - to the bottom margin bottom 25
07:42 - pixels so when we select a color it's
07:45 - going to
07:48 - change I'm going to add a transition
07:50 - effect so the transition is a little
07:52 - more
07:53 - smooth I will set the transition
07:57 - property after a quarter of a second
08:00 - 0.25 seconds we will ease this
08:04 - transition so this animation should be
08:06 - more
08:13 - smooth let's select this paragraph
08:16 - element and style it take our color
08:18 - display
08:20 - class access the paragraph element
08:23 - within for the color I'll use hsl
08:26 - values 0 0%
08:30 - then
08:32 - 20% this will make the text a dark gray
08:34 - color although it's kind of small you
08:36 - can't really see
08:37 - it I'll increase the font
08:40 - size to 2
08:43 - RM then text to line
08:48 - Center let's work on the text of the
08:50 - label we're going to select our label
08:54 - increase the font size to 1.5
08:58 - RM let's set the font weight to be
09:03 - bold and add a little bit of margin to
09:06 - the
09:07 - bottom margin bottom 10
09:11 - pixels the last thing we need to do is
09:13 - change this input element so it's a
09:14 - little bigger I will select our input
09:17 - element but I don't want to select all
09:19 - input elements I'll use an attribute
09:21 - selector select all input elements that
09:24 - have a type of
09:27 - color so that'll be just this
09:29 - one I will set a width of 75
09:34 - pixels a height of 50
09:39 - pixels some padding of 5
09:43 - pixels I'll set a border radius to round
09:45 - the
09:47 - corners of 10
09:49 - pixels then set the border to be 3
09:52 - pixels solid and for the color I'll use
09:56 - hsl zero for the hue zero for the
10:00 - saturation 80% for the lightness that
10:03 - should give us a thick gray border all
10:06 - right everybody so that is a Color
10:07 - Picker program you can create as an
10:09 - exercise for
10:14 - react

Cleaned transcript:

hey what's going on everybody in today's video we're going to create a Color Picker program using react this serves as more of an exercise now that we know how the UST State Hook and the onchange event handlers work so let's get started all right let's begin everybody within our source folder we'll create a new file for a Color Picker component this will be a jsx file we will use function based components function Color Picker there are no parameters then let's be sure to export this export default Color Picker we need to return something for the time being I'm going to return a fragment just so that everything works going back to our app component we will import our Color Picker component from its location SL colorpicker djsx then let's include one Color Picker component and that is all we need with the app component heading to the Color Picker component we will need to import the UST State hook import from react we'll use object destructuring just to get the use State Hook from react within our Color Picker function at the top we'll use the UST State hook to create a stateful color variable const we're going to use array D structuring and and create a color and a Setter function for that color we will use the use State hook for the color if you would like to set an initial color you can do that I recommend using heximal values to keep it simple for example if you would like white that would be 6fs personally I'm a fan of using hsl values for Hue saturation and lightness but that can get kind of complicated you would need to pass in a JavaScript object with those three properties we'll stick with heximal values just to keep it simple then we'll create our HTML elements So within the return statement I will create a div element this div element will have a class name of Color Picker container with react when using CSS I like to use a hyphenated naming convention this development will contain everything we need for our Color Picker component within this St elopment I will create an H1 element for a heading The Heading will be Color Picker after this H1 element I will create a nested div element this nested div element will have a class name equal to color display this is what's going to change color this development now I will set the style attribute equal to some JavaScript if I attempt to set the background color to our color variable well with any CSS properties in JavaScript we need to enclose them within an object so we will use a double set of curly braces and that would work if you're embedding some JavaScript and then you're changing some CSS properties you'll need to enclose those CSS properties within a JavaScript object within this nested Dev element will create a paragraph element that has text of selected color embed some JavaScript include our stateful color variable after this development I will create a label this label will have text of select a color I'll create an input element input the type attribute is going to be color we'll have an input element for a color the default is black I'll set the value equal to our state full color variable then to change the color I will set the onchange event handler equal to a call back to a function we will handle color change but we still need to Define this function that's the last step in this component so we will create a function to handle color change there will be one parameter an event all we're going to do is use our Setter function for our color whichever color we select that's going to be its value either RGB hsl or heximal we will access this event Target access its value set the color to whatever that value is so if I set the color to be I don't know blue well that color is going to change to be blue and that is everything we need for this component we haven't applied any CSS yet so it's not very impressive although it does have functionality so be sure to save everything we will go to our CSS stylesheet let's select the body of our document I will set the font family to be aial with a backup of s serif I will take our class of Color Picker container this is what contains everything this div element take our Color Picker container I will use flexbox because I like flexbox display Flex Flex direction will be a column right now it's a row and align items in the center much better let's take our H1 element that would be this heading we are selecting H1 let's add some margin of 50 pixels and increase the font size to 3 RM let's select our color display that would be this element right here that has a class of color display I will set a width of 300 pixels a height of 300 pixels I'll use flex box for all the elements within display Flex justify content tent in the center then align items Center I'll add a border around this element border 5 pixel solid I'll use hsl for the color let's pick something light gray I'll set the lightness to be 80% then I'll round the corners with border radius border radius 25 pixels I'll add a little bit of margin to the bottom margin bottom 25 pixels so when we select a color it's going to change I'm going to add a transition effect so the transition is a little more smooth I will set the transition property after a quarter of a second 0.25 seconds we will ease this transition so this animation should be more smooth let's select this paragraph element and style it take our color display class access the paragraph element within for the color I'll use hsl values 0 0% then 20% this will make the text a dark gray color although it's kind of small you can't really see it I'll increase the font size to 2 RM then text to line Center let's work on the text of the label we're going to select our label increase the font size to 1.5 RM let's set the font weight to be bold and add a little bit of margin to the bottom margin bottom 10 pixels the last thing we need to do is change this input element so it's a little bigger I will select our input element but I don't want to select all input elements I'll use an attribute selector select all input elements that have a type of color so that'll be just this one I will set a width of 75 pixels a height of 50 pixels some padding of 5 pixels I'll set a border radius to round the corners of 10 pixels then set the border to be 3 pixels solid and for the color I'll use hsl zero for the hue zero for the saturation 80% for the lightness that should give us a thick gray border all right everybody so that is a Color Picker program you can create as an exercise for react
