With timestamps:

00:00 - hey what's going on everybody it's you
00:01 - bro hope you're doing well
00:03 - and in this video i'm going to explain
00:04 - the return statement in python so
00:06 - sit back relax and enjoy the show
00:12 - if you find this video helpful please
00:13 - remember to like
00:15 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - alright people let's begin the return
00:21 - statement is used within functions to
00:24 - send
00:24 - python values or objects back to the
00:27 - caller
00:27 - these values or objects are known as the
00:30 - function's
00:30 - return value so do you know how with
00:32 - functions we can pass
00:34 - arguments to a function and then our
00:36 - function can do something with those
00:37 - arguments
00:38 - well not only that but our function can
00:40 - pass some value
00:42 - or object back to the caller so what
00:44 - we'll do for this example
00:46 - is create a function that will simply
00:48 - multiply two numbers together
00:50 - and return the result back to the caller
00:53 - so let's define
00:54 - a function called multiply and we'll set
00:56 - up two parameters for this function
00:58 - let's say number one and number two
01:02 - and what we'll do is say result
01:05 - equals number one times number two
01:09 - and then at the end we can return
01:11 - something what do we want to return
01:12 - let's return whatever the result is
01:14 - now when we call this function we will
01:16 - pass in two values
01:18 - as arguments let's say we would like to
01:20 - multiply six
01:21 - times eight so when we run this while we
01:24 - can't actually see anything
01:26 - when we return the result after
01:27 - multiplying numbers
01:29 - one and two it's going to return the
01:31 - result back to the caller
01:33 - in order to see the value that is
01:35 - returned back to the caller
01:36 - one way in which we can do this is to
01:38 - print the value that is returned
01:41 - within a print statement so what we'll
01:43 - do is print
01:44 - the value that is returned after calling
01:47 - the multiply function
01:48 - so 6 times 8 is really great 6 times 8
01:51 - is 48
01:52 - now one other thing that we can do is
01:55 - store the returned value within a
01:57 - variable
01:58 - so let's say x equals multiply
02:02 - 6 times 8 and then we will print
02:04 - whatever x is
02:06 - so the result is still the same of 48
02:09 - now with the return value there is
02:11 - another way in which we could write this
02:13 - that uses
02:14 - less lines of code so we'll delete this
02:16 - first line and instead of returning
02:18 - a variable called result what we'll do
02:20 - is just return
02:22 - number one times number two and this
02:24 - would work the same as it does before
02:26 - but it's written in less lines of code
02:29 - so that's another way in which you could
02:30 - write this
02:31 - all right everybody so that is the
02:33 - return statement functions can send
02:35 - python values or objects
02:37 - back to the caller these values or
02:39 - objects are known as the function's
02:41 - return value you can either print this
02:43 - value directly to the console window
02:46 - or you can store it within a variable or
02:48 - some other location
02:50 - and well ladies and gentlemen that is
02:52 - how the return statement works in python
02:55 - hey you yeah i'm talking to you if you
02:58 - learned something new
02:59 - then help me help you in three easy
03:01 - steps
03:02 - by smashing that like button drop a
03:04 - comment down below
03:05 - and subscribe if you'd like to become a
03:07 - fellow bro
03:20 - [Music]
03:29 - you

Cleaned transcript:

hey what's going on everybody it's you bro hope you're doing well and in this video i'm going to explain the return statement in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running alright people let's begin the return statement is used within functions to send python values or objects back to the caller these values or objects are known as the function's return value so do you know how with functions we can pass arguments to a function and then our function can do something with those arguments well not only that but our function can pass some value or object back to the caller so what we'll do for this example is create a function that will simply multiply two numbers together and return the result back to the caller so let's define a function called multiply and we'll set up two parameters for this function let's say number one and number two and what we'll do is say result equals number one times number two and then at the end we can return something what do we want to return let's return whatever the result is now when we call this function we will pass in two values as arguments let's say we would like to multiply six times eight so when we run this while we can't actually see anything when we return the result after multiplying numbers one and two it's going to return the result back to the caller in order to see the value that is returned back to the caller one way in which we can do this is to print the value that is returned within a print statement so what we'll do is print the value that is returned after calling the multiply function so 6 times 8 is really great 6 times 8 is 48 now one other thing that we can do is store the returned value within a variable so let's say x equals multiply 6 times 8 and then we will print whatever x is so the result is still the same of 48 now with the return value there is another way in which we could write this that uses less lines of code so we'll delete this first line and instead of returning a variable called result what we'll do is just return number one times number two and this would work the same as it does before but it's written in less lines of code so that's another way in which you could write this all right everybody so that is the return statement functions can send python values or objects back to the caller these values or objects are known as the function's return value you can either print this value directly to the console window or you can store it within a variable or some other location and well ladies and gentlemen that is how the return statement works in python hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
