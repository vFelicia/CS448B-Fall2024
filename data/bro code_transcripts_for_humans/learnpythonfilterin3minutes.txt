With timestamps:

00:00 - what is going on everybody today I'm
00:02 - going to show you how we can use the
00:03 - filter function in Python the filter
00:06 - function returns all elements that pass
00:08 - a condition some sort of test we pass in
00:11 - a function and a collection something
00:14 - that's iterable in this example we will
00:17 - create a list of grades such as student
00:19 - grades make up some numbers
00:33 - here is my list of grades I will filter
00:36 - any grades that are 60 or above and
00:39 - store them within a new list named
00:41 - passing
00:45 - grades if your grade is 60 or above you
00:48 - pass We'll add you to this new list so
00:52 - we are going to use the filter
00:54 - function we pass in a function and our
00:58 - collection we can either declare
01:00 - function or passing a Lambda function in
01:02 - this first example let's declare a
01:04 - function of is
01:07 - passing we will pass in a
01:11 - Grade now with this function we have to
01:14 - check a condition we will return a
01:17 - Boolean value by examining our grade
01:20 - then checking to see if the grade is
01:23 - greater than or equal to 60 if so you
01:26 - pass if not we return false we will
01:29 - we'll pass in the name of this function
01:31 - as the first
01:33 - argument the second argument to the
01:35 - filter function will be our collection
01:37 - of
01:39 - grades now here's what happens if I
01:41 - print my passing
01:45 - grades we are given a filter
01:48 - object it is iterable if we need to look
01:51 - at the
01:52 - elements for every grade in passing
01:57 - grades I will print each grade
02:03 - grade so here are the passing grades 91
02:06 - 83 75 67 all the grades are 60 or
02:12 - above we could convert it back into a
02:14 - list by typc casting it enclose the
02:18 - filter function within the list
02:21 - function and this will stay as a list I
02:24 - will print my passing
02:26 - grades and now we can see them 91 83 75
02:32 - 67 rather than passing in the name of a
02:35 - function to the filter function we don't
02:38 - necessarily need to think of a unique
02:39 - name for this function we could pass in
02:42 - a Lambda function instead that does the
02:44 - same
02:45 - thing rather than passing a function
02:47 - name we will pass in a Lambda function a
02:50 - small Anonymous function we type Lambda
02:54 - the first parameter which was grade
02:57 - colon then our condition we we will
03:00 - return a Boolean by stating is our grade
03:04 - greater than or equal to
03:07 - 60 and this would work too and it does
03:10 - help keep the name space clean because
03:12 - we don't constantly need to think of
03:14 - unique function names all right
03:16 - everybody so that is the filter function
03:18 - we pass in a function that checks a
03:21 - condition as well as a collection the
03:24 - filter function takes each element
03:26 - within that collection and runs it past
03:28 - a condition
03:30 - if it's true we can put it within a new
03:32 - list or other type of collection using a
03:35 - list comprehension is another
03:36 - possibility for this honestly I think a
03:38 - list comprehension would still be easier
03:41 - but you should still be familiar with
03:42 - both methods you don't know when you're
03:44 - going to run into either but hey at
03:46 - least you're familiar with the filter
03:47 - function and that is the filter function
03:50 - in Python

Cleaned transcript:

what is going on everybody today I'm going to show you how we can use the filter function in Python the filter function returns all elements that pass a condition some sort of test we pass in a function and a collection something that's iterable in this example we will create a list of grades such as student grades make up some numbers here is my list of grades I will filter any grades that are 60 or above and store them within a new list named passing grades if your grade is 60 or above you pass We'll add you to this new list so we are going to use the filter function we pass in a function and our collection we can either declare function or passing a Lambda function in this first example let's declare a function of is passing we will pass in a Grade now with this function we have to check a condition we will return a Boolean value by examining our grade then checking to see if the grade is greater than or equal to 60 if so you pass if not we return false we will we'll pass in the name of this function as the first argument the second argument to the filter function will be our collection of grades now here's what happens if I print my passing grades we are given a filter object it is iterable if we need to look at the elements for every grade in passing grades I will print each grade grade so here are the passing grades 91 83 75 67 all the grades are 60 or above we could convert it back into a list by typc casting it enclose the filter function within the list function and this will stay as a list I will print my passing grades and now we can see them 91 83 75 67 rather than passing in the name of a function to the filter function we don't necessarily need to think of a unique name for this function we could pass in a Lambda function instead that does the same thing rather than passing a function name we will pass in a Lambda function a small Anonymous function we type Lambda the first parameter which was grade colon then our condition we we will return a Boolean by stating is our grade greater than or equal to 60 and this would work too and it does help keep the name space clean because we don't constantly need to think of unique function names all right everybody so that is the filter function we pass in a function that checks a condition as well as a collection the filter function takes each element within that collection and runs it past a condition if it's true we can put it within a new list or other type of collection using a list comprehension is another possibility for this honestly I think a list comprehension would still be easier but you should still be familiar with both methods you don't know when you're going to run into either but hey at least you're familiar with the filter function and that is the filter function in Python
