With timestamps:

00:02 - all right we're back at it again so
00:04 - let's talk about while loops a while
00:06 - loop will repeat a section of code
00:08 - possibly unlimited times we will
00:10 - continue some section of code while some
00:13 - condition remains true and it's possible
00:16 - that a while loop might not execute at
00:17 - all depending on what our condition is
00:19 - so here's an example let's create a
00:21 - program that will ask a user for their
00:23 - name if they attempt to skip that prompt
00:26 - then we will keep on asking them for
00:27 - their name indefinitely so here's how we
00:29 - can write a program like that using a
00:31 - while loop we'll need to begin with a
00:33 - character array let's say name and this
00:35 - will be 25 bytes and we will create a
00:38 - prompt using printf
00:42 - what's your name we can use scanf for
00:45 - user input but with names that may
00:47 - contain spaces i'm going to use fgets
00:49 - instead
00:51 - refer to the video on user input to
00:53 - learn more about fgets so i would like
00:55 - to assign my variable name
00:58 - set the size of the user input 25 to
01:01 - match what we have
01:02 - then type stdn for standard input then
01:06 - we just need to get rid of the newline
01:08 - character at the end of our user input
01:10 - so we can write something like this
01:12 - set our character array of name and
01:15 - within the straight brackets we will use
01:17 - the string length function
01:20 - pass in name
01:22 - -1
01:24 - and we will set this equal to a null
01:26 - character and then at the end we will
01:29 - display the user's name printf
01:32 - let's say hello and then use a format
01:35 - specifier for strings which is s
01:37 - and we will display a user's name
01:40 - okay this is what this looks like
01:41 - currently what's your name i'll type my
01:44 - name hit enter
01:46 - and it says hello bro now what if i
01:49 - don't type in anything like i just hit
01:51 - enter
01:52 - what's your name i'm going to hit enter
01:54 - hello and then there is no name here how
01:57 - can i force a user to type in something
02:00 - well i could use a while loop and that
02:02 - will prompt a user to enter their name
02:04 - indefinitely
02:05 - so here's how to create a while loop
02:07 - type while parentheses
02:09 - curly braces and we need a condition
02:12 - what are we going to check we will
02:13 - continue this while loop while some
02:16 - condition remains true our condition to
02:18 - check to see if we have an empty string
02:20 - we could use the string length function
02:24 - pass in name and check to see if this is
02:27 - equal to zero
02:29 - if it is zero that means that somebody
02:31 - just hit enter without typing in
02:32 - anything
02:33 - so let's print a message to yell at them
02:37 - you
02:38 - did not enter your name
02:41 - and then let's copy this section of code
02:44 - and paste it to reprompt the user to
02:46 - type in their name
02:48 - and that's all there is to it so while
02:50 - this condition remains true we will
02:53 - execute this code forever so let's try
02:55 - it again
02:57 - okay what's your name i'm going to hit
02:59 - enter you did not enter your name what's
03:01 - your name no no no no
03:04 - okay i give up
03:06 - hello whatever your name is so yeah
03:08 - that's basically a while loop it repeats
03:10 - a section of code possibly unlimited
03:13 - times there's a lot of overlap where you
03:16 - could use either a for loop or a while
03:18 - loop and we execute some body of code
03:21 - while some condition remains true
03:23 - however a while loop might not execute
03:26 - at all if this condition is false to
03:28 - begin with so if the user actually does
03:30 - type in something well this condition is
03:33 - false and we do not execute this body of
03:36 - code so yeah that's a while loop it
03:38 - repeats a section of code possibly
03:40 - unlimited times if you would like a copy
03:42 - of this code i will post this to the
03:44 - comment section down below and well yeah
03:46 - those are while loops in c

Cleaned transcript:

all right we're back at it again so let's talk about while loops a while loop will repeat a section of code possibly unlimited times we will continue some section of code while some condition remains true and it's possible that a while loop might not execute at all depending on what our condition is so here's an example let's create a program that will ask a user for their name if they attempt to skip that prompt then we will keep on asking them for their name indefinitely so here's how we can write a program like that using a while loop we'll need to begin with a character array let's say name and this will be 25 bytes and we will create a prompt using printf what's your name we can use scanf for user input but with names that may contain spaces i'm going to use fgets instead refer to the video on user input to learn more about fgets so i would like to assign my variable name set the size of the user input 25 to match what we have then type stdn for standard input then we just need to get rid of the newline character at the end of our user input so we can write something like this set our character array of name and within the straight brackets we will use the string length function pass in name 1 and we will set this equal to a null character and then at the end we will display the user's name printf let's say hello and then use a format specifier for strings which is s and we will display a user's name okay this is what this looks like currently what's your name i'll type my name hit enter and it says hello bro now what if i don't type in anything like i just hit enter what's your name i'm going to hit enter hello and then there is no name here how can i force a user to type in something well i could use a while loop and that will prompt a user to enter their name indefinitely so here's how to create a while loop type while parentheses curly braces and we need a condition what are we going to check we will continue this while loop while some condition remains true our condition to check to see if we have an empty string we could use the string length function pass in name and check to see if this is equal to zero if it is zero that means that somebody just hit enter without typing in anything so let's print a message to yell at them you did not enter your name and then let's copy this section of code and paste it to reprompt the user to type in their name and that's all there is to it so while this condition remains true we will execute this code forever so let's try it again okay what's your name i'm going to hit enter you did not enter your name what's your name no no no no okay i give up hello whatever your name is so yeah that's basically a while loop it repeats a section of code possibly unlimited times there's a lot of overlap where you could use either a for loop or a while loop and we execute some body of code while some condition remains true however a while loop might not execute at all if this condition is false to begin with so if the user actually does type in something well this condition is false and we do not execute this body of code so yeah that's a while loop it repeats a section of code possibly unlimited times if you would like a copy of this code i will post this to the comment section down below and well yeah those are while loops in c
