With timestamps:

00:02 - all right constructors a constructor is
00:04 - a special method found within a class it
00:07 - has the same name
00:08 - as the class name in the last video we
00:10 - created a human class but it's missing a
00:12 - constructor
00:13 - if we do not explicitly create a
00:15 - constructor there is a hidden one behind
00:17 - the scenes that is automatically called
00:19 - and it is used to create an
00:20 - object for us so let's explicitly create
00:23 - a constructor
00:24 - so you type public because we want this
00:27 - to be publicly accessible
00:28 - and then it has the same name as the
00:30 - class name then add a set of parentheses
00:32 - then a set of curly braces
00:34 - this works just like a method and we can
00:36 - even set up parameters
00:37 - so let's set up name and age parameters
00:40 - so we need to list the data type
00:41 - string name and int edge now
00:44 - in order to create a human object we
00:47 - have to pass a matching set of arguments
00:49 - we need to pass in a name and an age
00:52 - well a string to function as a name
00:53 - and an integer to function as an edge so
00:56 - we don't manually need to assign
00:58 - these fields anymore we can just pass
01:00 - these values as arguments
01:01 - so with human one human one's name was
01:03 - rick and his age was 65
01:05 - so i will pass these as arguments rick
01:08 - and
01:08 - 65 and you can see that that red
01:11 - underline went away
01:12 - so let's do the same thing for human2
01:15 - morty and his age 16
01:16 - and we no longer need to manually assign
01:18 - those fields however within the
01:20 - constructor we'll need to do so
01:22 - so type this dot the name of the field
01:25 - we would like
01:26 - to assign equals the name of the
01:29 - parameter and in this case they have the
01:30 - same name
01:32 - this dot name equals name and this
01:35 - dot age equals
01:38 - whatever this is age and this will work
01:42 - the same as before but we did not need
01:44 - to
01:44 - manually assign those values to those
01:47 - fields so after calling
01:48 - the eaton sleep method for both human 1
01:51 - and human 2
01:52 - this will display rick is eating rick is
01:54 - sleeping morty is eating
01:55 - morty's sleeping so that's kind of what
01:57 - a constructor is it's a special method
01:59 - found within a class
02:01 - and it's automatically called when we
02:02 - instantiate an object
02:04 - if we do not explicitly create a
02:06 - constructor
02:07 - but if we do we can manually assign some
02:09 - values
02:10 - to fields of an object let's try a
02:12 - different example this time instead of
02:13 - humans let's create a car class we will
02:15 - instantiate some car objects
02:17 - so let's delete our current class and
02:19 - create a new one
02:20 - class car then curly braces
02:24 - cars will have let's say four fields
02:28 - a make a model a year and a color
02:32 - string make string model
02:38 - int year and string
02:42 - color then to create a constructor this
02:46 - will have the same name as the class
02:47 - name
02:48 - precede this with public car parentheses
02:52 - curly braces and again this is a special
02:55 - kind of method and we can set up
02:56 - arguments and parameters
02:58 - so we have string make
03:01 - string model
03:05 - integer
03:08 - and string color
03:12 - and then when we receive arguments we
03:14 - can assign them to these fields
03:16 - this dot make
03:20 - equals make
03:23 - this dot model equals model
03:27 - this dot year equals year
03:31 - and this dot color equals
03:35 - color then let's create maybe a drive
03:37 - method
03:40 - public void drive
03:45 - and we will display something
03:48 - u drive the
03:51 - plus make plus a lot of space to
03:55 - separate make and model
03:57 - plus model okay now let's instantiate
04:00 - some car objects
04:01 - so we type the name of the class car
04:04 - then we need a unique name or
04:06 - identifier for this car let's call this
04:08 - first car car one
04:09 - equals new car parenthesis semicolon
04:13 - but to instantiate a car object we have
04:15 - to pass a matching set of arguments to
04:17 - these parameters
04:18 - we have to pass a make model year and
04:21 - color
04:22 - so car one let's say is a ford mustang
04:26 - ford mustang
04:29 - the year will be 2022 and
04:32 - the color is red and then let's have car
04:36 - one
04:36 - use the drive method so type car one
04:40 - dot drive then a set of parentheses to
04:43 - invoke it
04:44 - u drive the ford mustang now let's
04:47 - create cartoon
04:48 - it's the same process as before but we
04:50 - need a unique name or identifier
04:53 - car car 2 equals new car this will be
04:56 - a chevy corvette
05:00 - and the year will be 20 21 and the color
05:03 - is blue and then
05:06 - let's use the drive method of car 2. car
05:09 - 2
05:10 - drive you drive the ford mustang you
05:13 - drive the chevy corvette
05:14 - so yeah that's a constructor it's a
05:17 - special method found within a class
05:19 - and it has the same name as the class
05:21 - name class car
05:23 - and the constructor name is car as well
05:25 - and it can be used to assign
05:26 - arguments to fields when creating an
05:28 - object there's a few other things you
05:30 - can do with constructors too but we'll
05:32 - discuss that in future videos
05:33 - so yeah those are constructors if you
05:35 - can smash that like button
05:37 - leave a random comment down below and
05:39 - well yeah those are constructors
05:41 - in c sharp

Cleaned transcript:

all right constructors a constructor is a special method found within a class it has the same name as the class name in the last video we created a human class but it's missing a constructor if we do not explicitly create a constructor there is a hidden one behind the scenes that is automatically called and it is used to create an object for us so let's explicitly create a constructor so you type public because we want this to be publicly accessible and then it has the same name as the class name then add a set of parentheses then a set of curly braces this works just like a method and we can even set up parameters so let's set up name and age parameters so we need to list the data type string name and int edge now in order to create a human object we have to pass a matching set of arguments we need to pass in a name and an age well a string to function as a name and an integer to function as an edge so we don't manually need to assign these fields anymore we can just pass these values as arguments so with human one human one's name was rick and his age was 65 so i will pass these as arguments rick and 65 and you can see that that red underline went away so let's do the same thing for human2 morty and his age 16 and we no longer need to manually assign those fields however within the constructor we'll need to do so so type this dot the name of the field we would like to assign equals the name of the parameter and in this case they have the same name this dot name equals name and this dot age equals whatever this is age and this will work the same as before but we did not need to manually assign those values to those fields so after calling the eaton sleep method for both human 1 and human 2 this will display rick is eating rick is sleeping morty is eating morty's sleeping so that's kind of what a constructor is it's a special method found within a class and it's automatically called when we instantiate an object if we do not explicitly create a constructor but if we do we can manually assign some values to fields of an object let's try a different example this time instead of humans let's create a car class we will instantiate some car objects so let's delete our current class and create a new one class car then curly braces cars will have let's say four fields a make a model a year and a color string make string model int year and string color then to create a constructor this will have the same name as the class name precede this with public car parentheses curly braces and again this is a special kind of method and we can set up arguments and parameters so we have string make string model integer and string color and then when we receive arguments we can assign them to these fields this dot make equals make this dot model equals model this dot year equals year and this dot color equals color then let's create maybe a drive method public void drive and we will display something u drive the plus make plus a lot of space to separate make and model plus model okay now let's instantiate some car objects so we type the name of the class car then we need a unique name or identifier for this car let's call this first car car one equals new car parenthesis semicolon but to instantiate a car object we have to pass a matching set of arguments to these parameters we have to pass a make model year and color so car one let's say is a ford mustang ford mustang the year will be 2022 and the color is red and then let's have car one use the drive method so type car one dot drive then a set of parentheses to invoke it u drive the ford mustang now let's create cartoon it's the same process as before but we need a unique name or identifier car car 2 equals new car this will be a chevy corvette and the year will be 20 21 and the color is blue and then let's use the drive method of car 2. car 2 drive you drive the ford mustang you drive the chevy corvette so yeah that's a constructor it's a special method found within a class and it has the same name as the class name class car and the constructor name is car as well and it can be used to assign arguments to fields when creating an object there's a few other things you can do with constructors too but we'll discuss that in future videos so yeah those are constructors if you can smash that like button leave a random comment down below and well yeah those are constructors in c sharp
