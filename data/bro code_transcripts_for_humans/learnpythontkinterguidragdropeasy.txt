With timestamps:

00:00 - hey what's going on everybody it's bro
00:02 - here hope you're doing well and in this
00:03 - video i'm going to teach you guys how we
00:05 - can drag
00:05 - and drop widgets in python so sit back
00:08 - relax and enjoy the show
00:12 - if you find this video helpful please
00:13 - remember to like
00:15 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - all right people let's just dive into
00:21 - this so we'll need a window and then
00:23 - we're going to be adding widgets to the
00:25 - window
00:25 - so window equals tk followed by
00:28 - window.main loop
00:30 - now you can drag and drop all sorts of
00:31 - widgets but let's just stick with the
00:33 - label because creating a label is simple
00:36 - so let's define a label label equals
00:39 - label we're going to be adding this
00:41 - label to the window
00:43 - and let's set a background color so we
00:45 - can actually see this label
00:46 - pick i don't know your favorite color
00:48 - i'm going to pick red
00:49 - and then i'm going to set a width and a
00:52 - height because normally if you have a
00:54 - label without any text it's really small
00:56 - so let's set a width of maybe 10
01:00 - and then a height of 5.
01:03 - that should be good and we want to place
01:05 - this label
01:06 - someplace within the window so label dot
01:09 - place and we can pass in some x
01:11 - coordinates as well as y coordinates
01:13 - so x equals zero and y equals zero
01:18 - so that this is going to appear in the
01:20 - top left corner
01:21 - of our window so this is what we have
01:24 - this
01:24 - is our label and we want to be able to
01:26 - drag and drop
01:27 - this label someplace within the window
01:30 - what we're going to need to do
01:31 - is actually bind this label twice but
01:34 - let's begin with just
01:35 - the first binding so in order to bind a
01:38 - widget you type in the name of the
01:39 - widget
01:40 - followed by calling the bind function
01:43 - so this bind function can take two
01:45 - arguments
01:46 - it can take an event as well as a
01:49 - function
01:49 - name so for the function name let's call
01:52 - this
01:53 - drag underscore start but you don't
01:55 - really need to
01:56 - name it the same that i do and for the
01:58 - event that occurs
01:59 - this is going to be a left button click
02:02 - with the mouse
02:03 - so that event is within quotes and
02:06 - within angle brackets
02:07 - button dash one so if we were to click
02:11 - someplace within the label using the
02:13 - left mouse button
02:14 - it's going to call our drag start
02:16 - function but we need to define this
02:18 - so at the top of our program let's
02:20 - define this function
02:22 - def drag start and this takes one
02:25 - parameter
02:26 - the parameter we have is our event so
02:29 - what we're going to do
02:30 - is actually get the coordinates of where
02:32 - we click
02:33 - within this label and we're going to
02:36 - assign these
02:36 - to a new variable or attribute of our
02:39 - label
02:40 - so label dot let's create an attribute
02:43 - called
02:44 - start x equals our event
02:48 - dot x so this is where we click
02:51 - within the label and not necessarily the
02:53 - window
02:54 - and let's repeat the process for y so
02:57 - label
02:57 - dot start y equals event dot
03:01 - y so we're going to have some
03:03 - coordinates of where we click
03:05 - within this label and we can actually
03:07 - use that for our next
03:09 - function so we're going to bind this
03:11 - label a second time
03:12 - so i'm going to copy this line and paste
03:15 - it
03:16 - the second binding let's say is
03:19 - drag underscore motion for the function
03:22 - name
03:23 - and this event is going to occur if we
03:26 - were to hold down the left mouse button
03:28 - and then drag so that is b
03:31 - one dash motion
03:34 - and then we need to define this function
03:37 - so at the top
03:38 - d e f drag underscore motion and this
03:42 - takes our event as a parameter
03:44 - so this part is going to be a little
03:46 - funky we're going to
03:47 - get or create new x and y
03:50 - coordinates so let's begin with x x
03:53 - equals the name of our label or widget
03:57 - label dot w info
04:00 - underscore x this is a function so add
04:03 - some parentheses
04:04 - this will get the top left x coordinate
04:08 - of our label relative to the window that
04:10 - we're in
04:12 - minus label x well labeled.startx
04:17 - plus event dot x
04:21 - all right so we're going to do the same
04:24 - thing for y
04:26 - well we're going to replace x with y for
04:28 - the second line
04:32 - all right so this is the top left corner
04:37 - the x coordinate of our widget relative
04:40 - to the window this is
04:44 - the place where we click within the
04:46 - label itself
04:48 - and this is where we begin dragging
04:52 - our widget to it's a little difficult to
04:54 - explain but if you can
04:56 - combine all of these together you'll get
04:58 - the new coordinates
04:59 - of where you want to drag this component
05:02 - this widget to
05:03 - so we need to replace this widget so
05:07 - label dot place x equals
05:10 - x and y equals y so then when you
05:14 - combine all of these together
05:15 - we have our widget and we can drag it
05:18 - and drop it someplace else within the
05:20 - window
05:21 - now wait a second what if we have more
05:24 - than one widget
05:25 - well with the way that our functions are
05:27 - written now they wouldn't be compatible
05:29 - with more than one widget
05:31 - just this label itself so what if we
05:34 - were to create a
05:35 - second label so i'm going to call this
05:37 - second label just
05:38 - label two so i'm just going to rename
05:40 - them and
05:41 - let's change the background color to
05:43 - maybe
05:44 - blue and i'm just going to place this
05:46 - somewhere else within our window so
05:48 - maybe where x
05:49 - is 100 and y is 100 and we'll need to
05:52 - bind label two as well so
05:56 - make sure to bind label two so we have
05:59 - label one binded it's just called label
06:01 - and the same thing with label two
06:03 - all right let's see what happens i'm
06:05 - going to attempt to drag
06:08 - label 2. the label 1 is moving that's
06:10 - because
06:11 - with our functions we stated we're
06:14 - getting the coordinates
06:15 - and we're storing them within the
06:17 - attributes of label
06:18 - 1 and not necessarily label two so in
06:21 - order to make
06:22 - these functions compatible with all
06:25 - widgets
06:25 - we can actually add one line of code
06:29 - widget equals event dot widget
06:33 - so this is going to get the widget of
06:35 - the event that we're dealing with
06:37 - and we're going to temporarily rename
06:39 - this as widget
06:40 - so now we're going to replace all
06:42 - instances of where we use
06:44 - label and replace it with widget
06:48 - so be sure to do the same thing too with
06:50 - drag motion
06:53 - and then we will need to add this line
06:55 - at the top of
06:56 - drag motion so now
06:59 - these functions are now compatible with
07:02 - any widget that we create
07:06 - and we should be able to drag and drop
07:09 - both
07:09 - widgets all right well that's the basics
07:13 - of dragging and dropping widgets in
07:15 - python if you want
07:16 - a copy of all this code i'll post all of
07:18 - this in the comments down below
07:19 - but yeah that's the basics of dragging
07:21 - and dropping widgets in python
07:25 - hey you yeah i'm talking to you if you
07:27 - learn something new
07:29 - then you can help me help you in three
07:32 - easy steps
07:33 - by smashing that like button drop a
07:35 - comment down below
07:36 - and subscribe if you'd like to become a
07:38 - fellow bro
07:44 - [Music]
07:59 - you

Cleaned transcript:

hey what's going on everybody it's bro here hope you're doing well and in this video i'm going to teach you guys how we can drag and drop widgets in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right people let's just dive into this so we'll need a window and then we're going to be adding widgets to the window so window equals tk followed by window.main loop now you can drag and drop all sorts of widgets but let's just stick with the label because creating a label is simple so let's define a label label equals label we're going to be adding this label to the window and let's set a background color so we can actually see this label pick i don't know your favorite color i'm going to pick red and then i'm going to set a width and a height because normally if you have a label without any text it's really small so let's set a width of maybe 10 and then a height of 5. that should be good and we want to place this label someplace within the window so label dot place and we can pass in some x coordinates as well as y coordinates so x equals zero and y equals zero so that this is going to appear in the top left corner of our window so this is what we have this is our label and we want to be able to drag and drop this label someplace within the window what we're going to need to do is actually bind this label twice but let's begin with just the first binding so in order to bind a widget you type in the name of the widget followed by calling the bind function so this bind function can take two arguments it can take an event as well as a function name so for the function name let's call this drag underscore start but you don't really need to name it the same that i do and for the event that occurs this is going to be a left button click with the mouse so that event is within quotes and within angle brackets button dash one so if we were to click someplace within the label using the left mouse button it's going to call our drag start function but we need to define this so at the top of our program let's define this function def drag start and this takes one parameter the parameter we have is our event so what we're going to do is actually get the coordinates of where we click within this label and we're going to assign these to a new variable or attribute of our label so label dot let's create an attribute called start x equals our event dot x so this is where we click within the label and not necessarily the window and let's repeat the process for y so label dot start y equals event dot y so we're going to have some coordinates of where we click within this label and we can actually use that for our next function so we're going to bind this label a second time so i'm going to copy this line and paste it the second binding let's say is drag underscore motion for the function name and this event is going to occur if we were to hold down the left mouse button and then drag so that is b one dash motion and then we need to define this function so at the top d e f drag underscore motion and this takes our event as a parameter so this part is going to be a little funky we're going to get or create new x and y coordinates so let's begin with x x equals the name of our label or widget label dot w info underscore x this is a function so add some parentheses this will get the top left x coordinate of our label relative to the window that we're in minus label x well labeled.startx plus event dot x all right so we're going to do the same thing for y well we're going to replace x with y for the second line all right so this is the top left corner the x coordinate of our widget relative to the window this is the place where we click within the label itself and this is where we begin dragging our widget to it's a little difficult to explain but if you can combine all of these together you'll get the new coordinates of where you want to drag this component this widget to so we need to replace this widget so label dot place x equals x and y equals y so then when you combine all of these together we have our widget and we can drag it and drop it someplace else within the window now wait a second what if we have more than one widget well with the way that our functions are written now they wouldn't be compatible with more than one widget just this label itself so what if we were to create a second label so i'm going to call this second label just label two so i'm just going to rename them and let's change the background color to maybe blue and i'm just going to place this somewhere else within our window so maybe where x is 100 and y is 100 and we'll need to bind label two as well so make sure to bind label two so we have label one binded it's just called label and the same thing with label two all right let's see what happens i'm going to attempt to drag label 2. the label 1 is moving that's because with our functions we stated we're getting the coordinates and we're storing them within the attributes of label 1 and not necessarily label two so in order to make these functions compatible with all widgets we can actually add one line of code widget equals event dot widget so this is going to get the widget of the event that we're dealing with and we're going to temporarily rename this as widget so now we're going to replace all instances of where we use label and replace it with widget so be sure to do the same thing too with drag motion and then we will need to add this line at the top of drag motion so now these functions are now compatible with any widget that we create and we should be able to drag and drop both widgets all right well that's the basics of dragging and dropping widgets in python if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of dragging and dropping widgets in python hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
