With timestamps:

00:00 - hey what's going on everybody so in
00:01 - today's lesson we're going to create a
00:03 - project where we Generate random
00:05 - passwords this will help us solidify our
00:07 - understanding of functions and random
00:09 - numbers this will be an exercise for
00:11 - beginners by setting different options
00:14 - we can change the format of the password
00:16 - and well let's begin everybody all right
00:18 - let's begin we'll need to let our
00:20 - program know what the length of our
00:21 - password is going to be let's create a
00:23 - constant to store that const password
00:27 - length set this equal to maybe 12 but we
00:31 - can adjust that accordingly we'll create
00:33 - a Boolean to specify if our generated
00:35 - password is going to contain lowercase
00:37 - characters we'll create a
00:39 - constant include
00:44 - lowercase do we want to include
00:46 - lowercase characters we can set this to
00:48 - be true or false we will set this to be
00:52 - true do we want to include uppercase
00:55 - characters
00:56 - include
00:58 - uppercase I will again set this to be
01:01 - true do we want to include numbers const
01:05 - include
01:07 - numbers I will set that to be true do we
01:10 - want to include
01:11 - symbols const include
01:17 - symbols we'll Define a function at the
01:19 - top of our
01:21 - program function to generate password we
01:26 - have a lot of parameters to set up we're
01:29 - going to pass all of these constants as
01:32 - arguments so we have a
01:35 - length include
01:37 - lowercase include
01:40 - uppercase include
01:43 - numbers and include
01:45 - symbols when we call this function we
01:48 - have to pass in all of these arguments
01:51 - so we will call our generate password
01:54 - function pass in our password
01:57 - length include lowercase
02:00 - include
02:02 - uppercase include
02:05 - numbers and include
02:07 - symbols at the bottom of our function we
02:10 - will be returning a password but for now
02:13 - I'm just going to write an empty string
02:14 - because we still need to determine what
02:16 - that password is going to be after
02:18 - finishing the generate password function
02:20 - this will return a string a string
02:22 - password we will store that within const
02:26 - password equals whatever is returned
02:29 - from the generate password function and
02:32 - just so that this is more readable
02:34 - although not necessary I'm going to
02:36 - place each of these arguments on a new
02:37 - line because I'm OCD about things being
02:40 - in
02:42 - alignment and then at the very end of
02:44 - this program I will display a template
02:48 - string of generated
02:52 - password I'll add a placeholder then
02:55 - we'll display our password that we
02:58 - generate so so right now it's not going
03:01 - to display anything we're returning an
03:03 - empty string but that is everything we
03:05 - need outside of this function to
03:07 - generate our password basically we're
03:09 - passing in options when we generate our
03:11 - password do we want to include lowercase
03:14 - characters uppercase characters numbers
03:16 - and or symbols we have a
03:18 - number and a bunch of Boolean values
03:22 - within our password we're going to
03:24 - create a few constants within this
03:25 - generate password function we will
03:27 - create one long string of all of the
03:30 - lowercase characters
03:33 - chars equals I'm going to go through the
03:36 - alphabet we will have one long string of
03:39 - alphabetical
03:46 - characters and I think I got all of them
03:49 - so there should be 26 now we're going to
03:51 - do this with uppercase characters const
03:55 - uppercase chars
03:58 - equals
04:00 - I'm going to turn on caps
04:02 - lock go through the
04:10 - alphabet we'll create a constant of
04:13 - number characters number chars
04:18 - equals 0 through
04:22 - 9 and
04:25 - symbols const symbol chars
04:31 - which symbols would you like to include
04:33 - I'll just add a
04:38 - bunch that's probably good enough for
04:40 - now feel free to add more or
04:43 - less we will create a variable for
04:47 - allowed chars meaning
04:52 - characters and an empty
04:54 - password let password equal an empty
04:58 - string
05:02 - if some of these constants are true we
05:05 - would like to take that corresponding
05:07 - set of characters and concatenate it to
05:10 - the allowed Char string so what we'll do
05:12 - is take our allowed characters variable
05:15 - you string catenation by using plus
05:18 - equals we'll check to see if include
05:21 - lowercase is true or false we can use
05:25 - the etary operator for that if we would
05:28 - like to include lower case characters we
05:31 - will string concatenate our lowercase
05:33 - chars our lowercase characters otherwise
05:37 - we'll concatenate an empty
05:39 - string let's do this with uppercase
05:42 - characters with our allowed characters
05:45 - let's string concatenate and check if
05:47 - we're including uppercase characters
05:50 - question mark if this is true we will
05:52 - concatenate all of the uppercase
05:54 - characters we've declared otherwise
05:57 - we'll concatenate an empty string so we
06:00 - don't include them let's do this with
06:02 - number
06:04 - chars include numbers are we including
06:07 - numbers within our password if so we
06:09 - will return our number Char
06:13 - string and then
06:16 - symbols are we including symbols within
06:19 - our password if so concatenate our
06:22 - string of symbol characters all right
06:25 - just to test everything afterwards I'm
06:28 - going to console. log are allowed
06:32 - characters so right now I'm going to
06:34 - switch all of these constants to be
06:39 - false so right now we're not including
06:42 - any characters if I were to set include
06:45 - a lowercase to be true we would include
06:48 - all of the lowercase characters that's
06:50 - one long string Let's test uppercase yep
06:54 - we are including all of the uppercase
06:56 - characters include numbers yes that
06:59 - works works and include symbols that
07:02 - also works at this point in the program
07:05 - we're going to have one gigantic string
07:07 - of all of the possible characters before
07:10 - we move on with the program I do want to
07:12 - run some checks using some if statements
07:15 - first let's check to see if the password
07:17 - length is zero or less than zero right
07:19 - now it's set to
07:20 - 12 using an if
07:23 - statement if the length the length of
07:26 - the password is less than or equal to
07:29 - zero
07:30 - we need to let the user know that the
07:31 - password length must be at least one we
07:34 - will return a
07:37 - string password length must be at least
07:43 - one right now we're not generating a
07:45 - password we returning an empty string if
07:48 - I set the password length to be zero we
07:51 - will generate this message password
07:54 - length must be at least one or even a
07:56 - negative number
07:58 - like1 password length must be at least
08:01 - one let's set that back to be 12 what if
08:04 - we don't select any options what if all
08:07 - of these character options were
08:13 - false we can check the length of our
08:16 - alloud characters variable so
08:19 - if our loud characters length
08:23 - property is strictly equal to zero this
08:27 - will only be possible if all of these
08:29 - options are set to false we will return
08:33 - a template
08:35 - string at at least one set of
08:40 - characters needs to be
08:44 - selected and let's see if this works yes
08:47 - it does at least one set of characters
08:50 - needs to be selected I can select any
08:52 - options that I would like I will set
08:55 - these all to be
08:58 - true
09:00 - now here's the hard part for as many
09:02 - iterations as our password is we will
09:04 - select a random character from all of
09:07 - the different
09:08 - possibilities we will use a for
09:12 - Loop we will let I be our index our
09:16 - counter we will continue this for loop
09:18 - as long as I is less than the length the
09:22 - password length then increment I by One
09:25 - during each iteration if our password
09:27 - length is 12 we will execute this for
09:30 - Loop a total of 12 times now we will
09:32 - generate a random index const random
09:36 - index equals we will use the random
09:40 - method of
09:42 - math this generates a random number
09:44 - between 0 and one I can multiply this
09:47 - number that's randomly generated by the
09:49 - length of our allowed
09:52 - characters let's say we're including
09:54 - only lowercase characters well this is a
09:56 - total of 26 characters in the alphabet
09:59 - but if I'm taking math.random * 26 I'll
10:04 - be given a random number between 0 and
10:07 - 25 but I will need to round it down
10:09 - let's enclose this equation with the
10:11 - floor method of math to round down math.
10:19 - floor we'll use string concatenation
10:21 - with our password currently our password
10:23 - is an empty string but we will use
10:26 - string
10:27 - concatenation we will string con anate a
10:30 - randomly chosen character from our
10:32 - string of allowed characters password
10:35 - plus equals are allowed characters at
10:38 - the index of random
10:41 - index then at the end of this program we
10:44 - will return our
10:46 - password and let's see if this works
10:50 - let's close out of this function we
10:51 - don't need it
10:52 - anymore and let's see if this works yeah
10:56 - there's our password so every time I run
10:58 - the program I get a new random password
11:02 - and I can turn these options on and off
11:04 - let's set all of these options to be
11:05 - false to begin
11:09 - with and I will set the length to be
11:12 - zero let's see what happens password
11:15 - length must be at least one all right
11:17 - how about a password of 10 10 characters
11:19 - long at least one set of characters
11:22 - needs to be selected let's select only
11:24 - lowercase
11:25 - characters yep we only have lowercase
11:28 - characters let's allow uppercase
11:30 - characters
11:31 - now let's allow
11:34 - numbers I didn't get any of that time
11:36 - let's do it
11:37 - again okay there's a number I guess
11:40 - numbers don't come up very frequently
11:42 - and let's include
11:44 - symbols and there's a few symbols in
11:46 - there all right everybody so that was an
11:49 - exercise to Generate random passwords it
11:52 - should give you some practice with
11:53 - functions and working with random
11:55 - numbers and well everybody that was a
11:57 - random password generator
11:59 - in
12:03 - JavaScript

Cleaned transcript:

hey what's going on everybody so in today's lesson we're going to create a project where we Generate random passwords this will help us solidify our understanding of functions and random numbers this will be an exercise for beginners by setting different options we can change the format of the password and well let's begin everybody all right let's begin we'll need to let our program know what the length of our password is going to be let's create a constant to store that const password length set this equal to maybe 12 but we can adjust that accordingly we'll create a Boolean to specify if our generated password is going to contain lowercase characters we'll create a constant include lowercase do we want to include lowercase characters we can set this to be true or false we will set this to be true do we want to include uppercase characters include uppercase I will again set this to be true do we want to include numbers const include numbers I will set that to be true do we want to include symbols const include symbols we'll Define a function at the top of our program function to generate password we have a lot of parameters to set up we're going to pass all of these constants as arguments so we have a length include lowercase include uppercase include numbers and include symbols when we call this function we have to pass in all of these arguments so we will call our generate password function pass in our password length include lowercase include uppercase include numbers and include symbols at the bottom of our function we will be returning a password but for now I'm just going to write an empty string because we still need to determine what that password is going to be after finishing the generate password function this will return a string a string password we will store that within const password equals whatever is returned from the generate password function and just so that this is more readable although not necessary I'm going to place each of these arguments on a new line because I'm OCD about things being in alignment and then at the very end of this program I will display a template string of generated password I'll add a placeholder then we'll display our password that we generate so so right now it's not going to display anything we're returning an empty string but that is everything we need outside of this function to generate our password basically we're passing in options when we generate our password do we want to include lowercase characters uppercase characters numbers and or symbols we have a number and a bunch of Boolean values within our password we're going to create a few constants within this generate password function we will create one long string of all of the lowercase characters chars equals I'm going to go through the alphabet we will have one long string of alphabetical characters and I think I got all of them so there should be 26 now we're going to do this with uppercase characters const uppercase chars equals I'm going to turn on caps lock go through the alphabet we'll create a constant of number characters number chars equals 0 through 9 and symbols const symbol chars which symbols would you like to include I'll just add a bunch that's probably good enough for now feel free to add more or less we will create a variable for allowed chars meaning characters and an empty password let password equal an empty string if some of these constants are true we would like to take that corresponding set of characters and concatenate it to the allowed Char string so what we'll do is take our allowed characters variable you string catenation by using plus equals we'll check to see if include lowercase is true or false we can use the etary operator for that if we would like to include lower case characters we will string concatenate our lowercase chars our lowercase characters otherwise we'll concatenate an empty string let's do this with uppercase characters with our allowed characters let's string concatenate and check if we're including uppercase characters question mark if this is true we will concatenate all of the uppercase characters we've declared otherwise we'll concatenate an empty string so we don't include them let's do this with number chars include numbers are we including numbers within our password if so we will return our number Char string and then symbols are we including symbols within our password if so concatenate our string of symbol characters all right just to test everything afterwards I'm going to console. log are allowed characters so right now I'm going to switch all of these constants to be false so right now we're not including any characters if I were to set include a lowercase to be true we would include all of the lowercase characters that's one long string Let's test uppercase yep we are including all of the uppercase characters include numbers yes that works works and include symbols that also works at this point in the program we're going to have one gigantic string of all of the possible characters before we move on with the program I do want to run some checks using some if statements first let's check to see if the password length is zero or less than zero right now it's set to 12 using an if statement if the length the length of the password is less than or equal to zero we need to let the user know that the password length must be at least one we will return a string password length must be at least one right now we're not generating a password we returning an empty string if I set the password length to be zero we will generate this message password length must be at least one or even a negative number like1 password length must be at least one let's set that back to be 12 what if we don't select any options what if all of these character options were false we can check the length of our alloud characters variable so if our loud characters length property is strictly equal to zero this will only be possible if all of these options are set to false we will return a template string at at least one set of characters needs to be selected and let's see if this works yes it does at least one set of characters needs to be selected I can select any options that I would like I will set these all to be true now here's the hard part for as many iterations as our password is we will select a random character from all of the different possibilities we will use a for Loop we will let I be our index our counter we will continue this for loop as long as I is less than the length the password length then increment I by One during each iteration if our password length is 12 we will execute this for Loop a total of 12 times now we will generate a random index const random index equals we will use the random method of math this generates a random number between 0 and one I can multiply this number that's randomly generated by the length of our allowed characters let's say we're including only lowercase characters well this is a total of 26 characters in the alphabet but if I'm taking math.random * 26 I'll be given a random number between 0 and 25 but I will need to round it down let's enclose this equation with the floor method of math to round down math. floor we'll use string concatenation with our password currently our password is an empty string but we will use string concatenation we will string con anate a randomly chosen character from our string of allowed characters password plus equals are allowed characters at the index of random index then at the end of this program we will return our password and let's see if this works let's close out of this function we don't need it anymore and let's see if this works yeah there's our password so every time I run the program I get a new random password and I can turn these options on and off let's set all of these options to be false to begin with and I will set the length to be zero let's see what happens password length must be at least one all right how about a password of 10 10 characters long at least one set of characters needs to be selected let's select only lowercase characters yep we only have lowercase characters let's allow uppercase characters now let's allow numbers I didn't get any of that time let's do it again okay there's a number I guess numbers don't come up very frequently and let's include symbols and there's a few symbols in there all right everybody so that was an exercise to Generate random passwords it should give you some practice with functions and working with random numbers and well everybody that was a random password generator in JavaScript
