With timestamps:

00:00 - hey what's going on everybody it's you
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys all
00:04 - about the format method
00:06 - in python so sit back relax and enjoy
00:09 - the show
00:12 - if you find this video helpful please
00:13 - remember to like
00:15 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - okay ladies and gentlemen let's begin
00:22 - the format method
00:23 - is a method available to strings it's
00:25 - optional
00:26 - and it gives users more control when
00:28 - displaying output to best demonstrate
00:31 - this i'm going to use a line
00:32 - from a popular nursery rhyme titled hey
00:35 - diddle diddle because well
00:37 - you know i'm a mature adult like that
00:39 - i'll be printing
00:40 - this line to my console window the cow
00:43 - jumped over the moon
00:44 - let's do so using a standard print
00:46 - statement and then i'll show you the
00:48 - benefits of using the format method
00:50 - later for this example i have two
00:52 - variables
00:53 - a variable called animal and i'm going
00:55 - to store a string of cow and item
00:58 - and i'll be storing an item name which
01:00 - is moon when we compile and run this
01:02 - as you would expect the output is the
01:05 - cow jumped over
01:06 - the moon there's a more elegant way of
01:09 - writing
01:09 - this line of code and that is by using
01:11 - the format method available to strings
01:14 - i'm going to turn this line into a
01:15 - comment and we're instead going to
01:17 - produce the same output but use
01:19 - the format method instead so we need a
01:22 - standard print statement like usual
01:24 - and then a string that we would like to
01:26 - format so
01:27 - we're going to write the same thing but
01:29 - in place of the variables we're going to
01:30 - add a placeholder
01:32 - the instead of the variable name or
01:35 - value name i'm going to add
01:37 - a set of curly braces so that functions
01:40 - as a placeholder
01:41 - for a value or a variable the
01:45 - this should be cow jumped over
01:48 - the and i'm going to insert another
01:51 - placeholder
01:52 - now this is a string we can format the
01:54 - string by following
01:56 - this string with dot format parentheses
01:59 - and within the parentheses of the format
02:02 - method we can
02:03 - insert some values or variables let's
02:06 - begin with some values
02:08 - i would like to insert cow as well as
02:11 - moon
02:12 - so this will produce the same output but
02:14 - it's written
02:15 - a little more elegantly we can also
02:18 - replace these
02:18 - with variables because they store these
02:22 - values
02:22 - so i'm going to replace cow with animal
02:25 - and
02:26 - moon with item and this will create the
02:29 - same
02:29 - output as it did before these curly
02:31 - braces are what's known
02:33 - as format fields they function as a
02:35 - placeholder
02:36 - for a value or a variable and they work
02:38 - in order
02:39 - the first format field will insert the
02:42 - first value
02:43 - at this location if you have another set
02:46 - or more sets of this format field you'll
02:49 - insert
02:49 - the next value that's listed within the
02:52 - format method
02:53 - so if we were to switch these around
02:55 - we'll switch the position of animal
02:57 - with item well then the first
03:01 - format field is going to insert our item
03:04 - and the second
03:04 - format field will insert our animal this
03:07 - time the moon
03:08 - jumped over the cow an additional way of
03:10 - inserting values at a given placeholder
03:13 - would be to use what's referred to as a
03:16 - positional argument
03:19 - within these format fields we will list
03:21 - the index of the value that we would
03:23 - like to insert
03:24 - at this location if you need to insert
03:27 - the first value
03:28 - well that has an index of 0 because
03:30 - computers always start with zero
03:32 - and following that pattern the next
03:34 - index would be one
03:36 - if you had let's say three values that
03:38 - you need to insert
03:39 - if you had another placeholder that
03:41 - would be two then
03:42 - so you would just follow that pattern so
03:44 - there's going to be no
03:46 - visible change but what we could do is
03:48 - reverse
03:49 - the positional arguments of these
03:51 - placeholders
03:52 - so what do you think would happen if i
03:54 - switched one with zero at these
03:55 - locations
03:56 - well this format field is going to
03:59 - insert the value found at index
04:01 - one this first value is index zero and
04:04 - the second one
04:05 - is index one so now the rolls are
04:07 - reversed this time
04:09 - the moon jumped over the cow our last
04:12 - way of inserting some values at a
04:14 - given format field would be to use
04:16 - what's referred to as a keyword
04:19 - argument within the format method we're
04:22 - going to list
04:22 - some keyword argument pairs we need a
04:25 - keyword name
04:26 - followed by a value so let's say animal
04:29 - is going to be the keyword we're going
04:31 - to say
04:31 - equals some value animal equals cow
04:35 - and item equals moon and you may have
04:37 - noticed
04:38 - that the color of your text might have
04:40 - changed so we no longer need these
04:42 - variables actually
04:43 - but i'm going to comment out these two
04:46 - print statements because we will get an
04:47 - error then
04:48 - so these are in keyword argument pairs
04:51 - and within our format field instead of
04:54 - keeping these empty
04:55 - or using an index we can use the keyword
04:58 - name at my first format field i'm going
05:00 - to
05:01 - insert my keyword of animal and at my
05:04 - second format field i would like to
05:06 - insert the item keyword so the result
05:09 - is going to be the cow jumped over the
05:11 - moon so let's reverse these now
05:13 - we'll place our item keyword here and
05:16 - then at the second format field we will
05:18 - insert
05:18 - our animal and this time the moon
05:21 - jumped over the cow here's an important
05:23 - concept that i'd like to bring to your
05:24 - attention
05:25 - with these values found within the
05:27 - format method you can actually reuse
05:29 - some of these more than once
05:30 - so let's say we would like to state the
05:33 - animal
05:34 - jumped over the animal we're going to
05:36 - use this animal keyword twice
05:38 - and our output is going to be the cow
05:40 - jumped over the cow
05:42 - if we're doing the same thing with
05:43 - positional arguments
05:45 - we can reuse the same index this time
05:48 - let's say
05:49 - that the moon jumped over the moon so
05:52 - our item has an index
05:53 - of one so within our first format field
05:56 - we'll state
05:57 - the index will be one and our second
06:00 - format field will also be one
06:02 - so our output's going to be the moon
06:04 - jumped over the moon all right let's
06:06 - take things up a level there's an even
06:08 - more elegant way in which we could write
06:10 - all of this
06:11 - what we'll do is store our string that
06:13 - we would like to format
06:14 - within a variable let's turn this line
06:17 - into a comment and let's create a
06:19 - variable called
06:20 - text text equals the string that we
06:22 - would like to format
06:23 - which is the format field
06:27 - jumped over the format field
06:31 - and if we need to format this variable
06:34 - we can just call the format method on it
06:36 - so within a print statement let's say
06:40 - text dot and then use the format method
06:43 - and pass
06:44 - in the values that we would like to
06:46 - insert at these
06:47 - placeholders so we're going to insert
06:49 - animal
06:51 - as well as item so our result as you
06:54 - would imagine
06:55 - is the cow jumped over the moon this
06:58 - next section i'm going to explain how we
06:59 - can add some padding
07:00 - to a string when we display it using the
07:03 - format method
07:04 - let's say we have a name variable and
07:06 - assign this a value of whatever your
07:08 - name is
07:09 - so i would like to display my name along
07:10 - with the custom message
07:12 - let's say hello my name is
07:15 - and then i'll use a format field here so
07:18 - let's follow this string by using the
07:20 - format method
07:21 - and i would like to insert my name at
07:23 - this location
07:24 - so currently this will display hello my
07:27 - name is bro
07:28 - or whatever else your name is so we can
07:30 - add some padding
07:31 - either before our name after or we can
07:34 - add some padding
07:35 - to the left and the right hand side of
07:38 - our value that we have
07:39 - so what we'll do to begin is let's add
07:41 - some padding
07:42 - to the right hand side of our name that
07:45 - we have
07:45 - so within our format field if we need to
07:48 - add some padding
07:49 - within the format field add colon and
07:51 - then the amount of space
07:52 - you would like to allocate to displaying
07:55 - your value
07:56 - so let's say 10. so i'm going to
07:58 - allocate
07:59 - 10 spaces worth of room to display my
08:02 - name
08:02 - you can't really see it right now but
08:04 - let's take a look so
08:05 - i can't move my cursor past this line at
08:08 - the end of my name
08:09 - but with my second line i have all of
08:11 - this room to work with
08:13 - so if i were to change my string that i
08:15 - have
08:16 - let's say nice to meet
08:19 - you well then all of this padding that i
08:22 - have is going to be
08:23 - more evident so we can add a number
08:27 - preceding with a colon to add some
08:29 - padding to a value
08:31 - and then you can left align this right
08:33 - align it or center align it
08:35 - so what i'll do is copy this line that i
08:37 - have
08:38 - if you need to left align it you use the
08:41 - less than sign
08:42 - but there's going to be no visible
08:43 - change because that's already the
08:45 - default
08:46 - if you need to write a line precede your
08:49 - number
08:49 - with a greater than sign so your value
08:53 - is going to be right aligned
08:54 - if you need to center this value then
08:57 - use
08:58 - the carrot so this will center align
09:01 - your value within the padding that you
09:04 - have allotted
09:05 - one question that you might have for me
09:06 - and i'll try and answer that now because
09:08 - it's relevant
09:08 - what if we need to add a positional
09:10 - argument or a
09:12 - keyword argument to our format field if
09:14 - there's already some text within here
09:16 - so what you would do before the colon
09:18 - you would just precede the colon
09:20 - with either your positional argument or
09:22 - your keyword argument
09:24 - followed by colon and then whatever you
09:26 - want to add afterwards to format
09:28 - your value that you have all right
09:29 - ladies and gentlemen we are near the end
09:31 - and i promise that this is the last
09:33 - section how can we format some numbers
09:35 - let's say we have a
09:37 - number variable and this will equal the
09:39 - first few digits of pi
09:42 - 3.14159 let's pretend
09:44 - that we would like to display only the
09:47 - first two
09:48 - digits after the decimal so we can do so
09:51 - using
09:51 - the format method let's print
09:54 - the number pi is
09:57 - and then i'll use a format field here
10:00 - and we will call the format method and
10:02 - insert our number that we have
10:05 - so if i need to display only the first
10:09 - two digits after the decimal within the
10:11 - format field
10:12 - i will add colon
10:15 - dot to f is for floating point numbers
10:19 - that's anything with a decimal portion
10:22 - so the result is that this will display
10:25 - only the first
10:26 - two digits after my decimal because we
10:29 - placed
10:30 - two within the format field so if this
10:33 - was 3
10:34 - 0.3 f this would display three digits
10:37 - after
10:38 - the decimal portion oh and apparently
10:40 - this will round your number so that's
10:42 - something that you should keep in mind
10:43 - so this time let's change our number to
10:45 - something larger like
10:46 - 1000 and i will copy this line and make
10:49 - a few changes
10:50 - let's say the number is
10:54 - and i would like to add a comma at the
10:56 - thousands place
10:57 - so after the colon within the format
10:59 - field i will add a comma
11:01 - so this will automatically add a comma
11:03 - to all 1000s
11:04 - places another cool thing that you can
11:06 - do is that you can display
11:08 - your number as binary so within the
11:10 - format field add
11:11 - colon b this will display a binary
11:14 - representation of
11:16 - your number you can do the same thing
11:18 - with octal
11:19 - by adding colon o so our number
11:23 - is now being displayed as an octal
11:25 - number and you can do the same thing
11:26 - with hexadecimal
11:28 - lowercase x for lowercase or uppercase x
11:31 - for all
11:31 - uppercase so my number 1000 is now in
11:35 - hexadecimal and lastly we can display
11:38 - this number in scientific notation
11:41 - using either lowercase e for lowercase
11:44 - or
11:44 - capital e for uppercase and mynumber1000
11:48 - is now in scientific notation alright
11:51 - everybody so that's a few things that
11:53 - you can do
11:54 - with the format method it's an optional
11:56 - method that gives users
11:58 - more control when displaying output if
12:00 - you would like a copy of all the code
12:02 - that we've written here today i will
12:03 - post everything in the comments down
12:05 - below
12:05 - don't be afraid to smash that like
12:07 - button drop a comment down below
12:09 - and subscribe if you'd like to become a
12:11 - fellow bro
12:12 - hey you yeah i'm talking to you if you
12:15 - learned something new
12:16 - then help me help you in three easy
12:18 - steps
12:19 - by smashing that like button drop a
12:21 - comment down below
12:22 - and subscribe if you'd like to become a
12:24 - fellow bro
12:38 - [Music]
12:46 - you

Cleaned transcript:

hey what's going on everybody it's you bro hope you're doing well and in this video i'm going to teach you guys all about the format method in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running okay ladies and gentlemen let's begin the format method is a method available to strings it's optional and it gives users more control when displaying output to best demonstrate this i'm going to use a line from a popular nursery rhyme titled hey diddle diddle because well you know i'm a mature adult like that i'll be printing this line to my console window the cow jumped over the moon let's do so using a standard print statement and then i'll show you the benefits of using the format method later for this example i have two variables a variable called animal and i'm going to store a string of cow and item and i'll be storing an item name which is moon when we compile and run this as you would expect the output is the cow jumped over the moon there's a more elegant way of writing this line of code and that is by using the format method available to strings i'm going to turn this line into a comment and we're instead going to produce the same output but use the format method instead so we need a standard print statement like usual and then a string that we would like to format so we're going to write the same thing but in place of the variables we're going to add a placeholder the instead of the variable name or value name i'm going to add a set of curly braces so that functions as a placeholder for a value or a variable the this should be cow jumped over the and i'm going to insert another placeholder now this is a string we can format the string by following this string with dot format parentheses and within the parentheses of the format method we can insert some values or variables let's begin with some values i would like to insert cow as well as moon so this will produce the same output but it's written a little more elegantly we can also replace these with variables because they store these values so i'm going to replace cow with animal and moon with item and this will create the same output as it did before these curly braces are what's known as format fields they function as a placeholder for a value or a variable and they work in order the first format field will insert the first value at this location if you have another set or more sets of this format field you'll insert the next value that's listed within the format method so if we were to switch these around we'll switch the position of animal with item well then the first format field is going to insert our item and the second format field will insert our animal this time the moon jumped over the cow an additional way of inserting values at a given placeholder would be to use what's referred to as a positional argument within these format fields we will list the index of the value that we would like to insert at this location if you need to insert the first value well that has an index of 0 because computers always start with zero and following that pattern the next index would be one if you had let's say three values that you need to insert if you had another placeholder that would be two then so you would just follow that pattern so there's going to be no visible change but what we could do is reverse the positional arguments of these placeholders so what do you think would happen if i switched one with zero at these locations well this format field is going to insert the value found at index one this first value is index zero and the second one is index one so now the rolls are reversed this time the moon jumped over the cow our last way of inserting some values at a given format field would be to use what's referred to as a keyword argument within the format method we're going to list some keyword argument pairs we need a keyword name followed by a value so let's say animal is going to be the keyword we're going to say equals some value animal equals cow and item equals moon and you may have noticed that the color of your text might have changed so we no longer need these variables actually but i'm going to comment out these two print statements because we will get an error then so these are in keyword argument pairs and within our format field instead of keeping these empty or using an index we can use the keyword name at my first format field i'm going to insert my keyword of animal and at my second format field i would like to insert the item keyword so the result is going to be the cow jumped over the moon so let's reverse these now we'll place our item keyword here and then at the second format field we will insert our animal and this time the moon jumped over the cow here's an important concept that i'd like to bring to your attention with these values found within the format method you can actually reuse some of these more than once so let's say we would like to state the animal jumped over the animal we're going to use this animal keyword twice and our output is going to be the cow jumped over the cow if we're doing the same thing with positional arguments we can reuse the same index this time let's say that the moon jumped over the moon so our item has an index of one so within our first format field we'll state the index will be one and our second format field will also be one so our output's going to be the moon jumped over the moon all right let's take things up a level there's an even more elegant way in which we could write all of this what we'll do is store our string that we would like to format within a variable let's turn this line into a comment and let's create a variable called text text equals the string that we would like to format which is the format field jumped over the format field and if we need to format this variable we can just call the format method on it so within a print statement let's say text dot and then use the format method and pass in the values that we would like to insert at these placeholders so we're going to insert animal as well as item so our result as you would imagine is the cow jumped over the moon this next section i'm going to explain how we can add some padding to a string when we display it using the format method let's say we have a name variable and assign this a value of whatever your name is so i would like to display my name along with the custom message let's say hello my name is and then i'll use a format field here so let's follow this string by using the format method and i would like to insert my name at this location so currently this will display hello my name is bro or whatever else your name is so we can add some padding either before our name after or we can add some padding to the left and the right hand side of our value that we have so what we'll do to begin is let's add some padding to the right hand side of our name that we have so within our format field if we need to add some padding within the format field add colon and then the amount of space you would like to allocate to displaying your value so let's say 10. so i'm going to allocate 10 spaces worth of room to display my name you can't really see it right now but let's take a look so i can't move my cursor past this line at the end of my name but with my second line i have all of this room to work with so if i were to change my string that i have let's say nice to meet you well then all of this padding that i have is going to be more evident so we can add a number preceding with a colon to add some padding to a value and then you can left align this right align it or center align it so what i'll do is copy this line that i have if you need to left align it you use the less than sign but there's going to be no visible change because that's already the default if you need to write a line precede your number with a greater than sign so your value is going to be right aligned if you need to center this value then use the carrot so this will center align your value within the padding that you have allotted one question that you might have for me and i'll try and answer that now because it's relevant what if we need to add a positional argument or a keyword argument to our format field if there's already some text within here so what you would do before the colon you would just precede the colon with either your positional argument or your keyword argument followed by colon and then whatever you want to add afterwards to format your value that you have all right ladies and gentlemen we are near the end and i promise that this is the last section how can we format some numbers let's say we have a number variable and this will equal the first few digits of pi 3.14159 let's pretend that we would like to display only the first two digits after the decimal so we can do so using the format method let's print the number pi is and then i'll use a format field here and we will call the format method and insert our number that we have so if i need to display only the first two digits after the decimal within the format field i will add colon dot to f is for floating point numbers that's anything with a decimal portion so the result is that this will display only the first two digits after my decimal because we placed two within the format field so if this was 3 0.3 f this would display three digits after the decimal portion oh and apparently this will round your number so that's something that you should keep in mind so this time let's change our number to something larger like 1000 and i will copy this line and make a few changes let's say the number is and i would like to add a comma at the thousands place so after the colon within the format field i will add a comma so this will automatically add a comma to all 1000s places another cool thing that you can do is that you can display your number as binary so within the format field add colon b this will display a binary representation of your number you can do the same thing with octal by adding colon o so our number is now being displayed as an octal number and you can do the same thing with hexadecimal lowercase x for lowercase or uppercase x for all uppercase so my number 1000 is now in hexadecimal and lastly we can display this number in scientific notation using either lowercase e for lowercase or capital e for uppercase and mynumber1000 is now in scientific notation alright everybody so that's a few things that you can do with the format method it's an optional method that gives users more control when displaying output if you would like a copy of all the code that we've written here today i will post everything in the comments down below don't be afraid to smash that like button drop a comment down below and subscribe if you'd like to become a fellow bro hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
