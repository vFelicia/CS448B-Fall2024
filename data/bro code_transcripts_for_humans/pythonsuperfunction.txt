With timestamps:

00:00 - hey what's going on everybody it's bro
00:02 - hope you're doing well
00:03 - and in this video i'm going to explain
00:05 - the super function in python
00:06 - so sit back relax and enjoy the show
00:12 - if i could have just a moment of your
00:13 - time please like
00:15 - comment and subscribe i would greatly
00:17 - appreciate it
00:19 - well then since you clicked on this
00:21 - video i should probably discuss the
00:23 - super function
00:24 - now the super function is used to give
00:25 - access to the methods
00:27 - of a parent class it returns a temporary
00:30 - object
00:31 - of a parent class when used here's an
00:34 - example of why
00:34 - the super function would be useful let's
00:37 - take this program that i've written
00:39 - there's three classes a class called
00:41 - rectangle which is the parent class
00:43 - to two children classes square and cube
00:46 - and all we're doing is creating a square
00:48 - object and a cube object
00:50 - but we need to pass in a length and a
00:52 - width for squares
00:54 - and a length width and height for cubes
00:57 - now with programming we don't like to
00:59 - repeat code we like to reuse code and if
01:01 - you take a look within my knit methods
01:03 - for both square and cube we're repeating
01:06 - self.length equals length and
01:08 - self.width equals width twice for our
01:11 - init methods
01:12 - so one thing that we can do any
01:14 - similarities between the square and cube
01:16 - class
01:17 - we can place within the rectangle class
01:19 - and then
01:20 - reuse this code so what i'm going to do
01:22 - is copy this init method within our
01:25 - square class
01:26 - and paste it within our rectangle parent
01:29 - class
01:30 - and then in order to access this init
01:33 - method
01:33 - we can use the super function so we no
01:36 - longer need
01:37 - these two lines of code what i'm going
01:38 - to do is ask
01:40 - the rectangle class to use its init
01:42 - method so we're going to type
01:44 - super parentheses dot and then the name
01:47 - or the function of the parent class
01:49 - that we would like to use and i would
01:51 - like to use the init method
01:52 - but i need to send a length and a width
01:54 - because it requires that
01:56 - so let's send these so we're going to
01:58 - pass in our length and
01:59 - our width and now we can do the same
02:01 - thing for our cube init method
02:03 - so i will copy this line of code we no
02:05 - longer need these two lines of code
02:07 - because we will be reusing our init
02:10 - method within
02:10 - the parent class of rectangle but we'll
02:13 - still need to keep
02:14 - this line in to assign the height
02:16 - because that's a difference between
02:18 - our square and cube class and now we can
02:21 - just reuse this init method within the
02:23 - rectangle parent class
02:25 - now i'm thinking that we should probably
02:26 - test to see if length and width are
02:29 - assigned to these attributes
02:30 - and one way that i think would be fun
02:32 - would be to create an
02:33 - area method for squares and a volume
02:36 - method for cubes
02:37 - so let's define an area method within
02:39 - the square class
02:40 - def area and i would like to return
02:44 - self dot length times
02:48 - self dot width and we can create a
02:51 - volume method within cubes
02:53 - so let's do that def let's change this
02:56 - to volume
02:57 - we'll multiply it length times width
03:00 - times height
03:01 - but we need to type self dot pipe
03:04 - and we can call these methods to get the
03:07 - area
03:08 - of a square or the volume of a cube
03:11 - let's print
03:13 - square dot area
03:17 - and then cube dot
03:21 - volume so if our init method
03:24 - is actually being used we should have a
03:27 - length and the width
03:28 - assigned to these attributes and it
03:31 - looks like we do
03:32 - in conclusion the super function is used
03:34 - to give access to the methods of
03:36 - a parent class it returns a temporary
03:39 - object
03:40 - of a parent class when used in order to
03:42 - access the methods of the parent class
03:45 - also known as a super class and in this
03:48 - example
03:48 - within the init methods of both square
03:51 - and cube
03:52 - we immediately called the init method of
03:54 - the parent class
03:55 - to pass in some arguments that both of
03:58 - these classes
03:59 - have in common so if you would like a
04:01 - copy of this code i will post all of
04:03 - this in the comments section down below
04:05 - but yeah that is how the super function
04:07 - works in python
04:10 - hey you yeah i'm talking to you if you
04:12 - learned something new
04:13 - then help me help you in three easy
04:15 - steps
04:16 - by smashing that like button drop a
04:18 - comment down below
04:19 - and subscribe if you'd like to become a
04:21 - fellow bro
04:28 - [Music]
04:41 - foreign

Cleaned transcript:

hey what's going on everybody it's bro hope you're doing well and in this video i'm going to explain the super function in python so sit back relax and enjoy the show if i could have just a moment of your time please like comment and subscribe i would greatly appreciate it well then since you clicked on this video i should probably discuss the super function now the super function is used to give access to the methods of a parent class it returns a temporary object of a parent class when used here's an example of why the super function would be useful let's take this program that i've written there's three classes a class called rectangle which is the parent class to two children classes square and cube and all we're doing is creating a square object and a cube object but we need to pass in a length and a width for squares and a length width and height for cubes now with programming we don't like to repeat code we like to reuse code and if you take a look within my knit methods for both square and cube we're repeating self.length equals length and self.width equals width twice for our init methods so one thing that we can do any similarities between the square and cube class we can place within the rectangle class and then reuse this code so what i'm going to do is copy this init method within our square class and paste it within our rectangle parent class and then in order to access this init method we can use the super function so we no longer need these two lines of code what i'm going to do is ask the rectangle class to use its init method so we're going to type super parentheses dot and then the name or the function of the parent class that we would like to use and i would like to use the init method but i need to send a length and a width because it requires that so let's send these so we're going to pass in our length and our width and now we can do the same thing for our cube init method so i will copy this line of code we no longer need these two lines of code because we will be reusing our init method within the parent class of rectangle but we'll still need to keep this line in to assign the height because that's a difference between our square and cube class and now we can just reuse this init method within the rectangle parent class now i'm thinking that we should probably test to see if length and width are assigned to these attributes and one way that i think would be fun would be to create an area method for squares and a volume method for cubes so let's define an area method within the square class def area and i would like to return self dot length times self dot width and we can create a volume method within cubes so let's do that def let's change this to volume we'll multiply it length times width times height but we need to type self dot pipe and we can call these methods to get the area of a square or the volume of a cube let's print square dot area and then cube dot volume so if our init method is actually being used we should have a length and the width assigned to these attributes and it looks like we do in conclusion the super function is used to give access to the methods of a parent class it returns a temporary object of a parent class when used in order to access the methods of the parent class also known as a super class and in this example within the init methods of both square and cube we immediately called the init method of the parent class to pass in some arguments that both of these classes have in common so if you would like a copy of this code i will post all of this in the comments section down below but yeah that is how the super function works in python hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro foreign
