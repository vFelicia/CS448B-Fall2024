With timestamps:

00:00 - hey what's going on everybody it's your
00:01 - bro here hope you're doing well and in
00:03 - this video i'm going to teach you guys
00:04 - how we can create a simple clock program
00:06 - in java so
00:07 - sit back relax and enjoy the show
00:12 - if you find this video helpful please
00:13 - remember to like
00:15 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - okay everybody let's create a clock so
00:22 - go to
00:22 - file new java project to create a new
00:25 - java project
00:26 - let's call this clock and then finish
00:29 - don't create a new module
00:31 - then go to your project folder and we're
00:33 - going to create two classes
00:34 - file new class let's call this first
00:36 - class just main because it contains the
00:38 - main method
00:39 - check public static void min and then
00:42 - we'll create our second class
00:44 - file new class i'm going to call this my
00:47 - frame because it's going to
00:48 - extend the jframe class so my frame
00:53 - extends jframe and then within our main
00:56 - class we're going to
00:57 - create an instance of our my frame class
01:00 - so let's just say
01:01 - new my frame
01:06 - now we'll need an import so we'll just
01:08 - include these as we go along
01:10 - and we'll create the constructor for my
01:12 - frame
01:15 - and let's go through the steps of
01:16 - creating the frame itself so
01:18 - this dot set default close operation
01:22 - jframe dot exit on close
01:28 - i'll set a title to this dot set title
01:31 - name this whatever you want this will
01:33 - appear on the top of the window
01:35 - let's call this my clock program
01:40 - and you can set a layout i tend to like
01:42 - flow layout manager so i'm going to set
01:44 - this to that
01:46 - this dot set layout a new flow layout
01:52 - and we'll need an import here as well
01:56 - and let's set a size this dot
02:00 - set size
02:03 - i already took some measurements so it
02:05 - seems for this program
02:06 - that 350 by 200 is not too bad of a size
02:13 - and i do not want this to be resizable
02:15 - but this really isn't necessary
02:17 - this dot set resizable i'm going to set
02:19 - this to false
02:20 - and lastly we're going to set the
02:22 - visibility to true this dot
02:24 - set visible and pass in true
02:27 - let's run this once just to test it
02:30 - this is our frame and we're eventually
02:32 - going to be adding
02:34 - three separate labels to this frame the
02:36 - first for the current time
02:38 - the second for the day of the week and
02:40 - the third for the date
02:42 - so let's create a calendar and we can
02:44 - actually get the current date and time
02:46 - using this calendar
02:48 - so we're going to create an instance of
02:50 - our calendar
02:51 - and we'll probably need to import this
02:53 - as well
02:55 - this calendar class is an abstract class
02:57 - that provides methods for converting
02:58 - between a specific instant in time and a
03:01 - set of calendar fields
03:03 - one other thing that we'll need is a
03:04 - simple date
03:06 - format and let's call this instance time
03:10 - format and according to this
03:13 - to the description is that the simple
03:16 - date format is a concrete
03:18 - class for formatting and parsing dates
03:20 - we can actually use
03:21 - format specifiers to arrange the time
03:24 - however we want
03:25 - if we want to include am or pm if we
03:27 - want to make this a 24 hour clock
03:30 - be sure to include an instance of a
03:32 - simple date format
03:33 - let's also create a j label and we'll
03:35 - call this time
03:37 - label in which we will use to display
03:39 - the time
03:41 - all right and that's what we'll need for
03:42 - now we'll include some other fields
03:44 - later
03:45 - so let's go to the constructor and
03:46 - create our instances
03:48 - of these objects so let's add these
03:51 - before we actually make the frame
03:52 - visible
03:53 - so let's begin with the time format
03:59 - time format equals
04:03 - new simple date
04:06 - format and then within the constructor
04:09 - we pass
04:09 - in some format specifiers to how we want
04:12 - to display this time format
04:14 - i'm actually going to go to oracle's
04:16 - website and show you a few
04:18 - here's oracle's documentation on their
04:20 - website for the simple date format i'll
04:22 - include this link in the description if
04:24 - you would like to take a look for
04:25 - yourself
04:26 - so within the constructor of the simple
04:27 - date format we can pass in some letters
04:30 - and that will format the time based on
04:32 - what we need for our program
04:34 - if we want the hours minute seconds that
04:36 - would be
04:37 - according to this documentation either
04:40 - lowercase h if you want a 12 hour
04:42 - clock capital h for a 24 hour clock
04:45 - lower case m for minutes lower case s
04:48 - for seconds
04:49 - and then am or pm is lower case a and
04:51 - there's other things you can include too
04:53 - like the month of the year the year
04:56 - itself
04:56 - error designator that's a d or bc i
04:59 - guess
05:00 - um so we're going to include a few of
05:02 - these and if you click on the
05:03 - presentation
05:04 - it'll get more in depth on different
05:06 - ways you can format these
05:08 - so let's head back to the constructor
05:09 - for the simple date format
05:11 - for the hours if you want two digits
05:13 - that is
05:14 - two lowercase h's minutes would be
05:17 - two lowercase m's and seconds would be
05:20 - two lowercase s's
05:22 - and i'm going to include am rpm so that
05:24 - is lowercase a
05:26 - now we need to set the label with the
05:30 - current time
05:31 - but we need to finish instantiating this
05:33 - label so let's do so
05:35 - time label equals new j label
05:40 - and we want to get the current time and
05:43 - actually let's declare a string to do
05:45 - that we'll call this
05:46 - string time and
05:49 - time equals time
05:54 - format dot format function and we pass
05:58 - in
05:58 - a date how do we get that date by using
06:01 - our calendar
06:03 - calendar this is with a capital c dot
06:07 - get instance
06:10 - and we're going to do some method
06:11 - chaining dot
06:13 - get time this will get the current time
06:18 - and store it within the string variable
06:20 - called time
06:21 - now we're going to set the text of the
06:23 - time label
06:25 - with our time time label dot set text
06:30 - and we're passing in our time string
06:36 - and we need to add this label to the
06:38 - frame
06:39 - this dot add and we're adding our
06:42 - time label
06:45 - and let's test this currently it is just
06:48 - after 7
06:49 - a.m where i am now if you notice this
06:52 - time is not moving
06:53 - so we'll want to update this clock every
06:56 - one second
06:57 - so we're going to change our program
06:59 - around a little bit so let's create a
07:01 - method called
07:02 - set time and we're going to call this
07:04 - method every
07:05 - about one second to update so after
07:08 - we set the visibility to true let's
07:10 - create a method
07:12 - called set time and call this method set
07:15 - time
07:17 - and let's define what set time does
07:20 - so let's make this public void
07:23 - set time
07:26 - and what are we going to do when we call
07:28 - this well one
07:30 - let's move these two lines of code and
07:32 - place them within the
07:33 - set time function
07:38 - so then we need to actually update this
07:40 - every second
07:42 - one way in which we can do that that's
07:43 - fairly simple we can create a while loop
07:46 - while true this will continue until we
07:48 - close the program
07:52 - but we want to actually have this update
07:55 - only every one second and one way to do
07:58 - that is to use thread dot sleep
08:01 - so this main thread will sleep for
08:04 - approximately
08:05 - 1 000 milliseconds and then update again
08:08 - and then we need to
08:09 - surround this with a try and catch block
08:12 - and now this should update every one
08:14 - second or so
08:17 - yeah if you take a look it actually is
08:20 - i'm just gonna change the font so that
08:22 - it's a little easier to read
08:23 - and it looks better so let's change the
08:26 - font
08:27 - maybe right here so we're going to
08:29 - change the font of our time
08:31 - label time label dot set font
08:35 - and we'll pass in a new font
08:38 - pick whatever font you want
08:41 - i already picked one out for dana
08:45 - this is a font family um this is a font
08:48 - styling
08:49 - let's make this just plain and a size
08:53 - 50 is good let's also change the
08:56 - foreground and background color
08:58 - time label dot set
09:01 - foreground and we can pass in a color
09:04 - i'm going to create a custom color so
09:06 - new color and i'm going to use a hex
09:09 - value
09:10 - so i want green that is 0x
09:13 - 0 0 ff 0 0 but
09:16 - pick whatever color you want i'm also
09:18 - going to change the background color
09:20 - time label dot set background
09:23 - and i just want black so that is color
09:26 - dot black
09:27 - it's not necessary to pass in a new
09:29 - color
09:31 - and in order to display the background
09:33 - we have to set opaque to true
09:35 - time label dot set opaque and we pass in
09:39 - true
09:42 - and now this should look better it's
09:44 - more customized
09:45 - yeah i kind of like that and it's
09:47 - updating every one second
09:49 - now let's actually display the day of
09:51 - the week
09:52 - right underneath so let's create another
09:55 - label
09:56 - another j label and let's call this
09:59 - day label and we'll
10:02 - have a string called day let's finish
10:05 - instantiating
10:07 - this label and we need to create a
10:10 - format for this too
10:11 - so we're going to create another simple
10:12 - date format before i forget to add that
10:15 - so let's call this day format and we'll
10:19 - want to instantiate this instance of our
10:21 - day format
10:22 - so i'm just going to copy the line above
10:24 - and change time format to day format
10:27 - now we need to see what format
10:29 - specifiers we need to display
10:31 - the day of the week so let's go to our
10:33 - documentation
10:34 - according to oracle's documentation on
10:36 - the simple date format if you need to
10:38 - retrieve
10:39 - the day of the week that is capital e so
10:42 - we're going to pass in a capital e to
10:44 - the constructor of the simple date
10:45 - format
10:46 - and we'll need to finish instantiating
10:49 - this date
10:50 - label that we created so let's do so
10:52 - right underneath the time label that we
10:53 - have
10:54 - day label equals new j
10:57 - label and i'm going to change the font
10:59 - right away because we'll eventually be
11:01 - doing that anyways
11:03 - so this will be day label dot set font
11:07 - i'm going to pick a different font
11:09 - i am fond of ink free that's another one
11:12 - of my favorite fonts and then something
11:13 - slightly
11:14 - smaller so let's change this to 35 and
11:16 - then we need to add
11:17 - the data label to this frame this dot
11:20 - add and we're adding our
11:21 - day label and we'll need to get
11:24 - the current time using the calendar
11:27 - class
11:28 - so let's copy what we have here and
11:30 - paste it right underneath
11:32 - and we're going to use instead of time
11:35 - day and we're going to use our
11:38 - day format in place of our time format
11:42 - day label set text to our day string
11:45 - and now this will actually display the
11:48 - day of the week
11:49 - directly underneath and today it is
11:51 - currently sunday
11:52 - however with the way our format
11:54 - specifier is used
11:56 - a capital e gives you the day of the
11:59 - week
11:59 - in three letters for some reason if you
12:02 - want the entire
12:03 - day of the week spelled out that would
12:05 - be for ease for some reason
12:07 - according to the documentation so if you
12:09 - want the entire day of the week
12:11 - spelt that would be four years and now
12:14 - it displays the word
12:15 - sunday let's also display the current
12:18 - date
12:18 - underneath the day of the week so let's
12:21 - create another simple date format
12:23 - another label and another string
12:25 - and we'll call this date format
12:29 - jlabel date label
12:33 - and then string date and it's going to
12:36 - be the same process
12:38 - as before so we'll need a new simple
12:41 - date format
12:42 - and this will be date format and we need
12:45 - to see what the format specifiers are
12:48 - for date
12:49 - here we are back at this documentation
12:51 - one more time
12:53 - we want the month that would be capital
12:55 - m
12:56 - day would be lowercase d and
13:00 - year is lowercase y right here
13:04 - let's say we want the month first let's
13:07 - include
13:08 - two capital m so we have two digits to
13:10 - work with
13:11 - followed by the day that would be two
13:13 - lower case d's
13:14 - then i'm going to include a comma just
13:17 - to separate things and then
13:19 - space for y's for the year because
13:23 - this uses four digits then we need to
13:26 - finish creating
13:27 - our date label and let's do that
13:30 - underneath
13:31 - the day label date label equals
13:34 - new j label
13:38 - and i'll set the font maybe i'll just
13:39 - copy what we have before
13:41 - with the day label let's change day
13:45 - label to date label and i'll make this
13:47 - something
13:48 - slightly smaller 25 would be good and we
13:51 - need to add
13:52 - the date label to the frame this dot add
13:56 - date label and we need to get the
14:00 - current time so let's copy what we have
14:03 - here
14:04 - and change day to date
14:07 - make sure to include that with the uh
14:10 - format simple date format that you used
14:12 - so instead of day format this is date
14:14 - format
14:15 - instead of day label this is date label
14:18 - and set text
14:19 - to our date string
14:22 - and now this will get the current date
14:25 - and display it
14:28 - whoa hold on a second i'm going to uh
14:30 - allow this to be resizable
14:32 - because this is using a flow layout give
14:35 - me one second
14:36 - uh this dot set resizable we're just
14:38 - going to comment this out for a second
14:43 - and let's push this underneath all right
14:45 - so
14:46 - here's our date it is currently a
14:48 - september 6th 2020.
14:51 - now one thing you could do if you want
14:52 - to display the
14:54 - month instead of a digit you can display
14:57 - the actual name of the month that is for
14:59 - some reason
15:00 - five m's and now i'm going to let this
15:03 - be resizable again
15:06 - so now it displays september instead of
15:09 - zero nine
15:10 - and there's ways you can actually change
15:11 - this into different languages according
15:13 - to oracle's documentation
15:16 - so yeah if you want the name of the
15:18 - month that is for some reason
15:20 - five capital ms well everybody that's
15:22 - how to create a simple clock program
15:25 - looking back at the code for this we
15:26 - didn't even need this instance of the
15:28 - calendar class
15:29 - because we were able to call the
15:31 - calendar class directly to get the time
15:34 - sometimes after you code something
15:36 - you'll find a better way in which you
15:37 - could have coded that
15:39 - and that case would apply to this video
15:41 - so
15:42 - we didn't even really need this instance
15:43 - of the calendar class
15:45 - so if you want a copy of all this code
15:46 - i'll post all of this in the comments
15:48 - down below
15:49 - but yeah that's one of a few ways in
15:50 - which you can create a clock program in
15:53 - java
15:55 - hey you yeah i'm talking to you if you
15:57 - learn something new
15:58 - then you can help me help you in three
16:01 - easy steps
16:02 - by smashing that like button drop a
16:05 - comment down below
16:06 - and subscribe if you'd like to become a
16:08 - fellow bro
16:23 - [Music]
16:29 - you

Cleaned transcript:

hey what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys how we can create a simple clock program in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running okay everybody let's create a clock so go to file new java project to create a new java project let's call this clock and then finish don't create a new module then go to your project folder and we're going to create two classes file new class let's call this first class just main because it contains the main method check public static void min and then we'll create our second class file new class i'm going to call this my frame because it's going to extend the jframe class so my frame extends jframe and then within our main class we're going to create an instance of our my frame class so let's just say new my frame now we'll need an import so we'll just include these as we go along and we'll create the constructor for my frame and let's go through the steps of creating the frame itself so this dot set default close operation jframe dot exit on close i'll set a title to this dot set title name this whatever you want this will appear on the top of the window let's call this my clock program and you can set a layout i tend to like flow layout manager so i'm going to set this to that this dot set layout a new flow layout and we'll need an import here as well and let's set a size this dot set size i already took some measurements so it seems for this program that 350 by 200 is not too bad of a size and i do not want this to be resizable but this really isn't necessary this dot set resizable i'm going to set this to false and lastly we're going to set the visibility to true this dot set visible and pass in true let's run this once just to test it this is our frame and we're eventually going to be adding three separate labels to this frame the first for the current time the second for the day of the week and the third for the date so let's create a calendar and we can actually get the current date and time using this calendar so we're going to create an instance of our calendar and we'll probably need to import this as well this calendar class is an abstract class that provides methods for converting between a specific instant in time and a set of calendar fields one other thing that we'll need is a simple date format and let's call this instance time format and according to this to the description is that the simple date format is a concrete class for formatting and parsing dates we can actually use format specifiers to arrange the time however we want if we want to include am or pm if we want to make this a 24 hour clock be sure to include an instance of a simple date format let's also create a j label and we'll call this time label in which we will use to display the time all right and that's what we'll need for now we'll include some other fields later so let's go to the constructor and create our instances of these objects so let's add these before we actually make the frame visible so let's begin with the time format time format equals new simple date format and then within the constructor we pass in some format specifiers to how we want to display this time format i'm actually going to go to oracle's website and show you a few here's oracle's documentation on their website for the simple date format i'll include this link in the description if you would like to take a look for yourself so within the constructor of the simple date format we can pass in some letters and that will format the time based on what we need for our program if we want the hours minute seconds that would be according to this documentation either lowercase h if you want a 12 hour clock capital h for a 24 hour clock lower case m for minutes lower case s for seconds and then am or pm is lower case a and there's other things you can include too like the month of the year the year itself error designator that's a d or bc i guess um so we're going to include a few of these and if you click on the presentation it'll get more in depth on different ways you can format these so let's head back to the constructor for the simple date format for the hours if you want two digits that is two lowercase h's minutes would be two lowercase m's and seconds would be two lowercase s's and i'm going to include am rpm so that is lowercase a now we need to set the label with the current time but we need to finish instantiating this label so let's do so time label equals new j label and we want to get the current time and actually let's declare a string to do that we'll call this string time and time equals time format dot format function and we pass in a date how do we get that date by using our calendar calendar this is with a capital c dot get instance and we're going to do some method chaining dot get time this will get the current time and store it within the string variable called time now we're going to set the text of the time label with our time time label dot set text and we're passing in our time string and we need to add this label to the frame this dot add and we're adding our time label and let's test this currently it is just after 7 a.m where i am now if you notice this time is not moving so we'll want to update this clock every one second so we're going to change our program around a little bit so let's create a method called set time and we're going to call this method every about one second to update so after we set the visibility to true let's create a method called set time and call this method set time and let's define what set time does so let's make this public void set time and what are we going to do when we call this well one let's move these two lines of code and place them within the set time function so then we need to actually update this every second one way in which we can do that that's fairly simple we can create a while loop while true this will continue until we close the program but we want to actually have this update only every one second and one way to do that is to use thread dot sleep so this main thread will sleep for approximately 1 000 milliseconds and then update again and then we need to surround this with a try and catch block and now this should update every one second or so yeah if you take a look it actually is i'm just gonna change the font so that it's a little easier to read and it looks better so let's change the font maybe right here so we're going to change the font of our time label time label dot set font and we'll pass in a new font pick whatever font you want i already picked one out for dana this is a font family um this is a font styling let's make this just plain and a size 50 is good let's also change the foreground and background color time label dot set foreground and we can pass in a color i'm going to create a custom color so new color and i'm going to use a hex value so i want green that is 0x 0 0 ff 0 0 but pick whatever color you want i'm also going to change the background color time label dot set background and i just want black so that is color dot black it's not necessary to pass in a new color and in order to display the background we have to set opaque to true time label dot set opaque and we pass in true and now this should look better it's more customized yeah i kind of like that and it's updating every one second now let's actually display the day of the week right underneath so let's create another label another j label and let's call this day label and we'll have a string called day let's finish instantiating this label and we need to create a format for this too so we're going to create another simple date format before i forget to add that so let's call this day format and we'll want to instantiate this instance of our day format so i'm just going to copy the line above and change time format to day format now we need to see what format specifiers we need to display the day of the week so let's go to our documentation according to oracle's documentation on the simple date format if you need to retrieve the day of the week that is capital e so we're going to pass in a capital e to the constructor of the simple date format and we'll need to finish instantiating this date label that we created so let's do so right underneath the time label that we have day label equals new j label and i'm going to change the font right away because we'll eventually be doing that anyways so this will be day label dot set font i'm going to pick a different font i am fond of ink free that's another one of my favorite fonts and then something slightly smaller so let's change this to 35 and then we need to add the data label to this frame this dot add and we're adding our day label and we'll need to get the current time using the calendar class so let's copy what we have here and paste it right underneath and we're going to use instead of time day and we're going to use our day format in place of our time format day label set text to our day string and now this will actually display the day of the week directly underneath and today it is currently sunday however with the way our format specifier is used a capital e gives you the day of the week in three letters for some reason if you want the entire day of the week spelled out that would be for ease for some reason according to the documentation so if you want the entire day of the week spelt that would be four years and now it displays the word sunday let's also display the current date underneath the day of the week so let's create another simple date format another label and another string and we'll call this date format jlabel date label and then string date and it's going to be the same process as before so we'll need a new simple date format and this will be date format and we need to see what the format specifiers are for date here we are back at this documentation one more time we want the month that would be capital m day would be lowercase d and year is lowercase y right here let's say we want the month first let's include two capital m so we have two digits to work with followed by the day that would be two lower case d's then i'm going to include a comma just to separate things and then space for y's for the year because this uses four digits then we need to finish creating our date label and let's do that underneath the day label date label equals new j label and i'll set the font maybe i'll just copy what we have before with the day label let's change day label to date label and i'll make this something slightly smaller 25 would be good and we need to add the date label to the frame this dot add date label and we need to get the current time so let's copy what we have here and change day to date make sure to include that with the uh format simple date format that you used so instead of day format this is date format instead of day label this is date label and set text to our date string and now this will get the current date and display it whoa hold on a second i'm going to uh allow this to be resizable because this is using a flow layout give me one second uh this dot set resizable we're just going to comment this out for a second and let's push this underneath all right so here's our date it is currently a september 6th 2020. now one thing you could do if you want to display the month instead of a digit you can display the actual name of the month that is for some reason five m's and now i'm going to let this be resizable again so now it displays september instead of zero nine and there's ways you can actually change this into different languages according to oracle's documentation so yeah if you want the name of the month that is for some reason five capital ms well everybody that's how to create a simple clock program looking back at the code for this we didn't even need this instance of the calendar class because we were able to call the calendar class directly to get the time sometimes after you code something you'll find a better way in which you could have coded that and that case would apply to this video so we didn't even really need this instance of the calendar class so if you want a copy of all this code i'll post all of this in the comments down below but yeah that's one of a few ways in which you can create a clock program in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
