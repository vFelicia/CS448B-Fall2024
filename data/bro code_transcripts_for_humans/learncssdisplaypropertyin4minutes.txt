With timestamps:

00:00 - hey what's going on everybody today I'm
00:01 - going to explain the display property in
00:03 - HTML and CSS now HTML elements they have
00:07 - a default display value they're either
00:09 - Block Level or inline an element that is
00:12 - Block Level starts on a new line and
00:14 - takes up the entire width available
00:16 - inline elements do not start on a new
00:18 - line the width of that element is
00:20 - limited to what is needed a few examples
00:22 - of Block Level elements would include
00:24 - but are not limited to header elements
00:27 - developments paragraph elements form
00:29 - elements header elements and footer
00:31 - elements inline elements include but yet
00:33 - again are not limited to span elements
00:36 - anchor elements and image Elements by
00:39 - utilizing the display property we can
00:41 - specify if and how an element is
00:44 - displayed we can set an element to be a
00:46 - block level inline inline block or not
00:50 - displayed at all here's a few examples
00:53 - we'll create a development
00:56 - with the inner text being div and a span
00:59 - element
01:01 - with the inner text being span
01:04 - let me zoom in a little let's go to our
01:07 - style sheet for my development I will
01:09 - set the background color to be red
01:14 - foreign for my span element I will set
01:17 - the background color to be blue
01:21 - that's good div is a block level element
01:23 - it's going to take up the entire width
01:26 - available span isn't it only takes up
01:28 - the necessary space needed to display
01:30 - that element even if I were to extend
01:32 - the width of the browser
01:35 - my div element takes up the entire width
01:37 - my span element stays the same because
01:39 - it's in line we can apply a width and a
01:42 - height to a block level element like
01:44 - this
01:45 - width will be 100
01:47 - height will be 100. however for an
01:50 - inline element the width and height
01:52 - wouldn't apply you can see that our span
01:54 - element stays the same size by utilizing
01:57 - the display property we can change the
01:59 - behavior of these elements how they're
02:01 - displayed if I set my div elements to be
02:04 - block
02:05 - well it already is a block level element
02:07 - there's no change if I set my span
02:10 - element to display as a block level
02:12 - element
02:13 - well then we can apply a width and
02:14 - height these two elements are displayed
02:16 - as a block
02:18 - all of this extra white space is
02:20 - allocated for each of these elements
02:21 - their Block Level if I were to create a
02:24 - paragraph let me shrink this a little
02:26 - bit
02:27 - I'll create some sample text I'll type
02:29 - lorem then hit tab these are not within
02:32 - paragraph tags just so you know all of
02:34 - the space is reserved for my Block Level
02:36 - elements that's important later now
02:39 - let's go back to our style sheet if I
02:41 - change the display property to be in
02:43 - line
02:43 - guess what's going to happen
02:46 - well both of these elements are in line
02:48 - now we can't apply width or height
02:50 - properties to these elements they only
02:52 - take up as much room as necessary all
02:55 - other content is displayed in line with
02:57 - them then there's inline block
03:00 - it's much like inline but we can also
03:03 - apply a width and a height
03:05 - these two elements are no longer taking
03:07 - up the entire width of my viewport if I
03:10 - were to increase the size of my window
03:12 - we can display content in line with
03:15 - these inline blocks you can see that the
03:17 - text is lined up
03:19 - then there's none
03:22 - will effectively erase that element
03:26 - as if it's gone
03:28 - if I revert these displays to inline
03:30 - block there's also the visibility
03:32 - property which is fairly similar to
03:34 - display if I set visibility to be hidden
03:38 - with our div element this element is
03:41 - hidden but it's still taking up space as
03:43 - if it was still there it's kind of like
03:45 - it's invisible
03:46 - whereas in if display was set to none
03:49 - it's as if it no longer exists the next
03:51 - element will take its place
03:54 - all right everybody that is an
03:55 - introduction to the display property we
03:57 - can display elements as a block inline
04:00 - inline block none or by utilizing the
04:04 - visibility property we can hide them and
04:06 - that is an introduction to the display
04:08 - property in CSS

Cleaned transcript:

hey what's going on everybody today I'm going to explain the display property in HTML and CSS now HTML elements they have a default display value they're either Block Level or inline an element that is Block Level starts on a new line and takes up the entire width available inline elements do not start on a new line the width of that element is limited to what is needed a few examples of Block Level elements would include but are not limited to header elements developments paragraph elements form elements header elements and footer elements inline elements include but yet again are not limited to span elements anchor elements and image Elements by utilizing the display property we can specify if and how an element is displayed we can set an element to be a block level inline inline block or not displayed at all here's a few examples we'll create a development with the inner text being div and a span element with the inner text being span let me zoom in a little let's go to our style sheet for my development I will set the background color to be red foreign for my span element I will set the background color to be blue that's good div is a block level element it's going to take up the entire width available span isn't it only takes up the necessary space needed to display that element even if I were to extend the width of the browser my div element takes up the entire width my span element stays the same because it's in line we can apply a width and a height to a block level element like this width will be 100 height will be 100. however for an inline element the width and height wouldn't apply you can see that our span element stays the same size by utilizing the display property we can change the behavior of these elements how they're displayed if I set my div elements to be block well it already is a block level element there's no change if I set my span element to display as a block level element well then we can apply a width and height these two elements are displayed as a block all of this extra white space is allocated for each of these elements their Block Level if I were to create a paragraph let me shrink this a little bit I'll create some sample text I'll type lorem then hit tab these are not within paragraph tags just so you know all of the space is reserved for my Block Level elements that's important later now let's go back to our style sheet if I change the display property to be in line guess what's going to happen well both of these elements are in line now we can't apply width or height properties to these elements they only take up as much room as necessary all other content is displayed in line with them then there's inline block it's much like inline but we can also apply a width and a height these two elements are no longer taking up the entire width of my viewport if I were to increase the size of my window we can display content in line with these inline blocks you can see that the text is lined up then there's none will effectively erase that element as if it's gone if I revert these displays to inline block there's also the visibility property which is fairly similar to display if I set visibility to be hidden with our div element this element is hidden but it's still taking up space as if it was still there it's kind of like it's invisible whereas in if display was set to none it's as if it no longer exists the next element will take its place all right everybody that is an introduction to the display property we can display elements as a block inline inline block none or by utilizing the visibility property we can hide them and that is an introduction to the display property in CSS
