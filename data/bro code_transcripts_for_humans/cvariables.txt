With timestamps:

00:00 - hey uh it's you bro hope you're doing
00:02 - well and yeah we're doing stuff with
00:04 - variables today
00:05 - in c so sit back relax and well
00:08 - enjoy the show welcome back to another
00:12 - video
00:13 - so variables variables are allocated
00:16 - space and memory to store it value
00:18 - we refer to a variable's name to access
00:21 - the stored value
00:23 - that variable now behaves as if it was
00:25 - the value that it contains
00:27 - but to create a variable we first need
00:29 - to declare a name for a variable and
00:31 - then
00:31 - precede it with the type of data that we
00:34 - are storing creating a variable
00:35 - is done in two steps declaration and
00:37 - initialization
00:38 - so we need to first declare a variable
00:41 - to allocate some space in memory to
00:42 - store a value
00:44 - so we need to precede our variable name
00:46 - with the data type
00:48 - of what we plan on storing within this
00:49 - variable if i need to store a whole
00:52 - integer
00:52 - we would precede our variable name
00:54 - withint into for integer
00:56 - and let's say that this is variable x so
00:59 - this step is declaration we are creating
01:02 - space and memory to store a value
01:05 - and to actually store a value that step
01:07 - is initialization
01:08 - so we would take our variable name x in
01:11 - this example
01:12 - and set it equal to some value so we
01:15 - declared
01:15 - that this variable is an integer we can
01:17 - only store whole integers
01:19 - maybe the number one two three so this
01:22 - is
01:23 - initialization or you could combine
01:25 - these steps together
01:26 - and let's create into y into y equals
01:29 - three two one
01:30 - this is both declaration and
01:32 - initialization
01:34 - so creating and storing a variable takes
01:36 - two steps declaration and initialization
01:39 - and in order to create a variable you
01:40 - have to precede the variable name
01:43 - with the data type of what you plan on
01:44 - storing within that variable
01:46 - int for a whole integer but there's
01:48 - other data types too let's create some
01:50 - more variables what about
01:51 - int age with variable names you're not
01:54 - limited to only
01:55 - just x and y you can really name it
01:57 - whatever you want within some
01:58 - limitations
01:59 - but make sure that the variable name is
02:01 - descriptive of what it does
02:03 - so age is going to store an age let's
02:05 - say that i
02:06 - am 21 years old so this is an integer
02:09 - a whole number if we need a number
02:11 - containing a decimal portion
02:13 - that would be a float for floating point
02:15 - number so
02:16 - one example of a variable that could
02:18 - contain a floating point number
02:20 - is a gpa grade point average let's say
02:23 - that my grade point average
02:24 - is a 2.05 so this is a
02:28 - floating point number it's a number that
02:32 - contains a decimal portion
02:34 - we can also store single characters with
02:36 - the char data type like you're
02:37 - pronouncing charizard
02:39 - and this will be a letter grade let's
02:41 - say
02:42 - now to store a single character we have
02:44 - to place it within single quotes when we
02:46 - initialize it
02:47 - with my grade variable what about a c
02:50 - like my average grade is a c remember
02:53 - everybody
02:54 - c's get degrees so char stores a
02:57 - single character now c isn't
03:00 - an object-oriented language so there is
03:02 - no string data
03:04 - type because strings are technically
03:06 - objects so if we would like to store
03:08 - like
03:08 - somebody's name we need a series of
03:10 - characters so we can create what is
03:12 - called an array
03:14 - and to create an array we would follow
03:15 - our variable name with a set of
03:18 - square brackets and then assign this
03:20 - equal to some string of text
03:22 - some series of characters place your
03:24 - series of characters within double
03:26 - quotes and we can store more than one
03:28 - character
03:28 - so this data type would be technically
03:31 - an array
03:32 - of characters i'll create a whole
03:34 - separate video on arrays
03:36 - this is basically how you can emulate a
03:38 - string it's really just
03:40 - a whole combination of single characters
03:42 - there's still a lot more data types than
03:44 - just these four i thought i would cover
03:46 - just some of the more basic data types
03:48 - just because in this video we're going
03:50 - to focus more on variables than data
03:52 - types
03:52 - i'm planning a separate video just
03:54 - dedicated to data types because there's
03:57 - way more data types than just these four
03:59 - there's bytes there's doubles there's
04:01 - longs etc
04:03 - now how can we display the value stored
04:05 - within a variable within a printf
04:07 - statement
04:08 - here's how we have to use what is
04:10 - referred to as a format specifier
04:13 - let's say we have a printf statement and
04:16 - i would like to display
04:17 - my age within a message so let's create
04:20 - some text
04:20 - you are age years old
04:24 - if i would like to display the value
04:26 - contained within my edge variable
04:28 - wherever i would like to insert that
04:31 - value
04:31 - i will place a format specifier which is
04:34 - represented by a percent sign
04:36 - and then follow this with a secret
04:38 - character that represents the data type
04:40 - of what we're inserting
04:42 - so if i need to display my age variable
04:45 - i will use
04:45 - a percent sign as a placeholder followed
04:48 - by
04:49 - d for decimal and then after my string
04:51 - of text outside of the double quotes
04:54 - add comma then the name of the variable
04:56 - you would like to insert at this
04:58 - placeholder
05:00 - so at this location i will insert age
05:03 - and then let's try this you are 21 years
05:07 - old
05:07 - so let's try that again with a different
05:09 - variable let's say
05:10 - let's go with name i'll add a second
05:13 - printf statement
05:15 - print f and then let's say hello
05:19 - and i would like to insert my name here
05:22 - so use a percent sign as
05:24 - a placeholder it's a format specifier
05:27 - then to display
05:28 - a character array that would be s for
05:30 - string
05:31 - and then add comma name
05:36 - oh then we may need to add a new line
05:38 - character to the end of these because i
05:39 - forgot
05:40 - let's try that again hello bro you are
05:43 - 21 years old
05:45 - okay let's display our grade
05:48 - print f then within
05:51 - quotes your average
05:55 - grade is then to display a character
05:59 - variable that would be
06:00 - percent c for character then outside of
06:04 - our double quotes add
06:05 - comma the name of the variable we would
06:07 - like to insert at this location
06:09 - so comma grid i think i'm just going to
06:12 - space these out a little bit
06:14 - okay then i will add a new line
06:16 - character to the end of this
06:20 - hello bro you are 21 years old your
06:22 - average grade
06:23 - is c then to display a
06:26 - float that would be percent f print
06:29 - f your
06:32 - gpa is percent
06:36 - f then i'll add a new line character
06:40 - so follow this with comma the name of
06:42 - the variable gpa
06:45 - okay your gpa is 2.05
06:48 - so later on we'll discuss more about
06:51 - format specifiers there's ways that we
06:52 - can format
06:53 - how our variables are displayed i just
06:56 - realized that i misspelled average twice
06:58 - so yeah those are variables they are
07:01 - allocated space and memory to store a
07:03 - value
07:04 - we refer to a variable's name to access
07:07 - the stored value
07:08 - that variable now behaves as if it was
07:11 - the value that it contains
07:13 - but to declare a variable we have to
07:15 - state what type of data that we are
07:17 - storing within that variable
07:19 - so yeah those are variables if this
07:21 - video helped you out help me out by
07:23 - smashing that like button
07:24 - leave a random comment down below and
07:26 - subscribe if you'd like to become a
07:27 - fellow bro

Cleaned transcript:

hey uh it's you bro hope you're doing well and yeah we're doing stuff with variables today in c so sit back relax and well enjoy the show welcome back to another video so variables variables are allocated space and memory to store it value we refer to a variable's name to access the stored value that variable now behaves as if it was the value that it contains but to create a variable we first need to declare a name for a variable and then precede it with the type of data that we are storing creating a variable is done in two steps declaration and initialization so we need to first declare a variable to allocate some space in memory to store a value so we need to precede our variable name with the data type of what we plan on storing within this variable if i need to store a whole integer we would precede our variable name withint into for integer and let's say that this is variable x so this step is declaration we are creating space and memory to store a value and to actually store a value that step is initialization so we would take our variable name x in this example and set it equal to some value so we declared that this variable is an integer we can only store whole integers maybe the number one two three so this is initialization or you could combine these steps together and let's create into y into y equals three two one this is both declaration and initialization so creating and storing a variable takes two steps declaration and initialization and in order to create a variable you have to precede the variable name with the data type of what you plan on storing within that variable int for a whole integer but there's other data types too let's create some more variables what about int age with variable names you're not limited to only just x and y you can really name it whatever you want within some limitations but make sure that the variable name is descriptive of what it does so age is going to store an age let's say that i am 21 years old so this is an integer a whole number if we need a number containing a decimal portion that would be a float for floating point number so one example of a variable that could contain a floating point number is a gpa grade point average let's say that my grade point average is a 2.05 so this is a floating point number it's a number that contains a decimal portion we can also store single characters with the char data type like you're pronouncing charizard and this will be a letter grade let's say now to store a single character we have to place it within single quotes when we initialize it with my grade variable what about a c like my average grade is a c remember everybody c's get degrees so char stores a single character now c isn't an objectoriented language so there is no string data type because strings are technically objects so if we would like to store like somebody's name we need a series of characters so we can create what is called an array and to create an array we would follow our variable name with a set of square brackets and then assign this equal to some string of text some series of characters place your series of characters within double quotes and we can store more than one character so this data type would be technically an array of characters i'll create a whole separate video on arrays this is basically how you can emulate a string it's really just a whole combination of single characters there's still a lot more data types than just these four i thought i would cover just some of the more basic data types just because in this video we're going to focus more on variables than data types i'm planning a separate video just dedicated to data types because there's way more data types than just these four there's bytes there's doubles there's longs etc now how can we display the value stored within a variable within a printf statement here's how we have to use what is referred to as a format specifier let's say we have a printf statement and i would like to display my age within a message so let's create some text you are age years old if i would like to display the value contained within my edge variable wherever i would like to insert that value i will place a format specifier which is represented by a percent sign and then follow this with a secret character that represents the data type of what we're inserting so if i need to display my age variable i will use a percent sign as a placeholder followed by d for decimal and then after my string of text outside of the double quotes add comma then the name of the variable you would like to insert at this placeholder so at this location i will insert age and then let's try this you are 21 years old so let's try that again with a different variable let's say let's go with name i'll add a second printf statement print f and then let's say hello and i would like to insert my name here so use a percent sign as a placeholder it's a format specifier then to display a character array that would be s for string and then add comma name oh then we may need to add a new line character to the end of these because i forgot let's try that again hello bro you are 21 years old okay let's display our grade print f then within quotes your average grade is then to display a character variable that would be percent c for character then outside of our double quotes add comma the name of the variable we would like to insert at this location so comma grid i think i'm just going to space these out a little bit okay then i will add a new line character to the end of this hello bro you are 21 years old your average grade is c then to display a float that would be percent f print f your gpa is percent f then i'll add a new line character so follow this with comma the name of the variable gpa okay your gpa is 2.05 so later on we'll discuss more about format specifiers there's ways that we can format how our variables are displayed i just realized that i misspelled average twice so yeah those are variables they are allocated space and memory to store a value we refer to a variable's name to access the stored value that variable now behaves as if it was the value that it contains but to declare a variable we have to state what type of data that we are storing within that variable so yeah those are variables if this video helped you out help me out by smashing that like button leave a random comment down below and subscribe if you'd like to become a fellow bro
