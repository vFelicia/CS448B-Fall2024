With timestamps:

00:00 - hey what's going on everybody it's your
00:01 - bro here hope you're doing well and i
00:03 - have a special treat for you guys in
00:04 - this video we're going to be using
00:06 - overloaded constructors to bake some
00:08 - pizzas
00:09 - so sit back relax and enjoy the show
00:14 - make sure you like comment and subscribe
00:18 - one like equals one prayer for the
00:20 - youtube algorithm
00:22 - ladies and gentlemen we're going to be
00:23 - discussing overloaded constructors
00:26 - these are multiple constructors within a
00:28 - class with
00:29 - the same name but they have
00:32 - different parameters and that's the key
00:34 - thing to take away from this
00:36 - when you combine a constructor's name
00:38 - plus its parameters
00:40 - it's also known as a signature and if
00:42 - you have constructors
00:43 - with the same name they need to have
00:46 - different parameters because they should
00:48 - all have their own unique
00:49 - signature to best demonstrate this we're
00:52 - going to be baking some pizzas
00:53 - within my same project folder i have a
00:56 - pizza class
00:57 - as well as a class that contains my main
00:59 - method
01:00 - so let's create the constructor for this
01:02 - pizza
01:04 - it's the same name as the class followed
01:06 - by parentheses and then
01:07 - a set of curly braces let's also
01:10 - instantiate an instance of the pizza
01:12 - class
01:12 - create a pizza object so it's the name
01:15 - of the class
01:15 - followed by a unique name for this
01:18 - object
01:18 - i'm going to call this pizza a lowercase
01:21 - equals
01:22 - new pizza parentheses semicolon
01:25 - so we now have a pizza object and
01:28 - let's assemble this pizza and pass in
01:30 - some ingredients as
01:31 - arguments so let's say that in order to
01:34 - bake a pizza
01:36 - we would like a bread a sauce a cheese
01:39 - and a topping
01:40 - so let's declare some of these variables
01:42 - outside of the constructor
01:43 - so we have string bread is it thick
01:46 - crust
01:47 - flatbread whatever a sauce
01:49 - [Music]
01:52 - a cheese and a topping
01:56 - i guess all of these variables will be
01:58 - strings for this video but you can mix
02:00 - and match them
02:01 - all right so if we instantiate
02:04 - an instance of the pizza class create a
02:06 - pizza
02:08 - let's assign some of these values that
02:10 - we receive and let's set up the
02:11 - parameters for this pizza constructor
02:14 - so we would like a bread
02:18 - so that would be one parameter a sauce
02:24 - a cheese and a topping
02:31 - now in order to create our pizza we need
02:34 - matching arguments because the
02:36 - parameters are the rules
02:38 - we have to send our pizza four strings
02:41 - and they will serve as the bread
02:42 - the sauce the cheese and the topping so
02:45 - what kinds of ingredients should we use
02:47 - to bake our first pizza
02:49 - let's say we need a bread so
02:52 - let's say this is a thick crust pizza
02:56 - and a sauce tomato i guess
02:59 - a cheese maybe mozzarella i probably
03:02 - spelt that wrong and
03:03 - a topping let's say pepperoni
03:06 - i probably spelt that wrong too but i
03:08 - don't care so
03:10 - we can now construct a pizza object and
03:13 - for this pizza constructor it requires
03:16 - four strings that will serve as a bread
03:18 - a sauce a cheese and a topping
03:20 - and then let's assign these real quick
03:22 - so this dot
03:24 - bread equals the bread
03:27 - that is passed to us as an argument
03:31 - repeat the steps for sauce cheese and
03:33 - topping
03:35 - this dot sauce equal sauce
03:38 - this dot cheese equals cheese and this
03:41 - dot topping
03:42 - equals topping and let's print this
03:45 - pizza
03:46 - system.out.printline let's display a
03:49 - message
03:49 - such as here are the ingredients
03:54 - of your pizza
03:58 - and i'll just print these all on a new
04:00 - line for each
04:02 - system.out.printline pizza
04:05 - dot bread because i want to access the
04:08 - bread variable of
04:09 - our pizza object and we'll access the
04:12 - other stew
04:14 - so we have sauce
04:19 - cheese
04:22 - and a topping
04:26 - so we're passing in four strings
04:30 - here are the ingredients of your pizza
04:32 - it's a thick crust tomato
04:34 - mozzarella pepperoni pizza all right now
04:37 - here's the situation
04:39 - what if we want a plain cheese pizza we
04:42 - don't want any toppings
04:44 - so you know what i'm going to get rid of
04:46 - the pepperoni
04:47 - but wait a second we're going to have a
04:49 - problem we need to pass in
04:51 - four strings and we're only going to be
04:53 - sending in three
04:54 - one way that we can solve this problem
04:56 - is to create overloaded constructors
04:59 - so overloaded constructors they can have
05:02 - the same name
05:03 - but different parameters so what we can
05:05 - do is create
05:06 - another constructor with the same name
05:08 - i'm going to copy all of this
05:11 - paste it so right now these parameters
05:14 - are the same
05:15 - they have these constructors the same
05:18 - name
05:18 - as well as the same parameters so this
05:21 - is not legal because they have the same
05:23 - signature let's create a constructor
05:26 - that doesn't have a topping
05:27 - it's only a bread a sauce and a cheese
05:30 - and we do not need to assign this
05:32 - topping so we can take that out
05:34 - and you can see that that issue went
05:36 - away we can now construct
05:38 - a pizza that has only three ingredients
05:41 - but if we were to attempt to display the
05:44 - topping
05:44 - it just says no but everything works
05:46 - just fine
05:48 - now what if we were to remove the cheese
05:50 - let's say it's a vegan pizza
05:52 - just tomato sauce and bread so we need a
05:55 - constructor that takes
05:56 - two arguments two strings so let's copy
06:00 - one of these constructors paste it
06:03 - and change the parameters so this pizza
06:07 - constructor only takes two
06:09 - arguments a bread and a sauce
06:13 - and it functions just fine and why stop
06:16 - there
06:16 - let's remove the sauce entirely so we
06:19 - can create a pizza that only has bread
06:21 - and that's it so we'll need to create
06:24 - another overloaded constructor that has
06:26 - only
06:27 - one parameter a string value string
06:30 - bread and we will assign this bread
06:33 - equals bread and for some reason if you
06:35 - wanted to create a pizza that only has
06:38 - bread
06:39 - well you can do so here are the
06:40 - ingredients of your pizza
06:42 - thick crust and then you know you can
06:44 - also create
06:45 - a constructor that has no arguments so
06:48 - that's kind of like what we had in the
06:50 - original video on
06:51 - object oriented programming so we have
06:54 - the name of the class
06:55 - with no arguments and no parameters
06:58 - so you could create an object that has
07:01 - no attributes assigned where all the
07:03 - ingredients are empty
07:05 - so a pizza that has nothing will cost
07:07 - you zero dollars and zero cents in real
07:09 - life i guess
07:10 - well everybody that's the basics of
07:13 - overloaded constructors
07:14 - in java if you would like a copy of all
07:16 - this code i will post all of this in the
07:18 - comments down below
07:19 - but yeah that's the basics of overloaded
07:22 - constructors in java
07:26 - hey you yeah i'm talking to you if you
07:28 - learn something new then you can help
07:30 - me help you in three easy steps
07:33 - by smashing that like button drop a
07:36 - comment down below
07:37 - and subscribe if you'd like to become a
07:39 - fellow bro
07:44 - [Music]
08:01 - you

Cleaned transcript:

hey what's going on everybody it's your bro here hope you're doing well and i have a special treat for you guys in this video we're going to be using overloaded constructors to bake some pizzas so sit back relax and enjoy the show make sure you like comment and subscribe one like equals one prayer for the youtube algorithm ladies and gentlemen we're going to be discussing overloaded constructors these are multiple constructors within a class with the same name but they have different parameters and that's the key thing to take away from this when you combine a constructor's name plus its parameters it's also known as a signature and if you have constructors with the same name they need to have different parameters because they should all have their own unique signature to best demonstrate this we're going to be baking some pizzas within my same project folder i have a pizza class as well as a class that contains my main method so let's create the constructor for this pizza it's the same name as the class followed by parentheses and then a set of curly braces let's also instantiate an instance of the pizza class create a pizza object so it's the name of the class followed by a unique name for this object i'm going to call this pizza a lowercase equals new pizza parentheses semicolon so we now have a pizza object and let's assemble this pizza and pass in some ingredients as arguments so let's say that in order to bake a pizza we would like a bread a sauce a cheese and a topping so let's declare some of these variables outside of the constructor so we have string bread is it thick crust flatbread whatever a sauce a cheese and a topping i guess all of these variables will be strings for this video but you can mix and match them all right so if we instantiate an instance of the pizza class create a pizza let's assign some of these values that we receive and let's set up the parameters for this pizza constructor so we would like a bread so that would be one parameter a sauce a cheese and a topping now in order to create our pizza we need matching arguments because the parameters are the rules we have to send our pizza four strings and they will serve as the bread the sauce the cheese and the topping so what kinds of ingredients should we use to bake our first pizza let's say we need a bread so let's say this is a thick crust pizza and a sauce tomato i guess a cheese maybe mozzarella i probably spelt that wrong and a topping let's say pepperoni i probably spelt that wrong too but i don't care so we can now construct a pizza object and for this pizza constructor it requires four strings that will serve as a bread a sauce a cheese and a topping and then let's assign these real quick so this dot bread equals the bread that is passed to us as an argument repeat the steps for sauce cheese and topping this dot sauce equal sauce this dot cheese equals cheese and this dot topping equals topping and let's print this pizza system.out.printline let's display a message such as here are the ingredients of your pizza and i'll just print these all on a new line for each system.out.printline pizza dot bread because i want to access the bread variable of our pizza object and we'll access the other stew so we have sauce cheese and a topping so we're passing in four strings here are the ingredients of your pizza it's a thick crust tomato mozzarella pepperoni pizza all right now here's the situation what if we want a plain cheese pizza we don't want any toppings so you know what i'm going to get rid of the pepperoni but wait a second we're going to have a problem we need to pass in four strings and we're only going to be sending in three one way that we can solve this problem is to create overloaded constructors so overloaded constructors they can have the same name but different parameters so what we can do is create another constructor with the same name i'm going to copy all of this paste it so right now these parameters are the same they have these constructors the same name as well as the same parameters so this is not legal because they have the same signature let's create a constructor that doesn't have a topping it's only a bread a sauce and a cheese and we do not need to assign this topping so we can take that out and you can see that that issue went away we can now construct a pizza that has only three ingredients but if we were to attempt to display the topping it just says no but everything works just fine now what if we were to remove the cheese let's say it's a vegan pizza just tomato sauce and bread so we need a constructor that takes two arguments two strings so let's copy one of these constructors paste it and change the parameters so this pizza constructor only takes two arguments a bread and a sauce and it functions just fine and why stop there let's remove the sauce entirely so we can create a pizza that only has bread and that's it so we'll need to create another overloaded constructor that has only one parameter a string value string bread and we will assign this bread equals bread and for some reason if you wanted to create a pizza that only has bread well you can do so here are the ingredients of your pizza thick crust and then you know you can also create a constructor that has no arguments so that's kind of like what we had in the original video on object oriented programming so we have the name of the class with no arguments and no parameters so you could create an object that has no attributes assigned where all the ingredients are empty so a pizza that has nothing will cost you zero dollars and zero cents in real life i guess well everybody that's the basics of overloaded constructors in java if you would like a copy of all this code i will post all of this in the comments down below but yeah that's the basics of overloaded constructors in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
