With timestamps:

00:00 - hey what's going on everybody it's bro
00:01 - here hope you're doing well and in this
00:03 - video i'm going to teach you guys how we
00:04 - can use the
00:05 - j file chooser class in java to select a
00:08 - file someplace within your computer so
00:10 - sit back relax and enjoy the show
00:14 - if you find this video helpful please
00:16 - remember to like
00:17 - comment and subscribe your support will
00:20 - help keep this channel running
00:22 - all right people let's just get right
00:24 - into this so we're going to be
00:25 - discussing the j
00:26 - file chooser class this is a gui
00:28 - mechanism that lets a user choose a file
00:31 - we're only going to be selecting a file
00:33 - today i have other videos on loading
00:35 - files and saving files
00:36 - so this is helpful for opening or saving
00:38 - files if you want to look for a file
00:40 - that's someplace within your computer
00:42 - or within your project folder so let me
00:44 - show you my setup real quick i have two
00:46 - classes
00:47 - a main class and then a my frame class i
00:49 - have a new instance of my frame within
00:51 - my main class
00:52 - my frame extends jframe implements the
00:55 - action listener interface
00:56 - i have a constructor called my frame
00:59 - this dot set default close operation j
01:01 - frame x and on close i'm using a new
01:02 - flow layout this stop pack and this dot
01:05 - set visible to true
01:06 - now to launch the j file chooser we're
01:09 - probably going to need a button
01:10 - so let's create a button to do so so
01:13 - let's say
01:14 - j button button equals new
01:17 - j button and i'll add some text maybe
01:20 - select
01:20 - or better yet select file alright
01:24 - and then i want to add an action
01:25 - listener to this button so button dot
01:27 - add action listener since this class is
01:31 - implementing the action listener
01:32 - interface i
01:33 - just pass in this and then we need to
01:35 - add this button to the frame
01:36 - so this dot add
01:40 - and we're adding the button all right
01:44 - so we need to check if we are clicking
01:46 - this button then we're going to launch
01:48 - an event
01:48 - so if e dot get source
01:51 - is equal to our button
01:54 - however this action performed method
01:57 - does not recognize this button so we
01:58 - need to declare this outside
02:00 - of our constructor so j button button
02:03 - and then we do not need to declare this
02:04 - twice
02:05 - alright so when we click on our button
02:07 - and let's just try this real quick
02:11 - so we have our button and says select
02:13 - file in the top corner so we're going to
02:15 - launch
02:16 - a new instance of our j file chooser
02:18 - class so in order to do that we need to
02:20 - first declare it
02:21 - j file chooser
02:24 - and we will call this file chooser
02:27 - equals
02:28 - new j file chooser
02:32 - alright so now if we were to run this
02:35 - and we click on select file
02:38 - it currently doesn't do anything well
02:40 - that's because we didn't set it up to do
02:42 - anything yet we only declared and
02:44 - created a new instance of file
02:46 - chooser so the next step is that we are
02:48 - going to either
02:50 - show open dialog or show save dialog
02:53 - we're not actually going to be opening
02:54 - or saving any files just getting the
02:56 - location for the file so let's go with
02:59 - show open dialog
03:00 - and then i'll show you show save dialog
03:02 - right after so in order to do that to
03:04 - open our dialog menu
03:06 - it is the name of our file chooser file
03:09 - chooser
03:10 - right here dot show
03:14 - either open dialog or save dialog let's
03:16 - just go with open
03:18 - all right and then if you have a parent
03:20 - component you place that in here but we
03:22 - don't have one so we're just going to
03:23 - put null for now
03:24 - so what this does is that i'm going to
03:27 - add a comment
03:28 - this will select file
03:31 - to open all right
03:36 - so i currently have a file on my desktop
03:38 - and this is what this currently looks
03:40 - like
03:40 - it's going to bring you to your default
03:42 - directory of where you usually open
03:44 - files
03:45 - and i have a file on my desktop and it
03:48 - is called
03:49 - hello world all right so you can select
03:51 - a file to open
03:52 - and there's different uh files of type
03:54 - where you can search through these but
03:56 - i'll show you that later
03:57 - so let's say we want to open this file
04:00 - well where is it alright so there's a
04:02 - few other steps
04:03 - so with file chooser.show open dialog
04:06 - it's going to return
04:07 - an integer value think of it as the
04:09 - response and i'll actually print this
04:11 - with a print line statement so
04:13 - system.out.printline and i'm going to
04:15 - place this within the print line
04:16 - statement
04:18 - and i just want to show you what this
04:19 - returns exactly
04:21 - all right so i'm going to go to my
04:22 - desktop
04:26 - and then i'm going to attempt to open
04:28 - this uh file again
04:29 - so open okay so this returns zero
04:33 - so that's kind of like the response
04:35 - based on what button we click
04:36 - if i were to click cancel it's going to
04:38 - return one
04:40 - or if i click x it's going to return one
04:43 - as well
04:43 - so we can actually do something with
04:45 - this perhaps we can store this within a
04:47 - variable
04:47 - so i'm going to create an integer
04:49 - variable called response
04:51 - int response equals
04:54 - file chooser dot show open dialog and
04:57 - then we can check to see
04:58 - if response is equal to zero but there's
05:01 - another way of writing this
05:02 - if response
05:05 - is equal to zero that's one way or what
05:08 - we could do
05:09 - is write j file chooser
05:13 - dot approve option and that would be
05:16 - better
05:17 - so if somebody successfully selects a
05:19 - file and does not
05:20 - click cancel or click x button then
05:24 - we can actually create a new file we can
05:26 - store that
05:27 - so let's declare a new file file file
05:30 - equals new file
05:34 - and the file path for this is going to
05:36 - be
05:38 - file chooser dot get
05:41 - selected file dot
05:45 - get absolute path all right
05:49 - and then we'll probably need an import
05:50 - for this file as well
05:52 - okay then let's print the file path for
05:55 - this file
05:56 - so we can do that with
05:57 - system.out.printline and we're going to
05:59 - place the file name here
06:00 - so then what happens is that when we
06:03 - select a file
06:05 - let's say i want to go back to my
06:06 - desktop and select that hello world file
06:10 - this is going to get the file path and
06:12 - currently it's on my desktop
06:14 - so we don't necessarily need this print
06:16 - line statement but it's just proving
06:17 - that
06:18 - this file actually has a location too so
06:21 - then i have other videos on
06:23 - loading a file or saving a file using
06:25 - scanners or print writers
06:26 - but we'll save that for another video
06:28 - actually i think i'm going to keep this
06:30 - print line statement just because we
06:31 - have more to do
06:33 - okay now we have show save dialog
06:36 - currently with show open dialog we can
06:38 - select a file to open and we have an
06:41 - open button alternatively we have
06:44 - show save dialog so that is
06:47 - file chooser.show save dialog so i'm
06:50 - going to change
06:51 - open to save and i'll just turn this
06:53 - first line into a comment because we
06:55 - don't really need it anymore
06:56 - so this will select file to
07:00 - save all right it's the same process as
07:02 - before really
07:03 - but now we have this save button
07:07 - and we can attempt to save a file but
07:09 - there's still
07:10 - more steps we have to follow for
07:11 - actually creating a file i have a
07:13 - separate video on that
07:14 - so if i wanted to save something to my
07:16 - desktop this could be
07:18 - test file dot txt
07:21 - then i'm going to click save currently
07:23 - this won't actually create a file
07:24 - but here it's just printing the file
07:26 - location and it's set to
07:28 - my desktop all right so that is show
07:31 - save dialog
07:32 - now one other thing that we can do too
07:34 - is that we can set the current directory
07:37 - because right now it's just going to the
07:39 - default for my computer
07:40 - and that is my documents folder and we
07:42 - can actually change that
07:44 - so in order to do that it is file
07:46 - chooser
07:47 - dot set current directory and we pass
07:51 - in a new file and we specify
07:55 - the file path within this new file so
07:58 - one trick if you want to place this
08:01 - within
08:02 - uh set the current directory to your
08:03 - project folder that would be
08:05 - just a dot within quotes so this is
08:08 - going to go to my project folder
08:12 - and the project name is gui swing so you
08:15 - can see that that changed otherwise i
08:17 - could place a file path here
08:19 - so if i wanted the current directory by
08:21 - default to be set to my desktop
08:24 - i would place the file path for my
08:25 - desktop and for my desktop this is the
08:28 - address
08:28 - now if i were to run this and select a
08:32 - file
08:33 - the default directory is now my desktop
08:35 - and i can attempt to open or save a file
08:37 - here well that's the basics of the j
08:40 - file chooser class and in a future video
08:42 - we're actually going to be creating a
08:44 - text editor app and we'll need to use
08:46 - the j file chooser class
08:48 - so if you want a copy of all this code
08:50 - i'll post all of this in the comments
08:52 - down below
08:53 - but yeah that's the basics of the j file
08:55 - chooser class in java
08:58 - hey you yeah i'm talking to you if you
09:00 - learn something new
09:02 - then you can help me help you in three
09:05 - easy steps
09:06 - by smashing that like button drop a
09:08 - comment down below
09:09 - and subscribe if you'd like to become a
09:11 - fellow bro
09:21 - [Music]
09:32 - you

Cleaned transcript:

hey what's going on everybody it's bro here hope you're doing well and in this video i'm going to teach you guys how we can use the j file chooser class in java to select a file someplace within your computer so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right people let's just get right into this so we're going to be discussing the j file chooser class this is a gui mechanism that lets a user choose a file we're only going to be selecting a file today i have other videos on loading files and saving files so this is helpful for opening or saving files if you want to look for a file that's someplace within your computer or within your project folder so let me show you my setup real quick i have two classes a main class and then a my frame class i have a new instance of my frame within my main class my frame extends jframe implements the action listener interface i have a constructor called my frame this dot set default close operation j frame x and on close i'm using a new flow layout this stop pack and this dot set visible to true now to launch the j file chooser we're probably going to need a button so let's create a button to do so so let's say j button button equals new j button and i'll add some text maybe select or better yet select file alright and then i want to add an action listener to this button so button dot add action listener since this class is implementing the action listener interface i just pass in this and then we need to add this button to the frame so this dot add and we're adding the button all right so we need to check if we are clicking this button then we're going to launch an event so if e dot get source is equal to our button however this action performed method does not recognize this button so we need to declare this outside of our constructor so j button button and then we do not need to declare this twice alright so when we click on our button and let's just try this real quick so we have our button and says select file in the top corner so we're going to launch a new instance of our j file chooser class so in order to do that we need to first declare it j file chooser and we will call this file chooser equals new j file chooser alright so now if we were to run this and we click on select file it currently doesn't do anything well that's because we didn't set it up to do anything yet we only declared and created a new instance of file chooser so the next step is that we are going to either show open dialog or show save dialog we're not actually going to be opening or saving any files just getting the location for the file so let's go with show open dialog and then i'll show you show save dialog right after so in order to do that to open our dialog menu it is the name of our file chooser file chooser right here dot show either open dialog or save dialog let's just go with open all right and then if you have a parent component you place that in here but we don't have one so we're just going to put null for now so what this does is that i'm going to add a comment this will select file to open all right so i currently have a file on my desktop and this is what this currently looks like it's going to bring you to your default directory of where you usually open files and i have a file on my desktop and it is called hello world all right so you can select a file to open and there's different uh files of type where you can search through these but i'll show you that later so let's say we want to open this file well where is it alright so there's a few other steps so with file chooser.show open dialog it's going to return an integer value think of it as the response and i'll actually print this with a print line statement so system.out.printline and i'm going to place this within the print line statement and i just want to show you what this returns exactly all right so i'm going to go to my desktop and then i'm going to attempt to open this uh file again so open okay so this returns zero so that's kind of like the response based on what button we click if i were to click cancel it's going to return one or if i click x it's going to return one as well so we can actually do something with this perhaps we can store this within a variable so i'm going to create an integer variable called response int response equals file chooser dot show open dialog and then we can check to see if response is equal to zero but there's another way of writing this if response is equal to zero that's one way or what we could do is write j file chooser dot approve option and that would be better so if somebody successfully selects a file and does not click cancel or click x button then we can actually create a new file we can store that so let's declare a new file file file equals new file and the file path for this is going to be file chooser dot get selected file dot get absolute path all right and then we'll probably need an import for this file as well okay then let's print the file path for this file so we can do that with system.out.printline and we're going to place the file name here so then what happens is that when we select a file let's say i want to go back to my desktop and select that hello world file this is going to get the file path and currently it's on my desktop so we don't necessarily need this print line statement but it's just proving that this file actually has a location too so then i have other videos on loading a file or saving a file using scanners or print writers but we'll save that for another video actually i think i'm going to keep this print line statement just because we have more to do okay now we have show save dialog currently with show open dialog we can select a file to open and we have an open button alternatively we have show save dialog so that is file chooser.show save dialog so i'm going to change open to save and i'll just turn this first line into a comment because we don't really need it anymore so this will select file to save all right it's the same process as before really but now we have this save button and we can attempt to save a file but there's still more steps we have to follow for actually creating a file i have a separate video on that so if i wanted to save something to my desktop this could be test file dot txt then i'm going to click save currently this won't actually create a file but here it's just printing the file location and it's set to my desktop all right so that is show save dialog now one other thing that we can do too is that we can set the current directory because right now it's just going to the default for my computer and that is my documents folder and we can actually change that so in order to do that it is file chooser dot set current directory and we pass in a new file and we specify the file path within this new file so one trick if you want to place this within uh set the current directory to your project folder that would be just a dot within quotes so this is going to go to my project folder and the project name is gui swing so you can see that that changed otherwise i could place a file path here so if i wanted the current directory by default to be set to my desktop i would place the file path for my desktop and for my desktop this is the address now if i were to run this and select a file the default directory is now my desktop and i can attempt to open or save a file here well that's the basics of the j file chooser class and in a future video we're actually going to be creating a text editor app and we'll need to use the j file chooser class so if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of the j file chooser class in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
