With timestamps:

00:00 - hey what's going on everybody it's you
00:01 - bro here hope you're doing well and in
00:03 - this video i'm going to teach you guys
00:04 - how we can create a simple button
00:06 - in java so sit back relax and enjoy the
00:08 - show
00:11 - if you find this video helpful please
00:13 - remember to like
00:14 - comment and subscribe your support will
00:17 - help keep this channel running
00:19 - all right my fellow human beings let's
00:21 - discuss j buttons a j button is a
00:24 - java gui button that performs an action
00:26 - when you click on it
00:27 - we're going to be creating a frame and
00:29 - then adding a button
00:30 - to that frame however with this frame
00:33 - it's going to implement
00:34 - something called the action listener
00:36 - interface so i think
00:38 - it would be best to demonstrate this
00:40 - with a different class instead of using
00:42 - our main class with the main method
00:45 - so let's create a different class so
00:47 - file new
00:48 - class i will call this my frame and
00:51 - we'll have
00:51 - my frame extends jframe so my frame
00:55 - extends jframe my frame will be
00:58 - the subclass of jframe so it will
01:01 - inherit everything
01:02 - from the jframe class and behave exactly
01:05 - like a j frame so let's create an
01:08 - instance of my frame
01:10 - so my frame let's call this frame
01:13 - equals new my frame
01:17 - and actually we don't really need to
01:18 - give this a name because i don't think
01:20 - we're going to be doing anything else
01:21 - within this class
01:23 - you can even just shorten that line to
01:25 - just new my frame and that'll work just
01:27 - fine
01:28 - we're going to spend a majority of the
01:29 - time within this my frame class
01:32 - so to begin we'll need a constructor for
01:34 - this class so my
01:35 - frame and create a frame we say
01:41 - this well to set up the frame i should
01:43 - say uh we'll need these few lines of
01:45 - code
01:45 - instead of saying like frame dot set
01:47 - default close operation it's
01:49 - just this so this dot set default close
01:52 - operation
01:53 - jframe exit on close we're going to be
01:56 - using
01:56 - no layout manager so this dot set layout
01:59 - to no
02:00 - this dot set size 500 by 500 is decent
02:03 - and this dot set visible to true so this
02:06 - should display a jframe now
02:10 - all right so let's create a button at
02:11 - this point so
02:13 - it's very similar to creating any other
02:15 - component
02:16 - so that's j button let's call this
02:19 - button
02:19 - equals new j button
02:24 - and then we will need an import too
02:29 - and then let's set the bounds for this
02:31 - button so
02:32 - button dot set bounds
02:36 - so we have x y width and height
02:39 - i will place this maybe where x is
02:42 - 200 where y is 100 for the width let's
02:46 - make this
02:47 - 100 and the height maybe 50.
02:50 - so then to actually display the button
02:53 - we need to add this to our frame
02:55 - so this dot add what are we adding we're
02:58 - adding our button
03:00 - and let's run this
03:05 - so here's our button it currently
03:06 - doesn't do anything
03:08 - so we need our class to implement the
03:11 - action
03:12 - listener interface so implements
03:15 - action listener
03:19 - so we're going to need to implement a
03:22 - method
03:25 - the action performed method so
03:29 - this frame will now listen for events
03:32 - so one thing we can do we can check to
03:34 - see if the event
03:37 - that occurs is our button so we do that
03:39 - with
03:40 - if e dot get source
03:44 - is equal to our button
03:48 - then what are we going to do all right
03:51 - you can see one problem here though
03:54 - this button is not global it's only
03:57 - local within the constructor of
03:59 - my frame so we can actually turn this
04:02 - into a
04:02 - global component so what we need to do
04:05 - is actually declare this
04:06 - outside of the constructor because right
04:09 - now since we declared this within the
04:10 - constructor
04:11 - only anything within the constructor has
04:13 - access to this
04:15 - so we'll say j button button and we'll
04:18 - finish
04:18 - instantiating this button within the
04:20 - constructor and you can see that this
04:22 - error went away
04:24 - so now what do we want to do when we
04:25 - click on this button let's just do a
04:28 - system.out.printline
04:29 - and i will print out the word poo
04:32 - all right so then when we click on this
04:35 - button
04:36 - it performs an action so if the action
04:38 - performed is equal to the button
04:40 - it's going to do this the button is
04:43 - going to poo
04:44 - however this button doesn't seem to be
04:46 - doing anything
04:47 - that's because we need to add an action
04:49 - listener
04:51 - directly to the button so button dot
04:54 - add action listener
04:57 - and we can pass in this since this class
05:00 - is implementing the action listener
05:03 - interface
05:04 - so now this should do something
05:07 - and now when we click on the button the
05:09 - button starts printing the word
05:10 - poo now is the perfect opportunity for
05:13 - me to introduce something called a
05:15 - lambda expression it's actually a
05:17 - shortcut that you can use
05:18 - in place of action listeners so this is
05:21 - an advanced shortcut i do have an entire
05:23 - video
05:24 - dedicated to this that you might want to
05:25 - watch at some point so
05:27 - what we can do instead of implementing
05:29 - the action listener interface
05:32 - and instead of using the action
05:34 - performed method
05:35 - when we add an action listener to this
05:37 - button we can place a
05:39 - lambda expression here and this is how
05:41 - to write one we write
05:43 - e within the parentheses followed by an
05:45 - arrow
05:46 - and then what we want this button or
05:48 - other component to do
05:50 - so let's just system that out dot print
05:52 - line
05:53 - uh the word poo again because we can so
05:57 - poo and when we run this it does the
06:01 - exact
06:01 - same thing just with less syntax however
06:04 - this is a more advanced
06:06 - concept i do have an entire video
06:08 - dedicated to
06:09 - lambda expressions if you're interested
06:11 - let's customize this button
06:12 - well because we can because we can is
06:15 - actually a great reason for
06:16 - many things so let's set the text for
06:19 - this button
06:20 - so button dot set
06:24 - text and then i will write
06:28 - i'm a button
06:34 - there's our text so if you look at the
06:39 - text for the button there's this
06:40 - annoying border around
06:43 - the text we can actually get rid of that
06:46 - we need to set focusable false because
06:49 - the button is focusable
06:51 - so button dot set
06:54 - focusable and we're going to set this to
06:58 - false
07:01 - so that should get rid of that box
07:03 - that's around the text of the button
07:05 - let's also increase the size of this
07:07 - button too
07:09 - so i think i will make this 250 by
07:13 - 100 that should be decent
07:19 - and let's move this over a little bit
07:21 - i'll try and at least get this close to
07:23 - centering this all right let's add an
07:26 - icon too
07:27 - so we'll need to create an icon so this
07:30 - is an
07:30 - image icon i'll call this icon
07:34 - equals new image icon
07:38 - we're going to list the source for this
07:41 - so i have a picture on my desktop i want
07:44 - to use
07:45 - it's just a pointer finger basically so
07:48 - this is
07:49 - point dot png and then we'll need to
07:53 - import as well
07:56 - all right so button dot
07:59 - set icon
08:04 - and we're setting this to the name of
08:06 - our icon which is coincidentally
08:10 - icon now i want the
08:12 - icon on the right hand side of the text
08:16 - so there's a method for that so what
08:18 - we're going to do
08:20 - is button dot
08:24 - set horizontal text position
08:27 - so j button dot
08:31 - let's say center i'm also going to
08:35 - change the vertical text position so
08:37 - button dot set vertical
08:40 - text position and this will be j
08:44 - button dot let's say bottom
08:48 - so the pointer finger should be in the
08:51 - center and above
08:52 - our text let's also change the font too
08:56 - so button dot
08:59 - set font and we can pass in
09:02 - a new font new font
09:06 - i will pick maybe
09:09 - comic sans
09:13 - then you can style this you can make
09:15 - this bold plain italic whatever i'll
09:17 - make this bold
09:19 - and then a size
09:25 - all right let's take a look
09:29 - all right not too bad i'm going to pull
09:31 - the text in a little bit closer
09:33 - and there's a method to do that so
09:35 - button dot
09:37 - set icon text gap and i'm going to set
09:40 - this to a negative number to
09:42 - pull the text in closer
09:45 - negative 15 should do it
09:49 - not too bad not too bad let's also
09:51 - change the font color
09:53 - so button dot set foreground
09:57 - and i will pick maybe
10:02 - cyan
10:05 - all right all right let's change the
10:07 - background color now of the button
10:10 - so button dot set background
10:14 - and i will just pick maybe like light
10:16 - gray or something
10:18 - light gray
10:23 - okay let's add a border
10:28 - so button dot set
10:31 - border and we can actually pass in a new
10:34 - board or two
10:36 - so border factory
10:43 - dot create and then pick a border that
10:45 - you want
10:46 - i will pick etched border
10:51 - and let's take a look so there we go it
10:55 - kind of has like a 3d effect
10:58 - oh you can also disable a button too
11:00 - there's a method for that so
11:02 - button dot set enabled
11:06 - and set this to false this will disable
11:09 - a button
11:13 - and actually if you want a button to be
11:15 - only clickable once and then it's
11:16 - disabled
11:17 - you can put this within the action
11:19 - performed method
11:21 - so if we were to do this we could only
11:24 - click this button once
11:25 - and then it's disabled so that's
11:28 - something that's an option to you
11:30 - a feature that's available to you with
11:32 - buttons is that you can change
11:34 - components within a frame on a button
11:36 - click let's say that we want to display
11:39 - a label on our frame
11:41 - after we click a button so let's create
11:44 - a label and we'll add this label to our
11:46 - frame
11:47 - so we should declare this label outside
11:49 - of the constructor so that the action
11:51 - performance method
11:52 - has access to it so j
11:56 - label we'll call this label and we'll
11:58 - finish instantiating this within the
12:00 - constructor
12:02 - so now label equals new
12:06 - j label
12:09 - and i'll create an image icon so i plan
12:12 - on using
12:12 - this image and i'm just going to add
12:14 - this to our label
12:16 - to demonstrate this so let's create a
12:18 - new image icon
12:19 - image icon i'll call this icon too
12:22 - because
12:23 - just the word icon is already taken
12:26 - equals
12:26 - new image icon and this file name is
12:31 - face dot png
12:35 - now we can set the icon for this label
12:38 - so label.set
12:39 - icon and the icon that i want to use
12:42 - is icon2 let's also set the bounds for
12:45 - this label so label.setbounds
12:50 - so i will place this where x is 150
12:54 - where y is 250 the width will be 150
12:58 - and the same thing with the height
13:03 - so we can also set the visibility for
13:05 - this label so label
13:06 - dot set visible and i'm going to set
13:09 - this to false because i do not want this
13:11 - to appear
13:11 - at least right away and then lastly we
13:14 - need to add
13:15 - this label to the frame so don't forget
13:17 - about doing that
13:18 - so this dot add label
13:22 - and then with the action performed
13:24 - method after we click this button
13:27 - let's set the visibility of the label to
13:29 - true so label
13:30 - dot set visible
13:34 - true so then when we run this
13:38 - and we click the button our label is now
13:40 - visible
13:41 - well that's how to create a simple
13:43 - button in java if you want a copy of all
13:45 - this code i'll post all of this in the
13:47 - comments
13:48 - down below but yeah that's the basics of
13:50 - buttons in java
13:52 - hey you yeah i'm talking to you if you
13:55 - learn something new
13:56 - then you can help me help you in three
13:59 - easy steps
14:00 - by smashing that like button drop a
14:03 - comment down below
14:04 - and subscribe if you'd like to become a
14:06 - fellow bro
14:16 - [Music]
14:27 - you

Cleaned transcript:

hey what's going on everybody it's you bro here hope you're doing well and in this video i'm going to teach you guys how we can create a simple button in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right my fellow human beings let's discuss j buttons a j button is a java gui button that performs an action when you click on it we're going to be creating a frame and then adding a button to that frame however with this frame it's going to implement something called the action listener interface so i think it would be best to demonstrate this with a different class instead of using our main class with the main method so let's create a different class so file new class i will call this my frame and we'll have my frame extends jframe so my frame extends jframe my frame will be the subclass of jframe so it will inherit everything from the jframe class and behave exactly like a j frame so let's create an instance of my frame so my frame let's call this frame equals new my frame and actually we don't really need to give this a name because i don't think we're going to be doing anything else within this class you can even just shorten that line to just new my frame and that'll work just fine we're going to spend a majority of the time within this my frame class so to begin we'll need a constructor for this class so my frame and create a frame we say this well to set up the frame i should say uh we'll need these few lines of code instead of saying like frame dot set default close operation it's just this so this dot set default close operation jframe exit on close we're going to be using no layout manager so this dot set layout to no this dot set size 500 by 500 is decent and this dot set visible to true so this should display a jframe now all right so let's create a button at this point so it's very similar to creating any other component so that's j button let's call this button equals new j button and then we will need an import too and then let's set the bounds for this button so button dot set bounds so we have x y width and height i will place this maybe where x is 200 where y is 100 for the width let's make this 100 and the height maybe 50. so then to actually display the button we need to add this to our frame so this dot add what are we adding we're adding our button and let's run this so here's our button it currently doesn't do anything so we need our class to implement the action listener interface so implements action listener so we're going to need to implement a method the action performed method so this frame will now listen for events so one thing we can do we can check to see if the event that occurs is our button so we do that with if e dot get source is equal to our button then what are we going to do all right you can see one problem here though this button is not global it's only local within the constructor of my frame so we can actually turn this into a global component so what we need to do is actually declare this outside of the constructor because right now since we declared this within the constructor only anything within the constructor has access to this so we'll say j button button and we'll finish instantiating this button within the constructor and you can see that this error went away so now what do we want to do when we click on this button let's just do a system.out.printline and i will print out the word poo all right so then when we click on this button it performs an action so if the action performed is equal to the button it's going to do this the button is going to poo however this button doesn't seem to be doing anything that's because we need to add an action listener directly to the button so button dot add action listener and we can pass in this since this class is implementing the action listener interface so now this should do something and now when we click on the button the button starts printing the word poo now is the perfect opportunity for me to introduce something called a lambda expression it's actually a shortcut that you can use in place of action listeners so this is an advanced shortcut i do have an entire video dedicated to this that you might want to watch at some point so what we can do instead of implementing the action listener interface and instead of using the action performed method when we add an action listener to this button we can place a lambda expression here and this is how to write one we write e within the parentheses followed by an arrow and then what we want this button or other component to do so let's just system that out dot print line uh the word poo again because we can so poo and when we run this it does the exact same thing just with less syntax however this is a more advanced concept i do have an entire video dedicated to lambda expressions if you're interested let's customize this button well because we can because we can is actually a great reason for many things so let's set the text for this button so button dot set text and then i will write i'm a button there's our text so if you look at the text for the button there's this annoying border around the text we can actually get rid of that we need to set focusable false because the button is focusable so button dot set focusable and we're going to set this to false so that should get rid of that box that's around the text of the button let's also increase the size of this button too so i think i will make this 250 by 100 that should be decent and let's move this over a little bit i'll try and at least get this close to centering this all right let's add an icon too so we'll need to create an icon so this is an image icon i'll call this icon equals new image icon we're going to list the source for this so i have a picture on my desktop i want to use it's just a pointer finger basically so this is point dot png and then we'll need to import as well all right so button dot set icon and we're setting this to the name of our icon which is coincidentally icon now i want the icon on the right hand side of the text so there's a method for that so what we're going to do is button dot set horizontal text position so j button dot let's say center i'm also going to change the vertical text position so button dot set vertical text position and this will be j button dot let's say bottom so the pointer finger should be in the center and above our text let's also change the font too so button dot set font and we can pass in a new font new font i will pick maybe comic sans then you can style this you can make this bold plain italic whatever i'll make this bold and then a size all right let's take a look all right not too bad i'm going to pull the text in a little bit closer and there's a method to do that so button dot set icon text gap and i'm going to set this to a negative number to pull the text in closer negative 15 should do it not too bad not too bad let's also change the font color so button dot set foreground and i will pick maybe cyan all right all right let's change the background color now of the button so button dot set background and i will just pick maybe like light gray or something light gray okay let's add a border so button dot set border and we can actually pass in a new board or two so border factory dot create and then pick a border that you want i will pick etched border and let's take a look so there we go it kind of has like a 3d effect oh you can also disable a button too there's a method for that so button dot set enabled and set this to false this will disable a button and actually if you want a button to be only clickable once and then it's disabled you can put this within the action performed method so if we were to do this we could only click this button once and then it's disabled so that's something that's an option to you a feature that's available to you with buttons is that you can change components within a frame on a button click let's say that we want to display a label on our frame after we click a button so let's create a label and we'll add this label to our frame so we should declare this label outside of the constructor so that the action performance method has access to it so j label we'll call this label and we'll finish instantiating this within the constructor so now label equals new j label and i'll create an image icon so i plan on using this image and i'm just going to add this to our label to demonstrate this so let's create a new image icon image icon i'll call this icon too because just the word icon is already taken equals new image icon and this file name is face dot png now we can set the icon for this label so label.set icon and the icon that i want to use is icon2 let's also set the bounds for this label so label.setbounds so i will place this where x is 150 where y is 250 the width will be 150 and the same thing with the height so we can also set the visibility for this label so label dot set visible and i'm going to set this to false because i do not want this to appear at least right away and then lastly we need to add this label to the frame so don't forget about doing that so this dot add label and then with the action performed method after we click this button let's set the visibility of the label to true so label dot set visible true so then when we run this and we click the button our label is now visible well that's how to create a simple button in java if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of buttons in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
