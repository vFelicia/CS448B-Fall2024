With timestamps:

00:00 - yo what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in this video i'm going to explain
00:05 - sliders in javafx so sit back
00:08 - relax and enjoy the show
00:11 - all right everybody so sliders a slider
00:14 - is a sliding scale between a minimum and
00:17 - a maximum value
00:18 - so if we adjust this knob on our track
00:21 - we can select a value between the
00:23 - minimum and
00:24 - the maximum there's both horizontal and
00:26 - vertical sliders
00:28 - there's no real difference between the
00:29 - two except their orientation
00:32 - in this video we'll be using a vertical
00:33 - slider to behave as a sort of
00:36 - thermometer
00:37 - and when we adjust the knob on our track
00:39 - we can increase the temperature let's
00:41 - say
00:41 - perhaps we'll just change the text of a
00:44 - label to reflect the new temperature
00:46 - so let's begin select your slider and we
00:48 - can change
00:49 - the minimum and the maximum value i'm
00:51 - going to keep these as both
00:53 - 0 and 100 to represent a temperature in
00:56 - celsius
00:57 - so 0 would be the freezing point of
00:59 - water
01:00 - and 100 would be the boiling point of
01:03 - water in celsius i'll keep that the same
01:05 - but you can adjust those if you'd like
01:06 - you can set the initial value if i would
01:09 - like this knob right in the middle i
01:11 - would say 50 then because we're working
01:12 - with the range between
01:14 - 0 and 100 you can change the block
01:16 - increment
01:17 - that is the amount your knob is going to
01:19 - adjust on the track whenever you click
01:21 - on it
01:21 - i'll keep this the same you can show
01:23 - tick marks so different intervals
01:26 - show tick labels on our scale we only
01:28 - display these numbers on
01:30 - major ticks and currently there's a
01:32 - major tick
01:33 - unit of 25 so we will have a major tick
01:37 - every 25 ticks every 25 values
01:40 - but we can change that so if i would
01:42 - like a major tick at 10
01:44 - well we now have a label at every 10
01:47 - intervals every 10 ticks you can also
01:50 - change the minor tick count
01:51 - currently we have three ticks in between
01:54 - each major tick
01:55 - but if i were to set this to 10 well
01:57 - then we would have
01:58 - 10 ticks between each major tick and
02:01 - each major tick
02:02 - has the label of the current temperature
02:05 - and i think that's enough for properties
02:06 - let's give this slider a unique id let's
02:10 - call the slider
02:11 - my slider and we'll create a label as
02:14 - well so that when we
02:15 - adjust the knob on the track we will
02:17 - change the text of a label
02:19 - so let's find our label node
02:22 - i'll place it here and i'll increase the
02:25 - font size
02:28 - ah that's good
02:32 - okay i'm going to give this label a
02:35 - unique id
02:36 - let's call it my label make sure that
02:39 - your controller class is linked
02:42 - and let's save and head to our
02:44 - controller class
02:45 - make sure that you save and update your
02:47 - fxml file head to your controller class
02:50 - and we'll use some fxml injection
02:52 - at fxml private label
02:56 - my label at fxml
03:00 - private slider
03:03 - my slider and i think it's best if we
03:07 - create a variable to hold the current
03:09 - temperature
03:09 - this will be an integer integer my
03:12 - temperature
03:15 - okay now we need to add a change
03:17 - listener to my slider
03:19 - so we're going to utilize the initialize
03:22 - method based on the last video
03:24 - so we will need this class to implement
03:28 - initializable i can never spell it and
03:32 - since we're implementing an interface
03:34 - we need to add any unimplemented methods
03:36 - that's a requirement
03:38 - one great use of the initialize method
03:40 - is that it's invoked automatically in
03:42 - the background and can perform any code
03:44 - found within after the root element has
03:46 - already been added
03:47 - so we did not have the on action section
03:50 - to link a method
03:51 - to our slider so we'll need to manually
03:54 - add a
03:54 - change listener to the slider and within
03:56 - the initialize method we're going to add
03:58 - a
03:59 - change listener to my slider so within
04:02 - this method of initialize type my slider
04:05 - dot then value property
04:09 - method followed by dot
04:12 - add listener and we're going to pass in
04:14 - a change
04:16 - listener so within the parenthesis of
04:18 - add listener
04:19 - we're going to pass in a new change
04:21 - listener as an argument
04:23 - so type new change
04:27 - listener and let's set up a generic of
04:30 - a number so angle brackets number then
04:34 - add a set of parentheses
04:36 - and then a set of curly braces within
04:38 - okay so we need to add any unimplemented
04:41 - methods and
04:42 - the one unimplemented method is change
04:45 - so a lot of this
04:46 - should auto generate for you so what do
04:48 - you want to do
04:49 - when you adjust the knob on a track you
04:51 - would write that within
04:52 - the changed method so the first thing
04:55 - that we should do is get the current
04:56 - temperature
04:58 - my temperature equals my
05:01 - slider dot get value now
05:05 - this method here will return a double so
05:08 - since we're working with integers we
05:10 - should cast this as an
05:12 - integer so let's add an int cast
05:14 - afterwards
05:15 - so we will get the current value from
05:17 - our slider and store it within
05:19 - this variable of my temperature and now
05:21 - we should change
05:22 - the text of my label to reflect this
05:25 - temperature
05:26 - so take my label dot set
05:30 - text and we're going to use
05:35 - integer dot 2 string
05:40 - my temperature
05:44 - then let's use some string concatenation
05:46 - to add degrees
05:48 - celsius and let's try it so we have our
05:51 - label and we can adjust the knob on the
05:53 - slider to change the current temperature
05:55 - the text of this label between 0 and 100
05:59 - now when we run this program the label
06:02 - is initially set to a string of label
06:05 - we can change that just by copying what
06:07 - we have here and within the initialize
06:09 - method
06:10 - let's just paste this code so that the
06:12 - initial label
06:13 - will be set to the current temperature
06:15 - wherever this knob is placed well then
06:17 - everybody
06:18 - that is a slider it's a sliding scale
06:20 - between
06:21 - a minimum and a maximum value if you
06:24 - would like a copy of all this code i
06:25 - will post this to the comment section
06:27 - down below
06:28 - but yeah those are sliders in javafx

Cleaned transcript:

yo what's going on everybody it's you bro hope you're doing well and in this video i'm going to explain sliders in javafx so sit back relax and enjoy the show all right everybody so sliders a slider is a sliding scale between a minimum and a maximum value so if we adjust this knob on our track we can select a value between the minimum and the maximum there's both horizontal and vertical sliders there's no real difference between the two except their orientation in this video we'll be using a vertical slider to behave as a sort of thermometer and when we adjust the knob on our track we can increase the temperature let's say perhaps we'll just change the text of a label to reflect the new temperature so let's begin select your slider and we can change the minimum and the maximum value i'm going to keep these as both 0 and 100 to represent a temperature in celsius so 0 would be the freezing point of water and 100 would be the boiling point of water in celsius i'll keep that the same but you can adjust those if you'd like you can set the initial value if i would like this knob right in the middle i would say 50 then because we're working with the range between 0 and 100 you can change the block increment that is the amount your knob is going to adjust on the track whenever you click on it i'll keep this the same you can show tick marks so different intervals show tick labels on our scale we only display these numbers on major ticks and currently there's a major tick unit of 25 so we will have a major tick every 25 ticks every 25 values but we can change that so if i would like a major tick at 10 well we now have a label at every 10 intervals every 10 ticks you can also change the minor tick count currently we have three ticks in between each major tick but if i were to set this to 10 well then we would have 10 ticks between each major tick and each major tick has the label of the current temperature and i think that's enough for properties let's give this slider a unique id let's call the slider my slider and we'll create a label as well so that when we adjust the knob on the track we will change the text of a label so let's find our label node i'll place it here and i'll increase the font size ah that's good okay i'm going to give this label a unique id let's call it my label make sure that your controller class is linked and let's save and head to our controller class make sure that you save and update your fxml file head to your controller class and we'll use some fxml injection at fxml private label my label at fxml private slider my slider and i think it's best if we create a variable to hold the current temperature this will be an integer integer my temperature okay now we need to add a change listener to my slider so we're going to utilize the initialize method based on the last video so we will need this class to implement initializable i can never spell it and since we're implementing an interface we need to add any unimplemented methods that's a requirement one great use of the initialize method is that it's invoked automatically in the background and can perform any code found within after the root element has already been added so we did not have the on action section to link a method to our slider so we'll need to manually add a change listener to the slider and within the initialize method we're going to add a change listener to my slider so within this method of initialize type my slider dot then value property method followed by dot add listener and we're going to pass in a change listener so within the parenthesis of add listener we're going to pass in a new change listener as an argument so type new change listener and let's set up a generic of a number so angle brackets number then add a set of parentheses and then a set of curly braces within okay so we need to add any unimplemented methods and the one unimplemented method is change so a lot of this should auto generate for you so what do you want to do when you adjust the knob on a track you would write that within the changed method so the first thing that we should do is get the current temperature my temperature equals my slider dot get value now this method here will return a double so since we're working with integers we should cast this as an integer so let's add an int cast afterwards so we will get the current value from our slider and store it within this variable of my temperature and now we should change the text of my label to reflect this temperature so take my label dot set text and we're going to use integer dot 2 string my temperature then let's use some string concatenation to add degrees celsius and let's try it so we have our label and we can adjust the knob on the slider to change the current temperature the text of this label between 0 and 100 now when we run this program the label is initially set to a string of label we can change that just by copying what we have here and within the initialize method let's just paste this code so that the initial label will be set to the current temperature wherever this knob is placed well then everybody that is a slider it's a sliding scale between a minimum and a maximum value if you would like a copy of all this code i will post this to the comment section down below but yeah those are sliders in javafx
