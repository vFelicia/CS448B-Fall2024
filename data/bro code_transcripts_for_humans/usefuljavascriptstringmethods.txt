With timestamps:

00:00 - hey it's me again so today I'm going to
00:02 - explain string Methods in JavaScript
00:04 - string Methods allow you to manipulate
00:07 - and work with text also known as strings
00:10 - in this example I have a username
00:12 - username equals a string of text why
00:16 - don't you go ahead and create a username
00:17 - variable and set it equal to either your
00:19 - username if you have one or your full
00:22 - name strings have different built-in
00:24 - methods where we can manipulate this
00:27 - text one way or another here's a few
00:29 - examples suppose I would like to get the
00:31 - first character of the string I can use
00:35 - the Char at method type a string or a
00:38 - variable containing a string then follow
00:40 - this with DOT by adding a DOT we are
00:43 - accessing any Properties or methods that
00:46 - the string has follow this with Char at
00:50 - then list an index the first character
00:53 - is zero the second character would be
00:55 - one so get the character at index zero
00:59 - that that should be a b however if I
01:01 - were to run this let's go to our Dev
01:04 - tools uh nothing appears to happen
01:07 - because it's going to return a single
01:08 - character let's place that within
01:11 - console.log just so that we can see
01:13 - it cut this code and paste it within
01:17 - console.log so the first character in my
01:20 - string is B but depending on what you
01:23 - wrote it might be different for you the
01:25 - character at index one would be R then
01:30 - is O so that is the Char at
01:33 - method the index of method will return
01:37 - the index of the first occurrence of a
01:39 - character let's find the first
01:41 - occurrence of an O it will return an
01:44 - index and then again I have to
01:47 - console.log whatever is
01:50 - returned so let's place this method
01:53 - within
01:55 - console.log what is the index of the
01:57 - first occurrence of an o that would be 2
02:01 - 0 1 2 otherwise for the last index let's
02:05 - change the method to be last index of
02:09 - which would be four 0 1 2 3
02:15 - 4 so the length property this isn't a
02:17 - method to get the length of a string
02:20 - type the string or a variable containing
02:23 - the
02:23 - string dot length this isn't a method
02:28 - but it's very similar so the length of
02:31 - my username is seven characters 1 2 3 4
02:35 - 5 6 7 so that's how to get the length of
02:39 - a
02:40 - string now we are going to trim the
02:42 - string maybe there's a bunch of white
02:44 - spaces after or
02:47 - before I will reassign username equal to
02:51 - let's take our username variable Dot and
02:54 - use the trim method to trim any wh
02:57 - space then I will console
03:00 - dolog my
03:03 - username there's my name and there's no
03:05 - Whit space
03:07 - after let's add some white space before
03:10 - our name yep and there's no white
03:13 - space to make my name I'll uppercase I
03:16 - can use the two uppercase method now my
03:21 - string is all
03:22 - uppercase then there's two lowercase to
03:25 - make all of the characters
03:28 - lowercase there's repeat to repeat a
03:31 - string within the parenthesis of the
03:34 - method how many times do you want to
03:36 - repeat the string if I were to type
03:38 - three we'll repeat the string three
03:41 - times to determine if a string starts
03:44 - with a given character we can use the
03:45 - starts with method this will return a
03:48 - Boolean I will store that within a
03:50 - result
03:51 - variable username
03:55 - do starts with method we we will check
04:00 - to see if the string starts with an
04:02 - empty
04:03 - space then let's
04:06 - console.log the
04:09 - result that is false my username does
04:11 - not begin with the space but what if it
04:14 - did I'll add one then that returns true
04:17 - this could be useful within an if
04:20 - statement if
04:23 - result if the string starts with a whit
04:26 - space let's
04:28 - console.log
04:30 - your
04:32 - username can't begin
04:35 - with an empty
04:38 - space else let's
04:45 - console.log the
04:47 - username my username has a whit space in
04:49 - the beginning your username can't begin
04:52 - with Whit
04:53 - space if that were false then we will
04:56 - display my username so that is the
04:58 - starts withth method
05:00 - there's also ends
05:05 - with does my username end with the Whit
05:08 - space it does not but what if it
05:12 - did your username can't end with an
05:16 - empty
05:17 - space next is the includes method does
05:21 - the string contain an empty
05:23 - space I'll split my username into two
05:26 - your first and last name would work as
05:28 - well your username
05:31 - can't include an empty space currently
05:34 - it does your username can't include an
05:37 - empty space if it didn't then we pass
05:40 - the test we will display the
05:43 - username all right now this time we will
05:45 - create a phone number let phone number
05:50 - equals make up some phone number
05:51 - including dashes 1 2 3 4 5 6
05:57 - 7890 so this phone number is a string
06:00 - even though it contains numbers because
06:02 - strings can contain numbers but we treat
06:04 - them as
06:05 - characters let's eliminate all the
06:07 - dashes in our phone number here's one
06:09 - way in which we can do that let's
06:11 - reassign our phone number equals our
06:15 - phone number we will use the replace all
06:20 - method which character are we replacing
06:23 - let's replace any dashes comma then the
06:26 - character to replace the dashes with or
06:29 - whatever you put for the first
06:30 - character we will replace all dashes
06:33 - with no
06:35 - characters then let's console. log our
06:38 - phone number and that should eliminate
06:41 - all of the
06:43 - dashes or otherwise you could replace it
06:45 - with a different character let's do a
06:46 - forward slash so 1
06:52 - 234567890 there's also the pad start
06:55 - method. pad
06:58 - start
07:00 - the first value within the pad start
07:02 - method is a specified length how many
07:05 - characters should the string be I would
07:08 - like the string to be 15 characters long
07:11 - then for the second value make sure to
07:13 - comma separate it we can pad the start
07:16 - of the string with a given character
07:18 - let's say
07:20 - zero so the result is a couple zeros
07:23 - than our phone
07:24 - number pad this string with zeros until
07:28 - it's 15 character long if I were to set
07:31 - this to 20 then we would have more zeros
07:34 - there's more
07:35 - padding then there's pad
07:38 - end pad the end of the string with this
07:41 - character until the string is 15
07:43 - characters
07:45 - long all right everybody so those are
07:47 - string Methods they allow you to
07:49 - manipulate and work with text also known
07:52 - as strings we'll have more practice with
07:54 - these in the future and well those are a
07:56 - few useful string Methods in JavaScript

Cleaned transcript:

hey it's me again so today I'm going to explain string Methods in JavaScript string Methods allow you to manipulate and work with text also known as strings in this example I have a username username equals a string of text why don't you go ahead and create a username variable and set it equal to either your username if you have one or your full name strings have different builtin methods where we can manipulate this text one way or another here's a few examples suppose I would like to get the first character of the string I can use the Char at method type a string or a variable containing a string then follow this with DOT by adding a DOT we are accessing any Properties or methods that the string has follow this with Char at then list an index the first character is zero the second character would be one so get the character at index zero that that should be a b however if I were to run this let's go to our Dev tools uh nothing appears to happen because it's going to return a single character let's place that within console.log just so that we can see it cut this code and paste it within console.log so the first character in my string is B but depending on what you wrote it might be different for you the character at index one would be R then is O so that is the Char at method the index of method will return the index of the first occurrence of a character let's find the first occurrence of an O it will return an index and then again I have to console.log whatever is returned so let's place this method within console.log what is the index of the first occurrence of an o that would be 2 0 1 2 otherwise for the last index let's change the method to be last index of which would be four 0 1 2 3 4 so the length property this isn't a method to get the length of a string type the string or a variable containing the string dot length this isn't a method but it's very similar so the length of my username is seven characters 1 2 3 4 5 6 7 so that's how to get the length of a string now we are going to trim the string maybe there's a bunch of white spaces after or before I will reassign username equal to let's take our username variable Dot and use the trim method to trim any wh space then I will console dolog my username there's my name and there's no Whit space after let's add some white space before our name yep and there's no white space to make my name I'll uppercase I can use the two uppercase method now my string is all uppercase then there's two lowercase to make all of the characters lowercase there's repeat to repeat a string within the parenthesis of the method how many times do you want to repeat the string if I were to type three we'll repeat the string three times to determine if a string starts with a given character we can use the starts with method this will return a Boolean I will store that within a result variable username do starts with method we we will check to see if the string starts with an empty space then let's console.log the result that is false my username does not begin with the space but what if it did I'll add one then that returns true this could be useful within an if statement if result if the string starts with a whit space let's console.log your username can't begin with an empty space else let's console.log the username my username has a whit space in the beginning your username can't begin with Whit space if that were false then we will display my username so that is the starts withth method there's also ends with does my username end with the Whit space it does not but what if it did your username can't end with an empty space next is the includes method does the string contain an empty space I'll split my username into two your first and last name would work as well your username can't include an empty space currently it does your username can't include an empty space if it didn't then we pass the test we will display the username all right now this time we will create a phone number let phone number equals make up some phone number including dashes 1 2 3 4 5 6 7890 so this phone number is a string even though it contains numbers because strings can contain numbers but we treat them as characters let's eliminate all the dashes in our phone number here's one way in which we can do that let's reassign our phone number equals our phone number we will use the replace all method which character are we replacing let's replace any dashes comma then the character to replace the dashes with or whatever you put for the first character we will replace all dashes with no characters then let's console. log our phone number and that should eliminate all of the dashes or otherwise you could replace it with a different character let's do a forward slash so 1 234567890 there's also the pad start method. pad start the first value within the pad start method is a specified length how many characters should the string be I would like the string to be 15 characters long then for the second value make sure to comma separate it we can pad the start of the string with a given character let's say zero so the result is a couple zeros than our phone number pad this string with zeros until it's 15 character long if I were to set this to 20 then we would have more zeros there's more padding then there's pad end pad the end of the string with this character until the string is 15 characters long all right everybody so those are string Methods they allow you to manipulate and work with text also known as strings we'll have more practice with these in the future and well those are a few useful string Methods in JavaScript
