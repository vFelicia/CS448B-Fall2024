With timestamps:

00:00 - oh yeah ladies and gentlemen
00:03 - do you know what's better than
00:04 - overloaded methods the params keyword
00:07 - now a methods parameters can take a
00:10 - variable number of arguments if we use
00:13 - the params keyword and the parameter
00:15 - type must be
00:16 - a single dimensional array what's the
00:18 - benefit of this
00:19 - let me explain so let's say that we have
00:21 - an online store we have a method to
00:23 - check out
00:24 - where we will basically sum up a
00:26 - customer's prices
00:27 - and return a total and we'll tell the
00:29 - customer you have to pay this total
00:31 - what if the person checking out has a
00:33 - variable number of items that they would
00:35 - like to buy
00:36 - well we would have to set up a bunch of
00:38 - different methods like
00:39 - what if they only buy one item well
00:41 - there's a checkout method
00:42 - that accepts one argument another
00:45 - checkout method that accepts two
00:46 - arguments then three
00:48 - and then we continue on and on and on so
00:50 - yeah don't do this
00:51 - a better solution would be to use this
00:53 - params keyword where we only need a
00:55 - single method
00:56 - and this one single method can accept a
00:58 - varying number of arguments
01:00 - we don't need like several copies of the
01:02 - same method then
01:03 - so to use the params keyword precede our
01:06 - data type with the word params
01:09 - then after the data type follow this
01:11 - with a set of square brackets
01:13 - now this parameter a is now an array i'm
01:16 - going to name this as something a little
01:17 - more descriptive like
01:18 - prices because we're working with prices
01:21 - so we need to iterate over the elements
01:24 - of an array
01:25 - and create a total so i'm going to
01:27 - create a local variable named
01:29 - double total so you can have variables
01:33 - with the same name
01:34 - but they need to be within a different
01:35 - scope so these are in different methods
01:37 - so they are not visible to each other
01:39 - double
01:40 - total i will set the sequel to zero to
01:43 - begin with
01:44 - and we'll use a for each loop to iterate
01:47 - over the elements of this array
01:49 - for each double
01:52 - price in prices
01:55 - total equals total plus
01:59 - whatever price we're working with but
02:01 - i'll shorten this
02:02 - to plus equals price then at the end
02:05 - we will return total and
02:08 - this should work the same okay the total
02:11 - price is
02:13 - 24.74 but there's some formatting that
02:16 - we'll have to do in a future video
02:17 - and then i can just keep on adding items
02:19 - to my you know fictional shopping cart
02:21 - like i would like to buy a bottle of
02:23 - water for a dollar
02:25 - and a t-shirt for ten dollars
02:28 - and 25 cents
02:31 - so you see by using this params keyword
02:33 - a single method can accept a varying
02:36 - amount of arguments
02:37 - so method overloading isn't always
02:39 - necessary if you're working with
02:41 - a lot of different arguments you're not
02:42 - really sure how many arguments are going
02:44 - to be passed in
02:45 - okay then everybody that is the params
02:47 - keyword it can be applied to a method
02:50 - parameter so that it can accept a
02:52 - variable number of arguments
02:54 - but the parameter type must be a single
02:56 - dimensional array
02:58 - and that is the params keyword if you
03:00 - can help me out by smashing that like
03:02 - button
03:02 - drop a random comment down below and
03:04 - well yeah that's the pram's keyword in
03:07 - c-sharp

Cleaned transcript:

oh yeah ladies and gentlemen do you know what's better than overloaded methods the params keyword now a methods parameters can take a variable number of arguments if we use the params keyword and the parameter type must be a single dimensional array what's the benefit of this let me explain so let's say that we have an online store we have a method to check out where we will basically sum up a customer's prices and return a total and we'll tell the customer you have to pay this total what if the person checking out has a variable number of items that they would like to buy well we would have to set up a bunch of different methods like what if they only buy one item well there's a checkout method that accepts one argument another checkout method that accepts two arguments then three and then we continue on and on and on so yeah don't do this a better solution would be to use this params keyword where we only need a single method and this one single method can accept a varying number of arguments we don't need like several copies of the same method then so to use the params keyword precede our data type with the word params then after the data type follow this with a set of square brackets now this parameter a is now an array i'm going to name this as something a little more descriptive like prices because we're working with prices so we need to iterate over the elements of an array and create a total so i'm going to create a local variable named double total so you can have variables with the same name but they need to be within a different scope so these are in different methods so they are not visible to each other double total i will set the sequel to zero to begin with and we'll use a for each loop to iterate over the elements of this array for each double price in prices total equals total plus whatever price we're working with but i'll shorten this to plus equals price then at the end we will return total and this should work the same okay the total price is 24.74 but there's some formatting that we'll have to do in a future video and then i can just keep on adding items to my you know fictional shopping cart like i would like to buy a bottle of water for a dollar and a tshirt for ten dollars and 25 cents so you see by using this params keyword a single method can accept a varying amount of arguments so method overloading isn't always necessary if you're working with a lot of different arguments you're not really sure how many arguments are going to be passed in okay then everybody that is the params keyword it can be applied to a method parameter so that it can accept a variable number of arguments but the parameter type must be a single dimensional array and that is the params keyword if you can help me out by smashing that like button drop a random comment down below and well yeah that's the pram's keyword in csharp
