With timestamps:

00:00 - hey what's going on everybody it's your
00:02 - bro hope you're doing well
00:03 - and in today's video i'm gonna
00:04 - demonstrate how we can apply a css file
00:06 - to a javafx gui application so sit back
00:10 - relax and enjoy the show
00:14 - if you wouldn't mind please like comment
00:16 - and subscribe
00:17 - one like equals one prayer for the
00:19 - youtube algorithm
00:21 - all right let's get this show on the
00:23 - road i'm going to demonstrate how we can
00:25 - apply a css style sheet to our javafx
00:28 - gui applications
00:29 - if you don't know any css that's
00:30 - completely fine we'll cover some of the
00:32 - basics
00:32 - but after watching this video and you
00:34 - want to learn more about css
00:36 - check out my full course on html and css
00:40 - do it now if you're using eclipse then
00:42 - eclipse might have generated a css
00:44 - style sheet for you already let's say
00:46 - that we don't have this let's start
00:47 - fresh
00:48 - so i'm going to delete this bye
00:51 - and this is how to create a new css file
00:53 - right click on your package within your
00:55 - project folder
00:56 - go to new other file
00:59 - under the general folder next i will
01:02 - name this
01:04 - application but name it whatever you
01:05 - want dot css
01:08 - and finish our next step is to apply our
01:11 - style sheet
01:12 - to a scene so you'll need this line of
01:14 - code in
01:15 - scene if that's what you named your
01:16 - scene get stylesheet
01:18 - dot add get class get resource
01:22 - the name of your css file mine is
01:24 - application.com
01:26 - whatever you named this to external form
01:29 - and that should link your css style
01:31 - sheet to your scene
01:33 - although if you need to apply a css
01:35 - style sheet to more than one scene
01:37 - i actually recommend breaking this line
01:39 - of code into
01:40 - two so that we can reuse our style sheet
01:43 - so
01:43 - if that is the case and you have more
01:45 - than one scene i recommend writing
01:46 - something like this
01:47 - let's create a string variable named css
01:51 - that will contain the location of our
01:53 - css file that we have
01:55 - so string css equals this
01:58 - dot and copy everything within the add
02:01 - method from the previous line
02:03 - get class get resource the name of your
02:06 - css style sheet
02:07 - to external form and now we can take our
02:10 - scene
02:11 - dot get style sheets dot add
02:16 - css and that's it since we're storing
02:19 - our resource within a string variable
02:21 - named css
02:22 - we can just keep on reusing the string
02:24 - and if we have multiple scenes
02:26 - we can just type in the next scene for
02:28 - example like scene one or scene two
02:30 - get style sheets add css and then we can
02:32 - just keep on repeating this for each
02:34 - scene that we have
02:35 - so that's another way in which you could
02:37 - write this now that we've linked our
02:38 - style sheet we'll need an application to
02:40 - work with
02:41 - so i'm going to go to my fxml file and
02:43 - open with scene builder so that we can
02:45 - build something for practice and then
02:46 - style it
02:48 - now within scene builder we're not going
02:49 - to build anything too fancy just
02:51 - something very basic so i'm going to use
02:53 - an anchor pane for this example
02:55 - and i'm going to add two labels you can
02:57 - find labels under your control
02:59 - so where is it there it is let's create
03:01 - two labels perhaps one right here
03:03 - and another maybe right here that should
03:06 - be good
03:07 - now you can change the text on these two
03:09 - let's say
03:10 - level one for the first label and the
03:13 - second label perhaps
03:15 - this is some css
03:19 - styling all right one thing that we'll
03:22 - probably want to do for
03:24 - this video is to give each of these
03:25 - labels a unique id
03:27 - although it's not required so under code
03:30 - i'm going to give
03:31 - this first label a unique id i'll call
03:33 - this maybe
03:34 - title label and for the next id
03:38 - i will call this perhaps text label
03:41 - name it something memorable and that
03:43 - should be good for now i'm going to
03:45 - save this file save now that we're out
03:48 - of scene builder let's do one final
03:50 - check before running this
03:51 - head to your fxml file and make sure
03:53 - that everything is populated within here
03:55 - and within your start method make sure
03:57 - you have the following lines of code
03:59 - we're creating a root node we're
04:00 - creating a scene
04:01 - adding the root node to our scene we're
04:03 - applying our css style sheet
04:05 - we're setting the stage with the scene
04:07 - and stage.show at the end
04:09 - so now currently our application looks a
04:12 - little something like this
04:13 - and now we can use some css styling to
04:15 - style our labels and the background too
04:18 - so let's head to our css file alright
04:20 - here's a crash course on css in like
04:23 - under a minute using css we can style
04:26 - specific items
04:27 - by their id or entire classes by using
04:30 - their class name
04:31 - to target an item by its id you would
04:33 - type hashtag
04:35 - and then the name of the id of that
04:37 - specific item
04:38 - so if i would like to style the title
04:40 - label that i would have
04:42 - i would type hashtag then the name of
04:44 - the id
04:45 - and for this example it is title label
04:47 - and now for all of the properties that
04:49 - we will apply to this item
04:51 - we will put within a body a set of curly
04:54 - braces
04:55 - now that's how to target a specific item
04:58 - by its id
04:59 - you can also select an entire class of
05:02 - items by typing
05:03 - dot and then the class name that will
05:05 - apply css styling to an entire class of
05:08 - items
05:08 - let's say now that i would like to style
05:11 - all labels
05:12 - so we would type dot and then the name
05:14 - of the class and in this case it is
05:16 - label
05:17 - however this is lowercase though so dot
05:19 - label
05:20 - will apply css styling to an entire
05:22 - class of items
05:24 - and for example let's say that i would
05:25 - like to change the root node that would
05:28 - be
05:28 - dot root and then a class body
05:32 - all right let's apply some css styling
05:34 - these are in
05:35 - property value pairs however with fx we
05:38 - would precede all of the css properties
05:40 - with
05:41 - dash fx dash and then the name of the
05:44 - property
05:45 - so let's say we would like to change the
05:46 - background color that would be
05:48 - background dash color colon
05:52 - and then some value let's say i would
05:54 - like to change the color to
05:55 - black and then add a semicolon to the
05:58 - end
05:58 - so now when i run this all root nodes
06:01 - will have the background color
06:02 - of black just like this alternatively
06:06 - you could use hexadecimal values in
06:08 - place of color names
06:09 - so black for example would be hashtag
06:12 - zero zero zero
06:13 - zero zero zero however i think i'm going
06:15 - to change this to a
06:16 - slightly lighter shade of black so
06:18 - perhaps
06:20 - six ones that should be good and this
06:22 - should be a lighter shade of black
06:24 - so you can always look up a hexadecimal
06:26 - color picker if you like a custom color
06:29 - i believe rgb values would work as well
06:31 - okay
06:32 - let's change the font of the labels so
06:34 - that would be fx
06:36 - dash the name of the css property let's
06:38 - say
06:39 - font dash size colon and perhaps i will
06:43 - set this to
06:43 - 20 and now all labels that we have
06:46 - meaning both of these will have a font
06:50 - size
06:50 - of 20 not just one label but all labels
06:53 - because we're targeting an entire class
06:55 - of labels okay let's change a few other
06:58 - things
06:58 - let's say the font family so that would
07:00 - be fx
07:02 - dash font dash family
07:06 - and at this font i kind of like lucida
07:09 - console
07:15 - kind of looks something like that but
07:17 - let's change the font color
07:21 - that would be text fill
07:25 - and let's select maybe white
07:31 - all right not too bad i think i'm going
07:33 - to increase the size of this level 1
07:36 - label here
07:36 - and i think we named this title label so
07:39 - if you apply
07:40 - any styling to an entire class you can
07:43 - also apply
07:44 - some additional styling by its id as
07:46 - well so
07:47 - not only will our title label have all
07:49 - of these css properties
07:51 - but we can add some additional ones or
07:52 - change some values so for the font size
07:55 - let's change this to
07:56 - 60 so now only the title label will be
07:59 - larger compared to all labels
08:02 - all right and the last thing that i want
08:03 - to show you guys is how we can center
08:05 - all of this because right now it's kind
08:06 - of off center
08:07 - now there is a css property for that
08:10 - it's going to
08:11 - center all text within its container so
08:14 - that would be
08:15 - fx dash alignment
08:19 - center however this by itself will not
08:22 - change it and i'll show you why
08:24 - basically speaking this alignment
08:26 - property will center any text within its
08:28 - container
08:29 - however this container is the minimum
08:31 - size it needs to be
08:32 - to accommodate the size of the text what
08:35 - we're going to do is expand this
08:36 - container so that the width
08:38 - equals the width of the frame that we
08:40 - have so let's head back into scene
08:42 - builder and
08:42 - expand the size of our containers now
08:45 - here i am within scene builder now
08:47 - select one of your labels
08:48 - and you'll notice a slightly shaded
08:51 - portion that is the size of the
08:53 - container of this label
08:54 - basically when we're using the alignment
08:56 - property we're centering this text
08:58 - within the small container
09:00 - so why don't we expand the size of the
09:02 - container so that it's the same width as
09:04 - the size of the pane that we're working
09:06 - with and if you see that it's left
09:08 - aligned
09:08 - that's completely fine when we run this
09:10 - it's going to be centered
09:12 - so let's expand both of these containers
09:14 - so that they take up the entire width
09:16 - of our pane that we're working with
09:18 - let's save and then head back to
09:20 - our program now you may need to open the
09:23 - tab for your fxml file just to be sure
09:25 - that everything updates and then we can
09:26 - run this program
09:28 - and everything should be center
09:31 - yep just like that well ladies and
09:33 - gentlemen that is how to apply
09:35 - a css stylesheet to your javafx gui
09:38 - applications
09:39 - like i said at the beginning of this
09:40 - video if you're interested in learning
09:42 - more about css i do have a
09:44 - free full course on both html and css on
09:47 - the channel
09:48 - and well yeah that's how to apply css to
09:51 - javafx
09:53 - hey you yeah i'm talking to you if you
09:55 - learned something new
09:56 - then help me help you in three easy
09:58 - steps
09:59 - by smashing that like button drop a
10:01 - comment down below
10:02 - and subscribe if you'd like to become a
10:04 - fellow bro
10:18 - [Music]
10:27 - you

Cleaned transcript:

hey what's going on everybody it's your bro hope you're doing well and in today's video i'm gonna demonstrate how we can apply a css file to a javafx gui application so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm all right let's get this show on the road i'm going to demonstrate how we can apply a css style sheet to our javafx gui applications if you don't know any css that's completely fine we'll cover some of the basics but after watching this video and you want to learn more about css check out my full course on html and css do it now if you're using eclipse then eclipse might have generated a css style sheet for you already let's say that we don't have this let's start fresh so i'm going to delete this bye and this is how to create a new css file right click on your package within your project folder go to new other file under the general folder next i will name this application but name it whatever you want dot css and finish our next step is to apply our style sheet to a scene so you'll need this line of code in scene if that's what you named your scene get stylesheet dot add get class get resource the name of your css file mine is application.com whatever you named this to external form and that should link your css style sheet to your scene although if you need to apply a css style sheet to more than one scene i actually recommend breaking this line of code into two so that we can reuse our style sheet so if that is the case and you have more than one scene i recommend writing something like this let's create a string variable named css that will contain the location of our css file that we have so string css equals this dot and copy everything within the add method from the previous line get class get resource the name of your css style sheet to external form and now we can take our scene dot get style sheets dot add css and that's it since we're storing our resource within a string variable named css we can just keep on reusing the string and if we have multiple scenes we can just type in the next scene for example like scene one or scene two get style sheets add css and then we can just keep on repeating this for each scene that we have so that's another way in which you could write this now that we've linked our style sheet we'll need an application to work with so i'm going to go to my fxml file and open with scene builder so that we can build something for practice and then style it now within scene builder we're not going to build anything too fancy just something very basic so i'm going to use an anchor pane for this example and i'm going to add two labels you can find labels under your control so where is it there it is let's create two labels perhaps one right here and another maybe right here that should be good now you can change the text on these two let's say level one for the first label and the second label perhaps this is some css styling all right one thing that we'll probably want to do for this video is to give each of these labels a unique id although it's not required so under code i'm going to give this first label a unique id i'll call this maybe title label and for the next id i will call this perhaps text label name it something memorable and that should be good for now i'm going to save this file save now that we're out of scene builder let's do one final check before running this head to your fxml file and make sure that everything is populated within here and within your start method make sure you have the following lines of code we're creating a root node we're creating a scene adding the root node to our scene we're applying our css style sheet we're setting the stage with the scene and stage.show at the end so now currently our application looks a little something like this and now we can use some css styling to style our labels and the background too so let's head to our css file alright here's a crash course on css in like under a minute using css we can style specific items by their id or entire classes by using their class name to target an item by its id you would type hashtag and then the name of the id of that specific item so if i would like to style the title label that i would have i would type hashtag then the name of the id and for this example it is title label and now for all of the properties that we will apply to this item we will put within a body a set of curly braces now that's how to target a specific item by its id you can also select an entire class of items by typing dot and then the class name that will apply css styling to an entire class of items let's say now that i would like to style all labels so we would type dot and then the name of the class and in this case it is label however this is lowercase though so dot label will apply css styling to an entire class of items and for example let's say that i would like to change the root node that would be dot root and then a class body all right let's apply some css styling these are in property value pairs however with fx we would precede all of the css properties with dash fx dash and then the name of the property so let's say we would like to change the background color that would be background dash color colon and then some value let's say i would like to change the color to black and then add a semicolon to the end so now when i run this all root nodes will have the background color of black just like this alternatively you could use hexadecimal values in place of color names so black for example would be hashtag zero zero zero zero zero zero however i think i'm going to change this to a slightly lighter shade of black so perhaps six ones that should be good and this should be a lighter shade of black so you can always look up a hexadecimal color picker if you like a custom color i believe rgb values would work as well okay let's change the font of the labels so that would be fx dash the name of the css property let's say font dash size colon and perhaps i will set this to 20 and now all labels that we have meaning both of these will have a font size of 20 not just one label but all labels because we're targeting an entire class of labels okay let's change a few other things let's say the font family so that would be fx dash font dash family and at this font i kind of like lucida console kind of looks something like that but let's change the font color that would be text fill and let's select maybe white all right not too bad i think i'm going to increase the size of this level 1 label here and i think we named this title label so if you apply any styling to an entire class you can also apply some additional styling by its id as well so not only will our title label have all of these css properties but we can add some additional ones or change some values so for the font size let's change this to 60 so now only the title label will be larger compared to all labels all right and the last thing that i want to show you guys is how we can center all of this because right now it's kind of off center now there is a css property for that it's going to center all text within its container so that would be fx dash alignment center however this by itself will not change it and i'll show you why basically speaking this alignment property will center any text within its container however this container is the minimum size it needs to be to accommodate the size of the text what we're going to do is expand this container so that the width equals the width of the frame that we have so let's head back into scene builder and expand the size of our containers now here i am within scene builder now select one of your labels and you'll notice a slightly shaded portion that is the size of the container of this label basically when we're using the alignment property we're centering this text within the small container so why don't we expand the size of the container so that it's the same width as the size of the pane that we're working with and if you see that it's left aligned that's completely fine when we run this it's going to be centered so let's expand both of these containers so that they take up the entire width of our pane that we're working with let's save and then head back to our program now you may need to open the tab for your fxml file just to be sure that everything updates and then we can run this program and everything should be center yep just like that well ladies and gentlemen that is how to apply a css stylesheet to your javafx gui applications like i said at the beginning of this video if you're interested in learning more about css i do have a free full course on both html and css on the channel and well yeah that's how to apply css to javafx hey you yeah i'm talking to you if you learned something new then help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
