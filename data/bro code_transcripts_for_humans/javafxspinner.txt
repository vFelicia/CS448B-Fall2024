With timestamps:

00:00 - hey what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in today's video i'm going to
00:04 - explain spinners in javafx
00:06 - so sit back relax and enjoy the show
00:11 - okay i guess we're talking about
00:12 - spinners today a spinner is a
00:15 - single line text field that allows a
00:16 - user to select a number
00:18 - or an object value from an ordered
00:20 - sequence they are also provided with a
00:22 - pair of arrow buttons
00:24 - so that we can step through the elements
00:25 - of that sequence now there's not a lot
00:27 - of customizations that we can do with
00:29 - spinners
00:29 - one we can make this editable by
00:31 - checking this checkbox
00:32 - so a user will be able to type in an
00:35 - element from
00:36 - our collection that we're going to add
00:37 - to the spinner so let's add
00:39 - a unique id to the spinner let's call it
00:42 - my spinner
00:43 - and later on we'll add the numbers 1
00:45 - through 10 something simple
00:46 - and we'll change the text of a label to
00:48 - reflect whatever element
00:50 - we choose with our spinner now let's add
00:52 - a label and we're going to change
00:54 - the text of this label to match the
00:56 - value that is selected within
00:58 - our spinner here so let me just increase
01:01 - the font size
01:03 - expand this and then center it
01:06 - and i will give this label a unique id
01:08 - of
01:09 - my label so make sure that you add your
01:11 - controller class
01:12 - and let's save and head to our
01:14 - controller class
01:16 - update your fxml file head to your
01:18 - controller class we're going to
01:19 - implement the initializable interface
01:24 - and we need to add any unimplemented
01:26 - methods
01:27 - and let's declare everything that we'll
01:29 - need so at
01:31 - fxml private spinner
01:35 - my spinner now we're going to add a
01:37 - generic type
01:38 - we're going to make a spinner of numbers
01:41 - so let's add a generic type
01:43 - of integer we'll just add the numbers 1
01:46 - through 10 but we'll need to populate
01:47 - our spinner within our initialize method
01:50 - at fxml private
01:53 - label my label
01:56 - and let's create an integer variable to
01:59 - hold the current value
02:00 - so let's say int current value
02:04 - now within the initialize method we're
02:07 - going to create what is called a
02:08 - spinner value factory so what this does
02:12 - is that the spinner value factory
02:14 - handles all aspects of the spinner
02:16 - including representing the current state
02:18 - of the value
02:19 - incrementing and decrementing the value
02:22 - with one or more steps per call
02:24 - converting the text input from the user
02:26 - and converting objects
02:27 - to user readable strings for displaying
02:30 - on the screen
02:30 - so basically without a spinner value
02:33 - factory a spinner is an empty husk it's
02:35 - unusable
02:36 - now to be able to use a spinner we need
02:38 - to add a spinner
02:39 - value factory and here's how let's
02:42 - declare a spinner
02:44 - value factory and we will list a generic
02:48 - type of integer because we're working
02:50 - with integers for this example
02:52 - let's call this value factory
02:56 - equals and this is going to be a very
02:58 - long line
03:00 - new spinner value
03:03 - factory dot
03:06 - and list the data type they're going to
03:08 - work with we're going to work
03:09 - with integers so integer spinner
03:13 - value factory and we will add
03:16 - the minimum and maximum values that we
03:19 - can choose
03:19 - from the spinner value factory so if we
03:22 - want the numbers 1 through 10 we'll list
03:24 - that here
03:24 - as the minimum and the maximum just to
03:27 - make this a little more readable since
03:28 - this line is fairly long i'm just going
03:30 - to hit enter right after the equals
03:32 - just so that we can read these lines
03:34 - pull together now let's set the default
03:36 - value for our value factory value
03:39 - factory dot set value
03:43 - to let's say one now we need to add our
03:47 - value factory to our spinner so we will
03:51 - type
03:51 - my spinner dot
03:55 - set value factory and pass in
03:58 - your value factory now at this point
04:01 - let's run our program just to be sure
04:02 - that we can at least interact with our
04:04 - spinner
04:05 - so since we added our spinner value
04:07 - factory to our spinner we should at
04:09 - least be able to interact with it
04:11 - so we have the numbers 1 through 10
04:13 - because we set that as the minimum
04:15 - and the maximum values now let's change
04:17 - the text of our label
04:18 - to reflect the default value within our
04:21 - spinner
04:22 - so we're going to take current value and
04:24 - set this equal to
04:26 - my spinner dot get value
04:30 - and change the text of our label to
04:32 - reflect the current value
04:34 - so take my label dot set
04:38 - text equal to current value but we'll
04:42 - need to convert this to a string
04:44 - so type integer dot
04:47 - to string and surround your current
04:50 - value
04:51 - our label should reflect the current
04:53 - value so we have
04:55 - one here but when we interact with our
04:58 - spinner we need to be able to update
05:00 - the text of this label so we need to add
05:02 - a change listener to our spinner
05:05 - so that'll be the last line so take
05:08 - my spinner dot
05:12 - then value property
05:16 - dot add listener and we're going to pass
05:21 - in
05:21 - an anonymous change listener
05:24 - new change
05:28 - listener the generic of integer
05:31 - parentheses curly braces then add any
05:34 - unimplemented methods
05:38 - so when we interact with our spinner
05:41 - what are we going to do
05:42 - let's update the text of our label as
05:44 - well as update the current value
05:46 - so let's copy these two lines of code
05:48 - and paste it within our
05:50 - changed method so now we should be able
05:52 - to update
05:53 - our label every time that we step
05:55 - through the elements of our spinner
05:57 - so we have one two three all the way up
06:00 - to ten
06:01 - well all right everybody in conclusion a
06:03 - spinner is a
06:04 - single line text field that is provided
06:06 - with a pair of arrow buttons
06:08 - so that we can step through the elements
06:10 - of a sequence if you would like a copy
06:12 - of all this code i will post this to the
06:14 - comment section down below
06:15 - but yeah those are spinners in javafx

Cleaned transcript:

hey what's going on everybody it's you bro hope you're doing well and in today's video i'm going to explain spinners in javafx so sit back relax and enjoy the show okay i guess we're talking about spinners today a spinner is a single line text field that allows a user to select a number or an object value from an ordered sequence they are also provided with a pair of arrow buttons so that we can step through the elements of that sequence now there's not a lot of customizations that we can do with spinners one we can make this editable by checking this checkbox so a user will be able to type in an element from our collection that we're going to add to the spinner so let's add a unique id to the spinner let's call it my spinner and later on we'll add the numbers 1 through 10 something simple and we'll change the text of a label to reflect whatever element we choose with our spinner now let's add a label and we're going to change the text of this label to match the value that is selected within our spinner here so let me just increase the font size expand this and then center it and i will give this label a unique id of my label so make sure that you add your controller class and let's save and head to our controller class update your fxml file head to your controller class we're going to implement the initializable interface and we need to add any unimplemented methods and let's declare everything that we'll need so at fxml private spinner my spinner now we're going to add a generic type we're going to make a spinner of numbers so let's add a generic type of integer we'll just add the numbers 1 through 10 but we'll need to populate our spinner within our initialize method at fxml private label my label and let's create an integer variable to hold the current value so let's say int current value now within the initialize method we're going to create what is called a spinner value factory so what this does is that the spinner value factory handles all aspects of the spinner including representing the current state of the value incrementing and decrementing the value with one or more steps per call converting the text input from the user and converting objects to user readable strings for displaying on the screen so basically without a spinner value factory a spinner is an empty husk it's unusable now to be able to use a spinner we need to add a spinner value factory and here's how let's declare a spinner value factory and we will list a generic type of integer because we're working with integers for this example let's call this value factory equals and this is going to be a very long line new spinner value factory dot and list the data type they're going to work with we're going to work with integers so integer spinner value factory and we will add the minimum and maximum values that we can choose from the spinner value factory so if we want the numbers 1 through 10 we'll list that here as the minimum and the maximum just to make this a little more readable since this line is fairly long i'm just going to hit enter right after the equals just so that we can read these lines pull together now let's set the default value for our value factory value factory dot set value to let's say one now we need to add our value factory to our spinner so we will type my spinner dot set value factory and pass in your value factory now at this point let's run our program just to be sure that we can at least interact with our spinner so since we added our spinner value factory to our spinner we should at least be able to interact with it so we have the numbers 1 through 10 because we set that as the minimum and the maximum values now let's change the text of our label to reflect the default value within our spinner so we're going to take current value and set this equal to my spinner dot get value and change the text of our label to reflect the current value so take my label dot set text equal to current value but we'll need to convert this to a string so type integer dot to string and surround your current value our label should reflect the current value so we have one here but when we interact with our spinner we need to be able to update the text of this label so we need to add a change listener to our spinner so that'll be the last line so take my spinner dot then value property dot add listener and we're going to pass in an anonymous change listener new change listener the generic of integer parentheses curly braces then add any unimplemented methods so when we interact with our spinner what are we going to do let's update the text of our label as well as update the current value so let's copy these two lines of code and paste it within our changed method so now we should be able to update our label every time that we step through the elements of our spinner so we have one two three all the way up to ten well all right everybody in conclusion a spinner is a single line text field that is provided with a pair of arrow buttons so that we can step through the elements of a sequence if you would like a copy of all this code i will post this to the comment section down below but yeah those are spinners in javafx
