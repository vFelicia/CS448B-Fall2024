With timestamps:

00:00 - hey what's going on everybody it's your
00:01 - bro here hope you're doing well and in
00:03 - this video i'm going to teach you guys
00:04 - all about combo boxes in java so sit
00:07 - back relax and enjoy the show
00:11 - if you find this video helpful please
00:12 - remember to like
00:14 - comment and subscribe your support will
00:16 - help keep this channel running
00:18 - all right all you wonderful people let's
00:20 - discuss j combo boxes
00:22 - this is a gui component that combines a
00:24 - button or
00:25 - editable field and a drop down list we
00:27 - can create a drop down list and select
00:29 - one of a few different items
00:31 - so before we begin here's my setup i
00:33 - have two classes
00:35 - a main class that contains my main
00:36 - method and then
00:38 - a myframe class which extends jframe and
00:41 - implements the actionlistener interface
00:43 - and then within the main class i just
00:45 - created an instance of my frame
00:48 - so within this my frame class i have a
00:50 - constructor
00:51 - this dot set default close operation
00:54 - jframe max and on close
00:56 - we're using a new flow layout and we're
00:58 - going to finish this
00:59 - with this dot pack and this dot set
01:01 - visible set to true
01:03 - this is the standard procedure for us
01:04 - that we've been doing for this
01:06 - gui tutorial series and then we also
01:09 - have an action performed method
01:10 - that will respond to certain events now
01:13 - let's create a
01:14 - j combo box i'm going to place that here
01:16 - so
01:17 - let's first declare this that is j combo
01:21 - box and we will call this combo box
01:24 - equals
01:24 - new j combo box
01:29 - now we have our combo box but we need to
01:31 - populate this combo box with
01:33 - a listing of different options that the
01:35 - user can select
01:37 - so when we construct this j combo box we
01:40 - can pass into the constructor
01:42 - an array of reference data types these
01:44 - can be objects
01:45 - or they can be primitive data types but
01:47 - you have to use the wrapper class
01:49 - let's say that we want a drop down menu
01:51 - of
01:52 - animals and a user can select one of
01:54 - these so
01:55 - a string is actually a reference data
01:57 - type but it has to be an array
01:59 - so we'll create a string array called
02:02 - animals
02:04 - and let's fill this array with some
02:06 - animal names so let's say
02:08 - dog and then cat and then
02:12 - baby bird
02:15 - so with this array of animals we can
02:18 - pass this into our constructor when we
02:20 - create our j
02:21 - combo box and then lastly we just need
02:24 - to add
02:24 - this combo box to the frame so this dot
02:27 - add
02:28 - and we are adding our combo box
02:32 - and then when we run this we have a drop
02:34 - down menu
02:35 - a combo box and we can select one of
02:37 - these items
02:38 - however it currently doesn't do anything
02:40 - so within the action performed method
02:42 - we need to fill in a few things and
02:44 - actually whenever we select one of these
02:45 - items
02:46 - it's actually triggering an event so
02:48 - within the action performed method we
02:50 - will create an if statement
02:52 - if e dot get source
02:55 - is equal to our combo box
02:59 - then what we're going to do well we can
03:01 - do one of a few things
03:02 - but first this action performed method
03:05 - does not recognize our combo box
03:08 - that's because we declared this combo
03:10 - box within the constructor
03:11 - so it's local we need to turn this
03:14 - global
03:14 - by declaring this outside of the
03:16 - constructor
03:18 - so j combo box combo box and we do not
03:21 - need to declare this twice
03:23 - since we're declaring this combo box
03:25 - within the class everything within the
03:27 - class
03:27 - now recognizes this so our action
03:29 - performed method
03:30 - now recognizes this combo box so if our
03:34 - combo box
03:35 - does something then what we could do is
03:38 - get the current selected item
03:39 - so let's type in the name of the combo
03:41 - box combo box
03:43 - dot get selected item
03:46 - and then i'll just print this so let's
03:48 - put this within a print line statement
03:49 - so system.out.printline
03:52 - i'm going to copy this and paste it
03:55 - system.out.printline
03:57 - combobox.getselecteditem
03:58 - however we need to add an action
04:00 - listener to this combo box
04:02 - because it still doesn't return what we
04:04 - want basically
04:05 - so we need to add an action listener to
04:07 - this combo box
04:09 - so let's add that here combo box dot add
04:13 - action listener since this class is
04:16 - implementing the action
04:17 - listener interface we can just pass in
04:20 - this
04:20 - and this will work just fine then so
04:23 - then whenever we select an item from
04:25 - this j combo box
04:26 - it's going to trigger an event and get
04:28 - the current selected item
04:29 - so let's say we want a dog well we have
04:32 - a dog
04:33 - cat and then bird another method that
04:36 - functions
04:37 - similarly to get selected item is get
04:40 - selected index
04:41 - so for now i'm just going to copy this
04:44 - and i'm going to turn this into a
04:45 - comment
04:46 - so we can ignore it and then we're going
04:48 - to use the
04:49 - get selected index method instead
04:52 - so combobox.get
04:56 - index and this will return the index of
05:00 - what we select
05:01 - so this always begins with index zero so
05:04 - dog would be zero
05:06 - it prints zero bird would be two and
05:09 - then cat would be one
05:11 - here's a few helpful methods that you
05:12 - might find useful for combo boxes and in
05:15 - order to use these methods we type in
05:16 - the name of the combo box
05:18 - dot and here's a bunch of the different
05:20 - methods available to you
05:22 - let's begin with set editable and we can
05:25 - set this to true
05:26 - and what this does is that when we set
05:29 - the editability to true
05:30 - we can actually type in something to
05:33 - look for so let's say that i want to
05:35 - select cat i can just simply type in cat
05:38 - or i can select it from this drop down
05:40 - menu and it returns
05:41 - that item that we selected let's go over
05:44 - a few others
05:45 - so we can actually get the item count so
05:48 - that is
05:49 - combo box dot get
05:53 - item count and then we'll need to
05:55 - display this so let's put this within a
05:57 - print line statement
05:58 - so system.out.printline
06:02 - combobox.getitemcount
06:04 - and this prints the current amount of
06:05 - items which is three
06:09 - we can also add an item later so combo
06:13 - box dot add item
06:16 - so we need to pass in an object a
06:19 - reference data
06:20 - type let's pass in a string maybe
06:23 - a horse
06:26 - so with add item this will add an item
06:29 - to the end of this
06:31 - so now we have dog cat bird
06:34 - horse we can also
06:37 - insert something at a certain index so
06:41 - combo box dot insert
06:44 - item at we need an item and an index
06:48 - let's say we want pig for the first item
06:50 - at index zero
06:52 - so let's pass in a string that says pig
06:55 - and then an index zero so this should be
06:58 - at the beginning now
07:02 - however it's not currently selected see
07:04 - pig is at the top but dog was selected
07:07 - so we can actually set the selected item
07:09 - at a certain index
07:11 - when this runs so in order to do that
07:15 - it's combo box dot set
07:18 - selected index and you pass in an index
07:22 - so if i were to set this to zero it's
07:24 - always going to select
07:26 - index zero when this first
07:29 - so now our item pig is now selected
07:32 - because
07:33 - we have set selected index set to zero
07:36 - and our item pig is now set to zero
07:39 - we can also remove it item two so let's
07:42 - turn these into a comment just to ignore
07:44 - these
07:47 - so combo box dot remove
07:51 - item
07:55 - and let's say we want to remove our cat
07:57 - because our cat ran away but don't worry
07:59 - he'll come back
08:01 - so now we only have dog and bird
08:07 - we can also remove items at a certain
08:09 - index
08:10 - so combo box dot remove
08:15 - item at let's say zero
08:19 - so whatever item is at index zero it's
08:22 - going to remove that
08:25 - this time our dog ran away he went to go
08:28 - chase the mailman so we only have a cat
08:30 - and a bird
08:33 - and i have one more for you guys so
08:36 - combo
08:36 - box dot remove all
08:40 - items and this will clear
08:43 - our combo box so that there is nothing
08:46 - within here
08:47 - so this could probably be useful for
08:49 - something if you need to reset it
08:52 - one thing that you should remember is
08:53 - that with these j combo boxes we need to
08:56 - pass in an array of
08:57 - reference data types for example if we
09:00 - attempted to pass in an array of
09:02 - integers
09:03 - well since this is a primitive data type
09:06 - this actually wouldn't work let's say
09:08 - we're attempting to store
09:10 - the numbers one two and three and add
09:12 - these to our j
09:13 - combo box so in order to do something
09:16 - like this we would have to use
09:17 - the wrapper class version of this so for
09:20 - integer it is integer with a capital i
09:24 - and you spell it fully if this were
09:27 - double instead of
09:28 - lowercase double this would be capital
09:31 - double because
09:32 - this is the wrapper class version of a
09:34 - double
09:36 - so just make sure that you're using
09:38 - wrapper classes if you need to store
09:40 - a primitive data type within an array
09:43 - all right so that's the basics of combo
09:45 - boxes
09:46 - in java if you want a copy of all this
09:48 - code i'll post all of this in the
09:49 - comments down below
09:50 - but yeah that's the basics of combo
09:52 - boxes in java
09:55 - hey you yeah i'm talking to you if you
09:57 - learn something new
09:58 - then you can help me help you in three
10:01 - easy steps
10:02 - by smashing that like button drop a
10:05 - comment down below
10:06 - and subscribe if you'd like to become a
10:08 - fellow bro
10:21 - [Music]
10:29 - you

Cleaned transcript:

hey what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys all about combo boxes in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right all you wonderful people let's discuss j combo boxes this is a gui component that combines a button or editable field and a drop down list we can create a drop down list and select one of a few different items so before we begin here's my setup i have two classes a main class that contains my main method and then a myframe class which extends jframe and implements the actionlistener interface and then within the main class i just created an instance of my frame so within this my frame class i have a constructor this dot set default close operation jframe max and on close we're using a new flow layout and we're going to finish this with this dot pack and this dot set visible set to true this is the standard procedure for us that we've been doing for this gui tutorial series and then we also have an action performed method that will respond to certain events now let's create a j combo box i'm going to place that here so let's first declare this that is j combo box and we will call this combo box equals new j combo box now we have our combo box but we need to populate this combo box with a listing of different options that the user can select so when we construct this j combo box we can pass into the constructor an array of reference data types these can be objects or they can be primitive data types but you have to use the wrapper class let's say that we want a drop down menu of animals and a user can select one of these so a string is actually a reference data type but it has to be an array so we'll create a string array called animals and let's fill this array with some animal names so let's say dog and then cat and then baby bird so with this array of animals we can pass this into our constructor when we create our j combo box and then lastly we just need to add this combo box to the frame so this dot add and we are adding our combo box and then when we run this we have a drop down menu a combo box and we can select one of these items however it currently doesn't do anything so within the action performed method we need to fill in a few things and actually whenever we select one of these items it's actually triggering an event so within the action performed method we will create an if statement if e dot get source is equal to our combo box then what we're going to do well we can do one of a few things but first this action performed method does not recognize our combo box that's because we declared this combo box within the constructor so it's local we need to turn this global by declaring this outside of the constructor so j combo box combo box and we do not need to declare this twice since we're declaring this combo box within the class everything within the class now recognizes this so our action performed method now recognizes this combo box so if our combo box does something then what we could do is get the current selected item so let's type in the name of the combo box combo box dot get selected item and then i'll just print this so let's put this within a print line statement so system.out.printline i'm going to copy this and paste it system.out.printline combobox.getselecteditem however we need to add an action listener to this combo box because it still doesn't return what we want basically so we need to add an action listener to this combo box so let's add that here combo box dot add action listener since this class is implementing the action listener interface we can just pass in this and this will work just fine then so then whenever we select an item from this j combo box it's going to trigger an event and get the current selected item so let's say we want a dog well we have a dog cat and then bird another method that functions similarly to get selected item is get selected index so for now i'm just going to copy this and i'm going to turn this into a comment so we can ignore it and then we're going to use the get selected index method instead so combobox.get index and this will return the index of what we select so this always begins with index zero so dog would be zero it prints zero bird would be two and then cat would be one here's a few helpful methods that you might find useful for combo boxes and in order to use these methods we type in the name of the combo box dot and here's a bunch of the different methods available to you let's begin with set editable and we can set this to true and what this does is that when we set the editability to true we can actually type in something to look for so let's say that i want to select cat i can just simply type in cat or i can select it from this drop down menu and it returns that item that we selected let's go over a few others so we can actually get the item count so that is combo box dot get item count and then we'll need to display this so let's put this within a print line statement so system.out.printline combobox.getitemcount and this prints the current amount of items which is three we can also add an item later so combo box dot add item so we need to pass in an object a reference data type let's pass in a string maybe a horse so with add item this will add an item to the end of this so now we have dog cat bird horse we can also insert something at a certain index so combo box dot insert item at we need an item and an index let's say we want pig for the first item at index zero so let's pass in a string that says pig and then an index zero so this should be at the beginning now however it's not currently selected see pig is at the top but dog was selected so we can actually set the selected item at a certain index when this runs so in order to do that it's combo box dot set selected index and you pass in an index so if i were to set this to zero it's always going to select index zero when this first so now our item pig is now selected because we have set selected index set to zero and our item pig is now set to zero we can also remove it item two so let's turn these into a comment just to ignore these so combo box dot remove item and let's say we want to remove our cat because our cat ran away but don't worry he'll come back so now we only have dog and bird we can also remove items at a certain index so combo box dot remove item at let's say zero so whatever item is at index zero it's going to remove that this time our dog ran away he went to go chase the mailman so we only have a cat and a bird and i have one more for you guys so combo box dot remove all items and this will clear our combo box so that there is nothing within here so this could probably be useful for something if you need to reset it one thing that you should remember is that with these j combo boxes we need to pass in an array of reference data types for example if we attempted to pass in an array of integers well since this is a primitive data type this actually wouldn't work let's say we're attempting to store the numbers one two and three and add these to our j combo box so in order to do something like this we would have to use the wrapper class version of this so for integer it is integer with a capital i and you spell it fully if this were double instead of lowercase double this would be capital double because this is the wrapper class version of a double so just make sure that you're using wrapper classes if you need to store a primitive data type within an array all right so that's the basics of combo boxes in java if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of combo boxes in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
