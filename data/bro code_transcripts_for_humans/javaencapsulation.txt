With timestamps:

00:00 - hey what's going on everybody it's your
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys about
00:04 - encapsulation in java so
00:06 - sit back relax and enjoy the show
00:11 - make sure you like comment and subscribe
00:14 - one like equals one prayer for the
00:16 - youtube algorithm
00:18 - let's talk about encapsulation this is
00:20 - the concept of
00:21 - attributes of a class being hidden or
00:23 - private they can be accessed only
00:25 - through special methods called getters
00:27 - and setters
00:28 - and you really should make attributes
00:30 - private if you don't have a reason to
00:32 - make them public or protected
00:34 - in this tutorial series i don't just for
00:37 - learning purposes
00:38 - i want to make things as less
00:40 - complicated as possible so i tend to not
00:42 - use encapsulation
00:43 - but for your own programs you probably
00:45 - should just to add a layer of security
00:47 - so i have an additional class for this
00:48 - example called car let's make some
00:51 - private variables
00:52 - so let's say we would like a make a
00:54 - model and
00:55 - ear so i want to make these private so
00:58 - that only
00:58 - this class can access them so private
01:02 - string make private
01:06 - string model and private
01:10 - int year let's also set up the
01:12 - constructor of the class while we're
01:14 - here
01:14 - so the parameters are make model and
01:17 - here
01:18 - string make string
01:22 - model and int here and when we construct
01:26 - a car we'll just say
01:27 - this dot make equals make
01:30 - this dot model equals model
01:34 - and this dot year equals year
01:38 - now let's attempt to construct a car
01:40 - object so car
01:42 - car equals new car what kinds of
01:44 - arguments do we want to pass in
01:46 - we need a make a model and a year so for
01:49 - this car let's say that this is a
01:52 - chevrolet for the next argument maybe a
01:55 - camaro
01:56 - and a year 2021 is good
01:59 - so this will work just fine what would
02:02 - happen if we attempt to access one of
02:04 - these private members like the make the
02:06 - model into year
02:06 - let's find out so system.out.printline
02:09 - i'm going to attempt to print the
02:11 - cars make and let's see what happens
02:17 - well there's a problem the field
02:19 - car.make is not visible that's because
02:22 - this is private all of these variables
02:24 - are private so they are hidden
02:26 - only this class has access to these
02:29 - members
02:29 - make model and year so what can we do to
02:32 - retrieve
02:33 - the value of one of these variables we
02:35 - can use a
02:36 - getter method so that is a special
02:38 - method found within
02:40 - the class that contains these private
02:41 - members that will send
02:43 - the make the model or the year whatever
02:45 - variable you're working with
02:46 - to whatever class is calling that method
02:49 - so we're going to create
02:51 - a getter method for each of our
02:53 - variables that are private make
02:55 - model and year so let's begin with make
02:57 - so this is going to be a separate method
02:59 - it's going to be public the return type
03:02 - is a
03:02 - string and we will call this get then
03:05 - the name of the variable
03:07 - make and all we're doing is returning
03:12 - the make and that's it let's repeat the
03:14 - process for model and year
03:19 - so public string get model
03:22 - return whatever our model is
03:26 - and lastly this is returning an
03:30 - integer and this is get year
03:33 - return year
03:37 - and in order to access one of these
03:40 - attributes one of these variables
03:41 - we need to use the appropriate getter
03:44 - method
03:46 - so instead of accessing this attribute
03:48 - directly we're going to use one of these
03:50 - methods
03:52 - get and we have make model and year so
03:55 - let's get the make of this car and it's
03:58 - going to return
03:59 - chevrolet so it's as if we're asking
04:01 - this class nicely can we pretty please
04:04 - get the make the model or the year of
04:06 - your car
04:07 - so that's one way in which you can
04:09 - access a
04:10 - private attribute you use a getter
04:13 - method and then you can call that method
04:15 - from anywhere basically since we made
04:17 - this public and if you need to retrieve
04:19 - the other private variables of this
04:21 - class you just use the appropriate
04:23 - get method so let's say we want the
04:26 - model
04:26 - so car dot get model and the year car
04:29 - dot get
04:30 - year so this will retrieve all of the
04:33 - private variables of our car
04:35 - object chevrolet camaro the year is 2021
04:38 - so now how can we change the private
04:41 - attributes of
04:43 - an object well we can use what's called
04:45 - a setter method this time let's attempt
04:47 - to
04:47 - change the year of this car car.year and
04:50 - we'll change this from 2021 to
04:53 - 2022 well the issue that occurs is that
04:56 - the field
04:57 - card.year is not visible since we set
04:59 - this to private
05:00 - so we would need to create a method
05:03 - called a setter
05:05 - to set the year of this card the make
05:08 - the model
05:08 - and the year it's kind of like what we
05:10 - did with our getter methods but these
05:12 - are called setters
05:13 - so let's create a setter method for the
05:15 - make the model and the year so that we
05:17 - can call this method to change one of
05:19 - these values
05:21 - so this is public the return type is
05:23 - void we're not returning anything
05:25 - and we'll call this set and then the
05:27 - name of each
05:28 - variable that you're working with so
05:30 - let's create a setter for
05:32 - the make and we do need one parameter
05:35 - whatever our make is so if we call the
05:38 - set make method we have to pass in
05:40 - a new argument so string make
05:44 - this dot make equals make and actually
05:47 - since
05:48 - we're setting the make here within a
05:50 - setter method we no longer
05:52 - need this line what we could do is
05:55 - call the set make method within the
05:57 - constructor now
05:59 - so this dot set make
06:02 - and we have to pass in our make and
06:05 - let's repeat the steps for
06:06 - model and your
06:10 - set model this will take a string
06:14 - model this dot model
06:18 - equals model and we no longer need to
06:22 - set that within the constructor we'll
06:24 - just call this
06:25 - dot set model and pass in our model
06:29 - and lastly we have the year
06:32 - public void set year this has one
06:36 - integer parameter int year this
06:39 - dot year equals year
06:43 - and we can just call that method this
06:46 - dot
06:46 - set year and pass in our year
06:49 - and now if we need to change one of
06:51 - these values we can use the center
06:53 - method
06:54 - car dot set year
06:57 - and we'll pass in a year like 2022
07:01 - and then let's display all of these
07:03 - values using
07:04 - our getter methods
07:08 - and now our car is a 2022 chevrolet
07:11 - camaro well that's the basics of
07:14 - encapsulation
07:14 - all we're really doing is making the
07:16 - attributes of our class
07:18 - private so that they cannot be directly
07:21 - accessed from elsewhere within our
07:23 - program
07:24 - if you need to retrieve one of these
07:26 - values you can use a
07:27 - getter method if you need to change or
07:30 - set one of these values
07:31 - you can use a setter method so that you
07:34 - can indirectly either
07:36 - get or set these values and other
07:38 - classes do not have direct access
07:41 - to these values so if you'd like a copy
07:43 - of all this code i will post everything
07:45 - in the comments down below but yeah
07:47 - that's the basics of encapsulation in
07:49 - java
07:51 - hey you yeah i'm talking to you if you
07:54 - learn something new
07:55 - then you can help me help you in three
07:58 - easy steps
07:59 - by smashing that like button drop a
08:01 - comment down below
08:02 - and subscribe if you'd like to become a
08:04 - fellow bro
08:15 - [Music]
08:25 - you

Cleaned transcript:

hey what's going on everybody it's your bro hope you're doing well and in this video i'm going to teach you guys about encapsulation in java so sit back relax and enjoy the show make sure you like comment and subscribe one like equals one prayer for the youtube algorithm let's talk about encapsulation this is the concept of attributes of a class being hidden or private they can be accessed only through special methods called getters and setters and you really should make attributes private if you don't have a reason to make them public or protected in this tutorial series i don't just for learning purposes i want to make things as less complicated as possible so i tend to not use encapsulation but for your own programs you probably should just to add a layer of security so i have an additional class for this example called car let's make some private variables so let's say we would like a make a model and ear so i want to make these private so that only this class can access them so private string make private string model and private int year let's also set up the constructor of the class while we're here so the parameters are make model and here string make string model and int here and when we construct a car we'll just say this dot make equals make this dot model equals model and this dot year equals year now let's attempt to construct a car object so car car equals new car what kinds of arguments do we want to pass in we need a make a model and a year so for this car let's say that this is a chevrolet for the next argument maybe a camaro and a year 2021 is good so this will work just fine what would happen if we attempt to access one of these private members like the make the model into year let's find out so system.out.printline i'm going to attempt to print the cars make and let's see what happens well there's a problem the field car.make is not visible that's because this is private all of these variables are private so they are hidden only this class has access to these members make model and year so what can we do to retrieve the value of one of these variables we can use a getter method so that is a special method found within the class that contains these private members that will send the make the model or the year whatever variable you're working with to whatever class is calling that method so we're going to create a getter method for each of our variables that are private make model and year so let's begin with make so this is going to be a separate method it's going to be public the return type is a string and we will call this get then the name of the variable make and all we're doing is returning the make and that's it let's repeat the process for model and year so public string get model return whatever our model is and lastly this is returning an integer and this is get year return year and in order to access one of these attributes one of these variables we need to use the appropriate getter method so instead of accessing this attribute directly we're going to use one of these methods get and we have make model and year so let's get the make of this car and it's going to return chevrolet so it's as if we're asking this class nicely can we pretty please get the make the model or the year of your car so that's one way in which you can access a private attribute you use a getter method and then you can call that method from anywhere basically since we made this public and if you need to retrieve the other private variables of this class you just use the appropriate get method so let's say we want the model so car dot get model and the year car dot get year so this will retrieve all of the private variables of our car object chevrolet camaro the year is 2021 so now how can we change the private attributes of an object well we can use what's called a setter method this time let's attempt to change the year of this car car.year and we'll change this from 2021 to 2022 well the issue that occurs is that the field card.year is not visible since we set this to private so we would need to create a method called a setter to set the year of this card the make the model and the year it's kind of like what we did with our getter methods but these are called setters so let's create a setter method for the make the model and the year so that we can call this method to change one of these values so this is public the return type is void we're not returning anything and we'll call this set and then the name of each variable that you're working with so let's create a setter for the make and we do need one parameter whatever our make is so if we call the set make method we have to pass in a new argument so string make this dot make equals make and actually since we're setting the make here within a setter method we no longer need this line what we could do is call the set make method within the constructor now so this dot set make and we have to pass in our make and let's repeat the steps for model and your set model this will take a string model this dot model equals model and we no longer need to set that within the constructor we'll just call this dot set model and pass in our model and lastly we have the year public void set year this has one integer parameter int year this dot year equals year and we can just call that method this dot set year and pass in our year and now if we need to change one of these values we can use the center method car dot set year and we'll pass in a year like 2022 and then let's display all of these values using our getter methods and now our car is a 2022 chevrolet camaro well that's the basics of encapsulation all we're really doing is making the attributes of our class private so that they cannot be directly accessed from elsewhere within our program if you need to retrieve one of these values you can use a getter method if you need to change or set one of these values you can use a setter method so that you can indirectly either get or set these values and other classes do not have direct access to these values so if you'd like a copy of all this code i will post everything in the comments down below but yeah that's the basics of encapsulation in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
