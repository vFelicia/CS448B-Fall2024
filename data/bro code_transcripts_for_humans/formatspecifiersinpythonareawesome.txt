With timestamps:

00:00 - hey everybody in this topic I'm going to
00:02 - explain format specifiers format
00:04 - specifiers when used in the context of
00:07 - an fstring they allow us to format a
00:09 - value based on what flags are inserted
00:12 - following your value you would type a
00:15 - colon and then some Flags depending on
00:18 - what flags you insert it will format
00:19 - your output a certain way you could add
00:22 - decimal point precision
00:24 - allocate space zero pad values left
00:28 - justify right justify Center align all
00:31 - sorts of things
00:32 - let's have some practice I'll create
00:34 - three prices price one
00:37 - price two
00:40 - price three
00:42 - price one will be
00:44 - 3.14159 these values aren't ten dollars
00:47 - and cents yet but they will be
00:51 - price two will be negative nine eight
00:54 - seven dot six five as you can see I'm
00:56 - just making up numbers here
00:58 - price three is twelve dot three four
01:02 - let's display our prices using some f
01:05 - strings
01:07 - price one is placeholder price one
01:13 - then we will do this for price two and
01:15 - price three
01:16 - price two is price two price three is
01:19 - price three
01:21 - within our placeholder following the
01:23 - value we can add a colon then some Flags
01:27 - those flags are the format specifiers
01:29 - they will format our value a particular
01:32 - way depending on what we insert after
01:34 - the colon
01:36 - to add a decimal point Precision you
01:39 - would type after the colon
01:41 - Dot then the amount of decimals to be
01:44 - displayed maybe two then F meaning
01:47 - floating Point number let's do that with
01:49 - price two and price 3. colon dot two f
01:55 - price one is now 3.14 price 2 is
01:58 - negative
02:00 - 987.65 price 3 is 12.34
02:04 - I think I'm gonna add some dollar signs
02:06 - before the placeholder
02:08 - yeah that's much better
02:10 - for Less Precision maybe one decimal
02:12 - place you can change the two to a one
02:15 - so point one f
02:19 - each number only displays one decimal
02:21 - point one point six point three
02:24 - whereas in point three F would display
02:27 - three decimal places
02:29 - 0.142
02:31 - 0.650.340 even though price two and
02:34 - price three only have two decimal places
02:36 - in the original numbers we will
02:38 - concatenate some additional zeros
02:41 - to allocate space to display a value
02:43 - after the colon add some number some
02:46 - number for that many spaces how about
02:48 - 10.
02:54 - each value now has a total of 10 spaces
02:58 - to display the output 1 2 3 4 5 6 7 8 9
03:02 - 10.
03:04 - if you were to precede a number with
03:06 - zero well these numbers would be zero
03:09 - padded
03:12 - each number is now zero padded
03:15 - two left justify a value you would use a
03:18 - left angle bracket
03:23 - all these numbers are now left Justified
03:26 - then we have all of the space after
03:29 - they're all uniform
03:30 - right justify would be a right angle
03:33 - bracket
03:37 - and I believe that's the default
03:40 - Center align I believe is the carrot
03:42 - symbol
03:46 - yep our numbers are now centered
03:50 - if you have any positive values and you
03:52 - would like to display a plus sign just
03:55 - use Plus
04:01 - any positive number is preceded with a
04:04 - plus sign any negative number is
04:05 - preceded with the negative sign or you
04:08 - could use a space for any positive
04:10 - numbers so colon space
04:14 - these numbers are lined up evenly even
04:16 - though we have a negative number in here
04:18 - there is a thousand separator which is a
04:21 - comma
04:23 - we should probably increase the value of
04:26 - our prices
04:27 - 3000 negative nine thousand eight
04:30 - hundred seventy one thousand two hundred
04:33 - each thousands place is now separated
04:36 - with a comma we could also mix and match
04:38 - Flags I would like a thousand separator
04:41 - along with decimal point Precision of
04:44 - two decimal places
04:48 - and why not I will precede each number
04:51 - with a plus sign if it's positive
04:57 - yep here we are So based on what you're
05:00 - looking for you can add some combination
05:02 - of flags so yeah those are format
05:04 - specifiers everybody
05:06 - within your placeholder
05:08 - insert your value a colon then certain
05:11 - Flags based on what you're looking for
05:13 - exactly
05:14 - but yeah those are just a few format
05:16 - specifiers in Python

Cleaned transcript:

hey everybody in this topic I'm going to explain format specifiers format specifiers when used in the context of an fstring they allow us to format a value based on what flags are inserted following your value you would type a colon and then some Flags depending on what flags you insert it will format your output a certain way you could add decimal point precision allocate space zero pad values left justify right justify Center align all sorts of things let's have some practice I'll create three prices price one price two price three price one will be 3.14159 these values aren't ten dollars and cents yet but they will be price two will be negative nine eight seven dot six five as you can see I'm just making up numbers here price three is twelve dot three four let's display our prices using some f strings price one is placeholder price one then we will do this for price two and price three price two is price two price three is price three within our placeholder following the value we can add a colon then some Flags those flags are the format specifiers they will format our value a particular way depending on what we insert after the colon to add a decimal point Precision you would type after the colon Dot then the amount of decimals to be displayed maybe two then F meaning floating Point number let's do that with price two and price 3. colon dot two f price one is now 3.14 price 2 is negative 987.65 price 3 is 12.34 I think I'm gonna add some dollar signs before the placeholder yeah that's much better for Less Precision maybe one decimal place you can change the two to a one so point one f each number only displays one decimal point one point six point three whereas in point three F would display three decimal places 0.142 0.650.340 even though price two and price three only have two decimal places in the original numbers we will concatenate some additional zeros to allocate space to display a value after the colon add some number some number for that many spaces how about 10. each value now has a total of 10 spaces to display the output 1 2 3 4 5 6 7 8 9 10. if you were to precede a number with zero well these numbers would be zero padded each number is now zero padded two left justify a value you would use a left angle bracket all these numbers are now left Justified then we have all of the space after they're all uniform right justify would be a right angle bracket and I believe that's the default Center align I believe is the carrot symbol yep our numbers are now centered if you have any positive values and you would like to display a plus sign just use Plus any positive number is preceded with a plus sign any negative number is preceded with the negative sign or you could use a space for any positive numbers so colon space these numbers are lined up evenly even though we have a negative number in here there is a thousand separator which is a comma we should probably increase the value of our prices 3000 negative nine thousand eight hundred seventy one thousand two hundred each thousands place is now separated with a comma we could also mix and match Flags I would like a thousand separator along with decimal point Precision of two decimal places and why not I will precede each number with a plus sign if it's positive yep here we are So based on what you're looking for you can add some combination of flags so yeah those are format specifiers everybody within your placeholder insert your value a colon then certain Flags based on what you're looking for exactly but yeah those are just a few format specifiers in Python
