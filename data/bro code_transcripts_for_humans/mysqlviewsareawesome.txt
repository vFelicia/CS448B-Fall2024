With timestamps:

00:00 - hey everybody today I'm going to be
00:02 - explaining views views their virtual
00:04 - tables they're not real they're made up
00:06 - of fields and columns from one or more
00:09 - real tables and they can be interacted
00:11 - with as if they were a real table so
00:13 - here's an example I'm going to select
00:16 - all from my employees table
00:20 - our boss Mr Krabs he would like us to
00:22 - create an employee attendance sheet made
00:24 - up of just the first and last names of
00:26 - all the employees well I could create a
00:29 - view that is made from the first and
00:31 - last name Columns of the employees table
00:33 - now A View isn't a real table but it can
00:36 - behave as if it were I may want to
00:38 - create a view of the employee first and
00:40 - last names instead of another table
00:42 - because we try not to repeat data if we
00:44 - don't have to if I had two tables one of
00:47 - employees and another of employee
00:49 - attendance if I need to remove an
00:51 - employee I would need to do so in two
00:53 - places with the view it's always up to
00:55 - date any changes to one or more of these
00:57 - real tables will also update the view so
01:00 - let's create a view of the first and
01:02 - last name of our employees table to
01:04 - create a view you would type create view
01:07 - then the name of the view let's say
01:09 - employee attendance
01:12 - than as
01:14 - I'm going to zoom in a little bit
01:16 - what would we like to select let's
01:18 - select
01:19 - first name
01:21 - last name
01:23 - from a real table let's say from
01:26 - employees
01:30 - so everything was successful
01:32 - let's refresh our schemas window
01:35 - underneath the views category we have a
01:37 - new view employee attendance
01:40 - I'm going to select all from that view
01:44 - name
01:45 - employee
01:47 - attendance
01:49 - and let's see what we got yeah here's
01:51 - our attendance sheet we have the first
01:53 - and last name columns from the employees
01:56 - table this view can be interacted with
01:58 - as if it were a real table
02:00 - I will add order by
02:04 - last name ascending
02:08 - you can use keywords and operators that
02:10 - we've learned about in previous lessons
02:11 - on A View to drop a view you would type
02:14 - drop view the name of The View
02:17 - employee attendance
02:21 - and it's gone
02:23 - all right here's another example so
02:25 - views they're always up to date right
02:27 - let's create a view of customer emails
02:30 - select all from customers
02:33 - let's take a look to see what we have so
02:35 - far
02:36 - I'm going to add one more column a
02:38 - column of customer emails
02:42 - alter table
02:44 - customers
02:46 - add column email data type will be
02:51 - varchar I think varchar 50 should be
02:54 - enough space
02:55 - and there's our new column
02:58 - let's update these rows
03:01 - update customers
03:04 - set email equal to the first email will
03:09 - be for Fred fish f
03:11 - isch gmail.com then we'll need a where
03:15 - Clause where customer ID equals one
03:20 - that's our first email
03:22 - customer ID 2 will be L Lobster
03:27 - gmail.com
03:30 - three is be bass gmail.com
03:34 - four will be
03:37 - puff gmail.com everybody really likes
03:40 - Gmail I guess let's create a view from
03:43 - these customer emails
03:45 - create View
03:49 - customer
03:50 - emails
03:52 - as what are we selecting let's select
03:56 - the email column
03:58 - from our customers table
04:02 - let's refresh our schemas window yeah we
04:04 - have a customer emails View
04:06 - then I will select all from customer
04:11 - emails
04:14 - and look at that we have a listing of
04:16 - all the customer emails and we're going
04:18 - to spam these people with coupons or
04:21 - something I don't know when you update
04:23 - one or more of the real tables in your
04:24 - database those views would reflect any
04:27 - changes let's add one more customer so
04:30 - let's take a look at our customers table
04:32 - select all from customers
04:37 - let's add one more customer
04:39 - insert into our customers table
04:43 - some values
04:45 - we have five columns a customer ID
04:48 - first name first name will be pearl
04:52 - last name is crabs
04:55 - referral ID let's say null
04:59 - email will be P crabs gmail.com
05:07 - okay there's our new customer let's take
05:10 - a look at our view let's see if it
05:11 - updated
05:12 - select all from customer
05:17 - emails
05:20 - yeah look at that it's up to date that
05:22 - is one of the benefits of a view it will
05:24 - update automatically because we're using
05:27 - components from real tables any views
05:29 - that use that data will also be updated
05:31 - the other benefit of a view is that we
05:33 - don't have to repeat data in a real
05:35 - table ideally we'd only want to make a
05:37 - change in one place rather than across
05:40 - multiple tables alright that's a view
05:42 - everybody a view is a virtual table
05:44 - based on the results of an SQL statement
05:47 - they're not real tables but they can be
05:50 - interacted with as if they were real the
05:52 - fields found within a view are fields
05:54 - from one or more real tables in the
05:56 - database so yeah those are views in
05:59 - MySQL

Cleaned transcript:

hey everybody today I'm going to be explaining views views their virtual tables they're not real they're made up of fields and columns from one or more real tables and they can be interacted with as if they were a real table so here's an example I'm going to select all from my employees table our boss Mr Krabs he would like us to create an employee attendance sheet made up of just the first and last names of all the employees well I could create a view that is made from the first and last name Columns of the employees table now A View isn't a real table but it can behave as if it were I may want to create a view of the employee first and last names instead of another table because we try not to repeat data if we don't have to if I had two tables one of employees and another of employee attendance if I need to remove an employee I would need to do so in two places with the view it's always up to date any changes to one or more of these real tables will also update the view so let's create a view of the first and last name of our employees table to create a view you would type create view then the name of the view let's say employee attendance than as I'm going to zoom in a little bit what would we like to select let's select first name last name from a real table let's say from employees so everything was successful let's refresh our schemas window underneath the views category we have a new view employee attendance I'm going to select all from that view name employee attendance and let's see what we got yeah here's our attendance sheet we have the first and last name columns from the employees table this view can be interacted with as if it were a real table I will add order by last name ascending you can use keywords and operators that we've learned about in previous lessons on A View to drop a view you would type drop view the name of The View employee attendance and it's gone all right here's another example so views they're always up to date right let's create a view of customer emails select all from customers let's take a look to see what we have so far I'm going to add one more column a column of customer emails alter table customers add column email data type will be varchar I think varchar 50 should be enough space and there's our new column let's update these rows update customers set email equal to the first email will be for Fred fish f isch gmail.com then we'll need a where Clause where customer ID equals one that's our first email customer ID 2 will be L Lobster gmail.com three is be bass gmail.com four will be puff gmail.com everybody really likes Gmail I guess let's create a view from these customer emails create View customer emails as what are we selecting let's select the email column from our customers table let's refresh our schemas window yeah we have a customer emails View then I will select all from customer emails and look at that we have a listing of all the customer emails and we're going to spam these people with coupons or something I don't know when you update one or more of the real tables in your database those views would reflect any changes let's add one more customer so let's take a look at our customers table select all from customers let's add one more customer insert into our customers table some values we have five columns a customer ID first name first name will be pearl last name is crabs referral ID let's say null email will be P crabs gmail.com okay there's our new customer let's take a look at our view let's see if it updated select all from customer emails yeah look at that it's up to date that is one of the benefits of a view it will update automatically because we're using components from real tables any views that use that data will also be updated the other benefit of a view is that we don't have to repeat data in a real table ideally we'd only want to make a change in one place rather than across multiple tables alright that's a view everybody a view is a virtual table based on the results of an SQL statement they're not real tables but they can be interacted with as if they were real the fields found within a view are fields from one or more real tables in the database so yeah those are views in MySQL
