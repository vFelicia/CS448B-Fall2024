With timestamps:

00:02 - all right people so in this video i'm
00:04 - going to show you how we can read the
00:05 - contents of a file someplace on your
00:07 - computer you can either place this
00:09 - within the same folder as your c program
00:12 - or someplace else i think it would be
00:13 - cool if we read a file from our desktops
00:16 - so i'm going to create a new file and
00:18 - this is going to be a plain text file
00:20 - and i'll write a poem i'll name this
00:22 - poem.txt
00:24 - here's my beautiful poem
00:26 - roses are red
00:29 - violets are blue
00:32 - booty booty booty booty
00:37 - rockin
00:38 - everywhere
00:40 - okay i'm going to save
00:42 - and then i'll need the file location of
00:44 - where this is located i'm going to right
00:46 - click go to properties and copy this
00:48 - file path and save it for later now to
00:51 - read a file on your computer we'll need
00:53 - to create a pointer the data type is
00:56 - file
00:57 - and i'll name this
00:58 - p
00:59 - f and i will set the sequel to then
01:01 - invoke the f open function
01:04 - pass in your file mine is
01:07 - poem.txt
01:08 - so if this file is not within the same
01:11 - folder as your c program you'll need a
01:13 - relative or absolute file path since
01:16 - this file is on my desktop i could use
01:19 - an absolute file path
01:20 - so preceding my file name i will paste
01:23 - that location and then each backslash
01:26 - may need to be a double backslash
01:28 - because that is an escape sequence for a
01:30 - backslash character okay the second
01:32 - argument is the mode this time we are
01:35 - going to read a file so pass in r for
01:38 - the second argument then it's good
01:40 - practice at the end of your program to
01:42 - close any open files
01:45 - we will invoke the f close function pass
01:47 - in our pointer do not dereference it and
01:50 - we will need one more thing a buffer a
01:53 - buffer is going to act as a container an
01:56 - array of characters to hold one line of
01:58 - our text document one line at a time so
02:01 - let's declare an array of characters
02:03 - named buffer and i'll set the size
02:06 - to 255 our buffer is going to hold one
02:10 - line of our file one line at a time and
02:12 - to read a single line from our file we
02:15 - will use the f gets function and there
02:18 - are three arguments our buffer this is
02:21 - what we're inserting a line of text into
02:24 - a maximum input size i'll set this to be
02:26 - 255 to match our buffer and then a
02:29 - pointer to the file that we're opening
02:32 - and again make sure to not dereference
02:34 - it so this will read a single line of
02:36 - text and then let's print our buffer so
02:39 - we're printing a string and we are
02:41 - displaying whatever is currently within
02:43 - our buffer
02:44 - so after running this this will read a
02:46 - single line of text whatever's at the
02:49 - top roses are red
02:51 - now if i need to read all of the
02:53 - contents of my file i can place this
02:56 - section of code within a while loop
03:01 - so with our condition i'm going to move
03:04 - the f gets function within the condition
03:07 - if we reach the end of a file f gets
03:09 - will return null so let's continue this
03:12 - while loop while f gets does not return
03:15 - no if we do not return null then we will
03:18 - print whatever's within our buffer now
03:20 - if i run this this will display all of
03:23 - the lines from my file roses are red
03:26 - violets are blue booty booty booty booty
03:28 - rocking everywhere and if you would like
03:30 - you can add a little bit of file
03:31 - detection so before we reach our while
03:34 - loop let's check to see if that file
03:36 - even exists before we attempt to open
03:38 - and read it so let's check to see if our
03:41 - pointer equals no if it is null that
03:44 - means we could not locate this file
03:46 - so i'm going to print
03:49 - unable to open
03:51 - file
03:53 - and we'll create an else statement
03:55 - else let's read and print the contents
03:58 - of this file
04:02 - okay so let's say i get the file
04:03 - extension wrong let's say i'm looking
04:05 - for an html file named poem and i try
04:08 - and read this
04:10 - unable to open file but if we are able
04:12 - to locate this file
04:14 - we will open it and read the contents
04:17 - and then close this file so yeah
04:19 - everybody that is how to read the
04:21 - contents of a file line by line if you
04:23 - found this video helpful please be sure
04:25 - to help me out by smashing that like
04:27 - button leave a random comment down below
04:29 - and subscribe if you'd like to become a
04:30 - fellow bro

Cleaned transcript:

all right people so in this video i'm going to show you how we can read the contents of a file someplace on your computer you can either place this within the same folder as your c program or someplace else i think it would be cool if we read a file from our desktops so i'm going to create a new file and this is going to be a plain text file and i'll write a poem i'll name this poem.txt here's my beautiful poem roses are red violets are blue booty booty booty booty rockin everywhere okay i'm going to save and then i'll need the file location of where this is located i'm going to right click go to properties and copy this file path and save it for later now to read a file on your computer we'll need to create a pointer the data type is file and i'll name this p f and i will set the sequel to then invoke the f open function pass in your file mine is poem.txt so if this file is not within the same folder as your c program you'll need a relative or absolute file path since this file is on my desktop i could use an absolute file path so preceding my file name i will paste that location and then each backslash may need to be a double backslash because that is an escape sequence for a backslash character okay the second argument is the mode this time we are going to read a file so pass in r for the second argument then it's good practice at the end of your program to close any open files we will invoke the f close function pass in our pointer do not dereference it and we will need one more thing a buffer a buffer is going to act as a container an array of characters to hold one line of our text document one line at a time so let's declare an array of characters named buffer and i'll set the size to 255 our buffer is going to hold one line of our file one line at a time and to read a single line from our file we will use the f gets function and there are three arguments our buffer this is what we're inserting a line of text into a maximum input size i'll set this to be 255 to match our buffer and then a pointer to the file that we're opening and again make sure to not dereference it so this will read a single line of text and then let's print our buffer so we're printing a string and we are displaying whatever is currently within our buffer so after running this this will read a single line of text whatever's at the top roses are red now if i need to read all of the contents of my file i can place this section of code within a while loop so with our condition i'm going to move the f gets function within the condition if we reach the end of a file f gets will return null so let's continue this while loop while f gets does not return no if we do not return null then we will print whatever's within our buffer now if i run this this will display all of the lines from my file roses are red violets are blue booty booty booty booty rocking everywhere and if you would like you can add a little bit of file detection so before we reach our while loop let's check to see if that file even exists before we attempt to open and read it so let's check to see if our pointer equals no if it is null that means we could not locate this file so i'm going to print unable to open file and we'll create an else statement else let's read and print the contents of this file okay so let's say i get the file extension wrong let's say i'm looking for an html file named poem and i try and read this unable to open file but if we are able to locate this file we will open it and read the contents and then close this file so yeah everybody that is how to read the contents of a file line by line if you found this video helpful please be sure to help me out by smashing that like button leave a random comment down below and subscribe if you'd like to become a fellow bro
