With timestamps:

00:00 - hey what's going on everybody it's you
00:01 - bro hope you're doing well and in this
00:03 - video we're going to discuss
00:04 - method overriding in c sharp so sit back
00:07 - relax
00:08 - and enjoy the show
00:12 - all right what's going on people we're
00:13 - talking about method overriding
00:15 - method overriding provides a new version
00:18 - of a method
00:19 - inherited from a parent class i have a
00:21 - class animal this is a parent class also
00:23 - known as a superclass or base class
00:26 - and i have two child classes dog
00:29 - inherits from animal and
00:30 - cat inherits from animal so let's say
00:32 - that we have a method within
00:34 - our animal class so let's create one
00:36 - public
00:37 - void speak all animals can speak
00:42 - and then when a class that inherits this
00:44 - method
00:45 - uses this method let's display a message
00:48 - such
00:48 - as the animal
00:51 - goes burr
00:55 - okay let's create a dog object and a cat
00:57 - object
00:58 - dog dog equals new dog
01:02 - cat cat equals new
01:05 - cat now dogs since they're inheriting
01:09 - from the animal class they have a speak
01:11 - method
01:12 - as well as cats cat dot speak
01:16 - so when both this dog object and this
01:19 - cat object
01:19 - invoke their speak methods that they
01:22 - inherit from the parent class of animal
01:24 - we will execute this method and when my
01:26 - dog
01:27 - and cat object speak that will display
01:30 - the animal goes
01:31 - burr okay so we can actually provide
01:34 - our own implementation of this method we
01:37 - can override this method and do
01:39 - something else
01:40 - now to override a method it needs the
01:41 - same method signature the same name
01:43 - and the same parameters so if i would
01:46 - like to override
01:47 - this speak method within my dog class
01:49 - i'm going to type
01:51 - public override
01:55 - void the same type as the original
01:57 - method
01:58 - and the same name and signature now to
02:01 - create an
02:01 - overriding method the method that is
02:04 - inherited must be
02:05 - virtual abstract or already overwritten
02:08 - so i'm going to add this modifier
02:11 - virtual
02:12 - so we can now override this method you
02:14 - can also do this with an abstract method
02:16 - too
02:18 - but the class needs to be abstract as
02:20 - well
02:21 - and there needs to be no body
02:25 - but we'll just stick with virtual in
02:26 - this video
02:29 - okay so we have our virtual method that
02:31 - means that this method
02:32 - can be overwritten and now we can
02:34 - provide our own
02:36 - implementation of the speak method
02:38 - specifically for
02:39 - dogs so let's display a different
02:41 - message
02:42 - console the right line the dog
02:45 - goes woof so notice that we don't have
02:49 - anything within our cat class
02:51 - now if both dog and cat use their speak
02:54 - methods
02:55 - the dog will instead speak and say the
02:58 - dog goes woof
02:59 - and our cat is still using the method
03:02 - that inherits from its parent animal
03:04 - if i would like to do the same thing for
03:06 - my cat objects i can override this
03:08 - method again
03:09 - public override void
03:13 - speak and then i can provide a different
03:17 - implementation
03:19 - the cat goes meow
03:24 - so after both dog and cat use their
03:27 - speak methods
03:28 - this displays the dog goes woof the cat
03:31 - goes meow
03:32 - so by using method overriding we can
03:34 - provide a new version
03:36 - of a method inherited from a parent
03:38 - class however the inheritance method
03:40 - must be abstract virtual or
03:43 - already overwritten and the method
03:45 - overriding is commonly used with
03:47 - the tostring method which we still need
03:49 - to talk about
03:50 - and polymorphism so yeah that's method
03:53 - overriding
03:54 - if you found this video helpful please
03:55 - smash that like button leave a random
03:57 - comment down below
03:58 - and subscribe if you'd like to become a
04:00 - fellow bro

Cleaned transcript:

hey what's going on everybody it's you bro hope you're doing well and in this video we're going to discuss method overriding in c sharp so sit back relax and enjoy the show all right what's going on people we're talking about method overriding method overriding provides a new version of a method inherited from a parent class i have a class animal this is a parent class also known as a superclass or base class and i have two child classes dog inherits from animal and cat inherits from animal so let's say that we have a method within our animal class so let's create one public void speak all animals can speak and then when a class that inherits this method uses this method let's display a message such as the animal goes burr okay let's create a dog object and a cat object dog dog equals new dog cat cat equals new cat now dogs since they're inheriting from the animal class they have a speak method as well as cats cat dot speak so when both this dog object and this cat object invoke their speak methods that they inherit from the parent class of animal we will execute this method and when my dog and cat object speak that will display the animal goes burr okay so we can actually provide our own implementation of this method we can override this method and do something else now to override a method it needs the same method signature the same name and the same parameters so if i would like to override this speak method within my dog class i'm going to type public override void the same type as the original method and the same name and signature now to create an overriding method the method that is inherited must be virtual abstract or already overwritten so i'm going to add this modifier virtual so we can now override this method you can also do this with an abstract method too but the class needs to be abstract as well and there needs to be no body but we'll just stick with virtual in this video okay so we have our virtual method that means that this method can be overwritten and now we can provide our own implementation of the speak method specifically for dogs so let's display a different message console the right line the dog goes woof so notice that we don't have anything within our cat class now if both dog and cat use their speak methods the dog will instead speak and say the dog goes woof and our cat is still using the method that inherits from its parent animal if i would like to do the same thing for my cat objects i can override this method again public override void speak and then i can provide a different implementation the cat goes meow so after both dog and cat use their speak methods this displays the dog goes woof the cat goes meow so by using method overriding we can provide a new version of a method inherited from a parent class however the inheritance method must be abstract virtual or already overwritten and the method overriding is commonly used with the tostring method which we still need to talk about and polymorphism so yeah that's method overriding if you found this video helpful please smash that like button leave a random comment down below and subscribe if you'd like to become a fellow bro
