With timestamps:

00:00 - yo what's going on everybody it's bro
00:02 - hope you're doing well
00:03 - and in this video we're going to be
00:04 - covering some very basic uses of check
00:07 - boxes in javafx
00:09 - so sit back relax and enjoy the show
00:14 - in this video i'll be demonstrating how
00:16 - we can use a
00:17 - checkbox to call a method and change the
00:19 - state of nodes that are within a pane
00:21 - a checkbox will return a true if the
00:24 - checkbox is selected and you call
00:26 - the is selected method if it's not
00:29 - selected then this method will return
00:31 - false
00:32 - this will be a very basic example of how
00:34 - the state of a checkbox
00:36 - can change a basic label as well as an
00:38 - image within an image view
00:40 - so let's head to scenebuilder and get
00:41 - started i'll use an anchor pane for
00:44 - this demonstration now we need a
00:46 - checkbox
00:47 - so that is underneath controls and that
00:51 - is near the top
00:52 - checkbox i'll place it maybe here
00:56 - let's say on slash off like it's a light
00:59 - switch
01:00 - i'll change the font too right there is
01:03 - good i suppose
01:06 - i'll need an id let's say my check
01:10 - box and we'll need a method to link
01:13 - let's say change whenever we click this
01:16 - checkbox we'll call the change method
01:20 - let's create a label
01:23 - i'll put that near the middle
01:27 - and let's say off to begin with because
01:30 - the light switch will be off
01:31 - and pick a font that's decent
01:36 - the id let's say my
01:40 - label and if you have an image that you
01:42 - want to change we can use an image view
01:44 - although it's entirely optional for this
01:46 - video
01:47 - so let's say i have an image
01:50 - i'll place that near the middle for the
01:53 - id
01:54 - let's say my image view
01:58 - and you can also set an initial picture
02:00 - if you have one
02:03 - so i have two images within my
02:05 - application package within my source
02:07 - folder i'll set the initial picture to
02:10 - lightbulb2.png and then when i click the
02:13 - on button on off button it's going to
02:14 - switch between these two images
02:18 - okay let me save make sure to add your
02:20 - controller class because that's easy to
02:21 - forget
02:22 - save and let's head to our controller
02:24 - class open up the tab for your fxml file
02:27 - just so that it updates because
02:29 - sometimes it doesn't like to update
02:31 - and let's inject our fxml code into our
02:33 - controller
02:34 - and we are going to declare a few things
02:37 - private
02:38 - check box my check
02:42 - box at fxml
02:48 - private label
02:52 - my label if you have an image view
02:56 - then type at fxml
03:00 - private image view my
03:04 - image view
03:08 - okay now if you have an image let's
03:11 - create two image objects
03:13 - let's say my image one
03:16 - equals new
03:19 - image get
03:22 - class dot get
03:26 - resource as stream
03:31 - and the name of your first image and
03:33 - mine is
03:35 - light bulb one dot png
03:40 - let me copy all of this and make image
03:44 - two
03:46 - lightbulb 2.png just as a quick reminder
03:49 - these two images of mine are within my
03:51 - application package so i only need to
03:53 - list the file name
03:55 - now that method that we linked to my
03:58 - checkbox
03:59 - that was named change but you can really
04:00 - name it anything so let's define that
04:02 - method
04:03 - public void change
04:07 - and there is one parameter of action
04:10 - event event so whenever we click our
04:14 - checkbox
04:15 - it's going to call this method but we
04:17 - need to check to see if
04:19 - our checkbox is selected or not because
04:21 - it can have two states
04:23 - so let's check to see if my checkbox
04:28 - dot is selected
04:32 - what are we going to do then so let's
04:35 - begin by just printing something to the
04:36 - console window
04:38 - just as a test so let's say on if it's
04:40 - selected
04:42 - else we will print off
04:47 - okay let's test it
04:54 - you can see in the console window it's
04:55 - displaying on and off
04:57 - let's change our label next
05:01 - i'll go right to this line here
05:04 - my label dot set text
05:08 - to on else
05:14 - off
05:19 - now this label should switch between
05:21 - being on and off
05:24 - and lastly let's change the image within
05:26 - our image view
05:30 - so to do that we're going to take my
05:33 - image
05:34 - view dot set image
05:38 - to my first image of my image one
05:42 - which is in my case lightbulb1.png but
05:46 - it's probably going to be something
05:47 - different for you
05:49 - else we'll change this image to
05:52 - my image too
05:57 - so our light bulb is on now it's off
06:00 - it's on
06:00 - it's off well everybody that's a very
06:03 - basic example of us using a checkbox
06:06 - that's really all there is to it it's
06:08 - either on or it's off
06:09 - and you can check the state by using the
06:11 - is selected method
06:12 - of your checkbox so if you would like a
06:15 - copy of this code i will post this to
06:17 - the comments section down below
06:18 - but yeah that's a very basic use of a
06:21 - checkbox
06:22 - in javafx

Cleaned transcript:

yo what's going on everybody it's bro hope you're doing well and in this video we're going to be covering some very basic uses of check boxes in javafx so sit back relax and enjoy the show in this video i'll be demonstrating how we can use a checkbox to call a method and change the state of nodes that are within a pane a checkbox will return a true if the checkbox is selected and you call the is selected method if it's not selected then this method will return false this will be a very basic example of how the state of a checkbox can change a basic label as well as an image within an image view so let's head to scenebuilder and get started i'll use an anchor pane for this demonstration now we need a checkbox so that is underneath controls and that is near the top checkbox i'll place it maybe here let's say on slash off like it's a light switch i'll change the font too right there is good i suppose i'll need an id let's say my check box and we'll need a method to link let's say change whenever we click this checkbox we'll call the change method let's create a label i'll put that near the middle and let's say off to begin with because the light switch will be off and pick a font that's decent the id let's say my label and if you have an image that you want to change we can use an image view although it's entirely optional for this video so let's say i have an image i'll place that near the middle for the id let's say my image view and you can also set an initial picture if you have one so i have two images within my application package within my source folder i'll set the initial picture to lightbulb2.png and then when i click the on button on off button it's going to switch between these two images okay let me save make sure to add your controller class because that's easy to forget save and let's head to our controller class open up the tab for your fxml file just so that it updates because sometimes it doesn't like to update and let's inject our fxml code into our controller and we are going to declare a few things private check box my check box at fxml private label my label if you have an image view then type at fxml private image view my image view okay now if you have an image let's create two image objects let's say my image one equals new image get class dot get resource as stream and the name of your first image and mine is light bulb one dot png let me copy all of this and make image two lightbulb 2.png just as a quick reminder these two images of mine are within my application package so i only need to list the file name now that method that we linked to my checkbox that was named change but you can really name it anything so let's define that method public void change and there is one parameter of action event event so whenever we click our checkbox it's going to call this method but we need to check to see if our checkbox is selected or not because it can have two states so let's check to see if my checkbox dot is selected what are we going to do then so let's begin by just printing something to the console window just as a test so let's say on if it's selected else we will print off okay let's test it you can see in the console window it's displaying on and off let's change our label next i'll go right to this line here my label dot set text to on else off now this label should switch between being on and off and lastly let's change the image within our image view so to do that we're going to take my image view dot set image to my first image of my image one which is in my case lightbulb1.png but it's probably going to be something different for you else we'll change this image to my image too so our light bulb is on now it's off it's on it's off well everybody that's a very basic example of us using a checkbox that's really all there is to it it's either on or it's off and you can check the state by using the is selected method of your checkbox so if you would like a copy of this code i will post this to the comments section down below but yeah that's a very basic use of a checkbox in javafx
