With timestamps:

00:00 - hey what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in this video we're going to discuss
00:05 - classes in c-sharp
00:06 - so sit back relax and enjoy the show
00:11 - all right classes a class is really just
00:14 - a bundle of related
00:16 - code that you would like to organize
00:17 - together it can be used as a blueprint
00:20 - to create objects with
00:21 - object-oriented programming but we'll
00:23 - discuss that in the next video
00:25 - so my main method is located within a
00:28 - class named program
00:30 - the point of this class is well to group
00:32 - my program together
00:33 - but there are classes too that have
00:35 - certain functions for example the math
00:37 - class
00:37 - the purpose of the math class is to
00:39 - contain a bunch of useful methods
00:41 - related to mathematics
00:42 - and let's take a look at this
00:46 - so this class is named math and all
00:48 - that's in here
00:49 - is a bunch of methods related to
00:51 - mathematics so that's kind of the point
00:53 - of this class but we can create our own
00:55 - classes too
00:56 - now to create a class we can either do
00:58 - so outside of our class program
01:00 - or create a class within a separate
01:02 - c-sharp file i'll show you both ways
01:05 - so to create a class make sure that
01:06 - we're not writing this within our class
01:08 - program so that ends here
01:10 - type class and let's create a class to
01:13 - group a bunch of useful messages
01:15 - together like message
01:17 - methods class messages curly braces
01:21 - and let's create a few methods related
01:23 - to messages
01:24 - so this is going to be more of like a
01:26 - utility class
01:27 - void hello and when we use this method
01:31 - let's display a message like hello
01:36 - welcome to the program and let's create
01:39 - maybe two more
01:41 - void hello void what about waiting like
01:45 - we're waiting for something
01:49 - i am waiting for something
01:54 - and what about goodbye void bye
01:58 - bye
02:01 - thanks for visiting
02:04 - if you would like to create a class
02:06 - within a separate c-sharp file
02:08 - i would recommend opening your solution
02:10 - explorer if you don't have that open you
02:11 - can find it here
02:12 - go to view solution explorer
02:16 - right click on your namespace add
02:20 - class
02:23 - class and then i will name this messages
02:28 - add okay then i'm going to take my code
02:33 - from within this class
02:35 - cut it delete my class
02:39 - and then paste it within this class
02:42 - messages
02:43 - so you can either write your class
02:44 - within the same c
02:46 - file or a different one if i would like
02:48 - to use some of these methods found
02:50 - within
02:50 - the messages class there's one of two
02:52 - things that i need to do
02:53 - i either need to create an object from
02:55 - this class
02:56 - or i need to precede my class definition
03:00 - with the word
03:00 - static followed by everything within my
03:03 - messages class
03:04 - so we'll talk about creating objects in
03:06 - the next video so for now we'll just
03:08 - have to
03:09 - use the static keyword and i'll create a
03:11 - separate video on this too
03:13 - and we should now be able to use these
03:14 - methods found within my messages class
03:17 - so if i need to display a hello message
03:20 - i would type the name of the class
03:21 - that would be messages then dot
03:24 - to access the members however these are
03:27 - not visible
03:28 - so we need to make them public and
03:30 - that'll be a separate video on axis
03:31 - modifiers
03:32 - so i would like this to be a public
03:34 - method so precede
03:36 - static with public
03:39 - and we should now be able to see those
03:40 - methods so type messages again
03:43 - dot and here are those methods i would
03:45 - like to use the hello method
03:47 - and that will display my message hello
03:50 - welcome to the program
03:51 - i also have that waiting message
03:55 - messages dot and that was waiting
03:59 - as well as goodbye messages
04:02 - dot bye so hello welcome to the program
04:06 - i am waiting for something bye thanks
04:08 - for visiting
04:09 - so basically a class is just a bundle of
04:12 - related code and it can be used as a
04:15 - blueprint to create objects
04:17 - otherwise you can use a class more or
04:19 - less as a utility class
04:21 - but when you define your class you'll
04:22 - have to precede the class definition
04:24 - with the word static
04:26 - and to make this public and accessible
04:28 - you would have to precede each method
04:30 - with
04:30 - public and static so yeah those are
04:33 - classes
04:34 - they're really just a bundle of related
04:36 - code you can use them as a utility class
04:39 - or use them as a blueprint to create
04:41 - objects which we'll discuss
04:42 - in another video if you found this video
04:44 - helpful please help me by smashing that
04:46 - like button
04:47 - leave a random comment down below and
04:49 - well yeah those are classes
04:51 - in c sharp

Cleaned transcript:

hey what's going on everybody it's you bro hope you're doing well and in this video we're going to discuss classes in csharp so sit back relax and enjoy the show all right classes a class is really just a bundle of related code that you would like to organize together it can be used as a blueprint to create objects with objectoriented programming but we'll discuss that in the next video so my main method is located within a class named program the point of this class is well to group my program together but there are classes too that have certain functions for example the math class the purpose of the math class is to contain a bunch of useful methods related to mathematics and let's take a look at this so this class is named math and all that's in here is a bunch of methods related to mathematics so that's kind of the point of this class but we can create our own classes too now to create a class we can either do so outside of our class program or create a class within a separate csharp file i'll show you both ways so to create a class make sure that we're not writing this within our class program so that ends here type class and let's create a class to group a bunch of useful messages together like message methods class messages curly braces and let's create a few methods related to messages so this is going to be more of like a utility class void hello and when we use this method let's display a message like hello welcome to the program and let's create maybe two more void hello void what about waiting like we're waiting for something i am waiting for something and what about goodbye void bye bye thanks for visiting if you would like to create a class within a separate csharp file i would recommend opening your solution explorer if you don't have that open you can find it here go to view solution explorer right click on your namespace add class class and then i will name this messages add okay then i'm going to take my code from within this class cut it delete my class and then paste it within this class messages so you can either write your class within the same c file or a different one if i would like to use some of these methods found within the messages class there's one of two things that i need to do i either need to create an object from this class or i need to precede my class definition with the word static followed by everything within my messages class so we'll talk about creating objects in the next video so for now we'll just have to use the static keyword and i'll create a separate video on this too and we should now be able to use these methods found within my messages class so if i need to display a hello message i would type the name of the class that would be messages then dot to access the members however these are not visible so we need to make them public and that'll be a separate video on axis modifiers so i would like this to be a public method so precede static with public and we should now be able to see those methods so type messages again dot and here are those methods i would like to use the hello method and that will display my message hello welcome to the program i also have that waiting message messages dot and that was waiting as well as goodbye messages dot bye so hello welcome to the program i am waiting for something bye thanks for visiting so basically a class is just a bundle of related code and it can be used as a blueprint to create objects otherwise you can use a class more or less as a utility class but when you define your class you'll have to precede the class definition with the word static and to make this public and accessible you would have to precede each method with public and static so yeah those are classes they're really just a bundle of related code you can use them as a utility class or use them as a blueprint to create objects which we'll discuss in another video if you found this video helpful please help me by smashing that like button leave a random comment down below and well yeah those are classes in c sharp
