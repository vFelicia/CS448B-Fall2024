With timestamps:

00:00 - hey everybody in this topic I'm going to
00:02 - show you how we can accept some user
00:03 - input then I have a few exercises for us
00:06 - to work on we'll work on Mad Libs a
00:09 - program to calculate the area of a
00:11 - square and a shopping cart program how
00:13 - do we accept user input well we do so
00:16 - within our console window down here the
00:18 - same that we use for output to accept
00:20 - some user input we can use the input
00:22 - function within the set of parentheses
00:24 - we can type a prompt to be displayed to
00:27 - the console window let's ask for
00:29 - somebody's name
00:31 - enter your name
00:34 - when I run this program our program is
00:36 - paused in the console window until we
00:38 - type in something and hit enter
00:40 - I'll enter my name you can enter in your
00:42 - own name hit enter but nothing appears
00:45 - to happen we've accepted user input but
00:48 - we should probably store the input
00:49 - somewhere how about inside of a variable
00:52 - I'll assign my variable name equal to
00:56 - the input that we receive our input will
00:58 - be stored within this variable and then
01:00 - we can use it for something
01:02 - so let's print whatever our name is
01:04 - within a message I'll use an F string
01:07 - hello
01:09 - our variable name let's try this again
01:13 - enter your name I'll type in my first
01:15 - name hit enter hello Pro let's ask for
01:19 - somebody's age this time
01:22 - we'll create variable age
01:24 - set this equal to
01:26 - input then we'll need a prompt
01:30 - enter your age
01:33 - then we will print
01:36 - using an F string you are our variable
01:40 - age years old
01:44 - and to your name I'll type in my first
01:46 - name and your age I'll make up an age
01:49 - hello bro you are 21 years old when we
01:53 - accept user input the input is always of
01:55 - the string data type what if I were to
01:58 - increase my variable age by one
02:01 - H equals h plus one
02:05 - this is what would happen
02:07 - bro 21 uh we have a type error can only
02:11 - concatenate strings not integers two
02:13 - strings if I accept user input and I
02:16 - need to use it for any sort of math I
02:18 - would want to type cast that input as
02:21 - either an integer or a float based on
02:23 - the previous lesson on typecasting we
02:25 - could write age equals I'll type cast my
02:29 - age which is a string into an integer
02:34 - so type in your first name and age
02:37 - and that appears to work uh however I
02:40 - like to do this involving one line of
02:42 - code in place of adding an additional
02:44 - line where we're typecasting I'll take
02:46 - the user input and place this function
02:49 - within a Typecast I'll type int then
02:52 - surround the input function with the set
02:54 - of parentheses then that only takes one
02:56 - line of code So Pro 21
03:00 - there we go that also works if we were
03:03 - to type cast our input as a float
03:07 - well then my input would be a floating
03:09 - Point number it has that decimal portion
03:11 - so when you accept user input it's
03:13 - always of the string data type if you're
03:15 - going to use your input with any sort of
03:17 - math you'll probably want to Typecast it
03:19 - as either a float or an integer and
03:22 - that's how to accept user input let's go
03:25 - over a few exercises the first we'll
03:27 - create a Mad Libs game
03:29 - all right everybody for our first
03:31 - practice program we're going to create a
03:33 - Mad Libs game Mad Libs is where you have
03:35 - a story but the user gets to submit
03:37 - nouns verbs and adjectives within your
03:40 - story so let's think of a story feel
03:42 - free to come up with your own I'll use
03:44 - fstrings
03:45 - today I went to a we'll insert an
03:50 - adjective here an adjective is a quality
03:54 - of a thing
03:56 - Zoo
03:58 - so what kind of zoo an expensive Zoo a
04:02 - cheap Zoo
04:03 - a dirty Zoo a clean Zoo that's an
04:06 - adjective it's a quality of a noun
04:10 - our second line
04:13 - let's say is
04:15 - in an exhibit
04:19 - I saw
04:21 - then a noun a noun is a person Placer
04:25 - thing
04:30 - our noun
04:36 - was
04:38 - then an adjective
04:43 - and
04:44 - a verb a verb is an action I would like
04:48 - two different adjectives let's rename
04:50 - this first adjective as adjective one
04:52 - the second adjective will be adjective
04:54 - two after our verb I'll add ing that
04:58 - means that this verb is current tense
05:00 - it's currently happening
05:03 - print
05:06 - this will be an upstring
05:07 - I was
05:11 - then let's add a third adjective
05:13 - adjective three
05:15 - we just need to declare and assign these
05:18 - variables
05:19 - we have adjective one
05:23 - our noun
05:26 - adjective two
05:29 - our verb
05:32 - then adjective three
05:36 - we'll accept user input input will ask
05:40 - the user to enter
05:42 - an adjective
05:45 - let's copy this line add that to
05:48 - adjective two and adjective three
05:51 - for noun
05:52 - will input
05:55 - enter a noun
05:58 - our verb will be enter
06:03 - a verb
06:05 - all right we're ready to run our Mad
06:06 - Libs game
06:08 - an adjective describes a quality of a
06:10 - person place or thing like Fast slow uh
06:14 - what about suspicious or I'll just say
06:16 - sus for short
06:19 - enter a noun
06:21 - mark
06:23 - Zuckerberg a noun is a person Placer
06:26 - thing
06:28 - enter an adjective
06:30 - berserk
06:32 - enter a verb a verb is an action how
06:36 - about Screech
06:39 - enter an adjective amazed
06:45 - all right here's our story
06:47 - today I went to a sus zoo in an exhibit
06:50 - I saw Mark Zuckerberg Mark Zuckerberg
06:54 - was berserk and screeching I was amazed
06:58 - all right that is our first exercise
07:01 - I'd like to see what you wrote post your
07:03 - results in the comment section down
07:04 - below because I would like to read it
07:07 - all right let's move on to the second
07:08 - exercise
07:12 - for this next exercise we will calculate
07:14 - the area of a rectangle
07:16 - we'll need two variables length and
07:19 - width
07:20 - we'll take length equal to accept some
07:24 - user input
07:26 - enter the length of a rectangle
07:32 - then we'll need the width
07:35 - width enter the width of a rectangle
07:39 - we will take our area variable set this
07:42 - equal to length times width
07:46 - then let's display whatever the area is
07:51 - the area
07:53 - is
07:55 - colon space I'll insert our area
07:58 - variable depending on the unit of
08:00 - measurement you can set this two inches
08:01 - centimeters or something else I'll just
08:03 - say centimeters I believe that
08:05 - centimeters squared technically okay
08:08 - let's try it the length will be 9 the
08:11 - width is 15. we have a problem type
08:13 - error can't multiply sequence by
08:15 - non-integers of type string what we're
08:17 - missing here is we need to Typecast our
08:19 - user input as either a floating Point
08:22 - number or an integer we're using these
08:24 - variables in arithmetic equations so
08:26 - let's Typecast our length and our width
08:29 - as a floating Point number
08:33 - foreign
08:39 - enter the length of a rectangle 9 15
08:43 - . the area is 135 centimeters squared
08:47 - hey If This Were a 3D rectangle we could
08:50 - add height
08:52 - equals I'm going to copy all this
08:57 - enter the height of a rectangle
09:01 - volume equals length times width times
09:04 - height
09:06 - the volume is
09:10 - our volume centimeters cubed technically
09:16 - nine
09:17 - fifteen
09:19 - seven I'm just making up numbers here
09:21 - the volume is
09:24 - 945.0 centimeters cubed all right so
09:28 - that is the second exercise we have
09:30 - calculated well I guess both the area of
09:33 - a rectangle and the volume of a
09:35 - three-dimensional rectangle
09:38 - okay we have one more exercise a
09:40 - shopping cart program
09:43 - we have three variables item
09:47 - a price of the item
09:49 - then a quantity
09:53 - we'll ask the user what item they're
09:55 - buying
09:58 - input
10:01 - what item would you like to buy
10:08 - then a price
10:09 - input
10:13 - what is the price
10:18 - then a quantity
10:21 - input
10:25 - how many would you like
10:29 - if we're working with a string we don't
10:31 - need to do any type casting
10:33 - a price with a price that could include
10:36 - a decibel we should type cast our input
10:38 - as a floating Point number
10:40 - I'll surround our input with a type cast
10:43 - to a float and with a quantity those are
10:46 - typically integers they're whole numbers
10:47 - I'll type cast our input as an integer
10:51 - so surround our input with an intercast
10:55 - then we can do some calculations
10:58 - total
11:00 - equals
11:01 - our price multiplied by our quantity
11:08 - then we'll display a message to the user
11:11 - print we'll use an F string
11:14 - you have
11:17 - bought
11:19 - our quantity variable
11:23 - times
11:25 - whatever the item is that we're trying
11:27 - to buy
11:30 - then I'll add slash S
11:32 - because they might buy more than one
11:34 - item
11:35 - then we'll display the total
11:39 - your total is colon space
11:44 - then our total
11:46 - I should probably precede the total with
11:49 - some currency maybe a dollar sign
11:52 - okay let's run this program
11:54 - what item would you like to buy I would
11:56 - like to buy a pizza
11:59 - what is the price
12:01 - maybe a pizza is 4.99
12:05 - how many would you like to buy I would
12:07 - like to buy nine pizzas
12:10 - all right here's the total 44.91
12:14 - we can truncate everything up to two
12:17 - decimal places
12:18 - and here's how
12:20 - there is a built-in round function
12:22 - I'm going to surround our total within a
12:25 - round function
12:27 - then after our variable I'll add comma
12:30 - then the amount of decimal places to
12:32 - round two
12:33 - let's try this again
12:34 - what item would you like to buy
12:36 - a pizza
12:38 - the price is 4.99 how many would you
12:41 - like to buy I'd like nine pizzas your
12:43 - total is 44.91
12:46 - like I said to truncate everything after
12:49 - two decimal places you could use the
12:51 - built-in round function then set the
12:53 - amount of decimal places you would like
12:55 - to round to alright everybody that is
12:57 - the third exercise we have made a small
12:59 - shopping cart program

Cleaned transcript:

hey everybody in this topic I'm going to show you how we can accept some user input then I have a few exercises for us to work on we'll work on Mad Libs a program to calculate the area of a square and a shopping cart program how do we accept user input well we do so within our console window down here the same that we use for output to accept some user input we can use the input function within the set of parentheses we can type a prompt to be displayed to the console window let's ask for somebody's name enter your name when I run this program our program is paused in the console window until we type in something and hit enter I'll enter my name you can enter in your own name hit enter but nothing appears to happen we've accepted user input but we should probably store the input somewhere how about inside of a variable I'll assign my variable name equal to the input that we receive our input will be stored within this variable and then we can use it for something so let's print whatever our name is within a message I'll use an F string hello our variable name let's try this again enter your name I'll type in my first name hit enter hello Pro let's ask for somebody's age this time we'll create variable age set this equal to input then we'll need a prompt enter your age then we will print using an F string you are our variable age years old and to your name I'll type in my first name and your age I'll make up an age hello bro you are 21 years old when we accept user input the input is always of the string data type what if I were to increase my variable age by one H equals h plus one this is what would happen bro 21 uh we have a type error can only concatenate strings not integers two strings if I accept user input and I need to use it for any sort of math I would want to type cast that input as either an integer or a float based on the previous lesson on typecasting we could write age equals I'll type cast my age which is a string into an integer so type in your first name and age and that appears to work uh however I like to do this involving one line of code in place of adding an additional line where we're typecasting I'll take the user input and place this function within a Typecast I'll type int then surround the input function with the set of parentheses then that only takes one line of code So Pro 21 there we go that also works if we were to type cast our input as a float well then my input would be a floating Point number it has that decimal portion so when you accept user input it's always of the string data type if you're going to use your input with any sort of math you'll probably want to Typecast it as either a float or an integer and that's how to accept user input let's go over a few exercises the first we'll create a Mad Libs game all right everybody for our first practice program we're going to create a Mad Libs game Mad Libs is where you have a story but the user gets to submit nouns verbs and adjectives within your story so let's think of a story feel free to come up with your own I'll use fstrings today I went to a we'll insert an adjective here an adjective is a quality of a thing Zoo so what kind of zoo an expensive Zoo a cheap Zoo a dirty Zoo a clean Zoo that's an adjective it's a quality of a noun our second line let's say is in an exhibit I saw then a noun a noun is a person Placer thing our noun was then an adjective and a verb a verb is an action I would like two different adjectives let's rename this first adjective as adjective one the second adjective will be adjective two after our verb I'll add ing that means that this verb is current tense it's currently happening print this will be an upstring I was then let's add a third adjective adjective three we just need to declare and assign these variables we have adjective one our noun adjective two our verb then adjective three we'll accept user input input will ask the user to enter an adjective let's copy this line add that to adjective two and adjective three for noun will input enter a noun our verb will be enter a verb all right we're ready to run our Mad Libs game an adjective describes a quality of a person place or thing like Fast slow uh what about suspicious or I'll just say sus for short enter a noun mark Zuckerberg a noun is a person Placer thing enter an adjective berserk enter a verb a verb is an action how about Screech enter an adjective amazed all right here's our story today I went to a sus zoo in an exhibit I saw Mark Zuckerberg Mark Zuckerberg was berserk and screeching I was amazed all right that is our first exercise I'd like to see what you wrote post your results in the comment section down below because I would like to read it all right let's move on to the second exercise for this next exercise we will calculate the area of a rectangle we'll need two variables length and width we'll take length equal to accept some user input enter the length of a rectangle then we'll need the width width enter the width of a rectangle we will take our area variable set this equal to length times width then let's display whatever the area is the area is colon space I'll insert our area variable depending on the unit of measurement you can set this two inches centimeters or something else I'll just say centimeters I believe that centimeters squared technically okay let's try it the length will be 9 the width is 15. we have a problem type error can't multiply sequence by nonintegers of type string what we're missing here is we need to Typecast our user input as either a floating Point number or an integer we're using these variables in arithmetic equations so let's Typecast our length and our width as a floating Point number foreign enter the length of a rectangle 9 15 . the area is 135 centimeters squared hey If This Were a 3D rectangle we could add height equals I'm going to copy all this enter the height of a rectangle volume equals length times width times height the volume is our volume centimeters cubed technically nine fifteen seven I'm just making up numbers here the volume is 945.0 centimeters cubed all right so that is the second exercise we have calculated well I guess both the area of a rectangle and the volume of a threedimensional rectangle okay we have one more exercise a shopping cart program we have three variables item a price of the item then a quantity we'll ask the user what item they're buying input what item would you like to buy then a price input what is the price then a quantity input how many would you like if we're working with a string we don't need to do any type casting a price with a price that could include a decibel we should type cast our input as a floating Point number I'll surround our input with a type cast to a float and with a quantity those are typically integers they're whole numbers I'll type cast our input as an integer so surround our input with an intercast then we can do some calculations total equals our price multiplied by our quantity then we'll display a message to the user print we'll use an F string you have bought our quantity variable times whatever the item is that we're trying to buy then I'll add slash S because they might buy more than one item then we'll display the total your total is colon space then our total I should probably precede the total with some currency maybe a dollar sign okay let's run this program what item would you like to buy I would like to buy a pizza what is the price maybe a pizza is 4.99 how many would you like to buy I would like to buy nine pizzas all right here's the total 44.91 we can truncate everything up to two decimal places and here's how there is a builtin round function I'm going to surround our total within a round function then after our variable I'll add comma then the amount of decimal places to round two let's try this again what item would you like to buy a pizza the price is 4.99 how many would you like to buy I'd like nine pizzas your total is 44.91 like I said to truncate everything after two decimal places you could use the builtin round function then set the amount of decimal places you would like to round to alright everybody that is the third exercise we have made a small shopping cart program
