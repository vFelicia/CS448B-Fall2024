With timestamps:

00:00 - hey what's going on everybody so in
00:01 - today's video I'm going to show you how
00:03 - we can calculate execution time in
00:05 - Python say there's some code we would
00:07 - like to measure I wrote a little comment
00:09 - that says your code goes here what we're
00:12 - going to do is measure the time before
00:14 - and after The Code by finding the
00:16 - difference between these two points that
00:18 - will give us the elapse time so in this
00:21 - example we're going to need the help of
00:23 - the time module we will import time
00:26 - preceding the code we would like to
00:28 - measure we're going to create a variable
00:29 - named start time equals we will access
00:33 - the time modules performance counter
00:38 - method this method will return an
00:40 - arbitrary point in time following our
00:43 - code we need to get the end
00:45 - time I will assign that to a variable
00:48 - again we're going to access the time
00:49 - modules performance counter
00:54 - method we will create an elapse time
00:58 - variable elapse time
01:01 - equals the end time minus the start time
01:06 - how much time has
01:09 - passed then we will print I'll use an F
01:12 - string the elapsed time is I'll add a
01:17 - placeholder I will display our elapse
01:20 - time then the word
01:22 - seconds all right currently I don't have
01:24 - any code that we're measuring our elapse
01:27 - time is going to be an extremely small
01:29 - number
01:31 - I don't even know what number that
01:32 - is it's 5.2 e to the -6th power all
01:39 - right now we need some code to measure
01:41 - in this example for our code let's
01:43 - create a for Loop for I in range we will
01:46 - iterate this Loop 1 million
01:50 - times all we'll do is pass we won't do
01:53 - anything in this program how long does 1
01:56 - million iterations of a loop take
02:00 - 06 seconds how about 10
02:06 - million 7 Seconds 100
02:09 - million this might take a little
02:17 - bit 6.8 seconds just to clean up the
02:21 - output I'm going to add a format
02:22 - specifier we're going to display one
02:25 - digit after the decimal I'll add. 1f
02:36 - 6.7 seconds all right everybody so
02:39 - that's how you can calculate execution
02:41 - time in Python before the code you would
02:43 - like to measure use the performance
02:45 - counter method to give you a start time
02:47 - after your code use that method again to
02:50 - give you an end time subtract the start
02:52 - time from the end time to give you the
02:54 - elapse time and well everybody that's
02:56 - how to calculate execution time in
02:58 - Python

Cleaned transcript:

hey what's going on everybody so in today's video I'm going to show you how we can calculate execution time in Python say there's some code we would like to measure I wrote a little comment that says your code goes here what we're going to do is measure the time before and after The Code by finding the difference between these two points that will give us the elapse time so in this example we're going to need the help of the time module we will import time preceding the code we would like to measure we're going to create a variable named start time equals we will access the time modules performance counter method this method will return an arbitrary point in time following our code we need to get the end time I will assign that to a variable again we're going to access the time modules performance counter method we will create an elapse time variable elapse time equals the end time minus the start time how much time has passed then we will print I'll use an F string the elapsed time is I'll add a placeholder I will display our elapse time then the word seconds all right currently I don't have any code that we're measuring our elapse time is going to be an extremely small number I don't even know what number that is it's 5.2 e to the 6th power all right now we need some code to measure in this example for our code let's create a for Loop for I in range we will iterate this Loop 1 million times all we'll do is pass we won't do anything in this program how long does 1 million iterations of a loop take 06 seconds how about 10 million 7 Seconds 100 million this might take a little bit 6.8 seconds just to clean up the output I'm going to add a format specifier we're going to display one digit after the decimal I'll add. 1f 6.7 seconds all right everybody so that's how you can calculate execution time in Python before the code you would like to measure use the performance counter method to give you a start time after your code use that method again to give you an end time subtract the start time from the end time to give you the elapse time and well everybody that's how to calculate execution time in Python
