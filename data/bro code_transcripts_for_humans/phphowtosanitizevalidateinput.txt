With timestamps:

00:00 - hey everybody what's going on in today's
00:01 - video I'm going to show you how we can
00:03 - both sanitize and validate user input in
00:06 - PHP we're going to need an HTML form to
00:09 - work with I'll go ahead and create that
00:25 - here's my form we have a text box and a
00:27 - button when I click on the button we'll
00:29 - execute some code I will enclose all of
00:32 - my code with an if statement we will
00:34 - check to see if our login button is set
00:36 - if it's interacted with if set we're
00:40 - accessing post
00:43 - if our login button is interacted with
00:45 - let's get the username from the text box
00:49 - and store that within a local variable
00:57 - then let's Echo
01:03 - hello
01:06 - username
01:11 - so I can type in a username
01:13 - Press login and we are pretending to log
01:16 - in if you don't sanitize or validate
01:18 - your user input somebody could write
01:21 - some malicious code like a cross-site
01:23 - script or SQL injection such as this
01:28 - you have a virus
01:30 - what I did is just write some malicious
01:32 - JavaScript code to display you have a
01:34 - virus it would be best to prevent code
01:37 - like that from running one way in which
01:39 - we can do that is to add a filter to
01:41 - sanitize any user input instead of
01:43 - assigning our username directly from our
01:45 - post variable
01:47 - we are going to use a function the
01:49 - filter input function and there are
01:52 - three arguments the first argument is
01:55 - input post
01:58 - because we're using the post method if
02:00 - we were using get then this would be
02:02 - input get
02:04 - the second argument is the name of the
02:06 - input which in this case would be
02:08 - username
02:11 - then third is the type of filter I'll
02:14 - put this on a new line because I'm
02:15 - running out of room
02:18 - I would like to remove any special
02:20 - characters used in executing code so
02:22 - there is a filter for that it's filter
02:26 - sanitize
02:28 - special
02:31 - chars
02:34 - I'm going to take this JavaScript code
02:37 - paste it into my username and we'll see
02:40 - if we can execute this code
02:43 - which we cannot instead of executing the
02:45 - code we are using it as output
02:47 - and if I were to right click then go to
02:49 - view page source
02:54 - any special characters are replaced here
02:56 - is that JavaScript code I entered it's
02:58 - not executing because we filtered these
03:01 - special characters if you ever need to
03:03 - filter all characters besides numbers
03:05 - there is filter sanitize number int
03:08 - that's another filter let's create a new
03:11 - text box for an age
03:15 - age the name will be age
03:19 - so again let's create a new variable
03:21 - named age equals filter
03:25 - input
03:28 - input post because we're using post
03:31 - the name of the input is age
03:35 - then the type of filter
03:40 - filter
03:42 - sanitize number
03:45 - int
03:47 - let's create a new message you are
03:50 - variable age
03:53 - years old
03:57 - if I were to type in
04:00 - then press log in we will filter all
04:02 - characters besides any numbers that is
04:05 - the filter sanitize number end filter
04:07 - now maybe we need an email let's create
04:10 - a new text box for an email
04:13 - email the name will be email
04:21 - equals again filter
04:24 - input the first argument is input post
04:27 - or input get if you're using get
04:31 - the name of the attribute is email
04:34 - the third argument is the type of filter
04:39 - sanitize
04:41 - email
04:44 - your email is
04:47 - variable email
04:50 - I'll type in an email
04:53 - then add some illegal characters for an
04:56 - email such as angle brackets and
04:59 - parentheses
05:00 - and this should filter all of the
05:02 - illegal characters which it does here's
05:05 - my email without those illegal
05:06 - characters so those are a few ways in
05:08 - which you can sanitize input
05:10 - now let's validate input using a
05:13 - validate filter if our input doesn't
05:15 - pass a validation test it returns an
05:17 - empty string sanitization will strip
05:19 - certain characters of user input
05:21 - validation if it doesn't pass it just
05:23 - returns an empty string so now we have
05:25 - variable age age equals we'll use filter
05:28 - input again
05:31 - input post because we're using post
05:34 - the name of the input we're filtering is
05:37 - age then the type of filter
05:41 - validate
05:44 - int
05:46 - if our user input isn't a number we will
05:49 - assign an empty string to age it doesn't
05:51 - pass the validation test so let's check
05:54 - that let's use an if statement
05:56 - we can use the empty function
05:59 - if our age is empty that means a user
06:02 - didn't type in a valid number
06:04 - let's Echo
06:07 - that number wasn't valid
06:11 - else if our age is not empty that means
06:14 - they typed in a valid number
06:18 - you are age years old
06:24 - let's run this again uh I'll type in a
06:27 - bunch of characters
06:29 - I'll try and log in uh that number
06:32 - wasn't valid I'm not surprised
06:35 - so now let's type in a valid number
06:38 - and that seems to work using this filter
06:41 - we can check to see if some input is
06:43 - only numbers the next filter is to
06:46 - validate an email to see if it's in a
06:47 - correct format let's copy these two
06:50 - lines of code
06:51 - paste them
06:54 - variable email
06:57 - input post
06:59 - we are getting our email user input
07:01 - filter validate email
07:04 - if our email is empty
07:07 - that email wasn't valid else
07:12 - your email is our variable email
07:19 - okay I'll make up some email
07:24 - Press login that seems to work
07:27 - I'll type in that same email but I'll
07:29 - add some illegal characters like
07:32 - angle brackets and parentheses
07:36 - that email wasn't valid
07:38 - all right everybody so those are a few
07:40 - filters you may be interested in when
07:42 - accepting user input it is a good idea
07:45 - to both sanitize and filter user input
07:47 - just in case a user types in some
07:49 - malicious script you don't want any of
07:51 - that sanitize and validate your user
07:53 - input whenever possible and well
07:55 - everybody that's how to both sanitize
07:57 - and validate user input in PHP

Cleaned transcript:

hey everybody what's going on in today's video I'm going to show you how we can both sanitize and validate user input in PHP we're going to need an HTML form to work with I'll go ahead and create that here's my form we have a text box and a button when I click on the button we'll execute some code I will enclose all of my code with an if statement we will check to see if our login button is set if it's interacted with if set we're accessing post if our login button is interacted with let's get the username from the text box and store that within a local variable then let's Echo hello username so I can type in a username Press login and we are pretending to log in if you don't sanitize or validate your user input somebody could write some malicious code like a crosssite script or SQL injection such as this you have a virus what I did is just write some malicious JavaScript code to display you have a virus it would be best to prevent code like that from running one way in which we can do that is to add a filter to sanitize any user input instead of assigning our username directly from our post variable we are going to use a function the filter input function and there are three arguments the first argument is input post because we're using the post method if we were using get then this would be input get the second argument is the name of the input which in this case would be username then third is the type of filter I'll put this on a new line because I'm running out of room I would like to remove any special characters used in executing code so there is a filter for that it's filter sanitize special chars I'm going to take this JavaScript code paste it into my username and we'll see if we can execute this code which we cannot instead of executing the code we are using it as output and if I were to right click then go to view page source any special characters are replaced here is that JavaScript code I entered it's not executing because we filtered these special characters if you ever need to filter all characters besides numbers there is filter sanitize number int that's another filter let's create a new text box for an age age the name will be age so again let's create a new variable named age equals filter input input post because we're using post the name of the input is age then the type of filter filter sanitize number int let's create a new message you are variable age years old if I were to type in then press log in we will filter all characters besides any numbers that is the filter sanitize number end filter now maybe we need an email let's create a new text box for an email email the name will be email equals again filter input the first argument is input post or input get if you're using get the name of the attribute is email the third argument is the type of filter sanitize email your email is variable email I'll type in an email then add some illegal characters for an email such as angle brackets and parentheses and this should filter all of the illegal characters which it does here's my email without those illegal characters so those are a few ways in which you can sanitize input now let's validate input using a validate filter if our input doesn't pass a validation test it returns an empty string sanitization will strip certain characters of user input validation if it doesn't pass it just returns an empty string so now we have variable age age equals we'll use filter input again input post because we're using post the name of the input we're filtering is age then the type of filter validate int if our user input isn't a number we will assign an empty string to age it doesn't pass the validation test so let's check that let's use an if statement we can use the empty function if our age is empty that means a user didn't type in a valid number let's Echo that number wasn't valid else if our age is not empty that means they typed in a valid number you are age years old let's run this again uh I'll type in a bunch of characters I'll try and log in uh that number wasn't valid I'm not surprised so now let's type in a valid number and that seems to work using this filter we can check to see if some input is only numbers the next filter is to validate an email to see if it's in a correct format let's copy these two lines of code paste them variable email input post we are getting our email user input filter validate email if our email is empty that email wasn't valid else your email is our variable email okay I'll make up some email Press login that seems to work I'll type in that same email but I'll add some illegal characters like angle brackets and parentheses that email wasn't valid all right everybody so those are a few filters you may be interested in when accepting user input it is a good idea to both sanitize and filter user input just in case a user types in some malicious script you don't want any of that sanitize and validate your user input whenever possible and well everybody that's how to both sanitize and validate user input in PHP
