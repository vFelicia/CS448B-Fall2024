With timestamps:

00:00 - hey what's going on everybody it's your
00:02 - bro hope you're doing well
00:03 - in today's video i'm going to show you
00:04 - all how the map function works in python
00:07 - so
00:07 - sit back relax and enjoy the show
00:12 - if you wouldn't mind please like comment
00:14 - and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:19 - what up everybody let's discuss the map
00:21 - function the map function will apply a
00:23 - function to each item in an interval
00:26 - that would include lists tuples things
00:28 - like that
00:29 - and the map function accepts two
00:31 - arguments are iterable as well as the
00:33 - function we would like to apply to each
00:35 - item within our iterable
00:37 - for example let's say that we have an
00:38 - online store to represent this i have a
00:41 - list of tuples named store each topple
00:44 - within this list
00:45 - corresponds to an item for sale within
00:47 - our store
00:48 - there's shirts pants jackets and socks
00:51 - and each item has a price
00:53 - in us dollars let's say now what i would
00:55 - like to do is to convert all of the
00:57 - prices within my store
00:59 - to euros and currently the conversion
01:01 - rate as of the filming of this video is
01:03 - one us dollar to 0.82 euros
01:06 - so let's begin we can easily convert
01:08 - dollars to euros with
01:09 - a lambda function so let's say two
01:12 - euros equals lambda
01:16 - the parameter will be data colon
01:19 - and the next part's a little bit tricky
01:21 - within a set of parenthesis to represent
01:23 - a tuple
01:24 - we'll take data at index zero that
01:27 - corresponds to the first column
01:30 - comma data at index one
01:33 - this represents the index of our prices
01:36 - we're going to take
01:37 - data at index one times 0.82
01:41 - and that's it the first column will be
01:44 - left untouched
01:45 - but the data in column 1 will be
01:48 - multiplied by 0.82
01:50 - now our map function is going to create
01:52 - a map object but we can easily cast that
01:55 - to a different type of iterable
01:57 - so let's say that store underscore
02:00 - euros equals map
02:04 - parenthesis and then we can pass in our
02:06 - function as well as our iterable
02:08 - our function is our two euros function
02:11 - comma and our iterable is our store
02:16 - and that is it now if you want to
02:18 - convert this map object to an iterable
02:20 - you can easily surround this with a cast
02:22 - i would like to convert
02:24 - this map object to a list and we will
02:27 - now have a
02:28 - new store named store euros which will
02:31 - have all of the different prices of our
02:32 - store in euros
02:34 - and to display this i'll use a for loop
02:36 - for i
02:37 - in store euros
02:41 - print i and
02:44 - let's try it yep that seems about right
02:48 - all of the prices in our store are now
02:50 - in euros
02:51 - let's pretend that these prices are
02:53 - already in euros and we would like to
02:54 - convert these to american dollars
02:57 - so we will use the same conversion rate
02:58 - but divide by 0.82
03:01 - so let's create a separate lambda
03:03 - function two
03:05 - dollars equals i think i'll just copy
03:07 - this
03:09 - but we are going to divide the first
03:11 - index of data
03:13 - by 0.82 and let's say store
03:18 - dollars to represent our store in
03:20 - dollars because we're pretending now
03:21 - that it's currently in euros
03:26 - and we will display 4i in store dollars
03:30 - so if all of these prices are in euros
03:33 - we are now converting them to
03:34 - american dollars but you may want to do
03:36 - some rounding as opposed to the nearest
03:38 - descent
03:39 - well everyone that is the map function
03:41 - it applies a function to each item in an
03:43 - iterable
03:44 - those include lists tuples the like you
03:47 - pass in
03:48 - your iterable and your function as an
03:50 - argument to the map
03:51 - function so if you would like a copy of
03:53 - all this code i will post all of this to
03:55 - the comment section down below
03:57 - but yeah that is how the map function
03:59 - works in python

Cleaned transcript:

hey what's going on everybody it's your bro hope you're doing well in today's video i'm going to show you all how the map function works in python so sit back relax and enjoy the show if you wouldn't mind please like comment and subscribe one like equals one prayer for the youtube algorithm what up everybody let's discuss the map function the map function will apply a function to each item in an interval that would include lists tuples things like that and the map function accepts two arguments are iterable as well as the function we would like to apply to each item within our iterable for example let's say that we have an online store to represent this i have a list of tuples named store each topple within this list corresponds to an item for sale within our store there's shirts pants jackets and socks and each item has a price in us dollars let's say now what i would like to do is to convert all of the prices within my store to euros and currently the conversion rate as of the filming of this video is one us dollar to 0.82 euros so let's begin we can easily convert dollars to euros with a lambda function so let's say two euros equals lambda the parameter will be data colon and the next part's a little bit tricky within a set of parenthesis to represent a tuple we'll take data at index zero that corresponds to the first column comma data at index one this represents the index of our prices we're going to take data at index one times 0.82 and that's it the first column will be left untouched but the data in column 1 will be multiplied by 0.82 now our map function is going to create a map object but we can easily cast that to a different type of iterable so let's say that store underscore euros equals map parenthesis and then we can pass in our function as well as our iterable our function is our two euros function comma and our iterable is our store and that is it now if you want to convert this map object to an iterable you can easily surround this with a cast i would like to convert this map object to a list and we will now have a new store named store euros which will have all of the different prices of our store in euros and to display this i'll use a for loop for i in store euros print i and let's try it yep that seems about right all of the prices in our store are now in euros let's pretend that these prices are already in euros and we would like to convert these to american dollars so we will use the same conversion rate but divide by 0.82 so let's create a separate lambda function two dollars equals i think i'll just copy this but we are going to divide the first index of data by 0.82 and let's say store dollars to represent our store in dollars because we're pretending now that it's currently in euros and we will display 4i in store dollars so if all of these prices are in euros we are now converting them to american dollars but you may want to do some rounding as opposed to the nearest descent well everyone that is the map function it applies a function to each item in an iterable those include lists tuples the like you pass in your iterable and your function as an argument to the map function so if you would like a copy of all this code i will post all of this to the comment section down below but yeah that is how the map function works in python
