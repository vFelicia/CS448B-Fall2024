With timestamps:

00:00 - hey what's going on everybody so in
00:01 - today's video I'm going to show you how
00:03 - we can create an image slider program
00:05 - using JavaScript you will need some
00:07 - images to work with I would recommend
00:09 - finding three or more somewhat related
00:11 - images to whatever you would like to
00:13 - create an image slider for once you find
00:15 - your images put them within your website
00:16 - folder and we are ready to begin okay
00:19 - let's do this thing everybody so we will
00:21 - create a development to contain
00:23 - everything this development will have a
00:25 - class of
00:27 - slider within this development we will
00:29 - create another div element this
00:32 - development will have a class of slides
00:35 - to contain our images within this inner
00:37 - div element we will create three image
00:40 - elements the first image will have a
00:43 - class of
00:45 - slide with this image element I will set
00:47 - the source attribute to be a relative or
00:50 - absolute file path let's begin with
00:53 - image one whatever you currently have
00:55 - I'll copy the name of this image
00:56 - including the
00:58 - extension so my my image has a name of
01:01 - image 1.jpg and for some reason if this
01:04 - image can't display I'll add some
01:05 - alternative text with the alt attribute
01:08 - let's say image number
01:12 - one and there is my image I will copy
01:15 - this image element paste it twice or
01:19 - once for every image that you have then
01:21 - I have image two and image three let me
01:24 - change those we have image 2 and image
01:28 - three so you should have three or more
01:31 - images depending on what pictures you're
01:33 - using and how many then we're going to
01:35 - add some Arrow buttons for the time
01:37 - being that will be down at the
01:39 - bottom so we will create a button
01:42 - element now you could use a left angle
01:44 - bracket let me zoom in but I think
01:48 - there's a better option there's a
01:49 - Unicode character for a left pointing
01:52 - angle bracket which looks like this we
01:54 - will use the Unicode character of
01:57 - Ampersand # 1
02:00 - 094 I think that looks better but you do
02:03 - you all right then let's create a right
02:05 - angle bracket with another button the
02:08 - number is
02:11 - one95 so that will create a button with
02:14 - an arrow that points to the right for
02:16 - the previous button the left one I will
02:18 - assign a class of prev meaning
02:22 - previous and the next button will have a
02:24 - class of
02:26 - next when we click on these buttons
02:29 - we'll call A JavaScript function we need
02:31 - to set the onclick vent Handler equal to
02:34 - a JavaScript function for the previous
02:36 - button we'll call a function of prev
02:39 - slide meaning
02:41 - previous and for the next button we will
02:44 - call a function of next slide to go to
02:48 - the next
02:50 - slide okay and that is all the HTML that
02:53 - we need for now let's go to our CSS
02:56 - stylesheet we will select our class of
02:59 - slider that contains everything class
03:02 - slider we're going to use relative
03:06 - positioning these elements will move
03:08 - relative to their normal position using
03:11 - relative so we have position relative I
03:15 - will set a width of
03:17 - 100% as well as margin Auto to Center
03:20 - everything
03:21 - horizontally now just in case if our
03:23 - images are really big I will set the
03:25 - Overflow property to be hidden so take
03:28 - our class of slider
03:30 - select all the images with these images
03:33 - I will set their width to be
03:35 - 100% and for now I will set the display
03:38 - property to be none we don't want to
03:41 - display all the images right away so
03:43 - they should
03:44 - disappear let's add a little bit of
03:46 - functionality before continuing let's go
03:48 - to our Javascript file I'm going to
03:51 - create a node list of all the images
03:54 - within our class of slides so I will
03:56 - create a constant of slides which will
03:59 - will be a node list equals
04:02 - document. query selector all we will
04:07 - select all elements within the class of
04:10 - slides that are images image elements we
04:14 - will also declare an index of the
04:15 - current slide let slide index so this
04:19 - will be zero initially to start at the
04:22 - first slide we'll be using the set
04:24 - interval function set interval will
04:27 - return an ID that we can work with so we
04:29 - will declare a variable to hold to that
04:32 - let
04:34 - interval ID for now I'll set it to be
04:37 - null meaning no
04:38 - value okay let's declare our functions
04:42 - we will have a function to
04:45 - initialize our
04:47 - slider this will populate our web
04:49 - browser with the first image when we
04:51 - call this function then we need a
04:53 - function for show Slide there will be
04:57 - one parameter an index
05:01 - an index of the next slide we would like
05:02 - to go
05:03 - to a function for the previous slide
05:07 - prev slide and a function for next slide
05:12 - function next
05:15 - slide within our function of initialized
05:18 - slider we will take our node list of
05:21 - slides at index of our current slide
05:24 - index which will be zero initially I
05:27 - will access the class list
05:30 - and add a
05:32 - class of display slide which we still
05:36 - need to work with and then we will call
05:38 - this function right
05:41 - away okay we need to build this class
05:43 - still display
05:45 - slide we will select all image elements
05:48 - that have a class within their class
05:50 - list of display
05:54 - slide if an image has this class we will
05:57 - set their display property to display as
06:00 - a block we should get our first
06:03 - image if you would like although it's
06:06 - not necessary we could display this
06:09 - image after all of the Dom content loads
06:12 - by using an event listener here's how if
06:14 - you would prefer to wait for all the Dom
06:16 - content to load we can take our
06:19 - document add an event
06:22 - listener we will wait for the event of
06:26 - Dom content loaded
06:30 - once all of the Dom content loads pass
06:33 - in a call back to initialize slider so
06:36 - this would work too and I would say it's
06:37 - the preferred way rather than just
06:39 - calling this function initially wait for
06:41 - all the Dom content to load then display
06:44 - our first image by calling this function
06:46 - within the initialized slider function
06:49 - we will use the set interval
06:52 - function we will call the next slide
06:55 - function after a given amount of seconds
06:58 - let's say after 5 seconds I would like
07:01 - to go to the next slide and display the
07:02 - next image whatever is next within our
07:05 - node list in order for us to work with
07:07 - this interval this function is going to
07:09 - return an interval ID so we can clear it
07:12 - later if we need to we will take our
07:14 - interval ID set it equal to the set
07:17 - interval
07:18 - function so I'm going to
07:22 - console.log my interval ID just to see
07:24 - what it is so let's save and run
07:28 - everything go to console so this
07:31 - interval has an ID of one if I need to
07:34 - clear this set interval function I can
07:36 - access it by its ID which is currently
07:39 - one and we can get rid of this
07:41 - line to avoid displaying an image if we
07:44 - don't have one we can wrap these two
07:46 - lines of code within an if
07:48 - statement we will check if our node list
07:52 - of slides its length property is greater
07:56 - than zero if we do have slides
08:00 - then display it and use the set interval
08:02 - function if there's no slides no images
08:06 - then don't do
08:08 - this okay then we're going to go to the
08:10 - next slide
08:11 - function we're going to increment slide
08:14 - index by one slide index
08:17 - Plus+ and then we will call the show
08:20 - slide function pass in our slide index
08:23 - after incrementing it and that is all we
08:25 - need for next slide then we have the
08:27 - show slide function with in our show
08:29 - slide function we will access our node
08:32 - list of
08:34 - slides use the for each method to
08:37 - iterate through all of them I would like
08:39 - to take each slide Arrow do this take
08:44 - each slide access its class
08:47 - list then remove a class from the class
08:50 - list we will remove the class of display
08:55 - slide if it's time to move to the next
08:57 - slide we don't want to display the
08:59 - current slide anymore we'll remove
09:01 - display slide so that it's no longer
09:04 - displaying as a block remove these
09:06 - properties then outside of the for each
09:09 - method we will add display slide to the
09:11 - next slide then we will take our slides
09:15 - at index of slide
09:18 - index access the class list of the next
09:22 - slide then we will add a new class add
09:26 - the class of display slide
09:29 - so that it displays as a
09:32 - block and let's see if this works after
09:36 - 5 Seconds we should move to the next
09:39 - slide and that does in fact work let's
09:42 - wait again for the next
09:44 - slide and that has worked
09:47 - too we need to reset our slide index
09:50 - because right now we're going out of
09:51 - bounds we only have three slides in this
09:53 - example within our show slide function
09:56 - We'll add an if statement and an an lse
09:59 - if
10:03 - statement if we reach the end of our
10:05 - slides we need to reset the slide index
10:08 - and set it back to be zero if our index
10:11 - that's passed
10:12 - in is greater than or equal to our node
10:17 - list of slides length property if we
10:20 - reach the end we need to take our slide
10:22 - index and reset it to be
10:24 - zero now if we go backwards with the
10:27 - previous button if our index is less
10:30 - than
10:31 - zero we will take the slide
10:34 - index set it equal to our slides length
10:39 - property minus one to set it to the end
10:42 - if we're on the first slide and we hit
10:44 - the previous button that will bring us
10:46 - to the last slide these images should
10:48 - Loop let's see if that does
10:56 - work so we're on our green car and we
10:58 - should go to our blue car car next and
11:00 - that does work our initialized slider
11:03 - function is done if we click on the next
11:05 - button we should be able to go to the
11:06 - next slide right
11:10 - away now we have to work on the previous
11:12 - button and add some functionality to
11:14 - that within the previous slide function
11:18 - we will take our slide index and
11:20 - decrement it with minus minus then call
11:23 - the show slide function pass in the
11:25 - current index now we should be able to
11:28 - move forward and
11:31 - back now if we hit the previous button
11:34 - because we want to look at an image the
11:36 - timer is still going we'll still go to
11:37 - the next slide if we would like to take
11:39 - some time to admire one of these images
11:41 - we can clear the set interval function
11:44 - by using its interval
11:45 - ID so if somebody were to hit the
11:47 - previous button let's clear the timer we
11:50 - will use the clear interval function we
11:53 - will pass in that interval
11:57 - ID our set interval function is still
11:59 - going to move the slides forward but if
12:01 - I were to hit the previous
12:03 - button that interval is going to
12:06 - stop we are done with all of our
12:08 - JavaScript functionality we're going to
12:10 - apply some CSS styling to the buttons
12:12 - and even add a transition animation to
12:14 - the next
12:16 - image we will style our buttons
12:19 - next within our class of slider select
12:22 - all
12:23 - buttons I will set the position property
12:26 - to be
12:27 - absolute
12:30 - positions an element relative to its
12:32 - parent meaning the slider
12:36 - element with absolute positioning I will
12:39 - set the top property to be
12:42 - 50% these buttons will then be
12:44 - positioned on the Y AIS at 50% meaning
12:47 - the middle then I will use the transform
12:52 - property I will translate them on the Y
12:55 - AIS by minus
12:57 - 50% Translate Y is a function we're
13:01 - moving these buttons up by 50% of the
13:04 - element's height that will put this
13:06 - button right in the middle take 50% of
13:08 - the height of the button Move It Up by
13:10 - that amount I'll increase the font size
13:14 - font size 25 pixels or better yet let's
13:17 - do like 2
13:19 - RM okay now for the background
13:22 - color I'll set it to be black but I'm
13:25 - going to lower the alpha on it so it's
13:28 - transparent
13:30 - I'll set the alpha to be
13:32 - 50% and for the font color color I'll
13:36 - set that to be
13:37 - white okay you can see our two buttons
13:39 - are overlapping currently I'm going to
13:42 - remove the border around the buttons
13:44 - border
13:45 - none and change our cursor to be a
13:49 - pointer if we hover over one of the
13:51 - buttons so these buttons each have a
13:54 - class previous and next let's select the
13:58 - previous class
13:59 - CL I will set the left property to be
14:02 - zero to left align it and with the next
14:06 - class that's the next button I will set
14:10 - the right property to be zero to align
14:12 - it to the
14:13 - right I'm also going to add a little bit
14:15 - of padding too around the buttons let's
14:17 - add some padding
14:20 - here
14:22 - padding 10 pixels by 15
14:25 - pixels that looks pretty good we going
14:29 - to add an animation at Key frames we
14:33 - need an animation name we will name this
14:35 - animation fade for a fade
14:38 - effect from this property of
14:43 - opacity I can't spell today 0.5 meaning
14:47 - 50% to this property
14:52 - opacity one for 100% when a new image is
14:56 - displayed the opacity is going to be 50%
14:58 - % so it's transparent then after the
15:01 - animation is complete set it to be one
15:03 - for 100% now we just have to utilize
15:06 - this animation of fade all images that
15:09 - have the display slide class we will set
15:12 - their animation name when that image is
15:15 - displayed to be fade how long do we want
15:18 - this animation to take we will set the
15:20 - animation duration to be about 1.5
15:25 - seconds okay let's see if this works we
15:28 - should get a fade animation when each
15:30 - new slide
15:33 - appears we can move
15:35 - forward and we can move
15:38 - back all right everybody so that is an
15:40 - image slider that you can create using
15:42 - JavaScript HTML and
15:47 - CSS

Cleaned transcript:

hey what's going on everybody so in today's video I'm going to show you how we can create an image slider program using JavaScript you will need some images to work with I would recommend finding three or more somewhat related images to whatever you would like to create an image slider for once you find your images put them within your website folder and we are ready to begin okay let's do this thing everybody so we will create a development to contain everything this development will have a class of slider within this development we will create another div element this development will have a class of slides to contain our images within this inner div element we will create three image elements the first image will have a class of slide with this image element I will set the source attribute to be a relative or absolute file path let's begin with image one whatever you currently have I'll copy the name of this image including the extension so my my image has a name of image 1.jpg and for some reason if this image can't display I'll add some alternative text with the alt attribute let's say image number one and there is my image I will copy this image element paste it twice or once for every image that you have then I have image two and image three let me change those we have image 2 and image three so you should have three or more images depending on what pictures you're using and how many then we're going to add some Arrow buttons for the time being that will be down at the bottom so we will create a button element now you could use a left angle bracket let me zoom in but I think there's a better option there's a Unicode character for a left pointing angle bracket which looks like this we will use the Unicode character of Ampersand # 1 094 I think that looks better but you do you all right then let's create a right angle bracket with another button the number is one95 so that will create a button with an arrow that points to the right for the previous button the left one I will assign a class of prev meaning previous and the next button will have a class of next when we click on these buttons we'll call A JavaScript function we need to set the onclick vent Handler equal to a JavaScript function for the previous button we'll call a function of prev slide meaning previous and for the next button we will call a function of next slide to go to the next slide okay and that is all the HTML that we need for now let's go to our CSS stylesheet we will select our class of slider that contains everything class slider we're going to use relative positioning these elements will move relative to their normal position using relative so we have position relative I will set a width of 100% as well as margin Auto to Center everything horizontally now just in case if our images are really big I will set the Overflow property to be hidden so take our class of slider select all the images with these images I will set their width to be 100% and for now I will set the display property to be none we don't want to display all the images right away so they should disappear let's add a little bit of functionality before continuing let's go to our Javascript file I'm going to create a node list of all the images within our class of slides so I will create a constant of slides which will will be a node list equals document. query selector all we will select all elements within the class of slides that are images image elements we will also declare an index of the current slide let slide index so this will be zero initially to start at the first slide we'll be using the set interval function set interval will return an ID that we can work with so we will declare a variable to hold to that let interval ID for now I'll set it to be null meaning no value okay let's declare our functions we will have a function to initialize our slider this will populate our web browser with the first image when we call this function then we need a function for show Slide there will be one parameter an index an index of the next slide we would like to go to a function for the previous slide prev slide and a function for next slide function next slide within our function of initialized slider we will take our node list of slides at index of our current slide index which will be zero initially I will access the class list and add a class of display slide which we still need to work with and then we will call this function right away okay we need to build this class still display slide we will select all image elements that have a class within their class list of display slide if an image has this class we will set their display property to display as a block we should get our first image if you would like although it's not necessary we could display this image after all of the Dom content loads by using an event listener here's how if you would prefer to wait for all the Dom content to load we can take our document add an event listener we will wait for the event of Dom content loaded once all of the Dom content loads pass in a call back to initialize slider so this would work too and I would say it's the preferred way rather than just calling this function initially wait for all the Dom content to load then display our first image by calling this function within the initialized slider function we will use the set interval function we will call the next slide function after a given amount of seconds let's say after 5 seconds I would like to go to the next slide and display the next image whatever is next within our node list in order for us to work with this interval this function is going to return an interval ID so we can clear it later if we need to we will take our interval ID set it equal to the set interval function so I'm going to console.log my interval ID just to see what it is so let's save and run everything go to console so this interval has an ID of one if I need to clear this set interval function I can access it by its ID which is currently one and we can get rid of this line to avoid displaying an image if we don't have one we can wrap these two lines of code within an if statement we will check if our node list of slides its length property is greater than zero if we do have slides then display it and use the set interval function if there's no slides no images then don't do this okay then we're going to go to the next slide function we're going to increment slide index by one slide index Plus+ and then we will call the show slide function pass in our slide index after incrementing it and that is all we need for next slide then we have the show slide function with in our show slide function we will access our node list of slides use the for each method to iterate through all of them I would like to take each slide Arrow do this take each slide access its class list then remove a class from the class list we will remove the class of display slide if it's time to move to the next slide we don't want to display the current slide anymore we'll remove display slide so that it's no longer displaying as a block remove these properties then outside of the for each method we will add display slide to the next slide then we will take our slides at index of slide index access the class list of the next slide then we will add a new class add the class of display slide so that it displays as a block and let's see if this works after 5 Seconds we should move to the next slide and that does in fact work let's wait again for the next slide and that has worked too we need to reset our slide index because right now we're going out of bounds we only have three slides in this example within our show slide function We'll add an if statement and an an lse if statement if we reach the end of our slides we need to reset the slide index and set it back to be zero if our index that's passed in is greater than or equal to our node list of slides length property if we reach the end we need to take our slide index and reset it to be zero now if we go backwards with the previous button if our index is less than zero we will take the slide index set it equal to our slides length property minus one to set it to the end if we're on the first slide and we hit the previous button that will bring us to the last slide these images should Loop let's see if that does work so we're on our green car and we should go to our blue car car next and that does work our initialized slider function is done if we click on the next button we should be able to go to the next slide right away now we have to work on the previous button and add some functionality to that within the previous slide function we will take our slide index and decrement it with minus minus then call the show slide function pass in the current index now we should be able to move forward and back now if we hit the previous button because we want to look at an image the timer is still going we'll still go to the next slide if we would like to take some time to admire one of these images we can clear the set interval function by using its interval ID so if somebody were to hit the previous button let's clear the timer we will use the clear interval function we will pass in that interval ID our set interval function is still going to move the slides forward but if I were to hit the previous button that interval is going to stop we are done with all of our JavaScript functionality we're going to apply some CSS styling to the buttons and even add a transition animation to the next image we will style our buttons next within our class of slider select all buttons I will set the position property to be absolute positions an element relative to its parent meaning the slider element with absolute positioning I will set the top property to be 50% these buttons will then be positioned on the Y AIS at 50% meaning the middle then I will use the transform property I will translate them on the Y AIS by minus 50% Translate Y is a function we're moving these buttons up by 50% of the element's height that will put this button right in the middle take 50% of the height of the button Move It Up by that amount I'll increase the font size font size 25 pixels or better yet let's do like 2 RM okay now for the background color I'll set it to be black but I'm going to lower the alpha on it so it's transparent I'll set the alpha to be 50% and for the font color color I'll set that to be white okay you can see our two buttons are overlapping currently I'm going to remove the border around the buttons border none and change our cursor to be a pointer if we hover over one of the buttons so these buttons each have a class previous and next let's select the previous class CL I will set the left property to be zero to left align it and with the next class that's the next button I will set the right property to be zero to align it to the right I'm also going to add a little bit of padding too around the buttons let's add some padding here padding 10 pixels by 15 pixels that looks pretty good we going to add an animation at Key frames we need an animation name we will name this animation fade for a fade effect from this property of opacity I can't spell today 0.5 meaning 50% to this property opacity one for 100% when a new image is displayed the opacity is going to be 50% % so it's transparent then after the animation is complete set it to be one for 100% now we just have to utilize this animation of fade all images that have the display slide class we will set their animation name when that image is displayed to be fade how long do we want this animation to take we will set the animation duration to be about 1.5 seconds okay let's see if this works we should get a fade animation when each new slide appears we can move forward and we can move back all right everybody so that is an image slider that you can create using JavaScript HTML and CSS
