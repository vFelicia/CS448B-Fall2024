With timestamps:

00:00 - yo what's going on everybody it's you
00:02 - bro hope you're doing well
00:03 - and in today's video i'm going to show
00:04 - you all how the filter function works in
00:07 - python
00:07 - so sit back relax and enjoy the show
00:12 - if you find this video helpful please
00:14 - remember to like comment
00:16 - and subscribe your support will help
00:18 - keep this channel running
00:20 - all right all right let's discuss the
00:22 - filter function
00:23 - the filter function creates a collection
00:25 - of elements from an iterable
00:28 - for which a function returns true now
00:30 - what the heck does that mean
00:32 - let me explain let's say that we have a
00:34 - list of tuples named friends
00:36 - each tuple has the name of a friend as
00:39 - well as their age
00:40 - i just made up some ages for all of
00:41 - these friends what i would like to do is
00:43 - to create a
00:44 - separate list for all the friends that
00:46 - are 18 or older
00:47 - so let's say that we're all going out
00:49 - drinking and i would like to create a
00:51 - list of my drinking bodies
00:52 - because they're of drinking age i'm in
00:54 - the united states and the drinking age
00:56 - is currently 21 but i think worldwide
00:58 - it's 18
00:59 - so let's go with 18 for this example
01:01 - since i have a worldwide audience
01:03 - all right now with this filter function
01:05 - we have to pass in
01:06 - our iterable as well as a function to
01:08 - get anybody's edge that is over 18.
01:11 - so let's begin by writing a lambda
01:13 - function for this expression here our
01:15 - filter function
01:16 - so let's say h equals lambda
01:20 - data will be the parameter colon data
01:24 - at index one so the first index
01:28 - the first column in this chart here
01:30 - would be zero for all the names
01:32 - the next index of one would be all the
01:34 - ages
01:35 - data at index one is greater than or
01:38 - equal to
01:40 - 18 and that is it that is our lambda
01:42 - function
01:43 - and now we're going to filter our
01:45 - iterable by this function
01:47 - of age so let's write filter
01:51 - pass in our function which is edge comma
01:54 - and our iterable of friends now this
01:58 - filter function will return a filter
02:00 - object you can easily cast this
02:01 - i would like to cast my friends list
02:04 - back into a list
02:07 - and i will assign this to a new list
02:09 - let's say
02:10 - drinking buddies
02:14 - equals list filter age
02:17 - and friends and i should be able to
02:20 - print
02:20 - all of the friends that are 18 or older
02:23 - for i
02:24 - in drinking bodies
02:28 - print i
02:32 - and we have rachel monica chandler and
02:35 - ross
02:36 - well everyone that is the filter
02:37 - function it creates a collection of
02:39 - elements
02:40 - from an iterable for which a function
02:42 - returns true
02:43 - i like to think of it as the search
02:45 - results we're searching for any results
02:48 - that meet this criteria where age is
02:50 - greater than or equal to 18
02:52 - and then you can create a separate
02:53 - collection or other list if you want
02:55 - from the results
02:56 - but yeah that is how the filter function
02:58 - works in python

Cleaned transcript:

yo what's going on everybody it's you bro hope you're doing well and in today's video i'm going to show you all how the filter function works in python so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right all right let's discuss the filter function the filter function creates a collection of elements from an iterable for which a function returns true now what the heck does that mean let me explain let's say that we have a list of tuples named friends each tuple has the name of a friend as well as their age i just made up some ages for all of these friends what i would like to do is to create a separate list for all the friends that are 18 or older so let's say that we're all going out drinking and i would like to create a list of my drinking bodies because they're of drinking age i'm in the united states and the drinking age is currently 21 but i think worldwide it's 18 so let's go with 18 for this example since i have a worldwide audience all right now with this filter function we have to pass in our iterable as well as a function to get anybody's edge that is over 18. so let's begin by writing a lambda function for this expression here our filter function so let's say h equals lambda data will be the parameter colon data at index one so the first index the first column in this chart here would be zero for all the names the next index of one would be all the ages data at index one is greater than or equal to 18 and that is it that is our lambda function and now we're going to filter our iterable by this function of age so let's write filter pass in our function which is edge comma and our iterable of friends now this filter function will return a filter object you can easily cast this i would like to cast my friends list back into a list and i will assign this to a new list let's say drinking buddies equals list filter age and friends and i should be able to print all of the friends that are 18 or older for i in drinking bodies print i and we have rachel monica chandler and ross well everyone that is the filter function it creates a collection of elements from an iterable for which a function returns true i like to think of it as the search results we're searching for any results that meet this criteria where age is greater than or equal to 18 and then you can create a separate collection or other list if you want from the results but yeah that is how the filter function works in python
