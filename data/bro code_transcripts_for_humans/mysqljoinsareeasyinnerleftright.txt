With timestamps:

00:00 - hey everybody welcome back again in
00:02 - today's video I'm going to be explaining
00:03 - joins in MySQL a join is a clause that
00:07 - is used to combine rows from two or more
00:09 - tables based on a related column between
00:12 - them such as a foreign key here's an
00:14 - example I have two tables a table of
00:17 - transactions and a table of customers
00:19 - think of these two tables as a Venn
00:21 - diagram transactions will be the table
00:23 - on the left customers will be the table
00:25 - on the right whatever data they have in
00:27 - common is the middle part of our Venn
00:30 - diagram for my demonstration to make
00:31 - more sense I will need to add a few
00:33 - extra rows feel free to pause the video
00:35 - if you need to catch up I will insert
00:38 - into transactions a new row the amount
00:41 - is one dollar the customer ID is null so
00:44 - not all transactions can have a customer
00:46 - ID that foreign key here's a scenario
00:49 - suppose that somebody comes in pays for
00:52 - a soda with cash well we wouldn't have a
00:54 - customer ID right if a customer instead
00:57 - paid with a credit card we could track
00:58 - who that customer was there may be a
01:01 - customer ID who initiated that credit
01:03 - card charge I'm going to insert this row
01:07 - and here's our new transactions table
01:10 - not all rows have a customer ID
01:13 - then let's add one more customer
01:16 - insert into customers first name last
01:19 - name will be poppy Puff
01:23 - let's select all of our customers now
01:26 - not all transactions have a customer ID
01:29 - and not all customers have ever
01:31 - initiated a transaction they could be
01:34 - registered as a customer but they have
01:36 - never actually bought anything yet using
01:38 - joins let's take a look at what data
01:40 - these two tables have in common we'll
01:43 - discuss inner joins left joins and right
01:45 - joins let's begin with an inner join to
01:49 - create an inner join between these two
01:50 - tables
01:51 - you would type select all from which
01:55 - table would you like to be on the left
01:57 - think of that Venn diagram our
01:59 - transactions table will be on the left
02:02 - from transactions inner join
02:06 - whatever table you would like to be on
02:08 - the right in this case customers
02:11 - on we're going to join these two tables
02:15 - together by the foreign key from
02:16 - transactions we'll take
02:20 - transactions.the name of the foreign key
02:22 - column which was customer ID
02:26 - equals the table on the right dot the
02:30 - name of the primary key column which was
02:32 - customer ID
02:34 - then we will execute the statement and
02:36 - here's our new table
02:38 - we have created an inner join from these
02:41 - two tables based solely on what they
02:43 - have in common if you remember we don't
02:46 - have that Row for that transaction for
02:48 - one dollar that doesn't have a customer
02:50 - ID as well as our customer poppy puff
02:52 - there's no role for her in this table
02:54 - what we're telling MySQL is to select
02:57 - all rows from these two tables that have
03:00 - matching customer ideas so that's why
03:03 - some data was excluded one thing you
03:05 - could do with a join this applies to
03:07 - left joins and right joins as well you
03:10 - don't necessarily need to display every
03:12 - single column from both tables you can
03:15 - select specific columns
03:17 - let's select our transaction ID the
03:22 - amount
03:23 - the first name
03:25 - then the last name
03:28 - this would make it a lot easier to find
03:31 - the first and last name of who initiated
03:34 - a transaction at a given time we know
03:36 - who bought which order so that is an
03:39 - inner join join together any matching
03:41 - rows based on some Link in this case
03:44 - we're joining these two tables together
03:45 - by their customer ID
03:48 - now with the left join we are going to
03:51 - display everything from the table on the
03:53 - left but let's select all
03:56 - with the left join we will display
03:58 - everything from the table on the left
04:00 - our transactions however if there is a
04:03 - matching customer ID pull in any
04:06 - relevant data from the table on the
04:08 - right even though there's no customer ID
04:10 - with this latest row we're still going
04:12 - to display it with a left join but
04:15 - there's no data to pull in from the
04:16 - right table because there's no
04:18 - registered customer ID
04:20 - with the right join
04:22 - we will display the entire table on the
04:24 - right if there's any matches we will
04:27 - pull in any matching rows from the left
04:29 - we are displaying all of our customers
04:31 - if any of these customers ever initiated
04:34 - a transaction we will include the data
04:37 - from those transactions we still have
04:39 - poppy puff in our table but she has no
04:42 - relevant transactions she never
04:44 - initiated one so yeah everybody those
04:46 - are joins a join is used to combine rows
04:49 - from two or more tables based on a
04:52 - related column between them such as a
04:54 - foreign key like customer ID and that is
04:57 - a quick introduction to joins in MySQL

Cleaned transcript:

hey everybody welcome back again in today's video I'm going to be explaining joins in MySQL a join is a clause that is used to combine rows from two or more tables based on a related column between them such as a foreign key here's an example I have two tables a table of transactions and a table of customers think of these two tables as a Venn diagram transactions will be the table on the left customers will be the table on the right whatever data they have in common is the middle part of our Venn diagram for my demonstration to make more sense I will need to add a few extra rows feel free to pause the video if you need to catch up I will insert into transactions a new row the amount is one dollar the customer ID is null so not all transactions can have a customer ID that foreign key here's a scenario suppose that somebody comes in pays for a soda with cash well we wouldn't have a customer ID right if a customer instead paid with a credit card we could track who that customer was there may be a customer ID who initiated that credit card charge I'm going to insert this row and here's our new transactions table not all rows have a customer ID then let's add one more customer insert into customers first name last name will be poppy Puff let's select all of our customers now not all transactions have a customer ID and not all customers have ever initiated a transaction they could be registered as a customer but they have never actually bought anything yet using joins let's take a look at what data these two tables have in common we'll discuss inner joins left joins and right joins let's begin with an inner join to create an inner join between these two tables you would type select all from which table would you like to be on the left think of that Venn diagram our transactions table will be on the left from transactions inner join whatever table you would like to be on the right in this case customers on we're going to join these two tables together by the foreign key from transactions we'll take transactions.the name of the foreign key column which was customer ID equals the table on the right dot the name of the primary key column which was customer ID then we will execute the statement and here's our new table we have created an inner join from these two tables based solely on what they have in common if you remember we don't have that Row for that transaction for one dollar that doesn't have a customer ID as well as our customer poppy puff there's no role for her in this table what we're telling MySQL is to select all rows from these two tables that have matching customer ideas so that's why some data was excluded one thing you could do with a join this applies to left joins and right joins as well you don't necessarily need to display every single column from both tables you can select specific columns let's select our transaction ID the amount the first name then the last name this would make it a lot easier to find the first and last name of who initiated a transaction at a given time we know who bought which order so that is an inner join join together any matching rows based on some Link in this case we're joining these two tables together by their customer ID now with the left join we are going to display everything from the table on the left but let's select all with the left join we will display everything from the table on the left our transactions however if there is a matching customer ID pull in any relevant data from the table on the right even though there's no customer ID with this latest row we're still going to display it with a left join but there's no data to pull in from the right table because there's no registered customer ID with the right join we will display the entire table on the right if there's any matches we will pull in any matching rows from the left we are displaying all of our customers if any of these customers ever initiated a transaction we will include the data from those transactions we still have poppy puff in our table but she has no relevant transactions she never initiated one so yeah everybody those are joins a join is used to combine rows from two or more tables based on a related column between them such as a foreign key like customer ID and that is a quick introduction to joins in MySQL
