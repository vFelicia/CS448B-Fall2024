With timestamps:

00:00 - hey what's going on everybody it's your
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys all
00:04 - about the printf method in java so
00:07 - sit back relax and enjoy the show
00:12 - make sure you like comment and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:19 - hello all welcome back to another video
00:22 - for this topic i'm going to be
00:23 - explaining the printf
00:25 - method this is an optional method to
00:27 - control
00:28 - format and display text to the console
00:30 - window
00:31 - here's an example of the printf method
00:33 - and this is different
00:34 - from print and print line with the
00:37 - printf method there are two arguments we
00:40 - need to place within the parentheses
00:41 - of the printf method the first is a
00:44 - format string
00:45 - a string that you would like to display
00:47 - to the console window
00:48 - and second we can add either an object a
00:51 - variable
00:52 - or a value to keep it simple for now i
00:54 - just added a value of
00:56 - one two three so we can format
00:59 - some value and place it at some position
01:02 - within the string
01:03 - the position in which we want to add
01:06 - this value whatever it is
01:08 - can be added to wherever we add a format
01:11 - specifier which is represented by a
01:13 - percent sign
01:14 - let's say we would like to add this
01:16 - value at the end of our format string
01:18 - so we would add a format specifier at
01:21 - the end
01:21 - that is represented by the percent sign
01:24 - and there is a certain
01:25 - amount and number of combinations and
01:28 - characters that we can add
01:29 - after this format specifier and this
01:31 - will format
01:32 - our value a certain way if we simply
01:35 - need to display a decimal number
01:37 - we're going to add a d it's kind of like
01:39 - a secret code that's how i think of it
01:41 - at least
01:42 - so if we add a percent sign and d we
01:45 - will add
01:45 - this decimal value at this position
01:48 - within our format string
01:50 - and that will appear down here i could
01:52 - place this format specifier someplace
01:54 - else
01:55 - and this value would be added to
01:57 - wherever i put
01:58 - this format specifier so if i added this
02:01 - format specifier to the beginning of my
02:03 - format string
02:04 - then this value will appear at the
02:06 - beginning of my string
02:08 - so with the printf method you need a
02:10 - format string and either an object
02:12 - a variable or a value depending on where
02:15 - you place
02:16 - this format specifier the percent sign
02:19 - your value or variable will appear at
02:21 - this location
02:22 - think of it as you're replacing the
02:24 - format specifier
02:26 - with this value and depending on the
02:28 - combination
02:29 - of flags numbers and characters
02:32 - after this format specifier this is
02:35 - going to format
02:36 - and display your value a certain way
02:38 - depending on
02:39 - what combination of letters and
02:42 - characters comes after
02:43 - let's begin with conversion characters
02:45 - this is a letter that appears
02:47 - after the format specifier and the
02:50 - conversion character
02:51 - corresponds with the data type of the
02:54 - value that we're attempting to add
02:56 - so d corresponds with decimal numbers so
02:59 - we could add an integer
03:01 - at this location so let's go over a few
03:04 - of the conversion characters that are
03:06 - available to us
03:07 - but we'll need to create a few variables
03:09 - to do so so let's begin with
03:11 - a boolean boolean let's call this my
03:14 - boolean
03:15 - and i will set this to true
03:19 - we'll need a character so let's say char
03:22 - my char equals and then pick a symbol
03:25 - that you want to use
03:26 - we'll need a string string my string
03:30 - equals maybe your name
03:34 - we'll need an integer int
03:37 - my int and assign it a number i'm just
03:40 - going to pick one
03:41 - at random let's say 50. and
03:44 - let's add a double value so
03:47 - double my double equals maybe one
03:51 - thousand
03:52 - okay so these are not all of the data
03:55 - types that are available to us but a few
03:57 - of the more common ones for beginners so
04:00 - let's use the printf method and cover a
04:02 - few of the conversion characters
04:04 - so we will need to use the printf method
04:08 - system.out.printline printf and
04:11 - let's just use the format specifier so
04:14 - if we need to display a boolean value
04:17 - that would be percent then b for the
04:20 - conversion character to display a
04:22 - boolean
04:22 - and we need to add a second argument
04:26 - that is the value that we're attempting
04:27 - to add so let's add
04:29 - my boolean and we can now display
04:33 - whatever this value is so for
04:36 - characters that is actually percent
04:39 - c and let's display
04:42 - my character
04:47 - okay so strings are percent
04:50 - s so let's copy this
04:53 - paste it that is percent s and this will
04:57 - display a string
05:02 - should probably get rid of that line too
05:04 - okay
05:05 - and integers are d for decimal but we've
05:10 - covered that already
05:12 - so percent d for a integer
05:16 - let's display my int which displays 50
05:22 - and percent f for
05:26 - a double value so that's for floating
05:28 - point numbers and
05:30 - double values so let's display my double
05:35 - so remember with conversion characters
05:38 - these are
05:39 - certain letters that follow the format
05:41 - specifier the percent sign
05:43 - and in order to display a certain object
05:46 - variable or value
05:47 - you need a matching conversion character
05:50 - to follow after the format specifier
05:53 - b for booleans c for characters as for
05:56 - strings
05:56 - d for integers and f for floats or
05:59 - doubles
06:00 - our next field is the width field so i
06:03 - already created some notes on this
06:04 - the width field sets the minimum number
06:07 - of characters
06:08 - to be written as output so here's an
06:10 - example
06:11 - we have a format string and we would
06:13 - like to display
06:15 - a value that is of the string data type
06:18 - so let's say at the end we're going to
06:19 - add
06:20 - percent s to display the string we can
06:23 - set a minimum
06:24 - number of characters to display so let's
06:27 - say
06:27 - we want to display at least 10
06:29 - characters
06:30 - for this string so before the conversion
06:34 - character we can set a width and this is
06:36 - a
06:36 - number so if we want 10 spaces worth of
06:39 - room
06:40 - to display the string we would add 10 or
06:43 - some other number before
06:44 - the conversion character so before we
06:47 - display this i'm just going
06:48 - to turn these lines into comments and we
06:50 - will display
06:51 - hello plus my string which states bro
06:55 - so this prints a minimum of 10
06:57 - characters
06:58 - for the name including the length of the
07:00 - name so we have
07:02 - one two three four five six
07:05 - seven eight nine ten plus the space that
07:08 - was here already too
07:10 - so you can set a width and this will
07:12 - display a minimum
07:14 - number of characters to be written out
07:16 - and if you set this to be a negative
07:18 - number
07:19 - that's actually a flag that we'll get
07:20 - into in just a little bit
07:22 - that'll actually left justify the text
07:25 - within
07:25 - the space that we're allocating to
07:27 - display this value
07:30 - so this text is now left justified but
07:33 - all of that empty space
07:34 - now comes after my text my string
07:37 - next on our list is the precision field
07:40 - and what this will do
07:41 - is set a number of digits of precision
07:44 - when outputting
07:45 - floating point values these include the
07:47 - data types of floats
07:49 - or doubles here's an example i have a
07:52 - format string that states
07:54 - you have this much money and then we
07:56 - have a format specifier that will
07:58 - display
07:59 - my double this is the default so we need
08:01 - at least
08:02 - percent f and this will display one
08:05 - thousand
08:06 - as well as six zeros after our decimal
08:10 - we can limit the amount of digits that
08:12 - will display
08:13 - after this decimal by using the
08:15 - precision field
08:16 - so we write this before the conversion
08:19 - character
08:20 - let's say we would like to limit the
08:21 - amount of digits that we have
08:23 - after this decimal to 2 to represent
08:26 - cents
08:27 - so i'm going to add 0.2 for two digits
08:31 - and this will limit the amount of digits
08:33 - that will appear after
08:34 - the decimal portion and if we change
08:36 - this to a different number like one
08:38 - well then this will only display one so
08:41 - that is the precision field it will set
08:43 - a number of digits of precision when
08:46 - outputting
08:47 - floating point values and lastly we have
08:50 - flags
08:50 - these will add an effect to output based
08:53 - on the flag
08:54 - added to the format specifier here's a
08:56 - few
08:57 - we can left-justify we can output a plus
09:00 - or minus sign for a numeric value we can
09:03 - have numeric values be padded with zeros
09:06 - and we can separate large numbers by the
09:09 - thousands by using a comma
09:11 - let's try a few of these out let's copy
09:13 - what we have for our example for
09:15 - precision
09:16 - so i'm going to copy this line and let's
09:19 - get rid of the precision
09:20 - so we have percent f let's left justify
09:24 - this
09:25 - so i'm going to set a width maybe 20 and
09:28 - set this to negative
09:29 - so this will left justify all of that
09:32 - although it's a little difficult to see
09:34 - i'm going to get rid of the left justify
09:36 - and this will now be
09:38 - right justified so this would be useful
09:40 - if you need to line up a bunch of
09:42 - numbers
09:43 - we can output a plus or minus sign for a
09:45 - numeric value
09:46 - so i'm going to add plus f and this
09:50 - should be
09:51 - plus one thousand if this was a negative
09:54 - number
09:54 - like negative one thousand this should
09:57 - appear as a
09:58 - minus now we can also pad
10:02 - our number with zeros so let's set
10:05 - a width of maybe 20 and we will
10:09 - right justify it so we do not need a
10:11 - negative sign and we are going to add
10:13 - zero so we now have a bunch of zeros
10:18 - before
10:19 - our number of 1000 and lastly
10:23 - we can separate each thousands place
10:25 - with a comma
10:26 - simply by adding a comma as the flag
10:30 - so percent comma f
10:35 - so at the one thousands place we now
10:37 - have a comma
10:39 - so that is all what the printf method is
10:41 - it's an optional method to control
10:43 - format and display text to the console
10:46 - window
10:46 - we need at least two arguments a format
10:49 - string as well as either an object
10:51 - a variable or a value we can add a
10:53 - format specifier
10:55 - within this format string and add a
10:57 - combination
10:58 - of characters and numbers to format our
11:02 - variable value or object
11:03 - a certain way so that is an intro
11:07 - more of a crash course to the printf
11:09 - method if you would like a copy of all
11:10 - this code i will post everything in the
11:12 - comments down below
11:14 - this video was a lot of work feel free
11:16 - to smash that like button
11:17 - drop a comment down below and subscribe
11:19 - if you'd like to become a fellow bro

Cleaned transcript:

hey what's going on everybody it's your bro hope you're doing well and in this video i'm going to teach you guys all about the printf method in java so sit back relax and enjoy the show make sure you like comment and subscribe one like equals one prayer for the youtube algorithm hello all welcome back to another video for this topic i'm going to be explaining the printf method this is an optional method to control format and display text to the console window here's an example of the printf method and this is different from print and print line with the printf method there are two arguments we need to place within the parentheses of the printf method the first is a format string a string that you would like to display to the console window and second we can add either an object a variable or a value to keep it simple for now i just added a value of one two three so we can format some value and place it at some position within the string the position in which we want to add this value whatever it is can be added to wherever we add a format specifier which is represented by a percent sign let's say we would like to add this value at the end of our format string so we would add a format specifier at the end that is represented by the percent sign and there is a certain amount and number of combinations and characters that we can add after this format specifier and this will format our value a certain way if we simply need to display a decimal number we're going to add a d it's kind of like a secret code that's how i think of it at least so if we add a percent sign and d we will add this decimal value at this position within our format string and that will appear down here i could place this format specifier someplace else and this value would be added to wherever i put this format specifier so if i added this format specifier to the beginning of my format string then this value will appear at the beginning of my string so with the printf method you need a format string and either an object a variable or a value depending on where you place this format specifier the percent sign your value or variable will appear at this location think of it as you're replacing the format specifier with this value and depending on the combination of flags numbers and characters after this format specifier this is going to format and display your value a certain way depending on what combination of letters and characters comes after let's begin with conversion characters this is a letter that appears after the format specifier and the conversion character corresponds with the data type of the value that we're attempting to add so d corresponds with decimal numbers so we could add an integer at this location so let's go over a few of the conversion characters that are available to us but we'll need to create a few variables to do so so let's begin with a boolean boolean let's call this my boolean and i will set this to true we'll need a character so let's say char my char equals and then pick a symbol that you want to use we'll need a string string my string equals maybe your name we'll need an integer int my int and assign it a number i'm just going to pick one at random let's say 50. and let's add a double value so double my double equals maybe one thousand okay so these are not all of the data types that are available to us but a few of the more common ones for beginners so let's use the printf method and cover a few of the conversion characters so we will need to use the printf method system.out.printline printf and let's just use the format specifier so if we need to display a boolean value that would be percent then b for the conversion character to display a boolean and we need to add a second argument that is the value that we're attempting to add so let's add my boolean and we can now display whatever this value is so for characters that is actually percent c and let's display my character okay so strings are percent s so let's copy this paste it that is percent s and this will display a string should probably get rid of that line too okay and integers are d for decimal but we've covered that already so percent d for a integer let's display my int which displays 50 and percent f for a double value so that's for floating point numbers and double values so let's display my double so remember with conversion characters these are certain letters that follow the format specifier the percent sign and in order to display a certain object variable or value you need a matching conversion character to follow after the format specifier b for booleans c for characters as for strings d for integers and f for floats or doubles our next field is the width field so i already created some notes on this the width field sets the minimum number of characters to be written as output so here's an example we have a format string and we would like to display a value that is of the string data type so let's say at the end we're going to add percent s to display the string we can set a minimum number of characters to display so let's say we want to display at least 10 characters for this string so before the conversion character we can set a width and this is a number so if we want 10 spaces worth of room to display the string we would add 10 or some other number before the conversion character so before we display this i'm just going to turn these lines into comments and we will display hello plus my string which states bro so this prints a minimum of 10 characters for the name including the length of the name so we have one two three four five six seven eight nine ten plus the space that was here already too so you can set a width and this will display a minimum number of characters to be written out and if you set this to be a negative number that's actually a flag that we'll get into in just a little bit that'll actually left justify the text within the space that we're allocating to display this value so this text is now left justified but all of that empty space now comes after my text my string next on our list is the precision field and what this will do is set a number of digits of precision when outputting floating point values these include the data types of floats or doubles here's an example i have a format string that states you have this much money and then we have a format specifier that will display my double this is the default so we need at least percent f and this will display one thousand as well as six zeros after our decimal we can limit the amount of digits that will display after this decimal by using the precision field so we write this before the conversion character let's say we would like to limit the amount of digits that we have after this decimal to 2 to represent cents so i'm going to add 0.2 for two digits and this will limit the amount of digits that will appear after the decimal portion and if we change this to a different number like one well then this will only display one so that is the precision field it will set a number of digits of precision when outputting floating point values and lastly we have flags these will add an effect to output based on the flag added to the format specifier here's a few we can leftjustify we can output a plus or minus sign for a numeric value we can have numeric values be padded with zeros and we can separate large numbers by the thousands by using a comma let's try a few of these out let's copy what we have for our example for precision so i'm going to copy this line and let's get rid of the precision so we have percent f let's left justify this so i'm going to set a width maybe 20 and set this to negative so this will left justify all of that although it's a little difficult to see i'm going to get rid of the left justify and this will now be right justified so this would be useful if you need to line up a bunch of numbers we can output a plus or minus sign for a numeric value so i'm going to add plus f and this should be plus one thousand if this was a negative number like negative one thousand this should appear as a minus now we can also pad our number with zeros so let's set a width of maybe 20 and we will right justify it so we do not need a negative sign and we are going to add zero so we now have a bunch of zeros before our number of 1000 and lastly we can separate each thousands place with a comma simply by adding a comma as the flag so percent comma f so at the one thousands place we now have a comma so that is all what the printf method is it's an optional method to control format and display text to the console window we need at least two arguments a format string as well as either an object a variable or a value we can add a format specifier within this format string and add a combination of characters and numbers to format our variable value or object a certain way so that is an intro more of a crash course to the printf method if you would like a copy of all this code i will post everything in the comments down below this video was a lot of work feel free to smash that like button drop a comment down below and subscribe if you'd like to become a fellow bro
