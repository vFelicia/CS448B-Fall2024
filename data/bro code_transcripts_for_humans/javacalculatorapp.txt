With timestamps:

00:00 - how's it going everybody it's Ebro here
hope you're doing well and in this video
00:03 - I'm going to teach you guys how we can
make a simple calculator program using
00:07 - Java so let's get into it if you find
this video helpful please remember to
00:13 - Like comment and subscribe your support
will help keep this channel running a
00:18 - read everybody so let's get started so
we're going to create a new Java project
00:23 - I'm going to call this calculator and
then click finish then if it prompts you
00:28 - to create a module I'm going to click
and don't create and then within the
00:32 - source folder let's create a new class
so file new class and I will also call
00:38 - this calculator or you can call this
main call it whatever you want really
00:41 - so calc you later and then I'm going to
check public static void main so I don't
00:47 - have to type in this line and then click
finish
00:50 - so before we forget let's import a few
things so there's three imports that
00:55 - we're going to need import everything
related to Java X dot swing as well as
01:05 - everything related to Java dot AWT and
then lastly import Java dot aw t dot
01:16 - event and that is all the imports that
we need so let's create a constructor
01:23 - for this class so I'm going to do this
maybe right before the main method so we
01:29 - type in the name of the class to create
a constructor so calc you later and then
01:35 - we're going to have this class implement
and action listener so implements action
01:42 - listener and then there is a method that
we have to implement that is the action
01:48 - performed method so within this main
class let's create an instance of our
01:54 - calculator class so we can just type in
calculator let's call this calc equals
01:59 - new calculator all right and then before
the constructor let's declare a few
02:07 - things and then let me just add some
spaces all right so let's declare
02:12 - everything that we'll need
so first we'll need a jframe and we'll
02:16 - call this frame and then we'll need a
text field
02:20 - AJ text field and we'll call it text
field now let's create an array of J
02:29 - buttons so J button then straight braces
for an array and this will hold all of
02:35 - our numbered buttons equals nu J button
and then straight braces and we'll want
02:44 - ten buttons for ten numbers one through
nine and well zero I guess two and we'll
02:50 - create an array of J buttons to hold all
of our function buttons so that's things
02:55 - like add subtract divide equals decimal
so J button straight braces for an array
03:03 - and we'll call these function buttons
equals nu J button this will hold eight
03:11 - buttons let's name all of the function
buttons the number buttons will make
03:19 - anonymous so for the function buttons J
button will have a Add button a sub
03:29 - button a multiply button we'll just call
it mu L button MD well short for
03:37 - multiply and then div for divide button
and let's do this again but on the next
03:43 - line just so everything is organized so
J button and this next row will be for
03:50 - decimal button equals but we'll just say
equ button de L button for delete and
04:01 - CLR for clear button and then we'll
create a J panel to hold all of the
04:08 - separate buttons so this will be J panel
and we will call this panel so we just
04:14 - have a few things left are declared so
I'm going to be reusing one font for all
04:18 - of my buttons so I think it's actually
best if we declare a font that we can
04:22 - reuse easily so what I'm going to type
is font my font you
04:27 - equals new font then within parenthesis
I can specify a font style and I like
04:33 - the font ink free so I'm going to use
that one but use whatever font that you
04:37 - want and then I want this to be bold so
in the next field I'm going to type font
04:43 - dot bold and then a size and I will pick
30 because that's a decent size for my
04:48 - buttons and then lastly we just have a
few double values to declare so double
04:54 - num1 this will be our first number and
let's set this to zero number to equal
05:02 - zero as well and our result that will
also equal zero and then a char value
05:09 - called operator and this will hold the
either the multiply character subtract
05:15 - addition and then division so it's gonna
hold one of those okay that is
05:20 - everything that we need to declare so
let's move on to our constructor and
05:24 - begin here so let's finish initializing
the frame so at the top I'm going to
05:29 - type frame equals new J frame and then
we can give this frame a title so I'm
05:37 - going to type in calc you later and then
there's a few other things we need to do
05:43 - such as frame dot set default close
operation then the operation is jframe
05:49 - dot exit on close so this allows us to
close out of the program and then a size
05:56 - frame dot set size I usually pick for 20
by 420 but we're going to need a
06:03 - slightly bigger height so 550 was a good
height for this and then we're going to
06:10 - use no layout manager at least for the
frame so set layout know for all the
06:17 - buttons though we're going to use a grid
layout but we'll take care of that later
06:21 - and then we'll want to set the
visibility so at the end frame dot set
06:27 - visible true and then we're actually
going to put a few things between frames
06:35 - set layout and frame dot set visible so
anytime you make a significant change to
06:40 - your program
it's a good idea to test it out just to
06:43 - be sure that everything is working just
fine so since we added a frame we should
06:47 - probably just run this once just to be
sure that everything is okay so here's
06:51 - our calculator it is 420 by 550 the
title says calculator and then when you
06:57 - hit the X button it will close out of
this program so now let's work on the
07:01 - text field the text field is what's
going to hold all the numbers that we
07:05 - type in as well as the result so let's
finish instantiating this jtextfield
07:10 - first so we're going to add this after
all of these methods related to the
07:15 - frame but before we set the visibility
to true so let's finish instantiating
07:19 - this so text field equals new J text
field and then since we're using no
07:29 - layout manager we'll set the bounds for
this text field as in where it's located
07:33 - and the width and the height so text
field dot set bounds and there are four
07:41 - fields to fill in the x-position
y-position
07:44 - width and height so for the x position
50 is decent for y 25 for the width 300
07:53 - is good and for the height 50 now let's
set the font for this text field so text
08:01 - field dot set font and since we already
declared a font we can actually reuse
08:08 - this so I'm going to take the name of
our font and place it within the
08:13 - parentheses of this set font method and
then we'll need to add this text field
08:18 - to the frame so frame dot add text field
and let's run this to test it so here's
08:29 - our jtextfield at the top and right now
a user could actually type in a number
08:35 - even letters so we may want to limit
that so what we can do is actually use
08:40 - the set editable method and set it to
false so at the end I'm going to type in
08:45 - text field dot set editable and then
false and when we run this again we can
08:55 - know
longer update this text box however this
08:59 - will still be editable if we were to
click on a button if we want to type in
09:03 - a number so that's fine all right let's
work on adding our buttons next so we'll
09:08 - do this after the text field methods but
before we add everything to the frame so
09:13 - let's add our Add button first so add
button equals new J button and then we
09:22 - can add some text to this button so I'm
just going to add a plus sign and then
09:26 - we're going to do this a few times so
I'm just going to copy and paste this a
09:30 - bunch of times so we have eight
different function buttons so I'm going
09:34 - to copy and paste this seven more times
I think that's about it we'll find out
09:41 - so we'll want a subtraction button and
we'll change the symbol here as well
09:47 - multiply so mu well and we'll place an
asterisk here divide so div and then a
09:56 - forward slash what else do we got
decimal equals delete and clear so let's
10:04 - add those decimal Dec and then we'll
just place a dot here a decimal then we
10:11 - have already forgot what it was
equals equ equal sign de L for delete
10:21 - and we will type in delete here and then
a Clear button and that is CLR I think
10:28 - yep
CLR and we will type in clear now we
10:33 - have all of these different buttons
related to functions and I actually made
10:37 - an array of J buttons called function
buttons so what we'll do is add all of
10:42 - these buttons to our array called
function buttons so I'm just going to
10:47 - copy this title and if we want to add
the first button to the first position
10:52 - of this array I'm going to add a set of
straight braces and type in index zero
10:56 - and I'm going to set this equal to
maybe our add button
11:04 - and let's do the same thing for the
other buttons so I'm going to copy this
11:09 - and paste it seven more times and then
this will be one two three four five six
11:18 - and I missed one seven so we have ad
first then sub multiply divide decimal
11:34 - equals delete and clear now let's say
that we want to add an action listener
11:44 - change the font and do a few other
things to each of these buttons well
11:49 - since we have eight different buttons
that's a lot of work what we can
11:52 - actually do is use a for loop to iterate
through this array of J buttons so let's
11:57 - create a for loop that's going to loop
eight times so for and I and we'll set
12:04 - this equal to zero pi is less than it
and then we will increment I by one
12:11 - after each iteration so what we're going
to do during each iteration of this for
12:17 - loop is that for each of these buttons
one we're going to change function
12:23 - buttons from whatever index is here to I
so this will change after each iteration
12:29 - and let's add an action listener since
this is implementing the action listener
12:34 - interface so add action listener this
alright then let's also set the font so
12:46 - I'm going to copy this paste it function
buttons at index I set font to my custom
12:55 - font which is called my font and then
we'll want to set focusable to false so
13:07 - sometimes when you click on a button
there's this annoying like outline
13:11 - around the button that's focus ability
we can just set it to false
13:15 - so you can't see that all right so let's
do some
13:18 - things similar for our numbered buttons
but these are going to be anonymous so
13:22 - this is done in less steps so let's do
this after our for loop and we're going
13:28 - to create another for loop that will
iterate ten times so I'm going to copy
13:32 - this paste it and then change eight to
ten and we'll change a few things within
13:39 - here and the first step is that we need
to finish instantiating these numbered
13:44 - buttons
we did that with function buttons but
13:46 - not with our numbered buttons so let's
do that first so the first thing that
13:51 - we're going to type in is number buttons
at index I equals new J button and then
14:04 - we can add some text to this button but
what we'll do is type in string dot
14:10 - value of I don't know why it does that
though value of I okay then on the next
14:22 - line let's add an action listener set
the font and set the focus ability to
14:27 - false so I'm going to copy this from the
previous for loop and paste it and then
14:32 - we're going to change function buttons
to number buttons and that is it for
14:42 - this for loop now with the delete button
and the Clear button this is not going
14:47 - to be on our J panel that has a great
layout what we'll do is set the bounds
14:51 - for these separately so let's work on
the delete button first so delete button
14:57 - dot set bounds so there's four fields to
fill in let's place this where X is 50
15:06 - where Y is for 30 then this will be a
hundred and forty five pixels long and
15:12 - fifty pixels for the height I pre
measured this so I'm not just making up
15:17 - random numbers and then let's do this
fourth and Clear button so I'm going to
15:21 - copy this paste it and this will be the
Clear button and we will place this
15:26 - where X is 205 we'll keep this at four
thirty for the Y position
15:32 - this is good for the width 145 and the
height 58 then let's add these two
15:37 - buttons to our frame so frame dot add de
El button as well as our Clear button so
15:47 - frame dot add CLR button and let's run
this just to be sure that everything is
15:55 - working so far so we still need to add
the number buttons and the function
16:00 - buttons but we should see at least our
delete button and our Clear button and
16:04 - they are right here at the bottom so
that's pretty sweet
16:08 - so we're going to create a J panel to
hold all of the different buttons so
16:12 - let's work on that next
now let's work on the J panel that we
16:16 - have so we need to finish instantiating
this we already declared it at the top
16:20 - here it's called panel so we'll add that
before we add everything to our frame so
16:25 - panel equals new J panel and then let's
set the bounds for this panel so panel
16:35 - dot set bounds will place this where X
is 50 where Y is 100 and this will be
16:44 - 300 by 300 so it's a square now let's
set view layout we're going to use a
16:49 - grid layout so panel dot set layout new
grid layout so we can specify rows and
17:01 - columns so we'll want 4 by 4 but we can
also add how much space we want between
17:07 - the buttons so we'll add 10 spaces or 10
pixels worth of space on each side and
17:13 - let's also color the background it just
temporarily just so we can see this
17:18 - panel so panel dots set background and
let's just set this to maybe gray so
17:28 - color dot gray
I'm gonna get rid of this line right
17:34 - after though and then we need to add
this panel to the frame so frame dot add
17:39 - panel ok let's take a look so here is
our
17:46 - jpanel we're going to add a grid of
buttons to this J panel however I don't
17:51 - like this gray background color so I'm
just going to get rid of it I just
17:54 - wanted to demonstrate where this grid
was exactly now we're going to add the
17:59 - function buttons and the number buttons
to art panel and we're going to do this
18:03 - in order so let's begin by adding the
button for number 1 so I'm going to type
18:09 - panel dot add then our array number
buttons at index 1 which contains the
18:18 - number 1 actually
and let's add 2 and 3 next so these are
18:23 - in order
so number buttons 2 and then number
18:26 - buttons 3 then next I think we should
add the Add button so panel dot add add
18:33 - button let's do the same thing for a few
other things so this is the second row
18:41 - so I'm going to change this number to 4
5 6 and we'll add the sub button okay
18:52 - then let's do this 4 7 8 9 and the next
row so 7 8 9 and we will add the
19:01 - multiply button mu L button then I think
we'll add the decimal button next Dec
19:10 - and then the number 0 button which is in
number buttons 0 and then we will add
19:22 - our equals button so that's equ and
lastly our divide button so that's div
19:30 - button ok let's take a look at this now
and here are all of the buttons in the
19:37 - order that we place them so it starts at
the top and works its way to the right
19:42 - when it reaches the end it goes down to
the next row now let's add some
19:45 - functionality to these buttons so we'll
do that within the actionperformed
19:49 - method for our primary stuff within the
actionperformed method let's check to
19:54 - see if somebody clicks on one of these
numbered buttons so what I think we'll
19:59 - do
is put this within a four loop so will
20:02 - iterate this four loop ten times so int
I is equal to zero will continue this as
20:08 - long as I is less than 10 and then we
will increment I by one each time so
20:14 - what we're going to do within this for
loop is we're going to use an if
20:18 - statement if e dot get source is equal
to the number button at the current
20:29 - index of I well its number buttons my
bad okay so what we'll do is that we
20:42 - will take our text field this is
somewhat verbose so set text and then
20:51 - within the parentheses of this method
text field dot get text and we will use
21:01 - the come cat function to concatenate a
string and it's going to be string dot
21:10 - value of int I sorry this is kind of a
long line of code here but let's try it
21:22 - so when we click on a number it's going
to update our text field looks like
21:29 - everything is working let's add
functionality to the decimal button so
21:34 - let's write this outside at the for loop
right after it so we'll use an if
21:38 - statement if a dot get source method is
equal to our decimal button and within
21:49 - the if statement we're going to type
text field dot set text and we're going
21:58 - to actually I'm just going to copy most
of this text field dot get text and then
22:09 - we're going to concatenate
22:15 - just a dot within here okay let's try
this
22:25 - so 3.14 looks like that is good then
okay let's work on the Add button so I
22:35 - think I'm just gonna copy this do to
save some time so we're going to change
22:40 - Dec to our add button what we'll do here
is that we want to retrieve number one
22:48 - so num 1 equals we're going to use the
double wrapper parse double and within
22:58 - the method of parse double text field
dot get text and then we are going to
23:10 - assign our operator which is a character
23:15 - so operator equals the plus sign and
let's clear the text field too so text
23:27 - field dot set text then just an empty
set of quotes then I'm going to copy
23:36 - this and do something similar for the
subtract button so we're going to change
23:40 - add to sub so this can stay the same
operator is going to change to minus and
23:47 - then we will keep this text the same as
well and let's do this again for
23:53 - multiply so mu well for multiply button
and change the operator and then the
24:02 - same thing for divide so div and forward
slash okay so then let's work on the
24:14 - equals button so there's a few things we
need to fill in with in here
24:18 - so if e dot get source method is equal
to our equals
24:25 - button so what we'll do is take num2
24:35 - equals double dot parse double and then
text field dot get text then we're going
24:52 - to use a switch statement for the
operator depends on which symbol they're
24:57 - using that will determine what
mathematical operation we're going to
25:01 - perform so we'll do this within the if
statement we're going to create a switch
25:05 - and then within the parentheses we're
going to use the operator and compare it
25:14 - so for the first case this will be our
plus sign we're going to take our result
25:22 - equals num1 plus num2 and then break and
we'll have three other cases so case for
25:36 - subtraction equals num1 - num2 same
thing for multiply num 1 multiplied by
25:50 - num2 and then divide num1 divided by
num2 alright then outside of the switch
26:01 - let's just be sure we're getting the
right parenthesis so it's this one after
26:06 - this one we're going to update the text
field so text field dot set text string
26:17 - dot value of our result
26:27 - and then we'll assign num1 to be our
result so then we can continue if we
26:36 - want to reuse the same number okay let's
try this so let's take maybe ninety nine
26:42 - divided by three equals thirty three
times two that's sixty six minus five
26:49 - plus one point two three all right looks
like everything's working now let's work
26:57 - on the Clear button and this one's
pretty easy and I'm just gonna copy one
27:01 - of these paste it and then change a few
things
27:05 - so if II died get source equals the
Clear button what we'll do is that we
27:13 - will take our text field set text to
just a empty set of quotes and let's try
27:21 - it so one two three let's hit the Clear
button and it clears out everything and
27:28 - lastly the delete button so if a dot get
source is equal to our delete button
27:37 - there is a few extra steps so let's
create a string variable let's just call
27:43 - this string equals text field dot get
text method and we're going to store it
27:52 - within our string named string or
whatever else you called this then let's
27:57 - clear the text field for now so text
field dot set text and this is only
28:04 - temporarily then we're going to create a
for loop that's going to iterate through
28:11 - the length of the string minus one so
int I equals zero and we'll continue
28:18 - this as long as I is less than our
string length minus one then increment I
28:28 - by one each time so during each
iteration of this for loop we'll take
28:35 - our text field and use the set text
method and within the parentheses text
28:43 - field dot get text plus the string the
character at our index which is I and
28:57 - that should be it for our delete button
so if we were to type in a number let's
29:04 - say 3.1415 and we click on the delete
button it's going to delete the last
29:13 - item or character that's in here and
then if we were to hit the Clear button
29:18 - it's going to just clear everything guys
I forgot about something what if we have
29:23 - to input a negative number we don't have
any way to enter that and my bad let's
29:28 - go ahead and fix that real quick so
let's just add a negative button it
29:32 - won't take too long
and we'll change this array to nine
29:35 - buttons then we are going to add this
button to our array so let's increase
29:42 - this to eight and add our negative
button and we'll probably want to create
29:49 - a symbol for this as well neg button
equals nu J button and I will add a
29:58 - negative sign within parentheses that'll
work and it let's increase this for loop
30:07 - to nine and let's set the bounds so neg
button dot set bounds I'll just put this
30:17 - next to our delete button and clear
button but I'll make these a little bit
30:20 - smaller for the would so we'll make
these all I think 100 pixels appears for
30:27 - the width so we'll place this where X is
50 or Y is for 30 this will be 100
30:33 - pixels along for the width and 50 for
the hyatt and let's also do this for our
30:39 - delete button so that's 150 for 30 150
the Clear button will be 250 for 30 100
30:51 - and
and that's fine and now we will want to
30:55 - add the negative button to the frame so
we'll do that here frame dot ad neg
31:05 - button and let's just make sure that
it's on here okay that's not too bad you
31:13 - can still tell that these are the delete
buttons and the clear buttons
31:16 - appropriately okay let's add
functionality to this negative button so
31:21 - let's go down to the bottom copy one of
these and paste it and we'll change
31:27 - delete button to negative button and we
will get rid of everything within here
31:36 - the first step within here is that we'll
want to retrieve whatever text is within
31:41 - the text field and let's store this as a
double value within a variable which
31:46 - we'll call temp because we're only using
this variable temporarily so double temp
31:51 - equals double dot parse double method
and within the parentheses of this
31:59 - method will pass in text field dot get
text and that's it for this first line
32:06 - so it's going to take whatever value is
within text field and assign it to this
32:12 - variable temp now we'll want to flip the
sign on our temp variable and one easy
32:19 - way to do that is just to multiply this
variable by negative one so temp
32:24 - multiplication sign equals negative one
and then lastly we want to set the text
32:32 - to whatever our temporary value is now
currently so text field dot set text
32:40 - method then we're going to pass in
string dot value of our temp variable
32:52 - and that's it so let's try it
32:57 - so five negative times six negative
equals 30
33:06 - positive times one negative equals
negative 30 okay so that's working then
33:15 - so the fact that we added a negative
button later on in this program is a
33:19 - great example and a reminder of why you
should keep your code clean concise and
33:24 - organized because if you have to make
changes or somebody else has to make
33:28 - changes to your program it's actually
fairly easy to do so whether you need to
33:32 - delete something you need to update
something or maybe there's a new feature
33:36 - that's released it's actually fairly
easy to go back and make those changes
33:40 - so honestly this was really just a test
I didn't actually forget to add a
33:44 - negative button this was really just a
very simple calculator you can always
33:49 - make improvements upon this if you would
like a copy of all this code I'll post
33:53 - all of this in the comments down below
but yeah that's how to make a very
33:57 - simple calculator using Java hey you
yeah I'm talking to you if you learn
34:03 - something new then you can help me help
you in three easy steps
34:08 - by smashing that like button drop a
comment down below and subscribe if
34:13 - you'd like to become a fellow bro

Cleaned transcript:

how's it going everybody it's Ebro here hope you're doing well and in this video I'm going to teach you guys how we can make a simple calculator program using Java so let's get into it if you find this video helpful please remember to Like comment and subscribe your support will help keep this channel running a read everybody so let's get started so we're going to create a new Java project I'm going to call this calculator and then click finish then if it prompts you to create a module I'm going to click and don't create and then within the source folder let's create a new class so file new class and I will also call this calculator or you can call this main call it whatever you want really so calc you later and then I'm going to check public static void main so I don't have to type in this line and then click finish so before we forget let's import a few things so there's three imports that we're going to need import everything related to Java X dot swing as well as everything related to Java dot AWT and then lastly import Java dot aw t dot event and that is all the imports that we need so let's create a constructor for this class so I'm going to do this maybe right before the main method so we type in the name of the class to create a constructor so calc you later and then we're going to have this class implement and action listener so implements action listener and then there is a method that we have to implement that is the action performed method so within this main class let's create an instance of our calculator class so we can just type in calculator let's call this calc equals new calculator all right and then before the constructor let's declare a few things and then let me just add some spaces all right so let's declare everything that we'll need so first we'll need a jframe and we'll call this frame and then we'll need a text field AJ text field and we'll call it text field now let's create an array of J buttons so J button then straight braces for an array and this will hold all of our numbered buttons equals nu J button and then straight braces and we'll want ten buttons for ten numbers one through nine and well zero I guess two and we'll create an array of J buttons to hold all of our function buttons so that's things like add subtract divide equals decimal so J button straight braces for an array and we'll call these function buttons equals nu J button this will hold eight buttons let's name all of the function buttons the number buttons will make anonymous so for the function buttons J button will have a Add button a sub button a multiply button we'll just call it mu L button MD well short for multiply and then div for divide button and let's do this again but on the next line just so everything is organized so J button and this next row will be for decimal button equals but we'll just say equ button de L button for delete and CLR for clear button and then we'll create a J panel to hold all of the separate buttons so this will be J panel and we will call this panel so we just have a few things left are declared so I'm going to be reusing one font for all of my buttons so I think it's actually best if we declare a font that we can reuse easily so what I'm going to type is font my font you equals new font then within parenthesis I can specify a font style and I like the font ink free so I'm going to use that one but use whatever font that you want and then I want this to be bold so in the next field I'm going to type font dot bold and then a size and I will pick 30 because that's a decent size for my buttons and then lastly we just have a few double values to declare so double num1 this will be our first number and let's set this to zero number to equal zero as well and our result that will also equal zero and then a char value called operator and this will hold the either the multiply character subtract addition and then division so it's gonna hold one of those okay that is everything that we need to declare so let's move on to our constructor and begin here so let's finish initializing the frame so at the top I'm going to type frame equals new J frame and then we can give this frame a title so I'm going to type in calc you later and then there's a few other things we need to do such as frame dot set default close operation then the operation is jframe dot exit on close so this allows us to close out of the program and then a size frame dot set size I usually pick for 20 by 420 but we're going to need a slightly bigger height so 550 was a good height for this and then we're going to use no layout manager at least for the frame so set layout know for all the buttons though we're going to use a grid layout but we'll take care of that later and then we'll want to set the visibility so at the end frame dot set visible true and then we're actually going to put a few things between frames set layout and frame dot set visible so anytime you make a significant change to your program it's a good idea to test it out just to be sure that everything is working just fine so since we added a frame we should probably just run this once just to be sure that everything is okay so here's our calculator it is 420 by 550 the title says calculator and then when you hit the X button it will close out of this program so now let's work on the text field the text field is what's going to hold all the numbers that we type in as well as the result so let's finish instantiating this jtextfield first so we're going to add this after all of these methods related to the frame but before we set the visibility to true so let's finish instantiating this so text field equals new J text field and then since we're using no layout manager we'll set the bounds for this text field as in where it's located and the width and the height so text field dot set bounds and there are four fields to fill in the xposition yposition width and height so for the x position 50 is decent for y 25 for the width 300 is good and for the height 50 now let's set the font for this text field so text field dot set font and since we already declared a font we can actually reuse this so I'm going to take the name of our font and place it within the parentheses of this set font method and then we'll need to add this text field to the frame so frame dot add text field and let's run this to test it so here's our jtextfield at the top and right now a user could actually type in a number even letters so we may want to limit that so what we can do is actually use the set editable method and set it to false so at the end I'm going to type in text field dot set editable and then false and when we run this again we can know longer update this text box however this will still be editable if we were to click on a button if we want to type in a number so that's fine all right let's work on adding our buttons next so we'll do this after the text field methods but before we add everything to the frame so let's add our Add button first so add button equals new J button and then we can add some text to this button so I'm just going to add a plus sign and then we're going to do this a few times so I'm just going to copy and paste this a bunch of times so we have eight different function buttons so I'm going to copy and paste this seven more times I think that's about it we'll find out so we'll want a subtraction button and we'll change the symbol here as well multiply so mu well and we'll place an asterisk here divide so div and then a forward slash what else do we got decimal equals delete and clear so let's add those decimal Dec and then we'll just place a dot here a decimal then we have already forgot what it was equals equ equal sign de L for delete and we will type in delete here and then a Clear button and that is CLR I think yep CLR and we will type in clear now we have all of these different buttons related to functions and I actually made an array of J buttons called function buttons so what we'll do is add all of these buttons to our array called function buttons so I'm just going to copy this title and if we want to add the first button to the first position of this array I'm going to add a set of straight braces and type in index zero and I'm going to set this equal to maybe our add button and let's do the same thing for the other buttons so I'm going to copy this and paste it seven more times and then this will be one two three four five six and I missed one seven so we have ad first then sub multiply divide decimal equals delete and clear now let's say that we want to add an action listener change the font and do a few other things to each of these buttons well since we have eight different buttons that's a lot of work what we can actually do is use a for loop to iterate through this array of J buttons so let's create a for loop that's going to loop eight times so for and I and we'll set this equal to zero pi is less than it and then we will increment I by one after each iteration so what we're going to do during each iteration of this for loop is that for each of these buttons one we're going to change function buttons from whatever index is here to I so this will change after each iteration and let's add an action listener since this is implementing the action listener interface so add action listener this alright then let's also set the font so I'm going to copy this paste it function buttons at index I set font to my custom font which is called my font and then we'll want to set focusable to false so sometimes when you click on a button there's this annoying like outline around the button that's focus ability we can just set it to false so you can't see that all right so let's do some things similar for our numbered buttons but these are going to be anonymous so this is done in less steps so let's do this after our for loop and we're going to create another for loop that will iterate ten times so I'm going to copy this paste it and then change eight to ten and we'll change a few things within here and the first step is that we need to finish instantiating these numbered buttons we did that with function buttons but not with our numbered buttons so let's do that first so the first thing that we're going to type in is number buttons at index I equals new J button and then we can add some text to this button but what we'll do is type in string dot value of I don't know why it does that though value of I okay then on the next line let's add an action listener set the font and set the focus ability to false so I'm going to copy this from the previous for loop and paste it and then we're going to change function buttons to number buttons and that is it for this for loop now with the delete button and the Clear button this is not going to be on our J panel that has a great layout what we'll do is set the bounds for these separately so let's work on the delete button first so delete button dot set bounds so there's four fields to fill in let's place this where X is 50 where Y is for 30 then this will be a hundred and forty five pixels long and fifty pixels for the height I pre measured this so I'm not just making up random numbers and then let's do this fourth and Clear button so I'm going to copy this paste it and this will be the Clear button and we will place this where X is 205 we'll keep this at four thirty for the Y position this is good for the width 145 and the height 58 then let's add these two buttons to our frame so frame dot add de El button as well as our Clear button so frame dot add CLR button and let's run this just to be sure that everything is working so far so we still need to add the number buttons and the function buttons but we should see at least our delete button and our Clear button and they are right here at the bottom so that's pretty sweet so we're going to create a J panel to hold all of the different buttons so let's work on that next now let's work on the J panel that we have so we need to finish instantiating this we already declared it at the top here it's called panel so we'll add that before we add everything to our frame so panel equals new J panel and then let's set the bounds for this panel so panel dot set bounds will place this where X is 50 where Y is 100 and this will be 300 by 300 so it's a square now let's set view layout we're going to use a grid layout so panel dot set layout new grid layout so we can specify rows and columns so we'll want 4 by 4 but we can also add how much space we want between the buttons so we'll add 10 spaces or 10 pixels worth of space on each side and let's also color the background it just temporarily just so we can see this panel so panel dots set background and let's just set this to maybe gray so color dot gray I'm gonna get rid of this line right after though and then we need to add this panel to the frame so frame dot add panel ok let's take a look so here is our jpanel we're going to add a grid of buttons to this J panel however I don't like this gray background color so I'm just going to get rid of it I just wanted to demonstrate where this grid was exactly now we're going to add the function buttons and the number buttons to art panel and we're going to do this in order so let's begin by adding the button for number 1 so I'm going to type panel dot add then our array number buttons at index 1 which contains the number 1 actually and let's add 2 and 3 next so these are in order so number buttons 2 and then number buttons 3 then next I think we should add the Add button so panel dot add add button let's do the same thing for a few other things so this is the second row so I'm going to change this number to 4 5 6 and we'll add the sub button okay then let's do this 4 7 8 9 and the next row so 7 8 9 and we will add the multiply button mu L button then I think we'll add the decimal button next Dec and then the number 0 button which is in number buttons 0 and then we will add our equals button so that's equ and lastly our divide button so that's div button ok let's take a look at this now and here are all of the buttons in the order that we place them so it starts at the top and works its way to the right when it reaches the end it goes down to the next row now let's add some functionality to these buttons so we'll do that within the actionperformed method for our primary stuff within the actionperformed method let's check to see if somebody clicks on one of these numbered buttons so what I think we'll do is put this within a four loop so will iterate this four loop ten times so int I is equal to zero will continue this as long as I is less than 10 and then we will increment I by one each time so what we're going to do within this for loop is we're going to use an if statement if e dot get source is equal to the number button at the current index of I well its number buttons my bad okay so what we'll do is that we will take our text field this is somewhat verbose so set text and then within the parentheses of this method text field dot get text and we will use the come cat function to concatenate a string and it's going to be string dot value of int I sorry this is kind of a long line of code here but let's try it so when we click on a number it's going to update our text field looks like everything is working let's add functionality to the decimal button so let's write this outside at the for loop right after it so we'll use an if statement if a dot get source method is equal to our decimal button and within the if statement we're going to type text field dot set text and we're going to actually I'm just going to copy most of this text field dot get text and then we're going to concatenate just a dot within here okay let's try this so 3.14 looks like that is good then okay let's work on the Add button so I think I'm just gonna copy this do to save some time so we're going to change Dec to our add button what we'll do here is that we want to retrieve number one so num 1 equals we're going to use the double wrapper parse double and within the method of parse double text field dot get text and then we are going to assign our operator which is a character so operator equals the plus sign and let's clear the text field too so text field dot set text then just an empty set of quotes then I'm going to copy this and do something similar for the subtract button so we're going to change add to sub so this can stay the same operator is going to change to minus and then we will keep this text the same as well and let's do this again for multiply so mu well for multiply button and change the operator and then the same thing for divide so div and forward slash okay so then let's work on the equals button so there's a few things we need to fill in with in here so if e dot get source method is equal to our equals button so what we'll do is take num2 equals double dot parse double and then text field dot get text then we're going to use a switch statement for the operator depends on which symbol they're using that will determine what mathematical operation we're going to perform so we'll do this within the if statement we're going to create a switch and then within the parentheses we're going to use the operator and compare it so for the first case this will be our plus sign we're going to take our result equals num1 plus num2 and then break and we'll have three other cases so case for subtraction equals num1 num2 same thing for multiply num 1 multiplied by num2 and then divide num1 divided by num2 alright then outside of the switch let's just be sure we're getting the right parenthesis so it's this one after this one we're going to update the text field so text field dot set text string dot value of our result and then we'll assign num1 to be our result so then we can continue if we want to reuse the same number okay let's try this so let's take maybe ninety nine divided by three equals thirty three times two that's sixty six minus five plus one point two three all right looks like everything's working now let's work on the Clear button and this one's pretty easy and I'm just gonna copy one of these paste it and then change a few things so if II died get source equals the Clear button what we'll do is that we will take our text field set text to just a empty set of quotes and let's try it so one two three let's hit the Clear button and it clears out everything and lastly the delete button so if a dot get source is equal to our delete button there is a few extra steps so let's create a string variable let's just call this string equals text field dot get text method and we're going to store it within our string named string or whatever else you called this then let's clear the text field for now so text field dot set text and this is only temporarily then we're going to create a for loop that's going to iterate through the length of the string minus one so int I equals zero and we'll continue this as long as I is less than our string length minus one then increment I by one each time so during each iteration of this for loop we'll take our text field and use the set text method and within the parentheses text field dot get text plus the string the character at our index which is I and that should be it for our delete button so if we were to type in a number let's say 3.1415 and we click on the delete button it's going to delete the last item or character that's in here and then if we were to hit the Clear button it's going to just clear everything guys I forgot about something what if we have to input a negative number we don't have any way to enter that and my bad let's go ahead and fix that real quick so let's just add a negative button it won't take too long and we'll change this array to nine buttons then we are going to add this button to our array so let's increase this to eight and add our negative button and we'll probably want to create a symbol for this as well neg button equals nu J button and I will add a negative sign within parentheses that'll work and it let's increase this for loop to nine and let's set the bounds so neg button dot set bounds I'll just put this next to our delete button and clear button but I'll make these a little bit smaller for the would so we'll make these all I think 100 pixels appears for the width so we'll place this where X is 50 or Y is for 30 this will be 100 pixels along for the width and 50 for the hyatt and let's also do this for our delete button so that's 150 for 30 150 the Clear button will be 250 for 30 100 and and that's fine and now we will want to add the negative button to the frame so we'll do that here frame dot ad neg button and let's just make sure that it's on here okay that's not too bad you can still tell that these are the delete buttons and the clear buttons appropriately okay let's add functionality to this negative button so let's go down to the bottom copy one of these and paste it and we'll change delete button to negative button and we will get rid of everything within here the first step within here is that we'll want to retrieve whatever text is within the text field and let's store this as a double value within a variable which we'll call temp because we're only using this variable temporarily so double temp equals double dot parse double method and within the parentheses of this method will pass in text field dot get text and that's it for this first line so it's going to take whatever value is within text field and assign it to this variable temp now we'll want to flip the sign on our temp variable and one easy way to do that is just to multiply this variable by negative one so temp multiplication sign equals negative one and then lastly we want to set the text to whatever our temporary value is now currently so text field dot set text method then we're going to pass in string dot value of our temp variable and that's it so let's try it so five negative times six negative equals 30 positive times one negative equals negative 30 okay so that's working then so the fact that we added a negative button later on in this program is a great example and a reminder of why you should keep your code clean concise and organized because if you have to make changes or somebody else has to make changes to your program it's actually fairly easy to do so whether you need to delete something you need to update something or maybe there's a new feature that's released it's actually fairly easy to go back and make those changes so honestly this was really just a test I didn't actually forget to add a negative button this was really just a very simple calculator you can always make improvements upon this if you would like a copy of all this code I'll post all of this in the comments down below but yeah that's how to make a very simple calculator using Java hey you yeah I'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro
