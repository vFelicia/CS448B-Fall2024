With timestamps:

00:00 - hey it's me again today I'm going to
00:01 - explain the for each method in
00:03 - JavaScript the for each method is used
00:05 - to iterate meaning Loop through the
00:07 - elements of an array and apply a
00:09 - specified function to each element you
00:11 - have an array we can use the built-in
00:13 - for each method of arrays and send each
00:16 - element through a call back to a
00:18 - function here's an example I'll create
00:20 - an array of numbers let numbers equals 1
00:24 - through
00:28 - 5 then I'm going to create a function to
00:31 - display each
00:32 - element function
00:35 - display there will be one
00:38 - parameter an element we will
00:41 - individually display each element within
00:43 - this array
00:46 - console.log each
00:49 - element I can display each element of
00:52 - this array by using the for each
00:54 - method we will take our
00:58 - array Dot use the built-in for each
01:01 - method then pass a call back as an
01:04 - argument we will pass our display
01:06 - function as an argument so this should
01:09 - display all of the elements in my array
01:11 - to the console 1 2 3 4 5 believe it or
01:14 - not the element argument is provided for
01:17 - us with the for each method behind the
01:19 - scenes the for each method will provide
01:21 - to a callback an element index and array
01:24 - argument an element for the current
01:26 - element that we're on when looping
01:28 - through this array an index that keeps
01:31 - track of the current index number and
01:33 - the location of the array itself in this
01:35 - case it would be numbers that's why when
01:37 - we pass the display function as a
01:38 - callback we're already provided with an
01:40 - element argument behind the scenes so
01:42 - we're using the for each method to
01:44 - display all of the elements of this
01:46 - array let's use the for each method
01:48 - again to double each element before
01:50 - displaying it I will create a new
01:52 - function function double to double the
01:56 - value of each
01:57 - element element index and array are
02:00 - provided for us
02:02 - automatically for each element what are
02:04 - we going to do let's take our array at
02:08 - index of index index keeps track of the
02:12 - current index number so during each
02:14 - iteration it's going to increment by one
02:17 - starting with zero we will take our
02:20 - element multiply it by
02:23 - two all right so let's take our numbers
02:26 - array use the for each method then pass
02:30 - a call back to our double
02:32 - function so now all of these elements
02:34 - should be doubled let's triple them now
02:37 - we'll create a function for triple
02:40 - function triple we will set the
02:42 - parameters to be the same but we will
02:45 - multiply each element by three then pass
02:48 - in a call back for
02:50 - triple so now we have 3 6 9 12 15
02:54 - they're all tripled let's Square each
02:56 - element function Square
03:00 - again the element index and array
03:02 - arguments are provided for us take our
03:05 - array that we receive at index of the
03:09 - current index number set the equal to to
03:12 - square a number we can use the power
03:14 - method of math then raise a base to a
03:18 - given power we are raising our base of
03:21 - element to the power of two if I pass
03:24 - our Square function as a call back to
03:26 - for each we will now Square each number
03:29 - before playing it 1
03:32 - 49625 then this time let's create a cube
03:37 - function function
03:40 - Cube raise our element to the power of
03:43 - three pass our Cube function as a call
03:46 - back to the for each
03:48 - method and now each number is cubed 1 8
03:52 - 27
03:53 - 6415 let's create a more practical
03:57 - example I will create an array of fruits
04:02 - let fruits equals some fruit we have an
04:05 - apple we have an
04:07 - orange a
04:09 - banana and a coconut we'll create a
04:13 - function to display each
04:15 - element function display it's kind of
04:18 - like what we did
04:21 - before an element argument is going to
04:23 - be provided to us during each
04:26 - iteration let's console.log each
04:31 - element and then we will use the buil-in
04:34 - for each method of our array fruits
04:37 - fruits. for each we will pass our
04:40 - function as a callback to display each
04:43 - element of this array Apple orange
04:45 - banana coconut let's create a function
04:47 - to make all of these strings
04:51 - uppercase
04:53 - function
04:56 - uppercase we'll need an element index
04:58 - and array
05:00 - element index array during each
05:03 - iteration let's take our array that we
05:07 - receive add the index of our index
05:11 - equals take the element that we receive
05:15 - use the two uppercase method so we have
05:20 - an uppercase function that utilizes the
05:23 - two uppercase method remember that a
05:25 - method usually belongs to something this
05:28 - method belongs to the element that we
05:30 - receive functions are Standalone before
05:33 - displaying each element within my array
05:35 - of fruits let's take our fruits array
05:38 - use the for each method then apply a
05:41 - call back to uppercase to make all of
05:43 - the elements uppercase before displaying
05:45 - them what I'm going to do is copy all of
05:48 - these elements so they will begin
05:54 - uppercase I'll create a lowercase
05:57 - function function
06:00 - lowercase we have our element index and
06:02 - array with this line of code we will use
06:05 - the two lowercase method within the for
06:09 - each method we will pass our lowercase
06:12 - function as a callback to make all of
06:14 - the elements
06:16 - lowercase let's set the elements of our
06:18 - array to be all lowercase
06:20 - again this will be a challenge
06:23 - round we will capitalize the first
06:25 - letter in each element of this
06:28 - array we will create a
06:32 - function
06:37 - capitalize the element index and array
06:39 - arguments are going to be provided to us
06:42 - take our array that we receive at the
06:45 - current index set this equal to we're
06:48 - going to get the first character in each
06:50 - element we will take our
06:53 - element get the first character Char at
06:58 - index of zero
07:00 - method chain
07:01 - 2
07:03 - uppercase to make this letter
07:06 - uppercase then we will string
07:08 - concatenate our
07:10 - element use the slice
07:13 - method we'll create a substring begin at
07:16 - index one this portion is going to
07:19 - create a substring of every character
07:22 - besides the first the first character
07:24 - we're going to make
07:26 - uppercase so now this should work so
07:28 - let's take our capital I function pass
07:31 - it to the for each method and now the
07:33 - first character in each element is all
07:36 - uppercase all right everybody so that is
07:38 - the for each method it's used to iterate
07:41 - over the elements of an array and apply
07:43 - a specified function as a call back to
07:46 - each element you take your array use the
07:48 - for each method then pass a call back as
07:50 - an argument it's really useful if you
07:52 - need to apply a function to each element
07:54 - of this array and well everybody that is
07:56 - the for each method in JavaScript

Cleaned transcript:

hey it's me again today I'm going to explain the for each method in JavaScript the for each method is used to iterate meaning Loop through the elements of an array and apply a specified function to each element you have an array we can use the builtin for each method of arrays and send each element through a call back to a function here's an example I'll create an array of numbers let numbers equals 1 through 5 then I'm going to create a function to display each element function display there will be one parameter an element we will individually display each element within this array console.log each element I can display each element of this array by using the for each method we will take our array Dot use the builtin for each method then pass a call back as an argument we will pass our display function as an argument so this should display all of the elements in my array to the console 1 2 3 4 5 believe it or not the element argument is provided for us with the for each method behind the scenes the for each method will provide to a callback an element index and array argument an element for the current element that we're on when looping through this array an index that keeps track of the current index number and the location of the array itself in this case it would be numbers that's why when we pass the display function as a callback we're already provided with an element argument behind the scenes so we're using the for each method to display all of the elements of this array let's use the for each method again to double each element before displaying it I will create a new function function double to double the value of each element element index and array are provided for us automatically for each element what are we going to do let's take our array at index of index index keeps track of the current index number so during each iteration it's going to increment by one starting with zero we will take our element multiply it by two all right so let's take our numbers array use the for each method then pass a call back to our double function so now all of these elements should be doubled let's triple them now we'll create a function for triple function triple we will set the parameters to be the same but we will multiply each element by three then pass in a call back for triple so now we have 3 6 9 12 15 they're all tripled let's Square each element function Square again the element index and array arguments are provided for us take our array that we receive at index of the current index number set the equal to to square a number we can use the power method of math then raise a base to a given power we are raising our base of element to the power of two if I pass our Square function as a call back to for each we will now Square each number before playing it 1 49625 then this time let's create a cube function function Cube raise our element to the power of three pass our Cube function as a call back to the for each method and now each number is cubed 1 8 27 6415 let's create a more practical example I will create an array of fruits let fruits equals some fruit we have an apple we have an orange a banana and a coconut we'll create a function to display each element function display it's kind of like what we did before an element argument is going to be provided to us during each iteration let's console.log each element and then we will use the builin for each method of our array fruits fruits. for each we will pass our function as a callback to display each element of this array Apple orange banana coconut let's create a function to make all of these strings uppercase function uppercase we'll need an element index and array element index array during each iteration let's take our array that we receive add the index of our index equals take the element that we receive use the two uppercase method so we have an uppercase function that utilizes the two uppercase method remember that a method usually belongs to something this method belongs to the element that we receive functions are Standalone before displaying each element within my array of fruits let's take our fruits array use the for each method then apply a call back to uppercase to make all of the elements uppercase before displaying them what I'm going to do is copy all of these elements so they will begin uppercase I'll create a lowercase function function lowercase we have our element index and array with this line of code we will use the two lowercase method within the for each method we will pass our lowercase function as a callback to make all of the elements lowercase let's set the elements of our array to be all lowercase again this will be a challenge round we will capitalize the first letter in each element of this array we will create a function capitalize the element index and array arguments are going to be provided to us take our array that we receive at the current index set this equal to we're going to get the first character in each element we will take our element get the first character Char at index of zero method chain 2 uppercase to make this letter uppercase then we will string concatenate our element use the slice method we'll create a substring begin at index one this portion is going to create a substring of every character besides the first the first character we're going to make uppercase so now this should work so let's take our capital I function pass it to the for each method and now the first character in each element is all uppercase all right everybody so that is the for each method it's used to iterate over the elements of an array and apply a specified function as a call back to each element you take your array use the for each method then pass a call back as an argument it's really useful if you need to apply a function to each element of this array and well everybody that is the for each method in JavaScript
