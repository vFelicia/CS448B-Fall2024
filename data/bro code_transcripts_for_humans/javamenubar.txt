With timestamps:

00:00 - hey what's going on everybody it's your
00:01 - bro here hope you're doing well and in
00:03 - this video i'm going to teach you guys
00:04 - how we can create a menu bar in java so
00:06 - sit back relax and enjoy the show
00:10 - if you find this video helpful please
00:12 - remember to like
00:14 - comment and subscribe your support will
00:16 - help keep this channel running
00:18 - all right people let's dive into this so
00:20 - i have two classes a main class
00:22 - and then a my frame class my frame
00:25 - extends
00:25 - jframe so it behaves exactly like a
00:27 - jframe it also implements the action
00:29 - listener interface
00:31 - and within my main class i just have a
00:33 - new instance of my frame
00:35 - and within the constructor of my frame i
00:38 - have four lines of code
00:39 - this dot set default close operation
00:41 - jframe exit on close
00:43 - this dot set size set this to whatever
00:45 - size you want i just picked 500 by 500
00:47 - this dot set layout i'm using a new flow
00:49 - layout and
00:50 - this dot set visible set to true and
00:53 - then also make sure you have an
00:54 - action performed method so let's begin
00:56 - to create a menu bar
00:58 - we first need to create the menu bar
00:59 - then we add separate menus or tabs kind
01:02 - of like what we have at the top here
01:03 - with our id is there's different tabs
01:06 - that you can navigate to
01:07 - and there are also menu items that you
01:09 - add to each of these tabs to each of
01:11 - these menus so let's begin by creating
01:13 - the
01:13 - menu bar to actually be as the container
01:16 - to contain all of these menus and menu
01:19 - items
01:20 - so let's create a j menu bar and we will
01:23 - call this
01:23 - menu bar equals
01:26 - new j menu bar
01:30 - and then instead of adding this to the
01:32 - frame we set it
01:33 - so type in the name of the frame you're
01:36 - using
01:36 - for me it's just this so this dot
01:40 - set menu bar
01:44 - and we place the name of the menu bar
01:46 - within this method
01:51 - that's set j menu bar by the way alright
01:54 - so let's try this
01:57 - all right so nothing is currently
01:59 - visible that's because we have to add
02:01 - menus to this menu bar kind of like what
02:03 - we have at the top of our id
02:04 - is so let's create menus for file edit
02:08 - and help so
02:11 - these are j menus j menu let's call the
02:14 - first menu
02:16 - file menu equals new
02:19 - j menu and then you can either set some
02:23 - text or
02:24 - pass this to the constructor i will just
02:26 - say file
02:29 - and let's do the same thing for edit and
02:31 - help
02:34 - so we have an edit menu that says edit
02:40 - and a help menu that says help
02:45 - now with these menus we add them to the
02:47 - menu bar we don't set them
02:50 - so we type in the name of our menu bar
02:53 - menu
02:54 - bar dot add
02:57 - then we're going to add these individual
02:59 - menus so we're going to add the file
03:01 - menu first
03:03 - followed by the edit menu then help menu
03:08 - so edit menu and then help menu
03:12 - and now these should be visible
03:16 - so you can see here here's our menu bar
03:18 - and here are the individual tabs or
03:20 - menus
03:21 - however if we were to click on these
03:23 - there's no menu items
03:25 - so let's add a few items to our file
03:28 - menu
03:29 - so these are menu items so let's declare
03:32 - these
03:34 - let's say we want a menu for a menu item
03:38 - for save load and exit
03:43 - so these are j menu items
03:47 - and we'll call the first one load
03:50 - item equals new j
03:54 - menu item and we will set some text
03:58 - either by using the set text method or
04:00 - just pass this into the constructor
04:02 - so this will be load then we'll want a
04:04 - few others for
04:06 - save and exit so this will be
04:09 - save item and the text will be
04:13 - and exit item and the text will be exit
04:20 - so then with these items we add them to
04:22 - the menu that we want
04:24 - let's say we want to add these to the
04:25 - file menu so we type in the name of our
04:27 - file menu
04:28 - kind of like what we did with our menu
04:30 - bar so file
04:32 - menu dot add load
04:35 - item so this is a menu item
04:38 - and we'll repeat the process for save
04:40 - item and exit item
04:44 - so save item and
04:48 - exit item and i'm just going to
04:51 - group these together so it's easier to
04:53 - read
04:55 - all right so this is what we got so far
04:59 - we have our menu bar we have our menus
05:01 - they kind of function like tabs
05:02 - we don't have anything added to help or
05:04 - edit i don't really think we'll need to
05:06 - but with file there's actually a drop
05:08 - down menu
05:09 - we can select one of these items to
05:11 - perform some sort of task for us
05:13 - so let's use our action listener
05:16 - interface to actually have these perform
05:18 - some sort of task for us
05:20 - so we need to add an action listener to
05:22 - each of these
05:23 - menu items so let's add them here
05:27 - so load item dot add
05:30 - action listener since we're implementing
05:33 - an action listener interface we can just
05:35 - pass in
05:36 - this and we'll repeat this process for
05:38 - the save item
05:40 - and the exit item so save item
05:43 - and exit item so now
05:46 - these will respond to clicks if you were
05:49 - to click on them
05:50 - however we need to state what we want
05:52 - them to do within the action performed
05:53 - method
05:54 - so let's just do this with some if
05:56 - statements so if
05:58 - e dot get source is
06:01 - equal to our load item we will pretend
06:05 - that we're loading a file so
06:08 - system.out.printline
06:16 - i think i mistyped this there
06:22 - we'll display a message beep boop
06:27 - you loaded a file all right
06:30 - but within our action performance method
06:32 - it does not recognize this
06:34 - load item component so we need to
06:36 - declare these
06:37 - outside of our constructor because right
06:39 - now they are only local
06:41 - so anything within the constructor
06:42 - within these sets of
06:44 - curly braces actually recognize what
06:47 - this is
06:48 - so let's declare all of these items all
06:50 - of these components outside of our
06:51 - constructor
06:52 - so that's j menu bar and we do not need
06:54 - to declare this twice
06:57 - i could have done this for the beginning
06:58 - but i think it's easier to understand if
07:00 - i just
07:01 - declare everything all together and then
07:03 - we fix this later
07:06 - so give me one moment to fix these
07:09 - so that's our edit menu our help menu
07:14 - and then we will probably want to
07:16 - declare the items as well outside of the
07:17 - constructor
07:18 - so we have load item save item and exit
07:20 - item actually i think i'm just going to
07:22 - copy all these
07:24 - and get rid of most of these uh lines
07:28 - here
07:33 - there we go all right so our action
07:35 - performed method now recognizes
07:37 - this load item component and let's just
07:40 - create a few other if statements
07:42 - there's more elegant ways of writing
07:44 - this but this is something really simple
07:46 - for us beginners
07:47 - so let's say if e that gets source
07:50 - equals
07:51 - save item we will display b boop you
07:55 - saved a file and then lastly we have
07:57 - exit item
07:59 - so it's the same process as before
08:03 - so exit item actually why don't we have
08:07 - our program
08:08 - actually exit so in order to do that it
08:10 - is
08:11 - system dot exit and then you can just
08:14 - pass in zero
08:16 - all right so this will now respond to
08:18 - events
08:20 - so here's our menu bar each of the menus
08:23 - and here are the menu items
08:25 - so if we click load it's going to
08:27 - pretend that we're loading a file
08:29 - file save you have saved the file and
08:32 - then exit
08:33 - exit will actually work because
08:34 - system.exit will close out of your
08:36 - program
08:37 - one feature available to us is that we
08:39 - can set keyboard
08:40 - shortcuts for all of the menu items and
08:43 - the menus
08:44 - so in order to do that we use the set
08:46 - mnemonic
08:47 - method so let's add that perhaps here
08:51 - so let's begin with the different menu
08:53 - items so we type in the name of the menu
08:55 - item we want to add a
08:57 - mnemonic to so that is let's say
09:00 - load first so load item dot
09:03 - set mnemonic
09:07 - it's spelt kind of funky so set mnemonic
09:10 - and then we add a key event so key
09:14 - event dot and then the key that we want
09:17 - to set
09:17 - for this shortcut so let's say we want
09:20 - l for load so that would be
09:24 - vk underscore capital l
09:27 - so i'll add a comment here so this is
09:30 - l for load and let's set a few others
09:34 - for save and exit
09:38 - so save item set mnemonic
09:42 - key event then s
09:45 - make sure that's capital s for load so s
09:48 - for load
09:49 - and then exit
09:53 - so that is exit item key event
09:57 - how about e e for
10:00 - exit let me fix that
10:03 - all right let's try this
10:06 - so we still need to navigate to the
10:09 - specific menu where these are contained
10:11 - but if you look at each of these
10:15 - menu items here they are underlined with
10:17 - their keyboard shortcut
10:19 - so if i were to type l it's going to
10:22 - load a file
10:24 - s to save and then e to exit
10:28 - and you can do the same thing for the
10:29 - individual menus as well
10:31 - so let's set a mnemonic for those
10:36 - i'm just going to group these together
10:38 - so we have
10:39 - file menu edit menu
10:46 - and then help menu
10:50 - so let's say f e h
10:53 - to match the file or the different menu
10:56 - names
10:57 - so that's f e and then
11:00 - h however for these menus you need to
11:04 - hold alt plus whatever key so that's
11:07 - alt f for file
11:10 - and then alt e for edit
11:14 - and alt h for help
11:18 - probably change these as well so alt f
11:20 - for
11:21 - file alt e for edit
11:24 - and alt h for help and let's give this a
11:28 - go
11:31 - now i'm not going to use the mouse
11:33 - cursor at all i'm going to use my
11:34 - mnemonics that i set up
11:36 - so if i want the help menu that is alt
11:40 - h edit is alt e
11:43 - file is alt f and then to select one of
11:46 - the menu items i don't need to hold alt
11:48 - i just select the letter so you can
11:51 - actually see that they're underlined too
11:52 - so load is just l i need to go back to
11:55 - the file if i want to select something
11:57 - else so that is alt f
11:59 - then s for save alt f again to go back
12:02 - to file
12:03 - and then e for exit all right
12:06 - so let's also set some icons for each of
12:08 - these menu items
12:10 - so i have a few icons that i want to use
12:12 - for load
12:13 - i just have a folder save is a floppy
12:16 - disk
12:17 - and exit is a door because i think
12:19 - that's appropriate
12:20 - so i'm going to create some image icons
12:22 - but i'm going to declare these
12:24 - outside of our constructor so image
12:27 - icon i will call the first one load icon
12:31 - and then i want a save icon and exit
12:34 - icon
12:35 - so this is save icon
12:39 - and then exit icon
12:43 - and i'm going to instantiate these
12:45 - within the constructor
12:48 - so load icon equals
12:51 - new image icon then the file path
12:55 - or the file name since these are within
12:57 - the same project folder
12:59 - i just have to use the file name i don't
13:01 - need the full file path
13:03 - so for load icon i'm going to use
13:06 - load.png
13:08 - and repeat the process for save and exit
13:12 - so save icon
13:15 - save.png
13:19 - exit icon and that is
13:23 - exit.png and then we need to
13:27 - set these icons to the menu items
13:31 - so let's add them perhaps here
13:35 - so load item dot set
13:39 - icon then we pass in an icon i'm going
13:42 - to pass
13:43 - in my load icon that i created
13:47 - and we'll need to repeat the process for
13:49 - the other items
13:51 - so next we have save item and this icon
13:54 - is that floppy disk
13:56 - save icon and then
14:00 - exit item dot set icon exit
14:03 - icon so now we should have some icons
14:07 - for these
14:08 - menu items so here we go we have the
14:11 - three icons that i wanted to use
14:13 - we can load we can save and then we can
14:15 - exit
14:16 - all right so in the next video i'm going
14:18 - to show you guys how we can use
14:19 - the j file chooser class where we can
14:22 - actually select a file
14:24 - and you can use this as like a backbone
14:26 - if you want so that's the basics
14:28 - of what did we cover again menu bars
14:32 - menus and menu items if you want a copy
14:34 - of all this code i'll post all of this
14:35 - in the comments down below
14:37 - but yeah that's the basics of creating a
14:39 - menu bar in java
14:42 - hey you yeah i'm talking to you if you
14:44 - learn something new
14:45 - then you can help me help you in three
14:48 - easy steps
14:49 - by smashing that like button drop a
14:52 - comment down below
14:53 - and subscribe if you'd like to become a
14:55 - fellow bro
15:00 - [Music]
15:16 - you

Cleaned transcript:

hey what's going on everybody it's your bro here hope you're doing well and in this video i'm going to teach you guys how we can create a menu bar in java so sit back relax and enjoy the show if you find this video helpful please remember to like comment and subscribe your support will help keep this channel running all right people let's dive into this so i have two classes a main class and then a my frame class my frame extends jframe so it behaves exactly like a jframe it also implements the action listener interface and within my main class i just have a new instance of my frame and within the constructor of my frame i have four lines of code this dot set default close operation jframe exit on close this dot set size set this to whatever size you want i just picked 500 by 500 this dot set layout i'm using a new flow layout and this dot set visible set to true and then also make sure you have an action performed method so let's begin to create a menu bar we first need to create the menu bar then we add separate menus or tabs kind of like what we have at the top here with our id is there's different tabs that you can navigate to and there are also menu items that you add to each of these tabs to each of these menus so let's begin by creating the menu bar to actually be as the container to contain all of these menus and menu items so let's create a j menu bar and we will call this menu bar equals new j menu bar and then instead of adding this to the frame we set it so type in the name of the frame you're using for me it's just this so this dot set menu bar and we place the name of the menu bar within this method that's set j menu bar by the way alright so let's try this all right so nothing is currently visible that's because we have to add menus to this menu bar kind of like what we have at the top of our id is so let's create menus for file edit and help so these are j menus j menu let's call the first menu file menu equals new j menu and then you can either set some text or pass this to the constructor i will just say file and let's do the same thing for edit and help so we have an edit menu that says edit and a help menu that says help now with these menus we add them to the menu bar we don't set them so we type in the name of our menu bar menu bar dot add then we're going to add these individual menus so we're going to add the file menu first followed by the edit menu then help menu so edit menu and then help menu and now these should be visible so you can see here here's our menu bar and here are the individual tabs or menus however if we were to click on these there's no menu items so let's add a few items to our file menu so these are menu items so let's declare these let's say we want a menu for a menu item for save load and exit so these are j menu items and we'll call the first one load item equals new j menu item and we will set some text either by using the set text method or just pass this into the constructor so this will be load then we'll want a few others for save and exit so this will be save item and the text will be and exit item and the text will be exit so then with these items we add them to the menu that we want let's say we want to add these to the file menu so we type in the name of our file menu kind of like what we did with our menu bar so file menu dot add load item so this is a menu item and we'll repeat the process for save item and exit item so save item and exit item and i'm just going to group these together so it's easier to read all right so this is what we got so far we have our menu bar we have our menus they kind of function like tabs we don't have anything added to help or edit i don't really think we'll need to but with file there's actually a drop down menu we can select one of these items to perform some sort of task for us so let's use our action listener interface to actually have these perform some sort of task for us so we need to add an action listener to each of these menu items so let's add them here so load item dot add action listener since we're implementing an action listener interface we can just pass in this and we'll repeat this process for the save item and the exit item so save item and exit item so now these will respond to clicks if you were to click on them however we need to state what we want them to do within the action performed method so let's just do this with some if statements so if e dot get source is equal to our load item we will pretend that we're loading a file so system.out.printline i think i mistyped this there we'll display a message beep boop you loaded a file all right but within our action performance method it does not recognize this load item component so we need to declare these outside of our constructor because right now they are only local so anything within the constructor within these sets of curly braces actually recognize what this is so let's declare all of these items all of these components outside of our constructor so that's j menu bar and we do not need to declare this twice i could have done this for the beginning but i think it's easier to understand if i just declare everything all together and then we fix this later so give me one moment to fix these so that's our edit menu our help menu and then we will probably want to declare the items as well outside of the constructor so we have load item save item and exit item actually i think i'm just going to copy all these and get rid of most of these uh lines here there we go all right so our action performed method now recognizes this load item component and let's just create a few other if statements there's more elegant ways of writing this but this is something really simple for us beginners so let's say if e that gets source equals save item we will display b boop you saved a file and then lastly we have exit item so it's the same process as before so exit item actually why don't we have our program actually exit so in order to do that it is system dot exit and then you can just pass in zero all right so this will now respond to events so here's our menu bar each of the menus and here are the menu items so if we click load it's going to pretend that we're loading a file file save you have saved the file and then exit exit will actually work because system.exit will close out of your program one feature available to us is that we can set keyboard shortcuts for all of the menu items and the menus so in order to do that we use the set mnemonic method so let's add that perhaps here so let's begin with the different menu items so we type in the name of the menu item we want to add a mnemonic to so that is let's say load first so load item dot set mnemonic it's spelt kind of funky so set mnemonic and then we add a key event so key event dot and then the key that we want to set for this shortcut so let's say we want l for load so that would be vk underscore capital l so i'll add a comment here so this is l for load and let's set a few others for save and exit so save item set mnemonic key event then s make sure that's capital s for load so s for load and then exit so that is exit item key event how about e e for exit let me fix that all right let's try this so we still need to navigate to the specific menu where these are contained but if you look at each of these menu items here they are underlined with their keyboard shortcut so if i were to type l it's going to load a file s to save and then e to exit and you can do the same thing for the individual menus as well so let's set a mnemonic for those i'm just going to group these together so we have file menu edit menu and then help menu so let's say f e h to match the file or the different menu names so that's f e and then h however for these menus you need to hold alt plus whatever key so that's alt f for file and then alt e for edit and alt h for help probably change these as well so alt f for file alt e for edit and alt h for help and let's give this a go now i'm not going to use the mouse cursor at all i'm going to use my mnemonics that i set up so if i want the help menu that is alt h edit is alt e file is alt f and then to select one of the menu items i don't need to hold alt i just select the letter so you can actually see that they're underlined too so load is just l i need to go back to the file if i want to select something else so that is alt f then s for save alt f again to go back to file and then e for exit all right so let's also set some icons for each of these menu items so i have a few icons that i want to use for load i just have a folder save is a floppy disk and exit is a door because i think that's appropriate so i'm going to create some image icons but i'm going to declare these outside of our constructor so image icon i will call the first one load icon and then i want a save icon and exit icon so this is save icon and then exit icon and i'm going to instantiate these within the constructor so load icon equals new image icon then the file path or the file name since these are within the same project folder i just have to use the file name i don't need the full file path so for load icon i'm going to use load.png and repeat the process for save and exit so save icon save.png exit icon and that is exit.png and then we need to set these icons to the menu items so let's add them perhaps here so load item dot set icon then we pass in an icon i'm going to pass in my load icon that i created and we'll need to repeat the process for the other items so next we have save item and this icon is that floppy disk save icon and then exit item dot set icon exit icon so now we should have some icons for these menu items so here we go we have the three icons that i wanted to use we can load we can save and then we can exit all right so in the next video i'm going to show you guys how we can use the j file chooser class where we can actually select a file and you can use this as like a backbone if you want so that's the basics of what did we cover again menu bars menus and menu items if you want a copy of all this code i'll post all of this in the comments down below but yeah that's the basics of creating a menu bar in java hey you yeah i'm talking to you if you learn something new then you can help me help you in three easy steps by smashing that like button drop a comment down below and subscribe if you'd like to become a fellow bro you
