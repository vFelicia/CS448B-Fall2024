With timestamps:

00:00 - hey how's it going everybody it's you
00:01 - bro hope you're doing well and in this
00:03 - video i'm going to teach you guys how we
00:04 - can accept some user input
00:06 - in java so sit back relax and enjoy the
00:09 - show
00:12 - make sure you like comment and subscribe
00:15 - one like equals one prayer for the
00:17 - youtube algorithm
00:19 - welcome back ladies and gentlemen i'm
00:21 - going to explain how we can use a
00:23 - scanner to accept some user input
00:25 - the scanner class is found in the java
00:27 - utility package of your library and we
00:29 - need to import that before we can use
00:31 - the scanner so outside of the class at
00:34 - the top of our program
00:35 - this is what we're going to type import
00:38 - java dot util and the name of the class
00:41 - we would like to import which is scanner
00:45 - then a semicolon now we can use the
00:47 - scanner class to create
00:48 - a scanner object so we're going to be
00:51 - performing a little bit of object
00:53 - oriented programming
00:54 - we'll be covering object oriented
00:55 - programming in the later part of the
00:56 - series so don't worry
00:58 - so repeat after me scanner then we need
01:00 - a name for the scanner
01:02 - let's call it scanner a lowercase equals
01:04 - new
01:05 - scanner then a set of parentheses and a
01:08 - semicolon
01:09 - within the parentheses we're going to
01:10 - type system dot in
01:13 - and there we go we have our scanner so
01:15 - we can use the scanner to accept some
01:17 - user input
01:18 - so let's let the user know that we would
01:21 - like them to type in something
01:22 - maybe a name let's create a prompt that
01:25 - will ask somebody for their name
01:26 - so within a print line statement we'll
01:28 - type what
01:30 - is your name
01:34 - and next what we'll do is take our user
01:36 - input and assign it to
01:37 - a variable perhaps a string variable
01:40 - called name
01:41 - string name equals and now we're going
01:44 - to use our scanner so we type in
01:46 - the name of the scanner dot and to enter
01:49 - a
01:49 - line of text we're going to use a
01:51 - certain method of the scanner
01:53 - it is the next line method
01:57 - and when we type in user input we type
01:59 - it into the console window
02:01 - here at the bottom so let's do something
02:03 - with this name
02:04 - maybe display this within a message
02:08 - system.out.printline hello
02:11 - plus whatever your name is so let's
02:13 - compile and run this
02:15 - what is your name now our program is
02:17 - currently paused
02:18 - until we type in some user input and
02:21 - then press the enter key
02:23 - when you press enter that's how you
02:24 - submit some user input into the console
02:26 - window
02:27 - so i'm going to click within my console
02:29 - window and type in something
02:31 - i'm going to type in bro and to submit
02:33 - some user input you press the enter key
02:36 - and it states hello plus my name which
02:38 - is what i entered
02:40 - bro now there's different types of input
02:43 - that we can accept
02:44 - this time let's accept only an integer
02:47 - number perhaps we can ask somebody for
02:50 - their age
02:51 - so let's write a prompt for that
02:53 - system.out.printline
02:55 - how old are you
02:59 - and this time we will declare an integer
03:02 - variable
03:02 - maybe called age int age equals
03:07 - scanner dot next
03:10 - and we are looking for int
03:13 - so we can only accept a whole integer
03:17 - u r
03:20 - plus age plus
03:24 - years old
03:27 - okay let's try this again what is your
03:30 - name
03:31 - bro how old are you let's just say that
03:34 - i'm
03:34 - 18. hit enter hello bro you
03:37 - are 18 years old so what happens if we
03:41 - do not enter in
03:42 - a number so let's try and break this
03:44 - what is your name
03:46 - bro how old are you we're not going to
03:48 - enter a number this time
03:50 - let's type in the word pizza and see
03:51 - what happens well we encountered
03:54 - an exception we encountered an input
03:57 - mismatch
03:57 - exception because when our scanner is
04:00 - looking for an integer
04:01 - we typed in a string so we need to make
04:04 - sure that the input
04:05 - type the data type matches in a future
04:08 - lesson we'll be covering
04:10 - exception handling where we can prevent
04:12 - this very thing from happening
04:14 - but for now since we're beginners we'll
04:15 - just have to be sure to type in
04:17 - the correct data type of the input that
04:19 - our program
04:20 - is looking for now there's one more
04:22 - thing that i want to show you guys this
04:24 - is a common problem
04:25 - if you use next line after next int or
04:29 - anything else that's not next line so
04:32 - let's ask somebody for their favorite
04:34 - food this time
04:35 - so let's add that at the end
04:38 - system.out.printline
04:39 - what is your favorite
04:43 - food then we'll create a string variable
04:47 - called food
04:48 - string food equals scanner dot
04:51 - next line and we will display this
04:57 - system.out.printline you
05:00 - like plus food
05:04 - all right so here are the questions what
05:06 - is your name
05:08 - bro how old are you 18. now pay
05:11 - attention to this when i press
05:12 - enter when we reached the question on
05:15 - what is your favorite food
05:16 - well our program skipped our user input
05:18 - and continued on with the rest of the
05:20 - code
05:21 - so it states hello bro you are 18 years
05:23 - old but we were not able to
05:25 - input anything for our favorite food
05:28 - here's the reason why
05:29 - here's what's going on let's pretend
05:31 - that this box
05:32 - is a representation of our scanner and
05:35 - we're going to use the next
05:36 - line method of our scanner to read a
05:39 - line of text
05:40 - so we type in our name and then press
05:42 - the enter key to submit
05:44 - so this backslash n is an escape
05:46 - sequence for a new line
05:47 - the next line method will read an entire
05:50 - line of text
05:51 - and stop when it reaches a new line
05:53 - character so
05:54 - after we call the next line method our
05:56 - scanner is going to be empty
05:58 - however if we were to call a different
06:00 - method that doesn't read a new line
06:02 - character such as
06:03 - next ins so we type in our input such as
06:06 - the number 18
06:07 - and then press the enter key that will
06:09 - add a new line character
06:11 - so our next int method is only going to
06:14 - read this numeric portion of our scanner
06:17 - and then when we submit it well this new
06:19 - line character is still going to be
06:21 - within our scanner
06:22 - and if we were to use our scanner again
06:24 - and call a different method
06:26 - like next line well our next line method
06:29 - thinks that we're at the end because
06:31 - there's this new line character within
06:33 - our scanner so we would need some way to
06:35 - clear out that new line
06:37 - one easy fix for this is that after you
06:40 - call the
06:40 - next and method what we could do is call
06:43 - the next
06:44 - line method to clear our scanner so i'm
06:47 - just going to copy this
06:48 - portion and paste it we're not really
06:50 - going to do anything with that newline
06:52 - character this will just clear the
06:53 - scanner for us
06:54 - so now we should be able to answer all
06:56 - three questions
06:57 - so type in your name what is your name
07:00 - it is bro
07:01 - how old are you let's say i'm 18. what
07:03 - is your favorite food and you can see
07:05 - that it paused to this time
07:06 - unlike the first time and my favorite
07:09 - food is pizza
07:10 - press enter hello bro you are 18 years
07:13 - old you like pizza
07:15 - well then that is one way in which you
07:17 - can use a scanner to accept some user
07:19 - input
07:20 - scanners are capable of much more you
07:22 - can also use them to read
07:23 - the contents of a file and a few other
07:25 - things but we'll learn about those in
07:27 - future videos
07:28 - and if you need to use a scanner be sure
07:30 - to include this import at the top
07:32 - import java.util.scanner because the
07:35 - scanner class is found within the
07:37 - utility package
07:38 - and then you'll need to create a scanner
07:40 - object just by following these steps
07:42 - scanner you can call it scanner equals
07:45 - new scanner
07:46 - well guys and gals that is how scanners
07:48 - work in java before you go
07:50 - i would greatly appreciate it if you
07:52 - could do a favor for me and
07:53 - like this video leave a comment down
07:55 - below and subscribe if you'd like to
07:57 - become a fellow bro

Cleaned transcript:

hey how's it going everybody it's you bro hope you're doing well and in this video i'm going to teach you guys how we can accept some user input in java so sit back relax and enjoy the show make sure you like comment and subscribe one like equals one prayer for the youtube algorithm welcome back ladies and gentlemen i'm going to explain how we can use a scanner to accept some user input the scanner class is found in the java utility package of your library and we need to import that before we can use the scanner so outside of the class at the top of our program this is what we're going to type import java dot util and the name of the class we would like to import which is scanner then a semicolon now we can use the scanner class to create a scanner object so we're going to be performing a little bit of object oriented programming we'll be covering object oriented programming in the later part of the series so don't worry so repeat after me scanner then we need a name for the scanner let's call it scanner a lowercase equals new scanner then a set of parentheses and a semicolon within the parentheses we're going to type system dot in and there we go we have our scanner so we can use the scanner to accept some user input so let's let the user know that we would like them to type in something maybe a name let's create a prompt that will ask somebody for their name so within a print line statement we'll type what is your name and next what we'll do is take our user input and assign it to a variable perhaps a string variable called name string name equals and now we're going to use our scanner so we type in the name of the scanner dot and to enter a line of text we're going to use a certain method of the scanner it is the next line method and when we type in user input we type it into the console window here at the bottom so let's do something with this name maybe display this within a message system.out.printline hello plus whatever your name is so let's compile and run this what is your name now our program is currently paused until we type in some user input and then press the enter key when you press enter that's how you submit some user input into the console window so i'm going to click within my console window and type in something i'm going to type in bro and to submit some user input you press the enter key and it states hello plus my name which is what i entered bro now there's different types of input that we can accept this time let's accept only an integer number perhaps we can ask somebody for their age so let's write a prompt for that system.out.printline how old are you and this time we will declare an integer variable maybe called age int age equals scanner dot next and we are looking for int so we can only accept a whole integer u r plus age plus years old okay let's try this again what is your name bro how old are you let's just say that i'm 18. hit enter hello bro you are 18 years old so what happens if we do not enter in a number so let's try and break this what is your name bro how old are you we're not going to enter a number this time let's type in the word pizza and see what happens well we encountered an exception we encountered an input mismatch exception because when our scanner is looking for an integer we typed in a string so we need to make sure that the input type the data type matches in a future lesson we'll be covering exception handling where we can prevent this very thing from happening but for now since we're beginners we'll just have to be sure to type in the correct data type of the input that our program is looking for now there's one more thing that i want to show you guys this is a common problem if you use next line after next int or anything else that's not next line so let's ask somebody for their favorite food this time so let's add that at the end system.out.printline what is your favorite food then we'll create a string variable called food string food equals scanner dot next line and we will display this system.out.printline you like plus food all right so here are the questions what is your name bro how old are you 18. now pay attention to this when i press enter when we reached the question on what is your favorite food well our program skipped our user input and continued on with the rest of the code so it states hello bro you are 18 years old but we were not able to input anything for our favorite food here's the reason why here's what's going on let's pretend that this box is a representation of our scanner and we're going to use the next line method of our scanner to read a line of text so we type in our name and then press the enter key to submit so this backslash n is an escape sequence for a new line the next line method will read an entire line of text and stop when it reaches a new line character so after we call the next line method our scanner is going to be empty however if we were to call a different method that doesn't read a new line character such as next ins so we type in our input such as the number 18 and then press the enter key that will add a new line character so our next int method is only going to read this numeric portion of our scanner and then when we submit it well this new line character is still going to be within our scanner and if we were to use our scanner again and call a different method like next line well our next line method thinks that we're at the end because there's this new line character within our scanner so we would need some way to clear out that new line one easy fix for this is that after you call the next and method what we could do is call the next line method to clear our scanner so i'm just going to copy this portion and paste it we're not really going to do anything with that newline character this will just clear the scanner for us so now we should be able to answer all three questions so type in your name what is your name it is bro how old are you let's say i'm 18. what is your favorite food and you can see that it paused to this time unlike the first time and my favorite food is pizza press enter hello bro you are 18 years old you like pizza well then that is one way in which you can use a scanner to accept some user input scanners are capable of much more you can also use them to read the contents of a file and a few other things but we'll learn about those in future videos and if you need to use a scanner be sure to include this import at the top import java.util.scanner because the scanner class is found within the utility package and then you'll need to create a scanner object just by following these steps scanner you can call it scanner equals new scanner well guys and gals that is how scanners work in java before you go i would greatly appreciate it if you could do a favor for me and like this video leave a comment down below and subscribe if you'd like to become a fellow bro
