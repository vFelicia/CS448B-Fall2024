With timestamps:

00:01 - all right everybody do while loops a do
00:05 - while loop it does some block of code
00:07 - first and then you repeat that block of
00:10 - code if a condition is true here's an
00:13 - example let's write a program that will
00:15 - ask a user to enter in a positive number
00:17 - first we'll use a while loop that i'll
00:19 - demonstrate how a do while loop would
00:21 - actually be better for the situation we
00:23 - have an integer number int
00:26 - number
00:27 - i'll write a while loop
00:29 - while number
00:31 - is less than zero
00:33 - we will prompt the user to enter in a
00:35 - positive number
00:38 - enter a
00:39 - positive number
00:43 - okay standard
00:45 - input
00:46 - number
00:48 - outside of the while loop at the end of
00:49 - our program let's display the number
00:52 - standard
00:54 - output
00:56 - the number is
01:00 - number
01:01 - so this isn't going to work normally
01:02 - here's why let's run this
01:05 - the number is zero so this is what's
01:07 - going on we've declared our number but
01:09 - have not assigned a value quite yet when
01:11 - we reach the while loop we check the
01:13 - condition if the condition is true we
01:16 - execute this block of code since we've
01:18 - declared an integer variable but have
01:20 - not assigned it a value it's defaulting
01:22 - to just zero zero is not less than 0 so
01:26 - this condition is false that means we
01:28 - skip the while loop and continue on
01:30 - another way in which we could write this
01:32 - but it's not the best solution is that
01:34 - we could copy what's within this block
01:36 - of code
01:37 - then run it once if number is still less
01:40 - than zero we would then execute this
01:42 - block of code repeatedly let's try this
01:45 - again
01:46 - okay enter a positive number one two
01:48 - three the number is one two three let's
01:51 - type in a negative number negative one
01:54 - enter a positive number negative one
01:56 - enter a positive number negative one
01:58 - so i can't actually continue until i
02:00 - enter in a positive number you know this
02:03 - does work but there's a much better way
02:05 - of writing this because you know we're
02:07 - repeating at least two lines of code
02:09 - when we really don't need to we need to
02:11 - run this block of code once and then
02:13 - repeat it if this condition is true well
02:15 - you know what would be great for that a
02:17 - do while loop
02:18 - let's eliminate these two lines of code
02:20 - to create a do while loop we will move
02:22 - this condition to the end
02:24 - while then our condition
02:26 - preceding the left curly brace write do
02:30 - do this code once and then check the
02:32 - condition make sure you have a semicolon
02:35 - at the end let's try it again
02:38 - enter a positive number i'm just going
02:39 - to type in a negative number negative
02:41 - one nope negative one nope
02:44 - how about a positive number one two
02:45 - three the number is one two three so
02:48 - that's a do while loop you do some block
02:50 - of code first then you repeat it again
02:52 - if the condition is true it's an
02:54 - optional way to repeat some code one
02:56 - good use of a do while loop that comes
02:58 - to mind maybe we're playing a game we
02:59 - would like to run the game once at the
03:01 - end of the game a user can choose if
03:03 - they would like to play again based on
03:05 - the user's input if they would like to
03:06 - play again we can run the game one more
03:08 - time repeatedly so that's a do while
03:10 - loop everybody i'll post this code in
03:12 - the comments section down below and well
03:14 - yeah that's a do while loop in c plus

Cleaned transcript:

all right everybody do while loops a do while loop it does some block of code first and then you repeat that block of code if a condition is true here's an example let's write a program that will ask a user to enter in a positive number first we'll use a while loop that i'll demonstrate how a do while loop would actually be better for the situation we have an integer number int number i'll write a while loop while number is less than zero we will prompt the user to enter in a positive number enter a positive number okay standard input number outside of the while loop at the end of our program let's display the number standard output the number is number so this isn't going to work normally here's why let's run this the number is zero so this is what's going on we've declared our number but have not assigned a value quite yet when we reach the while loop we check the condition if the condition is true we execute this block of code since we've declared an integer variable but have not assigned it a value it's defaulting to just zero zero is not less than 0 so this condition is false that means we skip the while loop and continue on another way in which we could write this but it's not the best solution is that we could copy what's within this block of code then run it once if number is still less than zero we would then execute this block of code repeatedly let's try this again okay enter a positive number one two three the number is one two three let's type in a negative number negative one enter a positive number negative one enter a positive number negative one so i can't actually continue until i enter in a positive number you know this does work but there's a much better way of writing this because you know we're repeating at least two lines of code when we really don't need to we need to run this block of code once and then repeat it if this condition is true well you know what would be great for that a do while loop let's eliminate these two lines of code to create a do while loop we will move this condition to the end while then our condition preceding the left curly brace write do do this code once and then check the condition make sure you have a semicolon at the end let's try it again enter a positive number i'm just going to type in a negative number negative one nope negative one nope how about a positive number one two three the number is one two three so that's a do while loop you do some block of code first then you repeat it again if the condition is true it's an optional way to repeat some code one good use of a do while loop that comes to mind maybe we're playing a game we would like to run the game once at the end of the game a user can choose if they would like to play again based on the user's input if they would like to play again we can run the game one more time repeatedly so that's a do while loop everybody i'll post this code in the comments section down below and well yeah that's a do while loop in c plus
