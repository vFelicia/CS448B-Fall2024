With timestamps:

00:00 - hey what's going on people so in today's
00:01 - video we're going to create a digital
00:03 - clock using JavaScript HTML and CSS so
00:07 - let's get started the HTML for this
00:10 - project is going to be very minimal I
00:12 - will create a development the ID of the
00:15 - develop will be clock Das container
00:19 - within this development we'll have a
00:21 - nested development with an ID of clock
00:25 - we have a clock within a clock container
00:28 - as a placeholder temporar ly the text on
00:31 - the clock will be 0 0 colon 0 0 colon 0
00:36 - 0
00:38 - 00000000 and I'm just going to zoom in
00:41 - temporarily and that is all the HTML
00:43 - that we need let's head to our CSS
00:47 - stylesheet let's begin with the
00:50 - body I will set all margin to be zero
00:54 - originally let's select our clock
00:57 - container ID clock
01:01 - container I'll use flex box for the
01:03 - clock
01:04 - container display
01:07 - Flex I will justify content in the
01:11 - center justify content
01:16 - Center if you would also like to
01:18 - vertically align you'll need to add the
01:20 - following two lines of code I will
01:23 - align items
01:26 - Center this CSS property will vertically
01:29 - align elements but the clock container
01:31 - itself is kind of small for example I'll
01:34 - add a border of two pixel
01:38 - solid the elements within the clock
01:40 - container are aligned both horizontally
01:42 - and vertically but the container itself
01:44 - is kind of small to vertically align
01:46 - this element within the window itself
01:48 - we'll have to increase the height of the
01:49 - clock container I will add height of 100
01:55 - VH for the viewport height and we can
01:58 - remove the Border
02:00 - yep the clock is now within the middle
02:02 - of the container both horizontally and
02:04 - vertically but if you prefer to be at
02:06 - the top you can eliminate these last two
02:08 - lines it's up to you let's style the
02:11 - clock itself we are selecting the ID of
02:16 - clock I will change the font family to
02:20 - be
02:23 - monospace this is the normal size when
02:25 - I'm zoomed in to 100% I will set the
02:29 - font size to be
02:31 - 6.5
02:33 - R then set the font weight to be
02:39 - bold and text align
02:43 - Center if you would like a background
02:45 - image for the body of your document I
02:48 - just so happen to have one right here
02:50 - it's a picture of Central Park in New
02:51 - York this is optional but if you would
02:53 - like to include a background image of
02:55 - this project within your CSS stylesheet
02:58 - you'll add the following CSS
03:01 - properties I will set the background
03:04 - image property to be a
03:07 - URL so what is the name of that image
03:11 - I'm going to copy the name of it and
03:14 - paste it within this URL
03:16 - function I'll set the background
03:18 - position to be the center right now
03:20 - we're seeing the top left of the image
03:23 - instead of the
03:24 - center
03:26 - background Position will be
03:32 - Center if you're using a small image
03:35 - your image might be repeating itself to
03:37 - take up all the available space to
03:39 - prevent that you can set the
03:41 - background repeat
03:45 - property to be no
03:49 - repeat mine already wasn't repeating
03:52 - though but yours might be then we'll set
03:55 - the
03:57 - background size to
04:00 - cover by adding this property this image
04:04 - will cover the entire window and
04:06 - maintain its aspect ratio if you do have
04:09 - additional content besides this clock
04:11 - you can keep the background in place
04:13 - when you scroll down by adding this
04:16 - property
04:17 - background
04:20 - attachment to be
04:23 - fixed this property isn't going to be
04:26 - apparent because we don't have a scroll
04:27 - bar but if you did have a scroll bar the
04:30 - background will stay in place at least
04:32 - let's head back to our clock element I
04:34 - will change the color the font color to
04:37 - be
04:38 - white if you would like a background
04:40 - blur effect you'll add this property
04:43 - we'll set the backdrop filter property
04:47 - to be a blur
04:49 - function the greater the number the more
04:52 - blur effect you're going to
04:53 - have so this is 5 pixels if I were to
04:57 - increase this to 50 well well there's a
04:59 - lot of blur then I'll set my blur to be
05:02 - five I would just like a little bit as
05:04 - if we're looking through glass I'll
05:06 - increase the width to be 100% to take up
05:09 - 100% of the width of the web
05:11 - browser width
05:15 - 100% to give this glass look a foggy
05:18 - appearance we can add a background color
05:20 - that's slightly
05:22 - gray background-
05:26 - color let's select gray but I like using
05:29 - us hsl values so for the lightness I'll
05:32 - set it to be
05:34 - 100% but I'm going to lower the alpha
05:37 - down to like
05:41 - 10% now the background has a foggy glass
05:44 - appearance if you were to increase the
05:46 - amount of
05:47 - alpha that'll increase the
05:50 - lightness I'll keep mine as 10% 0.1 for
05:53 - the
05:54 - alpha all right now we just need to get
05:57 - this clock to run so let's save
05:59 - everything go to our Javascript
06:02 - file we will create a function to update
06:06 - our
06:09 - clock immediately when we begin this
06:11 - program we will update our clock once
06:14 - immediately now we need to get the
06:16 - current time let's declare a constant of
06:20 - now what is the time right now this will
06:23 - be a new date
06:25 - object to get the hour we will say const
06:29 - hours equals use the
06:33 - builtin get hours method then let's do
06:37 - this with minutes const minutes equals
06:41 - now. getet minutes
06:44 - method and seconds const seconds equals
06:50 - now. get
06:53 - seconds I'm going to change the text
06:56 - content of the clock to be a time string
06:59 - it will be a template string how do we
07:01 - want to arrange our
07:03 - numbers const time string equals a
07:08 - template
07:10 - string first we'll add a placeholder for
07:13 - our hours
07:15 - colon
07:17 - minutes
07:19 - colon
07:21 - seconds then we will select the ID of
07:25 - clock document. getet element by ID the
07:30 - ID that we're getting is our
07:33 - clock change the text content to equal
07:38 - our time string when we save the time on
07:42 - the clock should update currently for me
07:44 - it's 8:00 for each of these placeholders
07:47 - for hours minutes and seconds I would
07:50 - like each to take up two digits We'll
07:53 - add some zeros for padding for example
07:55 - this time will be 08
07:58 - 006
07:59 - there's a built-in string method for
08:01 - that so with hours minutes and seconds
08:04 - we will convert these to
08:06 - Strings we'll use method chaining then
08:08 - add to string do this for hours minutes
08:12 - and
08:13 - seconds with strings there's a pad start
08:19 - method for the first two
08:21 - characters pad them with a
08:24 - zero let's copy this method and paste it
08:27 - for minutes and seconds now when I save
08:30 - and update the time we have zero padding
08:33 - 08 01 54 in this case to get this clock
08:37 - to update every second we'll follow
08:40 - update clock with the set interval
08:44 - function set interval works like set
08:47 - timeout except it will call a function
08:49 - repeatedly not just once but we need a
08:52 - call back the Callback will be update
08:54 - clock call this function after every
08:57 - 1,000 milliseconds
09:00 - and now our clock should
09:02 - run currently this clock is in military
09:05 - time although I'm recording this at 8:00
09:08 - in the morning if you would like this
09:10 - clock to be a 12-hour clock then at a.m
09:12 - or p.m. here's the following changes
09:14 - we're going to make we'll declare ours
09:17 - with let instead of const so we can
09:19 - change it and reassign it we'll create a
09:21 - new constant of
09:23 - meridium 4 a.m. or
09:27 - p.m. this will equal
09:29 - hours is hours greater than or equal to
09:32 - 12 we'll use the erary operator to check
09:35 - this if ours is greater than or equal to
09:38 - 12 meridium will be PM otherwise it will
09:43 - be
09:45 - am then after our
09:48 - meridium we'll reassign hours hours
09:52 - equals
09:53 - hours modulus modulus gives you the
09:56 - remainder of any division ours modul 12
10:00 - if this is zero we'll use the or logical
10:03 - operator or 12 after seconds we'll add a
10:07 - placeholder for our
10:11 - meridium currently we lost our padding
10:13 - for the hours so we're going to cut this
10:16 - part of our code to convert ours to a
10:19 - string and Pad
10:21 - it we'll take hours equals hours to
10:25 - reassign it follow hours with converting
10:28 - it to a string using the two string
10:29 - method and Pad it before displaying
10:33 - it all right and that has appeared to
10:35 - work all right everybody so that is a
10:38 - digital clock program you can make using
10:40 - HTML CSS and
10:46 - JavaScript

Cleaned transcript:

hey what's going on people so in today's video we're going to create a digital clock using JavaScript HTML and CSS so let's get started the HTML for this project is going to be very minimal I will create a development the ID of the develop will be clock Das container within this development we'll have a nested development with an ID of clock we have a clock within a clock container as a placeholder temporar ly the text on the clock will be 0 0 colon 0 0 colon 0 0 00000000 and I'm just going to zoom in temporarily and that is all the HTML that we need let's head to our CSS stylesheet let's begin with the body I will set all margin to be zero originally let's select our clock container ID clock container I'll use flex box for the clock container display Flex I will justify content in the center justify content Center if you would also like to vertically align you'll need to add the following two lines of code I will align items Center this CSS property will vertically align elements but the clock container itself is kind of small for example I'll add a border of two pixel solid the elements within the clock container are aligned both horizontally and vertically but the container itself is kind of small to vertically align this element within the window itself we'll have to increase the height of the clock container I will add height of 100 VH for the viewport height and we can remove the Border yep the clock is now within the middle of the container both horizontally and vertically but if you prefer to be at the top you can eliminate these last two lines it's up to you let's style the clock itself we are selecting the ID of clock I will change the font family to be monospace this is the normal size when I'm zoomed in to 100% I will set the font size to be 6.5 R then set the font weight to be bold and text align Center if you would like a background image for the body of your document I just so happen to have one right here it's a picture of Central Park in New York this is optional but if you would like to include a background image of this project within your CSS stylesheet you'll add the following CSS properties I will set the background image property to be a URL so what is the name of that image I'm going to copy the name of it and paste it within this URL function I'll set the background position to be the center right now we're seeing the top left of the image instead of the center background Position will be Center if you're using a small image your image might be repeating itself to take up all the available space to prevent that you can set the background repeat property to be no repeat mine already wasn't repeating though but yours might be then we'll set the background size to cover by adding this property this image will cover the entire window and maintain its aspect ratio if you do have additional content besides this clock you can keep the background in place when you scroll down by adding this property background attachment to be fixed this property isn't going to be apparent because we don't have a scroll bar but if you did have a scroll bar the background will stay in place at least let's head back to our clock element I will change the color the font color to be white if you would like a background blur effect you'll add this property we'll set the backdrop filter property to be a blur function the greater the number the more blur effect you're going to have so this is 5 pixels if I were to increase this to 50 well well there's a lot of blur then I'll set my blur to be five I would just like a little bit as if we're looking through glass I'll increase the width to be 100% to take up 100% of the width of the web browser width 100% to give this glass look a foggy appearance we can add a background color that's slightly gray background color let's select gray but I like using us hsl values so for the lightness I'll set it to be 100% but I'm going to lower the alpha down to like 10% now the background has a foggy glass appearance if you were to increase the amount of alpha that'll increase the lightness I'll keep mine as 10% 0.1 for the alpha all right now we just need to get this clock to run so let's save everything go to our Javascript file we will create a function to update our clock immediately when we begin this program we will update our clock once immediately now we need to get the current time let's declare a constant of now what is the time right now this will be a new date object to get the hour we will say const hours equals use the builtin get hours method then let's do this with minutes const minutes equals now. getet minutes method and seconds const seconds equals now. get seconds I'm going to change the text content of the clock to be a time string it will be a template string how do we want to arrange our numbers const time string equals a template string first we'll add a placeholder for our hours colon minutes colon seconds then we will select the ID of clock document. getet element by ID the ID that we're getting is our clock change the text content to equal our time string when we save the time on the clock should update currently for me it's 800 for each of these placeholders for hours minutes and seconds I would like each to take up two digits We'll add some zeros for padding for example this time will be 08 006 there's a builtin string method for that so with hours minutes and seconds we will convert these to Strings we'll use method chaining then add to string do this for hours minutes and seconds with strings there's a pad start method for the first two characters pad them with a zero let's copy this method and paste it for minutes and seconds now when I save and update the time we have zero padding 08 01 54 in this case to get this clock to update every second we'll follow update clock with the set interval function set interval works like set timeout except it will call a function repeatedly not just once but we need a call back the Callback will be update clock call this function after every 1,000 milliseconds and now our clock should run currently this clock is in military time although I'm recording this at 800 in the morning if you would like this clock to be a 12hour clock then at a.m or p.m. here's the following changes we're going to make we'll declare ours with let instead of const so we can change it and reassign it we'll create a new constant of meridium 4 a.m. or p.m. this will equal hours is hours greater than or equal to 12 we'll use the erary operator to check this if ours is greater than or equal to 12 meridium will be PM otherwise it will be am then after our meridium we'll reassign hours hours equals hours modulus modulus gives you the remainder of any division ours modul 12 if this is zero we'll use the or logical operator or 12 after seconds we'll add a placeholder for our meridium currently we lost our padding for the hours so we're going to cut this part of our code to convert ours to a string and Pad it we'll take hours equals hours to reassign it follow hours with converting it to a string using the two string method and Pad it before displaying it all right and that has appeared to work all right everybody so that is a digital clock program you can make using HTML CSS and JavaScript
