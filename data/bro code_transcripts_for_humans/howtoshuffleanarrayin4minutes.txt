With timestamps:

00:00 - hey everybody in today's video I'm going
00:01 - to show you how we can Shuffle the
00:03 - elements of an array using JavaScript
00:05 - this is an optional video you might find
00:07 - this topic helpful if you're interested
00:08 - in making a game using JavaScript or any
00:11 - sort of application where you need some
00:12 - Randomness in this example we'll create
00:14 - a deck of cards our deck of cards will
00:16 - be an array we have an a for Ace the
00:18 - numbers 2 through 10 let me finish
00:21 - typing those
00:22 - in J for Jack Q for Queen k for King I'm
00:28 - not going to include any suits for these
00:30 - cards such as Ace of Hearts Ace of clubs
00:33 - that might be overkill for this example
00:36 - one method you might see floating around
00:37 - online to shuffle the elements of an
00:39 - array is to use the sort method then
00:42 - pass in an arrow function where you take
00:44 - math.random minus 0.5 I would not
00:47 - recommend using this method just because
00:50 - the results of this method aren't
00:51 - perfectly uniform let me console.log
00:54 - cards this array appears shuffled but
00:57 - it's not that uniform but not only that
00:59 - the Lar larger the array becomes this
01:01 - method becomes increasingly more
01:03 - inefficient I would not recommend using
01:05 - the sort method to shuffle an array
01:07 - instead I would recommend using the fer
01:10 - Yates algorithm we'll create a dedicated
01:12 - function for
01:14 - this so we will Define a function to
01:17 - shuffle there will be one parameter an
01:21 - array then to invoke this function we'll
01:24 - type the function name pass an our array
01:26 - of
01:27 - cards so what do we want to do exactly
01:30 - we're first going to Loop through the
01:32 - elements of this array we'll start at
01:34 - the end and work our way towards the
01:36 - beginning we'll use a for Loop to
01:38 - decrement So within our Shuffle function
01:40 - we'll create a for Loop we will declare
01:44 - index of I let I equal R array do
01:50 - length then minus one that's the first
01:53 - statement our array has 13 elements but
01:56 - the last index is 12 because arrays
01:58 - start with zero if the array's length is
02:01 - 13 we need to subtract 1 to get 12 which
02:04 - would give us the ending index of 12
02:06 - we'll continue this loop as long as I is
02:09 - greater than
02:10 - zero then iusus to decrement now we have
02:15 - to generate a random number between the
02:17 - end and the beginning somewhere within
02:19 - this range we'll create const random
02:23 - random will store a random number take
02:26 - math. random method times
02:31 - I our index + one we'll need to round
02:34 - this number we're now going to enclose
02:37 - this equation with math. floor to round
02:39 - down math. floor and enclose this
02:44 - equation all right during the first
02:47 - iteration of this Loop we should
02:49 - generate a random number between the end
02:52 - and the beginning we'll swap our king
02:55 - with a random element within this array
02:57 - so to swap two elements of this array we
02:59 - can use destructuring in this context to
03:02 - use destructuring we'll take our
03:04 - original position array at index of I
03:07 - during our first iteration that will be
03:09 - the king we'll swap our King with our
03:12 - array at a random index the one that
03:15 - will be randomly
03:16 - generated equals our array at index of
03:20 - random comma array at index of
03:24 - I then to finish using destructuring we
03:27 - need to enclose both sides of this
03:29 - equation with with an
03:31 - array there and that will swap two
03:33 - elements of your
03:34 - array now if I run this program this
03:37 - will Shuffle the elements of my array I
03:40 - would recommend using a dedicated
03:41 - Shuffle function because in a game it's
03:44 - likely you're going to shuffle something
03:46 - more than once throughout that game like
03:48 - I said this isn't a necessary topic to
03:50 - continue on with the series but if
03:52 - you're ever interested in making a game
03:54 - using JavaScript or need some element of
03:56 - Randomness well then this function would
03:58 - work great and that is how to to shuffle
04:00 - the elements of an array using
04:03 - JavaScript

Cleaned transcript:

hey everybody in today's video I'm going to show you how we can Shuffle the elements of an array using JavaScript this is an optional video you might find this topic helpful if you're interested in making a game using JavaScript or any sort of application where you need some Randomness in this example we'll create a deck of cards our deck of cards will be an array we have an a for Ace the numbers 2 through 10 let me finish typing those in J for Jack Q for Queen k for King I'm not going to include any suits for these cards such as Ace of Hearts Ace of clubs that might be overkill for this example one method you might see floating around online to shuffle the elements of an array is to use the sort method then pass in an arrow function where you take math.random minus 0.5 I would not recommend using this method just because the results of this method aren't perfectly uniform let me console.log cards this array appears shuffled but it's not that uniform but not only that the Lar larger the array becomes this method becomes increasingly more inefficient I would not recommend using the sort method to shuffle an array instead I would recommend using the fer Yates algorithm we'll create a dedicated function for this so we will Define a function to shuffle there will be one parameter an array then to invoke this function we'll type the function name pass an our array of cards so what do we want to do exactly we're first going to Loop through the elements of this array we'll start at the end and work our way towards the beginning we'll use a for Loop to decrement So within our Shuffle function we'll create a for Loop we will declare index of I let I equal R array do length then minus one that's the first statement our array has 13 elements but the last index is 12 because arrays start with zero if the array's length is 13 we need to subtract 1 to get 12 which would give us the ending index of 12 we'll continue this loop as long as I is greater than zero then iusus to decrement now we have to generate a random number between the end and the beginning somewhere within this range we'll create const random random will store a random number take math. random method times I our index + one we'll need to round this number we're now going to enclose this equation with math. floor to round down math. floor and enclose this equation all right during the first iteration of this Loop we should generate a random number between the end and the beginning we'll swap our king with a random element within this array so to swap two elements of this array we can use destructuring in this context to use destructuring we'll take our original position array at index of I during our first iteration that will be the king we'll swap our King with our array at a random index the one that will be randomly generated equals our array at index of random comma array at index of I then to finish using destructuring we need to enclose both sides of this equation with with an array there and that will swap two elements of your array now if I run this program this will Shuffle the elements of my array I would recommend using a dedicated Shuffle function because in a game it's likely you're going to shuffle something more than once throughout that game like I said this isn't a necessary topic to continue on with the series but if you're ever interested in making a game using JavaScript or need some element of Randomness well then this function would work great and that is how to to shuffle the elements of an array using JavaScript
