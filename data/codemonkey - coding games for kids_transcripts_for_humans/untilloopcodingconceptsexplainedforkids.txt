With timestamps:

00:00 - [Music]
00:04 - welcome to the sands of until let's
00:07 - learn about until
00:11 - until is a type of loop
00:13 - the loop will run until
00:16 - a condition is met
00:18 - this is how you write the until loop
00:22 - and use the keyword until space the
00:25 - condition that you want to meet
00:28 - and then you could have any number of
00:30 - commands below but each would need to be
00:34 - indented
00:36 - here's an example
00:38 - until
00:39 - near bridge near bridge is the condition
00:43 - step one so basically i want to step one
00:48 - until
00:50 - i'm near the bridge
00:52 - as soon as i'm near the bridge
00:54 - i'll stop looping and i'll go to the the
00:57 - next command outside of the loop
01:00 - let's look at an example
01:03 - here's an example where we have two
01:05 - until loops
01:08 - if we look at the actual challenge we
01:10 - want the mouse to grab the match
01:13 - and then go to the pile and drop it
01:16 - so we have the first until loop
01:20 - is basically going to have the mouse
01:22 - stepping until it's near the match and
01:26 - then we want
01:28 - the mouse to grab the match
01:32 - and then loop
01:36 - and step until it's near the pile
01:40 - and then we can
01:42 - drop
01:44 - the match on the pile let's see how that
01:47 - works
01:52 - oh okay so we're in a situation right
01:56 - now where we have an endless loop
02:00 - we know since the mouse never turned to
02:03 - the pile
02:04 - it's never going to get near the pile
02:07 - it's just going to keep stepping
02:10 - and never getting near the pile so this
02:12 - loop here will run forever
02:15 - so you got to make sure that when you
02:17 - have an until loop
02:19 - that the condition will be met
02:22 - so let's see before
02:26 - we step let's
02:30 - turn to
02:33 - the pile and then step make sure we're
02:35 - always turning to the pile before we're
02:37 - stepping
02:42 - okay very good
02:45 - [Music]
02:47 - now in that example we could have put
02:49 - the turn two
02:51 - above the until near pile because the
02:54 - pile never moves
02:56 - so this didn't have to be in the loop it
02:58 - could have been right above
03:00 - the until and it would still work let's
03:02 - look at another example
03:06 - here's an example that's similar to the
03:08 - last one
03:10 - but a little different in that we're
03:12 - calling the until loop within a function
03:15 - called chase
03:19 - but also there's an ant
03:22 - that is going to be
03:25 - moving that match so the match is now a
03:28 - moving target
03:31 - uh so if we
03:34 - just go in
03:36 - within the function until near m now
03:39 - what m is
03:42 - our parameter that
03:44 - takes on match the first time chase is
03:47 - called
03:49 - and the second time chase is called
03:51 - m is pile
03:54 - so
03:56 - when we have this loop we want to make
03:57 - sure since the match will be moving
04:00 - we want to
04:02 - always turn to it
04:07 - and
04:10 - then uh
04:14 - i guess step right we want to step
04:18 - one so we're getting closer to it each
04:21 - time we're turning stepping turning
04:23 - stepping
04:24 - until we're near it and then we'll grab
04:26 - it and in the case of the pile we'll
04:30 - drop it let's see how this works
04:33 - there we go got it
04:36 - oops so something
04:39 - uh tickle oh is it gonna get to the pile
04:43 - oh i know what i messed up on
04:46 - instead of saying match
04:51 - i need to just say m
04:54 - so
04:55 - first time it will be the match it's
04:57 - turning to the second time it will be
04:58 - the pile
05:02 - okay that's it
05:04 - [Music]
05:10 - it's your turn to use until good luck
05:13 - [Music]

Cleaned transcript:

welcome to the sands of until let's learn about until until is a type of loop the loop will run until a condition is met this is how you write the until loop and use the keyword until space the condition that you want to meet and then you could have any number of commands below but each would need to be indented here's an example until near bridge near bridge is the condition step one so basically i want to step one until i'm near the bridge as soon as i'm near the bridge i'll stop looping and i'll go to the the next command outside of the loop let's look at an example here's an example where we have two until loops if we look at the actual challenge we want the mouse to grab the match and then go to the pile and drop it so we have the first until loop is basically going to have the mouse stepping until it's near the match and then we want the mouse to grab the match and then loop and step until it's near the pile and then we can drop the match on the pile let's see how that works oh okay so we're in a situation right now where we have an endless loop we know since the mouse never turned to the pile it's never going to get near the pile it's just going to keep stepping and never getting near the pile so this loop here will run forever so you got to make sure that when you have an until loop that the condition will be met so let's see before we step let's turn to the pile and then step make sure we're always turning to the pile before we're stepping okay very good now in that example we could have put the turn two above the until near pile because the pile never moves so this didn't have to be in the loop it could have been right above the until and it would still work let's look at another example here's an example that's similar to the last one but a little different in that we're calling the until loop within a function called chase but also there's an ant that is going to be moving that match so the match is now a moving target uh so if we just go in within the function until near m now what m is our parameter that takes on match the first time chase is called and the second time chase is called m is pile so when we have this loop we want to make sure since the match will be moving we want to always turn to it and then uh i guess step right we want to step one so we're getting closer to it each time we're turning stepping turning stepping until we're near it and then we'll grab it and in the case of the pile we'll drop it let's see how this works there we go got it oops so something uh tickle oh is it gonna get to the pile oh i know what i messed up on instead of saying match i need to just say m so first time it will be the match it's turning to the second time it will be the pile okay that's it it's your turn to use until good luck
