With timestamps:

00:24 - alrighty thank you to those that are
00:25 - just joining us this morning
00:28 - we'll give everyone about five minutes
00:29 - or so to kind of shuffle in and get
00:31 - everyone kind of ready you could please
00:33 - tell us in the chat box where you're
00:34 - joining us from and what grades you
00:36 - teach
00:38 - and if you have any questions beforehand
00:40 - that you would like to ask our founder
00:41 - you can go ahead and pop those in the q
00:43 - a box
00:44 - other than that we look forward to get
00:45 - starting
00:46 - with you here soon
01:41 - thank you to everyone that is piling in
01:43 - right now for our last hour of code
01:46 - event for the week
01:48 - you please if you haven't done so
01:49 - already please share with us where
01:51 - you're joining us from
01:52 - as well as what grades you teach or
01:55 - currently with right now
01:57 - and if you have any questions beforehand
01:59 - you go ahead and throw those in the chat
02:01 - box otherwise we'll get started here in
02:03 - just a few minutes honoring everyone and
02:05 - being able to
02:06 - give some time for everyone to shuffle
02:08 - in
03:31 - sarah that's a great question and we'll
03:32 - go ahead and save that one towards the
03:34 - end so thank you so much for sharing
03:36 - that question with us
03:37 - all right we're going to get started
03:38 - here in just a couple minutes i know
03:40 - there's been some people i'm having a
03:42 - bit of trouble just please remember that
03:44 - you can also join us on any of our
03:46 - social media platforms youtube
03:49 - facebook and twitter this
03:51 - event is also being live streamed there
03:53 - so if you haven't done so please go
03:55 - ahead and pop in the chat box where
03:56 - you're joining us from and we'll get
03:58 - started in two minutes
06:00 - all righty we are going to go ahead and
06:02 - get started if you
06:04 - are having any issues logging in please
06:06 - make sure to refer everyone to our
06:09 - social media streams as well on facebook
06:12 - twitter
06:13 - and youtube
06:16 - all right thank you so much for joining
06:17 - us for our last webinar of the
06:20 - 2021
06:22 - hour of code csn week we are so excited
06:25 - to have you here
06:27 - and um
06:29 - if you haven't joined us on our other
06:31 - events this week monday we had a women
06:33 - in stem panel tuesday we had or
06:36 - yesterday we have it had a live coding
06:38 - class with our other founder
06:41 - and
06:43 - that
06:45 - was a
06:46 - about text-based coding and today is
06:48 - going to be about our newest course
06:49 - block jumper so thank you so much
06:52 - and as you guys know this is our
06:54 - favorite event of the year it's our time
06:56 - to share with you how much we love
06:58 - computer science and get to share that
07:00 - with your students as well so we are so
07:02 - appreciative that you're taking the time
07:03 - out of your day to spend it with us and
07:05 - your students
07:08 - because we know that there are a ton of
07:10 - choices during this hour of code week so
07:12 - we feel extra special that you're
07:14 - spending your time with us
07:17 - if you're catching this at a later date
07:18 - or you're watching this on any of our
07:20 - live streams please feel free to throw
07:22 - those questions into the chat box
07:25 - and we just want to thank you if you're
07:26 - watching this now or if you're watching
07:28 - this later and just know how much we do
07:30 - appreciate you and your time
07:33 - please do follow us on all of our social
07:36 - media channels just like today we'll
07:38 - stream live we'll live stream our
07:40 - webinar sessions and share different
07:42 - events it's a way to keep up to date
07:44 - with everything as well as to follow up
07:46 - on any tech news and content that we
07:48 - share along the way as well
07:52 - so today's session is
07:54 - an hour of code
07:56 - with our founder um ido shore so he'll
07:59 - be joining us here in just a few minutes
08:01 - and so we'll be going over our blocks
08:03 - jumper course
08:04 - so let's just talk about the back story
08:06 - and the reason why you're here is about
08:08 - code monkey um in 2014
08:11 - codemonkey's ido and his brother
08:12 - jonathan shore launch code monkey after
08:15 - working with kids and just seeing how
08:16 - much better they grasp the coding
08:18 - concepts
08:19 - when it was presented in a more fun and
08:21 - gamified way the days of the boring the
08:25 - boring programming ways are way of the
08:27 - past and this is a way to introduce
08:29 - students to those fun and gamified
08:31 - um
08:32 - adventures and make it feel like a game
08:34 - rather than the old school methods of
08:36 - learning how to code and so today
08:38 - codemonkey is a leading fun and
08:40 - intuitive curriculum
08:42 - we do have international users we have
08:45 - users in almost every country
08:47 - where students do learn to code in real
08:49 - programming languages
08:52 - so before getting started we do always
08:54 - like to share with you who you're
08:57 - actually meeting today and who you're
08:58 - going to be seeing
09:00 - and so to kick that off my name is lena
09:03 - salle i've met you hopefully over the
09:05 - last few days during this event
09:07 - and i am the professional development
09:09 - and sales manager here at code monkey
09:12 - and usually help organize these types of
09:14 - events um so you'll probably see me
09:16 - quite a bit
09:18 - today we also have joining with us brett
09:21 - he is the vp of u.s sales so that means
09:24 - that when your teachers are looking for
09:27 - new programs to bring to you then he's
09:29 - the one who's leading the team to help
09:30 - get those tools to each one of you and
09:33 - to your teachers and then we also have
09:35 - maya
09:36 - she is new to the code monkey team and
09:38 - we're lucky to have her and she is our
09:39 - customer success manager and a customer
09:42 - success manager just means that they
09:43 - help the customers have the best success
09:45 - using the product so if your teachers
09:47 - run into issues or maybe you need help
09:49 - with setup
09:51 - there
09:52 - she is there to help you so you'll see
09:54 - her face a lot as well
09:57 - now
09:58 - without further ado we want to introduce
10:00 - you to the superstar of today's event
10:02 - and that is our founder and cto
10:06 - ido shore
10:12 - hi
10:13 - hello welcome
10:14 - [Laughter]
10:16 - thank you for that lovely introduction
10:20 - all right so we're going to dive do you
10:22 - want to tell us a little bit about you
10:23 - before we jump to this next next part
10:28 - uh
10:29 - sure i'm uh you know i live in tel aviv
10:34 - 34 years old and uh
10:37 - yeah i'm the
10:39 - chief technology officer at uh code
10:42 - monkey
10:44 - besides that i like uh
10:47 - playing my guitar and playing ultimate
10:48 - frisbee
10:50 - so yeah that's it about me
10:52 - and you don't see right now because we
10:54 - have these fun backgrounds for the hour
10:55 - of code but he actually is quite the
10:57 - musician and has quite a lot of
10:58 - instruments behind him so
11:00 - um
11:02 - you know the nice it's a nice fact about
11:04 - him fun fact um so today during our
11:07 - webinar we're going to do an intro we
11:09 - discuss a little bit about what code
11:10 - monkey is we're going to dive a little
11:12 - bit deeper into who ito is and what he
11:14 - does
11:16 - and then talk about how code monkey got
11:19 - started then he's going to lead a coding
11:21 - class specifically for you on our new
11:23 - blox jumper course
11:25 - and a dose team especially leads these
11:27 - efforts with all of these courses so
11:29 - you're you're having a really extra
11:31 - special taste of what it looks like and
11:34 - what it feels like to be part of part of
11:36 - us
11:38 - and then we will have open q a with ido
11:41 - and i'm taking some of those questions
11:43 - from pre-registration as well as any
11:45 - questions that have been popped in the
11:46 - chat box or in the q and a
11:50 - so we are going to start off today's
11:52 - event with doing a little bit of an
11:53 - interview
11:54 - type of session with edo so as the cto
11:57 - which he mentioned earlier was the chief
11:59 - technology officer
12:01 - tell us a bit about
12:03 - kind of
12:04 - your role and what you do at code mcgee
12:07 - and exactly what is a cto
12:10 - okay so um
12:14 - i guess studio would mean uh different
12:16 - things at different
12:18 - types of companies
12:21 - codemonkey's
12:23 - product is a
12:25 - technological product it's a
12:28 - an application or website
12:30 - [Music]
12:32 - so as cto i manage
12:37 - building of the product
12:39 - maintaining the product
12:41 - uh which means uh i have a team of uh
12:45 - developers product
12:47 - managers
12:48 - uh part of the product is also uh the
12:51 - curriculum
12:52 - so that's also under
12:54 - my responsibility
12:58 - yes so i just manage a bunch of people
13:01 - uh who make
13:03 - everything that
13:05 - is the
13:07 - user or customer whether it be a student
13:09 - or a teacher
13:11 - playing on uh
13:13 - playing or learning or managing a
13:15 - classroom
13:16 - so all those things
13:19 - so everything that you see and do on
13:21 - code monkey is developed by ido and his
13:24 - team and so he has a really big job um
13:27 - probably the most important job out of
13:28 - all of us
13:30 - making sure that everything works and is
13:31 - fun for all of you as well
13:34 - um so a question we've got a couple of
13:36 - these in the registration as well but um
13:39 - since you are the cto of code monkey
13:42 - what is something that you look for when
13:43 - you do hire a programmer or somebody to
13:46 - work at code monkey
13:49 - uh so
13:51 - that's a good question
13:54 - i would say the biggest part of the
13:56 - interview process
13:58 - is revolves around
14:01 - communication
14:04 - so just being
14:06 - good uh technically and be able to
14:09 - produce
14:10 - uh code on yourself is just uh
14:13 - it's not enough
14:15 - in uh when working in a team
14:17 - um so big part of process is
14:21 - communicating with the candidate
14:25 - about how they made
14:28 - what
14:29 - how do they make their choices when they
14:31 - uh
14:31 - like solve a certain um
14:34 - compute like problem
14:36 - in a computer science
14:38 - and see how well they uh are able to
14:41 - give
14:43 - feedback on other people's codes and
14:45 - receive feedback on their own code
14:49 - so all that around
14:52 - communicating clearly and respectfully
14:55 - is very
14:56 - important and i think that that's an
14:59 - important thing that we see across all
15:01 - places is being able to take feedback
15:03 - and knowing that the feedback isn't
15:05 - meant to carry you down
15:07 - but to actually make you better and so
15:09 - you know feedback goes both ways so i
15:11 - think that's important that you mention
15:13 - that
15:14 - um so we sort of touched on this a
15:16 - little bit there but if you weren't a
15:18 - programmer what career path would you
15:21 - have likely followed
15:24 - yeah so as a teenager i i actually spent
15:27 - probably most of the time
15:29 - uh
15:30 - with my guitar so
15:33 - uh
15:34 - there was a time when i thought about uh
15:36 - music as a career path
15:38 - um
15:40 - that didn't work out
15:42 - uh
15:43 - or actually i kind of i guess i chose
15:45 - uh computer programming over music
15:48 - um
15:49 - i'm glad i did
15:51 - um
15:52 - it ended up pretty well i'm happy
15:55 - uh at my current role
15:57 - and i still get to
16:00 - uh do some music on my spare time
16:03 - which i think is great and we're also
16:04 - very lucky that you chose this career
16:06 - path as well because we wouldn't all be
16:09 - here if it weren't for you
16:12 - so in honor of our code monkey
16:14 - competition that we have going on right
16:16 - now students you can create a drawing
16:18 - and we're going to take those drawings
16:19 - and turn them into avatars that will
16:20 - come into the product as well
16:22 - um so which code monkey avatar do you
16:26 - use
16:27 - um on code marketing
16:29 - so um so i actually have a few accounts
16:32 - because
16:33 - uh
16:34 - i guess anyone who works like on the
16:36 - product needs to have a few accounts as
16:38 - like their main account and the account
16:40 - they test like
16:42 - teacher features and uh student features
16:45 - uh so i have a few avatars but uh my
16:48 - main account is the bear
16:50 - it's just uh
16:52 - i don't know i like him best
16:54 - i also love him in the beaver achiever
16:56 - course he's a good one
16:58 - yeah um you know i'm just basic i just
17:01 - choose the girl with the blonde hair you
17:02 - know on all of my accounts so
17:06 - that's a good text yeah
17:09 - um okay so we asked we asked jonathan
17:12 - this yesterday as well but we wanted to
17:14 - ask you what was the first programming
17:17 - language that you learned
17:20 - ah so the very first one i was pretty
17:23 - young
17:25 - might have been
17:26 - 10 or
17:28 - a little older
17:30 - it was flash
17:33 - um
17:34 - yeah that's it uh
17:36 - adobe flash that was a
17:39 - it wasn't a programming language but it
17:40 - had a programming language in it it was
17:42 - a studio for creating
17:44 - games and uh videos
17:46 - so i just uh
17:48 - messed around in there a little bit
17:50 - creating
17:51 - uh smaller things that required some
17:53 - programming
17:54 - that's my very first
17:57 - programming experience
18:01 - and what did you make here it was a um
18:04 - this was like a small video i think i
18:06 - also made a small at least one small
18:09 - game
18:11 - uh it wasn't as easy as it was today
18:13 - like you had to have it
18:15 - uh installed in your computer then you
18:16 - had to export it and
18:18 - find a way to send it somehow but you
18:21 - could only send like three megabytes
18:24 - in an email
18:25 - and
18:26 - i don't know i remember how i got it
18:29 - working but
18:30 - i could send it to other computers
18:32 - somehow
18:33 - yeah it was much
18:35 - you guys are lucky now because things
18:36 - are much easier when you can just use
18:38 - the web-based version of creating things
18:40 - and having to download it and then wait
18:43 - and sometimes it'd be out of date right
18:45 - and it would be
18:47 - detailed yeah many things i've got have
18:49 - gotten simply in the last 20 years some
18:51 - some things in technology
18:53 - actually became more complicated
18:55 - i would agree with that 100 so this is
18:57 - another i just threw this one this isn't
18:59 - he does specifically but this is one
19:01 - that he saved from when he was younger
19:03 - um but basically there's lots of things
19:05 - that you could do with flash a lot of
19:06 - people made like racing games and
19:07 - different things like that
19:10 - and you could still use flash today
19:11 - right flash programming
19:14 - you probably wouldn't want to it's
19:16 - kind of a dead technology
19:19 - you used to have it in browsers but now
19:21 - browsers
19:22 - don't support flash anymore
19:24 - that's true
19:25 - yeah
19:26 - absolutely it was fun it was a fun time
19:30 - i think i also did when i started
19:32 - teaching taught kids how to do some like
19:34 - flash things too
19:36 - um
19:37 - okay so that's all we're gonna do for
19:39 - this mini intro um interview part with
19:43 - ego and i see lots of you are asking
19:45 - some really amazing questions so we'll
19:47 - be saving those to the end
19:49 - now we're gonna
19:50 - do our lesson time so the first thing
19:53 - first that we want to talk about is
19:54 - we're going to be doing our blocks
19:55 - jumper course and yesterday we talked
19:57 - about text-based coding but let's talk
19:59 - about what is block-based coding
20:04 - uh yes so as this uh
20:07 - lovely animation
20:09 - shows
20:10 - uh this is blockbase coding
20:13 - uh black based coding is when you create
20:15 - a
20:16 - code like an algorithm like basically
20:19 - anything
20:20 - any type of code but you don't use your
20:24 - keyboard to type in text you just drag
20:27 - and drop
20:29 - blocks that connect to each other
20:32 - to express
20:34 - uh
20:35 - the program
20:37 - so black-based coding um
20:40 - [Music]
20:41 - is
20:42 - in like i guess 99 of the case is an
20:45 - educational tool
20:47 - like uh
20:50 - when you develop for uh as your day job
20:53 - you
20:54 - in most cases you won't use
20:56 - block-based code unless it's like uh
20:59 - very specific tools
21:02 - but the benefits of block-based coding
21:04 - is has a lower
21:06 - entry level
21:08 - many mistakes that
21:12 - that are hard to overcome in text-based
21:14 - coding
21:16 - simply cannot
21:18 - be made when doing block-based coding
21:20 - because
21:22 - the blocks prevent you from doing
21:24 - type of things that don't make sense
21:29 - so i could i'll explain a little bit
21:31 - more during the lesson what this means
21:34 - exactly so things like well i'll let you
21:37 - take that away
21:38 - so
21:39 - um before we dive and you take over with
21:41 - teaching us all about the blocks jumper
21:43 - course can you tell us a bit about what
21:46 - exactly is blocks jumper
21:49 - uh so blocks jumpers uh
21:52 - is a mini course that we made so
21:56 - uh it's based on our game builder
21:58 - platform which we've had
22:00 - um
22:00 - [Music]
22:02 - probably since i think uh we've had the
22:04 - game builder platform where
22:06 - anyone can create a game and share it
22:09 - and remix it
22:12 - we've had it i think since 2015
22:16 - but for many years it was
22:19 - it used text-based coding
22:22 - so about
22:23 - i think
22:24 - maybe nine months ago
22:26 - we also added the option to create games
22:30 - using block based coding we wanted
22:32 - um
22:34 - to have
22:35 - this platform available
22:38 - to more coders encoders who are also
22:42 - more uh
22:43 - more familiar with block based coding
22:46 - and um
22:48 - we didn't wanted to just uh put it out
22:50 - there and let
22:51 - everyone figure out about their own so
22:53 - we made this mini course that walks you
22:55 - through
22:56 - uh some of the basics of block building
22:58 - games in the game builder platform
23:02 - uh
23:02 - shoot with blocks
23:05 - so this is a small course that we
23:07 - released
23:09 - also as part of the
23:11 - hour of code week
23:13 - and uh yeah we hope
23:16 - many kids will give it a try
23:20 - two and we have um
23:23 - we've been we're featured on the
23:24 - code.org page for this block jumper
23:26 - course so be sure to check it out there
23:28 - or you can check it out we'll throw in
23:30 - the links for how you can connect with
23:31 - this block jumpers course um ido and i
23:34 - talked a bit offline about this and i'm
23:37 - i work at code monkey so i know a bit
23:39 - about this but
23:41 - we wanted so he talked about why they
23:42 - created the block jumper course but i
23:44 - just wanted to briefly mention that
23:45 - usually when a course is being created
23:48 - you have to do some kind of
23:50 - storyboarding or kind of figuring out
23:52 - kind of how the course is created itself
23:54 - so ido will sit down with his content
23:56 - developer and his team
23:58 - and the product um
24:00 - product manager of this and they'll kind
24:02 - of come up with where do they want it to
24:05 - go
24:06 - and what types of concepts will happen
24:08 - for each of the challenge so it doesn't
24:09 - look exactly like this right here but
24:11 - that's usually the process is that
24:13 - correct
24:15 - uh yeah that's right we usually go
24:17 - in this type of courses or like any
24:19 - course we like figure out what do we
24:21 - want
24:23 - the student
24:25 - to be able to make or learn by the end
24:29 - [Music]
24:31 - and then we try to like uh
24:33 - uh see like like kind of like chop up
24:36 - things that aren't necessary like okay
24:39 - like this game would be cool
24:41 - with x y and z but i know z isn't uh
24:44 - important enough and it's complicated so
24:46 - we chop it down to like a simple version
24:48 - and then we
24:49 - walk backwards and say okay this is
24:52 - um
24:54 - this is going to be like the linear path
24:56 - where you're going to
24:57 - advance a little bit
24:58 - uh exercise after exercise until you
25:01 - reach the final goal
25:03 - which i think is great insight as
25:05 - teachers that's what we do also
25:08 - regularly when we're trying we want to
25:09 - see what the students need to know we
25:11 - work backwards that way and so i think
25:13 - it's really neat to see how those kind
25:14 - of two tie together
25:17 - um so now we are going to get coding
25:20 - which everyone's been waiting for this
25:21 - moment so now i'm going to let it dough
25:23 - take over and he's going to introduce
25:25 - this block jumper course and do this
25:27 - with you so feel free to pop those
25:28 - questions still in the chat box
25:35 - okay so um
25:38 - i'm not seeing the chat selena if you
25:40 - see like a good question then
25:42 - feel free to
25:44 - uh let me know and i'll stop and answer
25:47 - it
25:48 - so it won't just be me talking for 30
25:50 - minutes okay
25:53 - also if you have any questions
25:56 - go ahead
25:58 - okay
25:59 - um
26:01 - okay so the blocks jumper mini course
26:06 - this course is
26:08 - split into exercises so 10 exercises
26:12 - and by the end of course we're going to
26:14 - have a game that looks kind of like
26:16 - this
26:17 - gif here
26:19 - um
26:21 - is it gift for jiff
26:22 - how do you pronounce that
26:25 - um i think it i'm not the best person
26:27 - just to say what that is because i can
26:30 - never say it so i just
26:31 - know that in the chat box how do you
26:34 - pronounce that
26:36 - yeah tell us how you guys pronounce that
26:38 - image there
26:40 - okay
26:41 - um
26:43 - so the game builder platform is
26:45 - everything uh here you see the game area
26:49 - and different configurations and the
26:51 - code that you write and on the left we
26:53 - have instructions
26:55 - for um that we follow and that we will
26:58 - end up with a
27:00 - small game
27:01 - all right let's read in this mini course
27:04 - we'll create a game where the player
27:06 - steps or clicks the screen to make a
27:08 - monkey jump over gaps until it reaches a
27:10 - star
27:13 - the step block makes a spike move in
27:14 - this example it makes the monkey move
27:17 - the number in the step block defines how
27:19 - far the sprite moves
27:21 - so this is a code example
27:24 - and we're going to write some code here
27:26 - under the monkey tab
27:29 - so the monkey is one of the sprites we
27:31 - have in this game where sprites are just
27:35 - these objects that have an image so
27:38 - right now we see we have two sprites
27:40 - monkey
27:42 - and a star
27:43 - so let's stay on the monkey
27:46 - and see what we need to do drag a step
27:48 - block from the movement library connect
27:50 - it to the unrun block
27:52 - so i see i already have an unrun block
27:54 - it's always going to be here
27:57 - i'm going to find the movement library
27:59 - i'm going to drag step and connect it
28:03 - so remember when i said block based
28:05 - closing can be a little easier than text
28:07 - with text-based coding
28:10 - so if i don't connect it i see this this
28:12 - doesn't make any sense
28:14 - a step on its own is not something the
28:16 - computer can understand and know
28:19 - what to do with
28:20 - but when it's connected
28:22 - you can see it has a nice color and i
28:24 - see okay i wrote a valid program
28:28 - let's check that this is okay yep this
28:30 - is okay
28:32 - change one to 300 in the step block
28:36 - okay i'm gonna
28:37 - use my keyboard to type three zero zero
28:42 - click on run and see if the monkey which
28:44 - is the star okay i have the run button
28:46 - here
28:50 - okay i did it
28:53 - when you go from 1 to 300 what is the
28:56 - difference between that is it moving how
28:58 - do we know how far obviously note moves
29:01 - to 300 but what does that mean that's a
29:03 - great question so um
29:05 - you can say it's pixels but um if you
29:08 - want to know how much it is you can see
29:10 - when i have my cursor over the game area
29:13 - i can see that these numbers on the side
29:17 - so and i we use these uh
29:20 - these position numbers
29:21 - in a bunch of places in the game builder
29:24 - right now i see uh the monkey is around
29:27 - has its x value
29:29 - at around uh
29:31 - 50
29:32 - and x is uh
29:35 - the horizontal axis
29:37 - so if i move my cursor to the right i
29:39 - see the x value changing
29:42 - and if i go to like
29:44 - let's say this is 50 this is
29:46 - 350
29:48 - so i guess 300 is this area
29:54 - um
29:56 - yeah
29:57 - okay so it's moving it's moving it's
29:59 - using the xy coordinates to move and so
30:02 - when you move one it's just moving one
30:04 - little coordinate to the right and when
30:07 - you move 300 it's moving on the number
30:09 - line 300.
30:10 - yeah so 300 in this case
30:13 - is half half the screen
30:16 - at the gain stream
30:19 - um
30:20 - okay so we did something very simple but
30:24 - let's get into real coding
30:26 - a loop block repeats the blocks inside
30:29 - it for as long as the game runs for
30:31 - example on run
30:33 - loop
30:34 - step one
30:36 - this plot makes the sprite step to the
30:38 - right over and over again until the game
30:40 - is over
30:42 - um
30:43 - okay let's do this dragon loop block
30:46 - from the control library
30:48 - so the control library and drag a loop
30:51 - block
30:54 - okay and do that correctly
30:56 - drag a step block from the movement
30:58 - library
31:00 - place it inside of the
31:02 - loop block
31:07 - click on run and see if the monkey which
31:10 - is a star
31:16 - okay that worked that looks kind of the
31:18 - same but it's different before that we
31:21 - had step 300 and that did something once
31:25 - now we have a program that does
31:26 - something
31:27 - well you could say forever
31:31 - nothing is forever but in coding that's
31:33 - why his legs are still moving forever
31:36 - that's why his legs are still moving
31:38 - yeah that's right before that he
31:40 - eventually the monkey eventually stopped
31:42 - like 300 is a large number but it's ends
31:46 - sometimes but a loop is forever in
31:48 - programming terms
31:51 - okay now we collide so this
31:54 - uh
31:56 - games need something
31:58 - need some stuff to happen to with them
32:00 - like the different objects interact so
32:03 - i'm going to talk a little bit about
32:05 - interaction between objects in the game
32:08 - um the uncollide block is called when
32:10 - two sprites collide
32:12 - the argument defines the other sprite in
32:14 - the collision
32:15 - so what is other sprite actually when
32:17 - i'm here at the
32:19 - stars code
32:21 - on collide refers to the star so it's
32:25 - telling the program or the computer
32:28 - when the star
32:29 - collides with
32:32 - so the other sprite is the monkey
32:35 - so it's uh when you're coding always
32:38 - notice
32:40 - [Music]
32:41 - and coding in the game will always
32:42 - notice what is the context you're
32:44 - writing your code in because it's
32:46 - different between whether you're writing
32:48 - inside the monkeys
32:50 - code or the stars code or any other
32:52 - sprites code
32:56 - uh
32:57 - okay sounds are added to the game from
32:58 - the sound stat the play sound
33:00 - [Music]
33:01 - block plays the sound the destroy block
33:04 - deletes the sprite from the game
33:07 - add a sound by clicking on the green
33:08 - plus button name it twin
33:10 - so this was open here
33:12 - i'm going to choose a sound that sounds
33:14 - like winning
33:18 - okay this is pretty good
33:22 - i'm going to name it use my keyboard
33:25 - to type in win
33:28 - let's solve this exercise
33:31 - now let's do something with this sound
33:33 - choose the star sprite from this
33:35 - sprites
33:36 - tab okay i'm at the star sprite
33:40 - drag a play sound block from the game
33:42 - and sounds library place it inside the
33:44 - uncollide block
33:48 - play sound
33:51 - okay
33:52 - drag a destroy block from the display
33:54 - library place it inside the uncollide
33:56 - block
33:58 - okay so display
34:01 - and we want the destroy
34:03 - so let's read the code we worked here
34:06 - i'm in the stars tab so star when you
34:09 - collide with the monkey
34:11 - i want you to start to
34:14 - play the sound when and i want you to
34:18 - well be destroyed
34:20 - uh sorry star um
34:25 - okay let's see this this is working okay
34:29 - so the star is our goal and when we
34:31 - reach it we want it to be removed from
34:33 - the game actually destroyed
34:36 - uh click on run and see if the monkey
34:38 - reaches the star
34:39 - listen to the sound played and notice
34:41 - the star is no longer in the game after
34:42 - the monkey collides with it
34:47 - [Music]
34:49 - okay it worked it played the the sound i
34:51 - chose and the star is no longer in the
34:53 - game it was destroyed
34:56 - um
34:57 - and beside being no longer in the game
34:59 - that nothing that is
35:01 - inside its code here is gonna
35:03 - like stuff like uncollide it's not gonna
35:06 - happen again because
35:07 - something that's not in the game cannot
35:09 - collide with anything else either
35:12 - so if you have multiple stars then in
35:14 - each star they would need to have an on
35:17 - slide in each one individually
35:20 - yes that is correct
35:21 - japan
35:24 - uh okay that's that's price sprites are
35:26 - added from the sprites tab by
35:29 - clicking on the green plus button
35:30 - choosing an image
35:32 - clicking on the add button
35:34 - sprites properties can be updated from
35:36 - the settings icon
35:38 - properties include position x and y so
35:41 - we talked about that a little bit before
35:44 - affected by gravity and immovable so i'm
35:46 - gonna
35:48 - do a little demonstration about these
35:49 - two but first let's add a sprite
35:54 - so in the actual game builder platform
35:56 - there are many more sprites to choose
35:58 - from
35:58 - but because we're building this very
36:00 - specific game
36:01 - we
36:02 - want
36:04 - you to stay focused so we only give you
36:06 - these two sprites that you're gonna use
36:10 - okay i added the star i'm going to
36:12 - change the stars x value to 500.
36:15 - so i could drag it around but i can also
36:18 - go into the settings
36:20 - and
36:21 - [Music]
36:22 - i have this x here i'm going to type in
36:24 - 500.
36:26 - okay now it's exactly where i want it to
36:28 - be
36:29 - uncheck the allow gravity option
36:32 - okay so this is something i can only do
36:33 - from here
36:35 - but that's gonna demonstrate what it
36:37 - actually does so if this is checked
36:40 - and i run the game
36:42 - the start falls down
36:44 - but
36:45 - if this is unchecked
36:48 - the star stays in place so it's actually
36:50 - means do i allow
36:53 - gravity to affect
36:55 - this sprite
36:58 - and
36:59 - sorry that's my dog
37:00 - in the background
37:03 - check the movable option set it from the
37:06 - settings item
37:07 - okay
37:09 - removable
37:11 - so let's demonstrate what this means
37:13 - when it's something is immovable
37:18 - things that collide with it can't move
37:20 - it
37:23 - but when something
37:25 - is not immovable or movable things that
37:27 - collide with it
37:28 - do affect its position and it moves
37:31 - around
37:32 - so we want it
37:34 - immovable
37:36 - okay we don't we just want it to be
37:38 - set in one place all the time we don't
37:40 - want it
37:41 - to move around
37:44 - uh drag an uncollide block from the
37:47 - events library okay so i have the events
37:49 - library
37:51 - and i want
37:53 - on collide
37:56 - okay that worked
37:58 - now when the stars is going to collide
38:01 - with the monkey
38:03 - i'm going to place it
38:04 - i'm going to place a face sound
38:08 - let's do that
38:13 - now we're going to place a destroy block
38:23 - okay so we have a little program here
38:26 - [Music]
38:29 - good
38:30 - if you named play sound something
38:33 - different than win would it be would it
38:36 - change anything
38:39 - uh
38:41 - let's see so right now i actually can't
38:45 - uh
38:46 - i only have one sound so i can only
38:48 - choose win
38:50 - [Music]
38:51 - if i had more sounds
38:54 - and i would choose something else it
38:55 - would play a different sound
38:59 - yeah this is another thing where
39:01 - block-based coding can help you out
39:05 - in normal coding you'd have to like
39:06 - remember
39:08 - uh
39:09 - what name you gave to something and in
39:12 - certain programming languages you'd have
39:14 - to remember that that something is a
39:17 - sound
39:19 - so
39:20 - uh
39:21 - block based coding kind of
39:23 - limits you the only thing
39:24 - that are
39:26 - relevant to your current program so
39:29 - you can only do win because that's the
39:31 - only sound you have here
39:34 - and if i have
39:36 - another sound like my sound
39:38 - should be able to choose a different
39:40 - sound that
39:41 - might sound different
39:44 - and also something to know about block
39:46 - based versus text spaces
39:48 - it's hard to make a mistake with
39:51 - capitalization
39:53 - because you don't have to worry so much
39:55 - about even if you spelled win wrong when
39:57 - you added the sound it's not going to
39:59 - change anything whereas if you spelled
40:01 - win wrong when doing text-based coding
40:05 - then it would mess it up is that correct
40:07 - yeah that is correct there's a good
40:10 - example of like tapping something and
40:12 - you read it out and it looks fine
40:14 - but in textbook coding gotta be really
40:16 - really accurate
40:18 - uh
40:19 - yeah and uh
40:21 - there are ways to uh improving like
40:24 - being accurate and as long as you
40:26 - uh keep at it and it becomes easier and
40:29 - easier
40:30 - uh but block speed coding kind of takes
40:32 - off all that uh difficulty away
40:36 - uh yes it's a good way to uh
40:39 - to learn
40:41 - especially if you're like
40:43 - new to typing so that's a big thing
40:47 - um
40:49 - okay next up
40:51 - from the game tab you can change some of
40:53 - the game's properties for example world
40:55 - size which sprite the camera should
40:57 - follow
40:58 - game gravity
41:01 - after making the game world bigger click
41:02 - on the drag icon in top right corner so
41:06 - this right here
41:08 - to scroll and move around the game
41:10 - screen click on the arrow icon to switch
41:12 - back
41:14 - tiles can be used to draw the game world
41:18 - so right now you can see the monkey's
41:20 - standing on bricks so each small brick
41:23 - is a tile
41:24 - [Music]
41:25 - this is like
41:27 - a game
41:28 - a game design term
41:32 - uh click on the paintbrush to add tiles
41:34 - or click on the eraser to delete them
41:38 - okay so let's try it out change the
41:40 - world's width to
41:42 - 1200
41:43 - so i have this option here world width
41:47 - okay so now the world where the monk
41:49 - this monkey lives in
41:51 - is a little bigger
41:53 - click and run and notice the monkey
41:55 - disappears after walking across the
41:56 - stream
41:57 - let's see that
42:02 - okay i no longer see the monkey you can
42:04 - stop
42:06 - so that's a good uh that will explain a
42:08 - good distinction between
42:10 - um
42:12 - the game world and the game screen where
42:15 - you can like what part of the game world
42:18 - you can actually see
42:20 - so sometimes like many games many things
42:23 - can happen and you just don't see them
42:25 - but
42:26 - they in the game will they happen
42:28 - so we want to keep following the monkey
42:29 - so let's
42:30 - uh set the camera target to monkey
42:33 - so we have another setting here
42:37 - okay that worked you see this little
42:39 - camera icon icon now above the monkey
42:42 - sprite
42:44 - and click run again
42:48 - okay so right now
42:51 - the camera moves along and follows
42:54 - uh the monkey and you can see that
42:55 - before the games game's
42:57 - world's width was 600 and now it's
43:00 - double that
43:02 - so but eventually it ends so now the
43:05 - monkey reached 1200 and can no longer
43:08 - step beyond
43:11 - the dimensions of the world in its
43:14 - little game
43:16 - let's click stop
43:19 - uh okay drag the game to see the rest of
43:22 - the game area
43:25 - okay i know how to do this
43:28 - add tiles to make a path to the star
43:32 - so we do want to reach the star so let's
43:34 - do this
43:35 - uh click on the paint brush to add tiles
43:38 - click on the desired tile and then click
43:40 - on the game screen to edit
43:42 - click on the eraser to delete tiles
43:46 - so after i choose the paintbrush i can
43:48 - choose
43:50 - which kind of tile i'm going to place i
43:52 - can put a few different kinds
43:57 - and make a colorful bridge
43:59 - click and run and see that the monkey
44:01 - which is the star
44:04 - [Music]
44:10 - all right that worked
44:14 - this one will be our last challenge
44:17 - before we take some time for q a
44:20 - somebody did ask this question and i
44:21 - hope that maybe you can be able to
44:22 - answer it
44:24 - so these blocks do have their own
44:26 - language is it based on something
44:28 - specific when you create these blocks is
44:30 - it something like blockly what what
44:32 - language are the blocks
44:36 - uh so blockly is uh ev is all the user
44:40 - interface
44:41 - so luckily
44:43 - uh we didn't uh build the user interface
44:45 - from scratch we use buckley which is a
44:48 - uh
44:49 - open source program
44:54 - what
44:55 - happens under the hood well there are
44:57 - many things that happen under the hood
45:00 - but eventually it does translate
45:02 - uh
45:04 - the code in blockly
45:07 - uh
45:08 - to
45:09 - uh coffeescript
45:11 - which is our the
45:13 - the language the text-based coding
45:15 - language that we normally use
45:19 - or traditionally have used
45:21 - in a
45:22 - game builder so like we had
45:26 - something that worked with text-based
45:27 - coding so we made like an extra layer
45:29 - over that of blocks
45:31 - and then these blocks turn into
45:34 - a
45:35 - coffee script and we
45:37 - had that working already
45:41 - so that's a little like
45:43 - a fun fact
45:45 - it works under the hood and that's uh
45:48 - and that's something that
45:51 - happens a lot in coding and computer
45:53 - science if you have
45:54 - uh something that works and you want to
45:57 - make
45:58 - so
45:59 - you can use it in different ways
46:01 - uh and you can expand upon it and you
46:04 - have a
46:05 - a big problem you can break down the
46:06 - smaller problems
46:08 - and use the solutions that you already
46:11 - have
46:13 - for multiple things so
46:15 - uh yeah
46:18 - that's a good question
46:21 - okay so uh less exercise from me but uh
46:26 - there are more fun exercises
46:28 - up ahead
46:29 - and uh
46:31 - after a few short ones
46:33 - uh there's a small game that you can
46:35 - play
46:36 - uh so let's do this one
46:38 - uh set speed block changes the sprite
46:40 - speed one is the default speed
46:44 - and number larger than one is faster and
46:46 - number between zero and one is slower
46:49 - here's a little coding example on run
46:51 - set speed to 1.4
46:54 - and this is again an example of like
46:57 - set whose speed so you need to look at
47:00 - the context you're writing the coding
47:03 - the code in
47:04 - so if we're going to write set speed
47:06 - inside the monkeys
47:08 - code area it's going to set the monkey
47:10 - speed
47:12 - drag a set speed block from the movement
47:15 - library
47:16 - connect it to the unrun block
47:22 - there is it it's all the way over here
47:27 - what do we call those at the bottom
47:28 - these um like where it says movement and
47:31 - events are those called libraries
47:34 - yeah we call them libraries okay
47:36 - um
47:38 - the block must be before the loop block
47:41 - if it was
47:43 - after the
47:45 - loop block
47:46 - actually it can't be but
47:49 - loop happens forever so we want this to
47:51 - happen sometimes you don't want to
47:52 - happen
47:53 - after forever which is never
47:56 - uh
47:56 - so we're going to place it before the
47:58 - loop block
48:00 - change 1 to 0.5 i'm going to use my
48:03 - keyboard again
48:04 - type in
48:06 - that's right click on run let's see if
48:08 - the monkey moves really slow
48:11 - okay it is
48:13 - walking slowly
48:16 - i'm gonna make him
48:20 - uh step a little bit
48:23 - faster
48:24 - let's see
48:28 - okay
48:29 - [Music]
48:32 - okay that worked and that's uh
48:34 - an important part of game development
48:36 - get game development
48:38 - finding out like what's the right uh
48:40 - speed and what's the right
48:42 - uh speed and height so it's
48:45 - uh not always about the algorithm but
48:47 - about the
48:48 - different small numbers that make up
48:50 - the game fun
48:52 - so earlier you mentioned about why we
48:56 - set the set speed first and not in the
48:58 - loop block so if the set speed was in
49:01 - the loop block
49:03 - then every time his speed would
49:05 - correct me if i'm wrong you're the
49:07 - you're the computer scientist if i put
49:09 - the set speed inside of the loop does
49:12 - that mean that every single time it goes
49:14 - back through the loop that it's going to
49:16 - increase
49:18 - by that much
49:21 - so it won't increase because set speed
49:23 - is like uh it means
49:26 - um
49:28 - i guess you could read this as like on a
49:30 - 1.4
49:32 - miles per hour
49:34 - so
49:35 - if you were driving 1.4 miles per hour
49:37 - and i told you okay but now drive 1.4
49:40 - must probably just say
49:42 - okay so do nothing like just keep the
49:44 - same speed so you can think about that
49:46 - as the same way so like
49:48 - this would happen but won't change
49:50 - anything because
49:51 - it already happened in the previous
49:54 - loops iteration
49:56 - so you won't notice anything happen but
49:58 - the computer will do something although
50:00 - it will be meaningless like
50:02 - uh
50:03 - like i would tell you change your name
50:04 - to lena
50:06 - right you would say okay sure but
50:09 - you could say done although
50:12 - yeah
50:13 - so
50:14 - yeah
50:15 - this question comes from a student in
50:18 - miss diaz's class her name is ali and
50:21 - she wanted to know how you know
50:23 - what position is x and which position is
50:27 - y
50:30 - um
50:31 - [Music]
50:33 - so
50:35 - this game has
50:36 - [Music]
50:38 - two dimensions if you know like games
50:39 - that sometimes have three dimensions
50:41 - this game is two dimension
50:42 - and i'll try to explain what that
50:45 - actually means
50:47 - um
50:48 - [Music]
50:50 - there's the horizontal axis and the
50:52 - vertical axis
50:54 - and the numbers the x numbers are
50:57 - referring to the horizontal axis
51:00 - so
51:01 - um
51:02 - [Music]
51:04 - let's move the monkey
51:07 - to the right
51:09 - we'll change the x value
51:14 - okay
51:15 - type in 200 you see the monkey only
51:17 - moves
51:19 - right or left doesn't move up or down
51:22 - but then there's the y-axis and the
51:24 - y-axis actually means the vertical axis
51:27 - and when we change numbers in the y-axis
51:31 - the monkey moves up or down so this is
51:33 - 30
51:34 - and as it grows
51:36 - uh the monkey is
51:39 - uh actually lower
51:42 - because if you look at the cursor and
51:45 - try to follow like where where the
51:47 - cursor is and what the numbers are you
51:49 - can see that
51:51 - the small numbers are in this corner
51:54 - and when you move right and down
51:57 - both the numbers increase
52:00 - so i hope that uh answered the question
52:04 - but uh excesses are uh
52:06 - uh
52:07 - a difficult uh topic to apprehend their
52:10 - own sometimes
52:11 - yeah and they look just like when you're
52:13 - doing math and you're doing coordinates
52:15 - and you're trying to find where the x y
52:16 - coordinate is that's exactly how this is
52:18 - set up but you can't see it
52:21 - like you would on a on a regular grid
52:23 - but it has the same
52:25 - right concept but in the game builder
52:27 - you can uh
52:28 - move your cursor and you can see in the
52:29 - top left corner uh the values
52:33 - and also when you move around in the
52:34 - game world then it doesn't end this is
52:37 - all these coordinates about the game
52:39 - world
52:40 - so if your game is
52:42 - bigger than 600 you can see the x value
52:44 - is also bigger than 600.
52:50 - that was a great that was a great answer
52:52 - and a great great question ally thank
52:54 - you so much for
52:57 - sending that question along
52:58 - so i know we have
53:00 - just about eight minutes till we wrap up
53:02 - today's webinar so i'm gonna ask a
53:04 - couple of questions that actually came
53:06 - from our audience if you don't mind
53:10 - um actually during actually questions
53:12 - that came up while you were
53:14 - talking a bit about the platform so if
53:16 - you guys have questions about the game
53:18 - builder itself or anything that you do
53:20 - just covered feel free to top chat those
53:23 - in the chat box or in the q a box um a
53:26 - question that i'll just answer that's
53:27 - not directly for you ego was
53:30 - do you need a subscription to play the
53:32 - block jumper course you do not block
53:34 - jumper course is our hour of code course
53:37 - and so um there's ten challenges as you
53:39 - can see exercises are six of ten and so
53:42 - there's ten there so you guys can play
53:43 - that anytime on your own um so feel free
53:47 - to check those out as well um a next
53:49 - question was
53:50 - what coding languages do you use to
53:54 - build code monkey
53:57 - ah that's a good question
54:00 - so uh
54:01 - we use uh
54:03 - um
54:05 - we use
54:07 - so
54:09 - we use a few programming languages
54:12 - and the reason is
54:14 - um
54:15 - whenever you build anything on the web
54:18 - you have to use javascript
54:21 - so javascript is the only languages that
54:24 - the only language that browsers
54:26 - understand so
54:28 - we use javascript
54:30 - for everything that's happening
54:33 - inside the browser we also use
54:36 - some coffeescript sometimes
54:38 - which is a language that
54:40 - is like a sister language to javascript
54:43 - uh it looks like javascript looks a
54:45 - little bit better
54:46 - sometimes easier to work with and it
54:48 - actually
54:50 - ends up being javascript
54:54 - and that's everything that's happened
54:56 - inside the browser but there are many
54:57 - many things
54:58 - that happen on uh
55:01 - on different computers which are called
55:04 - servers
55:05 - and uh servers do stuff like um
55:10 - uh find your user when you log in and
55:12 - tell you okay we recognize you and this
55:15 - is uh
55:17 - uh your progress or this is the next
55:19 - course that you're
55:20 - working on or
55:23 - this is your
55:24 - classroom mr teacher
55:28 - so everything uh
55:29 - [Music]
55:31 - so everything around that can be the
55:32 - language called ruby
55:34 - and
55:36 - which is a
55:38 - a nice little language
55:40 - that i personally personally like
55:44 - also we use
55:45 - something that is
55:47 - called a framework which is
55:49 - a framework is kind of like this game
55:52 - builder
55:53 - where you have the code but you also
55:54 - have lots of
55:55 - little things that
55:57 - uh guide you along and help you
56:01 - to arrange your code
56:03 - like here when you have uh different
56:05 - sprites and they are arranged into
56:07 - different
56:08 - uh
56:10 - like uh different codes that are
56:11 - arranged into different sprites
56:13 - so the framework we use is called ruby
56:15 - on rails
56:17 - and
56:19 - yeah
56:20 - that's it
56:22 - i think that's great i think that's
56:23 - exactly what they were
56:25 - hoping to um
56:27 - hoping to
56:29 - to hear so i think that's great and then
56:31 - i know other questions were about our
56:33 - website so
56:34 - so codemonkey
56:36 - the platform where you do all of your
56:38 - coding courses is different than our
56:40 - website so we have two different
56:43 - places if that's
56:45 - that makes sense so our website is done
56:49 - by our marketing team typically and then
56:52 - we have our
56:53 - code monkey where you do all of your
56:55 - coding and that lives in a different
56:58 - kind of think about it like a different
57:00 - location
57:01 - is that correct
57:03 - okay
57:05 - so sometimes when you do the web pages
57:07 - themselves you don't necessarily have to
57:09 - be a super super strong coder the
57:11 - websites have a lot of things built into
57:12 - them now that help assist you so
57:15 - he does spends most of his time doing
57:17 - the game and
57:18 - developing the courses rather than
57:20 - spending so much time doing the website
57:22 - itself
57:25 - that's correct yeah yeah then we don't
57:26 - have to bother him when we need to make
57:28 - a few small changes
57:31 - um okay so you know if you don't mind
57:34 - i'm going to take over screen sharing
57:36 - go ahead
57:37 - all right
57:39 - and we have a couple more questions so
57:41 - you guys keep those questions coming
57:43 - they're really great um
57:45 - and we are happy to hear from you so
57:47 - this question comes from miss berg she
57:50 - teaches fourth grade at longsfield
57:52 - elementary
57:54 - she says my students love gaming and
57:56 - many would love the opportunity to get a
57:58 - job
58:00 - doing game development or game design
58:03 - what types of
58:04 - jobs i think i think more so around this
58:07 - question is what do you need to have or
58:09 - what kinds of coding skills should you
58:10 - have to get a job in
58:13 - gaming
58:16 - um
58:17 - so that's a good question
58:19 - [Music]
58:21 - i guess uh
58:23 - game development actually has
58:26 - um many aspects to it so
58:30 - uh probably
58:32 - so there are many
58:34 - um jobs in
58:36 - like in uh game development they don't
58:38 - require
58:39 - actually don't require coding
58:41 - like uh you have illustrators and you
58:42 - have sound designers
58:45 - and you have uh
58:47 - uh
58:48 - like game designers like uh people who
58:51 - just
58:52 - um
58:53 - work on uh
58:55 - uh
58:56 - how the game feels
58:58 - or uh like where our things are
59:03 - uh in the game
59:05 - um
59:07 - but definitely a major part of every
59:10 - uh game development team
59:13 - would be the
59:14 - game developers
59:16 - um
59:18 - uh yes
59:20 - which who are uh
59:22 - mostly coders
59:23 - um
59:25 - yeah though uh it's uh
59:28 - i guess game development is like a very
59:31 - it's like
59:32 - its own niche in computer
59:34 - programming
59:36 - and uh if someone like knows they're
59:38 - really into that
59:40 - then
59:42 - it's like a direction encoding that
59:45 - uh you should you can start learning
59:48 - more seriously
59:49 - uh pretty early on in your
59:52 - uh
59:53 - like uh programming
59:55 - education
59:57 - um because if i mentioned like uh web
60:00 - development which is
60:02 - uh what i mostly do
60:03 - which is dealing like with databases and
60:08 - like server
60:10 - architecture
60:12 - managing uh information
60:15 - and stuff like that
60:16 - then
60:18 - many of these things aren't very
60:20 - relevant for game development
60:24 - which is like a different kind of coding
60:26 - it all has the basic uh
60:29 - like everyone has to learn
60:31 - and that's what we do in code monkey
60:33 - also i believe if you're a designer and
60:35 - if you're working a field that's
60:37 - adjacent
60:38 - uh
60:39 - to technology
60:40 - uh you gotta understand what a loop is
60:43 - and what uh
60:44 - uh
60:45 - what this program is
60:47 - what a condition is
60:49 - uh
60:49 - [Music]
60:50 - yeah but uh beyond that
60:53 - like um
60:54 - game development programming is pretty
60:56 - different than
60:57 - uh like other types of
60:59 - programming
61:00 - really really complex and i think i
61:02 - think what ego broke down was was really
61:05 - great is that he does a lot of like web
61:07 - development you do see game design there
61:10 - is game piece you know game design
61:12 - pieces but it's not as
61:15 - even his team has a lot of things that
61:17 - they have the content developer which if
61:19 - you watch
61:20 - monday's webinar um she creates the
61:23 - content so what's going to go into the
61:24 - challenges how does she want them to be
61:26 - solved then the team has the challenges
61:29 - that they create and code on the backend
61:30 - and then we also have
61:32 - a person who does like the graphics so
61:35 - who's actually designing or animating
61:37 - the course as it goes through so even
61:39 - just in our web-based version of the
61:42 - game design it's pretty complex itself
61:45 - too but you can start taking things and
61:47 - start doing things like our block jumper
61:49 - and our game builder courses and see if
61:51 - you like those and then start pursuing
61:54 - pathways that way
61:56 - yeah that's uh i think that's what's
61:58 - nice about the game builder
62:00 - uh you can really
62:02 - has a low level of entry and you can
62:05 - do some drawing do some uh i guess
62:08 - choose uh sounds and do some a little
62:10 - bit of programming
62:11 - and uh
62:13 - um
62:14 - yeah i guess you're gonna be uh pulled
62:16 - in whatever direction that uh
62:18 - fascinates you the most
62:20 - exactly
62:21 - um the next question here we have from
62:24 - miss blackfold excuse me if i didn't
62:26 - pronounce that correctly um fourth grade
62:28 - at wham um what inspired you to create
62:32 - this program
62:36 - um
62:39 - so if you're talking about the
62:41 - uh this blocks jumper
62:44 - i could answer about uh box jumper yeah
62:47 - uh
62:50 - yeah so in box jumper we as i mentioned
62:52 - uh
62:54 - uh before
62:55 - uh we wanted to have uh wanted to bring
62:59 - a game builder to more kids so we have
63:03 - this uh discover platform where we see
63:05 - like these amazing
63:06 - uh creation kids too
63:09 - on uh
63:11 - on the game builder
63:13 - and uh we wanted to expand upon that so
63:17 - uh we knew
63:18 - um
63:20 - many more kids will be interested in
63:22 - game creation
63:23 - if we added a
63:26 - blocks coding
63:27 - so that was the
63:29 - motivation for adding uh blocks to the
63:31 - game builder
63:33 - and then we wanted to
63:35 - accompany the accompany that with this
63:37 - uh course just to demonstrate like what
63:39 - you can do and lead you through creating
63:41 - like this very small game um
63:45 - yeah that was inspiration uh for blocks
63:47 - jumper
63:49 - um
63:50 - yeah
63:52 - we love it and we're excited that we
63:54 - have this addition to to it and i think
63:56 - that i learned a lot so i hope that the
64:00 - students and teachers learned a lot from
64:01 - you when you were leading that as well
64:04 - um
64:05 - so this comes from miss lewis she
64:07 - teaches sixth seventh and eighth grade
64:09 - and sorry miss lewis i'm not sure where
64:10 - you're joining us from but um why do you
64:13 - believe your product is better than
64:15 - other coding programs around
64:18 - i'm well i'm going to let you do answer
64:19 - but i'm also going to answer this
64:21 - question
64:22 - because i taught in the classroom too
64:24 - um what i love most about codemonkey is
64:27 - that i love that there are solutions and
64:30 - things for teachers
64:32 - there's really great lesson plans but
64:34 - what i
64:35 - what i believe most is that everything
64:37 - is very scaffolded
64:38 - so as you could see when ido was walking
64:40 - through there wasn't like you're not
64:42 - moving from really one really abstract
64:44 - concept everything is really well built
64:47 - and i just felt like my students got a
64:49 - much better grasp and understanding of
64:51 - the concept so
64:53 - i hope you
64:54 - also agree
64:56 - yeah
64:57 - yeah without that when we're working on
65:00 - uh
65:01 - code monkey courses
65:03 - um
65:04 - we always have like these two uh
65:08 - uh
65:09 - two things that pull us
65:11 - uh we want
65:12 - uh
65:13 - we want them to be fun and we want them
65:15 - to be pedagogical
65:18 - and uh coherent
65:20 - um
65:22 - yeah and uh every step of the way uh we
65:25 - stop and ask ourselves is this uh
65:28 - is this um
65:31 - um
65:32 - did we explain it uh well enough
65:35 - uh we second-guess ourselves and uh
65:38 - and did we make it uh engaging enough
65:41 - so uh yeah
65:42 - that's uh
65:44 - i hope uh
65:45 - eventually uh the students and teachers
65:48 - uh feel that uh effort
65:50 - yeah and there's a lot of passion there
65:52 - if you can't tell
65:54 - from everyone on our team it's very
65:55 - passionate about the work that we do so
65:57 - we hope that that comes through to you
65:59 - as well
66:00 - um this is going to be our we'll take
66:03 - one more question right after this and
66:05 - then we'll be closing out because we are
66:07 - right at our time today we also want to
66:09 - honor edo's time as he mentioned he's
66:11 - joining from israel so it's quite late
66:12 - there so we need to make sure we also
66:14 - honor his time as well as yours um this
66:17 - is from miss chamber she's at benwood
66:20 - elementary with third fourth and fifth
66:22 - grade what is the best advice you have
66:24 - for somebody that wants to have a career
66:26 - in cs
66:29 - um
66:30 - that's a good question i guess um
66:32 - [Music]
66:33 - i would say the best way to learn is uh
66:37 - uh well code monkey obviously
66:40 - uh if you want to pursue a
66:44 - career um
66:46 - [Music]
66:48 - just uh
66:48 - [Music]
66:50 - looking at stuff that you use every day
66:52 - and think about
66:54 - uh how were they made
66:56 - i use this app i use this uh i use email
67:00 - i use a chat
67:02 - like how would this made and can i make
67:04 - it myself
67:05 - and uh
67:07 - you know
67:08 - search it online and search for
67:09 - tutorials and just uh
67:12 - uh i don't look at stuff like
67:14 - okay this is uh
67:16 - this is i don't know chat this is too
67:18 - complicated
67:20 - and
67:21 - uh it's a mystery no everything was uh
67:23 - built by uh human beings
67:26 - and uh and be uh with that attitude
67:30 - uh that curious uh attitude and i just
67:33 - try to build stuff yourself
67:35 - and uh you learn along the way
67:38 - i think that's i think that's great
67:40 - feedback because we had a couple of
67:41 - questions about what types of education
67:43 - do you have to become a computer
67:45 - scientist but i think
67:47 - i think that what you're saying is that
67:49 - there's lots of tools
67:51 - that we have available to you right now
67:53 - without even having to go straight to
67:55 - college if you're younger that you can
67:57 - just try it out yourself
68:00 - right
68:02 - i think that's great
68:03 - low risk you know when you're there um
68:06 - okay so the last question
68:08 - is
68:10 - what advice would you give to your
68:14 - younger self
68:19 - wow that's a
68:20 - tough question
68:23 - they have some tough ones over here
68:25 - yeah
68:26 - [Laughter]
68:28 - i guess uh i don't know buy bitcoin or
68:30 - something now
68:33 - best when you can no just joking here
68:38 - uh
68:40 - no i'm just kidding
68:42 - um
68:43 - uh yeah but i guess uh just what i said
68:45 - uh now like i ended up uh
68:49 - um
68:49 - [Music]
68:51 - like i'm
68:52 - i'm pursuing the
68:54 - career i'm interested in
68:55 - and uh
68:57 - uh i like what i do
68:59 - um
69:00 - and i and although i showed uh we showed
69:03 - like uh stuff i did
69:05 - uh when i was younger
69:08 - um
69:10 - then
69:10 - [Music]
69:11 - like most of my teenage years i wasn't
69:13 - like wasn't my most uh
69:16 - like my strongest fashion
69:19 - computer science
69:20 - um
69:22 - and i think uh when you had that uh
69:25 - women in stem
69:27 - um
69:28 - session it was also from our other other
69:31 - developers
69:33 - um
69:35 - you know it's okay to uh
69:36 - like pursue uh what you're interested in
69:39 - right now
69:41 - and uh even like if you don't
69:44 - think about it as a
69:46 - as a long uh long-term career you know
69:49 - just uh be curious
69:52 - and uh
69:54 - and yeah things will work out
69:56 - yeah and i think i think what we can
69:57 - take away from all three days of our
70:00 - events is that just try i think that
70:02 - that worst thing is if you don't try
70:04 - something
70:05 - take a no thank you taste is what we
70:07 - like to say and i think that's that's
70:08 - something to kind of keep in mind with
70:11 - coding or any passion that you have and
70:13 - i think you don't mentioned you know
70:14 - he's really into the music scene when he
70:16 - was younger and different things like
70:18 - that but music and coding actually tie
70:20 - pretty well to each other
70:21 - with just the different skills that you
70:23 - have so
70:24 - i think doe had some amazing amazing
70:27 - feedback and answered your question so
70:29 - well and we really really appreciate
70:31 - both his time and your time for spending
70:33 - that with us today
70:35 - um we hope that you took something away
70:37 - from this hour of code event and
70:38 - remember that hour of code doesn't have
70:40 - to be just an hour and that you can
70:42 - really take this and we hope that you
70:44 - take and feel the passion that we have
70:46 - for computer science bringing it to your
70:48 - students and bring that to your students
70:49 - as well so again thank you so much to
70:51 - edo all of those people that are joining
70:53 - us live who will watch this later and
70:55 - all of you students who are taking the
70:57 - time to spend an hour of code with us we
71:00 - thank you so much and as always don't
71:02 - forget to write code catch bananas and
71:05 - save the world we'll see you guys later
71:06 - bye everybody

Cleaned transcript:

alrighty thank you to those that are just joining us this morning we'll give everyone about five minutes or so to kind of shuffle in and get everyone kind of ready you could please tell us in the chat box where you're joining us from and what grades you teach and if you have any questions beforehand that you would like to ask our founder you can go ahead and pop those in the q a box other than that we look forward to get starting with you here soon thank you to everyone that is piling in right now for our last hour of code event for the week you please if you haven't done so already please share with us where you're joining us from as well as what grades you teach or currently with right now and if you have any questions beforehand you go ahead and throw those in the chat box otherwise we'll get started here in just a few minutes honoring everyone and being able to give some time for everyone to shuffle in sarah that's a great question and we'll go ahead and save that one towards the end so thank you so much for sharing that question with us all right we're going to get started here in just a couple minutes i know there's been some people i'm having a bit of trouble just please remember that you can also join us on any of our social media platforms youtube facebook and twitter this event is also being live streamed there so if you haven't done so please go ahead and pop in the chat box where you're joining us from and we'll get started in two minutes all righty we are going to go ahead and get started if you are having any issues logging in please make sure to refer everyone to our social media streams as well on facebook twitter and youtube all right thank you so much for joining us for our last webinar of the 2021 hour of code csn week we are so excited to have you here and um if you haven't joined us on our other events this week monday we had a women in stem panel tuesday we had or yesterday we have it had a live coding class with our other founder and that was a about textbased coding and today is going to be about our newest course block jumper so thank you so much and as you guys know this is our favorite event of the year it's our time to share with you how much we love computer science and get to share that with your students as well so we are so appreciative that you're taking the time out of your day to spend it with us and your students because we know that there are a ton of choices during this hour of code week so we feel extra special that you're spending your time with us if you're catching this at a later date or you're watching this on any of our live streams please feel free to throw those questions into the chat box and we just want to thank you if you're watching this now or if you're watching this later and just know how much we do appreciate you and your time please do follow us on all of our social media channels just like today we'll stream live we'll live stream our webinar sessions and share different events it's a way to keep up to date with everything as well as to follow up on any tech news and content that we share along the way as well so today's session is an hour of code with our founder um ido shore so he'll be joining us here in just a few minutes and so we'll be going over our blocks jumper course so let's just talk about the back story and the reason why you're here is about code monkey um in 2014 codemonkey's ido and his brother jonathan shore launch code monkey after working with kids and just seeing how much better they grasp the coding concepts when it was presented in a more fun and gamified way the days of the boring the boring programming ways are way of the past and this is a way to introduce students to those fun and gamified um adventures and make it feel like a game rather than the old school methods of learning how to code and so today codemonkey is a leading fun and intuitive curriculum we do have international users we have users in almost every country where students do learn to code in real programming languages so before getting started we do always like to share with you who you're actually meeting today and who you're going to be seeing and so to kick that off my name is lena salle i've met you hopefully over the last few days during this event and i am the professional development and sales manager here at code monkey and usually help organize these types of events um so you'll probably see me quite a bit today we also have joining with us brett he is the vp of u.s sales so that means that when your teachers are looking for new programs to bring to you then he's the one who's leading the team to help get those tools to each one of you and to your teachers and then we also have maya she is new to the code monkey team and we're lucky to have her and she is our customer success manager and a customer success manager just means that they help the customers have the best success using the product so if your teachers run into issues or maybe you need help with setup there she is there to help you so you'll see her face a lot as well now without further ado we want to introduce you to the superstar of today's event and that is our founder and cto ido shore hi hello welcome [Laughter] thank you for that lovely introduction all right so we're going to dive do you want to tell us a little bit about you before we jump to this next next part uh sure i'm uh you know i live in tel aviv 34 years old and uh yeah i'm the chief technology officer at uh code monkey besides that i like uh playing my guitar and playing ultimate frisbee so yeah that's it about me and you don't see right now because we have these fun backgrounds for the hour of code but he actually is quite the musician and has quite a lot of instruments behind him so um you know the nice it's a nice fact about him fun fact um so today during our webinar we're going to do an intro we discuss a little bit about what code monkey is we're going to dive a little bit deeper into who ito is and what he does and then talk about how code monkey got started then he's going to lead a coding class specifically for you on our new blox jumper course and a dose team especially leads these efforts with all of these courses so you're you're having a really extra special taste of what it looks like and what it feels like to be part of part of us and then we will have open q a with ido and i'm taking some of those questions from preregistration as well as any questions that have been popped in the chat box or in the q and a so we are going to start off today's event with doing a little bit of an interview type of session with edo so as the cto which he mentioned earlier was the chief technology officer tell us a bit about kind of your role and what you do at code mcgee and exactly what is a cto okay so um i guess studio would mean uh different things at different types of companies codemonkey's product is a technological product it's a an application or website so as cto i manage building of the product maintaining the product uh which means uh i have a team of uh developers product managers uh part of the product is also uh the curriculum so that's also under my responsibility yes so i just manage a bunch of people uh who make everything that is the user or customer whether it be a student or a teacher playing on uh playing or learning or managing a classroom so all those things so everything that you see and do on code monkey is developed by ido and his team and so he has a really big job um probably the most important job out of all of us making sure that everything works and is fun for all of you as well um so a question we've got a couple of these in the registration as well but um since you are the cto of code monkey what is something that you look for when you do hire a programmer or somebody to work at code monkey uh so that's a good question i would say the biggest part of the interview process is revolves around communication so just being good uh technically and be able to produce uh code on yourself is just uh it's not enough in uh when working in a team um so big part of process is communicating with the candidate about how they made what how do they make their choices when they uh like solve a certain um compute like problem in a computer science and see how well they uh are able to give feedback on other people's codes and receive feedback on their own code so all that around communicating clearly and respectfully is very important and i think that that's an important thing that we see across all places is being able to take feedback and knowing that the feedback isn't meant to carry you down but to actually make you better and so you know feedback goes both ways so i think that's important that you mention that um so we sort of touched on this a little bit there but if you weren't a programmer what career path would you have likely followed yeah so as a teenager i i actually spent probably most of the time uh with my guitar so uh there was a time when i thought about uh music as a career path um that didn't work out uh or actually i kind of i guess i chose uh computer programming over music um i'm glad i did um it ended up pretty well i'm happy uh at my current role and i still get to uh do some music on my spare time which i think is great and we're also very lucky that you chose this career path as well because we wouldn't all be here if it weren't for you so in honor of our code monkey competition that we have going on right now students you can create a drawing and we're going to take those drawings and turn them into avatars that will come into the product as well um so which code monkey avatar do you use um on code marketing so um so i actually have a few accounts because uh i guess anyone who works like on the product needs to have a few accounts as like their main account and the account they test like teacher features and uh student features uh so i have a few avatars but uh my main account is the bear it's just uh i don't know i like him best i also love him in the beaver achiever course he's a good one yeah um you know i'm just basic i just choose the girl with the blonde hair you know on all of my accounts so that's a good text yeah um okay so we asked we asked jonathan this yesterday as well but we wanted to ask you what was the first programming language that you learned ah so the very first one i was pretty young might have been 10 or a little older it was flash um yeah that's it uh adobe flash that was a it wasn't a programming language but it had a programming language in it it was a studio for creating games and uh videos so i just uh messed around in there a little bit creating uh smaller things that required some programming that's my very first programming experience and what did you make here it was a um this was like a small video i think i also made a small at least one small game uh it wasn't as easy as it was today like you had to have it uh installed in your computer then you had to export it and find a way to send it somehow but you could only send like three megabytes in an email and i don't know i remember how i got it working but i could send it to other computers somehow yeah it was much you guys are lucky now because things are much easier when you can just use the webbased version of creating things and having to download it and then wait and sometimes it'd be out of date right and it would be detailed yeah many things i've got have gotten simply in the last 20 years some some things in technology actually became more complicated i would agree with that 100 so this is another i just threw this one this isn't he does specifically but this is one that he saved from when he was younger um but basically there's lots of things that you could do with flash a lot of people made like racing games and different things like that and you could still use flash today right flash programming you probably wouldn't want to it's kind of a dead technology you used to have it in browsers but now browsers don't support flash anymore that's true yeah absolutely it was fun it was a fun time i think i also did when i started teaching taught kids how to do some like flash things too um okay so that's all we're gonna do for this mini intro um interview part with ego and i see lots of you are asking some really amazing questions so we'll be saving those to the end now we're gonna do our lesson time so the first thing first that we want to talk about is we're going to be doing our blocks jumper course and yesterday we talked about textbased coding but let's talk about what is blockbased coding uh yes so as this uh lovely animation shows uh this is blockbase coding uh black based coding is when you create a code like an algorithm like basically anything any type of code but you don't use your keyboard to type in text you just drag and drop blocks that connect to each other to express uh the program so blackbased coding um is in like i guess 99 of the case is an educational tool like uh when you develop for uh as your day job you in most cases you won't use blockbased code unless it's like uh very specific tools but the benefits of blockbased coding is has a lower entry level many mistakes that that are hard to overcome in textbased coding simply cannot be made when doing blockbased coding because the blocks prevent you from doing type of things that don't make sense so i could i'll explain a little bit more during the lesson what this means exactly so things like well i'll let you take that away so um before we dive and you take over with teaching us all about the blocks jumper course can you tell us a bit about what exactly is blocks jumper uh so blocks jumpers uh is a mini course that we made so uh it's based on our game builder platform which we've had um probably since i think uh we've had the game builder platform where anyone can create a game and share it and remix it we've had it i think since 2015 but for many years it was it used textbased coding so about i think maybe nine months ago we also added the option to create games using block based coding we wanted um to have this platform available to more coders encoders who are also more uh more familiar with block based coding and um we didn't wanted to just uh put it out there and let everyone figure out about their own so we made this mini course that walks you through uh some of the basics of block building games in the game builder platform uh shoot with blocks so this is a small course that we released also as part of the hour of code week and uh yeah we hope many kids will give it a try two and we have um we've been we're featured on the code.org page for this block jumper course so be sure to check it out there or you can check it out we'll throw in the links for how you can connect with this block jumpers course um ido and i talked a bit offline about this and i'm i work at code monkey so i know a bit about this but we wanted so he talked about why they created the block jumper course but i just wanted to briefly mention that usually when a course is being created you have to do some kind of storyboarding or kind of figuring out kind of how the course is created itself so ido will sit down with his content developer and his team and the product um product manager of this and they'll kind of come up with where do they want it to go and what types of concepts will happen for each of the challenge so it doesn't look exactly like this right here but that's usually the process is that correct uh yeah that's right we usually go in this type of courses or like any course we like figure out what do we want the student to be able to make or learn by the end and then we try to like uh uh see like like kind of like chop up things that aren't necessary like okay like this game would be cool with x y and z but i know z isn't uh important enough and it's complicated so we chop it down to like a simple version and then we walk backwards and say okay this is um this is going to be like the linear path where you're going to advance a little bit uh exercise after exercise until you reach the final goal which i think is great insight as teachers that's what we do also regularly when we're trying we want to see what the students need to know we work backwards that way and so i think it's really neat to see how those kind of two tie together um so now we are going to get coding which everyone's been waiting for this moment so now i'm going to let it dough take over and he's going to introduce this block jumper course and do this with you so feel free to pop those questions still in the chat box okay so um i'm not seeing the chat selena if you see like a good question then feel free to uh let me know and i'll stop and answer it so it won't just be me talking for 30 minutes okay also if you have any questions go ahead okay um okay so the blocks jumper mini course this course is split into exercises so 10 exercises and by the end of course we're going to have a game that looks kind of like this gif here um is it gift for jiff how do you pronounce that um i think it i'm not the best person just to say what that is because i can never say it so i just know that in the chat box how do you pronounce that yeah tell us how you guys pronounce that image there okay um so the game builder platform is everything uh here you see the game area and different configurations and the code that you write and on the left we have instructions for um that we follow and that we will end up with a small game all right let's read in this mini course we'll create a game where the player steps or clicks the screen to make a monkey jump over gaps until it reaches a star the step block makes a spike move in this example it makes the monkey move the number in the step block defines how far the sprite moves so this is a code example and we're going to write some code here under the monkey tab so the monkey is one of the sprites we have in this game where sprites are just these objects that have an image so right now we see we have two sprites monkey and a star so let's stay on the monkey and see what we need to do drag a step block from the movement library connect it to the unrun block so i see i already have an unrun block it's always going to be here i'm going to find the movement library i'm going to drag step and connect it so remember when i said block based closing can be a little easier than text with textbased coding so if i don't connect it i see this this doesn't make any sense a step on its own is not something the computer can understand and know what to do with but when it's connected you can see it has a nice color and i see okay i wrote a valid program let's check that this is okay yep this is okay change one to 300 in the step block okay i'm gonna use my keyboard to type three zero zero click on run and see if the monkey which is the star okay i have the run button here okay i did it when you go from 1 to 300 what is the difference between that is it moving how do we know how far obviously note moves to 300 but what does that mean that's a great question so um you can say it's pixels but um if you want to know how much it is you can see when i have my cursor over the game area i can see that these numbers on the side so and i we use these uh these position numbers in a bunch of places in the game builder right now i see uh the monkey is around has its x value at around uh 50 and x is uh the horizontal axis so if i move my cursor to the right i see the x value changing and if i go to like let's say this is 50 this is 350 so i guess 300 is this area um yeah okay so it's moving it's moving it's using the xy coordinates to move and so when you move one it's just moving one little coordinate to the right and when you move 300 it's moving on the number line 300. yeah so 300 in this case is half half the screen at the gain stream um okay so we did something very simple but let's get into real coding a loop block repeats the blocks inside it for as long as the game runs for example on run loop step one this plot makes the sprite step to the right over and over again until the game is over um okay let's do this dragon loop block from the control library so the control library and drag a loop block okay and do that correctly drag a step block from the movement library place it inside of the loop block click on run and see if the monkey which is a star okay that worked that looks kind of the same but it's different before that we had step 300 and that did something once now we have a program that does something well you could say forever nothing is forever but in coding that's why his legs are still moving forever that's why his legs are still moving yeah that's right before that he eventually the monkey eventually stopped like 300 is a large number but it's ends sometimes but a loop is forever in programming terms okay now we collide so this uh games need something need some stuff to happen to with them like the different objects interact so i'm going to talk a little bit about interaction between objects in the game um the uncollide block is called when two sprites collide the argument defines the other sprite in the collision so what is other sprite actually when i'm here at the stars code on collide refers to the star so it's telling the program or the computer when the star collides with so the other sprite is the monkey so it's uh when you're coding always notice and coding in the game will always notice what is the context you're writing your code in because it's different between whether you're writing inside the monkeys code or the stars code or any other sprites code uh okay sounds are added to the game from the sound stat the play sound block plays the sound the destroy block deletes the sprite from the game add a sound by clicking on the green plus button name it twin so this was open here i'm going to choose a sound that sounds like winning okay this is pretty good i'm going to name it use my keyboard to type in win let's solve this exercise now let's do something with this sound choose the star sprite from this sprites tab okay i'm at the star sprite drag a play sound block from the game and sounds library place it inside the uncollide block play sound okay drag a destroy block from the display library place it inside the uncollide block okay so display and we want the destroy so let's read the code we worked here i'm in the stars tab so star when you collide with the monkey i want you to start to play the sound when and i want you to well be destroyed uh sorry star um okay let's see this this is working okay so the star is our goal and when we reach it we want it to be removed from the game actually destroyed uh click on run and see if the monkey reaches the star listen to the sound played and notice the star is no longer in the game after the monkey collides with it okay it worked it played the the sound i chose and the star is no longer in the game it was destroyed um and beside being no longer in the game that nothing that is inside its code here is gonna like stuff like uncollide it's not gonna happen again because something that's not in the game cannot collide with anything else either so if you have multiple stars then in each star they would need to have an on slide in each one individually yes that is correct japan uh okay that's that's price sprites are added from the sprites tab by clicking on the green plus button choosing an image clicking on the add button sprites properties can be updated from the settings icon properties include position x and y so we talked about that a little bit before affected by gravity and immovable so i'm gonna do a little demonstration about these two but first let's add a sprite so in the actual game builder platform there are many more sprites to choose from but because we're building this very specific game we want you to stay focused so we only give you these two sprites that you're gonna use okay i added the star i'm going to change the stars x value to 500. so i could drag it around but i can also go into the settings and i have this x here i'm going to type in 500. okay now it's exactly where i want it to be uncheck the allow gravity option okay so this is something i can only do from here but that's gonna demonstrate what it actually does so if this is checked and i run the game the start falls down but if this is unchecked the star stays in place so it's actually means do i allow gravity to affect this sprite and sorry that's my dog in the background check the movable option set it from the settings item okay removable so let's demonstrate what this means when it's something is immovable things that collide with it can't move it but when something is not immovable or movable things that collide with it do affect its position and it moves around so we want it immovable okay we don't we just want it to be set in one place all the time we don't want it to move around uh drag an uncollide block from the events library okay so i have the events library and i want on collide okay that worked now when the stars is going to collide with the monkey i'm going to place it i'm going to place a face sound let's do that now we're going to place a destroy block okay so we have a little program here good if you named play sound something different than win would it be would it change anything uh let's see so right now i actually can't uh i only have one sound so i can only choose win if i had more sounds and i would choose something else it would play a different sound yeah this is another thing where blockbased coding can help you out in normal coding you'd have to like remember uh what name you gave to something and in certain programming languages you'd have to remember that that something is a sound so uh block based coding kind of limits you the only thing that are relevant to your current program so you can only do win because that's the only sound you have here and if i have another sound like my sound should be able to choose a different sound that might sound different and also something to know about block based versus text spaces it's hard to make a mistake with capitalization because you don't have to worry so much about even if you spelled win wrong when you added the sound it's not going to change anything whereas if you spelled win wrong when doing textbased coding then it would mess it up is that correct yeah that is correct there's a good example of like tapping something and you read it out and it looks fine but in textbook coding gotta be really really accurate uh yeah and uh there are ways to uh improving like being accurate and as long as you uh keep at it and it becomes easier and easier uh but block speed coding kind of takes off all that uh difficulty away uh yes it's a good way to uh to learn especially if you're like new to typing so that's a big thing um okay next up from the game tab you can change some of the game's properties for example world size which sprite the camera should follow game gravity after making the game world bigger click on the drag icon in top right corner so this right here to scroll and move around the game screen click on the arrow icon to switch back tiles can be used to draw the game world so right now you can see the monkey's standing on bricks so each small brick is a tile this is like a game a game design term uh click on the paintbrush to add tiles or click on the eraser to delete them okay so let's try it out change the world's width to 1200 so i have this option here world width okay so now the world where the monk this monkey lives in is a little bigger click and run and notice the monkey disappears after walking across the stream let's see that okay i no longer see the monkey you can stop so that's a good uh that will explain a good distinction between um the game world and the game screen where you can like what part of the game world you can actually see so sometimes like many games many things can happen and you just don't see them but they in the game will they happen so we want to keep following the monkey so let's uh set the camera target to monkey so we have another setting here okay that worked you see this little camera icon icon now above the monkey sprite and click run again okay so right now the camera moves along and follows uh the monkey and you can see that before the games game's world's width was 600 and now it's double that so but eventually it ends so now the monkey reached 1200 and can no longer step beyond the dimensions of the world in its little game let's click stop uh okay drag the game to see the rest of the game area okay i know how to do this add tiles to make a path to the star so we do want to reach the star so let's do this uh click on the paint brush to add tiles click on the desired tile and then click on the game screen to edit click on the eraser to delete tiles so after i choose the paintbrush i can choose which kind of tile i'm going to place i can put a few different kinds and make a colorful bridge click and run and see that the monkey which is the star all right that worked this one will be our last challenge before we take some time for q a somebody did ask this question and i hope that maybe you can be able to answer it so these blocks do have their own language is it based on something specific when you create these blocks is it something like blockly what what language are the blocks uh so blockly is uh ev is all the user interface so luckily uh we didn't uh build the user interface from scratch we use buckley which is a uh open source program what happens under the hood well there are many things that happen under the hood but eventually it does translate uh the code in blockly uh to uh coffeescript which is our the the language the textbased coding language that we normally use or traditionally have used in a game builder so like we had something that worked with textbased coding so we made like an extra layer over that of blocks and then these blocks turn into a coffee script and we had that working already so that's a little like a fun fact it works under the hood and that's uh and that's something that happens a lot in coding and computer science if you have uh something that works and you want to make so you can use it in different ways uh and you can expand upon it and you have a a big problem you can break down the smaller problems and use the solutions that you already have for multiple things so uh yeah that's a good question okay so uh less exercise from me but uh there are more fun exercises up ahead and uh after a few short ones uh there's a small game that you can play uh so let's do this one uh set speed block changes the sprite speed one is the default speed and number larger than one is faster and number between zero and one is slower here's a little coding example on run set speed to 1.4 and this is again an example of like set whose speed so you need to look at the context you're writing the coding the code in so if we're going to write set speed inside the monkeys code area it's going to set the monkey speed drag a set speed block from the movement library connect it to the unrun block there is it it's all the way over here what do we call those at the bottom these um like where it says movement and events are those called libraries yeah we call them libraries okay um the block must be before the loop block if it was after the loop block actually it can't be but loop happens forever so we want this to happen sometimes you don't want to happen after forever which is never uh so we're going to place it before the loop block change 1 to 0.5 i'm going to use my keyboard again type in that's right click on run let's see if the monkey moves really slow okay it is walking slowly i'm gonna make him uh step a little bit faster let's see okay okay that worked and that's uh an important part of game development get game development finding out like what's the right uh speed and what's the right uh speed and height so it's uh not always about the algorithm but about the different small numbers that make up the game fun so earlier you mentioned about why we set the set speed first and not in the loop block so if the set speed was in the loop block then every time his speed would correct me if i'm wrong you're the you're the computer scientist if i put the set speed inside of the loop does that mean that every single time it goes back through the loop that it's going to increase by that much so it won't increase because set speed is like uh it means um i guess you could read this as like on a 1.4 miles per hour so if you were driving 1.4 miles per hour and i told you okay but now drive 1.4 must probably just say okay so do nothing like just keep the same speed so you can think about that as the same way so like this would happen but won't change anything because it already happened in the previous loops iteration so you won't notice anything happen but the computer will do something although it will be meaningless like uh like i would tell you change your name to lena right you would say okay sure but you could say done although yeah so yeah this question comes from a student in miss diaz's class her name is ali and she wanted to know how you know what position is x and which position is y um so this game has two dimensions if you know like games that sometimes have three dimensions this game is two dimension and i'll try to explain what that actually means um there's the horizontal axis and the vertical axis and the numbers the x numbers are referring to the horizontal axis so um let's move the monkey to the right we'll change the x value okay type in 200 you see the monkey only moves right or left doesn't move up or down but then there's the yaxis and the yaxis actually means the vertical axis and when we change numbers in the yaxis the monkey moves up or down so this is 30 and as it grows uh the monkey is uh actually lower because if you look at the cursor and try to follow like where where the cursor is and what the numbers are you can see that the small numbers are in this corner and when you move right and down both the numbers increase so i hope that uh answered the question but uh excesses are uh uh a difficult uh topic to apprehend their own sometimes yeah and they look just like when you're doing math and you're doing coordinates and you're trying to find where the x y coordinate is that's exactly how this is set up but you can't see it like you would on a on a regular grid but it has the same right concept but in the game builder you can uh move your cursor and you can see in the top left corner uh the values and also when you move around in the game world then it doesn't end this is all these coordinates about the game world so if your game is bigger than 600 you can see the x value is also bigger than 600. that was a great that was a great answer and a great great question ally thank you so much for sending that question along so i know we have just about eight minutes till we wrap up today's webinar so i'm gonna ask a couple of questions that actually came from our audience if you don't mind um actually during actually questions that came up while you were talking a bit about the platform so if you guys have questions about the game builder itself or anything that you do just covered feel free to top chat those in the chat box or in the q a box um a question that i'll just answer that's not directly for you ego was do you need a subscription to play the block jumper course you do not block jumper course is our hour of code course and so um there's ten challenges as you can see exercises are six of ten and so there's ten there so you guys can play that anytime on your own um so feel free to check those out as well um a next question was what coding languages do you use to build code monkey ah that's a good question so uh we use uh um we use so we use a few programming languages and the reason is um whenever you build anything on the web you have to use javascript so javascript is the only languages that the only language that browsers understand so we use javascript for everything that's happening inside the browser we also use some coffeescript sometimes which is a language that is like a sister language to javascript uh it looks like javascript looks a little bit better sometimes easier to work with and it actually ends up being javascript and that's everything that's happened inside the browser but there are many many things that happen on uh on different computers which are called servers and uh servers do stuff like um uh find your user when you log in and tell you okay we recognize you and this is uh uh your progress or this is the next course that you're working on or this is your classroom mr teacher so everything uh so everything around that can be the language called ruby and which is a a nice little language that i personally personally like also we use something that is called a framework which is a framework is kind of like this game builder where you have the code but you also have lots of little things that uh guide you along and help you to arrange your code like here when you have uh different sprites and they are arranged into different uh like uh different codes that are arranged into different sprites so the framework we use is called ruby on rails and yeah that's it i think that's great i think that's exactly what they were hoping to um hoping to to hear so i think that's great and then i know other questions were about our website so so codemonkey the platform where you do all of your coding courses is different than our website so we have two different places if that's that makes sense so our website is done by our marketing team typically and then we have our code monkey where you do all of your coding and that lives in a different kind of think about it like a different location is that correct okay so sometimes when you do the web pages themselves you don't necessarily have to be a super super strong coder the websites have a lot of things built into them now that help assist you so he does spends most of his time doing the game and developing the courses rather than spending so much time doing the website itself that's correct yeah yeah then we don't have to bother him when we need to make a few small changes um okay so you know if you don't mind i'm going to take over screen sharing go ahead all right and we have a couple more questions so you guys keep those questions coming they're really great um and we are happy to hear from you so this question comes from miss berg she teaches fourth grade at longsfield elementary she says my students love gaming and many would love the opportunity to get a job doing game development or game design what types of jobs i think i think more so around this question is what do you need to have or what kinds of coding skills should you have to get a job in gaming um so that's a good question i guess uh game development actually has um many aspects to it so uh probably so there are many um jobs in like in uh game development they don't require actually don't require coding like uh you have illustrators and you have sound designers and you have uh uh like game designers like uh people who just um work on uh uh how the game feels or uh like where our things are uh in the game um but definitely a major part of every uh game development team would be the game developers um uh yes which who are uh mostly coders um yeah though uh it's uh i guess game development is like a very it's like its own niche in computer programming and uh if someone like knows they're really into that then it's like a direction encoding that uh you should you can start learning more seriously uh pretty early on in your uh like uh programming education um because if i mentioned like uh web development which is uh what i mostly do which is dealing like with databases and like server architecture managing uh information and stuff like that then many of these things aren't very relevant for game development which is like a different kind of coding it all has the basic uh like everyone has to learn and that's what we do in code monkey also i believe if you're a designer and if you're working a field that's adjacent uh to technology uh you gotta understand what a loop is and what uh uh what this program is what a condition is uh yeah but uh beyond that like um game development programming is pretty different than uh like other types of programming really really complex and i think i think what ego broke down was was really great is that he does a lot of like web development you do see game design there is game piece you know game design pieces but it's not as even his team has a lot of things that they have the content developer which if you watch monday's webinar um she creates the content so what's going to go into the challenges how does she want them to be solved then the team has the challenges that they create and code on the backend and then we also have a person who does like the graphics so who's actually designing or animating the course as it goes through so even just in our webbased version of the game design it's pretty complex itself too but you can start taking things and start doing things like our block jumper and our game builder courses and see if you like those and then start pursuing pathways that way yeah that's uh i think that's what's nice about the game builder uh you can really has a low level of entry and you can do some drawing do some uh i guess choose uh sounds and do some a little bit of programming and uh um yeah i guess you're gonna be uh pulled in whatever direction that uh fascinates you the most exactly um the next question here we have from miss blackfold excuse me if i didn't pronounce that correctly um fourth grade at wham um what inspired you to create this program um so if you're talking about the uh this blocks jumper i could answer about uh box jumper yeah uh yeah so in box jumper we as i mentioned uh uh before uh we wanted to have uh wanted to bring a game builder to more kids so we have this uh discover platform where we see like these amazing uh creation kids too on uh on the game builder and uh we wanted to expand upon that so uh we knew um many more kids will be interested in game creation if we added a blocks coding so that was the motivation for adding uh blocks to the game builder and then we wanted to accompany the accompany that with this uh course just to demonstrate like what you can do and lead you through creating like this very small game um yeah that was inspiration uh for blocks jumper um yeah we love it and we're excited that we have this addition to to it and i think that i learned a lot so i hope that the students and teachers learned a lot from you when you were leading that as well um so this comes from miss lewis she teaches sixth seventh and eighth grade and sorry miss lewis i'm not sure where you're joining us from but um why do you believe your product is better than other coding programs around i'm well i'm going to let you do answer but i'm also going to answer this question because i taught in the classroom too um what i love most about codemonkey is that i love that there are solutions and things for teachers there's really great lesson plans but what i what i believe most is that everything is very scaffolded so as you could see when ido was walking through there wasn't like you're not moving from really one really abstract concept everything is really well built and i just felt like my students got a much better grasp and understanding of the concept so i hope you also agree yeah yeah without that when we're working on uh code monkey courses um we always have like these two uh uh two things that pull us uh we want uh we want them to be fun and we want them to be pedagogical and uh coherent um yeah and uh every step of the way uh we stop and ask ourselves is this uh is this um um did we explain it uh well enough uh we secondguess ourselves and uh and did we make it uh engaging enough so uh yeah that's uh i hope uh eventually uh the students and teachers uh feel that uh effort yeah and there's a lot of passion there if you can't tell from everyone on our team it's very passionate about the work that we do so we hope that that comes through to you as well um this is going to be our we'll take one more question right after this and then we'll be closing out because we are right at our time today we also want to honor edo's time as he mentioned he's joining from israel so it's quite late there so we need to make sure we also honor his time as well as yours um this is from miss chamber she's at benwood elementary with third fourth and fifth grade what is the best advice you have for somebody that wants to have a career in cs um that's a good question i guess um i would say the best way to learn is uh uh well code monkey obviously uh if you want to pursue a career um just uh looking at stuff that you use every day and think about uh how were they made i use this app i use this uh i use email i use a chat like how would this made and can i make it myself and uh you know search it online and search for tutorials and just uh uh i don't look at stuff like okay this is uh this is i don't know chat this is too complicated and uh it's a mystery no everything was uh built by uh human beings and uh and be uh with that attitude uh that curious uh attitude and i just try to build stuff yourself and uh you learn along the way i think that's i think that's great feedback because we had a couple of questions about what types of education do you have to become a computer scientist but i think i think that what you're saying is that there's lots of tools that we have available to you right now without even having to go straight to college if you're younger that you can just try it out yourself right i think that's great low risk you know when you're there um okay so the last question is what advice would you give to your younger self wow that's a tough question they have some tough ones over here yeah [Laughter] i guess uh i don't know buy bitcoin or something now best when you can no just joking here uh no i'm just kidding um uh yeah but i guess uh just what i said uh now like i ended up uh um like i'm i'm pursuing the career i'm interested in and uh uh i like what i do um and i and although i showed uh we showed like uh stuff i did uh when i was younger um then like most of my teenage years i wasn't like wasn't my most uh like my strongest fashion computer science um and i think uh when you had that uh women in stem um session it was also from our other other developers um you know it's okay to uh like pursue uh what you're interested in right now and uh even like if you don't think about it as a as a long uh longterm career you know just uh be curious and uh and yeah things will work out yeah and i think i think what we can take away from all three days of our events is that just try i think that that worst thing is if you don't try something take a no thank you taste is what we like to say and i think that's that's something to kind of keep in mind with coding or any passion that you have and i think you don't mentioned you know he's really into the music scene when he was younger and different things like that but music and coding actually tie pretty well to each other with just the different skills that you have so i think doe had some amazing amazing feedback and answered your question so well and we really really appreciate both his time and your time for spending that with us today um we hope that you took something away from this hour of code event and remember that hour of code doesn't have to be just an hour and that you can really take this and we hope that you take and feel the passion that we have for computer science bringing it to your students and bring that to your students as well so again thank you so much to edo all of those people that are joining us live who will watch this later and all of you students who are taking the time to spend an hour of code with us we thank you so much and as always don't forget to write code catch bananas and save the world we'll see you guys later bye everybody
