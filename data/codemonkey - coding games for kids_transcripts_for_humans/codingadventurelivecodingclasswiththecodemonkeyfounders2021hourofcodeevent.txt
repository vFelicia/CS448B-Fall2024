With timestamps:

00:07 - thank you everyone who is joining us we
00:10 - will go ahead and get started in about
00:11 - five minutes just giving people some
00:13 - time to shuffle in on this tuesday
00:15 - morning so thank you so much and we will
00:17 - see you all very very soon
00:53 - thank you to those that are joining us
00:55 - live
00:57 - on twitter facebook
01:02 - we are very excited to share this event
01:05 - with you so we will see you all in just
01:07 - about five minutes those of you that are
01:09 - just joining us if you have any
01:10 - questions for our founder you can feel
01:12 - free to pop those in the q a box and
01:15 - those of you that are joining us across
01:17 - all social media channels and here with
01:19 - us on zoom if you please just share with
01:21 - us where you're joining us from and what
01:22 - grades you teach
03:05 - for those of you that are just now
03:07 - joining us please share with us where
03:09 - you're joining us from in the chat and
03:11 - we will get started in just a few more
03:12 - minutes just giving everyone a little
03:14 - bit of time to
03:16 - usher in for today's session we are so
03:17 - excited to share this with you and we'll
03:20 - see you guys soon
03:38 - those that are joining us live on our
03:40 - social channels please also share with
03:42 - us where you're joining us from and what
03:44 - grade levels you teach
04:09 - right we will get started in just about
04:12 - one minute here kicking off our 2021
04:17 - live coding class with our founder
05:20 - all right we are going to go ahead and
05:22 - get started if you haven't done so
05:24 - please tell us where you're joining us
05:25 - from and what grade levels you teach in
05:27 - the chat and we are ready to kick off
05:29 - today's event
05:31 - so first we are today is the 2020
05:34 - one hour of code webinar series this is
05:37 - part two of really part three in our
05:40 - series for the csed
05:42 - hour of code
05:44 - 2021
05:46 - so today you are joining us for a live
05:48 - webinar with learning to code with our
05:50 - code monkey founder today we will be
05:52 - meeting the founder in just a few
05:54 - minutes
05:58 - so
05:59 - this is obviously our favorite event of
06:02 - the entire year the csn week and the
06:06 - hour of code
06:08 - we have been part of this event for
06:10 - seven years
06:11 - and the code monkey team wants to thank
06:13 - you so much for joining us with all of
06:15 - your students and teachers who are
06:18 - joining us for the webinar both here on
06:20 - zoom and across the social media
06:21 - channels and those that will be catching
06:23 - us later we know that there are a
06:26 - million choices that you could choose
06:27 - during this hour of code week cs ed week
06:30 - and we thank you that you're taking the
06:32 - time to spend it with us
06:35 - if you're if you're catching this at a
06:36 - later date you're watching the recording
06:37 - later we also want to thank you so much
06:39 - for spending your time with us
06:41 - we are excited to share this year's hour
06:43 - of code and we have some special
06:44 - announcements at the end that we'll
06:45 - share with you as well
06:47 - if you haven't done so already please
06:49 - make sure to follow us on all of our
06:51 - social media channels we are streaming
06:52 - to all of those social media channels
06:54 - today
06:55 - um and be sure to also catch us on
06:58 - linkedin as well during today's webinar
07:00 - you can also tweet at us using the
07:02 - hashtag cmwebinar i mean sorry excuse me
07:05 - cmhoc which is down here in the right
07:08 - hand corner
07:10 - and my team is also here to answer any
07:12 - questions that you may have and if you
07:14 - have any questions for the founder
07:15 - please pop those if you're joining us on
07:17 - zoom in the q a box or anywhere else on
07:20 - in the chat box
07:22 - and we'll save those during our live q a
07:24 - session here at the end
07:26 - so without further ado let's get ready
07:28 - to rate code catch bananas and save the
07:32 - world
07:33 - so we always like to share first just a
07:35 - little bit about our story and kind of
07:37 - how we got started so in 2014 code
07:41 - monkey's co-founder and ceo jonathan
07:44 - shore
07:45 - launched codemonkey after working with
07:48 - students of younger ages and different
07:50 - ability levels and just seeing that they
07:52 - really grasp the concepts of coding
07:54 - much
07:56 - much more when it was presented in a fun
07:59 - and gamified way and so that's how code
08:01 - monkey was born today code monkey is a
08:03 - leading fun and intuitive curriculum
08:05 - where students learn to code in many
08:08 - real programming language from block
08:09 - based to text based to full python and
08:12 - so we really hope that you give us a
08:14 - chance and spend your time coding with
08:16 - us during this hour of code week
08:19 - so to kick things off
08:20 - like to introduce our team that's always
08:22 - an important part of this is so that you
08:24 - can meet us as well
08:26 - my name is lena salle i'm the
08:28 - professional development and sales
08:29 - manager here at code monkey i've been at
08:31 - code monkey for about three years now
08:33 - and i
08:37 - was a former teacher as well so we also
08:40 - have a couple of other panelists joining
08:42 - us today we have boaz and boaz is our
08:45 - c-o-o which is our chief operating
08:48 - officer and he also does all of our
08:50 - marketing for code monkey that means
08:52 - anything you see on social media any
08:54 - blogs
08:55 - the web pages that you see all of those
08:57 - things are done by blaz and his team
08:59 - we also have brett he is our vp of us
09:02 - sales that means that how your teachers
09:04 - are accessing code monkey beyond the
09:05 - hour of code he works with
09:08 - myself and our other team
09:10 - to make sure that everyone is prepared
09:12 - for computer science and then we also
09:14 - have maya she is our customer success
09:16 - manager and a customer success manager
09:18 - make sure that our teachers have success
09:21 - using the platform and so that's what
09:22 - our team does all together for you
09:25 - so without further ado we're going to
09:27 - introduce our founder
09:29 - and ceo of today's event in our
09:32 - superstar and that is jonathan shore so
09:35 - i'm going to let him take over
09:39 - hi everyone can you hear me
09:41 - yep we can hear you
09:43 - great so it's a pleasure uh to be here
09:46 - it's my favorite session of the year um
09:49 - and thank you all for participating
09:52 - um
09:54 - yeah so just very briefly myself
09:57 - um
09:59 - my name is jonathan shaw i'm the
10:01 - co-founder and the ceo of code monkey we
10:04 - started the company efficiently almost
10:06 - eight years ago
10:07 - uh but i've been teaching kids to code
10:10 - um since
10:12 - the year 2001 so that's
10:15 - 20 years from uh it's been 20 years now
10:18 - and i've been coding myself since a very
10:20 - young age i think since i was eight uh i
10:23 - will talk about that in in
10:26 - uh later slides so i've been coding for
10:32 - more than 30 years and teaching kids to
10:34 - code for uh for 20 years
10:37 - um and i'm combining those two
10:40 - passions in code monkey since 2013.
10:46 - and we're very thankful that you have
10:48 - put together this so we're excited to do
10:50 - a q a with jonathan and learn a little
10:52 - bit more about his story and then we're
10:53 - going to kick it off doing a live coding
10:55 - class where you get to learn from him
10:57 - himself so we're really excited about
11:00 - that so let's talk about our outline
11:02 - today so we're going to do an intro just
11:04 - discussing a little bit about code
11:05 - monkey learning a little bit about
11:07 - jonathan he shared a little bit about
11:08 - himself already but we're going to dive
11:10 - just a little bit deeper
11:11 - how code monkey got started and then
11:13 - he's going to leave a coding class with
11:15 - you all i'm walking you through our
11:17 - coding adventure course and then at the
11:19 - end
11:20 - we will save time for q a from you the
11:23 - teachers and students
11:25 - so be sure to save those questions and
11:27 - pop those in the chat box we're really
11:28 - excited for that
11:30 - all right so now it's time to kick off
11:32 - our interview and learn a little bit
11:33 - more about jonathan
11:35 - so jonathan tell us a little bit about
11:38 - so you are the ceo and we know that you
11:40 - co-founded code monkey but can you tell
11:42 - us a little bit about
11:44 - what you do at code monkey
11:47 - um yeah so i'll try to explain
11:51 - um
11:54 - a code well when we started code monkey
11:57 - um
11:58 - like i brought my my software
12:01 - development experience and and and
12:03 - coding education experience to sort of
12:05 - create the vision for code monkey in the
12:07 - product
12:08 - and then with the other co-founder my
12:10 - young brother ital the cto
12:12 - uh we created together the first course
12:16 - which is now called coding adventure
12:18 - we've got and that's also the course
12:19 - that we're gonna use today
12:21 - so
12:22 - that was you know writing the first
12:24 - inspiration and vision and creating the
12:27 - first course the sort of the course that
12:29 - that uh brought us our initial success
12:32 - and fame
12:33 - uh and started the code monkey brand
12:35 - coding adventure
12:36 - uh what i do today
12:38 - uh is quite different as the company
12:41 - grew
12:42 - uh i unfortunately i don't get to spend
12:46 - any time at all coding uh at least not
12:49 - coding uh like part of the product uh
12:52 - the only time i get to code is when i
12:54 - try new courses new code monkey courses
12:56 - then then i i
12:58 - type some codes to go through the
12:59 - courses like like a code monkey student
13:01 - or teacher
13:03 - [Music]
13:04 - and also i don't get to
13:07 - participate as much as i used to in
13:09 - creating the courses because now we have
13:11 - pedagogy experts and product managers
13:14 - and developers
13:16 - so
13:16 - um
13:18 - i uh unfortunately well it's not only
13:21 - bad but i i i focus more on the business
13:24 - side today and on management
13:26 - and i'm planning the strategy for code
13:28 - monkey so
13:30 - deciding which markets to focus on what
13:33 - which directions to expand the products
13:36 - to
13:38 - building the team
13:39 - creating partnerships with other
13:41 - education companies
13:43 - around the globe
13:45 - and so on
13:47 - so it sounds like there's quite a lot
13:49 - involved with being um
13:51 - the ceo of a company
13:55 - and i think that
13:56 - obviously jonathan just talked about
13:58 - what does a ceo do so he does the hard
14:00 - part the hard business part of making
14:02 - those hard decisions about how to bring
14:04 - coding to you all
14:06 - and making sure that the courses that we
14:08 - have are aligning and meeting all of
14:09 - your needs so he's a very busy busy
14:15 - he person get to have as much fun coding
14:17 - the product although i will tell you
14:19 - he's always very very excited when we
14:20 - launch new courses and he gets the
14:22 - chance to play them just like you all
14:25 - that's true
14:26 - um so jonathan if you were not so you
14:29 - are an entrepreneur somebody who started
14:31 - your own business um alongside edo which
14:34 - will also be teaching a coding class
14:36 - tomorrow what would what career path
14:38 - would you have followed if you weren't
14:40 - an entrepreneur or if you didn't start
14:42 - code monkey
14:44 - so
14:46 - i actually started code monkey twice i
14:48 - started once in 2007 and failed
14:50 - miserably and then i started again in
14:52 - 2013
14:54 - so i guess i would repeatedly try until
14:56 - i finally
14:58 - get it done uh
15:01 - but in an alternate universe where i'm
15:03 - not starting code monkey
15:06 - uh i would probably start some other
15:07 - stuff so i started i had other education
15:09 - ventures and business ventures before
15:11 - code monkey uh
15:13 - and
15:14 - between the two attempts the failed
15:15 - attempt and the successful attempt so
15:17 - definitely would be an entrepreneur
15:19 - uh if i couldn't be an entrepreneur then
15:22 - probably i would
15:24 - i would just focus on teaching
15:28 - uh like i would probably continue
15:30 - teaching part-time and working with kids
15:33 - and then uh coding uh for a living
15:37 - um
15:38 - the rest of my time probably sounds like
15:40 - you have quite a passion for not only
15:42 - starting businesses
15:44 - um but also teaching so it makes sense
15:47 - why kukmoki is the product that you went
15:50 - with so um what was it this is not a
15:53 - question that we had originally asked
15:54 - but since he mentioned this um what was
15:56 - it like when you did have a failed
15:59 - attempt at starting code mcgee at the
16:01 - at your first go around
16:04 - um it was very confusing because i knew
16:09 - we had
16:10 - a good
16:11 - product a good idea because i did
16:14 - teach kids to code using that concept
16:16 - that we created
16:18 - for years and i saw that it was working
16:20 - very well but i couldn't find a way to
16:22 - sort of scale
16:24 - like bring that idea to uh
16:28 - as a product to
16:30 - to students beyond the students in my
16:32 - classes
16:33 - uh
16:35 - so it was pretty frustrating confusing
16:37 - to know that you have something good but
16:38 - you don't you can't find a way to sort
16:40 - of
16:40 - get it out there
16:42 - uh but i learned a valuable lesson uh
16:46 - for entrepreneurs um that sometimes you
16:49 - just have to wait uh for the right
16:51 - timing and then you know eight years
16:53 - later it was eight years later
16:56 - or seven years later six years later
16:58 - that coding teaching codings teaching
17:01 - kids to code became
17:02 - sort of a trend because started getting
17:04 - more attention and that was the right
17:06 - timing for to start code monkey and
17:08 - that's where
17:09 - that's when it finally worked
17:12 - sounds like with a little bit of luck on
17:14 - your side and a lot of grit so a lot of
17:17 - hard work
17:18 - that sometimes
17:20 - and failure this is something we learned
17:21 - from our women in stem webinar yesterday
17:24 - that sometimes we just have failure and
17:25 - we have to figure out what to do with
17:27 - that so it sounds like you had a new
17:28 - approach and strategy coming back in
17:30 - from taking a step back
17:33 - exactly
17:35 - um so switching a little bit of gears
17:37 - here so um something that i think is
17:39 - important for students to understand and
17:41 - so when we start to make the transition
17:43 - out of our regular classrooms and start
17:45 - thinking about the future i think it's
17:47 - important for people to see what
17:49 - for you specifically what is something
17:51 - that you look for when you do hire a
17:53 - person to join code monkey or if you had
17:56 - another business venture
17:59 - that's a great question uh and it also
18:02 - ties well to what code monkey does uh
18:05 - the curriculum
18:06 - so really the main qual the main two
18:09 - qualities that uh uh i look i look for
18:12 - uh potential employee
18:15 - our problem solving abilities
18:18 - and sort of being self-sufficient in
18:20 - learning
18:21 - new skills
18:24 - in the current
18:26 - work like rapidly changing
18:28 - uh work environment
18:30 - you cannot afford to hire a person just
18:33 - for their current set of skills because
18:36 - that the the required skills change
18:39 - rapidly if you look at
18:41 - i don't know customer success the tools
18:43 - that we use uh for customer success or
18:45 - the tools that we use for marketing
18:48 - uh
18:49 - even yeah and the tool that we're using
18:51 - obviously for developing the products
18:53 - and and selling it they change so
18:56 - quickly
18:59 - if you hire someone that doesn't have
19:01 - this ability to learn new tools on their
19:03 - own and just
19:05 - find ways to solve challenges uh
19:09 - creatively on their own then
19:12 - they will become very like highly
19:14 - inefficient in in the current
19:16 - environment pretty quickly
19:18 - yeah so it sounds like you have to be
19:20 - adaptable so being able to know that
19:23 - things don't always go the way that they
19:25 - seem they're going to go and then also
19:27 - having those problem solving skill sets
19:29 - which tie really perfectly with learning
19:32 - how to code those same types of skill
19:34 - sets
19:35 - exactly
19:36 - that's great
19:38 - um okay
19:39 - now what was the first programming
19:42 - language that you learned earlier you
19:43 - mentioned that you started learning to
19:45 - code at around the age of eight
19:47 - um so maybe you can share a bit about
19:50 - a bit with us about what first what was
19:53 - the first language that you learned
19:56 - so the language was called uh logo
19:59 - uh logo yeah that's a screenshot so
20:02 - that's a programming language that was
20:04 - developed in uh
20:06 - in mit
20:08 - um
20:09 - i think in the late 70s
20:12 - um
20:13 - was the and that language was developed
20:16 - for the purpose of uh
20:18 - being a gateway language for children
20:20 - for like for teaching kids to code or
20:22 - exposing kid to coding for the first
20:24 - time so it's not a programming language
20:27 - that is used in reward scenarios like
20:29 - for creating real software products it
20:31 - was designed
20:32 - uh
20:36 - teaching kids to code like the first
20:38 - coding language for children
20:41 - as you can see it wasn't that exciting
20:43 - like i mean
20:45 - even when we use future like more modern
20:48 - versions of logo in 2001 when i started
20:51 - teaching kids to code
20:53 - you could mainly use
20:54 - this coding language to create those
20:56 - simple
20:58 - geometry shapes and drawings
21:01 - but you have to remember that back then
21:03 - sort of the
21:05 - the bar for getting people excited from
21:07 - things happening on the screen was much
21:09 - lower we didn't have smartphone we
21:10 - already like people hardly had their own
21:12 - computers with colorful displays so even
21:16 - just drawing a shape like you see on the
21:17 - screen now
21:19 - uh often was enough to get
21:21 - kids excited uh in a coding class
21:25 - obviously today we needed something far
21:27 - more uh engaging
21:31 - it looks very much like a old school
21:32 - paint
21:34 - exactly
21:35 - very exciting nowadays for nowadays
21:37 - students yeah
21:39 - um so which of the code monkey
21:41 - characters is your favorite
21:45 - so that's the turtle uh
21:48 - and the reason for that is uh when using
21:50 - logo
21:51 - in the logo programming language uh
21:54 - sort of the object that you program you
21:56 - code
21:57 - in order to create those drawings on the
21:59 - screen is like uh they call it a turtle
22:01 - in those old computers it didn't look
22:03 - like a turtle just looks like a small
22:04 - triangle but the concept is that you
22:06 - have a turtle with a pen
22:09 - uh attached to
22:11 - to its uh tail and then you code the
22:13 - turtle to move on the screen and then
22:15 - the pen draws like leaves a marker line
22:18 - and that's how you draw those uh shapes
22:21 - so then
22:23 - we thought it would be funny
22:24 - around challenge 10 like level 10 in
22:27 - code monkey i think that's when we
22:28 - introduced the turtle as a surprise and
22:31 - and
22:32 - the instruction says oh my god it's a
22:34 - turtle so that's like sort of a an
22:36 - internal joke
22:38 - funny there's all kinds of things that
22:40 - always have there's little little
22:42 - tidbits of of things sprinkled
22:44 - throughout right that have
22:45 - ties to other things
22:47 - um i would say my favorite character i
22:49 - love the penguin that you meet later on
22:52 - in coding adventure i think he's super
22:53 - cute
22:54 - with or without the bow tie so that's
22:56 - one of my favorites
22:58 - um since we are having an avatar
23:00 - competition where we're having students
23:03 - create their drawings and turning them
23:05 - into code monkey characters do you which
23:07 - avatar do you use
23:09 - so i used the cat the ginger cat
23:12 - because that was my first path we
23:15 - actually found him when he was very
23:16 - little and his eyes were still shot and
23:18 - we needed to
23:20 - let it drink like milk substitute from
23:23 - uh those things that drops a little
23:25 - drops i don't know what you call it in
23:26 - english
23:27 - so yeah that was my first pet was this
23:31 - type of cat so that's why the character
23:33 - was introduced
23:35 - uh no i don't think so at this point
23:38 - yeah i wasn't that involved in the
23:39 - day-to-day of uh yeah like choosing the
23:41 - avatars but when i saw that it's an
23:44 - option now
23:45 - that was
23:46 - an easy choice for me
23:48 - makes sense we also learned that sanda
23:50 - also has one of our
23:52 - full stack developers also does cats but
23:55 - that's because she likes to save the
23:56 - world and save cats
24:00 - um okay so now we are going to click
24:02 - kick off doing our live coding lesson
24:05 - and it's going to be led by jonathan
24:07 - which is going to be we're really really
24:08 - excited about
24:09 - um so let's start off with today
24:12 - jonathan is going to be doing coding
24:14 - adventure and we'll talk about that in
24:15 - just a couple minutes but let's just
24:17 - discuss a little bit about what is
24:19 - text-based coding
24:23 - um
24:24 - okay so i'm not sharing my screen yet
24:26 - right so text-based coding
24:29 - so it's funny uh
24:31 - text-based coding it's what uh adults or
24:34 - like in the in the software industry is
24:37 - just called coding uh
24:40 - in the education industry in like
24:42 - computer science education
24:44 - uh for for kids uh you say text-based
24:47 - coding to distinguish
24:49 - uh
24:50 - between this regular classic way of
24:52 - coding and the block-based method of
24:55 - coding which was introduced also by an
24:56 - mit product in in the 90s called scratch
25:00 - so you have those blocks that are very
25:02 - popular in the recent decades for
25:04 - introducing programmatic thinking
25:06 - to young students
25:09 - so you actually sort of
25:11 - learn the logical elements of coding and
25:13 - you build algorithm programs without
25:16 - typing any
25:18 - any text-based code yourself
25:22 - and i'm code monkey on our first course
25:23 - coding adventure the one that we're
25:24 - going to try today what was different
25:26 - about it is that it was the only course
25:29 - that introduced coding to young learners
25:33 - through text-based coding from the
25:35 - get-go so instead of starting with
25:37 - block-based coding and then gradually
25:38 - transitioning into text base we came up
25:40 - with all kind of tricks and
25:43 - and
25:44 - technologies that made text-based coding
25:46 - easy enough for kids
25:48 - and we actually think that
25:51 - uh
25:52 - while doing that we've actually created
25:54 - a more engaging uh
25:57 - user experience for children because we
25:58 - think that the fact that they're
25:59 - actually typing codes like like real
26:02 - adult coders
26:03 - from from the get-go actually adds to
26:06 - the excitement
26:07 - um
26:11 - for them and also
26:13 - teaches them sort of a more advanced
26:15 - skill
26:16 - um
26:18 - earlier
26:19 - yeah and i think that a lot of our
26:21 - teachers also express that they like
26:22 - that the students are learning
26:24 - real text-based code from a much younger
26:27 - age it gives them the chance to kind of
26:29 - have that exposure
26:31 - and then also to really get the chance
26:32 - to really understand the concepts i
26:34 - think block based could be a bit tricky
26:36 - to really identify that but here you can
26:38 - see the step by step that's created from
26:41 - that
26:42 - um
26:43 - and so we do use a language which we
26:46 - jonathan talked about is coffeescript
26:48 - and so
26:49 - do you want to talk a bit about
26:50 - coffeescript
26:53 - um i can mention like the brief history
26:56 - so javascript became the uh
26:58 - the most useful programming language
27:00 - sort of by chance it was never designed
27:02 - to be so widely used but since the it
27:05 - was javascript was a language that uh
27:08 - created just for adding some
27:11 - um
27:14 - like capabilities to websites
27:16 - uh
27:18 - what in the beginning websites were just
27:19 - static pictures and texts and links and
27:21 - then javascript came along to add some
27:25 - things there's just very little tasks so
27:27 - when you type in a password or your
27:29 - email address on a website the website
27:31 - can verify that the email address is a
27:33 - valid email address things like that
27:35 - then it became super popular because you
27:37 - had browsers on all devices and then
27:39 - javascript became the only language that
27:42 - is supported by all the devices in the
27:44 - world even mobile phone like smartphones
27:46 - but it's it's it's uh
27:48 - really like javascript is not very user
27:51 - friendly so for the developer it's not
27:54 - an elegant language so coffeescript came
27:56 - to fix that and it created sort of a
27:58 - more
27:59 - uh coder friendly version of javascript
28:03 - when we started codemonkey
28:05 - coffeescript was trending we thought
28:06 - it's a good gateway language because
28:08 - it's very
28:09 - user-friendly it looks almost almost
28:11 - like plain english
28:13 - and it's as useful as javascript because
28:16 - it's coffeescript actually translate to
28:18 - javascript when you run it so
28:20 - uh it was both very useful and very easy
28:23 - to to use and teach
28:26 - and just so anyone's wondering java is
28:29 - also a type of coffee right so java
28:33 - coffee so they kind of go together so if
28:35 - you ever wonder these are real languages
28:39 - so now we're going to dive into what is
28:41 - coding adventure the course that we're
28:42 - going to be using so you can tell us a
28:44 - little bit about what coding adventure
28:46 - is
28:48 - so coding adventure like i said that was
28:50 - our first course i think for two years
28:52 - that was our only course and that was
28:54 - the course introducing text-based coding
28:57 - using coffeescript to children uh
28:59 - through a game where a monkey where you
29:01 - need to program a monkey to collect all
29:03 - the bananas uh on the screen in order to
29:06 - move to the next level
29:08 - so we're gonna get the um bit we're
29:10 - gonna get the chance to do that and so
29:12 - we talked a bit already why coding
29:14 - adventure um was created created so that
29:18 - um students could have a better
29:19 - understanding of the concepts rather
29:21 - than learning in as jonathan discussed
29:23 - javascript which could be
29:26 - quite
29:27 - tricky especially for younger students
29:29 - to code so that is how coding adventure
29:32 - was born and if you notice here on this
29:35 - specific challenge that we have here
29:36 - which we won't go that far into this
29:38 - specific challenge but you'll notice
29:40 - here it looks a little bit like
29:42 - something that we learned about before
29:45 - a little bit like
29:46 - logo where the turtle is kind of
29:48 - dragging here um so just kind of
29:50 - noticing those those subtle hints
29:53 - throughout the platform as well
29:55 - secrets that you probably didn't know
29:57 - before
29:58 - all right so now jonathan is going to
30:00 - take over and he is going to do our
30:02 - lesson on how to code
30:05 - with coding adventure
30:07 - all right so i'll share my screen my
30:10 - browser's window can you see my browser
30:13 - window yep we can see it
30:15 - all right perfect so what i did i just
30:19 - googled uh code monkey hour of code uh
30:23 - and then it has
30:24 - us
30:26 - like multiple results because we have
30:28 - different hour of code courses
30:30 - and each our code course is actually
30:32 - sort of a sample of the full course that
30:34 - we have a sample that is free
30:36 - uh where you don't even need to log in
30:38 - in order to start playing it
30:40 - you don't even need to
30:41 - create a free account a trial account
30:44 - you can just
30:45 - click start playing and that's what i'm
30:47 - going to do now
30:48 - so i'm clicking start playing and i'm
30:50 - going to start the
30:52 - coding adventure on the code course
31:10 - [Music]
31:13 - so
31:14 - oh no we must get our bananas back press
31:16 - run to get the monkey moving
31:19 - so that's a little
31:21 - short instruction that we get
31:23 - beginning of each level each challenge
31:25 - so i'm gonna press run and see what
31:27 - happens
31:33 - that was easy
31:35 - so there was only one banana we got it
31:38 - so
31:39 - we solved the challenge we're moving to
31:41 - the next one so
31:42 - those first levels are just
31:45 - introducing the platform uh this is why
31:47 - we didn't have to type any code the code
31:50 - was already there we're just introduced
31:52 - to the concept of clicking around and
31:53 - then seeing the monkey executing the
31:56 - the code
31:57 - now can you fix the code on the right it
31:59 - should make the monkey catch the banana
32:01 - so now
32:03 - it's a bit more complex and before jonah
32:06 - jonathan start yeah turn that down a
32:08 - little bit
32:09 - we love those sounds but it's hard when
32:10 - we're sharing that with her with
32:12 - others so background sounds
32:16 - off
32:17 - okay
32:19 - so let's see now
32:22 - um
32:22 - [Music]
32:25 - so we have step 10 here is the initial
32:28 - code and if i'm going to click run
32:30 - let's see what happens before i start
32:32 - changing the code i first
32:34 - i always like to run it as is first to
32:36 - see what the problem is if there is a
32:38 - problem let's see so i'm clicking run
32:41 - the monkey takes 10 steps
32:43 - and it's not enough so i'm getting a
32:45 - hint use step 15 instead of
32:49 - step 10 so let's try that
32:54 - keep trying
32:56 - so the keyboard animation here is a hint
33:00 - to what i need to change so i'm going to
33:01 - delete 0 and type 5 instead i have now
33:04 - step 15 on my line of code instead of
33:07 - tap 10
33:08 - step 10 i'm clicking run
33:10 - now the monkey goes all the way to the
33:12 - banana
33:14 - that was pretty good now let's learn
33:16 - some new tricks
33:18 - next challenge
33:24 - you can use the ruler to measure
33:26 - distances so again the first few
33:28 - challenges are really just
33:31 - teaching us how to use the code the the
33:34 - sort of the mechanics of coding
33:35 - adventure the different tools
33:38 - we're not getting into any real coding
33:40 - concepts yeah
33:42 - so the ruler here
33:45 - is a very useful tool
33:47 - i pick it up i click on the monkey i
33:50 - click on the banana it tells me the
33:51 - distance between the monkey and the
33:53 - banana
33:55 - step 12. i hope i did that right
33:58 - so now i'm gonna delete 0 and type 12
34:02 - and let's see if that was accurate
34:08 - no that was not enough
34:09 - let's see
34:11 - i didn't do it right i'll
34:13 - re-measure
34:16 - click the monkey
34:20 - click the banana oh it's 20. okay so i'm
34:23 - going to change 12.
34:26 - delete it type 20 instead
34:29 - hit the run button again
34:32 - monkey monkey's executing the line of
34:34 - codes
34:34 - [Music]
34:38 - to the next challenge
34:46 - okay so now we're learning about turing
34:49 - you can make the monkey turn to the
34:50 - banana by using turn left or return
34:52 - right
34:53 - so we're learning a new command a new
34:56 - function
34:57 - uh and also
34:59 - we're gonna write our first
35:02 - program that is longer than one line so
35:04 - we have two lines here turn left and
35:06 - step 12.
35:09 - like i usually do i'm going to click the
35:10 - run button before
35:12 - trying to edit the code see what happens
35:15 - if i just run it as is
35:17 - if the monkey turned the wrong way i'm
35:20 - getting a hint you just turn right
35:21 - instead of turn left
35:24 - so why do you run why do you run the
35:27 - program
35:28 - before even though the tip told us to
35:30 - step right or turn right why did you d
35:33 - why did you run the program first
35:36 - so
35:37 - um
35:40 - call that i guess debugging
35:42 - that's a very important concept in
35:44 - coding
35:45 - um
35:46 - like most of the time coders they don't
35:48 - write new code they actually spend most
35:51 - of their time fixing or improving
35:54 - uh
35:55 - or adding capabilities to existing
35:58 - programs
35:59 - um
36:00 - so you most of the time you have to deal
36:03 - with existing code and
36:05 - for me and for many other developers the
36:07 - best way to do that is to first run the
36:09 - code that you have that was written
36:12 - by other people or was reading by you in
36:14 - the past and now you have to revisit it
36:16 - so first you run what you have to see
36:18 - what happens
36:19 - uh for me that's the easiest way of
36:22 - sort of understanding uh
36:25 - the situation what needs to be changed
36:27 - or fixed
36:29 - um
36:31 - so like we did here i realized we need
36:33 - to change turn left to turn right and i
36:35 - don't have to type right uh
36:38 - letter by letter you see i have those
36:40 - buttons
36:41 - uh
36:42 - uh
36:43 - on the bottom end of the screen
36:45 - so that was one way for us to make uh
36:48 - text-based coding easier so you don't
36:50 - have to actually type the text letter by
36:52 - letter often you can just use those
36:54 - buttons and he types the
36:58 - the commands and arguments for you turn
37:00 - right step 12.
37:02 - i'm gonna click the run button
37:05 - [Music]
37:08 - first code that's longer than one line
37:12 - great
37:14 - okay it calls me to sign up
37:17 - because i use this as a guest i'm gonna
37:19 - skip this because i already have
37:20 - multiple code monkey accounts but when
37:22 - you're using this with your classroom as
37:24 - a teacher
37:25 - i really encourage you to click the sign
37:27 - up button it's going to allow you to set
37:30 - up a classroom classroom for free a
37:32 - student that way your students
37:35 - their work is
37:37 - stored on our servers and they can pick
37:40 - up from where they left the next time or
37:42 - from home or if you do another coding
37:44 - lesson
37:46 - they don't have to start over
37:48 - and it's free uh and the teacher can
37:51 - also keep track of students work and
37:54 - progress through the teacher dashboard
37:56 - uh once you sign up for free code monkey
37:59 - teacher account i already have that like
38:01 - i said i'm gonna just skip this and
38:04 - continue coding as a guest
38:09 - what happened okay
38:11 - click on the button below to enter code
38:13 - oh so here i'm being introduced to what
38:14 - i just told you in the previous
38:16 - challenge and how you can use those
38:17 - buttons
38:18 - instead of typing
38:19 - so in this challenge i have to not just
38:22 - fix the existing lines of code i have to
38:24 - add my own line so it has turned left
38:26 - which is correct
38:28 - but i need to make the monkey also step
38:31 - towards the banana after it turned
38:32 - towards the banana instead of typing
38:34 - letter by letter i'm just going to click
38:36 - step
38:37 - and i'm going to click
38:40 - i'm going to type 12 the numbers you do
38:42 - have to type by yourself
38:44 - so i type 12 let's see
38:48 - [Music]
38:52 - what happens if you make a mistake um
38:55 - with the spelling is it does it make a
38:57 - difference if i had a capital t instead
39:00 - of a lowercase t
39:03 - so definitely and that's a frustrating
39:05 - part about text-based coding
39:08 - that you have to be very accurate even a
39:10 - small spelling mistake or even like you
39:12 - said just using a capital t letter
39:14 - instead of a lowercase letter let's see
39:17 - let's try to change this to step with a
39:19 - capital s
39:21 - so that's gonna make that's gonna break
39:23 - the the program let's try and run it
39:27 - yeah fixed line two i don't know what
39:29 - step is
39:30 - so that's uh thing about computers
39:34 - you have to be very accurate with them
39:36 - uh
39:37 - like human being can sort of
39:40 - uh
39:41 - understand from context even if you have
39:45 - a typo or if you use uh you don't use
39:47 - the correct word but with code and with
39:50 - talking to computers
39:52 - you really have
39:54 - you gotta have zero mistakes you gotta
39:56 - be very accurate
39:58 - uh
39:59 - even
40:00 - to the point of not using capital
40:02 - letters
40:05 - that's something that you see common or
40:07 - that programmers will see common when
40:09 - they're doing like sprints which is a
40:12 - really long run of creating something to
40:14 - get some product piece or something
40:16 - program
40:17 - that they'll have errors right the
40:19 - syntax is always the trickiest part you
40:22 - spend long time coding and then
40:24 - it's pretty difficult right to find
40:26 - those syntax errors
40:28 - exactly and and uh some of the
40:30 - technology we created in codemonkey
40:34 - was around making those error messages
40:38 - more clear
40:40 - because what you see here like you type
40:42 - step maybe you meant step like those
40:44 - type of thing like when you do on a
40:46 - google search where you're searching for
40:47 - something and you had a typo and google
40:49 - is suggesting the right term
40:51 - so like real coding environments they
40:53 - don't do that they just tell you
40:55 - something is wrong um
40:57 - something is wrong on line 12 and you
41:00 - have to figure it out on yourself and on
41:01 - code monkey
41:03 - uh we put a lot of effort uh
41:07 - when creating when building the platform
41:09 - so that the error messages will be
41:11 - uh
41:12 - more clear more
41:14 - coder friendly
41:17 - okay so we we made it all the way to
41:19 - challenge
41:21 - what is this one is this challenge
41:24 - um
41:25 - 10. challenge five five okay
41:28 - so now we're solving a real problem uh
41:31 - we need to get to the bananas but we
41:33 - have this
41:34 - line of bushes this fence
41:36 - uh
41:37 - blocking the way and we have to walk
41:40 - around it
41:41 - so i think like this is the first
41:44 - taste of
41:46 - what it means to sort of build an
41:48 - algorithm uh
41:50 - so like we said we need to be very
41:51 - accurate and ex you know so with
41:53 - computers with code you also need to be
41:55 - very explicit you can't just tell the
41:58 - computer just go around the bushes you
42:00 - have to use very simple
42:02 - well-defined
42:04 - uh instruction and create a set of those
42:07 - instructions sort of like creating a
42:08 - recipe
42:10 - uh it needs to be
42:12 - 100
42:13 - like uh
42:14 - well-defined so the computers knows
42:16 - exactly what to do
42:18 - uh so
42:20 - we need to break down
42:22 - uh
42:23 - our plan of walking around the bushes
42:26 - into
42:27 - small uh
42:28 - small pieces
42:30 - uh the computer can understand so we
42:33 - have the beginning typed in for us so
42:35 - the first thing we need to do is to turn
42:36 - left so that we don't face the bushes
42:39 - we want to walk
42:40 - like around from from the left side so
42:43 - turn left step five will not get us far
42:46 - enough let's use the ruler
42:48 - if you want to get all the way
42:50 - sort of above the bushes
42:53 - you need to be
42:54 - i mean the rulers
42:59 - try this again
43:04 - you'll notice you just have to click on
43:06 - the top of the monkey's head and you
43:07 - have to drag it if you don't and you
43:10 - won't get as accurate as a read
43:12 - exactly so i need to take
43:15 - 15 steps
43:16 - all right
43:18 - so let's do this
43:20 - step 15.
43:22 - let's see what happens so far
43:24 - and what do you guys think after he runs
43:26 - step 15
43:28 - what do you think is the next thing that
43:30 - we should do
43:34 - and there's our heat
43:36 - there is a that helps us
43:44 - okay
43:45 - so while you guys think about that we're
43:46 - going to continue solving this
43:49 - together so that
43:50 - that hint told us that we need to turn
43:53 - right
43:54 - after exactly yeah so i'm clicking the
43:56 - turn button instead of typing t-u-r-n
43:59 - and a space
44:00 - and then i'm clicking right
44:03 - then
44:04 - i already measured this so i know that
44:06 - this
44:08 - path here is also
44:10 - 15 steps i think
44:12 - step and type in 1 5 15
44:16 - and i'm gonna click the run button
44:23 - [Music]
44:29 - all right and i got three stars maybe
44:32 - now it's a good time the next challenge
44:34 - to explain
44:37 - what is what is the meaning of the stars
44:39 - uh the star score
44:41 - um
44:43 - okay we're going to have to start from
44:45 - scratch here i trust you young coder
44:48 - okay
44:49 - so i have to go all the way to the
44:50 - banana here and obviously i can't just
44:52 - do step 20 or wherever the distance is
44:55 - because the monk is gonna the monkey
44:57 - can't swim
45:01 - so i need to go around and use the
45:03 - breach um
45:05 - but i also noticed that this one didn't
45:07 - have any code in it before
45:10 - why is this one why is this one
45:12 - different
45:13 - right so this is uh something important
45:15 - to to mention mainly for the teachers so
45:18 - we call those challenges assessment
45:19 - challenges
45:21 - uh once in every few challenges uh we
45:25 - put in what we call an assessment
45:26 - challenge and this the purpose of the
45:28 - challenge challenge is sort of to
45:30 - summarize everything that you've learned
45:32 - in the previous challenges
45:33 - and
45:34 - combine all of the
45:36 - new skills and knowledge
45:38 - into
45:41 - what a solution of a single challenge
45:43 - and the purpose is not only to recap
45:45 - it's also to assess whether you actually
45:48 - learned
45:49 - uh what you were supposed to learn in
45:51 - the previous challenge and and you know
45:52 - you really understand it and you know
45:54 - how to to use
45:56 - uh what you've learned so we start with
45:58 - a blank
46:00 - document of code
46:02 - to in order to really make sure that
46:04 - you're not just sort of running and
46:06 - debugging fixing and somehow getting it
46:09 - sold you're really
46:10 - creating the solution from scratch
46:14 - when you're using the teacher dashboard
46:16 - those assessment challenges are
46:17 - highlighted so
46:18 - you can if you want to make sure that
46:20 - the student really learned uh what they
46:23 - were supposed to learn you can
46:24 - sort of just look at
46:26 - the score that they got for the
46:27 - assessment challenges
46:29 - um so here
46:31 - um let's see to go around
46:35 - um
46:37 - distance here is like
46:40 - five i think let's try this
46:42 - the other one is 20. so let's do this
46:45 - i'm gonna turn left
46:49 - step whoa
46:50 - okay step
46:53 - um
46:55 - five i don't know why it created all
46:57 - those blank lines
46:59 - i had a cat stepping on my keyboard
47:02 - um
47:04 - try that orange ginger cat yeah
47:07 - well it can't be that specific one that
47:09 - one passed away
47:12 - um
47:14 - so turn right
47:17 - let's try to walk all the way to the
47:19 - bridge
47:20 - and turn right
47:24 - i'm going to step to the bridge
47:27 - 10 steps and i'm going to step again
47:30 - from the bridge to the other side of the
47:31 - river
47:33 - and i'm going to turn
47:35 - right towards the banana
47:45 - okay this is an example of a spelling
47:46 - mistake so i'm going to try this one i
47:48 - have step five on the last line
47:53 - i didn't even get there because okay i
47:55 - didn't delete the step 20 it just fell
47:57 - in the water
47:58 - okay so i'm going to delete the line
48:01 - from my previous false solution
48:06 - i'm going to start by turning left
48:08 - before taking any steps
48:11 - um
48:12 - i'm going to fix this because i want to
48:14 - show something
48:15 - different now
48:17 - and last step step to the bridge step
48:19 - down from the bridge
48:21 - it went too far
48:23 - okay
48:24 - it went like too far past the banana
48:28 - so let's try and do this
48:30 - step
48:32 - eight
48:42 - [Music]
48:45 - okay but i only got two stars for this
48:47 - solution
48:48 - and it's telling you so with six lines
48:51 - or fewer to get the third star
48:54 - so
48:54 - the thing about writing code usually uh
48:57 - it's not enough to
49:01 - write a
49:03 - piece of code that
49:05 - does what you needed to do
49:07 - in this case get the banana get the
49:08 - monkey the banana uh you usually
49:11 - expected also to
49:13 - solve the solution in the most elegant
49:16 - way possible in our case
49:19 - the most elegant way
49:21 - usually simply means with the fewer
49:23 - lines of code as possible so i use seven
49:25 - lines of code in order to get to the
49:27 - banana here and it's telling me that
49:30 - there is a way to solve this with just
49:32 - six lines
49:33 - six lines of code
49:35 - and if i'll find that solution
49:37 - i'll get the third star
49:41 - so anyone has an idea how do i
49:44 - how do i get rid of one line or how can
49:46 - i combine two lines
49:48 - from my solution into just one line of
49:51 - code
49:52 - you guys can put that in the chat box
49:54 - for us while we're while we're working
49:56 - through this together
49:59 - so do what would be a way that we could
50:01 - change this to make this a more to get a
50:04 - three star
50:17 - oh someone says change it to step 18
50:20 - instead of step 10 and step 8
50:23 - accurate that is accurate right so i
50:26 - don't need even though i'm stepping onto
50:27 - the bridge and then stepping down from
50:29 - the bridge i can actually do both those
50:32 - i can achieve both those
50:34 - um
50:36 - like sub goals
50:38 - uh
50:38 - with just one line of code by combining
50:41 - 10 and 8
50:43 - into step 18
50:45 - 10 plus 8 in one
50:47 - in one line so let's see
50:54 - all right
50:57 - now i got that third star
51:00 - okay and now we're gonna leave some time
51:02 - for q a so i know we only got through a
51:05 - few challenges but i hope you guys um
51:08 - learned a little bit from
51:10 - um jonathan a really quick though before
51:12 - we oh you already stopped sharing oh
51:14 - sorry
51:15 - should i put it back on yeah we can put
51:16 - it back on i want to ask a question
51:18 - really quick
51:19 - sure screen
51:20 - while you guys were
51:22 - we were working through these challenges
51:24 - and learning some things jonathan talked
51:26 - about syntaxing making sure we have the
51:28 - right spelling
51:30 - but one thing we didn't discuss is what
51:32 - is the difference between turn and step
51:35 - so we notice that there's like a
51:37 - difference but what are those so we see
51:39 - that they are step and turn but what
51:40 - exactly are those things what do they
51:42 - mean
51:45 - between step and turn
51:48 - are they commands are they are they
51:50 - functions well what are those
51:53 - yeah so actually it's a good question
51:56 - there's a lot of confusion around around
51:58 - the terminology and the reason is that
52:00 - in different programming languages they
52:01 - use different terms for that in
52:03 - coffeescript which is actually a version
52:05 - of javascript
52:06 - we we actually don't call those
52:08 - uh
52:10 - elements commands we call them function
52:12 - because coffeescript is the functional
52:14 - languages so everything is a function
52:16 - and functions always take arguments uh
52:20 - like in math
52:21 - um
52:23 - um
52:25 - usually
52:25 - like always actually commands
52:28 - they always take like input we call the
52:30 - input arguments or parameters
52:32 - so for step for the step function
52:37 - the the argument or the parameter would
52:39 - be a number simply
52:42 - deciding the number of steps that you
52:44 - want
52:45 - to be taken
52:47 - for turning it doesn't have to be a
52:49 - number this challenge introduces also
52:51 - the option of putting in a number as an
52:53 - as an argument for the turn function
52:55 - function which would be the number of
52:57 - degrees to turn
52:59 - what we've done so far we use special
53:01 - arguments
53:03 - um
53:04 - in the form of left and right so those
53:07 - are just
53:08 - sort of like constants or sort of
53:10 - abbreviations
53:13 - for specific numbers so left really just
53:16 - means 90 and right means negative 90.
53:19 - and that it's so you would get the same
53:22 - result for typing turn 90 or or for
53:24 - typing turn left but it would just make
53:26 - the
53:27 - code more elegant and more easy to write
53:29 - and more easy to read that's very
53:31 - important but like i said coder spent a
53:33 - lot of time reading other coders code so
53:36 - when it says turn left it's it's much
53:38 - easier to understand
53:39 - what the program means then
53:41 - if it said turn 90.
53:45 - makes a lot of sense
53:49 - okay
53:50 - now you can yeah all right
53:53 - okay so now we are going to take some
53:56 - questions from our audience
53:59 - and so if you have any questions go
54:00 - ahead and pop those into the chat box or
54:04 - into the q a and that's including anyone
54:06 - who's joining us on any of the other
54:08 - social channels
54:09 - so a couple questions that we did have
54:12 - is um what
54:14 - um
54:17 - hold on i just thought i just lost this
54:20 - is um what are the future plans of code
54:23 - monkey
54:25 - um
54:27 - that's a great question
54:28 - um
54:29 - [Music]
54:31 - so
54:32 - um
54:33 - in terms of expanding the product
54:37 - we are um
54:39 - adding
54:40 - uh planning to add more coding courses
54:43 - for middle schools we feel like that we
54:45 - have uh more for elementary schools than
54:48 - we have for middle schools and we wanna
54:50 - balance that out a little bit so more
54:53 - more more coding courses for middle
54:55 - school probably the next coding courses
54:57 - and uh we're planning also on adding
55:00 - computer science courses that are not
55:03 - coding courses so if you look at the
55:06 - computer science curriculum that is
55:07 - being gradually adopted around the world
55:09 - in the united states but in other
55:10 - countries as well computer science is
55:12 - not only about coding
55:14 - um
55:16 - it's about other
55:18 - kind of digital skills and even soft
55:20 - skills like problem solving
55:22 - collaboration
55:23 - um
55:24 - [Music]
55:26 - digital literacy online safety
55:29 - uh just understanding how computers work
55:31 - and the word works in the internet so
55:33 - we're planning to add
55:35 - [Music]
55:36 - courses around those topics as well
55:39 - great
55:41 - um this question says how will
55:43 - codemonkey help in building ourselves
55:48 - how will codemonkey help in building
55:50 - ourselves like as personalities oh
55:53 - that's that's uh
55:55 - that's that's an excellent question
55:58 - um
55:59 - so
56:00 - it's it's the same as how how coding
56:02 - helps
56:03 - uh
56:04 - and and you see that in many things like
56:06 - for example like
56:09 - when you when you have your kids on a i
56:11 - don't know sucker uh
56:14 - you put it on a soccer soccer class or
56:16 - like football or baseball
56:18 - you don't necessarily aim for your for
56:20 - for the for the child to become a
56:22 - professional athlete
56:25 - um
56:26 - but you it's obvious that they're
56:28 - picking up many skills
56:32 - and personal qualities along the way
56:34 - that are transferable to other things
56:37 - like persisting
56:40 - collaborating
56:41 - being creative
56:43 - uh not giving up and and
56:46 - and solving problems creatively and
56:48 - consistently
56:50 - so i think those are just examples of
56:53 - the kind of qual personal qualities uh
56:55 - and traits that that you can enhance
56:58 - while learning and practicing coding
57:01 - which i think are really great skill
57:03 - sets that transfer
57:05 - exactly what you're saying beyond just
57:07 - life of being a programmer so i think
57:09 - that those are important skills that can
57:11 - really transfer to anything like being
57:13 - an athlete or
57:14 - um
57:15 - anything at all
57:18 - um
57:19 - one question that we had here is um if
57:23 - you could how can you
57:26 - encourage students of a young age to get
57:28 - into programming
57:30 - or teachers to try it
57:32 - yeah so
57:34 - my personal belief on that i'm getting
57:37 - anyone to
57:38 - do anything not just students or
57:40 - teachers also employees or partners or
57:43 - friends
57:44 - family members is really
57:46 - searching for their sort of inner
57:49 - natural
57:50 - motivations and then tying into that
57:53 - so
57:55 - i don't know if you have a kid that
57:56 - likes to play computer games
57:58 - uh
57:59 - i would try to work from there like
58:02 - saying how would you like to try and
58:04 - create your own computer game or modify
58:06 - a computer game that you enjoy playing
58:09 - on your phone
58:10 - uh
58:11 - and if the if the child is excited about
58:14 - that idea then you go into okay do you
58:16 - know how computers games are designed
58:18 - and modified that that is done through
58:20 - code
58:22 - how would you like to learn
58:24 - to code
58:25 - and eventually if you do well enough
58:27 - you'll be able to create your own games
58:29 - or modify games that you that you
58:30 - already play
58:36 - um another question i really like the
58:38 - tip of modifying too because i think
58:41 - students will have to recognize other
58:43 - someone else's code and try to interpret
58:46 - their code to make it their own so i
58:47 - think that what you were mentioning
58:49 - earlier is programmers don't necessarily
58:51 - always create the code from scratch but
58:54 - oftentimes they're modifying other
58:56 - people's code
58:57 - so i think that's a good tip as well
59:01 - another question that um
59:04 - students had is do you have any
59:07 - thoughts on
59:09 - how students can
59:11 - become entrepreneurs at a young age do
59:14 - you have any tips
59:17 - um
59:20 - yeah i think um
59:21 - [Music]
59:24 - it's uh
59:26 - it's a good question
59:27 - um
59:29 - hard question like yeah i think role
59:31 - models uh are 95 percent of any
59:34 - educational
59:36 - uh
59:37 - experience so if they have uh
59:41 - people in their environment that they
59:43 - that serve as a positive role model for
59:45 - them and they aspire to be a little bit
59:47 - like them and if those people have
59:49 - entrepreneurial
59:51 - sort of mindset or um yeah way of living
59:56 - um
59:57 - then that's the best way and a teacher
60:00 - is can often be very entrepreneurial if
60:02 - they come up
60:04 - let's say with their own initiative for
60:05 - teaching staff that are not in in the
60:07 - mandatory curriculum or teaching in
60:09 - different methods or
60:11 - initiating some
60:13 - activities in the school
60:15 - uh so yeah the best way i think is to to
60:18 - set a personal example
60:21 - i think that's great or finding mentors
60:22 - i think mentors are really important and
60:24 - i know there's a lot of
60:26 - um there's even right now like a lot of
60:28 - communities for students to have
60:30 - mentorship and i would encourage both
60:32 - teachers and students to seek those
60:34 - opportunities because lots of people
60:36 - like us in the industry want to give
60:38 - back that's what we
60:39 - we do we're passionate about helping
60:41 - teachers and helping students and i
60:42 - think that if you can find that it's a
60:45 - good one so another our last question
60:48 - since we're we're out of time here is
60:51 - how has coding helped change your life
60:56 - um
60:58 - wow
61:01 - these are tough questions aren't they
61:04 - i owe a lot to coding
61:06 - um
61:07 - [Music]
61:08 - but i don't know if i'll go back
61:11 - um
61:13 - back to the early years of coding for
61:16 - myself
61:17 - um
61:20 - [Music]
61:22 - it was just a good way for me to find
61:25 - friends
61:26 - that were
61:28 - sort of on a similar mindset as i am
61:31 - because i wasn't like i was a bit quiet
61:33 - a bit shy as a child uh in elementary
61:36 - school uh and once i got into this world
61:39 - of coding it was a great way to find
61:41 - like sort of like-minded
61:43 - uh friends i guess my first friend one
61:46 - of them was also a co-founder of code
61:48 - monkey we've actually been coding
61:49 - together since
61:51 - 4th grade or something like that so
61:55 - it was really for me just sort of
61:56 - finding my sort of
61:59 - [Music]
62:02 - place in in in society i guess and
62:04 - finding friends and finding them also
62:06 - finding my career path
62:08 - i think that's i think that's important
62:10 - i think it's finding something that
62:12 - you're passionate about is important and
62:15 - and it's okay if your passions change
62:17 - over time and and it sounds like even
62:19 - your transition yourself has changed
62:21 - from you are fully doing programming and
62:24 - teaching programming and now you're kind
62:25 - of more in the business entrepreneurial
62:28 - role so sometimes those things will
62:29 - change it doesn't mean that
62:31 - you stopped loving your first passion
62:33 - but it might kind of change change gear
62:35 - so
62:36 - we're going to wrap that up with that
62:38 - last question so thank you and that
62:39 - question did come from
62:41 - bhutan
62:42 - so
62:43 - um
62:44 - we've had people all over the world
62:45 - actually watching right now so that's
62:47 - been really great um we want to thank
62:49 - jonathan for spending time with us he is
62:52 - in israel at our corporate office so um
62:55 - he's it's quite late for him so i'm sure
62:57 - he's ready to get home and see his
62:59 - family as well
63:00 - so we thank him so much for leading this
63:02 - coding class and taking time out of his
63:04 - stay to spend spend with you all and we
63:06 - also want to thank all of you teachers
63:08 - and those that are following along
63:10 - during the hour of code i think the most
63:12 - important thing to take away from the
63:13 - hour code is just give it a try this
63:16 - week is really meant to be an
63:17 - unintimidating way to try out computer
63:19 - science so we hope that you check out
63:21 - some of the courses that we have
63:23 - and that your students will also find
63:25 - their passion with computer science
63:27 - we also have one more webinar tomorrow
63:29 - with jonathan's brother ido which you
63:31 - can see over his shoulder there
63:34 - so he'll actually be leading a block
63:35 - based coding class tomorrow with you all
63:38 - um about our newest course block jumper
63:40 - we do have an avatar competition so
63:42 - teachers i encourage you to check out
63:44 - social media for that
63:45 - and then we will have a couple of blog
63:47 - posts coming out about different jobs in
63:50 - cs that might surprise you like
63:51 - sportscasters and different things that
63:53 - use computer science that might surprise
63:55 - you
63:56 - um and then also how to launch an hour
63:57 - of code event so again thank you all so
64:00 - much for spending time with us please
64:01 - tag us and all of the things that you're
64:03 - doing for hour of code we love seeing
64:04 - what you're doing and representing us
64:06 - and thank you for welcoming us into your
64:08 - classrooms and until next time remember
64:11 - to write code catch bananas save the
64:13 - world we'll see you guys next time bye

Cleaned transcript:

thank you everyone who is joining us we will go ahead and get started in about five minutes just giving people some time to shuffle in on this tuesday morning so thank you so much and we will see you all very very soon thank you to those that are joining us live on twitter facebook we are very excited to share this event with you so we will see you all in just about five minutes those of you that are just joining us if you have any questions for our founder you can feel free to pop those in the q a box and those of you that are joining us across all social media channels and here with us on zoom if you please just share with us where you're joining us from and what grades you teach for those of you that are just now joining us please share with us where you're joining us from in the chat and we will get started in just a few more minutes just giving everyone a little bit of time to usher in for today's session we are so excited to share this with you and we'll see you guys soon those that are joining us live on our social channels please also share with us where you're joining us from and what grade levels you teach right we will get started in just about one minute here kicking off our 2021 live coding class with our founder all right we are going to go ahead and get started if you haven't done so please tell us where you're joining us from and what grade levels you teach in the chat and we are ready to kick off today's event so first we are today is the 2020 one hour of code webinar series this is part two of really part three in our series for the csed hour of code 2021 so today you are joining us for a live webinar with learning to code with our code monkey founder today we will be meeting the founder in just a few minutes so this is obviously our favorite event of the entire year the csn week and the hour of code we have been part of this event for seven years and the code monkey team wants to thank you so much for joining us with all of your students and teachers who are joining us for the webinar both here on zoom and across the social media channels and those that will be catching us later we know that there are a million choices that you could choose during this hour of code week cs ed week and we thank you that you're taking the time to spend it with us if you're if you're catching this at a later date you're watching the recording later we also want to thank you so much for spending your time with us we are excited to share this year's hour of code and we have some special announcements at the end that we'll share with you as well if you haven't done so already please make sure to follow us on all of our social media channels we are streaming to all of those social media channels today um and be sure to also catch us on linkedin as well during today's webinar you can also tweet at us using the hashtag cmwebinar i mean sorry excuse me cmhoc which is down here in the right hand corner and my team is also here to answer any questions that you may have and if you have any questions for the founder please pop those if you're joining us on zoom in the q a box or anywhere else on in the chat box and we'll save those during our live q a session here at the end so without further ado let's get ready to rate code catch bananas and save the world so we always like to share first just a little bit about our story and kind of how we got started so in 2014 code monkey's cofounder and ceo jonathan shore launched codemonkey after working with students of younger ages and different ability levels and just seeing that they really grasp the concepts of coding much much more when it was presented in a fun and gamified way and so that's how code monkey was born today code monkey is a leading fun and intuitive curriculum where students learn to code in many real programming language from block based to text based to full python and so we really hope that you give us a chance and spend your time coding with us during this hour of code week so to kick things off like to introduce our team that's always an important part of this is so that you can meet us as well my name is lena salle i'm the professional development and sales manager here at code monkey i've been at code monkey for about three years now and i was a former teacher as well so we also have a couple of other panelists joining us today we have boaz and boaz is our coo which is our chief operating officer and he also does all of our marketing for code monkey that means anything you see on social media any blogs the web pages that you see all of those things are done by blaz and his team we also have brett he is our vp of us sales that means that how your teachers are accessing code monkey beyond the hour of code he works with myself and our other team to make sure that everyone is prepared for computer science and then we also have maya she is our customer success manager and a customer success manager make sure that our teachers have success using the platform and so that's what our team does all together for you so without further ado we're going to introduce our founder and ceo of today's event in our superstar and that is jonathan shore so i'm going to let him take over hi everyone can you hear me yep we can hear you great so it's a pleasure uh to be here it's my favorite session of the year um and thank you all for participating um yeah so just very briefly myself um my name is jonathan shaw i'm the cofounder and the ceo of code monkey we started the company efficiently almost eight years ago uh but i've been teaching kids to code um since the year 2001 so that's 20 years from uh it's been 20 years now and i've been coding myself since a very young age i think since i was eight uh i will talk about that in in uh later slides so i've been coding for more than 30 years and teaching kids to code for uh for 20 years um and i'm combining those two passions in code monkey since 2013. and we're very thankful that you have put together this so we're excited to do a q a with jonathan and learn a little bit more about his story and then we're going to kick it off doing a live coding class where you get to learn from him himself so we're really excited about that so let's talk about our outline today so we're going to do an intro just discussing a little bit about code monkey learning a little bit about jonathan he shared a little bit about himself already but we're going to dive just a little bit deeper how code monkey got started and then he's going to leave a coding class with you all i'm walking you through our coding adventure course and then at the end we will save time for q a from you the teachers and students so be sure to save those questions and pop those in the chat box we're really excited for that all right so now it's time to kick off our interview and learn a little bit more about jonathan so jonathan tell us a little bit about so you are the ceo and we know that you cofounded code monkey but can you tell us a little bit about what you do at code monkey um yeah so i'll try to explain um a code well when we started code monkey um like i brought my my software development experience and and and coding education experience to sort of create the vision for code monkey in the product and then with the other cofounder my young brother ital the cto uh we created together the first course which is now called coding adventure we've got and that's also the course that we're gonna use today so that was you know writing the first inspiration and vision and creating the first course the sort of the course that that uh brought us our initial success and fame uh and started the code monkey brand coding adventure uh what i do today uh is quite different as the company grew uh i unfortunately i don't get to spend any time at all coding uh at least not coding uh like part of the product uh the only time i get to code is when i try new courses new code monkey courses then then i i type some codes to go through the courses like like a code monkey student or teacher and also i don't get to participate as much as i used to in creating the courses because now we have pedagogy experts and product managers and developers so um i uh unfortunately well it's not only bad but i i i focus more on the business side today and on management and i'm planning the strategy for code monkey so deciding which markets to focus on what which directions to expand the products to building the team creating partnerships with other education companies around the globe and so on so it sounds like there's quite a lot involved with being um the ceo of a company and i think that obviously jonathan just talked about what does a ceo do so he does the hard part the hard business part of making those hard decisions about how to bring coding to you all and making sure that the courses that we have are aligning and meeting all of your needs so he's a very busy busy he person get to have as much fun coding the product although i will tell you he's always very very excited when we launch new courses and he gets the chance to play them just like you all that's true um so jonathan if you were not so you are an entrepreneur somebody who started your own business um alongside edo which will also be teaching a coding class tomorrow what would what career path would you have followed if you weren't an entrepreneur or if you didn't start code monkey so i actually started code monkey twice i started once in 2007 and failed miserably and then i started again in 2013 so i guess i would repeatedly try until i finally get it done uh but in an alternate universe where i'm not starting code monkey uh i would probably start some other stuff so i started i had other education ventures and business ventures before code monkey uh and between the two attempts the failed attempt and the successful attempt so definitely would be an entrepreneur uh if i couldn't be an entrepreneur then probably i would i would just focus on teaching uh like i would probably continue teaching parttime and working with kids and then uh coding uh for a living um the rest of my time probably sounds like you have quite a passion for not only starting businesses um but also teaching so it makes sense why kukmoki is the product that you went with so um what was it this is not a question that we had originally asked but since he mentioned this um what was it like when you did have a failed attempt at starting code mcgee at the at your first go around um it was very confusing because i knew we had a good product a good idea because i did teach kids to code using that concept that we created for years and i saw that it was working very well but i couldn't find a way to sort of scale like bring that idea to uh as a product to to students beyond the students in my classes uh so it was pretty frustrating confusing to know that you have something good but you don't you can't find a way to sort of get it out there uh but i learned a valuable lesson uh for entrepreneurs um that sometimes you just have to wait uh for the right timing and then you know eight years later it was eight years later or seven years later six years later that coding teaching codings teaching kids to code became sort of a trend because started getting more attention and that was the right timing for to start code monkey and that's where that's when it finally worked sounds like with a little bit of luck on your side and a lot of grit so a lot of hard work that sometimes and failure this is something we learned from our women in stem webinar yesterday that sometimes we just have failure and we have to figure out what to do with that so it sounds like you had a new approach and strategy coming back in from taking a step back exactly um so switching a little bit of gears here so um something that i think is important for students to understand and so when we start to make the transition out of our regular classrooms and start thinking about the future i think it's important for people to see what for you specifically what is something that you look for when you do hire a person to join code monkey or if you had another business venture that's a great question uh and it also ties well to what code monkey does uh the curriculum so really the main qual the main two qualities that uh uh i look i look for uh potential employee our problem solving abilities and sort of being selfsufficient in learning new skills in the current work like rapidly changing uh work environment you cannot afford to hire a person just for their current set of skills because that the the required skills change rapidly if you look at i don't know customer success the tools that we use uh for customer success or the tools that we use for marketing uh even yeah and the tool that we're using obviously for developing the products and and selling it they change so quickly if you hire someone that doesn't have this ability to learn new tools on their own and just find ways to solve challenges uh creatively on their own then they will become very like highly inefficient in in the current environment pretty quickly yeah so it sounds like you have to be adaptable so being able to know that things don't always go the way that they seem they're going to go and then also having those problem solving skill sets which tie really perfectly with learning how to code those same types of skill sets exactly that's great um okay now what was the first programming language that you learned earlier you mentioned that you started learning to code at around the age of eight um so maybe you can share a bit about a bit with us about what first what was the first language that you learned so the language was called uh logo uh logo yeah that's a screenshot so that's a programming language that was developed in uh in mit um i think in the late 70s um was the and that language was developed for the purpose of uh being a gateway language for children for like for teaching kids to code or exposing kid to coding for the first time so it's not a programming language that is used in reward scenarios like for creating real software products it was designed uh teaching kids to code like the first coding language for children as you can see it wasn't that exciting like i mean even when we use future like more modern versions of logo in 2001 when i started teaching kids to code you could mainly use this coding language to create those simple geometry shapes and drawings but you have to remember that back then sort of the the bar for getting people excited from things happening on the screen was much lower we didn't have smartphone we already like people hardly had their own computers with colorful displays so even just drawing a shape like you see on the screen now uh often was enough to get kids excited uh in a coding class obviously today we needed something far more uh engaging it looks very much like a old school paint exactly very exciting nowadays for nowadays students yeah um so which of the code monkey characters is your favorite so that's the turtle uh and the reason for that is uh when using logo in the logo programming language uh sort of the object that you program you code in order to create those drawings on the screen is like uh they call it a turtle in those old computers it didn't look like a turtle just looks like a small triangle but the concept is that you have a turtle with a pen uh attached to to its uh tail and then you code the turtle to move on the screen and then the pen draws like leaves a marker line and that's how you draw those uh shapes so then we thought it would be funny around challenge 10 like level 10 in code monkey i think that's when we introduced the turtle as a surprise and and the instruction says oh my god it's a turtle so that's like sort of a an internal joke funny there's all kinds of things that always have there's little little tidbits of of things sprinkled throughout right that have ties to other things um i would say my favorite character i love the penguin that you meet later on in coding adventure i think he's super cute with or without the bow tie so that's one of my favorites um since we are having an avatar competition where we're having students create their drawings and turning them into code monkey characters do you which avatar do you use so i used the cat the ginger cat because that was my first path we actually found him when he was very little and his eyes were still shot and we needed to let it drink like milk substitute from uh those things that drops a little drops i don't know what you call it in english so yeah that was my first pet was this type of cat so that's why the character was introduced uh no i don't think so at this point yeah i wasn't that involved in the daytoday of uh yeah like choosing the avatars but when i saw that it's an option now that was an easy choice for me makes sense we also learned that sanda also has one of our full stack developers also does cats but that's because she likes to save the world and save cats um okay so now we are going to click kick off doing our live coding lesson and it's going to be led by jonathan which is going to be we're really really excited about um so let's start off with today jonathan is going to be doing coding adventure and we'll talk about that in just a couple minutes but let's just discuss a little bit about what is textbased coding um okay so i'm not sharing my screen yet right so textbased coding so it's funny uh textbased coding it's what uh adults or like in the in the software industry is just called coding uh in the education industry in like computer science education uh for for kids uh you say textbased coding to distinguish uh between this regular classic way of coding and the blockbased method of coding which was introduced also by an mit product in in the 90s called scratch so you have those blocks that are very popular in the recent decades for introducing programmatic thinking to young students so you actually sort of learn the logical elements of coding and you build algorithm programs without typing any any textbased code yourself and i'm code monkey on our first course coding adventure the one that we're going to try today what was different about it is that it was the only course that introduced coding to young learners through textbased coding from the getgo so instead of starting with blockbased coding and then gradually transitioning into text base we came up with all kind of tricks and and technologies that made textbased coding easy enough for kids and we actually think that uh while doing that we've actually created a more engaging uh user experience for children because we think that the fact that they're actually typing codes like like real adult coders from from the getgo actually adds to the excitement um for them and also teaches them sort of a more advanced skill um earlier yeah and i think that a lot of our teachers also express that they like that the students are learning real textbased code from a much younger age it gives them the chance to kind of have that exposure and then also to really get the chance to really understand the concepts i think block based could be a bit tricky to really identify that but here you can see the step by step that's created from that um and so we do use a language which we jonathan talked about is coffeescript and so do you want to talk a bit about coffeescript um i can mention like the brief history so javascript became the uh the most useful programming language sort of by chance it was never designed to be so widely used but since the it was javascript was a language that uh created just for adding some um like capabilities to websites uh what in the beginning websites were just static pictures and texts and links and then javascript came along to add some things there's just very little tasks so when you type in a password or your email address on a website the website can verify that the email address is a valid email address things like that then it became super popular because you had browsers on all devices and then javascript became the only language that is supported by all the devices in the world even mobile phone like smartphones but it's it's it's uh really like javascript is not very user friendly so for the developer it's not an elegant language so coffeescript came to fix that and it created sort of a more uh coder friendly version of javascript when we started codemonkey coffeescript was trending we thought it's a good gateway language because it's very userfriendly it looks almost almost like plain english and it's as useful as javascript because it's coffeescript actually translate to javascript when you run it so uh it was both very useful and very easy to to use and teach and just so anyone's wondering java is also a type of coffee right so java coffee so they kind of go together so if you ever wonder these are real languages so now we're going to dive into what is coding adventure the course that we're going to be using so you can tell us a little bit about what coding adventure is so coding adventure like i said that was our first course i think for two years that was our only course and that was the course introducing textbased coding using coffeescript to children uh through a game where a monkey where you need to program a monkey to collect all the bananas uh on the screen in order to move to the next level so we're gonna get the um bit we're gonna get the chance to do that and so we talked a bit already why coding adventure um was created created so that um students could have a better understanding of the concepts rather than learning in as jonathan discussed javascript which could be quite tricky especially for younger students to code so that is how coding adventure was born and if you notice here on this specific challenge that we have here which we won't go that far into this specific challenge but you'll notice here it looks a little bit like something that we learned about before a little bit like logo where the turtle is kind of dragging here um so just kind of noticing those those subtle hints throughout the platform as well secrets that you probably didn't know before all right so now jonathan is going to take over and he is going to do our lesson on how to code with coding adventure all right so i'll share my screen my browser's window can you see my browser window yep we can see it all right perfect so what i did i just googled uh code monkey hour of code uh and then it has us like multiple results because we have different hour of code courses and each our code course is actually sort of a sample of the full course that we have a sample that is free uh where you don't even need to log in in order to start playing it you don't even need to create a free account a trial account you can just click start playing and that's what i'm going to do now so i'm clicking start playing and i'm going to start the coding adventure on the code course so oh no we must get our bananas back press run to get the monkey moving so that's a little short instruction that we get beginning of each level each challenge so i'm gonna press run and see what happens that was easy so there was only one banana we got it so we solved the challenge we're moving to the next one so those first levels are just introducing the platform uh this is why we didn't have to type any code the code was already there we're just introduced to the concept of clicking around and then seeing the monkey executing the the code now can you fix the code on the right it should make the monkey catch the banana so now it's a bit more complex and before jonah jonathan start yeah turn that down a little bit we love those sounds but it's hard when we're sharing that with her with others so background sounds off okay so let's see now um so we have step 10 here is the initial code and if i'm going to click run let's see what happens before i start changing the code i first i always like to run it as is first to see what the problem is if there is a problem let's see so i'm clicking run the monkey takes 10 steps and it's not enough so i'm getting a hint use step 15 instead of step 10 so let's try that keep trying so the keyboard animation here is a hint to what i need to change so i'm going to delete 0 and type 5 instead i have now step 15 on my line of code instead of tap 10 step 10 i'm clicking run now the monkey goes all the way to the banana that was pretty good now let's learn some new tricks next challenge you can use the ruler to measure distances so again the first few challenges are really just teaching us how to use the code the the sort of the mechanics of coding adventure the different tools we're not getting into any real coding concepts yeah so the ruler here is a very useful tool i pick it up i click on the monkey i click on the banana it tells me the distance between the monkey and the banana step 12. i hope i did that right so now i'm gonna delete 0 and type 12 and let's see if that was accurate no that was not enough let's see i didn't do it right i'll remeasure click the monkey click the banana oh it's 20. okay so i'm going to change 12. delete it type 20 instead hit the run button again monkey monkey's executing the line of codes to the next challenge okay so now we're learning about turing you can make the monkey turn to the banana by using turn left or return right so we're learning a new command a new function uh and also we're gonna write our first program that is longer than one line so we have two lines here turn left and step 12. like i usually do i'm going to click the run button before trying to edit the code see what happens if i just run it as is if the monkey turned the wrong way i'm getting a hint you just turn right instead of turn left so why do you run why do you run the program before even though the tip told us to step right or turn right why did you d why did you run the program first so um call that i guess debugging that's a very important concept in coding um like most of the time coders they don't write new code they actually spend most of their time fixing or improving uh or adding capabilities to existing programs um so you most of the time you have to deal with existing code and for me and for many other developers the best way to do that is to first run the code that you have that was written by other people or was reading by you in the past and now you have to revisit it so first you run what you have to see what happens uh for me that's the easiest way of sort of understanding uh the situation what needs to be changed or fixed um so like we did here i realized we need to change turn left to turn right and i don't have to type right uh letter by letter you see i have those buttons uh uh on the bottom end of the screen so that was one way for us to make uh textbased coding easier so you don't have to actually type the text letter by letter often you can just use those buttons and he types the the commands and arguments for you turn right step 12. i'm gonna click the run button first code that's longer than one line great okay it calls me to sign up because i use this as a guest i'm gonna skip this because i already have multiple code monkey accounts but when you're using this with your classroom as a teacher i really encourage you to click the sign up button it's going to allow you to set up a classroom classroom for free a student that way your students their work is stored on our servers and they can pick up from where they left the next time or from home or if you do another coding lesson they don't have to start over and it's free uh and the teacher can also keep track of students work and progress through the teacher dashboard uh once you sign up for free code monkey teacher account i already have that like i said i'm gonna just skip this and continue coding as a guest what happened okay click on the button below to enter code oh so here i'm being introduced to what i just told you in the previous challenge and how you can use those buttons instead of typing so in this challenge i have to not just fix the existing lines of code i have to add my own line so it has turned left which is correct but i need to make the monkey also step towards the banana after it turned towards the banana instead of typing letter by letter i'm just going to click step and i'm going to click i'm going to type 12 the numbers you do have to type by yourself so i type 12 let's see what happens if you make a mistake um with the spelling is it does it make a difference if i had a capital t instead of a lowercase t so definitely and that's a frustrating part about textbased coding that you have to be very accurate even a small spelling mistake or even like you said just using a capital t letter instead of a lowercase letter let's see let's try to change this to step with a capital s so that's gonna make that's gonna break the the program let's try and run it yeah fixed line two i don't know what step is so that's uh thing about computers you have to be very accurate with them uh like human being can sort of uh understand from context even if you have a typo or if you use uh you don't use the correct word but with code and with talking to computers you really have you gotta have zero mistakes you gotta be very accurate uh even to the point of not using capital letters that's something that you see common or that programmers will see common when they're doing like sprints which is a really long run of creating something to get some product piece or something program that they'll have errors right the syntax is always the trickiest part you spend long time coding and then it's pretty difficult right to find those syntax errors exactly and and uh some of the technology we created in codemonkey was around making those error messages more clear because what you see here like you type step maybe you meant step like those type of thing like when you do on a google search where you're searching for something and you had a typo and google is suggesting the right term so like real coding environments they don't do that they just tell you something is wrong um something is wrong on line 12 and you have to figure it out on yourself and on code monkey uh we put a lot of effort uh when creating when building the platform so that the error messages will be uh more clear more coder friendly okay so we we made it all the way to challenge what is this one is this challenge um 10. challenge five five okay so now we're solving a real problem uh we need to get to the bananas but we have this line of bushes this fence uh blocking the way and we have to walk around it so i think like this is the first taste of what it means to sort of build an algorithm uh so like we said we need to be very accurate and ex you know so with computers with code you also need to be very explicit you can't just tell the computer just go around the bushes you have to use very simple welldefined uh instruction and create a set of those instructions sort of like creating a recipe uh it needs to be 100 like uh welldefined so the computers knows exactly what to do uh so we need to break down uh our plan of walking around the bushes into small uh small pieces uh the computer can understand so we have the beginning typed in for us so the first thing we need to do is to turn left so that we don't face the bushes we want to walk like around from from the left side so turn left step five will not get us far enough let's use the ruler if you want to get all the way sort of above the bushes you need to be i mean the rulers try this again you'll notice you just have to click on the top of the monkey's head and you have to drag it if you don't and you won't get as accurate as a read exactly so i need to take 15 steps all right so let's do this step 15. let's see what happens so far and what do you guys think after he runs step 15 what do you think is the next thing that we should do and there's our heat there is a that helps us okay so while you guys think about that we're going to continue solving this together so that that hint told us that we need to turn right after exactly yeah so i'm clicking the turn button instead of typing turn and a space and then i'm clicking right then i already measured this so i know that this path here is also 15 steps i think step and type in 1 5 15 and i'm gonna click the run button all right and i got three stars maybe now it's a good time the next challenge to explain what is what is the meaning of the stars uh the star score um okay we're going to have to start from scratch here i trust you young coder okay so i have to go all the way to the banana here and obviously i can't just do step 20 or wherever the distance is because the monk is gonna the monkey can't swim so i need to go around and use the breach um but i also noticed that this one didn't have any code in it before why is this one why is this one different right so this is uh something important to to mention mainly for the teachers so we call those challenges assessment challenges uh once in every few challenges uh we put in what we call an assessment challenge and this the purpose of the challenge challenge is sort of to summarize everything that you've learned in the previous challenges and combine all of the new skills and knowledge into what a solution of a single challenge and the purpose is not only to recap it's also to assess whether you actually learned uh what you were supposed to learn in the previous challenge and and you know you really understand it and you know how to to use uh what you've learned so we start with a blank document of code to in order to really make sure that you're not just sort of running and debugging fixing and somehow getting it sold you're really creating the solution from scratch when you're using the teacher dashboard those assessment challenges are highlighted so you can if you want to make sure that the student really learned uh what they were supposed to learn you can sort of just look at the score that they got for the assessment challenges um so here um let's see to go around um distance here is like five i think let's try this the other one is 20. so let's do this i'm gonna turn left step whoa okay step um five i don't know why it created all those blank lines i had a cat stepping on my keyboard um try that orange ginger cat yeah well it can't be that specific one that one passed away um so turn right let's try to walk all the way to the bridge and turn right i'm going to step to the bridge 10 steps and i'm going to step again from the bridge to the other side of the river and i'm going to turn right towards the banana okay this is an example of a spelling mistake so i'm going to try this one i have step five on the last line i didn't even get there because okay i didn't delete the step 20 it just fell in the water okay so i'm going to delete the line from my previous false solution i'm going to start by turning left before taking any steps um i'm going to fix this because i want to show something different now and last step step to the bridge step down from the bridge it went too far okay it went like too far past the banana so let's try and do this step eight okay but i only got two stars for this solution and it's telling you so with six lines or fewer to get the third star so the thing about writing code usually uh it's not enough to write a piece of code that does what you needed to do in this case get the banana get the monkey the banana uh you usually expected also to solve the solution in the most elegant way possible in our case the most elegant way usually simply means with the fewer lines of code as possible so i use seven lines of code in order to get to the banana here and it's telling me that there is a way to solve this with just six lines six lines of code and if i'll find that solution i'll get the third star so anyone has an idea how do i how do i get rid of one line or how can i combine two lines from my solution into just one line of code you guys can put that in the chat box for us while we're while we're working through this together so do what would be a way that we could change this to make this a more to get a three star oh someone says change it to step 18 instead of step 10 and step 8 accurate that is accurate right so i don't need even though i'm stepping onto the bridge and then stepping down from the bridge i can actually do both those i can achieve both those um like sub goals uh with just one line of code by combining 10 and 8 into step 18 10 plus 8 in one in one line so let's see all right now i got that third star okay and now we're gonna leave some time for q a so i know we only got through a few challenges but i hope you guys um learned a little bit from um jonathan a really quick though before we oh you already stopped sharing oh sorry should i put it back on yeah we can put it back on i want to ask a question really quick sure screen while you guys were we were working through these challenges and learning some things jonathan talked about syntaxing making sure we have the right spelling but one thing we didn't discuss is what is the difference between turn and step so we notice that there's like a difference but what are those so we see that they are step and turn but what exactly are those things what do they mean between step and turn are they commands are they are they functions well what are those yeah so actually it's a good question there's a lot of confusion around around the terminology and the reason is that in different programming languages they use different terms for that in coffeescript which is actually a version of javascript we we actually don't call those uh elements commands we call them function because coffeescript is the functional languages so everything is a function and functions always take arguments uh like in math um um usually like always actually commands they always take like input we call the input arguments or parameters so for step for the step function the the argument or the parameter would be a number simply deciding the number of steps that you want to be taken for turning it doesn't have to be a number this challenge introduces also the option of putting in a number as an as an argument for the turn function function which would be the number of degrees to turn what we've done so far we use special arguments um in the form of left and right so those are just sort of like constants or sort of abbreviations for specific numbers so left really just means 90 and right means negative 90. and that it's so you would get the same result for typing turn 90 or or for typing turn left but it would just make the code more elegant and more easy to write and more easy to read that's very important but like i said coder spent a lot of time reading other coders code so when it says turn left it's it's much easier to understand what the program means then if it said turn 90. makes a lot of sense okay now you can yeah all right okay so now we are going to take some questions from our audience and so if you have any questions go ahead and pop those into the chat box or into the q a and that's including anyone who's joining us on any of the other social channels so a couple questions that we did have is um what um hold on i just thought i just lost this is um what are the future plans of code monkey um that's a great question um so um in terms of expanding the product we are um adding uh planning to add more coding courses for middle schools we feel like that we have uh more for elementary schools than we have for middle schools and we wanna balance that out a little bit so more more more coding courses for middle school probably the next coding courses and uh we're planning also on adding computer science courses that are not coding courses so if you look at the computer science curriculum that is being gradually adopted around the world in the united states but in other countries as well computer science is not only about coding um it's about other kind of digital skills and even soft skills like problem solving collaboration um digital literacy online safety uh just understanding how computers work and the word works in the internet so we're planning to add courses around those topics as well great um this question says how will codemonkey help in building ourselves how will codemonkey help in building ourselves like as personalities oh that's that's uh that's that's an excellent question um so it's it's the same as how how coding helps uh and and you see that in many things like for example like when you when you have your kids on a i don't know sucker uh you put it on a soccer soccer class or like football or baseball you don't necessarily aim for your for for the for the child to become a professional athlete um but you it's obvious that they're picking up many skills and personal qualities along the way that are transferable to other things like persisting collaborating being creative uh not giving up and and and solving problems creatively and consistently so i think those are just examples of the kind of qual personal qualities uh and traits that that you can enhance while learning and practicing coding which i think are really great skill sets that transfer exactly what you're saying beyond just life of being a programmer so i think that those are important skills that can really transfer to anything like being an athlete or um anything at all um one question that we had here is um if you could how can you encourage students of a young age to get into programming or teachers to try it yeah so my personal belief on that i'm getting anyone to do anything not just students or teachers also employees or partners or friends family members is really searching for their sort of inner natural motivations and then tying into that so i don't know if you have a kid that likes to play computer games uh i would try to work from there like saying how would you like to try and create your own computer game or modify a computer game that you enjoy playing on your phone uh and if the if the child is excited about that idea then you go into okay do you know how computers games are designed and modified that that is done through code how would you like to learn to code and eventually if you do well enough you'll be able to create your own games or modify games that you that you already play um another question i really like the tip of modifying too because i think students will have to recognize other someone else's code and try to interpret their code to make it their own so i think that what you were mentioning earlier is programmers don't necessarily always create the code from scratch but oftentimes they're modifying other people's code so i think that's a good tip as well another question that um students had is do you have any thoughts on how students can become entrepreneurs at a young age do you have any tips um yeah i think um it's uh it's a good question um hard question like yeah i think role models uh are 95 percent of any educational uh experience so if they have uh people in their environment that they that serve as a positive role model for them and they aspire to be a little bit like them and if those people have entrepreneurial sort of mindset or um yeah way of living um then that's the best way and a teacher is can often be very entrepreneurial if they come up let's say with their own initiative for teaching staff that are not in in the mandatory curriculum or teaching in different methods or initiating some activities in the school uh so yeah the best way i think is to to set a personal example i think that's great or finding mentors i think mentors are really important and i know there's a lot of um there's even right now like a lot of communities for students to have mentorship and i would encourage both teachers and students to seek those opportunities because lots of people like us in the industry want to give back that's what we we do we're passionate about helping teachers and helping students and i think that if you can find that it's a good one so another our last question since we're we're out of time here is how has coding helped change your life um wow these are tough questions aren't they i owe a lot to coding um but i don't know if i'll go back um back to the early years of coding for myself um it was just a good way for me to find friends that were sort of on a similar mindset as i am because i wasn't like i was a bit quiet a bit shy as a child uh in elementary school uh and once i got into this world of coding it was a great way to find like sort of likeminded uh friends i guess my first friend one of them was also a cofounder of code monkey we've actually been coding together since 4th grade or something like that so it was really for me just sort of finding my sort of place in in in society i guess and finding friends and finding them also finding my career path i think that's i think that's important i think it's finding something that you're passionate about is important and and it's okay if your passions change over time and and it sounds like even your transition yourself has changed from you are fully doing programming and teaching programming and now you're kind of more in the business entrepreneurial role so sometimes those things will change it doesn't mean that you stopped loving your first passion but it might kind of change change gear so we're going to wrap that up with that last question so thank you and that question did come from bhutan so um we've had people all over the world actually watching right now so that's been really great um we want to thank jonathan for spending time with us he is in israel at our corporate office so um he's it's quite late for him so i'm sure he's ready to get home and see his family as well so we thank him so much for leading this coding class and taking time out of his stay to spend spend with you all and we also want to thank all of you teachers and those that are following along during the hour of code i think the most important thing to take away from the hour code is just give it a try this week is really meant to be an unintimidating way to try out computer science so we hope that you check out some of the courses that we have and that your students will also find their passion with computer science we also have one more webinar tomorrow with jonathan's brother ido which you can see over his shoulder there so he'll actually be leading a block based coding class tomorrow with you all um about our newest course block jumper we do have an avatar competition so teachers i encourage you to check out social media for that and then we will have a couple of blog posts coming out about different jobs in cs that might surprise you like sportscasters and different things that use computer science that might surprise you um and then also how to launch an hour of code event so again thank you all so much for spending time with us please tag us and all of the things that you're doing for hour of code we love seeing what you're doing and representing us and thank you for welcoming us into your classrooms and until next time remember to write code catch bananas save the world we'll see you guys next time bye
